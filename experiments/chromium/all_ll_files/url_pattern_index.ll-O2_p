; ModuleID = '../../components/url_pattern_index/url_pattern_index.cc'
source_filename = "../../components/url_pattern_index/url_pattern_index.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.base::NoDestructor" = type { [24 x i8] }
%"struct.std::__1::pair.95" = type { i32, i32 }
%"struct.std::nothrow_t" = type { i8 }
%"class.base::NoDestructor.125" = type { [24 x i8] }
%"struct.std::__1::pair.118" = type { i32, i32 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.url_pattern_index::UrlPatternIndexBuilder" = type { %"class.url_pattern_index::ClosedHashMap", %"class.std::__1::vector.41", %"class.flatbuffers::FlatBufferBuilder"* }
%"class.url_pattern_index::ClosedHashMap" = type <{ %"class.std::__1::vector.32", %"class.std::__1::vector.39", %"class.url_pattern_index::SimpleQuadraticProber", [7 x i8] }>
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { i32*, i32*, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i32* }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.48" }
%"struct.std::__1::pair" = type { i64, %"class.std::__1::vector.41" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::pair"* }
%"class.url_pattern_index::SimpleQuadraticProber" = type { %"class.url_pattern_index::Uint64ToUint32Hasher" }
%"class.url_pattern_index::Uint64ToUint32Hasher" = type { i8 }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"*, %"class.std::__1::__compressed_pair.43" }
%"struct.flatbuffers::Offset.1" = type { i32 }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.flatbuffers::Offset.1"* }
%"class.flatbuffers::FlatBufferBuilder" = type { %"class.flatbuffers::vector_downward", i32, i16, i8, i8, i64, i8, i8, %"class.std::__1::set"* }
%"class.flatbuffers::vector_downward" = type { %"class.flatbuffers::Allocator"*, i8, i64, i64, i64, i8*, i8*, i8* }
%"class.flatbuffers::Allocator" = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23", %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.flatbuffers::FlatBufferBuilder::StringOffsetCompare" }
%"struct.flatbuffers::FlatBufferBuilder::StringOffsetCompare" = type { %"class.flatbuffers::vector_downward"* }
%"class.url_pattern_index::UrlPatternIndexMatcher" = type { %"struct.url_pattern_index::flat::UrlPatternIndex"*, %"class.absl::optional.71" }
%"class.absl::optional.71" = type { %"class.absl::optional_internal::optional_data.72" }
%"class.absl::optional_internal::optional_data.72" = type { %"class.absl::optional_internal::optional_data_base.73" }
%"class.absl::optional_internal::optional_data_base.73" = type { %"class.absl::optional_internal::optional_data_dtor_base.74" }
%"class.absl::optional_internal::optional_data_dtor_base.74" = type { i8, %union.anon.75 }
%union.anon.75 = type { i64 }
%"struct.url_pattern_index::flat::UrlPatternIndex" = type { %"class.flatbuffers::Table" }
%"class.flatbuffers::Table" = type { [1 x i8] }
%"struct.url_pattern_index::OffsetVectorCompare" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"*, %"class.std::__1::__compressed_pair" }
%"struct.flatbuffers::Offset" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.flatbuffers::Offset"* }
%"class.url_pattern_index::proto::UrlRule" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField", %"struct.google::protobuf::internal::ArenaStringPtr", i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.7", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree.25" }
%"class.std::__1::__tree.25" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.93" }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"struct.std::__1::pair.95"*, %"struct.std::__1::pair.95"*, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::pair.95"* }
%"class.base::internal::flat_tree.115" = type { %"class.std::__1::vector.116" }
%"class.std::__1::vector.116" = type { %"class.std::__1::__vector_base.117" }
%"class.std::__1::__vector_base.117" = type { %"struct.std::__1::pair.118"*, %"struct.std::__1::pair.118"*, %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.std::__1::pair.118"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.url_pattern_index::proto::DomainListItem" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"struct.google::protobuf::internal::ArenaStringPtr", i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.url_pattern_index::flat::UrlRule" = type { %"class.flatbuffers::Table" }
%"struct.flatbuffers::String" = type { %"class.flatbuffers::Vector" }
%"class.flatbuffers::Vector" = type { i32 }
%class.anon.63 = type { %"class.url_pattern_index::UrlPatternIndexBuilder"* }
%"struct.url_pattern_index::flat::NGramToRulesBuilder" = type <{ %"class.flatbuffers::FlatBufferBuilder"*, i32, [4 x i8] }>
%"struct.flatbuffers::Offset.56" = type { i32 }
%"struct.url_pattern_index::flat::UrlPatternIndexBuilder" = type <{ %"class.flatbuffers::FlatBufferBuilder"*, i32, [4 x i8] }>
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.68 }
%union.anon.68 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.flatbuffers::Vector.69" = type { i32 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.flatbuffers::Vector.70" = type { i32 }
%"class.flatbuffers::Vector.76" = type { i32 }
%"class.flatbuffers::Vector.77" = type { i32 }
%"struct.url_pattern_index::flat::NGramToRules" = type { %"class.flatbuffers::Table" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %class.GURL* }
%"class.url_pattern_index::UrlPattern::UrlInfo" = type { %"class.base::BasicStringPiece", %"class.std::__1::basic_string", %"class.absl::optional.81", %"struct.url::Component" }
%"class.absl::optional.81" = type { %"class.absl::optional_internal::optional_data.82" }
%"class.absl::optional_internal::optional_data.82" = type { %"class.absl::optional_internal::optional_data_base.83" }
%"class.absl::optional_internal::optional_data_base.83" = type { %"class.absl::optional_internal::optional_data_dtor_base.84" }
%"class.absl::optional_internal::optional_data_dtor_base.84" = type { i8, %union.anon.85 }
%union.anon.85 = type { %"class.base::BasicStringPiece" }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"struct.url_pattern_index::flat::UrlRule"**, %"struct.url_pattern_index::flat::UrlRule"**, %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.url_pattern_index::flat::UrlRule"** }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.196", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.198", i64, i64 }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.209" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.base::internal::flat_tree<url_pattern_index::proto::ElementType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType> > > >::value_compare" = type { i8 }
%"struct.base::internal::flat_tree<url_pattern_index::proto::ActivationType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType> > > >::value_compare" = type { i8 }
%class.anon.152 = type { %"class.flatbuffers::FlatBufferBuilder"** }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::vector"* }
%"class.std::__1::tuple.160" = type { i8 }
%"class.std::__1::__tree_node.157" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.155" }
%"struct.std::__1::pair.155" = type <{ %"class.std::__1::vector", %"struct.flatbuffers::Offset.138", [4 x i8] }>
%"struct.flatbuffers::Offset.138" = type { i32 }
%"struct.url_pattern_index::flat::UrlRuleBuilder" = type <{ %"class.flatbuffers::FlatBufferBuilder"*, i32, [4 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.flatbuffers::Offset" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.url_pattern_index::UrlPattern" = type <{ i32, [4 x i8], %"class.base::BasicStringPiece", i32, i32, i32, [4 x i8] }>

$_ZN17url_pattern_index13ClosedHashMapImNSt3__16vectorIN11flatbuffers6OffsetINS_4flat7UrlRuleEEENS1_9allocatorIS7_EEEENS_21SimpleQuadraticProberImNS_20Uint64ToUint32HasherEEEEixERKm = comdat any

$_ZN17url_pattern_index4flat21CreateUrlPatternIndexERN11flatbuffers17FlatBufferBuilderEjNS1_6OffsetINS1_6VectorINS4_INS0_12NGramToRulesEEEEEEES7_NS4_INS5_INS4_INS0_7UrlRuleEEEEEEE = comdat any

$_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_ = comdat any

$_ZN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS0_8GetFirstENSt3__14lessIvEENS6_6vectorINS6_4pairIS4_NS2_4flat11ElementTypeEEENS6_9allocatorISD_EEEEE15sort_and_uniqueENS6_11__wrap_iterIPSD_EESK_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat11ElementTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat11ElementTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat11ElementTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_SO_T_NS_15iterator_traitsISO_E15difference_typeESS_PNSR_10value_typeEl = comdat any

$_ZN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS0_8GetFirstENSt3__14lessIvEENS6_6vectorINS6_4pairIS4_NS2_4flat14ActivationTypeEEENS6_9allocatorISD_EEEEE15sort_and_uniqueENS6_11__wrap_iterIPSD_EESK_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat14ActivationTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat14ActivationTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat14ActivationTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_SO_T_NS_15iterator_traitsISO_E15difference_typeESS_PNSR_10value_typeEl = comdat any

$_ZN17url_pattern_index4flat13CreateUrlRuleERN11flatbuffers17FlatBufferBuilderEhtthNS0_14UrlPatternTypeENS0_10AnchorTypeES5_NS1_6OffsetINS1_6VectorINS6_INS1_6StringEEEEEEESB_S9_jmNS6_INS7_IhEEEE = comdat any

$_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm = comdat any

$_ZN11flatbuffers17FlatBufferBuilder12CreateStringEPKcm = comdat any

$_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_ = comdat any

$_ZN11flatbuffers15vector_downward10reallocateEm = comdat any

$_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN11flatbuffers17FlatBufferBuilder11StartVectorEmm = comdat any

$_ZN11flatbuffers17FlatBufferBuilder11PushElementINS_6StringEEEjNS_6OffsetIT_EE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN11flatbuffers6OffsetINS3_6StringEEENS_9allocatorIS6_EEEENS4_INS3_6VectorIS6_EEEEEENS_19__map_value_compareIS9_SD_N17url_pattern_index19OffsetVectorCompareELb1EEENS7_ISD_EEE25__emplace_unique_key_argsIS9_JRKNS_21piecewise_construct_tENS_5tupleIJRKS9_EEENSO_IJEEEEEENS_4pairINS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZN17url_pattern_index4flat14UrlRuleBuilder23add_embedder_conditionsEN11flatbuffers6OffsetINS2_6VectorIhEEEE = comdat any

$_ZN17url_pattern_index4flat14UrlRuleBuilder15add_url_patternEN11flatbuffers6OffsetINS2_6StringEEE = comdat any

$_ZN17url_pattern_index4flat14UrlRuleBuilder20add_domains_excludedEN11flatbuffers6OffsetINS2_6VectorINS3_INS2_6StringEEEEEEE = comdat any

$_ZN17url_pattern_index4flat14UrlRuleBuilder20add_domains_includedEN11flatbuffers6OffsetINS2_6VectorINS3_INS2_6StringEEEEEEE = comdat any

$_ZN11flatbuffers17FlatBufferBuilder10AddElementImEEvtT_S2_ = comdat any

$_ZN11flatbuffers17FlatBufferBuilder10AddElementItEEvtT_S2_ = comdat any

$_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_ = comdat any

$_ZN11flatbuffers17FlatBufferBuilder8EndTableEj = comdat any

$_ZN17url_pattern_index4flat19NGramToRulesBuilder13add_rule_listEN11flatbuffers6OffsetINS2_6VectorINS3_INS0_7UrlRuleEEEEEEE = comdat any

$_ZN17url_pattern_index4flat22UrlPatternIndexBuilder18add_fallback_rulesEN11flatbuffers6OffsetINS2_6VectorINS3_INS0_7UrlRuleEEEEEEE = comdat any

$_ZN17url_pattern_index4flat22UrlPatternIndexBuilder26add_ngram_index_empty_slotEN11flatbuffers6OffsetINS0_12NGramToRulesEEE = comdat any

$_ZN17url_pattern_index4flat22UrlPatternIndexBuilder15add_ngram_indexEN11flatbuffers6OffsetINS2_6VectorINS3_INS0_12NGramToRulesEEEEEEE = comdat any

$_ZN11flatbuffers17FlatBufferBuilder11PushElementIN17url_pattern_index4flat7UrlRuleEEEjNS_6OffsetIT_EE = comdat any

$_ZN11flatbuffers17FlatBufferBuilder11PushElementIN17url_pattern_index4flat12NGramToRulesEEEjNS_6OffsetIT_EE = comdat any

$_ZN17url_pattern_index13ClosedHashMapImNSt3__16vectorIN11flatbuffers6OffsetINS_4flat7UrlRuleEEENS1_9allocatorIS7_EEEENS_21SimpleQuadraticProberImNS_20Uint64ToUint32HasherEEEE25CalculateHashTableSizeForEj = comdat any

$_ZNSt3__16vectorINS_4pairImNS0_IN11flatbuffers6OffsetIN17url_pattern_index4flat7UrlRuleEEENS_9allocatorIS7_EEEEEENS8_ISB_EEE7reserveEm = comdat any

$_ZN17url_pattern_index13ClosedHashMapImNSt3__16vectorIN11flatbuffers6OffsetINS_4flat7UrlRuleEEENS1_9allocatorIS7_EEEENS_21SimpleQuadraticProberImNS_20Uint64ToUint32HasherEEEE15EmplaceKeyValueEjmSA_ = comdat any

$_ZN17url_pattern_index13ClosedHashMapImNSt3__16vectorIN11flatbuffers6OffsetINS_4flat7UrlRuleEEENS1_9allocatorIS7_EEEENS_21SimpleQuadraticProberImNS_20Uint64ToUint32HasherEEEE6RehashEj = comdat any

$_ZNSt3__16vectorINS_4pairImNS0_IN11flatbuffers6OffsetIN17url_pattern_index4flat7UrlRuleEEENS_9allocatorIS7_EEEEEENS8_ISB_EEE24__emplace_back_slow_pathIJmSA_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignEmRKj = comdat any

$_ZZN11flatbuffers4dataINS_6OffsetINS_6StringEEENSt3__19allocatorIS3_EEEEPKT_RKNS4_6vectorIS7_T0_EEE1t = comdat any

$_ZZN11flatbuffers4dataINS_6OffsetIN17url_pattern_index4flat7UrlRuleEEENSt3__19allocatorIS5_EEEEPKT_RKNS6_6vectorIS9_T0_EEE1t = comdat any

$_ZZN11flatbuffers4dataINS_6OffsetIN17url_pattern_index4flat12NGramToRulesEEENSt3__19allocatorIS5_EEEEPKT_RKNS6_6vectorIS9_T0_EEE1t = comdat any

@.str = private unnamed_addr constant [19 x i8] c"FlatBuffers 1.12.0\00", align 1
@_ZN11flatbuffers25flatbuffer_version_stringE = weak hidden local_unnamed_addr global i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), align 8
@_ZN3url12kMaxURLCharsE = external local_unnamed_addr constant i64, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.1 = private unnamed_addr constant [34 x i8] c"UrlPatternIndexMatcher::FindMatch\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"pattern\00", align 1
@_ZZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map = internal global i64 0, align 8
@.ref.tmp = private unnamed_addr constant [14 x %"struct.std::__1::pair.95"] [%"struct.std::__1::pair.95" zeroinitializer, %"struct.std::__1::pair.95" { i32 1, i32 1 }, %"struct.std::__1::pair.95" { i32 2, i32 2 }, %"struct.std::__1::pair.95" { i32 4, i32 4 }, %"struct.std::__1::pair.95" { i32 8, i32 8 }, %"struct.std::__1::pair.95" { i32 16, i32 16 }, %"struct.std::__1::pair.95" { i32 32, i32 32 }, %"struct.std::__1::pair.95" { i32 64, i32 64 }, %"struct.std::__1::pair.95" { i32 128, i32 128 }, %"struct.std::__1::pair.95" { i32 256, i32 256 }, %"struct.std::__1::pair.95" { i32 512, i32 512 }, %"struct.std::__1::pair.95" { i32 1024, i32 1024 }, %"struct.std::__1::pair.95" { i32 2048, i32 0 }, %"struct.std::__1::pair.95" { i32 4096, i32 2048 }], align 4
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@_ZZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map = internal global %"class.base::NoDestructor.125" zeroinitializer, align 8
@_ZGVZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map = internal global i64 0, align 8
@.ref.tmp.4 = private unnamed_addr constant [5 x %"struct.std::__1::pair.118"] [%"struct.std::__1::pair.118" zeroinitializer, %"struct.std::__1::pair.118" { i32 1, i32 1 }, %"struct.std::__1::pair.118" { i32 2, i32 0 }, %"struct.std::__1::pair.118" { i32 4, i32 0 }, %"struct.std::__1::pair.118" { i32 8, i32 2 }], align 4
@_ZZN11flatbuffers4dataINS_6OffsetINS_6StringEEENSt3__19allocatorIS3_EEEEPKT_RKNS4_6vectorIS7_T0_EEE1t = linkonce_odr hidden local_unnamed_addr global i8 0, comdat, align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZZN11flatbuffers4dataINS_6OffsetIN17url_pattern_index4flat7UrlRuleEEENSt3__19allocatorIS5_EEEEPKT_RKNS6_6vectorIS9_T0_EEE1t = linkonce_odr hidden local_unnamed_addr global i8 0, comdat, align 1
@_ZZN11flatbuffers4dataINS_6OffsetIN17url_pattern_index4flat12NGramToRulesEEENSt3__19allocatorIS5_EEEEPKT_RKNS6_6vectorIS9_T0_EEE1t = linkonce_odr hidden local_unnamed_addr global i8 0, comdat, align 1
@.str.9 = private unnamed_addr constant [53 x i8] c"power_of_two < std::numeric_limits<uint32_t>::digits\00", align 1
@.str.10 = private unnamed_addr constant [53 x i8] c"../../components/url_pattern_index/closed_hash_map.h\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"entry_index < EmptySlot()\00", align 1

@_ZN17url_pattern_index22UrlPatternIndexBuilderC1EPN11flatbuffers17FlatBufferBuilderE = hidden unnamed_addr alias void (%"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.flatbuffers::FlatBufferBuilder"*), void (%"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.flatbuffers::FlatBufferBuilder"*)* @_ZN17url_pattern_index22UrlPatternIndexBuilderC2EPN11flatbuffers17FlatBufferBuilderE
@_ZN17url_pattern_index22UrlPatternIndexBuilderD1Ev = hidden unnamed_addr alias void (%"class.url_pattern_index::UrlPatternIndexBuilder"*), void (%"class.url_pattern_index::UrlPatternIndexBuilder"*)* @_ZN17url_pattern_index22UrlPatternIndexBuilderD2Ev
@_ZN17url_pattern_index22UrlPatternIndexMatcherC1EPKNS_4flat15UrlPatternIndexE = hidden unnamed_addr alias void (%"class.url_pattern_index::UrlPatternIndexMatcher"*, %"struct.url_pattern_index::flat::UrlPatternIndex"*), void (%"class.url_pattern_index::UrlPatternIndexMatcher"*, %"struct.url_pattern_index::flat::UrlPatternIndex"*)* @_ZN17url_pattern_index22UrlPatternIndexMatcherC2EPKNS_4flat15UrlPatternIndexE
@_ZN17url_pattern_index22UrlPatternIndexMatcherD1Ev = hidden unnamed_addr alias void (%"class.url_pattern_index::UrlPatternIndexMatcher"*), void (%"class.url_pattern_index::UrlPatternIndexMatcher"*)* @_ZN17url_pattern_index22UrlPatternIndexMatcherD2Ev
@_ZN17url_pattern_index22UrlPatternIndexMatcherC1EOS0_ = hidden unnamed_addr alias void (%"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"*), void (%"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"*)* @_ZN17url_pattern_index22UrlPatternIndexMatcherC2EOS0_

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK17url_pattern_index19OffsetVectorCompareclERKNSt3__16vectorIN11flatbuffers6OffsetINS3_6StringEEENS1_9allocatorIS6_EEEESB_(%"struct.url_pattern_index::OffsetVectorCompare"* nocapture readnone, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %5 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %7 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %9 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %8, align 8
  %10 = icmp eq %"struct.flatbuffers::Offset"* %7, %9
  br i1 %10, label %30, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %13 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %12, align 8
  br label %14

14:                                               ; preds = %11, %26
  %15 = phi %"struct.flatbuffers::Offset"* [ %27, %26 ], [ %13, %11 ]
  %16 = phi %"struct.flatbuffers::Offset"* [ %28, %26 ], [ %7, %11 ]
  %17 = icmp eq %"struct.flatbuffers::Offset"* %15, %5
  br i1 %17, label %30, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %15, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %16, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp ult i32 %20, %22
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = icmp ult i32 %22, %20
  br i1 %25, label %30, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %15, i64 1
  %28 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %16, i64 1
  %29 = icmp eq %"struct.flatbuffers::Offset"* %28, %9
  br i1 %29, label %30, label %14

30:                                               ; preds = %14, %18, %24, %26, %3
  %31 = phi i1 [ false, %3 ], [ false, %26 ], [ false, %24 ], [ true, %14 ], [ true, %18 ]
  ret i1 %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN17url_pattern_index16SerializeUrlRuleERKNS_5proto7UrlRuleEPN11flatbuffers17FlatBufferBuilderEPNSt3__13mapINS7_6vectorINS4_6OffsetINS4_6StringEEENS7_9allocatorISC_EEEENSA_INS4_6VectorISC_EEEENS_19OffsetVectorCompareENSD_INS7_4pairIKSF_SI_EEEEEE(%"class.url_pattern_index::proto::UrlRule"* dereferenceable(88), %"class.flatbuffers::FlatBufferBuilder"*, %"class.std::__1::map"*) local_unnamed_addr #2 {
  %4 = alloca %"class.std::__1::vector", align 16
  %5 = alloca %"class.std::__1::vector", align 16
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::vector", align 16
  %8 = alloca %"class.std::__1::vector", align 16
  %9 = getelementptr inbounds %"class.url_pattern_index::proto::UrlRule", %"class.url_pattern_index::proto::UrlRule"* %0, i64 0, i32 5
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %218 [
    i32 2, label %11
    i32 1, label %12
  ]

11:                                               ; preds = %3
  br label %12

12:                                               ; preds = %11, %3
  %13 = phi i8 [ 1, %11 ], [ 0, %3 ]
  %14 = getelementptr inbounds %"class.url_pattern_index::proto::UrlRule", %"class.url_pattern_index::proto::UrlRule"* %0, i64 0, i32 6
  %15 = load i32, i32* %14, align 4
  switch i32 %15, label %218 [
    i32 1, label %16
    i32 3, label %18
    i32 2, label %21
  ]

16:                                               ; preds = %12
  %17 = or i8 %13, 4
  br label %18

18:                                               ; preds = %16, %12
  %19 = phi i8 [ %17, %16 ], [ %13, %12 ]
  %20 = or i8 %19, 2
  br label %23

21:                                               ; preds = %12
  %22 = or i8 %13, 4
  br label %23

23:                                               ; preds = %21, %18
  %24 = phi i8 [ %22, %21 ], [ %20, %18 ]
  %25 = getelementptr inbounds %"class.url_pattern_index::proto::UrlRule", %"class.url_pattern_index::proto::UrlRule"* %0, i64 0, i32 7
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 6143
  br i1 %27, label %101, label %28

28:                                               ; preds = %23
  %29 = load atomic i8, i8* bitcast (i64* @_ZGVZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map to i8*) acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %40, !prof !2

31:                                               ; preds = %28
  %32 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map) #20
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %31
  %35 = tail call i8* @_Znwm(i64 112) #21
  %36 = bitcast i8* %35 to %"struct.std::__1::pair.95"*
  store i8* %35, i8** bitcast (%"class.base::NoDestructor"* @_ZZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map to i8**), align 8
  %37 = getelementptr inbounds i8, i8* %35, i64 112
  store i8* %37, i8** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map, i64 0, i32 0, i64 16) to i8**), align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %35, i8* align 4 bitcast ([14 x %"struct.std::__1::pair.95"]* @.ref.tmp to i8*), i64 112, i1 false) #20
  %38 = ptrtoint i8* %37 to i64
  store i64 %38, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map, i64 0, i32 0, i64 8) to i64*), align 8
  %39 = bitcast i8* %37 to %"struct.std::__1::pair.95"*
  tail call void @_ZN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS0_8GetFirstENSt3__14lessIvEENS6_6vectorINS6_4pairIS4_NS2_4flat11ElementTypeEEENS6_9allocatorISD_EEEEE15sort_and_uniqueENS6_11__wrap_iterIPSD_EESK_(%"class.base::internal::flat_tree"* bitcast (%"class.base::NoDestructor"* @_ZZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map to %"class.base::internal::flat_tree"*), %"struct.std::__1::pair.95"* nonnull %36, %"struct.std::__1::pair.95"* %39) #20
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map) #20
  br label %40

40:                                               ; preds = %34, %31, %28
  %41 = load %"struct.std::__1::pair.95"*, %"struct.std::__1::pair.95"** bitcast (%"class.base::NoDestructor"* @_ZZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map to %"struct.std::__1::pair.95"**), align 8
  %42 = load %"struct.std::__1::pair.95"*, %"struct.std::__1::pair.95"** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map, i64 0, i32 0, i64 8) to %"struct.std::__1::pair.95"**), align 8
  %43 = icmp eq %"struct.std::__1::pair.95"* %41, %42
  br i1 %43, label %101, label %44

44:                                               ; preds = %40
  %45 = ptrtoint %"struct.std::__1::pair.95"* %41 to i64
  %46 = load i32, i32* %25, align 8
  %47 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %42, i64 -1, i32 0
  %48 = ptrtoint i32* %47 to i64
  %49 = sub i64 %48, %45
  %50 = lshr i64 %49, 3
  %51 = add nuw nsw i64 %50, 1
  %52 = and i64 %51, 1
  %53 = icmp eq i64 %50, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %44
  %55 = sub nuw nsw i64 %51, %52
  br label %80

56:                                               ; preds = %537, %44
  %57 = phi i16 [ undef, %44 ], [ %538, %537 ]
  %58 = phi i16 [ undef, %44 ], [ %539, %537 ]
  %59 = phi i16 [ 0, %44 ], [ %538, %537 ]
  %60 = phi i16 [ 0, %44 ], [ %539, %537 ]
  %61 = phi %"struct.std::__1::pair.95"* [ %41, %44 ], [ %540, %537 ]
  %62 = icmp eq i64 %52, 0
  br i1 %62, label %73, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %61, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = and i32 %65, %46
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %61, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = trunc i32 %70 to i16
  %72 = or i16 %60, %71
  br label %73

73:                                               ; preds = %68, %63, %56
  %74 = phi i16 [ %57, %56 ], [ %59, %63 ], [ %72, %68 ]
  %75 = phi i16 [ %58, %56 ], [ %60, %63 ], [ %72, %68 ]
  %76 = and i16 %75, 64
  %77 = icmp eq i16 %76, 0
  %78 = or i16 %75, 16
  %79 = select i1 %77, i16 %74, i16 %78
  br label %101

80:                                               ; preds = %537, %54
  %81 = phi i16 [ 0, %54 ], [ %538, %537 ]
  %82 = phi i16 [ 0, %54 ], [ %539, %537 ]
  %83 = phi %"struct.std::__1::pair.95"* [ %41, %54 ], [ %540, %537 ]
  %84 = phi i64 [ %55, %54 ], [ %541, %537 ]
  %85 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %83, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %86, %46
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %80
  %90 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %83, i64 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = trunc i32 %91 to i16
  %93 = or i16 %82, %92
  br label %94

94:                                               ; preds = %89, %80
  %95 = phi i16 [ %81, %80 ], [ %93, %89 ]
  %96 = phi i16 [ %82, %80 ], [ %93, %89 ]
  %97 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %83, i64 1, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = and i32 %98, %46
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %537, label %532

101:                                              ; preds = %73, %23, %40
  %102 = phi i16 [ 0, %40 ], [ 8191, %23 ], [ %79, %73 ]
  %103 = load atomic i8, i8* bitcast (i64* @_ZGVZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map to i8*) acquire, align 8
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %105, label %114, !prof !2

105:                                              ; preds = %101
  %106 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map) #20
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %114, label %108

108:                                              ; preds = %105
  %109 = tail call i8* @_Znwm(i64 40) #21
  %110 = bitcast i8* %109 to %"struct.std::__1::pair.118"*
  store i8* %109, i8** bitcast (%"class.base::NoDestructor.125"* @_ZZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map to i8**), align 8
  %111 = getelementptr inbounds i8, i8* %109, i64 40
  store i8* %111, i8** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.125", %"class.base::NoDestructor.125"* @_ZZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map, i64 0, i32 0, i64 16) to i8**), align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %109, i8* align 4 bitcast ([5 x %"struct.std::__1::pair.118"]* @.ref.tmp.4 to i8*), i64 40, i1 false) #20
  %112 = ptrtoint i8* %111 to i64
  store i64 %112, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.125", %"class.base::NoDestructor.125"* @_ZZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map, i64 0, i32 0, i64 8) to i64*), align 8
  %113 = bitcast i8* %111 to %"struct.std::__1::pair.118"*
  tail call void @_ZN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS0_8GetFirstENSt3__14lessIvEENS6_6vectorINS6_4pairIS4_NS2_4flat14ActivationTypeEEENS6_9allocatorISD_EEEEE15sort_and_uniqueENS6_11__wrap_iterIPSD_EESK_(%"class.base::internal::flat_tree.115"* bitcast (%"class.base::NoDestructor.125"* @_ZZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map to %"class.base::internal::flat_tree.115"*), %"struct.std::__1::pair.118"* nonnull %110, %"struct.std::__1::pair.118"* %113) #20
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map) #20
  br label %114

114:                                              ; preds = %108, %105, %101
  %115 = load %"struct.std::__1::pair.118"*, %"struct.std::__1::pair.118"** bitcast (%"class.base::NoDestructor.125"* @_ZZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map to %"struct.std::__1::pair.118"**), align 8
  %116 = load %"struct.std::__1::pair.118"*, %"struct.std::__1::pair.118"** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.125", %"class.base::NoDestructor.125"* @_ZZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map, i64 0, i32 0, i64 8) to %"struct.std::__1::pair.118"**), align 8
  %117 = icmp eq %"struct.std::__1::pair.118"* %115, %116
  br i1 %117, label %169, label %118

118:                                              ; preds = %114
  %119 = ptrtoint %"struct.std::__1::pair.118"* %115 to i64
  %120 = getelementptr inbounds %"class.url_pattern_index::proto::UrlRule", %"class.url_pattern_index::proto::UrlRule"* %0, i64 0, i32 8
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %116, i64 -1, i32 0
  %123 = ptrtoint i32* %122 to i64
  %124 = sub i64 %123, %119
  %125 = lshr i64 %124, 3
  %126 = add nuw nsw i64 %125, 1
  %127 = and i64 %126, 1
  %128 = icmp eq i64 %125, 0
  br i1 %128, label %152, label %129

129:                                              ; preds = %118
  %130 = sub nuw nsw i64 %126, %127
  br label %131

131:                                              ; preds = %526, %129
  %132 = phi i8 [ 0, %129 ], [ %527, %526 ]
  %133 = phi i8 [ 0, %129 ], [ %528, %526 ]
  %134 = phi %"struct.std::__1::pair.118"* [ %115, %129 ], [ %529, %526 ]
  %135 = phi i64 [ %130, %129 ], [ %530, %526 ]
  %136 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %134, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = and i32 %137, %121
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %145, label %140

140:                                              ; preds = %131
  %141 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %134, i64 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = trunc i32 %142 to i8
  %144 = or i8 %133, %143
  br label %145

145:                                              ; preds = %140, %131
  %146 = phi i8 [ %132, %131 ], [ %144, %140 ]
  %147 = phi i8 [ %133, %131 ], [ %144, %140 ]
  %148 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %134, i64 1, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = and i32 %149, %121
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %526, label %521

152:                                              ; preds = %526, %118
  %153 = phi i8 [ undef, %118 ], [ %527, %526 ]
  %154 = phi i8 [ undef, %118 ], [ %528, %526 ]
  %155 = phi i8 [ 0, %118 ], [ %527, %526 ]
  %156 = phi i8 [ 0, %118 ], [ %528, %526 ]
  %157 = phi %"struct.std::__1::pair.118"* [ %115, %118 ], [ %529, %526 ]
  %158 = icmp eq i64 %127, 0
  br i1 %158, label %169, label %159

159:                                              ; preds = %152
  %160 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %157, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = and i32 %161, %121
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %169, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %157, i64 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = trunc i32 %166 to i8
  %168 = or i8 %156, %167
  br label %169

169:                                              ; preds = %152, %159, %164, %114
  %170 = phi i8 [ 0, %114 ], [ %153, %152 ], [ %155, %159 ], [ %168, %164 ]
  %171 = phi i8 [ 0, %114 ], [ %154, %152 ], [ %156, %159 ], [ %168, %164 ]
  %172 = getelementptr inbounds %"class.url_pattern_index::proto::UrlRule", %"class.url_pattern_index::proto::UrlRule"* %0, i64 0, i32 9
  %173 = load i32, i32* %172, align 8
  switch i32 %173, label %218 [
    i32 1, label %175
    i32 2, label %174
  ]

174:                                              ; preds = %169
  br label %175

175:                                              ; preds = %174, %169
  %176 = phi i32 [ 1, %174 ], [ 0, %169 ]
  %177 = getelementptr inbounds %"class.url_pattern_index::proto::UrlRule", %"class.url_pattern_index::proto::UrlRule"* %0, i64 0, i32 10
  %178 = load i32, i32* %177, align 4
  %179 = add i32 %178, -1
  %180 = icmp ult i32 %179, 3
  br i1 %180, label %181, label %218

181:                                              ; preds = %175
  %182 = getelementptr inbounds %"class.url_pattern_index::proto::UrlRule", %"class.url_pattern_index::proto::UrlRule"* %0, i64 0, i32 11
  %183 = load i32, i32* %182, align 8
  switch i32 %183, label %218 [
    i32 1, label %185
    i32 2, label %184
  ]

184:                                              ; preds = %181
  br label %185

185:                                              ; preds = %184, %181
  %186 = phi i32 [ 1, %184 ], [ 0, %181 ]
  %187 = icmp eq i32 %179, 2
  br i1 %187, label %188, label %213

188:                                              ; preds = %185
  %189 = getelementptr inbounds %"class.url_pattern_index::proto::UrlRule", %"class.url_pattern_index::proto::UrlRule"* %0, i64 0, i32 4, i32 0
  %190 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %189, align 8
  %191 = bitcast %"class.std::__1::basic_string"* %190 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %191, i64 0, i32 1, i32 0
  %193 = load i8, i8* %192, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %195, label %198

195:                                              ; preds = %188
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %190, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %197 = load i64, i64* %196, align 8
  br label %200

198:                                              ; preds = %188
  %199 = zext i8 %193 to i64
  br label %200

200:                                              ; preds = %198, %195
  %201 = phi i64 [ %197, %195 ], [ %199, %198 ]
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %213, label %203

203:                                              ; preds = %200
  br i1 %194, label %204, label %207

204:                                              ; preds = %203
  %205 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %190, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load i8*, i8** %205, align 8
  br label %209

207:                                              ; preds = %203
  %208 = bitcast %"class.std::__1::basic_string"* %190 to i8*
  br label %209

209:                                              ; preds = %207, %204
  %210 = phi i8* [ %206, %204 ], [ %208, %207 ]
  %211 = load i8, i8* %210, align 1
  %212 = icmp eq i8 %211, 42
  br i1 %212, label %218, label %213

213:                                              ; preds = %209, %200, %185
  %214 = icmp eq i16 %102, 0
  br i1 %214, label %221, label %215

215:                                              ; preds = %213
  %216 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %216)
  %217 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %217)
  br label %225

218:                                              ; preds = %175, %3, %12, %169, %209, %181
  %219 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219)
  %220 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %220)
  br label %517

221:                                              ; preds = %213
  %222 = icmp eq i8 %171, 0
  %223 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %223)
  %224 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %224)
  br i1 %222, label %517, label %225

225:                                              ; preds = %215, %221
  %226 = phi i8* [ %217, %215 ], [ %224, %221 ]
  %227 = phi i8* [ %216, %215 ], [ %223, %221 ]
  %228 = getelementptr inbounds %"class.url_pattern_index::proto::UrlRule", %"class.url_pattern_index::proto::UrlRule"* %0, i64 0, i32 3, i32 0, i32 1
  %229 = load i32, i32* %228, align 8
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %483, label %231

231:                                              ; preds = %225
  %232 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %232) #20
  %233 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %234 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %235 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %232, i8 0, i64 24, i1 false) #20
  %236 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #20
  %237 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %238 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %239 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %236, i8 0, i64 24, i1 false) #20
  %240 = sext i32 %229 to i64
  %241 = bitcast %"struct.flatbuffers::Offset"** %235 to i64*
  %242 = bitcast %"class.std::__1::vector"* %4 to i64*
  %243 = icmp slt i32 %229, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %231
  tail call void @abort() #22
  unreachable

245:                                              ; preds = %231
  %246 = bitcast %"struct.flatbuffers::Offset"** %234 to i64*
  %247 = shl nsw i64 %240, 2
  %248 = tail call i8* @_Znwm(i64 %247) #21
  %249 = bitcast i8* %248 to %"struct.flatbuffers::Offset"*
  %250 = ptrtoint i8* %248 to i64
  %251 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %249, i64 %240
  %252 = ptrtoint %"struct.flatbuffers::Offset"* %251 to i64
  store i64 %250, i64* %242, align 16
  store i64 %250, i64* %246, align 8
  store i64 %252, i64* %241, align 16
  %253 = getelementptr inbounds %"class.url_pattern_index::proto::UrlRule", %"class.url_pattern_index::proto::UrlRule"* %0, i64 0, i32 3, i32 0, i32 3
  %254 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %253, align 8
  %255 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %254, null
  %256 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %254, i64 0, i32 1, i64 0
  %257 = select i1 %255, i8** null, i8** %256
  %258 = getelementptr inbounds i8*, i8** %257, i64 %240
  %259 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %260 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %261 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %260, i64 0, i32 1, i32 0
  %262 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %264 = bitcast %"struct.flatbuffers::Offset"** %238 to i64*
  %265 = bitcast %"class.std::__1::vector"* %5 to i64*
  %266 = bitcast %"struct.flatbuffers::Offset"** %239 to i64*
  br label %267

267:                                              ; preds = %431, %245
  %268 = phi i8** [ %257, %245 ], [ %432, %431 ]
  %269 = bitcast i8** %268 to %"class.url_pattern_index::proto::DomainListItem"**
  %270 = load %"class.url_pattern_index::proto::DomainListItem"*, %"class.url_pattern_index::proto::DomainListItem"** %269, align 8
  %271 = getelementptr inbounds %"class.url_pattern_index::proto::DomainListItem", %"class.url_pattern_index::proto::DomainListItem"* %270, i64 0, i32 3, i32 0
  %272 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %271, align 8
  %273 = bitcast %"class.std::__1::basic_string"* %272 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %274 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %273, i64 0, i32 1, i32 0
  %275 = load i8, i8* %274, align 1
  %276 = icmp slt i8 %275, 0
  %277 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %272, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = load i8*, i8** %277, align 8
  %279 = bitcast %"class.std::__1::basic_string"* %272 to i8*
  %280 = select i1 %276, i8* %278, i8* %279
  %281 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %272, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %282 = load i64, i64* %281, align 8
  %283 = zext i8 %275 to i64
  %284 = select i1 %276, i64 %282, i64 %283
  %285 = call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %280, i64 %284) #20
  br i1 %285, label %286, label %466

286:                                              ; preds = %267
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %259) #20
  %287 = load i8, i8* %274, align 1
  %288 = icmp slt i8 %287, 0
  %289 = load i8*, i8** %277, align 8
  %290 = select i1 %288, i8* %289, i8* %279
  %291 = load i64, i64* %281, align 8
  %292 = zext i8 %287 to i64
  %293 = select i1 %288, i64 %291, i64 %292
  %294 = getelementptr inbounds i8, i8* %290, i64 %293
  %295 = icmp eq i64 %293, 0
  br i1 %295, label %304, label %298

296:                                              ; preds = %298
  %297 = icmp eq i8* %303, %294
  br i1 %297, label %304, label %298

298:                                              ; preds = %286, %296
  %299 = phi i8* [ %303, %296 ], [ %290, %286 ]
  %300 = load i8, i8* %299, align 1
  %301 = add i8 %300, -65
  %302 = icmp ult i8 %301, 26
  %303 = getelementptr inbounds i8, i8* %299, i64 1
  br i1 %302, label %307, label %296

304:                                              ; preds = %296, %286
  br i1 %288, label %306, label %305

305:                                              ; preds = %304
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %259, i8* align 8 %279, i64 24, i1 false) #20
  br label %308

306:                                              ; preds = %304
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %289, i64 %291) #20
  br label %308

307:                                              ; preds = %298
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, i8* %290, i64 %293) #20
  br label %308

308:                                              ; preds = %307, %306, %305
  %309 = load i8, i8* %261, align 1
  %310 = icmp slt i8 %309, 0
  %311 = load i8*, i8** %262, align 8
  %312 = load i64, i64* %263, align 8
  %313 = zext i8 %309 to i64
  %314 = select i1 %310, i8* %311, i8* %259
  %315 = select i1 %310, i64 %312, i64 %313
  %316 = call i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %1, i8* %314, i64 %315) #20
  %317 = load i8, i8* %261, align 1
  %318 = icmp slt i8 %317, 0
  br i1 %318, label %319, label %321

319:                                              ; preds = %308
  %320 = load i8*, i8** %262, align 8
  call void @_ZdlPv(i8* %320) #21
  br label %321

321:                                              ; preds = %319, %308
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %259) #20
  %322 = getelementptr inbounds %"class.url_pattern_index::proto::DomainListItem", %"class.url_pattern_index::proto::DomainListItem"* %270, i64 0, i32 4
  %323 = load i8, i8* %322, align 8, !range !3
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %378, label %325

325:                                              ; preds = %321
  %326 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %238, align 8
  %327 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %239, align 16
  %328 = icmp eq %"struct.flatbuffers::Offset"* %326, %327
  %329 = ptrtoint %"struct.flatbuffers::Offset"* %327 to i64
  br i1 %328, label %334, label %330

330:                                              ; preds = %325
  %331 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %326, i64 0, i32 0
  store i32 %316, i32* %331, align 4
  %332 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %326, i64 1
  %333 = ptrtoint %"struct.flatbuffers::Offset"* %332 to i64
  store i64 %333, i64* %264, align 8
  br label %431

334:                                              ; preds = %325
  %335 = ptrtoint %"struct.flatbuffers::Offset"* %326 to i64
  %336 = load i64, i64* %265, align 16
  %337 = sub i64 %335, %336
  %338 = ashr exact i64 %337, 2
  %339 = add nsw i64 %338, 1
  %340 = icmp ugt i64 %339, 4611686018427387903
  br i1 %340, label %341, label %343

341:                                              ; preds = %334
  %342 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %342) #22
  unreachable

343:                                              ; preds = %334
  %344 = sub i64 %329, %336
  %345 = ashr exact i64 %344, 2
  %346 = icmp ult i64 %345, 2305843009213693951
  br i1 %346, label %347, label %355

347:                                              ; preds = %343
  %348 = ashr exact i64 %344, 1
  %349 = icmp ult i64 %348, %339
  %350 = select i1 %349, i64 %339, i64 %348
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %360, label %352

352:                                              ; preds = %347
  %353 = icmp ugt i64 %350, 4611686018427387903
  br i1 %353, label %354, label %355

354:                                              ; preds = %352
  call void @abort() #22
  unreachable

355:                                              ; preds = %352, %343
  %356 = phi i64 [ %350, %352 ], [ 4611686018427387903, %343 ]
  %357 = shl i64 %356, 2
  %358 = call i8* @_Znwm(i64 %357) #21
  %359 = bitcast i8* %358 to %"struct.flatbuffers::Offset"*
  br label %360

360:                                              ; preds = %355, %347
  %361 = phi i64 [ %356, %355 ], [ 0, %347 ]
  %362 = phi i8* [ %358, %355 ], [ null, %347 ]
  %363 = phi %"struct.flatbuffers::Offset"* [ %359, %355 ], [ null, %347 ]
  %364 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %363, i64 %338
  %365 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %363, i64 %361
  %366 = ptrtoint %"struct.flatbuffers::Offset"* %365 to i64
  %367 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %364, i64 0, i32 0
  store i32 %316, i32* %367, align 4
  %368 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %364, i64 1
  %369 = ptrtoint %"struct.flatbuffers::Offset"* %368 to i64
  %370 = ptrtoint %"struct.flatbuffers::Offset"* %363 to i64
  %371 = icmp sgt i64 %337, 0
  br i1 %371, label %372, label %374

372:                                              ; preds = %360
  %373 = inttoptr i64 %336 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %362, i8* align 4 %373, i64 %337, i1 false) #20
  br label %374

374:                                              ; preds = %372, %360
  store i64 %370, i64* %265, align 16
  store i64 %369, i64* %264, align 8
  store i64 %366, i64* %266, align 16
  %375 = icmp eq i64 %336, 0
  br i1 %375, label %431, label %376

376:                                              ; preds = %374
  %377 = inttoptr i64 %336 to i8*
  call void @_ZdlPv(i8* %377) #21
  br label %431

378:                                              ; preds = %321
  %379 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %234, align 8
  %380 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %235, align 16
  %381 = icmp eq %"struct.flatbuffers::Offset"* %379, %380
  %382 = ptrtoint %"struct.flatbuffers::Offset"* %380 to i64
  br i1 %381, label %387, label %383

383:                                              ; preds = %378
  %384 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %379, i64 0, i32 0
  store i32 %316, i32* %384, align 4
  %385 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %379, i64 1
  %386 = ptrtoint %"struct.flatbuffers::Offset"* %385 to i64
  store i64 %386, i64* %246, align 8
  br label %431

387:                                              ; preds = %378
  %388 = ptrtoint %"struct.flatbuffers::Offset"* %379 to i64
  %389 = load i64, i64* %242, align 16
  %390 = sub i64 %388, %389
  %391 = ashr exact i64 %390, 2
  %392 = add nsw i64 %391, 1
  %393 = icmp ugt i64 %392, 4611686018427387903
  br i1 %393, label %394, label %396

394:                                              ; preds = %387
  %395 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %395) #22
  unreachable

396:                                              ; preds = %387
  %397 = sub i64 %382, %389
  %398 = ashr exact i64 %397, 2
  %399 = icmp ult i64 %398, 2305843009213693951
  br i1 %399, label %400, label %408

400:                                              ; preds = %396
  %401 = ashr exact i64 %397, 1
  %402 = icmp ult i64 %401, %392
  %403 = select i1 %402, i64 %392, i64 %401
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %413, label %405

405:                                              ; preds = %400
  %406 = icmp ugt i64 %403, 4611686018427387903
  br i1 %406, label %407, label %408

407:                                              ; preds = %405
  call void @abort() #22
  unreachable

408:                                              ; preds = %405, %396
  %409 = phi i64 [ %403, %405 ], [ 4611686018427387903, %396 ]
  %410 = shl i64 %409, 2
  %411 = call i8* @_Znwm(i64 %410) #21
  %412 = bitcast i8* %411 to %"struct.flatbuffers::Offset"*
  br label %413

413:                                              ; preds = %408, %400
  %414 = phi i64 [ %409, %408 ], [ 0, %400 ]
  %415 = phi i8* [ %411, %408 ], [ null, %400 ]
  %416 = phi %"struct.flatbuffers::Offset"* [ %412, %408 ], [ null, %400 ]
  %417 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %416, i64 %391
  %418 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %416, i64 %414
  %419 = ptrtoint %"struct.flatbuffers::Offset"* %418 to i64
  %420 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %417, i64 0, i32 0
  store i32 %316, i32* %420, align 4
  %421 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %417, i64 1
  %422 = ptrtoint %"struct.flatbuffers::Offset"* %421 to i64
  %423 = ptrtoint %"struct.flatbuffers::Offset"* %416 to i64
  %424 = icmp sgt i64 %390, 0
  br i1 %424, label %425, label %427

425:                                              ; preds = %413
  %426 = inttoptr i64 %389 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %415, i8* align 4 %426, i64 %390, i1 false) #20
  br label %427

427:                                              ; preds = %425, %413
  store i64 %423, i64* %242, align 16
  store i64 %422, i64* %246, align 8
  store i64 %419, i64* %241, align 16
  %428 = icmp eq i64 %389, 0
  br i1 %428, label %431, label %429

429:                                              ; preds = %427
  %430 = inttoptr i64 %389 to i8*
  call void @_ZdlPv(i8* %430) #21
  br label %431

431:                                              ; preds = %429, %427, %383, %376, %374, %330
  %432 = getelementptr inbounds i8*, i8** %268, i64 1
  %433 = icmp eq i8** %432, %258
  br i1 %433, label %434, label %267

434:                                              ; preds = %431
  %435 = bitcast %"class.std::__1::vector"* %4 to <2 x i64>*
  %436 = load <2 x i64>, <2 x i64>* %435, align 16
  %437 = load i64, i64* %241, align 16
  %438 = bitcast %"class.std::__1::vector"* %7 to <2 x i64>*
  store <2 x i64> %436, <2 x i64>* %438, align 16
  %439 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %440 = bitcast %"struct.flatbuffers::Offset"** %439 to i64*
  store i64 %437, i64* %440, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %232, i8 0, i64 24, i1 false) #20
  %441 = call fastcc i32 @_ZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENSt3__16vectorIN11flatbuffers6OffsetINS4_6StringEEENS2_9allocatorIS7_EEEEPNS4_17FlatBufferBuilderEPNS2_3mapISA_NS5_INS4_6VectorIS7_EEEENS_19OffsetVectorCompareENS8_INS2_4pairIKSA_SG_EEEEEE(%"class.std::__1::vector"* nonnull %7, %"class.flatbuffers::FlatBufferBuilder"* %1, %"class.std::__1::map"* %2) #20
  %442 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %443 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %442, align 16
  %444 = icmp eq %"struct.flatbuffers::Offset"* %443, null
  br i1 %444, label %450, label %445

445:                                              ; preds = %434
  %446 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %447 = bitcast %"struct.flatbuffers::Offset"** %446 to i64*
  %448 = ptrtoint %"struct.flatbuffers::Offset"* %443 to i64
  store i64 %448, i64* %447, align 8
  %449 = bitcast %"struct.flatbuffers::Offset"* %443 to i8*
  call void @_ZdlPv(i8* %449) #21
  br label %450

450:                                              ; preds = %445, %434
  %451 = bitcast %"class.std::__1::vector"* %5 to <2 x i64>*
  %452 = load <2 x i64>, <2 x i64>* %451, align 16
  %453 = bitcast %"class.std::__1::vector"* %8 to <2 x i64>*
  store <2 x i64> %452, <2 x i64>* %453, align 16
  %454 = load i64, i64* %266, align 16
  %455 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %456 = bitcast %"struct.flatbuffers::Offset"** %455 to i64*
  store i64 %454, i64* %456, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %236, i8 0, i64 24, i1 false) #20
  %457 = call fastcc i32 @_ZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENSt3__16vectorIN11flatbuffers6OffsetINS4_6StringEEENS2_9allocatorIS7_EEEEPNS4_17FlatBufferBuilderEPNS2_3mapISA_NS5_INS4_6VectorIS7_EEEENS_19OffsetVectorCompareENS8_INS2_4pairIKSA_SG_EEEEEE(%"class.std::__1::vector"* nonnull %8, %"class.flatbuffers::FlatBufferBuilder"* %1, %"class.std::__1::map"* %2) #20
  %458 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %459 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %458, align 16
  %460 = icmp eq %"struct.flatbuffers::Offset"* %459, null
  br i1 %460, label %466, label %461

461:                                              ; preds = %450
  %462 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %463 = bitcast %"struct.flatbuffers::Offset"** %462 to i64*
  %464 = ptrtoint %"struct.flatbuffers::Offset"* %459 to i64
  store i64 %464, i64* %463, align 8
  %465 = bitcast %"struct.flatbuffers::Offset"* %459 to i8*
  call void @_ZdlPv(i8* %465) #21
  br label %466

466:                                              ; preds = %267, %461, %450
  %467 = phi i32 [ %457, %450 ], [ %457, %461 ], [ 0, %267 ]
  %468 = phi i32 [ %441, %450 ], [ %441, %461 ], [ 0, %267 ]
  %469 = phi i32 [ 0, %450 ], [ 0, %461 ], [ 1, %267 ]
  %470 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %237, align 16
  %471 = icmp eq %"struct.flatbuffers::Offset"* %470, null
  br i1 %471, label %475, label %472

472:                                              ; preds = %466
  %473 = ptrtoint %"struct.flatbuffers::Offset"* %470 to i64
  store i64 %473, i64* %264, align 8
  %474 = bitcast %"struct.flatbuffers::Offset"* %470 to i8*
  call void @_ZdlPv(i8* %474) #21
  br label %475

475:                                              ; preds = %472, %466
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #20
  %476 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %233, align 16
  %477 = icmp eq %"struct.flatbuffers::Offset"* %476, null
  br i1 %477, label %481, label %478

478:                                              ; preds = %475
  %479 = ptrtoint %"struct.flatbuffers::Offset"* %476 to i64
  store i64 %479, i64* %246, align 8
  %480 = bitcast %"struct.flatbuffers::Offset"* %476 to i8*
  call void @_ZdlPv(i8* %480) #21
  br label %481

481:                                              ; preds = %478, %475
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %232) #20
  %482 = icmp eq i32 %469, 0
  br i1 %482, label %483, label %517

483:                                              ; preds = %481, %225
  %484 = phi i32 [ 0, %225 ], [ %467, %481 ]
  %485 = phi i32 [ 0, %225 ], [ %468, %481 ]
  %486 = getelementptr inbounds %"class.url_pattern_index::proto::UrlRule", %"class.url_pattern_index::proto::UrlRule"* %0, i64 0, i32 4, i32 0
  %487 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %486, align 8
  %488 = bitcast %"class.std::__1::basic_string"* %487 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %489 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %488, i64 0, i32 1, i32 0
  %490 = load i8, i8* %489, align 1
  %491 = icmp slt i8 %490, 0
  %492 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %487, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %493 = load i8*, i8** %492, align 8
  %494 = bitcast %"class.std::__1::basic_string"* %487 to i8*
  %495 = select i1 %491, i8* %493, i8* %494
  %496 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %487, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %497 = load i64, i64* %496, align 8
  %498 = zext i8 %490 to i64
  %499 = select i1 %491, i64 %497, i64 %498
  %500 = call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %495, i64 %499) #20
  br i1 %500, label %501, label %517

501:                                              ; preds = %483
  %502 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %486, align 8
  %503 = bitcast %"class.std::__1::basic_string"* %502 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %504 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %503, i64 0, i32 1, i32 0
  %505 = load i8, i8* %504, align 1
  %506 = icmp slt i8 %505, 0
  %507 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %502, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %508 = load i8*, i8** %507, align 8
  %509 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %502, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %510 = load i64, i64* %509, align 8
  %511 = bitcast %"class.std::__1::basic_string"* %502 to i8*
  %512 = zext i8 %505 to i64
  %513 = select i1 %506, i8* %508, i8* %511
  %514 = select i1 %506, i64 %510, i64 %512
  %515 = call i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %1, i8* %513, i64 %514) #20
  %516 = call i32 @_ZN17url_pattern_index4flat13CreateUrlRuleERN11flatbuffers17FlatBufferBuilderEhtthNS0_14UrlPatternTypeENS0_10AnchorTypeES5_NS1_6OffsetINS1_6VectorINS6_INS1_6StringEEEEEEESB_S9_jmNS6_INS7_IhEEEE(%"class.flatbuffers::FlatBufferBuilder"* dereferenceable(96) %1, i8 zeroext %24, i16 zeroext %102, i16 zeroext 127, i8 zeroext %170, i32 %176, i32 %179, i32 %186, i32 %485, i32 %484, i32 %515, i32 0, i64 0, i32 0) #20
  br label %517

517:                                              ; preds = %218, %221, %481, %483, %501
  %518 = phi i8* [ %224, %221 ], [ %226, %501 ], [ %226, %481 ], [ %226, %483 ], [ %220, %218 ]
  %519 = phi i8* [ %223, %221 ], [ %227, %501 ], [ %227, %481 ], [ %227, %483 ], [ %219, %218 ]
  %520 = phi i32 [ 0, %221 ], [ %516, %501 ], [ 0, %481 ], [ 0, %483 ], [ 0, %218 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %519)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %518)
  ret i32 %520

521:                                              ; preds = %145
  %522 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %134, i64 1, i32 1
  %523 = load i32, i32* %522, align 4
  %524 = trunc i32 %523 to i8
  %525 = or i8 %147, %524
  br label %526

526:                                              ; preds = %521, %145
  %527 = phi i8 [ %146, %145 ], [ %525, %521 ]
  %528 = phi i8 [ %147, %145 ], [ %525, %521 ]
  %529 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %134, i64 2
  %530 = add i64 %135, -2
  %531 = icmp eq i64 %530, 0
  br i1 %531, label %152, label %131

532:                                              ; preds = %94
  %533 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %83, i64 1, i32 1
  %534 = load i32, i32* %533, align 4
  %535 = trunc i32 %534 to i16
  %536 = or i16 %96, %535
  br label %537

537:                                              ; preds = %532, %94
  %538 = phi i16 [ %95, %94 ], [ %536, %532 ]
  %539 = phi i16 [ %96, %94 ], [ %536, %532 ]
  %540 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %83, i64 2
  %541 = add i64 %84, -2
  %542 = icmp eq i64 %541, 0
  br i1 %542, label %56, label %80
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN17url_pattern_index14CompareDomainsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8*, i64, i8*, i64) local_unnamed_addr #3 {
  %5 = icmp eq i64 %1, %3
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = icmp ugt i64 %1, %3
  %8 = select i1 %7, i32 -1, i32 1
  ret i32 %8

9:                                                ; preds = %4
  %10 = tail call i32 @memcmp(i8* %0, i8* %2, i64 %1) #20
  ret i32 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17url_pattern_index22UrlPatternIndexBuilderC2EPN11flatbuffers17FlatBufferBuilderE(%"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.flatbuffers::FlatBufferBuilder"*) unnamed_addr #2 align 2 {
  %3 = tail call i8* @_Znwm(i64 32) #21
  %4 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.url_pattern_index::UrlPatternIndexBuilder"* %0 to i8**
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 32
  %7 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i32** %7 to i8**
  store i8* %6, i8** %8, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %3, i8 -1, i64 32, i1 false) #20
  %9 = bitcast i32** %4 to i64*
  %10 = ptrtoint i8* %6 to i64
  store i64 %10, i64* %9, align 8
  %11 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::vector.39"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #20
  tail call void @_ZNSt3__16vectorINS_4pairImNS0_IN11flatbuffers6OffsetIN17url_pattern_index4flat7UrlRuleEEENS_9allocatorIS7_EEEEEENS8_ISB_EEE7reserveEm(%"class.std::__1::vector.39"* %11, i64 4) #20
  %13 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 1
  %14 = bitcast %"class.std::__1::vector.41"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #20
  %15 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 2
  store %"class.flatbuffers::FlatBufferBuilder"* %1, %"class.flatbuffers::FlatBufferBuilder"** %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17url_pattern_index22UrlPatternIndexBuilderD2Ev(%"class.url_pattern_index::UrlPatternIndexBuilder"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %2, align 8
  %4 = icmp eq %"struct.flatbuffers::Offset.1"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.flatbuffers::Offset.1"* %3 to i64
  %7 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"struct.flatbuffers::Offset.1"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.flatbuffers::Offset.1"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #21
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %11, i64 0, i32 0, i32 0
  %13 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %12, align 8
  %14 = icmp eq %"struct.std::__1::pair"* %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %10
  %16 = bitcast %"struct.std::__1::pair"* %13 to i8*
  %17 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %18 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair"* %18, %13
  br i1 %19, label %36, label %20

20:                                               ; preds = %15, %31
  %21 = phi %"struct.std::__1::pair"* [ %22, %31 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 -1
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 -1, i32 1, i32 0, i32 0
  %24 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %23, align 8
  %25 = icmp eq %"struct.flatbuffers::Offset.1"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %20
  %27 = ptrtoint %"struct.flatbuffers::Offset.1"* %24 to i64
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 -1, i32 1, i32 0, i32 1
  %29 = bitcast %"struct.flatbuffers::Offset.1"** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"struct.flatbuffers::Offset.1"* %24 to i8*
  tail call void @_ZdlPv(i8* %30) #21
  br label %31

31:                                               ; preds = %26, %20
  %32 = icmp eq %"struct.std::__1::pair"* %22, %13
  br i1 %32, label %33, label %20

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector.39"* %11 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %15
  %37 = phi i8* [ %35, %33 ], [ %16, %15 ]
  store %"struct.std::__1::pair"* %13, %"struct.std::__1::pair"** %17, align 8
  tail call void @_ZdlPv(i8* %37) #21
  br label %38

38:                                               ; preds = %36, %10
  %39 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = icmp eq i32* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = ptrtoint i32* %40 to i64
  %44 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %45 = bitcast i32** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast i32* %40 to i8*
  tail call void @_ZdlPv(i8* %46) #21
  br label %47

47:                                               ; preds = %38, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17url_pattern_index22UrlPatternIndexBuilder12IndexUrlRuleEN11flatbuffers6OffsetINS_4flat7UrlRuleEEE(%"class.url_pattern_index::UrlPatternIndexBuilder"*, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 2
  %5 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %4, align 8
  %6 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %5, i64 0, i32 0, i32 6
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %5, i64 0, i32 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint i8* %7 to i64
  %11 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %5, i64 0, i32 0, i32 5
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %9, %10
  %15 = add i64 %14, %13
  %16 = and i64 %15, 4294967295
  %17 = getelementptr inbounds i8, i8* %7, i64 %16
  %18 = zext i32 %1 to i64
  %19 = sub nsw i64 0, %18
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  %21 = bitcast i8* %20 to %"struct.url_pattern_index::flat::UrlRule"*
  %22 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #20
  store i64 -6148914691236517206, i64* %3, align 8
  %23 = bitcast i8* %20 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = sub nsw i64 0, %25
  %27 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %21, i64 0, i32 0, i32 0, i64 %26
  %28 = bitcast i8* %27 to i16*
  %29 = load i16, i16* %28, align 2
  %30 = icmp ugt i16 %29, 22
  br i1 %30, label %31, label %44

31:                                               ; preds = %2
  %32 = getelementptr inbounds i8, i8* %27, i64 22
  %33 = bitcast i8* %32 to i16*
  %34 = load i16, i16* %33, align 2
  %35 = zext i16 %34 to i64
  %36 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %21, i64 0, i32 0, i32 0, i64 %35
  %37 = icmp eq i16 %34, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %31
  %39 = bitcast i8* %36 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %36, i64 %41
  %43 = bitcast i8* %42 to %"struct.flatbuffers::String"*
  br label %44

44:                                               ; preds = %2, %31, %38
  %45 = phi %"struct.flatbuffers::String"* [ %43, %38 ], [ null, %31 ], [ null, %2 ]
  %46 = getelementptr inbounds %"struct.flatbuffers::String", %"struct.flatbuffers::String"* %45, i64 0, i32 0
  %47 = getelementptr inbounds %"class.flatbuffers::Vector", %"class.flatbuffers::Vector"* %46, i64 1, i32 0
  %48 = bitcast i32* %47 to i8*
  %49 = getelementptr inbounds %"struct.flatbuffers::String", %"struct.flatbuffers::String"* %45, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = tail call i64 @_ZN17url_pattern_index22UrlPatternIndexBuilder23GetMostDistinctiveNGramEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i8* %48, i64 %51)
  store i64 %52, i64* %3, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %125, label %54

54:                                               ; preds = %44
  %55 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 0
  %56 = call dereferenceable(24) %"class.std::__1::vector.41"* @_ZN17url_pattern_index13ClosedHashMapImNSt3__16vectorIN11flatbuffers6OffsetINS_4flat7UrlRuleEEENS1_9allocatorIS7_EEEENS_21SimpleQuadraticProberImNS_20Uint64ToUint32HasherEEEEixERKm(%"class.url_pattern_index::ClosedHashMap"* %55, i64* nonnull dereferenceable(8) %3)
  %57 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %56, i64 0, i32 0, i32 1
  %58 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %56, i64 0, i32 0, i32 2, i32 0, i32 0
  %60 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %59, align 8
  %61 = icmp eq %"struct.flatbuffers::Offset.1"* %58, %60
  %62 = ptrtoint %"struct.flatbuffers::Offset.1"* %60 to i64
  br i1 %61, label %68, label %63

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %58, i64 0, i32 0
  store i32 %1, i32* %64, align 4
  %65 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %58, i64 1
  %66 = ptrtoint %"struct.flatbuffers::Offset.1"* %65 to i64
  %67 = bitcast %"struct.flatbuffers::Offset.1"** %57 to i64*
  store i64 %66, i64* %67, align 8
  br label %195

68:                                               ; preds = %54
  %69 = ptrtoint %"struct.flatbuffers::Offset.1"* %58 to i64
  %70 = bitcast %"struct.flatbuffers::Offset.1"** %57 to i64*
  %71 = bitcast %"class.std::__1::vector.41"* %56 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %69, %72
  %74 = ashr exact i64 %73, 2
  %75 = add nsw i64 %74, 1
  %76 = icmp ugt i64 %75, 4611686018427387903
  br i1 %76, label %77, label %79

77:                                               ; preds = %68
  %78 = bitcast %"class.std::__1::vector.41"* %56 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %78) #22
  unreachable

79:                                               ; preds = %68
  %80 = bitcast %"struct.flatbuffers::Offset.1"** %59 to i64*
  %81 = sub i64 %62, %72
  %82 = ashr exact i64 %81, 2
  %83 = icmp ult i64 %82, 2305843009213693951
  br i1 %83, label %84, label %92

84:                                               ; preds = %79
  %85 = ashr exact i64 %81, 1
  %86 = icmp ult i64 %85, %75
  %87 = select i1 %86, i64 %75, i64 %85
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %97, label %89

89:                                               ; preds = %84
  %90 = icmp ugt i64 %87, 4611686018427387903
  br i1 %90, label %91, label %92

91:                                               ; preds = %89
  call void @abort() #22
  unreachable

92:                                               ; preds = %89, %79
  %93 = phi i64 [ %87, %89 ], [ 4611686018427387903, %79 ]
  %94 = shl i64 %93, 2
  %95 = call i8* @_Znwm(i64 %94) #21
  %96 = bitcast i8* %95 to %"struct.flatbuffers::Offset.1"*
  br label %97

97:                                               ; preds = %92, %84
  %98 = phi i64 [ %93, %92 ], [ 0, %84 ]
  %99 = phi %"struct.flatbuffers::Offset.1"* [ %96, %92 ], [ null, %84 ]
  %100 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %99, i64 %74
  %101 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %99, i64 %98
  %102 = ptrtoint %"struct.flatbuffers::Offset.1"* %101 to i64
  %103 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %100, i64 0, i32 0
  store i32 %1, i32* %103, align 4
  %104 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %100, i64 1
  %105 = ptrtoint %"struct.flatbuffers::Offset.1"* %104 to i64
  %106 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %56, i64 0, i32 0, i32 0
  %107 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %106, align 8
  %108 = load i64, i64* %70, align 8
  %109 = ptrtoint %"struct.flatbuffers::Offset.1"* %107 to i64
  %110 = sub i64 %108, %109
  %111 = ashr exact i64 %110, 2
  %112 = sub nsw i64 0, %111
  %113 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %100, i64 %112
  %114 = ptrtoint %"struct.flatbuffers::Offset.1"* %113 to i64
  %115 = icmp sgt i64 %110, 0
  br i1 %115, label %116, label %120

116:                                              ; preds = %97
  %117 = bitcast %"struct.flatbuffers::Offset.1"* %113 to i8*
  %118 = bitcast %"struct.flatbuffers::Offset.1"* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %117, i8* align 4 %118, i64 %110, i1 false) #20
  %119 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %106, align 8
  br label %120

120:                                              ; preds = %116, %97
  %121 = phi %"struct.flatbuffers::Offset.1"* [ %107, %97 ], [ %119, %116 ]
  store i64 %114, i64* %71, align 8
  store i64 %105, i64* %70, align 8
  store i64 %102, i64* %80, align 8
  %122 = icmp eq %"struct.flatbuffers::Offset.1"* %121, null
  br i1 %122, label %195, label %123

123:                                              ; preds = %120
  %124 = bitcast %"struct.flatbuffers::Offset.1"* %121 to i8*
  call void @_ZdlPv(i8* %124) #21
  br label %195

125:                                              ; preds = %44
  %126 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 1
  %127 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 1, i32 0, i32 1
  %128 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %127, align 8
  %129 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %130 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %129, align 8
  %131 = icmp eq %"struct.flatbuffers::Offset.1"* %128, %130
  %132 = ptrtoint %"struct.flatbuffers::Offset.1"* %130 to i64
  br i1 %131, label %138, label %133

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %128, i64 0, i32 0
  store i32 %1, i32* %134, align 4
  %135 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %128, i64 1
  %136 = ptrtoint %"struct.flatbuffers::Offset.1"* %135 to i64
  %137 = bitcast %"struct.flatbuffers::Offset.1"** %127 to i64*
  store i64 %136, i64* %137, align 8
  br label %195

138:                                              ; preds = %125
  %139 = ptrtoint %"struct.flatbuffers::Offset.1"* %128 to i64
  %140 = bitcast %"struct.flatbuffers::Offset.1"** %127 to i64*
  %141 = bitcast %"class.std::__1::vector.41"* %126 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = sub i64 %139, %142
  %144 = ashr exact i64 %143, 2
  %145 = add nsw i64 %144, 1
  %146 = icmp ugt i64 %145, 4611686018427387903
  br i1 %146, label %147, label %149

147:                                              ; preds = %138
  %148 = bitcast %"class.std::__1::vector.41"* %126 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %148) #22
  unreachable

149:                                              ; preds = %138
  %150 = bitcast %"struct.flatbuffers::Offset.1"** %129 to i64*
  %151 = sub i64 %132, %142
  %152 = ashr exact i64 %151, 2
  %153 = icmp ult i64 %152, 2305843009213693951
  br i1 %153, label %154, label %162

154:                                              ; preds = %149
  %155 = ashr exact i64 %151, 1
  %156 = icmp ult i64 %155, %145
  %157 = select i1 %156, i64 %145, i64 %155
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %167, label %159

159:                                              ; preds = %154
  %160 = icmp ugt i64 %157, 4611686018427387903
  br i1 %160, label %161, label %162

161:                                              ; preds = %159
  tail call void @abort() #22
  unreachable

162:                                              ; preds = %159, %149
  %163 = phi i64 [ %157, %159 ], [ 4611686018427387903, %149 ]
  %164 = shl i64 %163, 2
  %165 = tail call i8* @_Znwm(i64 %164) #21
  %166 = bitcast i8* %165 to %"struct.flatbuffers::Offset.1"*
  br label %167

167:                                              ; preds = %162, %154
  %168 = phi i64 [ %163, %162 ], [ 0, %154 ]
  %169 = phi %"struct.flatbuffers::Offset.1"* [ %166, %162 ], [ null, %154 ]
  %170 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %169, i64 %144
  %171 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %169, i64 %168
  %172 = ptrtoint %"struct.flatbuffers::Offset.1"* %171 to i64
  %173 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %170, i64 0, i32 0
  store i32 %1, i32* %173, align 4
  %174 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %170, i64 1
  %175 = ptrtoint %"struct.flatbuffers::Offset.1"* %174 to i64
  %176 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %126, i64 0, i32 0, i32 0
  %177 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %176, align 8
  %178 = load i64, i64* %140, align 8
  %179 = ptrtoint %"struct.flatbuffers::Offset.1"* %177 to i64
  %180 = sub i64 %178, %179
  %181 = ashr exact i64 %180, 2
  %182 = sub nsw i64 0, %181
  %183 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %170, i64 %182
  %184 = ptrtoint %"struct.flatbuffers::Offset.1"* %183 to i64
  %185 = icmp sgt i64 %180, 0
  br i1 %185, label %186, label %190

186:                                              ; preds = %167
  %187 = bitcast %"struct.flatbuffers::Offset.1"* %183 to i8*
  %188 = bitcast %"struct.flatbuffers::Offset.1"* %177 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %187, i8* align 4 %188, i64 %180, i1 false) #20
  %189 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %176, align 8
  br label %190

190:                                              ; preds = %186, %167
  %191 = phi %"struct.flatbuffers::Offset.1"* [ %177, %167 ], [ %189, %186 ]
  store i64 %184, i64* %141, align 8
  store i64 %175, i64* %140, align 8
  store i64 %172, i64* %150, align 8
  %192 = icmp eq %"struct.flatbuffers::Offset.1"* %191, null
  br i1 %192, label %195, label %193

193:                                              ; preds = %190
  %194 = bitcast %"struct.flatbuffers::Offset.1"* %191 to i8*
  tail call void @_ZdlPv(i8* %194) #21
  br label %195

195:                                              ; preds = %193, %190, %133, %123, %120, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #20
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN17url_pattern_index22UrlPatternIndexBuilder23GetMostDistinctiveNGramEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.url_pattern_index::UrlPatternIndexBuilder"* nocapture readonly, i8*, i64) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds i8, i8* %1, i64 %2
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %3, %21
  %7 = phi i8* [ %24, %21 ], [ %1, %3 ]
  %8 = phi i64 [ %22, %21 ], [ 0, %3 ]
  %9 = phi i64 [ %23, %21 ], [ 0, %3 ]
  %10 = load i8, i8* %7, align 1, !noalias !4
  switch i8 %10, label %11 [
    i8 94, label %21
    i8 42, label %21
  ]

11:                                               ; preds = %6
  %12 = shl i64 %8, 8
  %13 = add i8 %10, -65
  %14 = icmp ult i8 %13, 26
  %15 = add i8 %10, 32
  %16 = select i1 %14, i8 %15, i8 %10
  %17 = sext i8 %16 to i64
  %18 = or i64 %12, %17
  %19 = add i64 %9, 1
  %20 = icmp eq i64 %19, 5
  br i1 %20, label %26, label %21

21:                                               ; preds = %6, %6, %11
  %22 = phi i64 [ %18, %11 ], [ 0, %6 ], [ 0, %6 ]
  %23 = phi i64 [ %19, %11 ], [ 0, %6 ], [ 0, %6 ]
  %24 = getelementptr inbounds i8, i8* %7, i64 1
  %25 = icmp eq i8* %24, %4
  br i1 %25, label %128, label %6

26:                                               ; preds = %11, %3
  %27 = phi i8* [ %1, %3 ], [ %7, %11 ]
  %28 = phi i64 [ 0, %3 ], [ %18, %11 ]
  %29 = icmp eq i8* %27, %4
  br i1 %29, label %128, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i32** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.url_pattern_index::UrlPatternIndexBuilder"* %0 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = lshr exact i64 %36, 2
  %38 = trunc i64 %37 to i32
  %39 = add i32 %38, -1
  %40 = inttoptr i64 %35 to i32*
  %41 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  br label %42

42:                                               ; preds = %30, %126
  %43 = phi i64 [ -1, %30 ], [ %101, %126 ]
  %44 = phi i64 [ 0, %30 ], [ %100, %126 ]
  %45 = phi i64 [ %28, %30 ], [ %118, %126 ]
  %46 = phi i8* [ %27, %30 ], [ %107, %126 ]
  %47 = xor i64 %45, -1
  %48 = shl i64 %45, 18
  %49 = add i64 %48, %47
  %50 = lshr i64 %49, 31
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 21
  %53 = lshr i64 %52, 11
  %54 = xor i64 %53, %52
  %55 = mul i64 %54, 65
  %56 = lshr i64 %55, 22
  %57 = xor i64 %56, %55
  %58 = trunc i64 %57 to i32
  %59 = and i32 %39, %58
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %40, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, -1
  br i1 %63, label %94, label %64

64:                                               ; preds = %42
  %65 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %41, align 8
  br label %66

66:                                               ; preds = %74, %64
  %67 = phi i32 [ %62, %64 ], [ %80, %74 ]
  %68 = phi i32 [ %59, %64 ], [ %77, %74 ]
  %69 = phi i32 [ 1, %64 ], [ %76, %74 ]
  %70 = zext i32 %67 to i64
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %65, i64 %70, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, %45
  br i1 %73, label %82, label %74

74:                                               ; preds = %66
  %75 = add i32 %69, %68
  %76 = add i32 %69, 1
  %77 = and i32 %75, %39
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds i32, i32* %40, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, -1
  br i1 %81, label %94, label %66

82:                                               ; preds = %66
  %83 = zext i32 %67 to i64
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %65, i64 %83, i32 1
  %85 = icmp eq %"class.std::__1::vector.41"* %84, null
  br i1 %85, label %94, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %65, i64 %83, i32 1, i32 0, i32 1
  %88 = bitcast %"struct.flatbuffers::Offset.1"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.std::__1::vector.41"* %84 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %89, %91
  %93 = ashr exact i64 %92, 2
  br label %94

94:                                               ; preds = %74, %42, %82, %86
  %95 = phi i64 [ %93, %86 ], [ 0, %82 ], [ 0, %42 ], [ 0, %74 ]
  %96 = icmp ult i64 %95, %43
  br i1 %96, label %97, label %99

97:                                               ; preds = %94
  %98 = icmp eq i64 %95, 0
  br i1 %98, label %128, label %99

99:                                               ; preds = %94, %97
  %100 = phi i64 [ %45, %97 ], [ %44, %94 ]
  %101 = phi i64 [ %95, %97 ], [ %43, %94 ]
  %102 = getelementptr inbounds i8, i8* %46, i64 1
  %103 = icmp eq i8* %102, %4
  br i1 %103, label %128, label %104

104:                                              ; preds = %99
  %105 = and i64 %45, -1095216660481
  br label %106

106:                                              ; preds = %104, %121
  %107 = phi i8* [ %124, %121 ], [ %102, %104 ]
  %108 = phi i64 [ %122, %121 ], [ %105, %104 ]
  %109 = phi i64 [ %123, %121 ], [ 4, %104 ]
  %110 = load i8, i8* %107, align 1
  switch i8 %110, label %111 [
    i8 94, label %121
    i8 42, label %121
  ]

111:                                              ; preds = %106
  %112 = shl i64 %108, 8
  %113 = add i8 %110, -65
  %114 = icmp ult i8 %113, 26
  %115 = add i8 %110, 32
  %116 = select i1 %114, i8 %115, i8 %110
  %117 = sext i8 %116 to i64
  %118 = or i64 %112, %117
  %119 = add i64 %109, 1
  %120 = icmp eq i64 %119, 5
  br i1 %120, label %126, label %121

121:                                              ; preds = %106, %106, %111
  %122 = phi i64 [ %118, %111 ], [ 0, %106 ], [ 0, %106 ]
  %123 = phi i64 [ %119, %111 ], [ 0, %106 ], [ 0, %106 ]
  %124 = getelementptr inbounds i8, i8* %107, i64 1
  %125 = icmp eq i8* %124, %4
  br i1 %125, label %128, label %106

126:                                              ; preds = %111
  %127 = icmp eq i8* %107, %4
  br i1 %127, label %128, label %42

128:                                              ; preds = %21, %99, %97, %126, %121, %26
  %129 = phi i64 [ 0, %26 ], [ %100, %121 ], [ %100, %99 ], [ %100, %126 ], [ %45, %97 ], [ 0, %21 ]
  ret i64 %129
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::vector.41"* @_ZN17url_pattern_index13ClosedHashMapImNSt3__16vectorIN11flatbuffers6OffsetINS_4flat7UrlRuleEEENS1_9allocatorIS7_EEEENS_21SimpleQuadraticProberImNS_20Uint64ToUint32HasherEEEEixERKm(%"class.url_pattern_index::ClosedHashMap"*, i64* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.41", align 8
  %4 = getelementptr inbounds %"class.url_pattern_index::ClosedHashMap", %"class.url_pattern_index::ClosedHashMap"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast i32** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.url_pattern_index::ClosedHashMap"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr exact i64 %9, 2
  %11 = trunc i64 %10 to i32
  %12 = add i32 %11, -1
  %13 = load i64, i64* %1, align 8
  %14 = xor i64 %13, -1
  %15 = shl i64 %13, 18
  %16 = add i64 %15, %14
  %17 = lshr i64 %16, 31
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, 21
  %20 = lshr i64 %19, 11
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 65
  %23 = lshr i64 %22, 22
  %24 = xor i64 %23, %22
  %25 = trunc i64 %24 to i32
  %26 = and i32 %12, %25
  %27 = zext i32 %26 to i64
  %28 = inttoptr i64 %8 to i32*
  %29 = getelementptr inbounds i32, i32* %28, i64 %27
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %51, label %32

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.url_pattern_index::ClosedHashMap", %"class.url_pattern_index::ClosedHashMap"* %0, i64 0, i32 1, i32 0, i32 0
  %34 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %33, align 8
  br label %35

35:                                               ; preds = %43, %32
  %36 = phi i32 [ %30, %32 ], [ %49, %43 ]
  %37 = phi i32 [ %26, %32 ], [ %46, %43 ]
  %38 = phi i32 [ 1, %32 ], [ %45, %43 ]
  %39 = zext i32 %36 to i64
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 %39, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, %13
  br i1 %42, label %63, label %43

43:                                               ; preds = %35
  %44 = add i32 %38, %37
  %45 = add i32 %38, 1
  %46 = and i32 %44, %12
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i32, i32* %28, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %51, label %35

51:                                               ; preds = %43, %2
  %52 = phi i32 [ %26, %2 ], [ %46, %43 ]
  %53 = bitcast %"class.std::__1::vector.41"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #20
  %54 = call i32 @_ZN17url_pattern_index13ClosedHashMapImNSt3__16vectorIN11flatbuffers6OffsetINS_4flat7UrlRuleEEENS1_9allocatorIS7_EEEENS_21SimpleQuadraticProberImNS_20Uint64ToUint32HasherEEEE15EmplaceKeyValueEjmSA_(%"class.url_pattern_index::ClosedHashMap"* %0, i32 %52, i64 %13, %"class.std::__1::vector.41"* nonnull %3)
  %55 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %3, i64 0, i32 0, i32 0
  %56 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %55, align 8
  %57 = icmp eq %"struct.flatbuffers::Offset.1"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %51
  %59 = ptrtoint %"struct.flatbuffers::Offset.1"* %56 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %3, i64 0, i32 0, i32 1
  %61 = bitcast %"struct.flatbuffers::Offset.1"** %60 to i64*
  store i64 %59, i64* %61, align 8
  %62 = bitcast %"struct.flatbuffers::Offset.1"* %56 to i8*
  call void @_ZdlPv(i8* %62) #21
  br label %63

63:                                               ; preds = %35, %58, %51
  %64 = phi i32 [ %54, %51 ], [ %54, %58 ], [ %36, %35 ]
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.url_pattern_index::ClosedHashMap", %"class.url_pattern_index::ClosedHashMap"* %0, i64 0, i32 1, i32 0, i32 0
  %67 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %67, i64 %65, i32 1
  ret %"class.std::__1::vector.41"* %68
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN17url_pattern_index22UrlPatternIndexBuilder6FinishEv(%"class.url_pattern_index::UrlPatternIndexBuilder"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %class.anon.63, align 8
  %3 = alloca %class.anon.63, align 8
  %4 = alloca %"struct.url_pattern_index::flat::NGramToRulesBuilder", align 8
  %5 = alloca %"struct.url_pattern_index::flat::NGramToRulesBuilder", align 8
  %6 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.url_pattern_index::UrlPatternIndexBuilder"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = lshr exact i64 %12, 2
  %14 = and i64 %13, 4294967295
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %29, label %16

16:                                               ; preds = %1
  %17 = shl nuw nsw i64 %14, 2
  %18 = tail call i8* @_Znwm(i64 %17) #21
  %19 = bitcast i8* %18 to %"struct.flatbuffers::Offset.56"*
  %20 = ptrtoint i8* %18 to i64
  %21 = getelementptr inbounds %"struct.flatbuffers::Offset.56", %"struct.flatbuffers::Offset.56"* %19, i64 %14
  %22 = add nsw i64 %14, -1
  %23 = getelementptr %"struct.flatbuffers::Offset.56", %"struct.flatbuffers::Offset.56"* %19, i64 %22, i32 0
  %24 = ptrtoint i32* %23 to i64
  %25 = sub i64 4, %20
  %26 = add i64 %25, %24
  %27 = and i64 %26, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %18, i8 0, i64 %27, i1 false) #20
  %28 = ptrtoint %"struct.flatbuffers::Offset.56"* %21 to i64
  br label %29

29:                                               ; preds = %1, %16
  %30 = phi i64 [ 0, %1 ], [ %28, %16 ]
  %31 = phi i8* [ null, %1 ], [ %18, %16 ]
  %32 = phi %"struct.flatbuffers::Offset.56"* [ null, %1 ], [ %19, %16 ]
  %33 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 2
  %34 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %33, align 8
  %35 = bitcast %"struct.url_pattern_index::flat::NGramToRulesBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #20
  %36 = getelementptr inbounds %"struct.url_pattern_index::flat::NGramToRulesBuilder", %"struct.url_pattern_index::flat::NGramToRulesBuilder"* %4, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.url_pattern_index::flat::NGramToRulesBuilder", %"struct.url_pattern_index::flat::NGramToRulesBuilder"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 16, i1 false) #20
  store %"class.flatbuffers::FlatBufferBuilder"* %34, %"class.flatbuffers::FlatBufferBuilder"** %36, align 8
  %38 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %34, i64 0, i32 3
  store i8 1, i8* %38, align 2
  %39 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %34, i64 0, i32 0, i32 4
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %34, i64 0, i32 0, i32 6
  %42 = bitcast i8** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %34, i64 0, i32 0, i32 5
  %45 = bitcast i8** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %40, %43
  %48 = add i64 %47, %46
  %49 = trunc i64 %48 to i32
  store i32 %49, i32* %37, align 8
  tail call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementImEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %34, i16 zeroext 4, i64 0, i64 0) #20
  call void @_ZN17url_pattern_index4flat19NGramToRulesBuilder13add_rule_listEN11flatbuffers6OffsetINS2_6VectorINS3_INS0_7UrlRuleEEEEEEE(%"struct.url_pattern_index::flat::NGramToRulesBuilder"* nonnull %4, i32 0) #20
  %50 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %36, align 8
  %51 = load i32, i32* %37, align 8
  %52 = call i32 @_ZN11flatbuffers17FlatBufferBuilder8EndTableEj(%"class.flatbuffers::FlatBufferBuilder"* %50, i32 %51) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #20
  %53 = load i64, i64* %8, align 8
  %54 = load i64, i64* %10, align 8
  %55 = sub i64 %53, %54
  %56 = lshr exact i64 %55, 2
  %57 = and i64 %56, 4294967295
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %29
  %60 = inttoptr i64 %54 to i32*
  %61 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %64 = bitcast %"struct.std::__1::pair"** %63 to i64*
  %65 = bitcast %"class.std::__1::vector.39"* %62 to i64*
  %66 = bitcast %class.anon.63* %2 to i8*
  %67 = getelementptr inbounds %class.anon.63, %class.anon.63* %2, i64 0, i32 0
  %68 = bitcast %"struct.url_pattern_index::flat::NGramToRulesBuilder"* %5 to i8*
  %69 = getelementptr inbounds %"struct.url_pattern_index::flat::NGramToRulesBuilder", %"struct.url_pattern_index::flat::NGramToRulesBuilder"* %5, i64 0, i32 0
  %70 = getelementptr inbounds %"struct.url_pattern_index::flat::NGramToRulesBuilder", %"struct.url_pattern_index::flat::NGramToRulesBuilder"* %5, i64 0, i32 1
  br label %123

71:                                               ; preds = %181, %29
  %72 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %33, align 8
  %73 = inttoptr i64 %30 to %"struct.flatbuffers::Offset.56"*
  %74 = icmp eq %"struct.flatbuffers::Offset.56"* %32, %73
  %75 = select i1 %74, %"struct.flatbuffers::Offset.56"* bitcast (i8* @_ZZN11flatbuffers4dataINS_6OffsetIN17url_pattern_index4flat12NGramToRulesEEENSt3__19allocatorIS5_EEEEPKT_RKNS6_6vectorIS9_T0_EEE1t to %"struct.flatbuffers::Offset.56"*), %"struct.flatbuffers::Offset.56"* %32
  %76 = ptrtoint %"struct.flatbuffers::Offset.56"* %32 to i64
  %77 = sub i64 %30, %76
  %78 = ashr exact i64 %77, 2
  call void @_ZN11flatbuffers17FlatBufferBuilder11StartVectorEmm(%"class.flatbuffers::FlatBufferBuilder"* %72, i64 %78, i64 4) #20
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %87, label %80

80:                                               ; preds = %71, %80
  %81 = phi i64 [ %82, %80 ], [ %78, %71 ]
  %82 = add i64 %81, -1
  %83 = getelementptr inbounds %"struct.flatbuffers::Offset.56", %"struct.flatbuffers::Offset.56"* %75, i64 %82, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIN17url_pattern_index4flat12NGramToRulesEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %72, i32 %84) #20
  %86 = icmp eq i64 %82, 0
  br i1 %86, label %87, label %80

87:                                               ; preds = %80, %71
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %72, i64 0, i32 3
  store i8 0, i8* %88, align 2
  %89 = trunc i64 %78 to i32
  %90 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %72, i32 %89) #20
  %91 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 1, i32 0, i32 0
  %92 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %91, align 8
  %93 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, i64 0, i32 1, i32 0, i32 1
  %94 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %93, align 8
  %95 = bitcast %class.anon.63* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95)
  %96 = getelementptr inbounds %class.anon.63, %class.anon.63* %3, i64 0, i32 0
  store %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, %"class.url_pattern_index::UrlPatternIndexBuilder"** %96, align 8
  call fastcc void @"_ZNSt3__16__sortIRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEvT0_SB_T_"(%"struct.flatbuffers::Offset.1"* %92, %"struct.flatbuffers::Offset.1"* %94, %class.anon.63* nonnull dereferenceable(8) %3) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95)
  %97 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %33, align 8
  %98 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %91, align 8
  %99 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %93, align 8
  %100 = icmp eq %"struct.flatbuffers::Offset.1"* %98, %99
  %101 = select i1 %100, %"struct.flatbuffers::Offset.1"* bitcast (i8* @_ZZN11flatbuffers4dataINS_6OffsetIN17url_pattern_index4flat7UrlRuleEEENSt3__19allocatorIS5_EEEEPKT_RKNS6_6vectorIS9_T0_EEE1t to %"struct.flatbuffers::Offset.1"*), %"struct.flatbuffers::Offset.1"* %98
  %102 = ptrtoint %"struct.flatbuffers::Offset.1"* %99 to i64
  %103 = ptrtoint %"struct.flatbuffers::Offset.1"* %98 to i64
  %104 = sub i64 %102, %103
  %105 = ashr exact i64 %104, 2
  call void @_ZN11flatbuffers17FlatBufferBuilder11StartVectorEmm(%"class.flatbuffers::FlatBufferBuilder"* %97, i64 %105, i64 4) #20
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %114, label %107

107:                                              ; preds = %87, %107
  %108 = phi i64 [ %109, %107 ], [ %105, %87 ]
  %109 = add i64 %108, -1
  %110 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %101, i64 %109, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIN17url_pattern_index4flat7UrlRuleEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %97, i32 %111) #20
  %113 = icmp eq i64 %109, 0
  br i1 %113, label %114, label %107

114:                                              ; preds = %107, %87
  %115 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %97, i64 0, i32 3
  store i8 0, i8* %115, align 2
  %116 = trunc i64 %105 to i32
  %117 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %97, i32 %116) #20
  %118 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %33, align 8
  %119 = call i32 @_ZN17url_pattern_index4flat21CreateUrlPatternIndexERN11flatbuffers17FlatBufferBuilderEjNS1_6OffsetINS1_6VectorINS4_INS0_12NGramToRulesEEEEEEES7_NS4_INS5_INS4_INS0_7UrlRuleEEEEEEE(%"class.flatbuffers::FlatBufferBuilder"* dereferenceable(96) %118, i32 5, i32 %90, i32 %52, i32 %117)
  %120 = icmp eq %"struct.flatbuffers::Offset.56"* %32, null
  br i1 %120, label %122, label %121

121:                                              ; preds = %114
  call void @_ZdlPv(i8* %31) #21
  br label %122

122:                                              ; preds = %114, %121
  ret i32 %119

123:                                              ; preds = %186, %59
  %124 = phi i32* [ %60, %59 ], [ %187, %186 ]
  %125 = phi i64 [ 0, %59 ], [ %184, %186 ]
  %126 = getelementptr inbounds i32, i32* %124, i64 %125
  %127 = load i32, i32* %126, align 4
  %128 = load i64, i64* %64, align 8
  %129 = load i64, i64* %65, align 8
  %130 = sub i64 %128, %129
  %131 = lshr exact i64 %130, 5
  %132 = trunc i64 %131 to i32
  %133 = icmp ult i32 %127, %132
  br i1 %133, label %134, label %181

134:                                              ; preds = %123
  %135 = inttoptr i64 %129 to %"struct.std::__1::pair"*
  %136 = zext i32 %127 to i64
  %137 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %135, i64 %136, i32 0
  %138 = call dereferenceable(24) %"class.std::__1::vector.41"* @_ZN17url_pattern_index13ClosedHashMapImNSt3__16vectorIN11flatbuffers6OffsetINS_4flat7UrlRuleEEENS1_9allocatorIS7_EEEENS_21SimpleQuadraticProberImNS_20Uint64ToUint32HasherEEEEixERKm(%"class.url_pattern_index::ClosedHashMap"* %6, i64* dereferenceable(8) %137)
  %139 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %138, i64 0, i32 0, i32 0
  %140 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %139, align 8
  %141 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %138, i64 0, i32 0, i32 1
  %142 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %141, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66)
  store %"class.url_pattern_index::UrlPatternIndexBuilder"* %0, %"class.url_pattern_index::UrlPatternIndexBuilder"** %67, align 8
  call fastcc void @"_ZNSt3__16__sortIRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEvT0_SB_T_"(%"struct.flatbuffers::Offset.1"* %140, %"struct.flatbuffers::Offset.1"* %142, %class.anon.63* nonnull dereferenceable(8) %2) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66)
  %143 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %33, align 8
  %144 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %139, align 8
  %145 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %141, align 8
  %146 = icmp eq %"struct.flatbuffers::Offset.1"* %144, %145
  %147 = select i1 %146, %"struct.flatbuffers::Offset.1"* bitcast (i8* @_ZZN11flatbuffers4dataINS_6OffsetIN17url_pattern_index4flat7UrlRuleEEENSt3__19allocatorIS5_EEEEPKT_RKNS6_6vectorIS9_T0_EEE1t to %"struct.flatbuffers::Offset.1"*), %"struct.flatbuffers::Offset.1"* %144
  %148 = ptrtoint %"struct.flatbuffers::Offset.1"* %145 to i64
  %149 = ptrtoint %"struct.flatbuffers::Offset.1"* %144 to i64
  %150 = sub i64 %148, %149
  %151 = ashr exact i64 %150, 2
  call void @_ZN11flatbuffers17FlatBufferBuilder11StartVectorEmm(%"class.flatbuffers::FlatBufferBuilder"* %143, i64 %151, i64 4) #20
  %152 = icmp eq i64 %150, 0
  br i1 %152, label %160, label %153

153:                                              ; preds = %134, %153
  %154 = phi i64 [ %155, %153 ], [ %151, %134 ]
  %155 = add i64 %154, -1
  %156 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %147, i64 %155, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIN17url_pattern_index4flat7UrlRuleEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %143, i32 %157) #20
  %159 = icmp eq i64 %155, 0
  br i1 %159, label %160, label %153

160:                                              ; preds = %153, %134
  %161 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %143, i64 0, i32 3
  store i8 0, i8* %161, align 2
  %162 = trunc i64 %151 to i32
  %163 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %143, i32 %162) #20
  %164 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %33, align 8
  %165 = load i64, i64* %137, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 16, i1 false) #20
  store %"class.flatbuffers::FlatBufferBuilder"* %164, %"class.flatbuffers::FlatBufferBuilder"** %69, align 8
  %166 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %164, i64 0, i32 3
  store i8 1, i8* %166, align 2
  %167 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %164, i64 0, i32 0, i32 4
  %168 = load i64, i64* %167, align 8
  %169 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %164, i64 0, i32 0, i32 6
  %170 = bitcast i8** %169 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %164, i64 0, i32 0, i32 5
  %173 = bitcast i8** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %168, %171
  %176 = add i64 %175, %174
  %177 = trunc i64 %176 to i32
  store i32 %177, i32* %70, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementImEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %164, i16 zeroext 4, i64 %165, i64 0) #20
  call void @_ZN17url_pattern_index4flat19NGramToRulesBuilder13add_rule_listEN11flatbuffers6OffsetINS2_6VectorINS3_INS0_7UrlRuleEEEEEEE(%"struct.url_pattern_index::flat::NGramToRulesBuilder"* nonnull %5, i32 %163) #20
  %178 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %69, align 8
  %179 = load i32, i32* %70, align 8
  %180 = call i32 @_ZN11flatbuffers17FlatBufferBuilder8EndTableEj(%"class.flatbuffers::FlatBufferBuilder"* %178, i32 %179) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #20
  br label %181

181:                                              ; preds = %123, %160
  %182 = phi i32 [ %180, %160 ], [ %52, %123 ]
  %183 = getelementptr inbounds %"struct.flatbuffers::Offset.56", %"struct.flatbuffers::Offset.56"* %32, i64 %125, i32 0
  store i32 %182, i32* %183, align 4
  %184 = add nuw nsw i64 %125, 1
  %185 = icmp eq i64 %184, %57
  br i1 %185, label %71, label %186

186:                                              ; preds = %181
  %187 = load i32*, i32** %61, align 8
  br label %123
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN17url_pattern_index4flat21CreateUrlPatternIndexERN11flatbuffers17FlatBufferBuilderEjNS1_6OffsetINS1_6VectorINS4_INS0_12NGramToRulesEEEEEEES7_NS4_INS5_INS4_INS0_7UrlRuleEEEEEEE(%"class.flatbuffers::FlatBufferBuilder"* dereferenceable(96), i32, i32, i32, i32) local_unnamed_addr #4 comdat {
  %6 = alloca %"struct.url_pattern_index::flat::UrlPatternIndexBuilder", align 8
  %7 = bitcast %"struct.url_pattern_index::flat::UrlPatternIndexBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #20
  %8 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndexBuilder", %"struct.url_pattern_index::flat::UrlPatternIndexBuilder"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndexBuilder", %"struct.url_pattern_index::flat::UrlPatternIndexBuilder"* %6, i64 0, i32 1
  %10 = bitcast %"struct.url_pattern_index::flat::UrlPatternIndexBuilder"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  store %"class.flatbuffers::FlatBufferBuilder"* %0, %"class.flatbuffers::FlatBufferBuilder"** %8, align 8
  %11 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 3
  store i8 1, i8* %11, align 2
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = trunc i64 %21 to i32
  store i32 %22, i32* %9, align 8
  call void @_ZN17url_pattern_index4flat22UrlPatternIndexBuilder18add_fallback_rulesEN11flatbuffers6OffsetINS2_6VectorINS3_INS0_7UrlRuleEEEEEEE(%"struct.url_pattern_index::flat::UrlPatternIndexBuilder"* nonnull %6, i32 %4)
  call void @_ZN17url_pattern_index4flat22UrlPatternIndexBuilder26add_ngram_index_empty_slotEN11flatbuffers6OffsetINS0_12NGramToRulesEEE(%"struct.url_pattern_index::flat::UrlPatternIndexBuilder"* nonnull %6, i32 %3)
  call void @_ZN17url_pattern_index4flat22UrlPatternIndexBuilder15add_ngram_indexEN11flatbuffers6OffsetINS2_6VectorINS3_INS0_12NGramToRulesEEEEEEE(%"struct.url_pattern_index::flat::UrlPatternIndexBuilder"* nonnull %6, i32 %2)
  %23 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %8, align 8
  %24 = icmp eq i32 %1, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %5
  %26 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %23, i64 0, i32 6
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %59, label %29

29:                                               ; preds = %25, %5
  %30 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %23, i32 %1) #20
  %31 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %23, i64 0, i32 0, i32 6
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %23, i64 0, i32 0, i32 7
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %33, %36
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %41, label %39

39:                                               ; preds = %29
  %40 = inttoptr i64 %36 to i64*
  br label %45

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %23, i64 0, i32 0
  call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %42, i64 8) #20
  %43 = bitcast i8** %34 to i64**
  %44 = load i64*, i64** %43, align 8
  br label %45

45:                                               ; preds = %41, %39
  %46 = phi i64* [ %40, %39 ], [ %44, %41 ]
  %47 = zext i32 %30 to i64
  %48 = or i64 %47, -6149102324041121792
  store i64 %48, i64* %46, align 4
  %49 = load i8*, i8** %34, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 8
  store i8* %50, i8** %34, align 8
  %51 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %23, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = add i32 %52, 1
  store i32 %53, i32* %51, align 8
  %54 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %23, i64 0, i32 2
  %55 = load i16, i16* %54, align 2
  %56 = icmp ugt i16 %55, 4
  %57 = select i1 %56, i16 %55, i16 4
  store i16 %57, i16* %54, align 4
  %58 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %8, align 8
  br label %59

59:                                               ; preds = %25, %45
  %60 = phi %"class.flatbuffers::FlatBufferBuilder"* [ %23, %25 ], [ %58, %45 ]
  %61 = load i32, i32* %9, align 8
  %62 = call i32 @_ZN11flatbuffers17FlatBufferBuilder8EndTableEj(%"class.flatbuffers::FlatBufferBuilder"* %60, i32 %61) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #20
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17url_pattern_index25DoesOriginMatchDomainListERKN3url6OriginERKNS_4flat7UrlRuleEb(%"class.url::Origin"* dereferenceable(80), %"struct.url_pattern_index::flat::UrlRule"* dereferenceable(1), i1 zeroext) local_unnamed_addr #2 {
  %4 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %1 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %5 to i64
  %7 = sub nsw i64 0, %6
  %8 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %1, i64 0, i32 0, i32 0, i64 %7
  %9 = bitcast i8* %8 to i16*
  %10 = load i16, i16* %9, align 2
  %11 = icmp ugt i16 %10, 18
  br i1 %11, label %12, label %25

12:                                               ; preds = %3
  %13 = getelementptr inbounds i8, i8* %8, i64 18
  %14 = bitcast i8* %13 to i16*
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i64
  %17 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %1, i64 0, i32 0, i32 0, i64 %16
  %18 = icmp eq i16 %15, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %12
  %20 = bitcast i8* %17 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %17, i64 %22
  %24 = icmp eq i8* %23, null
  br label %25

25:                                               ; preds = %3, %12, %19
  %26 = phi i1 [ %24, %19 ], [ true, %12 ], [ true, %3 ]
  %27 = and i1 %26, %2
  br i1 %27, label %79, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 8, !range !3
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %79

32:                                               ; preds = %28
  br i1 %26, label %55, label %33

33:                                               ; preds = %32
  br i1 %11, label %34, label %47

34:                                               ; preds = %33
  %35 = getelementptr inbounds i8, i8* %8, i64 18
  %36 = bitcast i8* %35 to i16*
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i64
  %39 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %1, i64 0, i32 0, i32 0, i64 %38
  %40 = icmp eq i16 %37, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %34
  %42 = bitcast i8* %39 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %39, i64 %44
  %46 = bitcast i8* %45 to %"class.flatbuffers::Vector.69"*
  br label %47

47:                                               ; preds = %41, %34, %33
  %48 = phi %"class.flatbuffers::Vector.69"* [ %46, %41 ], [ null, %34 ], [ null, %33 ]
  %49 = tail call fastcc i64 @_ZN17url_pattern_index12_GLOBAL__N_127GetLongestMatchingSubdomainERKN3url6OriginERKN11flatbuffers6VectorINS5_6OffsetINS5_6StringEEEEE(%"class.url::Origin"* dereferenceable(80) %0, %"class.flatbuffers::Vector.69"* dereferenceable(4) %48)
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %79, label %51

51:                                               ; preds = %47
  %52 = load i32, i32* %4, align 4
  %53 = sext i32 %52 to i64
  %54 = sub nsw i64 0, %53
  br label %55

55:                                               ; preds = %51, %32
  %56 = phi i64 [ %54, %51 ], [ %7, %32 ]
  %57 = phi i64 [ %49, %51 ], [ 1, %32 ]
  %58 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %1, i64 0, i32 0, i32 0, i64 %56
  %59 = bitcast i8* %58 to i16*
  %60 = load i16, i16* %59, align 2
  %61 = icmp ugt i16 %60, 20
  br i1 %61, label %62, label %79

62:                                               ; preds = %55
  %63 = getelementptr inbounds i8, i8* %58, i64 20
  %64 = bitcast i8* %63 to i16*
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i64
  %67 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %1, i64 0, i32 0, i32 0, i64 %66
  %68 = icmp eq i16 %65, 0
  br i1 %68, label %79, label %69

69:                                               ; preds = %62
  %70 = bitcast i8* %67 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %67, i64 %72
  %74 = icmp eq i8* %73, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %69
  %76 = bitcast i8* %73 to %"class.flatbuffers::Vector.69"*
  %77 = tail call fastcc i64 @_ZN17url_pattern_index12_GLOBAL__N_127GetLongestMatchingSubdomainERKN3url6OriginERKN11flatbuffers6VectorINS5_6OffsetINS5_6StringEEEEE(%"class.url::Origin"* dereferenceable(80) %0, %"class.flatbuffers::Vector.69"* nonnull dereferenceable(4) %76)
  %78 = icmp ult i64 %77, %57
  br label %79

79:                                               ; preds = %47, %28, %25, %55, %62, %75, %69
  %80 = phi i1 [ false, %25 ], [ %26, %28 ], [ %78, %75 ], [ true, %69 ], [ false, %47 ], [ true, %62 ], [ true, %55 ]
  ret i1 %80
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN17url_pattern_index12_GLOBAL__N_127GetLongestMatchingSubdomainERKN3url6OriginERKN11flatbuffers6VectorINS5_6OffsetINS5_6StringEEEEE(%"class.url::Origin"* dereferenceable(80), %"class.flatbuffers::Vector.69"* dereferenceable(4)) unnamed_addr #2 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = getelementptr inbounds %"class.flatbuffers::Vector.69", %"class.flatbuffers::Vector.69"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp ult i32 %5, 6
  br i1 %6, label %7, label %33

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.flatbuffers::Vector.69", %"class.flatbuffers::Vector.69"* %1, i64 1, i32 0
  %9 = zext i32 %5 to i64
  %10 = getelementptr inbounds i32, i32* %8, i64 %9
  %11 = bitcast i32* %10 to i8*
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %31, label %13

13:                                               ; preds = %7
  %14 = bitcast i32* %8 to i8*
  br label %17

15:                                               ; preds = %17
  %16 = icmp eq i8* %28, %11
  br i1 %16, label %31, label %17

17:                                               ; preds = %13, %15
  %18 = phi i8* [ %28, %15 ], [ %14, %13 ]
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %18, i64 %21
  %23 = getelementptr inbounds i8, i8* %22, i64 4
  %24 = bitcast i8* %22 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = tail call zeroext i1 @_ZNK3url6Origin8DomainIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.url::Origin"* %0, i8* %23, i64 %26) #20
  %28 = getelementptr inbounds i8, i8* %18, i64 4
  br i1 %27, label %29, label %15

29:                                               ; preds = %17
  %30 = zext i32 %25 to i64
  br label %31

31:                                               ; preds = %15, %29, %7
  %32 = phi i64 [ 0, %7 ], [ %30, %29 ], [ 0, %15 ]
  ret i64 %32

33:                                               ; preds = %2
  %34 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #20
  %35 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %36 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %37 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 16, i1 false)
  %39 = load i8, i8* %37, align 8, !range !3
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 1
  br label %45

43:                                               ; preds = %33
  %44 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #20
  br label %45

45:                                               ; preds = %41, %43
  %46 = phi %"class.std::__1::basic_string"* [ %42, %41 ], [ %44, %43 ]
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %54 = select i1 %50, i8* %52, i8* %53
  store i8* %54, i8** %35, align 8
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %49 to i64
  %58 = select i1 %50, i64 %56, i64 %57
  store i64 %58, i64* %36, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %137, label %60

60:                                               ; preds = %45
  %61 = add i64 %58, -1
  %62 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %3, i64 %61) #20
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 46
  br i1 %64, label %65, label %66

65:                                               ; preds = %60
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_suffixEm(%"class.base::BasicStringPiece"* nonnull %3, i64 1)
  br label %66

66:                                               ; preds = %65, %60
  %67 = getelementptr inbounds %"class.flatbuffers::Vector.69", %"class.flatbuffers::Vector.69"* %1, i64 1, i32 0
  br label %68

68:                                               ; preds = %131, %66
  %69 = phi i64 [ 0, %66 ], [ %136, %131 ]
  %70 = phi i32 [ 0, %66 ], [ %107, %131 ]
  %71 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %3, i64 %69, i64 -1)
  %72 = extractvalue { i8*, i64 } %71, 0
  %73 = extractvalue { i8*, i64 } %71, 1
  %74 = load i32, i32* %4, align 4
  %75 = add i32 %70, 1
  %76 = icmp ult i32 %75, %74
  br i1 %76, label %77, label %106

77:                                               ; preds = %68, %99
  %78 = phi i32 [ %103, %99 ], [ %70, %68 ]
  %79 = phi i32 [ %102, %99 ], [ %74, %68 ]
  %80 = sub i32 %79, %78
  %81 = lshr i32 %80, 1
  %82 = add i32 %81, %78
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds i32, i32* %67, i64 %83
  %85 = bitcast i32* %84 to i8*
  %86 = load i32, i32* %84, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %85, i64 %87
  %89 = bitcast i8* %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i64
  %92 = icmp eq i64 %73, %91
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = icmp ult i64 %73, %91
  %95 = select i1 %94, i32 -1, i32 1
  br label %99

96:                                               ; preds = %77
  %97 = getelementptr inbounds i8, i8* %88, i64 4
  %98 = call i32 @memcmp(i8* %97, i8* %72, i64 %73) #20
  br label %99

99:                                               ; preds = %96, %93
  %100 = phi i32 [ %95, %93 ], [ %98, %96 ]
  %101 = icmp slt i32 %100, 1
  %102 = select i1 %101, i32 %79, i32 %82
  %103 = select i1 %101, i32 %82, i32 %78
  %104 = add i32 %103, 1
  %105 = icmp ult i32 %104, %102
  br i1 %105, label %77, label %106

106:                                              ; preds = %99, %68
  %107 = phi i32 [ %70, %68 ], [ %103, %99 ]
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i32, i32* %67, i64 %108
  %110 = bitcast i32* %109 to i8*
  %111 = load i32, i32* %109, align 4
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds i8, i8* %110, i64 %112
  %114 = bitcast i8* %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i64
  %117 = icmp eq i64 %73, %116
  br i1 %117, label %118, label %122

118:                                              ; preds = %106
  %119 = getelementptr inbounds i8, i8* %113, i64 4
  %120 = call i32 @bcmp(i8* %119, i8* %72, i64 %73) #20
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %137, label %122

122:                                              ; preds = %106, %118
  %123 = load i64, i64* %36, align 8
  %124 = icmp ugt i64 %123, %69
  br i1 %124, label %125, label %137

125:                                              ; preds = %122
  %126 = load i8*, i8** %35, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 %69
  %128 = sub i64 %123, %69
  %129 = call i8* @memchr(i8* %127, i32 46, i64 %128) #20
  %130 = icmp eq i8* %129, null
  br i1 %130, label %137, label %131

131:                                              ; preds = %125
  %132 = ptrtoint i8* %129 to i64
  %133 = ptrtoint i8* %126 to i64
  %134 = sub i64 %132, %133
  %135 = icmp eq i64 %134, -1
  %136 = add nuw i64 %134, 1
  br i1 %135, label %137, label %68

137:                                              ; preds = %125, %122, %118, %131, %45
  %138 = phi i64 [ 0, %45 ], [ 0, %125 ], [ 0, %122 ], [ %73, %118 ], [ 0, %131 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #20
  ret i64 %138
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17url_pattern_index18DoesRuleFlagsMatchERKNS_4flat7UrlRuleENS0_11ElementTypeENS0_14ActivationTypeENS0_13RequestMethodEbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEE(%"struct.url_pattern_index::flat::UrlRule"* dereferenceable(1), i32, i32, i32, i1 zeroext, %"class.base::RepeatingCallback"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 {
  %7 = icmp eq i32 %1, 0
  br i1 %7, label %32, label %8

8:                                                ; preds = %6
  %9 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %0 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = sub nsw i64 0, %11
  %13 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %0, i64 0, i32 0, i32 0, i64 %12
  %14 = bitcast i8* %13 to i16*
  %15 = load i16, i16* %14, align 2
  %16 = icmp ugt i16 %15, 6
  br i1 %16, label %17, label %28

17:                                               ; preds = %8
  %18 = getelementptr inbounds i8, i8* %13, i64 6
  %19 = bitcast i8* %18 to i16*
  %20 = load i16, i16* %19, align 2
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %17
  %23 = zext i16 %20 to i64
  %24 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %0, i64 0, i32 0, i32 0, i64 %23
  %25 = bitcast i8* %24 to i16*
  %26 = load i16, i16* %25, align 2
  %27 = zext i16 %26 to i32
  br label %28

28:                                               ; preds = %8, %17, %22
  %29 = phi i32 [ %27, %22 ], [ 8191, %17 ], [ 8191, %8 ]
  %30 = and i32 %29, %1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %138, label %32

32:                                               ; preds = %28, %6
  %33 = icmp eq i32 %2, 0
  br i1 %33, label %57, label %34

34:                                               ; preds = %32
  %35 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %0 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = sub nsw i64 0, %37
  %39 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %0, i64 0, i32 0, i32 0, i64 %38
  %40 = bitcast i8* %39 to i16*
  %41 = load i16, i16* %40, align 2
  %42 = icmp ugt i16 %41, 10
  br i1 %42, label %43, label %53

43:                                               ; preds = %34
  %44 = getelementptr inbounds i8, i8* %39, i64 10
  %45 = bitcast i8* %44 to i16*
  %46 = load i16, i16* %45, align 2
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = zext i16 %46 to i64
  %50 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %0, i64 0, i32 0, i32 0, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  br label %53

53:                                               ; preds = %34, %43, %48
  %54 = phi i32 [ %52, %48 ], [ 0, %43 ], [ 0, %34 ]
  %55 = and i32 %54, %2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %138, label %57

57:                                               ; preds = %53, %32
  %58 = icmp eq i32 %3, 0
  %59 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %0 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %60 to i64
  %62 = sub nsw i64 0, %61
  br i1 %58, label %83, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %0, i64 0, i32 0, i32 0, i64 %62
  %65 = bitcast i8* %64 to i16*
  %66 = load i16, i16* %65, align 2
  %67 = icmp ugt i16 %66, 8
  br i1 %67, label %68, label %79

68:                                               ; preds = %63
  %69 = getelementptr inbounds i8, i8* %64, i64 8
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp eq i16 %71, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %68
  %74 = zext i16 %71 to i64
  %75 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %0, i64 0, i32 0, i32 0, i64 %74
  %76 = bitcast i8* %75 to i16*
  %77 = load i16, i16* %76, align 2
  %78 = zext i16 %77 to i32
  br label %79

79:                                               ; preds = %63, %68, %73
  %80 = phi i32 [ %78, %73 ], [ 127, %68 ], [ 127, %63 ]
  %81 = and i32 %80, %3
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %138, label %83

83:                                               ; preds = %57, %79
  %84 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %0, i64 0, i32 0, i32 0, i64 %62
  %85 = bitcast i8* %84 to i16*
  %86 = load i16, i16* %85, align 2
  %87 = icmp ugt i16 %86, 4
  br i1 %4, label %88, label %100

88:                                               ; preds = %83
  br i1 %87, label %89, label %138

89:                                               ; preds = %88
  %90 = getelementptr inbounds i8, i8* %84, i64 4
  %91 = bitcast i8* %90 to i16*
  %92 = load i16, i16* %91, align 2
  %93 = icmp eq i16 %92, 0
  br i1 %93, label %138, label %94

94:                                               ; preds = %89
  %95 = zext i16 %92 to i64
  %96 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %0, i64 0, i32 0, i32 0, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = and i8 %97, 4
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %138, label %112

100:                                              ; preds = %83
  br i1 %87, label %101, label %138

101:                                              ; preds = %100
  %102 = getelementptr inbounds i8, i8* %84, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = icmp eq i16 %104, 0
  br i1 %105, label %138, label %106

106:                                              ; preds = %101
  %107 = zext i16 %104 to i64
  %108 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %0, i64 0, i32 0, i32 0, i64 %107
  %109 = load i8, i8* %108, align 1
  %110 = and i8 %109, 2
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %138, label %112

112:                                              ; preds = %94, %106
  %113 = icmp ugt i16 %86, 28
  br i1 %113, label %114, label %137

114:                                              ; preds = %112
  %115 = getelementptr inbounds i8, i8* %84, i64 28
  %116 = bitcast i8* %115 to i16*
  %117 = load i16, i16* %116, align 2
  %118 = zext i16 %117 to i64
  %119 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %0, i64 0, i32 0, i32 0, i64 %118
  %120 = icmp eq i16 %117, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %114
  %122 = bitcast i8* %119 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds i8, i8* %119, i64 %124
  %126 = icmp eq i8* %125, null
  br i1 %126, label %137, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %129 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %128, align 8
  %130 = icmp eq %"class.base::internal::BindStateBase"* %129, null
  br i1 %130, label %137, label %131

131:                                              ; preds = %127
  %132 = bitcast i8* %125 to %"class.flatbuffers::Vector.70"*
  %133 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %129, i64 0, i32 1
  %134 = bitcast void ()** %133 to i1 (%"class.base::internal::BindStateBase"*, %"class.flatbuffers::Vector.70"*)**
  %135 = load i1 (%"class.base::internal::BindStateBase"*, %"class.flatbuffers::Vector.70"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.flatbuffers::Vector.70"*)** %134, align 8
  %136 = tail call zeroext i1 %135(%"class.base::internal::BindStateBase"* nonnull %129, %"class.flatbuffers::Vector.70"* nonnull dereferenceable(4) %132) #20
  br i1 %136, label %137, label %138

137:                                              ; preds = %112, %114, %121, %131, %127
  br label %138

138:                                              ; preds = %100, %101, %88, %89, %131, %106, %94, %79, %53, %28, %137
  %139 = phi i1 [ true, %137 ], [ false, %28 ], [ false, %53 ], [ false, %79 ], [ false, %94 ], [ false, %106 ], [ false, %131 ], [ false, %89 ], [ false, %88 ], [ false, %101 ], [ false, %100 ]
  ret i1 %139
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN17url_pattern_index22UrlPatternIndexMatcherC2EPKNS_4flat15UrlPatternIndexE(%"class.url_pattern_index::UrlPatternIndexMatcher"* nocapture, %"struct.url_pattern_index::flat::UrlPatternIndex"*) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %0, i64 0, i32 0
  store %"struct.url_pattern_index::flat::UrlPatternIndex"* %1, %"struct.url_pattern_index::flat::UrlPatternIndex"** %3, align 8
  %4 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN17url_pattern_index22UrlPatternIndexMatcherD2Ev(%"class.url_pattern_index::UrlPatternIndexMatcher"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17url_pattern_index22UrlPatternIndexMatcherC2EOS0_(%"class.url_pattern_index::UrlPatternIndexMatcher"* nocapture, %"class.url_pattern_index::UrlPatternIndexMatcher"* nocapture readonly dereferenceable(24)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.url_pattern_index::UrlPatternIndexMatcher"* %0 to i8*
  %4 = bitcast %"class.url_pattern_index::UrlPatternIndexMatcher"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.url_pattern_index::UrlPatternIndexMatcher"* @_ZN17url_pattern_index22UrlPatternIndexMatcheraSEOS0_(%"class.url_pattern_index::UrlPatternIndexMatcher"* returned, %"class.url_pattern_index::UrlPatternIndexMatcher"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.url_pattern_index::UrlPatternIndexMatcher"* %0 to i8*
  %4 = bitcast %"class.url_pattern_index::UrlPatternIndexMatcher"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  ret %"class.url_pattern_index::UrlPatternIndexMatcher"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK17url_pattern_index22UrlPatternIndexMatcher13GetRulesCountEv(%"class.url_pattern_index::UrlPatternIndexMatcher"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  br label %138

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %0, i64 0, i32 0
  %10 = load %"struct.url_pattern_index::flat::UrlPatternIndex"*, %"struct.url_pattern_index::flat::UrlPatternIndex"** %9, align 8
  %11 = icmp eq %"struct.url_pattern_index::flat::UrlPatternIndex"* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  store i8 1, i8* %2, align 8
  %13 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 0, i64* %13, align 8
  br label %138

14:                                               ; preds = %8
  %15 = bitcast %"struct.url_pattern_index::flat::UrlPatternIndex"* %10 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = sub nsw i64 0, %17
  %19 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndex", %"struct.url_pattern_index::flat::UrlPatternIndex"* %10, i64 0, i32 0, i32 0, i64 %18
  %20 = bitcast i8* %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp ugt i16 %21, 10
  br i1 %22, label %23, label %36

23:                                               ; preds = %14
  %24 = getelementptr inbounds i8, i8* %19, i64 10
  %25 = bitcast i8* %24 to i16*
  %26 = load i16, i16* %25, align 2
  %27 = zext i16 %26 to i64
  %28 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndex", %"struct.url_pattern_index::flat::UrlPatternIndex"* %10, i64 0, i32 0, i32 0, i64 %27
  %29 = icmp eq i16 %26, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %23
  %31 = bitcast i8* %28 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %28, i64 %33
  %35 = bitcast i8* %34 to %"class.flatbuffers::Vector.76"*
  br label %36

36:                                               ; preds = %14, %23, %30
  %37 = phi %"class.flatbuffers::Vector.76"* [ %35, %30 ], [ null, %23 ], [ null, %14 ]
  %38 = getelementptr inbounds %"class.flatbuffers::Vector.76", %"class.flatbuffers::Vector.76"* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  store i8 1, i8* %2, align 8
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %40, i64* %41, align 8
  %42 = load i32, i32* %15, align 4
  %43 = sext i32 %42 to i64
  %44 = sub nsw i64 0, %43
  %45 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndex", %"struct.url_pattern_index::flat::UrlPatternIndex"* %10, i64 0, i32 0, i32 0, i64 %44
  %46 = bitcast i8* %45 to i16*
  %47 = load i16, i16* %46, align 2
  %48 = icmp ugt i16 %47, 6
  br i1 %48, label %49, label %62

49:                                               ; preds = %36
  %50 = getelementptr inbounds i8, i8* %45, i64 6
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndex", %"struct.url_pattern_index::flat::UrlPatternIndex"* %10, i64 0, i32 0, i32 0, i64 %53
  %55 = icmp eq i16 %52, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %49
  %57 = bitcast i8* %54 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %54, i64 %59
  %61 = bitcast i8* %60 to %"class.flatbuffers::Vector.77"*
  br label %62

62:                                               ; preds = %36, %49, %56
  %63 = phi %"class.flatbuffers::Vector.77"* [ %61, %56 ], [ null, %49 ], [ null, %36 ]
  %64 = getelementptr inbounds %"class.flatbuffers::Vector.77", %"class.flatbuffers::Vector.77"* %63, i64 1, i32 0
  %65 = getelementptr inbounds %"class.flatbuffers::Vector.77", %"class.flatbuffers::Vector.77"* %63, i64 0, i32 0
  %66 = load i32, i32* %65, align 4, !noalias !7
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %64, i64 %67
  %69 = bitcast i32* %68 to i8*
  %70 = icmp eq i32 %66, 0
  br i1 %70, label %138, label %71

71:                                               ; preds = %62
  %72 = bitcast i32* %64 to i8*
  br label %73

73:                                               ; preds = %136, %71
  %74 = phi i64 [ %133, %136 ], [ %40, %71 ]
  %75 = phi i32 [ %137, %136 ], [ %42, %71 ]
  %76 = phi i8* [ %134, %136 ], [ %72, %71 ]
  %77 = bitcast i8* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %76, i64 %79
  %81 = bitcast i8* %80 to %"struct.url_pattern_index::flat::NGramToRules"*
  %82 = sext i32 %75 to i64
  %83 = sub nsw i64 0, %82
  %84 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndex", %"struct.url_pattern_index::flat::UrlPatternIndex"* %10, i64 0, i32 0, i32 0, i64 %83
  %85 = bitcast i8* %84 to i16*
  %86 = load i16, i16* %85, align 2
  %87 = icmp ugt i16 %86, 8
  br i1 %87, label %88, label %101

88:                                               ; preds = %73
  %89 = getelementptr inbounds i8, i8* %84, i64 8
  %90 = bitcast i8* %89 to i16*
  %91 = load i16, i16* %90, align 2
  %92 = zext i16 %91 to i64
  %93 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndex", %"struct.url_pattern_index::flat::UrlPatternIndex"* %10, i64 0, i32 0, i32 0, i64 %92
  %94 = icmp eq i16 %91, 0
  br i1 %94, label %101, label %95

95:                                               ; preds = %88
  %96 = bitcast i8* %93 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i8, i8* %93, i64 %98
  %100 = bitcast i8* %99 to %"struct.url_pattern_index::flat::NGramToRules"*
  br label %101

101:                                              ; preds = %73, %88, %95
  %102 = phi %"struct.url_pattern_index::flat::NGramToRules"* [ %100, %95 ], [ null, %88 ], [ null, %73 ]
  %103 = icmp eq %"struct.url_pattern_index::flat::NGramToRules"* %102, %81
  br i1 %103, label %132, label %104

104:                                              ; preds = %101
  %105 = bitcast i8* %80 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = sext i32 %106 to i64
  %108 = sub nsw i64 0, %107
  %109 = getelementptr inbounds %"struct.url_pattern_index::flat::NGramToRules", %"struct.url_pattern_index::flat::NGramToRules"* %81, i64 0, i32 0, i32 0, i64 %108
  %110 = bitcast i8* %109 to i16*
  %111 = load i16, i16* %110, align 2
  %112 = icmp ugt i16 %111, 6
  br i1 %112, label %113, label %126

113:                                              ; preds = %104
  %114 = getelementptr inbounds i8, i8* %109, i64 6
  %115 = bitcast i8* %114 to i16*
  %116 = load i16, i16* %115, align 2
  %117 = zext i16 %116 to i64
  %118 = getelementptr inbounds %"struct.url_pattern_index::flat::NGramToRules", %"struct.url_pattern_index::flat::NGramToRules"* %81, i64 0, i32 0, i32 0, i64 %117
  %119 = icmp eq i16 %116, 0
  br i1 %119, label %126, label %120

120:                                              ; preds = %113
  %121 = bitcast i8* %118 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* %118, i64 %123
  %125 = bitcast i8* %124 to %"class.flatbuffers::Vector.76"*
  br label %126

126:                                              ; preds = %120, %113, %104
  %127 = phi %"class.flatbuffers::Vector.76"* [ %125, %120 ], [ null, %113 ], [ null, %104 ]
  %128 = getelementptr inbounds %"class.flatbuffers::Vector.76", %"class.flatbuffers::Vector.76"* %127, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = zext i32 %129 to i64
  %131 = add i64 %74, %130
  store i64 %131, i64* %41, align 8
  br label %132

132:                                              ; preds = %101, %126
  %133 = phi i64 [ %74, %101 ], [ %131, %126 ]
  %134 = getelementptr inbounds i8, i8* %76, i64 4
  %135 = icmp eq i8* %134, %69
  br i1 %135, label %138, label %136

136:                                              ; preds = %132
  %137 = load i32, i32* %15, align 4
  br label %73

138:                                              ; preds = %132, %62, %12, %5
  %139 = phi i64 [ %7, %5 ], [ 0, %12 ], [ %40, %62 ], [ %133, %132 ]
  ret i64 %139
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.url_pattern_index::flat::UrlRule"* @_ZNK17url_pattern_index22UrlPatternIndexMatcher9FindMatchERK4GURLRKN3url6OriginENS_5proto11ElementTypeENS8_14ActivationTypeEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEENS0_16FindRuleStrategyE(%"class.url_pattern_index::UrlPatternIndexMatcher"* nocapture readonly, %class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80), i32, i32, i1 zeroext, i1 zeroext, %"class.base::RepeatingCallback"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #2 align 2 {
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %21, !prof !2

12:                                               ; preds = %9
  %13 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map) #20
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %12
  %16 = tail call i8* @_Znwm(i64 112) #21
  %17 = bitcast i8* %16 to %"struct.std::__1::pair.95"*
  store i8* %16, i8** bitcast (%"class.base::NoDestructor"* @_ZZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map to i8**), align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 112
  store i8* %18, i8** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map, i64 0, i32 0, i64 16) to i8**), align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %16, i8* align 4 bitcast ([14 x %"struct.std::__1::pair.95"]* @.ref.tmp to i8*), i64 112, i1 false) #20
  %19 = ptrtoint i8* %18 to i64
  store i64 %19, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map, i64 0, i32 0, i64 8) to i64*), align 8
  %20 = bitcast i8* %18 to %"struct.std::__1::pair.95"*
  tail call void @_ZN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS0_8GetFirstENSt3__14lessIvEENS6_6vectorINS6_4pairIS4_NS2_4flat11ElementTypeEEENS6_9allocatorISD_EEEEE15sort_and_uniqueENS6_11__wrap_iterIPSD_EESK_(%"class.base::internal::flat_tree"* bitcast (%"class.base::NoDestructor"* @_ZZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map to %"class.base::internal::flat_tree"*), %"struct.std::__1::pair.95"* nonnull %17, %"struct.std::__1::pair.95"* %20) #20
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map) #20
  br label %21

21:                                               ; preds = %9, %12, %15
  %22 = load %"struct.std::__1::pair.95"*, %"struct.std::__1::pair.95"** bitcast (%"class.base::NoDestructor"* @_ZZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map to %"struct.std::__1::pair.95"**), align 8
  %23 = load i64, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map, i64 0, i32 0, i64 8) to i64*), align 8
  %24 = ptrtoint %"struct.std::__1::pair.95"* %22 to i64
  %25 = sub i64 %23, %24
  %26 = icmp eq i64 %25, 0
  %27 = inttoptr i64 %23 to %"struct.std::__1::pair.95"*
  br i1 %26, label %46, label %28

28:                                               ; preds = %21
  %29 = ashr exact i64 %25, 3
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi %"struct.std::__1::pair.95"* [ %22, %28 ], [ %42, %30 ]
  %32 = phi i64 [ %29, %28 ], [ %41, %30 ]
  %33 = lshr i64 %32, 1
  %34 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %31, i64 %33
  %35 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, %3
  %38 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %34, i64 1
  %39 = xor i64 %33, -1
  %40 = add i64 %32, %39
  %41 = select i1 %37, i64 %40, i64 %33
  %42 = select i1 %37, %"struct.std::__1::pair.95"* %38, %"struct.std::__1::pair.95"* %31
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %44, label %30

44:                                               ; preds = %30
  %45 = ptrtoint %"struct.std::__1::pair.95"* %42 to i64
  br label %46

46:                                               ; preds = %44, %21
  %47 = phi i64 [ %45, %44 ], [ %24, %21 ]
  %48 = phi %"struct.std::__1::pair.95"* [ %42, %44 ], [ %22, %21 ]
  %49 = icmp eq %"struct.std::__1::pair.95"* %48, %27
  br i1 %49, label %57, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %48, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp sgt i32 %52, %3
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %48, i64 1
  %56 = ptrtoint %"struct.std::__1::pair.95"* %55 to i64
  br label %57

57:                                               ; preds = %46, %50, %54
  %58 = phi i64 [ %56, %54 ], [ %47, %46 ], [ %47, %50 ]
  %59 = inttoptr i64 %58 to %"struct.std::__1::pair.95"*
  %60 = icmp eq %"struct.std::__1::pair.95"* %48, %59
  %61 = select i1 %60, %"struct.std::__1::pair.95"* %27, %"struct.std::__1::pair.95"* %48
  %62 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %61, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = load atomic i8, i8* bitcast (i64* @_ZGVZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map to i8*) acquire, align 8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %75, !prof !2

66:                                               ; preds = %57
  %67 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map) #20
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %66
  %70 = tail call i8* @_Znwm(i64 40) #21
  %71 = bitcast i8* %70 to %"struct.std::__1::pair.118"*
  store i8* %70, i8** bitcast (%"class.base::NoDestructor.125"* @_ZZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map to i8**), align 8
  %72 = getelementptr inbounds i8, i8* %70, i64 40
  store i8* %72, i8** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.125", %"class.base::NoDestructor.125"* @_ZZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map, i64 0, i32 0, i64 16) to i8**), align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %70, i8* align 4 bitcast ([5 x %"struct.std::__1::pair.118"]* @.ref.tmp.4 to i8*), i64 40, i1 false) #20
  %73 = ptrtoint i8* %72 to i64
  store i64 %73, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.125", %"class.base::NoDestructor.125"* @_ZZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map, i64 0, i32 0, i64 8) to i64*), align 8
  %74 = bitcast i8* %72 to %"struct.std::__1::pair.118"*
  tail call void @_ZN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS0_8GetFirstENSt3__14lessIvEENS6_6vectorINS6_4pairIS4_NS2_4flat14ActivationTypeEEENS6_9allocatorISD_EEEEE15sort_and_uniqueENS6_11__wrap_iterIPSD_EESK_(%"class.base::internal::flat_tree.115"* bitcast (%"class.base::NoDestructor.125"* @_ZZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map to %"class.base::internal::flat_tree.115"*), %"struct.std::__1::pair.118"* nonnull %71, %"struct.std::__1::pair.118"* %74) #20
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map) #20
  br label %75

75:                                               ; preds = %57, %66, %69
  %76 = load %"struct.std::__1::pair.118"*, %"struct.std::__1::pair.118"** bitcast (%"class.base::NoDestructor.125"* @_ZZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map to %"struct.std::__1::pair.118"**), align 8
  %77 = load i64, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.125", %"class.base::NoDestructor.125"* @_ZZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map, i64 0, i32 0, i64 8) to i64*), align 8
  %78 = ptrtoint %"struct.std::__1::pair.118"* %76 to i64
  %79 = sub i64 %77, %78
  %80 = icmp eq i64 %79, 0
  %81 = inttoptr i64 %77 to %"struct.std::__1::pair.118"*
  br i1 %80, label %100, label %82

82:                                               ; preds = %75
  %83 = ashr exact i64 %79, 3
  br label %84

84:                                               ; preds = %84, %82
  %85 = phi %"struct.std::__1::pair.118"* [ %76, %82 ], [ %96, %84 ]
  %86 = phi i64 [ %83, %82 ], [ %95, %84 ]
  %87 = lshr i64 %86, 1
  %88 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %85, i64 %87
  %89 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %88, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp slt i32 %90, %4
  %92 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %88, i64 1
  %93 = xor i64 %87, -1
  %94 = add i64 %86, %93
  %95 = select i1 %91, i64 %94, i64 %87
  %96 = select i1 %91, %"struct.std::__1::pair.118"* %92, %"struct.std::__1::pair.118"* %85
  %97 = icmp eq i64 %95, 0
  br i1 %97, label %98, label %84

98:                                               ; preds = %84
  %99 = ptrtoint %"struct.std::__1::pair.118"* %96 to i64
  br label %100

100:                                              ; preds = %98, %75
  %101 = phi i64 [ %99, %98 ], [ %78, %75 ]
  %102 = phi %"struct.std::__1::pair.118"* [ %96, %98 ], [ %76, %75 ]
  %103 = icmp eq %"struct.std::__1::pair.118"* %102, %81
  br i1 %103, label %111, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %102, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %106, %4
  br i1 %107, label %111, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %102, i64 1
  %110 = ptrtoint %"struct.std::__1::pair.118"* %109 to i64
  br label %111

111:                                              ; preds = %100, %104, %108
  %112 = phi i64 [ %110, %108 ], [ %101, %100 ], [ %101, %104 ]
  %113 = inttoptr i64 %112 to %"struct.std::__1::pair.118"*
  %114 = icmp eq %"struct.std::__1::pair.118"* %102, %113
  %115 = select i1 %114, %"struct.std::__1::pair.118"* %81, %"struct.std::__1::pair.118"* %102
  %116 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %115, i64 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = tail call %"struct.url_pattern_index::flat::UrlRule"* @_ZNK17url_pattern_index22UrlPatternIndexMatcher9FindMatchERK4GURLRKN3url6OriginENS_4flat11ElementTypeENS8_14ActivationTypeENS8_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEENS0_16FindRuleStrategyE(%"class.url_pattern_index::UrlPatternIndexMatcher"* %0, %class.GURL* dereferenceable(120) %1, %"class.url::Origin"* dereferenceable(80) %2, i32 %63, i32 %117, i32 0, i1 zeroext %5, i1 zeroext %6, %"class.base::RepeatingCallback"* dereferenceable(8) %7, i32 %8)
  ret %"struct.url_pattern_index::flat::UrlRule"* %118
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.url_pattern_index::flat::UrlRule"* @_ZNK17url_pattern_index22UrlPatternIndexMatcher9FindMatchERK4GURLRKN3url6OriginENS_4flat11ElementTypeENS8_14ActivationTypeENS8_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEENS0_16FindRuleStrategyE(%"class.url_pattern_index::UrlPatternIndexMatcher"* nocapture readonly, %class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80), i32, i32, i32, i1 zeroext, i1 zeroext, %"class.base::RepeatingCallback"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #2 align 2 {
  %11 = alloca %"class.url_pattern_index::UrlPattern::UrlInfo", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %0, i64 0, i32 0
  %14 = load %"struct.url_pattern_index::flat::UrlPatternIndex"*, %"struct.url_pattern_index::flat::UrlPatternIndex"** %13, align 8
  %15 = icmp eq %"struct.url_pattern_index::flat::UrlPatternIndex"* %14, null
  br i1 %15, label %59, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 1
  %18 = load i8, i8* %17, align 8, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %59, label %20

20:                                               ; preds = %16
  %21 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %1) #20
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i64 %27, i64 %28
  %30 = load i64, i64* @_ZN3url12kMaxURLCharsE, align 8
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %59, label %32

32:                                               ; preds = %20
  %33 = icmp ne i32 %3, 0
  %34 = icmp eq i32 %4, 0
  %35 = xor i1 %33, %34
  br i1 %35, label %59, label %36

36:                                               ; preds = %32
  %37 = load %"struct.url_pattern_index::flat::UrlPatternIndex"*, %"struct.url_pattern_index::flat::UrlPatternIndex"** %13, align 8
  %38 = bitcast %"class.url_pattern_index::UrlPattern::UrlInfo"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %38) #20
  call void @_ZN17url_pattern_index10UrlPattern7UrlInfoC1ERK4GURL(%"class.url_pattern_index::UrlPattern::UrlInfo"* nonnull %11, %class.GURL* dereferenceable(120) %1) #20
  %39 = call fastcc %"struct.url_pattern_index::flat::UrlRule"* @_ZN17url_pattern_index12_GLOBAL__N_130FindMatchInFlatUrlPatternIndexERKNS_4flat15UrlPatternIndexERKNS_10UrlPattern7UrlInfoERKN3url6OriginENS1_11ElementTypeENS1_14ActivationTypeENS1_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEENS_22UrlPatternIndexMatcher16FindRuleStrategyEPNSt3__16vectorIPKNS1_7UrlRuleENST_9allocatorISX_EEEE(%"struct.url_pattern_index::flat::UrlPatternIndex"* dereferenceable(1) %37, %"class.url_pattern_index::UrlPattern::UrlInfo"* nonnull dereferenceable(72) %11, %"class.url::Origin"* dereferenceable(80) %2, i32 %3, i32 %4, i32 %5, i1 zeroext %6, i1 zeroext %7, %"class.base::RepeatingCallback"* dereferenceable(8) %8, i32 %9, %"class.std::__1::vector.86"* null)
  call void @_ZN17url_pattern_index10UrlPattern7UrlInfoD1Ev(%"class.url_pattern_index::UrlPattern::UrlInfo"* nonnull %11) #20
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %38) #20
  %40 = icmp eq %"struct.url_pattern_index::flat::UrlRule"* %39, null
  br i1 %40, label %59, label %41

41:                                               ; preds = %36
  %42 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), align 16
  %43 = and i8 %42, 25
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %59, label %45, !prof !10

45:                                               ; preds = %41
  %46 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #20
  call void @_ZN17url_pattern_index29FlatUrlRuleToFilterlistStringEPKNS_4flat7UrlRuleE(%"class.std::__1::basic_string"* nonnull sret %12, %"struct.url_pattern_index::flat::UrlRule"* nonnull %39) #20
  %47 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12)
  %48 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #21
  br label %55

55:                                               ; preds = %45, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #20
  %56 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), align 16
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i64 %47) #20
  br label %59

59:                                               ; preds = %16, %41, %58, %55, %36, %32, %20, %10
  %60 = phi %"struct.url_pattern_index::flat::UrlRule"* [ null, %10 ], [ null, %20 ], [ null, %16 ], [ null, %32 ], [ null, %36 ], [ %39, %55 ], [ %39, %58 ], [ %39, %41 ]
  ret %"struct.url_pattern_index::flat::UrlRule"* %60
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.url_pattern_index::flat::UrlRule"* @_ZN17url_pattern_index12_GLOBAL__N_130FindMatchInFlatUrlPatternIndexERKNS_4flat15UrlPatternIndexERKNS_10UrlPattern7UrlInfoERKN3url6OriginENS1_11ElementTypeENS1_14ActivationTypeENS1_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEENS_22UrlPatternIndexMatcher16FindRuleStrategyEPNSt3__16vectorIPKNS1_7UrlRuleENST_9allocatorISX_EEEE(%"struct.url_pattern_index::flat::UrlPatternIndex"* dereferenceable(1), %"class.url_pattern_index::UrlPattern::UrlInfo"* dereferenceable(72), %"class.url::Origin"* dereferenceable(80), i32, i32, i32, i1 zeroext, i1 zeroext, %"class.base::RepeatingCallback"* nocapture readonly dereferenceable(8), i32, %"class.std::__1::vector.86"*) unnamed_addr #2 {
  %12 = bitcast %"struct.url_pattern_index::flat::UrlPatternIndex"* %0 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = sub nsw i64 0, %14
  %16 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndex", %"struct.url_pattern_index::flat::UrlPatternIndex"* %0, i64 0, i32 0, i32 0, i64 %15
  %17 = bitcast i8* %16 to i16*
  %18 = load i16, i16* %17, align 2
  %19 = icmp ugt i16 %18, 6
  br i1 %19, label %20, label %49

20:                                               ; preds = %11
  %21 = getelementptr inbounds i8, i8* %16, i64 6
  %22 = bitcast i8* %21 to i16*
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i64
  %25 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndex", %"struct.url_pattern_index::flat::UrlPatternIndex"* %0, i64 0, i32 0, i32 0, i64 %24
  %26 = icmp eq i16 %23, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %20
  %28 = bitcast i8* %25 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %25, i64 %30
  %32 = bitcast i8* %31 to %"class.flatbuffers::Vector.77"*
  br label %33

33:                                               ; preds = %20, %27
  %34 = phi %"class.flatbuffers::Vector.77"* [ %32, %27 ], [ null, %20 ]
  %35 = icmp ugt i16 %18, 8
  br i1 %35, label %36, label %49

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* %16, i64 8
  %38 = bitcast i8* %37 to i16*
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i64
  %41 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndex", %"struct.url_pattern_index::flat::UrlPatternIndex"* %0, i64 0, i32 0, i32 0, i64 %40
  %42 = icmp eq i16 %39, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %36
  %44 = bitcast i8* %41 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %41, i64 %46
  %48 = bitcast i8* %47 to %"struct.url_pattern_index::flat::NGramToRules"*
  br label %49

49:                                               ; preds = %11, %33, %36, %43
  %50 = phi %"class.flatbuffers::Vector.77"* [ %34, %43 ], [ %34, %36 ], [ %34, %33 ], [ null, %11 ]
  %51 = phi %"struct.url_pattern_index::flat::NGramToRules"* [ %48, %43 ], [ null, %36 ], [ null, %33 ], [ null, %11 ]
  %52 = getelementptr inbounds %"class.url_pattern_index::UrlPattern::UrlInfo", %"class.url_pattern_index::UrlPattern::UrlInfo"* %1, i64 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"class.url_pattern_index::UrlPattern::UrlInfo", %"class.url_pattern_index::UrlPattern::UrlInfo"* %1, i64 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds i8, i8* %53, i64 %55
  %57 = icmp eq i64 %55, 0
  br i1 %57, label %67, label %58

58:                                               ; preds = %49
  %59 = load i8, i8* %53, align 1, !noalias !11
  %60 = add i8 %59, -65
  %61 = icmp ult i8 %60, 26
  %62 = add i8 %59, 32
  %63 = select i1 %61, i8 %62, i8 %59
  %64 = sext i8 %63 to i64
  %65 = getelementptr inbounds i8, i8* %53, i64 1
  %66 = icmp eq i64 %55, 1
  br i1 %66, label %244, label %318

67:                                               ; preds = %351, %49
  %68 = phi i8* [ %53, %49 ], [ %349, %351 ]
  %69 = phi i64 [ 0, %49 ], [ %359, %351 ]
  %70 = icmp eq i8* %68, %56
  br i1 %70, label %244, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.flatbuffers::Vector.77", %"class.flatbuffers::Vector.77"* %50, i64 0, i32 0
  %73 = getelementptr inbounds %"class.flatbuffers::Vector.77", %"class.flatbuffers::Vector.77"* %50, i64 1, i32 0
  br label %74

74:                                               ; preds = %230, %71
  %75 = phi %"struct.url_pattern_index::flat::UrlRule"* [ null, %71 ], [ %227, %230 ]
  %76 = phi i64 [ %69, %71 ], [ %239, %230 ]
  %77 = phi i8* [ %68, %71 ], [ %228, %230 ]
  %78 = load i32, i32* %72, align 4
  %79 = add i32 %78, -1
  %80 = xor i64 %76, -1
  %81 = shl i64 %76, 18
  %82 = add i64 %81, %80
  %83 = lshr i64 %82, 31
  %84 = xor i64 %83, %82
  %85 = mul i64 %84, 21
  %86 = lshr i64 %85, 11
  %87 = xor i64 %86, %85
  %88 = mul i64 %87, 65
  %89 = lshr i64 %88, 22
  %90 = xor i64 %89, %88
  %91 = trunc i64 %90 to i32
  %92 = and i32 %79, %91
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds i32, i32* %73, i64 %93
  %95 = bitcast i32* %94 to i8*
  %96 = load i32, i32* %94, align 4
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %95, i64 %97
  %99 = bitcast i8* %98 to %"struct.url_pattern_index::flat::NGramToRules"*
  %100 = icmp eq %"struct.url_pattern_index::flat::NGramToRules"* %51, %99
  br i1 %100, label %148, label %101

101:                                              ; preds = %74, %133
  %102 = phi i32 [ %140, %133 ], [ %96, %74 ]
  %103 = phi %"struct.url_pattern_index::flat::NGramToRules"* [ %143, %133 ], [ %99, %74 ]
  %104 = phi i8* [ %142, %133 ], [ %98, %74 ]
  %105 = phi i32 [ %136, %133 ], [ %92, %74 ]
  %106 = phi i32 [ %135, %133 ], [ 1, %74 ]
  %107 = bitcast i8* %104 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = sext i32 %108 to i64
  %110 = sub nsw i64 0, %109
  %111 = getelementptr inbounds %"struct.url_pattern_index::flat::NGramToRules", %"struct.url_pattern_index::flat::NGramToRules"* %103, i64 0, i32 0, i32 0, i64 %110
  %112 = bitcast i8* %111 to i16*
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 4
  br i1 %114, label %115, label %125

115:                                              ; preds = %101
  %116 = getelementptr inbounds i8, i8* %111, i64 4
  %117 = bitcast i8* %116 to i16*
  %118 = load i16, i16* %117, align 2
  %119 = icmp eq i16 %118, 0
  br i1 %119, label %125, label %120

120:                                              ; preds = %115
  %121 = zext i16 %118 to i64
  %122 = getelementptr inbounds %"struct.url_pattern_index::flat::NGramToRules", %"struct.url_pattern_index::flat::NGramToRules"* %103, i64 0, i32 0, i32 0, i64 %121
  %123 = bitcast i8* %122 to i64*
  %124 = load i64, i64* %123, align 8
  br label %125

125:                                              ; preds = %120, %115, %101
  %126 = phi i64 [ %124, %120 ], [ 0, %115 ], [ 0, %101 ]
  %127 = icmp eq i64 %126, %76
  br i1 %127, label %128, label %133

128:                                              ; preds = %125
  %129 = zext i32 %105 to i64
  %130 = getelementptr inbounds i32, i32* %73, i64 %129
  %131 = bitcast i32* %130 to i8*
  %132 = zext i32 %102 to i64
  br label %148

133:                                              ; preds = %125
  %134 = add i32 %106, %105
  %135 = add i32 %106, 1
  %136 = and i32 %134, %79
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds i32, i32* %73, i64 %137
  %139 = bitcast i32* %138 to i8*
  %140 = load i32, i32* %138, align 4
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds i8, i8* %139, i64 %141
  %143 = bitcast i8* %142 to %"struct.url_pattern_index::flat::NGramToRules"*
  %144 = icmp eq %"struct.url_pattern_index::flat::NGramToRules"* %51, %143
  br i1 %144, label %145, label %101

145:                                              ; preds = %133
  %146 = bitcast i32* %138 to i8*
  %147 = zext i32 %140 to i64
  br label %148

148:                                              ; preds = %145, %128, %74
  %149 = phi i64 [ %97, %74 ], [ %132, %128 ], [ %147, %145 ]
  %150 = phi i8* [ %95, %74 ], [ %131, %128 ], [ %146, %145 ]
  %151 = getelementptr inbounds i8, i8* %150, i64 %149
  %152 = bitcast i8* %151 to %"struct.url_pattern_index::flat::NGramToRules"*
  %153 = icmp eq %"struct.url_pattern_index::flat::NGramToRules"* %51, %152
  br i1 %153, label %226, label %154

154:                                              ; preds = %148
  %155 = bitcast i8* %151 to i32*
  %156 = load i32, i32* %155, align 4
  %157 = sext i32 %156 to i64
  %158 = sub nsw i64 0, %157
  %159 = getelementptr inbounds %"struct.url_pattern_index::flat::NGramToRules", %"struct.url_pattern_index::flat::NGramToRules"* %152, i64 0, i32 0, i32 0, i64 %158
  %160 = bitcast i8* %159 to i16*
  %161 = load i16, i16* %160, align 2
  %162 = icmp ugt i16 %161, 6
  br i1 %162, label %163, label %176

163:                                              ; preds = %154
  %164 = getelementptr inbounds i8, i8* %159, i64 6
  %165 = bitcast i8* %164 to i16*
  %166 = load i16, i16* %165, align 2
  %167 = zext i16 %166 to i64
  %168 = getelementptr inbounds %"struct.url_pattern_index::flat::NGramToRules", %"struct.url_pattern_index::flat::NGramToRules"* %152, i64 0, i32 0, i32 0, i64 %167
  %169 = icmp eq i16 %166, 0
  br i1 %169, label %176, label %170

170:                                              ; preds = %163
  %171 = bitcast i8* %168 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds i8, i8* %168, i64 %173
  %175 = bitcast i8* %174 to %"class.flatbuffers::Vector.76"*
  br label %176

176:                                              ; preds = %154, %163, %170
  %177 = phi %"class.flatbuffers::Vector.76"* [ %175, %170 ], [ null, %163 ], [ null, %154 ]
  %178 = tail call fastcc %"struct.url_pattern_index::flat::UrlRule"* @_ZN17url_pattern_index12_GLOBAL__N_124FindMatchAmongCandidatesEPKN11flatbuffers6VectorINS1_6OffsetINS_4flat7UrlRuleEEEEERKNS_10UrlPattern7UrlInfoERKN3url6OriginENS4_11ElementTypeENS4_14ActivationTypeENS4_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKNS2_IhEEEEEPNSt3__16vectorIPKS5_NSU_9allocatorISX_EEEE(%"class.flatbuffers::Vector.76"* %177, %"class.url_pattern_index::UrlPattern::UrlInfo"* dereferenceable(72) %1, %"class.url::Origin"* dereferenceable(80) %2, i32 %3, i32 %4, i32 %5, i1 zeroext %6, i1 zeroext %7, %"class.base::RepeatingCallback"* dereferenceable(8) %8, %"class.std::__1::vector.86"* %10)
  %179 = icmp eq %"struct.url_pattern_index::flat::UrlRule"* %178, null
  br i1 %179, label %226, label %180

180:                                              ; preds = %176
  switch i32 %9, label %226 [
    i32 0, label %316
    i32 1, label %181
  ]

181:                                              ; preds = %180
  %182 = icmp eq %"struct.url_pattern_index::flat::UrlRule"* %75, null
  br i1 %182, label %226, label %183

183:                                              ; preds = %181
  %184 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %75 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = sext i32 %185 to i64
  %187 = sub nsw i64 0, %186
  %188 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %75, i64 0, i32 0, i32 0, i64 %187
  %189 = bitcast i8* %188 to i16*
  %190 = load i16, i16* %189, align 2
  %191 = icmp ugt i16 %190, 26
  br i1 %191, label %192, label %202

192:                                              ; preds = %183
  %193 = getelementptr inbounds i8, i8* %188, i64 26
  %194 = bitcast i8* %193 to i16*
  %195 = load i16, i16* %194, align 2
  %196 = icmp eq i16 %195, 0
  br i1 %196, label %202, label %197

197:                                              ; preds = %192
  %198 = zext i16 %195 to i64
  %199 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %75, i64 0, i32 0, i32 0, i64 %198
  %200 = bitcast i8* %199 to i64*
  %201 = load i64, i64* %200, align 8
  br label %202

202:                                              ; preds = %197, %192, %183
  %203 = phi i64 [ %201, %197 ], [ 0, %192 ], [ 0, %183 ]
  %204 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %178 to i32*
  %205 = load i32, i32* %204, align 4
  %206 = sext i32 %205 to i64
  %207 = sub nsw i64 0, %206
  %208 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %178, i64 0, i32 0, i32 0, i64 %207
  %209 = bitcast i8* %208 to i16*
  %210 = load i16, i16* %209, align 2
  %211 = icmp ugt i16 %210, 26
  br i1 %211, label %212, label %222

212:                                              ; preds = %202
  %213 = getelementptr inbounds i8, i8* %208, i64 26
  %214 = bitcast i8* %213 to i16*
  %215 = load i16, i16* %214, align 2
  %216 = icmp eq i16 %215, 0
  br i1 %216, label %222, label %217

217:                                              ; preds = %212
  %218 = zext i16 %215 to i64
  %219 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %178, i64 0, i32 0, i32 0, i64 %218
  %220 = bitcast i8* %219 to i64*
  %221 = load i64, i64* %220, align 8
  br label %222

222:                                              ; preds = %217, %212, %202
  %223 = phi i64 [ %221, %217 ], [ 0, %212 ], [ 0, %202 ]
  %224 = icmp ugt i64 %203, %223
  %225 = select i1 %224, %"struct.url_pattern_index::flat::UrlRule"* %75, %"struct.url_pattern_index::flat::UrlRule"* %178
  br label %226

226:                                              ; preds = %180, %181, %222, %148, %176
  %227 = phi %"struct.url_pattern_index::flat::UrlRule"* [ %75, %176 ], [ %75, %148 ], [ %75, %180 ], [ %225, %222 ], [ %178, %181 ]
  %228 = getelementptr inbounds i8, i8* %77, i64 1
  %229 = icmp eq i8* %228, %56
  br i1 %229, label %240, label %230

230:                                              ; preds = %226
  %231 = load i8, i8* %228, align 1
  %232 = shl i64 %76, 8
  %233 = and i64 %232, -280375465083136
  %234 = add i8 %231, -65
  %235 = icmp ult i8 %234, 26
  %236 = add i8 %231, 32
  %237 = select i1 %235, i8 %236, i8 %231
  %238 = sext i8 %237 to i64
  %239 = or i64 %233, %238
  br label %74

240:                                              ; preds = %226
  %241 = load i32, i32* %12, align 4
  %242 = sext i32 %241 to i64
  %243 = sub nsw i64 0, %242
  br label %244

244:                                              ; preds = %58, %318, %329, %340, %240, %67
  %245 = phi i64 [ %243, %240 ], [ %15, %67 ], [ %15, %340 ], [ %15, %329 ], [ %15, %318 ], [ %15, %58 ]
  %246 = phi %"struct.url_pattern_index::flat::UrlRule"* [ %227, %240 ], [ null, %67 ], [ null, %340 ], [ null, %329 ], [ null, %318 ], [ null, %58 ]
  %247 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndex", %"struct.url_pattern_index::flat::UrlPatternIndex"* %0, i64 0, i32 0, i32 0, i64 %245
  %248 = bitcast i8* %247 to i16*
  %249 = load i16, i16* %248, align 2
  %250 = icmp ugt i16 %249, 10
  br i1 %250, label %251, label %264

251:                                              ; preds = %244
  %252 = getelementptr inbounds i8, i8* %247, i64 10
  %253 = bitcast i8* %252 to i16*
  %254 = load i16, i16* %253, align 2
  %255 = zext i16 %254 to i64
  %256 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndex", %"struct.url_pattern_index::flat::UrlPatternIndex"* %0, i64 0, i32 0, i32 0, i64 %255
  %257 = icmp eq i16 %254, 0
  br i1 %257, label %264, label %258

258:                                              ; preds = %251
  %259 = bitcast i8* %256 to i32*
  %260 = load i32, i32* %259, align 4
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds i8, i8* %256, i64 %261
  %263 = bitcast i8* %262 to %"class.flatbuffers::Vector.76"*
  br label %264

264:                                              ; preds = %244, %251, %258
  %265 = phi %"class.flatbuffers::Vector.76"* [ %263, %258 ], [ null, %251 ], [ null, %244 ]
  %266 = tail call fastcc %"struct.url_pattern_index::flat::UrlRule"* @_ZN17url_pattern_index12_GLOBAL__N_124FindMatchAmongCandidatesEPKN11flatbuffers6VectorINS1_6OffsetINS_4flat7UrlRuleEEEEERKNS_10UrlPattern7UrlInfoERKN3url6OriginENS4_11ElementTypeENS4_14ActivationTypeENS4_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKNS2_IhEEEEEPNSt3__16vectorIPKS5_NSU_9allocatorISX_EEEE(%"class.flatbuffers::Vector.76"* %265, %"class.url_pattern_index::UrlPattern::UrlInfo"* dereferenceable(72) %1, %"class.url::Origin"* dereferenceable(80) %2, i32 %3, i32 %4, i32 %5, i1 zeroext %6, i1 zeroext %7, %"class.base::RepeatingCallback"* dereferenceable(8) %8, %"class.std::__1::vector.86"* %10)
  switch i32 %9, label %315 [
    i32 0, label %316
    i32 1, label %267
    i32 2, label %314
  ]

267:                                              ; preds = %264
  %268 = icmp eq %"struct.url_pattern_index::flat::UrlRule"* %246, null
  br i1 %268, label %316, label %269

269:                                              ; preds = %267
  %270 = icmp eq %"struct.url_pattern_index::flat::UrlRule"* %266, null
  br i1 %270, label %316, label %271

271:                                              ; preds = %269
  %272 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %246 to i32*
  %273 = load i32, i32* %272, align 4
  %274 = sext i32 %273 to i64
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %246, i64 0, i32 0, i32 0, i64 %275
  %277 = bitcast i8* %276 to i16*
  %278 = load i16, i16* %277, align 2
  %279 = icmp ugt i16 %278, 26
  br i1 %279, label %280, label %290

280:                                              ; preds = %271
  %281 = getelementptr inbounds i8, i8* %276, i64 26
  %282 = bitcast i8* %281 to i16*
  %283 = load i16, i16* %282, align 2
  %284 = icmp eq i16 %283, 0
  br i1 %284, label %290, label %285

285:                                              ; preds = %280
  %286 = zext i16 %283 to i64
  %287 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %246, i64 0, i32 0, i32 0, i64 %286
  %288 = bitcast i8* %287 to i64*
  %289 = load i64, i64* %288, align 8
  br label %290

290:                                              ; preds = %285, %280, %271
  %291 = phi i64 [ %289, %285 ], [ 0, %280 ], [ 0, %271 ]
  %292 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %266 to i32*
  %293 = load i32, i32* %292, align 4
  %294 = sext i32 %293 to i64
  %295 = sub nsw i64 0, %294
  %296 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %266, i64 0, i32 0, i32 0, i64 %295
  %297 = bitcast i8* %296 to i16*
  %298 = load i16, i16* %297, align 2
  %299 = icmp ugt i16 %298, 26
  br i1 %299, label %300, label %310

300:                                              ; preds = %290
  %301 = getelementptr inbounds i8, i8* %296, i64 26
  %302 = bitcast i8* %301 to i16*
  %303 = load i16, i16* %302, align 2
  %304 = icmp eq i16 %303, 0
  br i1 %304, label %310, label %305

305:                                              ; preds = %300
  %306 = zext i16 %303 to i64
  %307 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %266, i64 0, i32 0, i32 0, i64 %306
  %308 = bitcast i8* %307 to i64*
  %309 = load i64, i64* %308, align 8
  br label %310

310:                                              ; preds = %305, %300, %290
  %311 = phi i64 [ %309, %305 ], [ 0, %300 ], [ 0, %290 ]
  %312 = icmp ugt i64 %291, %311
  %313 = select i1 %312, %"struct.url_pattern_index::flat::UrlRule"* %246, %"struct.url_pattern_index::flat::UrlRule"* %266
  br label %316

314:                                              ; preds = %264
  br label %316

315:                                              ; preds = %264
  br label %316

316:                                              ; preds = %180, %310, %269, %267, %314, %315, %264
  %317 = phi %"struct.url_pattern_index::flat::UrlRule"* [ null, %315 ], [ null, %314 ], [ %266, %264 ], [ %313, %310 ], [ %266, %267 ], [ %246, %269 ], [ %178, %180 ]
  ret %"struct.url_pattern_index::flat::UrlRule"* %317

318:                                              ; preds = %58
  %319 = shl nsw i64 %64, 8
  %320 = load i8, i8* %65, align 1, !noalias !11
  %321 = add i8 %320, -65
  %322 = icmp ult i8 %321, 26
  %323 = add i8 %320, 32
  %324 = select i1 %322, i8 %323, i8 %320
  %325 = sext i8 %324 to i64
  %326 = or i64 %319, %325
  %327 = getelementptr inbounds i8, i8* %53, i64 2
  %328 = icmp eq i64 %55, 2
  br i1 %328, label %244, label %329

329:                                              ; preds = %318
  %330 = shl nsw i64 %326, 8
  %331 = load i8, i8* %327, align 1, !noalias !11
  %332 = add i8 %331, -65
  %333 = icmp ult i8 %332, 26
  %334 = add i8 %331, 32
  %335 = select i1 %333, i8 %334, i8 %331
  %336 = sext i8 %335 to i64
  %337 = or i64 %330, %336
  %338 = getelementptr inbounds i8, i8* %53, i64 3
  %339 = icmp eq i64 %55, 3
  br i1 %339, label %244, label %340

340:                                              ; preds = %329
  %341 = shl nsw i64 %337, 8
  %342 = load i8, i8* %338, align 1, !noalias !11
  %343 = add i8 %342, -65
  %344 = icmp ult i8 %343, 26
  %345 = add i8 %342, 32
  %346 = select i1 %344, i8 %345, i8 %342
  %347 = sext i8 %346 to i64
  %348 = or i64 %341, %347
  %349 = getelementptr inbounds i8, i8* %53, i64 4
  %350 = icmp eq i64 %55, 4
  br i1 %350, label %244, label %351

351:                                              ; preds = %340
  %352 = shl i64 %348, 8
  %353 = load i8, i8* %349, align 1, !noalias !11
  %354 = add i8 %353, -65
  %355 = icmp ult i8 %354, 26
  %356 = add i8 %353, 32
  %357 = select i1 %355, i8 %356, i8 %353
  %358 = sext i8 %357 to i64
  %359 = or i64 %352, %358
  br label %67
}

declare void @_ZN17url_pattern_index10UrlPattern7UrlInfoC1ERK4GURL(%"class.url_pattern_index::UrlPattern::UrlInfo"*, %class.GURL* dereferenceable(120)) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN17url_pattern_index10UrlPattern7UrlInfoD1Ev(%"class.url_pattern_index::UrlPattern::UrlInfo"*) unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #20
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #20
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #20
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #20
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 7, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  %28 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8**
  store i8* %27, i8** %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #20
  %30 = load i8, i8* %16, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %9, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %9 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #20
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #20
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #20
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #20
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #21
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %16, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #20
  ret i64 %29
}

declare void @_ZN17url_pattern_index29FlatUrlRuleToFilterlistStringEPKNS_4flat7UrlRuleE(%"class.std::__1::basic_string"* sret, %"struct.url_pattern_index::flat::UrlRule"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17url_pattern_index22UrlPatternIndexMatcher14FindAllMatchesERK4GURLRKN3url6OriginENS_5proto11ElementTypeENS8_14ActivationTypeEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEE(%"class.std::__1::vector.86"* noalias nocapture sret, %"class.url_pattern_index::UrlPatternIndexMatcher"* nocapture readonly, %class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80), i32, i32, i1 zeroext, i1 zeroext, %"class.base::RepeatingCallback"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %21, !prof !2

12:                                               ; preds = %9
  %13 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map) #20
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %12
  %16 = tail call i8* @_Znwm(i64 112) #21
  %17 = bitcast i8* %16 to %"struct.std::__1::pair.95"*
  store i8* %16, i8** bitcast (%"class.base::NoDestructor"* @_ZZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map to i8**), align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 112
  store i8* %18, i8** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map, i64 0, i32 0, i64 16) to i8**), align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %16, i8* align 4 bitcast ([14 x %"struct.std::__1::pair.95"]* @.ref.tmp to i8*), i64 112, i1 false) #20
  %19 = ptrtoint i8* %18 to i64
  store i64 %19, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map, i64 0, i32 0, i64 8) to i64*), align 8
  %20 = bitcast i8* %18 to %"struct.std::__1::pair.95"*
  tail call void @_ZN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS0_8GetFirstENSt3__14lessIvEENS6_6vectorINS6_4pairIS4_NS2_4flat11ElementTypeEEENS6_9allocatorISD_EEEEE15sort_and_uniqueENS6_11__wrap_iterIPSD_EESK_(%"class.base::internal::flat_tree"* bitcast (%"class.base::NoDestructor"* @_ZZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map to %"class.base::internal::flat_tree"*), %"struct.std::__1::pair.95"* nonnull %17, %"struct.std::__1::pair.95"* %20) #20
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map) #20
  br label %21

21:                                               ; preds = %9, %12, %15
  %22 = load %"struct.std::__1::pair.95"*, %"struct.std::__1::pair.95"** bitcast (%"class.base::NoDestructor"* @_ZZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map to %"struct.std::__1::pair.95"**), align 8
  %23 = load i64, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN17url_pattern_index12_GLOBAL__N_117GetElementTypeMapEvE16element_type_map, i64 0, i32 0, i64 8) to i64*), align 8
  %24 = ptrtoint %"struct.std::__1::pair.95"* %22 to i64
  %25 = sub i64 %23, %24
  %26 = icmp eq i64 %25, 0
  %27 = inttoptr i64 %23 to %"struct.std::__1::pair.95"*
  br i1 %26, label %46, label %28

28:                                               ; preds = %21
  %29 = ashr exact i64 %25, 3
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi %"struct.std::__1::pair.95"* [ %22, %28 ], [ %42, %30 ]
  %32 = phi i64 [ %29, %28 ], [ %41, %30 ]
  %33 = lshr i64 %32, 1
  %34 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %31, i64 %33
  %35 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, %4
  %38 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %34, i64 1
  %39 = xor i64 %33, -1
  %40 = add i64 %32, %39
  %41 = select i1 %37, i64 %40, i64 %33
  %42 = select i1 %37, %"struct.std::__1::pair.95"* %38, %"struct.std::__1::pair.95"* %31
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %44, label %30

44:                                               ; preds = %30
  %45 = ptrtoint %"struct.std::__1::pair.95"* %42 to i64
  br label %46

46:                                               ; preds = %44, %21
  %47 = phi i64 [ %45, %44 ], [ %24, %21 ]
  %48 = phi %"struct.std::__1::pair.95"* [ %42, %44 ], [ %22, %21 ]
  %49 = icmp eq %"struct.std::__1::pair.95"* %48, %27
  br i1 %49, label %57, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %48, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp sgt i32 %52, %4
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %48, i64 1
  %56 = ptrtoint %"struct.std::__1::pair.95"* %55 to i64
  br label %57

57:                                               ; preds = %46, %50, %54
  %58 = phi i64 [ %56, %54 ], [ %47, %46 ], [ %47, %50 ]
  %59 = inttoptr i64 %58 to %"struct.std::__1::pair.95"*
  %60 = icmp eq %"struct.std::__1::pair.95"* %48, %59
  %61 = select i1 %60, %"struct.std::__1::pair.95"* %27, %"struct.std::__1::pair.95"* %48
  %62 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %61, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = load atomic i8, i8* bitcast (i64* @_ZGVZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map to i8*) acquire, align 8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %75, !prof !2

66:                                               ; preds = %57
  %67 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map) #20
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %66
  %70 = tail call i8* @_Znwm(i64 40) #21
  %71 = bitcast i8* %70 to %"struct.std::__1::pair.118"*
  store i8* %70, i8** bitcast (%"class.base::NoDestructor.125"* @_ZZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map to i8**), align 8
  %72 = getelementptr inbounds i8, i8* %70, i64 40
  store i8* %72, i8** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.125", %"class.base::NoDestructor.125"* @_ZZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map, i64 0, i32 0, i64 16) to i8**), align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %70, i8* align 4 bitcast ([5 x %"struct.std::__1::pair.118"]* @.ref.tmp.4 to i8*), i64 40, i1 false) #20
  %73 = ptrtoint i8* %72 to i64
  store i64 %73, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.125", %"class.base::NoDestructor.125"* @_ZZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map, i64 0, i32 0, i64 8) to i64*), align 8
  %74 = bitcast i8* %72 to %"struct.std::__1::pair.118"*
  tail call void @_ZN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS0_8GetFirstENSt3__14lessIvEENS6_6vectorINS6_4pairIS4_NS2_4flat14ActivationTypeEEENS6_9allocatorISD_EEEEE15sort_and_uniqueENS6_11__wrap_iterIPSD_EESK_(%"class.base::internal::flat_tree.115"* bitcast (%"class.base::NoDestructor.125"* @_ZZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map to %"class.base::internal::flat_tree.115"*), %"struct.std::__1::pair.118"* nonnull %71, %"struct.std::__1::pair.118"* %74) #20
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map) #20
  br label %75

75:                                               ; preds = %57, %66, %69
  %76 = load %"struct.std::__1::pair.118"*, %"struct.std::__1::pair.118"** bitcast (%"class.base::NoDestructor.125"* @_ZZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map to %"struct.std::__1::pair.118"**), align 8
  %77 = load i64, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.125", %"class.base::NoDestructor.125"* @_ZZN17url_pattern_index12_GLOBAL__N_120GetActivationTypeMapEvE19activation_type_map, i64 0, i32 0, i64 8) to i64*), align 8
  %78 = ptrtoint %"struct.std::__1::pair.118"* %76 to i64
  %79 = sub i64 %77, %78
  %80 = icmp eq i64 %79, 0
  %81 = inttoptr i64 %77 to %"struct.std::__1::pair.118"*
  br i1 %80, label %100, label %82

82:                                               ; preds = %75
  %83 = ashr exact i64 %79, 3
  br label %84

84:                                               ; preds = %84, %82
  %85 = phi %"struct.std::__1::pair.118"* [ %76, %82 ], [ %96, %84 ]
  %86 = phi i64 [ %83, %82 ], [ %95, %84 ]
  %87 = lshr i64 %86, 1
  %88 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %85, i64 %87
  %89 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %88, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp slt i32 %90, %5
  %92 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %88, i64 1
  %93 = xor i64 %87, -1
  %94 = add i64 %86, %93
  %95 = select i1 %91, i64 %94, i64 %87
  %96 = select i1 %91, %"struct.std::__1::pair.118"* %92, %"struct.std::__1::pair.118"* %85
  %97 = icmp eq i64 %95, 0
  br i1 %97, label %98, label %84

98:                                               ; preds = %84
  %99 = ptrtoint %"struct.std::__1::pair.118"* %96 to i64
  br label %100

100:                                              ; preds = %98, %75
  %101 = phi i64 [ %99, %98 ], [ %78, %75 ]
  %102 = phi %"struct.std::__1::pair.118"* [ %96, %98 ], [ %76, %75 ]
  %103 = icmp eq %"struct.std::__1::pair.118"* %102, %81
  br i1 %103, label %111, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %102, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %106, %5
  br i1 %107, label %111, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %102, i64 1
  %110 = ptrtoint %"struct.std::__1::pair.118"* %109 to i64
  br label %111

111:                                              ; preds = %100, %104, %108
  %112 = phi i64 [ %110, %108 ], [ %101, %100 ], [ %101, %104 ]
  %113 = inttoptr i64 %112 to %"struct.std::__1::pair.118"*
  %114 = icmp eq %"struct.std::__1::pair.118"* %102, %113
  %115 = select i1 %114, %"struct.std::__1::pair.118"* %81, %"struct.std::__1::pair.118"* %102
  %116 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %115, i64 0, i32 1
  %117 = load i32, i32* %116, align 4
  tail call void @_ZNK17url_pattern_index22UrlPatternIndexMatcher14FindAllMatchesERK4GURLRKN3url6OriginENS_4flat11ElementTypeENS8_14ActivationTypeENS8_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEE(%"class.std::__1::vector.86"* sret %0, %"class.url_pattern_index::UrlPatternIndexMatcher"* %1, %class.GURL* dereferenceable(120) %2, %"class.url::Origin"* dereferenceable(80) %3, i32 %63, i32 %117, i32 0, i1 zeroext %6, i1 zeroext %7, %"class.base::RepeatingCallback"* dereferenceable(8) %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17url_pattern_index22UrlPatternIndexMatcher14FindAllMatchesERK4GURLRKN3url6OriginENS_4flat11ElementTypeENS8_14ActivationTypeENS8_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEE(%"class.std::__1::vector.86"* noalias nocapture sret, %"class.url_pattern_index::UrlPatternIndexMatcher"* nocapture readonly, %class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80), i32, i32, i32, i1 zeroext, i1 zeroext, %"class.base::RepeatingCallback"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %11 = alloca %"class.std::__1::vector.86", align 16
  %12 = alloca %"class.url_pattern_index::UrlPattern::UrlInfo", align 8
  %13 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %1, i64 0, i32 0
  %14 = load %"struct.url_pattern_index::flat::UrlPatternIndex"*, %"struct.url_pattern_index::flat::UrlPatternIndex"** %13, align 8
  %15 = icmp eq %"struct.url_pattern_index::flat::UrlPatternIndex"* %14, null
  br i1 %15, label %32, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 1
  %18 = load i8, i8* %17, align 8, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %16
  %21 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %2) #20
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i64 %27, i64 %28
  %30 = load i64, i64* @_ZN3url12kMaxURLCharsE, align 8
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %16, %10, %20
  %33 = bitcast %"class.std::__1::vector.86"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #20
  br label %53

34:                                               ; preds = %20
  %35 = icmp ne i32 %4, 0
  %36 = icmp eq i32 %5, 0
  %37 = xor i1 %35, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = bitcast %"class.std::__1::vector.86"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #20
  br label %53

40:                                               ; preds = %34
  %41 = bitcast %"class.std::__1::vector.86"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #20
  %42 = getelementptr inbounds %"class.std::__1::vector.86", %"class.std::__1::vector.86"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %41, i8 0, i64 24, i1 false) #20
  %43 = load %"struct.url_pattern_index::flat::UrlPatternIndex"*, %"struct.url_pattern_index::flat::UrlPatternIndex"** %13, align 8
  %44 = bitcast %"class.url_pattern_index::UrlPattern::UrlInfo"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %44) #20
  call void @_ZN17url_pattern_index10UrlPattern7UrlInfoC1ERK4GURL(%"class.url_pattern_index::UrlPattern::UrlInfo"* nonnull %12, %class.GURL* dereferenceable(120) %2) #20
  %45 = call fastcc %"struct.url_pattern_index::flat::UrlRule"* @_ZN17url_pattern_index12_GLOBAL__N_130FindMatchInFlatUrlPatternIndexERKNS_4flat15UrlPatternIndexERKNS_10UrlPattern7UrlInfoERKN3url6OriginENS1_11ElementTypeENS1_14ActivationTypeENS1_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEENS_22UrlPatternIndexMatcher16FindRuleStrategyEPNSt3__16vectorIPKNS1_7UrlRuleENST_9allocatorISX_EEEE(%"struct.url_pattern_index::flat::UrlPatternIndex"* dereferenceable(1) %43, %"class.url_pattern_index::UrlPattern::UrlInfo"* nonnull dereferenceable(72) %12, %"class.url::Origin"* dereferenceable(80) %3, i32 %4, i32 %5, i32 %6, i1 zeroext %7, i1 zeroext %8, %"class.base::RepeatingCallback"* dereferenceable(8) %9, i32 2, %"class.std::__1::vector.86"* nonnull %11)
  call void @_ZN17url_pattern_index10UrlPattern7UrlInfoD1Ev(%"class.url_pattern_index::UrlPattern::UrlInfo"* nonnull %12) #20
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %44) #20
  %46 = bitcast %"class.std::__1::vector.86"* %11 to <2 x i64>*
  %47 = load <2 x i64>, <2 x i64>* %46, align 16
  %48 = bitcast %"class.std::__1::vector.86"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  %49 = bitcast %"struct.url_pattern_index::flat::UrlRule"*** %42 to i64*
  %50 = load i64, i64* %49, align 16
  %51 = getelementptr inbounds %"class.std::__1::vector.86", %"class.std::__1::vector.86"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast %"struct.url_pattern_index::flat::UrlRule"*** %51 to i64*
  store i64 %50, i64* %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #20
  br label %53

53:                                               ; preds = %40, %38, %32
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS0_8GetFirstENSt3__14lessIvEENS6_6vectorINS6_4pairIS4_NS2_4flat11ElementTypeEEENS6_9allocatorISD_EEEEE15sort_and_uniqueENS6_11__wrap_iterIPSD_EESK_(%"class.base::internal::flat_tree"*, %"struct.std::__1::pair.95"*, %"struct.std::__1::pair.95"*) local_unnamed_addr #2 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair.95"* %2 to i64
  %5 = alloca %"struct.base::internal::flat_tree<url_pattern_index::proto::ElementType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType> > > >::value_compare", align 1
  %6 = getelementptr inbounds %"struct.base::internal::flat_tree<url_pattern_index::proto::ElementType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType> > > >::value_compare", %"struct.base::internal::flat_tree<url_pattern_index::proto::ElementType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType> > > >::value_compare"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  %7 = ptrtoint %"struct.std::__1::pair.95"* %1 to i64
  %8 = sub i64 %4, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp sgt i64 %8, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %3
  %12 = icmp slt i64 %9, 1152921504606846975
  %13 = select i1 %12, i64 %9, i64 1152921504606846975
  br label %14

14:                                               ; preds = %19, %11
  %15 = phi i64 [ %20, %19 ], [ %13, %11 ]
  %16 = shl i64 %15, 3
  %17 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %16, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #20
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = lshr i64 %15, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %14

22:                                               ; preds = %19, %3
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat11ElementTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeEl(%"struct.std::__1::pair.95"* %1, %"struct.std::__1::pair.95"* %2, %"struct.base::internal::flat_tree<url_pattern_index::proto::ElementType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType> > > >::value_compare"* nonnull dereferenceable(1) %5, i64 %9, %"struct.std::__1::pair.95"* null, i64 0) #20
  br label %25

23:                                               ; preds = %14
  %24 = bitcast i8* %17 to %"struct.std::__1::pair.95"*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat11ElementTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeEl(%"struct.std::__1::pair.95"* %1, %"struct.std::__1::pair.95"* %2, %"struct.base::internal::flat_tree<url_pattern_index::proto::ElementType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType> > > >::value_compare"* nonnull dereferenceable(1) %5, i64 %9, %"struct.std::__1::pair.95"* nonnull %24, i64 %15) #20
  call void @_ZdlPv(i8* nonnull %17) #21
  br label %25

25:                                               ; preds = %22, %23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  %26 = icmp eq %"struct.std::__1::pair.95"* %1, %2
  br i1 %26, label %107, label %27

27:                                               ; preds = %25, %31
  %28 = phi %"struct.std::__1::pair.95"* [ %29, %31 ], [ %1, %25 ]
  %29 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %28, i64 1
  %30 = icmp eq %"struct.std::__1::pair.95"* %29, %2
  br i1 %30, label %107, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %28, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %29, i64 0, i32 0
  %34 = load i32, i32* %32, align 4
  %35 = load i32, i32* %33, align 4
  %36 = icmp slt i32 %34, %35
  br i1 %36, label %27, label %37

37:                                               ; preds = %31
  %38 = ptrtoint %"struct.std::__1::pair.95"* %28 to i64
  %39 = icmp eq %"struct.std::__1::pair.95"* %28, %2
  br i1 %39, label %107, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %28, i64 2
  %42 = icmp eq %"struct.std::__1::pair.95"* %41, %2
  br i1 %42, label %103, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %28, i64 1
  %45 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %2, i64 -3, i32 0
  %46 = ptrtoint i32* %45 to i64
  %47 = sub i64 %46, %38
  %48 = and i64 %47, 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %67

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %28, i64 0, i32 0
  %52 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %41, i64 0, i32 0
  %53 = load i32, i32* %51, align 4
  %54 = load i32, i32* %52, align 4
  %55 = icmp slt i32 %53, %54
  br i1 %55, label %56, label %63

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %28, i64 1
  %58 = ptrtoint %"struct.std::__1::pair.95"* %57 to i64
  %59 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %57, i64 0, i32 0
  store i32 %54, i32* %59, align 4
  %60 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %28, i64 2, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %28, i64 1, i32 1
  store i32 %61, i32* %62, align 4
  br label %63

63:                                               ; preds = %56, %50
  %64 = phi i64 [ %38, %50 ], [ %58, %56 ]
  %65 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %28, i64 3
  %66 = inttoptr i64 %64 to %"struct.std::__1::pair.95"*
  br label %67

67:                                               ; preds = %63, %43
  %68 = phi i64 [ undef, %43 ], [ %64, %63 ]
  %69 = phi %"struct.std::__1::pair.95"* [ %28, %43 ], [ %66, %63 ]
  %70 = phi %"struct.std::__1::pair.95"* [ %41, %43 ], [ %65, %63 ]
  %71 = phi %"struct.std::__1::pair.95"* [ %44, %43 ], [ %41, %63 ]
  %72 = phi i64 [ %38, %43 ], [ %64, %63 ]
  %73 = icmp ult i64 %47, 8
  br i1 %73, label %100, label %74

74:                                               ; preds = %67, %182
  %75 = phi %"struct.std::__1::pair.95"* [ %186, %182 ], [ %69, %67 ]
  %76 = phi %"struct.std::__1::pair.95"* [ %184, %182 ], [ %70, %67 ]
  %77 = phi %"struct.std::__1::pair.95"* [ %93, %182 ], [ %71, %67 ]
  %78 = phi i64 [ %183, %182 ], [ %72, %67 ]
  %79 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %75, i64 0, i32 0
  %80 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %76, i64 0, i32 0
  %81 = load i32, i32* %79, align 4
  %82 = load i32, i32* %80, align 4
  %83 = icmp slt i32 %81, %82
  br i1 %83, label %84, label %91

84:                                               ; preds = %74
  %85 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %75, i64 1
  %86 = ptrtoint %"struct.std::__1::pair.95"* %85 to i64
  %87 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %85, i64 0, i32 0
  store i32 %82, i32* %87, align 4
  %88 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %77, i64 1, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %75, i64 1, i32 1
  store i32 %89, i32* %90, align 4
  br label %91

91:                                               ; preds = %84, %74
  %92 = phi i64 [ %78, %74 ], [ %86, %84 ]
  %93 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %76, i64 1
  %94 = inttoptr i64 %92 to %"struct.std::__1::pair.95"*
  %95 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %94, i64 0, i32 0
  %96 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %93, i64 0, i32 0
  %97 = load i32, i32* %95, align 4
  %98 = load i32, i32* %96, align 4
  %99 = icmp slt i32 %97, %98
  br i1 %99, label %175, label %182

100:                                              ; preds = %182, %67
  %101 = phi i64 [ %68, %67 ], [ %183, %182 ]
  %102 = inttoptr i64 %101 to %"struct.std::__1::pair.95"*
  br label %103

103:                                              ; preds = %100, %40
  %104 = phi %"struct.std::__1::pair.95"* [ %28, %40 ], [ %102, %100 ]
  %105 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %104, i64 1
  %106 = ptrtoint %"struct.std::__1::pair.95"* %105 to i64
  br label %107

107:                                              ; preds = %27, %25, %37, %103
  %108 = phi i64 [ %106, %103 ], [ %38, %37 ], [ %4, %25 ], [ %4, %27 ]
  %109 = inttoptr i64 %108 to %"struct.std::__1::pair.95"*
  %110 = icmp eq %"struct.std::__1::pair.95"* %109, %2
  br i1 %110, label %174, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %113 = load %"struct.std::__1::pair.95"*, %"struct.std::__1::pair.95"** %112, align 8
  %114 = icmp eq %"struct.std::__1::pair.95"* %113, %2
  br i1 %114, label %172, label %115

115:                                              ; preds = %111
  %116 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %113, i64 -1, i32 0
  %117 = ptrtoint i32* %116 to i64
  %118 = sub i64 %117, %4
  %119 = lshr i64 %118, 3
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 3
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %137, label %123

123:                                              ; preds = %115, %123
  %124 = phi %"struct.std::__1::pair.95"* [ %134, %123 ], [ %109, %115 ]
  %125 = phi %"struct.std::__1::pair.95"* [ %133, %123 ], [ %2, %115 ]
  %126 = phi i64 [ %135, %123 ], [ %121, %115 ]
  %127 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %125, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %124, i64 0, i32 0
  store i32 %128, i32* %129, align 4
  %130 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %125, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %124, i64 0, i32 1
  store i32 %131, i32* %132, align 4
  %133 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %125, i64 1
  %134 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %124, i64 1
  %135 = add i64 %126, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %123, !llvm.loop !14

137:                                              ; preds = %123, %115
  %138 = phi %"struct.std::__1::pair.95"* [ undef, %115 ], [ %134, %123 ]
  %139 = phi %"struct.std::__1::pair.95"* [ %109, %115 ], [ %134, %123 ]
  %140 = phi %"struct.std::__1::pair.95"* [ %2, %115 ], [ %133, %123 ]
  %141 = icmp ult i64 %118, 24
  br i1 %141, label %172, label %142

142:                                              ; preds = %137, %142
  %143 = phi %"struct.std::__1::pair.95"* [ %170, %142 ], [ %139, %137 ]
  %144 = phi %"struct.std::__1::pair.95"* [ %169, %142 ], [ %140, %137 ]
  %145 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %144, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %143, i64 0, i32 0
  store i32 %146, i32* %147, align 4
  %148 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %144, i64 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %143, i64 0, i32 1
  store i32 %149, i32* %150, align 4
  %151 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %144, i64 1, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %143, i64 1, i32 0
  store i32 %152, i32* %153, align 4
  %154 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %144, i64 1, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %143, i64 1, i32 1
  store i32 %155, i32* %156, align 4
  %157 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %144, i64 2, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %143, i64 2, i32 0
  store i32 %158, i32* %159, align 4
  %160 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %144, i64 2, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %143, i64 2, i32 1
  store i32 %161, i32* %162, align 4
  %163 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %144, i64 3, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %143, i64 3, i32 0
  store i32 %164, i32* %165, align 4
  %166 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %144, i64 3, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %143, i64 3, i32 1
  store i32 %167, i32* %168, align 4
  %169 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %144, i64 4
  %170 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %143, i64 4
  %171 = icmp eq %"struct.std::__1::pair.95"* %169, %113
  br i1 %171, label %172, label %142

172:                                              ; preds = %137, %142, %111
  %173 = phi %"struct.std::__1::pair.95"* [ %109, %111 ], [ %138, %137 ], [ %170, %142 ]
  store %"struct.std::__1::pair.95"* %173, %"struct.std::__1::pair.95"** %112, align 8
  br label %174

174:                                              ; preds = %107, %172
  ret void

175:                                              ; preds = %91
  %176 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %94, i64 1
  %177 = ptrtoint %"struct.std::__1::pair.95"* %176 to i64
  %178 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %176, i64 0, i32 0
  store i32 %98, i32* %178, align 4
  %179 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %76, i64 1, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %94, i64 1, i32 1
  store i32 %180, i32* %181, align 4
  br label %182

182:                                              ; preds = %175, %91
  %183 = phi i64 [ %92, %91 ], [ %177, %175 ]
  %184 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %76, i64 2
  %185 = icmp eq %"struct.std::__1::pair.95"* %184, %2
  %186 = inttoptr i64 %183 to %"struct.std::__1::pair.95"*
  br i1 %185, label %100, label %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat11ElementTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeEl(%"struct.std::__1::pair.95"*, %"struct.std::__1::pair.95"*, %"struct.base::internal::flat_tree<url_pattern_index::proto::ElementType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType> > > >::value_compare"* dereferenceable(1), i64, %"struct.std::__1::pair.95"*, i64) local_unnamed_addr #2 comdat {
  switch i64 %3, label %18 [
    i64 0, label %206
    i64 1, label %206
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %1, i64 -1, i32 0
  %9 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %0, i64 0, i32 0
  %10 = load i32, i32* %8, align 4
  %11 = load i32, i32* %9, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %206

13:                                               ; preds = %7
  store i32 %10, i32* %9, align 4
  store i32 %11, i32* %8, align 4
  %14 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %1, i64 -1, i32 1
  %16 = load i32, i32* %14, align 4
  %17 = load i32, i32* %15, align 4
  store i32 %17, i32* %14, align 4
  store i32 %16, i32* %15, align 4
  br label %206

18:                                               ; preds = %6
  %19 = icmp slt i64 %3, 1
  br i1 %19, label %20, label %51

20:                                               ; preds = %18
  %21 = icmp eq %"struct.std::__1::pair.95"* %0, %1
  br i1 %21, label %206, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %0, i64 1
  %24 = icmp eq %"struct.std::__1::pair.95"* %23, %1
  br i1 %24, label %206, label %25

25:                                               ; preds = %22, %39
  %26 = phi %"struct.std::__1::pair.95"* [ %43, %39 ], [ %23, %22 ]
  %27 = bitcast %"struct.std::__1::pair.95"* %26 to i64*
  %28 = load i64, i64* %27, align 4
  %29 = trunc i64 %28 to i32
  %30 = lshr i64 %28, 32
  %31 = trunc i64 %30 to i32
  %32 = icmp eq %"struct.std::__1::pair.95"* %26, %0
  br i1 %32, label %39, label %33

33:                                               ; preds = %25, %45
  %34 = phi %"struct.std::__1::pair.95"* [ %35, %45 ], [ %26, %25 ]
  %35 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %34, i64 -1
  %36 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %37, %29
  br i1 %38, label %45, label %39

39:                                               ; preds = %45, %33, %25
  %40 = phi %"struct.std::__1::pair.95"* [ %0, %25 ], [ %34, %33 ], [ %0, %45 ]
  %41 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %40, i64 0, i32 0
  store i32 %29, i32* %41, align 4
  %42 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %40, i64 0, i32 1
  store i32 %31, i32* %42, align 4
  %43 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %26, i64 1
  %44 = icmp eq %"struct.std::__1::pair.95"* %43, %1
  br i1 %44, label %206, label %25

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %34, i64 0, i32 0
  store i32 %37, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %34, i64 -1, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %34, i64 0, i32 1
  store i32 %48, i32* %49, align 4
  %50 = icmp eq %"struct.std::__1::pair.95"* %35, %0
  br i1 %50, label %39, label %33

51:                                               ; preds = %18
  %52 = lshr i64 %3, 1
  %53 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %0, i64 %52
  %54 = icmp sgt i64 %3, %5
  br i1 %54, label %204, label %55

55:                                               ; preds = %51
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat11ElementTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeE(%"struct.std::__1::pair.95"* %0, %"struct.std::__1::pair.95"* %53, %"struct.base::internal::flat_tree<url_pattern_index::proto::ElementType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType> > > >::value_compare"* dereferenceable(1) %2, i64 %52, %"struct.std::__1::pair.95"* %4)
  %56 = sub nsw i64 %3, %52
  %57 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %4, i64 %52
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat11ElementTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeE(%"struct.std::__1::pair.95"* %53, %"struct.std::__1::pair.95"* %1, %"struct.base::internal::flat_tree<url_pattern_index::proto::ElementType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType> > > >::value_compare"* dereferenceable(1) %2, i64 %56, %"struct.std::__1::pair.95"* %57)
  %58 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %4, i64 %3
  br label %89

59:                                               ; preds = %165
  %60 = icmp eq %"struct.std::__1::pair.95"* %167, %58
  br i1 %60, label %206, label %61

61:                                               ; preds = %59
  %62 = ptrtoint %"struct.std::__1::pair.95"* %167 to i64
  %63 = add i64 %3, -1
  %64 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %4, i64 %63, i32 0
  %65 = ptrtoint i32* %64 to i64
  %66 = sub i64 %65, %62
  %67 = lshr i64 %66, 3
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %85, label %71

71:                                               ; preds = %61, %71
  %72 = phi %"struct.std::__1::pair.95"* [ %81, %71 ], [ %167, %61 ]
  %73 = phi %"struct.std::__1::pair.95"* [ %82, %71 ], [ %172, %61 ]
  %74 = phi i64 [ %83, %71 ], [ %69, %61 ]
  %75 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %72, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %73, i64 0, i32 0
  store i32 %76, i32* %77, align 4
  %78 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %72, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %73, i64 0, i32 1
  store i32 %79, i32* %80, align 4
  %81 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %72, i64 1
  %82 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %73, i64 1
  %83 = add i64 %74, -1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %71, !llvm.loop !16

85:                                               ; preds = %71, %61
  %86 = phi %"struct.std::__1::pair.95"* [ %167, %61 ], [ %81, %71 ]
  %87 = phi %"struct.std::__1::pair.95"* [ %172, %61 ], [ %82, %71 ]
  %88 = icmp ult i64 %66, 24
  br i1 %88, label %206, label %174

89:                                               ; preds = %55, %165
  %90 = phi %"struct.std::__1::pair.95"* [ %168, %165 ], [ %4, %55 ]
  %91 = phi %"struct.std::__1::pair.95"* [ %167, %165 ], [ %57, %55 ]
  %92 = phi %"struct.std::__1::pair.95"* [ %172, %165 ], [ %0, %55 ]
  %93 = icmp eq %"struct.std::__1::pair.95"* %91, %58
  br i1 %93, label %94, label %154

94:                                               ; preds = %89
  %95 = icmp eq %"struct.std::__1::pair.95"* %90, %57
  br i1 %95, label %206, label %96

96:                                               ; preds = %94
  %97 = ptrtoint %"struct.std::__1::pair.95"* %90 to i64
  %98 = add nsw i64 %52, -1
  %99 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %4, i64 %98, i32 0
  %100 = ptrtoint i32* %99 to i64
  %101 = sub i64 %100, %97
  %102 = lshr i64 %101, 3
  %103 = add nuw nsw i64 %102, 1
  %104 = and i64 %103, 3
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %120, label %106

106:                                              ; preds = %96, %106
  %107 = phi %"struct.std::__1::pair.95"* [ %116, %106 ], [ %90, %96 ]
  %108 = phi %"struct.std::__1::pair.95"* [ %117, %106 ], [ %92, %96 ]
  %109 = phi i64 [ %118, %106 ], [ %104, %96 ]
  %110 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %107, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %108, i64 0, i32 0
  store i32 %111, i32* %112, align 4
  %113 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %107, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %108, i64 0, i32 1
  store i32 %114, i32* %115, align 4
  %116 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %107, i64 1
  %117 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %108, i64 1
  %118 = add i64 %109, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %106, !llvm.loop !17

120:                                              ; preds = %106, %96
  %121 = phi %"struct.std::__1::pair.95"* [ %90, %96 ], [ %116, %106 ]
  %122 = phi %"struct.std::__1::pair.95"* [ %92, %96 ], [ %117, %106 ]
  %123 = icmp ult i64 %101, 24
  br i1 %123, label %206, label %124

124:                                              ; preds = %120, %124
  %125 = phi %"struct.std::__1::pair.95"* [ %151, %124 ], [ %121, %120 ]
  %126 = phi %"struct.std::__1::pair.95"* [ %152, %124 ], [ %122, %120 ]
  %127 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %125, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %126, i64 0, i32 0
  store i32 %128, i32* %129, align 4
  %130 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %125, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %126, i64 0, i32 1
  store i32 %131, i32* %132, align 4
  %133 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %125, i64 1, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %126, i64 1, i32 0
  store i32 %134, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %125, i64 1, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %126, i64 1, i32 1
  store i32 %137, i32* %138, align 4
  %139 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %125, i64 2, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %126, i64 2, i32 0
  store i32 %140, i32* %141, align 4
  %142 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %125, i64 2, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %126, i64 2, i32 1
  store i32 %143, i32* %144, align 4
  %145 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %125, i64 3, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %126, i64 3, i32 0
  store i32 %146, i32* %147, align 4
  %148 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %125, i64 3, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %126, i64 3, i32 1
  store i32 %149, i32* %150, align 4
  %151 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %125, i64 4
  %152 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %126, i64 4
  %153 = icmp eq %"struct.std::__1::pair.95"* %151, %57
  br i1 %153, label %206, label %124

154:                                              ; preds = %89
  %155 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %91, i64 0, i32 0
  %156 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %90, i64 0, i32 0
  %157 = load i32, i32* %155, align 4
  %158 = load i32, i32* %156, align 4
  %159 = icmp slt i32 %157, %158
  %160 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %92, i64 0, i32 0
  br i1 %159, label %161, label %163

161:                                              ; preds = %154
  store i32 %157, i32* %160, align 4
  %162 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %91, i64 1
  br label %165

163:                                              ; preds = %154
  store i32 %158, i32* %160, align 4
  %164 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %90, i64 1
  br label %165

165:                                              ; preds = %163, %161
  %166 = phi %"struct.std::__1::pair.95"* [ %91, %161 ], [ %90, %163 ]
  %167 = phi %"struct.std::__1::pair.95"* [ %162, %161 ], [ %91, %163 ]
  %168 = phi %"struct.std::__1::pair.95"* [ %90, %161 ], [ %164, %163 ]
  %169 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %166, i64 0, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %92, i64 0, i32 1
  store i32 %170, i32* %171, align 4
  %172 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %92, i64 1
  %173 = icmp eq %"struct.std::__1::pair.95"* %168, %57
  br i1 %173, label %59, label %89

174:                                              ; preds = %85, %174
  %175 = phi %"struct.std::__1::pair.95"* [ %201, %174 ], [ %86, %85 ]
  %176 = phi %"struct.std::__1::pair.95"* [ %202, %174 ], [ %87, %85 ]
  %177 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %175, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %176, i64 0, i32 0
  store i32 %178, i32* %179, align 4
  %180 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %175, i64 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %176, i64 0, i32 1
  store i32 %181, i32* %182, align 4
  %183 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %175, i64 1, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %176, i64 1, i32 0
  store i32 %184, i32* %185, align 4
  %186 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %175, i64 1, i32 1
  %187 = load i32, i32* %186, align 4
  %188 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %176, i64 1, i32 1
  store i32 %187, i32* %188, align 4
  %189 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %175, i64 2, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %176, i64 2, i32 0
  store i32 %190, i32* %191, align 4
  %192 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %175, i64 2, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %176, i64 2, i32 1
  store i32 %193, i32* %194, align 4
  %195 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %175, i64 3, i32 0
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %176, i64 3, i32 0
  store i32 %196, i32* %197, align 4
  %198 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %175, i64 3, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %176, i64 3, i32 1
  store i32 %199, i32* %200, align 4
  %201 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %175, i64 4
  %202 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %176, i64 4
  %203 = icmp eq %"struct.std::__1::pair.95"* %201, %58
  br i1 %203, label %206, label %174

204:                                              ; preds = %51
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat11ElementTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeEl(%"struct.std::__1::pair.95"* %0, %"struct.std::__1::pair.95"* %53, %"struct.base::internal::flat_tree<url_pattern_index::proto::ElementType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType> > > >::value_compare"* dereferenceable(1) %2, i64 %52, %"struct.std::__1::pair.95"* %4, i64 %5)
  %205 = sub nsw i64 %3, %52
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat11ElementTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeEl(%"struct.std::__1::pair.95"* %53, %"struct.std::__1::pair.95"* %1, %"struct.base::internal::flat_tree<url_pattern_index::proto::ElementType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType> > > >::value_compare"* dereferenceable(1) %2, i64 %205, %"struct.std::__1::pair.95"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat11ElementTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_SO_T_NS_15iterator_traitsISO_E15difference_typeESS_PNSR_10value_typeEl(%"struct.std::__1::pair.95"* %0, %"struct.std::__1::pair.95"* %53, %"struct.std::__1::pair.95"* %1, %"struct.base::internal::flat_tree<url_pattern_index::proto::ElementType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType> > > >::value_compare"* dereferenceable(1) %2, i64 %52, i64 %205, %"struct.std::__1::pair.95"* %4, i64 %5)
  ret void

206:                                              ; preds = %85, %174, %120, %124, %39, %94, %59, %22, %20, %7, %13, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #13

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat11ElementTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeE(%"struct.std::__1::pair.95"*, %"struct.std::__1::pair.95"*, %"struct.base::internal::flat_tree<url_pattern_index::proto::ElementType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType> > > >::value_compare"* dereferenceable(1), i64, %"struct.std::__1::pair.95"*) local_unnamed_addr #2 comdat {
  switch i64 %3, label %33 [
    i64 0, label %466
    i64 1, label %6
    i64 2, label %10
  ]

6:                                                ; preds = %5
  %7 = bitcast %"struct.std::__1::pair.95"* %0 to i64*
  %8 = bitcast %"struct.std::__1::pair.95"* %4 to i64*
  %9 = load i64, i64* %7, align 4
  store i64 %9, i64* %8, align 4
  br label %466

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %1, i64 -1
  %12 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %0, i64 0, i32 0
  %14 = load i32, i32* %12, align 4
  %15 = load i32, i32* %13, align 4
  %16 = icmp slt i32 %14, %15
  br i1 %16, label %17, label %25

17:                                               ; preds = %10
  %18 = bitcast %"struct.std::__1::pair.95"* %11 to i64*
  %19 = bitcast %"struct.std::__1::pair.95"* %4 to i64*
  %20 = load i64, i64* %18, align 4
  store i64 %20, i64* %19, align 4
  %21 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %4, i64 1
  %22 = bitcast %"struct.std::__1::pair.95"* %0 to i64*
  %23 = bitcast %"struct.std::__1::pair.95"* %21 to i64*
  %24 = load i64, i64* %22, align 4
  store i64 %24, i64* %23, align 4
  br label %466

25:                                               ; preds = %10
  %26 = bitcast %"struct.std::__1::pair.95"* %0 to i64*
  %27 = bitcast %"struct.std::__1::pair.95"* %4 to i64*
  %28 = load i64, i64* %26, align 4
  store i64 %28, i64* %27, align 4
  %29 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %4, i64 1
  %30 = bitcast %"struct.std::__1::pair.95"* %11 to i64*
  %31 = bitcast %"struct.std::__1::pair.95"* %29 to i64*
  %32 = load i64, i64* %30, align 4
  store i64 %32, i64* %31, align 4
  br label %466

33:                                               ; preds = %5
  %34 = icmp slt i64 %3, 9
  br i1 %34, label %35, label %85

35:                                               ; preds = %33
  %36 = icmp eq %"struct.std::__1::pair.95"* %0, %1
  br i1 %36, label %466, label %37

37:                                               ; preds = %35
  %38 = bitcast %"struct.std::__1::pair.95"* %0 to i64*
  %39 = bitcast %"struct.std::__1::pair.95"* %4 to i64*
  %40 = load i64, i64* %38, align 4
  store i64 %40, i64* %39, align 4
  %41 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %0, i64 1
  %42 = icmp eq %"struct.std::__1::pair.95"* %41, %1
  br i1 %42, label %466, label %43

43:                                               ; preds = %37, %82
  %44 = phi %"struct.std::__1::pair.95"* [ %83, %82 ], [ %41, %37 ]
  %45 = phi %"struct.std::__1::pair.95"* [ %47, %82 ], [ %4, %37 ]
  %46 = phi %"struct.std::__1::pair.95"* [ %44, %82 ], [ %0, %37 ]
  %47 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %45, i64 1
  %48 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %44, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %45, i64 0, i32 0
  %50 = load i32, i32* %48, align 4
  %51 = load i32, i32* %49, align 4
  %52 = icmp slt i32 %50, %51
  br i1 %52, label %53, label %78

53:                                               ; preds = %43
  %54 = bitcast %"struct.std::__1::pair.95"* %45 to i64*
  %55 = bitcast %"struct.std::__1::pair.95"* %47 to i64*
  %56 = load i64, i64* %54, align 4
  store i64 %56, i64* %55, align 4
  %57 = icmp eq %"struct.std::__1::pair.95"* %45, %4
  br i1 %57, label %71, label %58

58:                                               ; preds = %53, %65
  %59 = phi %"struct.std::__1::pair.95"* [ %60, %65 ], [ %45, %53 ]
  %60 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %59, i64 -1
  %61 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %60, i64 0, i32 0
  %62 = load i32, i32* %48, align 4
  %63 = load i32, i32* %61, align 4
  %64 = icmp slt i32 %62, %63
  br i1 %64, label %65, label %71

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %59, i64 0, i32 0
  store i32 %63, i32* %66, align 4
  %67 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %59, i64 -1, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %59, i64 0, i32 1
  store i32 %68, i32* %69, align 4
  %70 = icmp eq %"struct.std::__1::pair.95"* %60, %4
  br i1 %70, label %71, label %58

71:                                               ; preds = %65, %58, %53
  %72 = phi %"struct.std::__1::pair.95"* [ %4, %53 ], [ %59, %58 ], [ %4, %65 ]
  %73 = load i32, i32* %48, align 4
  %74 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %72, i64 0, i32 0
  store i32 %73, i32* %74, align 4
  %75 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %46, i64 1, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %72, i64 0, i32 1
  store i32 %76, i32* %77, align 4
  br label %82

78:                                               ; preds = %43
  %79 = bitcast %"struct.std::__1::pair.95"* %44 to i64*
  %80 = bitcast %"struct.std::__1::pair.95"* %47 to i64*
  %81 = load i64, i64* %79, align 4
  store i64 %81, i64* %80, align 4
  br label %82

82:                                               ; preds = %78, %71
  %83 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %44, i64 1
  %84 = icmp eq %"struct.std::__1::pair.95"* %83, %1
  br i1 %84, label %466, label %43

85:                                               ; preds = %33
  %86 = lshr i64 %3, 1
  %87 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %0, i64 %86
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat11ElementTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeEl(%"struct.std::__1::pair.95"* %0, %"struct.std::__1::pair.95"* %87, %"struct.base::internal::flat_tree<url_pattern_index::proto::ElementType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType> > > >::value_compare"* dereferenceable(1) %2, i64 %86, %"struct.std::__1::pair.95"* %4, i64 %86)
  %88 = sub nsw i64 %3, %86
  %89 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %4, i64 %86
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat11ElementTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeEl(%"struct.std::__1::pair.95"* %87, %"struct.std::__1::pair.95"* %1, %"struct.base::internal::flat_tree<url_pattern_index::proto::ElementType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType> > > >::value_compare"* dereferenceable(1) %2, i64 %88, %"struct.std::__1::pair.95"* %89, i64 %88)
  %90 = icmp eq i64 %86, 0
  br i1 %90, label %91, label %265

91:                                               ; preds = %461, %85
  %92 = phi %"struct.std::__1::pair.95"* [ %87, %85 ], [ %462, %461 ]
  %93 = phi %"struct.std::__1::pair.95"* [ %4, %85 ], [ %464, %461 ]
  %94 = ptrtoint %"struct.std::__1::pair.95"* %92 to i64
  %95 = icmp eq %"struct.std::__1::pair.95"* %92, %1
  br i1 %95, label %466, label %96

96:                                               ; preds = %91
  %97 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %1, i64 -1, i32 0
  %98 = ptrtoint i32* %97 to i64
  %99 = sub i64 %98, %94
  %100 = lshr i64 %99, 3
  %101 = add nuw nsw i64 %100, 1
  %102 = icmp ult i64 %101, 4
  br i1 %102, label %195, label %103

103:                                              ; preds = %96
  %104 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %1, i64 -1, i32 0
  %105 = ptrtoint i32* %104 to i64
  %106 = sub i64 %105, %94
  %107 = lshr i64 %106, 3
  %108 = add nuw nsw i64 %107, 1
  %109 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %93, i64 %108
  %110 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %92, i64 %108
  %111 = icmp ult %"struct.std::__1::pair.95"* %93, %110
  %112 = icmp ult %"struct.std::__1::pair.95"* %92, %109
  %113 = and i1 %111, %112
  br i1 %113, label %195, label %114

114:                                              ; preds = %103
  %115 = and i64 %101, 4611686018427387900
  %116 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %93, i64 %115
  %117 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %92, i64 %115
  %118 = add nsw i64 %115, -4
  %119 = lshr exact i64 %118, 2
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 3
  %122 = icmp ult i64 %118, 12
  br i1 %122, label %174, label %123

123:                                              ; preds = %114
  %124 = sub nsw i64 %120, %121
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi i64 [ 0, %123 ], [ %171, %125 ]
  %127 = phi i64 [ %124, %123 ], [ %172, %125 ]
  %128 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %93, i64 %126
  %129 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %92, i64 %126
  %130 = bitcast %"struct.std::__1::pair.95"* %129 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 4, !alias.scope !18
  %132 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %129, i64 2
  %133 = bitcast %"struct.std::__1::pair.95"* %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 4, !alias.scope !18
  %135 = bitcast %"struct.std::__1::pair.95"* %128 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %135, align 4, !alias.scope !21, !noalias !18
  %136 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %128, i64 2
  %137 = bitcast %"struct.std::__1::pair.95"* %136 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %137, align 4, !alias.scope !21, !noalias !18
  %138 = or i64 %126, 4
  %139 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %93, i64 %138
  %140 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %92, i64 %138
  %141 = bitcast %"struct.std::__1::pair.95"* %140 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 4, !alias.scope !18
  %143 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %140, i64 2
  %144 = bitcast %"struct.std::__1::pair.95"* %143 to <2 x i64>*
  %145 = load <2 x i64>, <2 x i64>* %144, align 4, !alias.scope !18
  %146 = bitcast %"struct.std::__1::pair.95"* %139 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %146, align 4, !alias.scope !21, !noalias !18
  %147 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %139, i64 2
  %148 = bitcast %"struct.std::__1::pair.95"* %147 to <2 x i64>*
  store <2 x i64> %145, <2 x i64>* %148, align 4, !alias.scope !21, !noalias !18
  %149 = or i64 %126, 8
  %150 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %93, i64 %149
  %151 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %92, i64 %149
  %152 = bitcast %"struct.std::__1::pair.95"* %151 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 4, !alias.scope !18
  %154 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %151, i64 2
  %155 = bitcast %"struct.std::__1::pair.95"* %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 4, !alias.scope !18
  %157 = bitcast %"struct.std::__1::pair.95"* %150 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %157, align 4, !alias.scope !21, !noalias !18
  %158 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %150, i64 2
  %159 = bitcast %"struct.std::__1::pair.95"* %158 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %159, align 4, !alias.scope !21, !noalias !18
  %160 = or i64 %126, 12
  %161 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %93, i64 %160
  %162 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %92, i64 %160
  %163 = bitcast %"struct.std::__1::pair.95"* %162 to <2 x i64>*
  %164 = load <2 x i64>, <2 x i64>* %163, align 4, !alias.scope !18
  %165 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %162, i64 2
  %166 = bitcast %"struct.std::__1::pair.95"* %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 4, !alias.scope !18
  %168 = bitcast %"struct.std::__1::pair.95"* %161 to <2 x i64>*
  store <2 x i64> %164, <2 x i64>* %168, align 4, !alias.scope !21, !noalias !18
  %169 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %161, i64 2
  %170 = bitcast %"struct.std::__1::pair.95"* %169 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %170, align 4, !alias.scope !21, !noalias !18
  %171 = add i64 %126, 16
  %172 = add i64 %127, -4
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %125, !llvm.loop !23

174:                                              ; preds = %125, %114
  %175 = phi i64 [ 0, %114 ], [ %171, %125 ]
  %176 = icmp eq i64 %121, 0
  br i1 %176, label %193, label %177

177:                                              ; preds = %174, %177
  %178 = phi i64 [ %190, %177 ], [ %175, %174 ]
  %179 = phi i64 [ %191, %177 ], [ %121, %174 ]
  %180 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %93, i64 %178
  %181 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %92, i64 %178
  %182 = bitcast %"struct.std::__1::pair.95"* %181 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 4, !alias.scope !18
  %184 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %181, i64 2
  %185 = bitcast %"struct.std::__1::pair.95"* %184 to <2 x i64>*
  %186 = load <2 x i64>, <2 x i64>* %185, align 4, !alias.scope !18
  %187 = bitcast %"struct.std::__1::pair.95"* %180 to <2 x i64>*
  store <2 x i64> %183, <2 x i64>* %187, align 4, !alias.scope !21, !noalias !18
  %188 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %180, i64 2
  %189 = bitcast %"struct.std::__1::pair.95"* %188 to <2 x i64>*
  store <2 x i64> %186, <2 x i64>* %189, align 4, !alias.scope !21, !noalias !18
  %190 = add i64 %178, 4
  %191 = add i64 %179, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %177, !llvm.loop !25

193:                                              ; preds = %177, %174
  %194 = icmp eq i64 %101, %115
  br i1 %194, label %466, label %195

195:                                              ; preds = %193, %103, %96
  %196 = phi %"struct.std::__1::pair.95"* [ %93, %103 ], [ %93, %96 ], [ %116, %193 ]
  %197 = phi %"struct.std::__1::pair.95"* [ %92, %103 ], [ %92, %96 ], [ %117, %193 ]
  %198 = ptrtoint %"struct.std::__1::pair.95"* %197 to i64
  %199 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %1, i64 -1, i32 0
  %200 = ptrtoint i32* %199 to i64
  %201 = sub i64 %200, %198
  %202 = lshr i64 %201, 3
  %203 = add nuw nsw i64 %202, 1
  %204 = and i64 %203, 7
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %217, label %206

206:                                              ; preds = %195, %206
  %207 = phi %"struct.std::__1::pair.95"* [ %214, %206 ], [ %196, %195 ]
  %208 = phi %"struct.std::__1::pair.95"* [ %213, %206 ], [ %197, %195 ]
  %209 = phi i64 [ %215, %206 ], [ %204, %195 ]
  %210 = bitcast %"struct.std::__1::pair.95"* %208 to i64*
  %211 = bitcast %"struct.std::__1::pair.95"* %207 to i64*
  %212 = load i64, i64* %210, align 4
  store i64 %212, i64* %211, align 4
  %213 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %208, i64 1
  %214 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %207, i64 1
  %215 = add i64 %209, -1
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %206, !llvm.loop !26

217:                                              ; preds = %206, %195
  %218 = phi %"struct.std::__1::pair.95"* [ %196, %195 ], [ %214, %206 ]
  %219 = phi %"struct.std::__1::pair.95"* [ %197, %195 ], [ %213, %206 ]
  %220 = icmp ult i64 %201, 56
  br i1 %220, label %466, label %221

221:                                              ; preds = %217, %221
  %222 = phi %"struct.std::__1::pair.95"* [ %263, %221 ], [ %218, %217 ]
  %223 = phi %"struct.std::__1::pair.95"* [ %262, %221 ], [ %219, %217 ]
  %224 = bitcast %"struct.std::__1::pair.95"* %223 to i64*
  %225 = bitcast %"struct.std::__1::pair.95"* %222 to i64*
  %226 = load i64, i64* %224, align 4
  store i64 %226, i64* %225, align 4
  %227 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %223, i64 1
  %228 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %222, i64 1
  %229 = bitcast %"struct.std::__1::pair.95"* %227 to i64*
  %230 = bitcast %"struct.std::__1::pair.95"* %228 to i64*
  %231 = load i64, i64* %229, align 4
  store i64 %231, i64* %230, align 4
  %232 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %223, i64 2
  %233 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %222, i64 2
  %234 = bitcast %"struct.std::__1::pair.95"* %232 to i64*
  %235 = bitcast %"struct.std::__1::pair.95"* %233 to i64*
  %236 = load i64, i64* %234, align 4
  store i64 %236, i64* %235, align 4
  %237 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %223, i64 3
  %238 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %222, i64 3
  %239 = bitcast %"struct.std::__1::pair.95"* %237 to i64*
  %240 = bitcast %"struct.std::__1::pair.95"* %238 to i64*
  %241 = load i64, i64* %239, align 4
  store i64 %241, i64* %240, align 4
  %242 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %223, i64 4
  %243 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %222, i64 4
  %244 = bitcast %"struct.std::__1::pair.95"* %242 to i64*
  %245 = bitcast %"struct.std::__1::pair.95"* %243 to i64*
  %246 = load i64, i64* %244, align 4
  store i64 %246, i64* %245, align 4
  %247 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %223, i64 5
  %248 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %222, i64 5
  %249 = bitcast %"struct.std::__1::pair.95"* %247 to i64*
  %250 = bitcast %"struct.std::__1::pair.95"* %248 to i64*
  %251 = load i64, i64* %249, align 4
  store i64 %251, i64* %250, align 4
  %252 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %223, i64 6
  %253 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %222, i64 6
  %254 = bitcast %"struct.std::__1::pair.95"* %252 to i64*
  %255 = bitcast %"struct.std::__1::pair.95"* %253 to i64*
  %256 = load i64, i64* %254, align 4
  store i64 %256, i64* %255, align 4
  %257 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %223, i64 7
  %258 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %222, i64 7
  %259 = bitcast %"struct.std::__1::pair.95"* %257 to i64*
  %260 = bitcast %"struct.std::__1::pair.95"* %258 to i64*
  %261 = load i64, i64* %259, align 4
  store i64 %261, i64* %260, align 4
  %262 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %223, i64 8
  %263 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %222, i64 8
  %264 = icmp eq %"struct.std::__1::pair.95"* %262, %1
  br i1 %264, label %466, label %221, !llvm.loop !27

265:                                              ; preds = %85, %461
  %266 = phi %"struct.std::__1::pair.95"* [ %464, %461 ], [ %4, %85 ]
  %267 = phi %"struct.std::__1::pair.95"* [ %463, %461 ], [ %0, %85 ]
  %268 = phi %"struct.std::__1::pair.95"* [ %462, %461 ], [ %87, %85 ]
  %269 = icmp eq %"struct.std::__1::pair.95"* %268, %1
  br i1 %269, label %270, label %445

270:                                              ; preds = %265
  %271 = ptrtoint %"struct.std::__1::pair.95"* %267 to i64
  %272 = icmp eq %"struct.std::__1::pair.95"* %267, %87
  br i1 %272, label %466, label %273

273:                                              ; preds = %270
  %274 = add nsw i64 %86, -1
  %275 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %0, i64 %274, i32 0
  %276 = ptrtoint i32* %275 to i64
  %277 = sub i64 %276, %271
  %278 = lshr i64 %277, 3
  %279 = add nuw nsw i64 %278, 1
  %280 = icmp ult i64 %279, 4
  br i1 %280, label %374, label %281

281:                                              ; preds = %273
  %282 = add nsw i64 %86, -1
  %283 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %0, i64 %282, i32 0
  %284 = ptrtoint i32* %283 to i64
  %285 = sub i64 %284, %271
  %286 = lshr i64 %285, 3
  %287 = add nuw nsw i64 %286, 1
  %288 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %266, i64 %287
  %289 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %267, i64 %287
  %290 = icmp ult %"struct.std::__1::pair.95"* %266, %289
  %291 = icmp ult %"struct.std::__1::pair.95"* %267, %288
  %292 = and i1 %290, %291
  br i1 %292, label %374, label %293

293:                                              ; preds = %281
  %294 = and i64 %279, 4611686018427387900
  %295 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %266, i64 %294
  %296 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %267, i64 %294
  %297 = add nsw i64 %294, -4
  %298 = lshr exact i64 %297, 2
  %299 = add nuw nsw i64 %298, 1
  %300 = and i64 %299, 3
  %301 = icmp ult i64 %297, 12
  br i1 %301, label %353, label %302

302:                                              ; preds = %293
  %303 = sub nsw i64 %299, %300
  br label %304

304:                                              ; preds = %304, %302
  %305 = phi i64 [ 0, %302 ], [ %350, %304 ]
  %306 = phi i64 [ %303, %302 ], [ %351, %304 ]
  %307 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %266, i64 %305
  %308 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %267, i64 %305
  %309 = bitcast %"struct.std::__1::pair.95"* %308 to <2 x i64>*
  %310 = load <2 x i64>, <2 x i64>* %309, align 4, !alias.scope !28
  %311 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %308, i64 2
  %312 = bitcast %"struct.std::__1::pair.95"* %311 to <2 x i64>*
  %313 = load <2 x i64>, <2 x i64>* %312, align 4, !alias.scope !28
  %314 = bitcast %"struct.std::__1::pair.95"* %307 to <2 x i64>*
  store <2 x i64> %310, <2 x i64>* %314, align 4, !alias.scope !31, !noalias !28
  %315 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %307, i64 2
  %316 = bitcast %"struct.std::__1::pair.95"* %315 to <2 x i64>*
  store <2 x i64> %313, <2 x i64>* %316, align 4, !alias.scope !31, !noalias !28
  %317 = or i64 %305, 4
  %318 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %266, i64 %317
  %319 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %267, i64 %317
  %320 = bitcast %"struct.std::__1::pair.95"* %319 to <2 x i64>*
  %321 = load <2 x i64>, <2 x i64>* %320, align 4, !alias.scope !28
  %322 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %319, i64 2
  %323 = bitcast %"struct.std::__1::pair.95"* %322 to <2 x i64>*
  %324 = load <2 x i64>, <2 x i64>* %323, align 4, !alias.scope !28
  %325 = bitcast %"struct.std::__1::pair.95"* %318 to <2 x i64>*
  store <2 x i64> %321, <2 x i64>* %325, align 4, !alias.scope !31, !noalias !28
  %326 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %318, i64 2
  %327 = bitcast %"struct.std::__1::pair.95"* %326 to <2 x i64>*
  store <2 x i64> %324, <2 x i64>* %327, align 4, !alias.scope !31, !noalias !28
  %328 = or i64 %305, 8
  %329 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %266, i64 %328
  %330 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %267, i64 %328
  %331 = bitcast %"struct.std::__1::pair.95"* %330 to <2 x i64>*
  %332 = load <2 x i64>, <2 x i64>* %331, align 4, !alias.scope !28
  %333 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %330, i64 2
  %334 = bitcast %"struct.std::__1::pair.95"* %333 to <2 x i64>*
  %335 = load <2 x i64>, <2 x i64>* %334, align 4, !alias.scope !28
  %336 = bitcast %"struct.std::__1::pair.95"* %329 to <2 x i64>*
  store <2 x i64> %332, <2 x i64>* %336, align 4, !alias.scope !31, !noalias !28
  %337 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %329, i64 2
  %338 = bitcast %"struct.std::__1::pair.95"* %337 to <2 x i64>*
  store <2 x i64> %335, <2 x i64>* %338, align 4, !alias.scope !31, !noalias !28
  %339 = or i64 %305, 12
  %340 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %266, i64 %339
  %341 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %267, i64 %339
  %342 = bitcast %"struct.std::__1::pair.95"* %341 to <2 x i64>*
  %343 = load <2 x i64>, <2 x i64>* %342, align 4, !alias.scope !28
  %344 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %341, i64 2
  %345 = bitcast %"struct.std::__1::pair.95"* %344 to <2 x i64>*
  %346 = load <2 x i64>, <2 x i64>* %345, align 4, !alias.scope !28
  %347 = bitcast %"struct.std::__1::pair.95"* %340 to <2 x i64>*
  store <2 x i64> %343, <2 x i64>* %347, align 4, !alias.scope !31, !noalias !28
  %348 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %340, i64 2
  %349 = bitcast %"struct.std::__1::pair.95"* %348 to <2 x i64>*
  store <2 x i64> %346, <2 x i64>* %349, align 4, !alias.scope !31, !noalias !28
  %350 = add i64 %305, 16
  %351 = add i64 %306, -4
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %353, label %304, !llvm.loop !33

353:                                              ; preds = %304, %293
  %354 = phi i64 [ 0, %293 ], [ %350, %304 ]
  %355 = icmp eq i64 %300, 0
  br i1 %355, label %372, label %356

356:                                              ; preds = %353, %356
  %357 = phi i64 [ %369, %356 ], [ %354, %353 ]
  %358 = phi i64 [ %370, %356 ], [ %300, %353 ]
  %359 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %266, i64 %357
  %360 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %267, i64 %357
  %361 = bitcast %"struct.std::__1::pair.95"* %360 to <2 x i64>*
  %362 = load <2 x i64>, <2 x i64>* %361, align 4, !alias.scope !28
  %363 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %360, i64 2
  %364 = bitcast %"struct.std::__1::pair.95"* %363 to <2 x i64>*
  %365 = load <2 x i64>, <2 x i64>* %364, align 4, !alias.scope !28
  %366 = bitcast %"struct.std::__1::pair.95"* %359 to <2 x i64>*
  store <2 x i64> %362, <2 x i64>* %366, align 4, !alias.scope !31, !noalias !28
  %367 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %359, i64 2
  %368 = bitcast %"struct.std::__1::pair.95"* %367 to <2 x i64>*
  store <2 x i64> %365, <2 x i64>* %368, align 4, !alias.scope !31, !noalias !28
  %369 = add i64 %357, 4
  %370 = add i64 %358, -1
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %372, label %356, !llvm.loop !34

372:                                              ; preds = %356, %353
  %373 = icmp eq i64 %279, %294
  br i1 %373, label %466, label %374

374:                                              ; preds = %372, %281, %273
  %375 = phi %"struct.std::__1::pair.95"* [ %266, %281 ], [ %266, %273 ], [ %295, %372 ]
  %376 = phi %"struct.std::__1::pair.95"* [ %267, %281 ], [ %267, %273 ], [ %296, %372 ]
  %377 = ptrtoint %"struct.std::__1::pair.95"* %376 to i64
  %378 = add nsw i64 %86, -1
  %379 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %0, i64 %378, i32 0
  %380 = ptrtoint i32* %379 to i64
  %381 = sub i64 %380, %377
  %382 = lshr i64 %381, 3
  %383 = add nuw nsw i64 %382, 1
  %384 = and i64 %383, 7
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %397, label %386

386:                                              ; preds = %374, %386
  %387 = phi %"struct.std::__1::pair.95"* [ %394, %386 ], [ %375, %374 ]
  %388 = phi %"struct.std::__1::pair.95"* [ %393, %386 ], [ %376, %374 ]
  %389 = phi i64 [ %395, %386 ], [ %384, %374 ]
  %390 = bitcast %"struct.std::__1::pair.95"* %388 to i64*
  %391 = bitcast %"struct.std::__1::pair.95"* %387 to i64*
  %392 = load i64, i64* %390, align 4
  store i64 %392, i64* %391, align 4
  %393 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %388, i64 1
  %394 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %387, i64 1
  %395 = add i64 %389, -1
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %397, label %386, !llvm.loop !35

397:                                              ; preds = %386, %374
  %398 = phi %"struct.std::__1::pair.95"* [ %375, %374 ], [ %394, %386 ]
  %399 = phi %"struct.std::__1::pair.95"* [ %376, %374 ], [ %393, %386 ]
  %400 = icmp ult i64 %381, 56
  br i1 %400, label %466, label %401

401:                                              ; preds = %397, %401
  %402 = phi %"struct.std::__1::pair.95"* [ %443, %401 ], [ %398, %397 ]
  %403 = phi %"struct.std::__1::pair.95"* [ %442, %401 ], [ %399, %397 ]
  %404 = bitcast %"struct.std::__1::pair.95"* %403 to i64*
  %405 = bitcast %"struct.std::__1::pair.95"* %402 to i64*
  %406 = load i64, i64* %404, align 4
  store i64 %406, i64* %405, align 4
  %407 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %403, i64 1
  %408 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %402, i64 1
  %409 = bitcast %"struct.std::__1::pair.95"* %407 to i64*
  %410 = bitcast %"struct.std::__1::pair.95"* %408 to i64*
  %411 = load i64, i64* %409, align 4
  store i64 %411, i64* %410, align 4
  %412 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %403, i64 2
  %413 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %402, i64 2
  %414 = bitcast %"struct.std::__1::pair.95"* %412 to i64*
  %415 = bitcast %"struct.std::__1::pair.95"* %413 to i64*
  %416 = load i64, i64* %414, align 4
  store i64 %416, i64* %415, align 4
  %417 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %403, i64 3
  %418 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %402, i64 3
  %419 = bitcast %"struct.std::__1::pair.95"* %417 to i64*
  %420 = bitcast %"struct.std::__1::pair.95"* %418 to i64*
  %421 = load i64, i64* %419, align 4
  store i64 %421, i64* %420, align 4
  %422 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %403, i64 4
  %423 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %402, i64 4
  %424 = bitcast %"struct.std::__1::pair.95"* %422 to i64*
  %425 = bitcast %"struct.std::__1::pair.95"* %423 to i64*
  %426 = load i64, i64* %424, align 4
  store i64 %426, i64* %425, align 4
  %427 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %403, i64 5
  %428 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %402, i64 5
  %429 = bitcast %"struct.std::__1::pair.95"* %427 to i64*
  %430 = bitcast %"struct.std::__1::pair.95"* %428 to i64*
  %431 = load i64, i64* %429, align 4
  store i64 %431, i64* %430, align 4
  %432 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %403, i64 6
  %433 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %402, i64 6
  %434 = bitcast %"struct.std::__1::pair.95"* %432 to i64*
  %435 = bitcast %"struct.std::__1::pair.95"* %433 to i64*
  %436 = load i64, i64* %434, align 4
  store i64 %436, i64* %435, align 4
  %437 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %403, i64 7
  %438 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %402, i64 7
  %439 = bitcast %"struct.std::__1::pair.95"* %437 to i64*
  %440 = bitcast %"struct.std::__1::pair.95"* %438 to i64*
  %441 = load i64, i64* %439, align 4
  store i64 %441, i64* %440, align 4
  %442 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %403, i64 8
  %443 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %402, i64 8
  %444 = icmp eq %"struct.std::__1::pair.95"* %442, %87
  br i1 %444, label %466, label %401, !llvm.loop !36

445:                                              ; preds = %265
  %446 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %268, i64 0, i32 0
  %447 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %267, i64 0, i32 0
  %448 = load i32, i32* %446, align 4
  %449 = load i32, i32* %447, align 4
  %450 = icmp slt i32 %448, %449
  br i1 %450, label %451, label %456

451:                                              ; preds = %445
  %452 = bitcast %"struct.std::__1::pair.95"* %268 to i64*
  %453 = bitcast %"struct.std::__1::pair.95"* %266 to i64*
  %454 = load i64, i64* %452, align 4
  store i64 %454, i64* %453, align 4
  %455 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %268, i64 1
  br label %461

456:                                              ; preds = %445
  %457 = bitcast %"struct.std::__1::pair.95"* %267 to i64*
  %458 = bitcast %"struct.std::__1::pair.95"* %266 to i64*
  %459 = load i64, i64* %457, align 4
  store i64 %459, i64* %458, align 4
  %460 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %267, i64 1
  br label %461

461:                                              ; preds = %456, %451
  %462 = phi %"struct.std::__1::pair.95"* [ %455, %451 ], [ %268, %456 ]
  %463 = phi %"struct.std::__1::pair.95"* [ %267, %451 ], [ %460, %456 ]
  %464 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %266, i64 1
  %465 = icmp eq %"struct.std::__1::pair.95"* %463, %87
  br i1 %465, label %91, label %265

466:                                              ; preds = %397, %401, %217, %221, %82, %372, %193, %270, %91, %37, %35, %17, %25, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat11ElementTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_SO_T_NS_15iterator_traitsISO_E15difference_typeESS_PNSR_10value_typeEl(%"struct.std::__1::pair.95"*, %"struct.std::__1::pair.95"*, %"struct.std::__1::pair.95"*, %"struct.base::internal::flat_tree<url_pattern_index::proto::ElementType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType> > > >::value_compare"* dereferenceable(1), i64, i64, %"struct.std::__1::pair.95"*, i64) local_unnamed_addr #2 comdat {
  %9 = ptrtoint %"struct.std::__1::pair.95"* %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %781, label %11

11:                                               ; preds = %8
  %12 = ptrtoint %"struct.std::__1::pair.95"* %1 to i64
  %13 = ptrtoint %"struct.std::__1::pair.95"* %0 to i64
  br label %14

14:                                               ; preds = %11, %774
  %15 = phi %"struct.std::__1::pair.95"* [ %779, %774 ], [ %2, %11 ]
  %16 = phi i64 [ %778, %774 ], [ %4, %11 ]
  %17 = phi i64 [ %777, %774 ], [ %5, %11 ]
  %18 = phi i64 [ %776, %774 ], [ %12, %11 ]
  %19 = phi i64 [ %775, %774 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %29

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %781, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to %"struct.std::__1::pair.95"*
  %27 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br label %560

29:                                               ; preds = %14
  %30 = inttoptr i64 %19 to %"struct.std::__1::pair.95"*
  %31 = inttoptr i64 %19 to i8*
  %32 = inttoptr i64 %18 to %"struct.std::__1::pair.95"*
  %33 = inttoptr i64 %18 to i8*
  %34 = icmp sgt i64 %16, %17
  br i1 %34, label %171, label %35

35:                                               ; preds = %29
  %36 = icmp eq %"struct.std::__1::pair.95"* %30, %32
  br i1 %36, label %781, label %37

37:                                               ; preds = %35
  %38 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %32, i64 -1, i32 0
  %39 = bitcast i32* %38 to i8*
  %40 = sub i64 0, %19
  %41 = getelementptr i8, i8* %39, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = lshr i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = icmp ult i64 %44, 4
  br i1 %45, label %46, label %74

46:                                               ; preds = %167, %74, %37
  %47 = phi %"struct.std::__1::pair.95"* [ %6, %74 ], [ %6, %37 ], [ %90, %167 ]
  %48 = phi %"struct.std::__1::pair.95"* [ %30, %74 ], [ %30, %37 ], [ %91, %167 ]
  %49 = ptrtoint %"struct.std::__1::pair.95"* %48 to i64
  %50 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %32, i64 -1, i32 0
  %51 = ptrtoint i32* %50 to i64
  %52 = sub i64 %51, %49
  %53 = lshr i64 %52, 3
  %54 = add nuw nsw i64 %53, 1
  %55 = and i64 %54, 7
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %68, label %57

57:                                               ; preds = %46, %57
  %58 = phi %"struct.std::__1::pair.95"* [ %65, %57 ], [ %47, %46 ]
  %59 = phi %"struct.std::__1::pair.95"* [ %64, %57 ], [ %48, %46 ]
  %60 = phi i64 [ %66, %57 ], [ %55, %46 ]
  %61 = bitcast %"struct.std::__1::pair.95"* %59 to i64*
  %62 = bitcast %"struct.std::__1::pair.95"* %58 to i64*
  %63 = load i64, i64* %61, align 4
  store i64 %63, i64* %62, align 4
  %64 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %59, i64 1
  %65 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %58, i64 1
  %66 = add i64 %60, -1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %57, !llvm.loop !37

68:                                               ; preds = %57, %46
  %69 = phi %"struct.std::__1::pair.95"* [ undef, %46 ], [ %58, %57 ]
  %70 = phi %"struct.std::__1::pair.95"* [ undef, %46 ], [ %65, %57 ]
  %71 = phi %"struct.std::__1::pair.95"* [ %47, %46 ], [ %65, %57 ]
  %72 = phi %"struct.std::__1::pair.95"* [ %48, %46 ], [ %64, %57 ]
  %73 = icmp ult i64 %52, 56
  br i1 %73, label %304, label %390

74:                                               ; preds = %37
  %75 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %32, i64 -1, i32 0
  %76 = bitcast i32* %75 to i8*
  %77 = sub i64 0, %19
  %78 = getelementptr i8, i8* %76, i64 %77
  %79 = ptrtoint i8* %78 to i64
  %80 = lshr i64 %79, 3
  %81 = add nuw nsw i64 %80, 1
  %82 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %6, i64 %81
  %83 = bitcast %"struct.std::__1::pair.95"* %82 to i8*
  %84 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %30, i64 %81
  %85 = icmp ugt %"struct.std::__1::pair.95"* %84, %6
  %86 = icmp ult i8* %31, %83
  %87 = and i1 %85, %86
  br i1 %87, label %46, label %88

88:                                               ; preds = %74
  %89 = and i64 %44, 4611686018427387900
  %90 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %6, i64 %89
  %91 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %30, i64 %89
  %92 = add nsw i64 %89, -4
  %93 = lshr exact i64 %92, 2
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 3
  %96 = icmp ult i64 %92, 12
  br i1 %96, label %148, label %97

97:                                               ; preds = %88
  %98 = sub nsw i64 %94, %95
  br label %99

99:                                               ; preds = %99, %97
  %100 = phi i64 [ 0, %97 ], [ %145, %99 ]
  %101 = phi i64 [ %98, %97 ], [ %146, %99 ]
  %102 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %6, i64 %100
  %103 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %30, i64 %100
  %104 = bitcast %"struct.std::__1::pair.95"* %103 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 4, !alias.scope !38
  %106 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %103, i64 2
  %107 = bitcast %"struct.std::__1::pair.95"* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 4, !alias.scope !38
  %109 = bitcast %"struct.std::__1::pair.95"* %102 to <2 x i64>*
  store <2 x i64> %105, <2 x i64>* %109, align 4, !alias.scope !41, !noalias !38
  %110 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %102, i64 2
  %111 = bitcast %"struct.std::__1::pair.95"* %110 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %111, align 4, !alias.scope !41, !noalias !38
  %112 = or i64 %100, 4
  %113 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %6, i64 %112
  %114 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %30, i64 %112
  %115 = bitcast %"struct.std::__1::pair.95"* %114 to <2 x i64>*
  %116 = load <2 x i64>, <2 x i64>* %115, align 4, !alias.scope !38
  %117 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %114, i64 2
  %118 = bitcast %"struct.std::__1::pair.95"* %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 4, !alias.scope !38
  %120 = bitcast %"struct.std::__1::pair.95"* %113 to <2 x i64>*
  store <2 x i64> %116, <2 x i64>* %120, align 4, !alias.scope !41, !noalias !38
  %121 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %113, i64 2
  %122 = bitcast %"struct.std::__1::pair.95"* %121 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %122, align 4, !alias.scope !41, !noalias !38
  %123 = or i64 %100, 8
  %124 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %6, i64 %123
  %125 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %30, i64 %123
  %126 = bitcast %"struct.std::__1::pair.95"* %125 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 4, !alias.scope !38
  %128 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %125, i64 2
  %129 = bitcast %"struct.std::__1::pair.95"* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 4, !alias.scope !38
  %131 = bitcast %"struct.std::__1::pair.95"* %124 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %131, align 4, !alias.scope !41, !noalias !38
  %132 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %124, i64 2
  %133 = bitcast %"struct.std::__1::pair.95"* %132 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %133, align 4, !alias.scope !41, !noalias !38
  %134 = or i64 %100, 12
  %135 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %6, i64 %134
  %136 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %30, i64 %134
  %137 = bitcast %"struct.std::__1::pair.95"* %136 to <2 x i64>*
  %138 = load <2 x i64>, <2 x i64>* %137, align 4, !alias.scope !38
  %139 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %136, i64 2
  %140 = bitcast %"struct.std::__1::pair.95"* %139 to <2 x i64>*
  %141 = load <2 x i64>, <2 x i64>* %140, align 4, !alias.scope !38
  %142 = bitcast %"struct.std::__1::pair.95"* %135 to <2 x i64>*
  store <2 x i64> %138, <2 x i64>* %142, align 4, !alias.scope !41, !noalias !38
  %143 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %135, i64 2
  %144 = bitcast %"struct.std::__1::pair.95"* %143 to <2 x i64>*
  store <2 x i64> %141, <2 x i64>* %144, align 4, !alias.scope !41, !noalias !38
  %145 = add i64 %100, 16
  %146 = add i64 %101, -4
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %99, !llvm.loop !43

148:                                              ; preds = %99, %88
  %149 = phi i64 [ 0, %88 ], [ %145, %99 ]
  %150 = icmp eq i64 %95, 0
  br i1 %150, label %167, label %151

151:                                              ; preds = %148, %151
  %152 = phi i64 [ %164, %151 ], [ %149, %148 ]
  %153 = phi i64 [ %165, %151 ], [ %95, %148 ]
  %154 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %6, i64 %152
  %155 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %30, i64 %152
  %156 = bitcast %"struct.std::__1::pair.95"* %155 to <2 x i64>*
  %157 = load <2 x i64>, <2 x i64>* %156, align 4, !alias.scope !38
  %158 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %155, i64 2
  %159 = bitcast %"struct.std::__1::pair.95"* %158 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 4, !alias.scope !38
  %161 = bitcast %"struct.std::__1::pair.95"* %154 to <2 x i64>*
  store <2 x i64> %157, <2 x i64>* %161, align 4, !alias.scope !41, !noalias !38
  %162 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %154, i64 2
  %163 = bitcast %"struct.std::__1::pair.95"* %162 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %163, align 4, !alias.scope !41, !noalias !38
  %164 = add i64 %152, 4
  %165 = add i64 %153, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %151, !llvm.loop !44

167:                                              ; preds = %151, %148
  %168 = icmp eq i64 %44, %89
  %169 = add nsw i64 %89, -1
  %170 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %6, i64 %169
  br i1 %168, label %304, label %46

171:                                              ; preds = %29
  %172 = icmp eq %"struct.std::__1::pair.95"* %15, %32
  br i1 %172, label %781, label %173

173:                                              ; preds = %171
  %174 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %15, i64 -1, i32 0
  %175 = bitcast i32* %174 to i8*
  %176 = sub i64 0, %18
  %177 = getelementptr i8, i8* %175, i64 %176
  %178 = ptrtoint i8* %177 to i64
  %179 = lshr i64 %178, 3
  %180 = add nuw nsw i64 %179, 1
  %181 = icmp ult i64 %180, 4
  br i1 %181, label %182, label %209

182:                                              ; preds = %302, %209, %173
  %183 = phi %"struct.std::__1::pair.95"* [ %6, %209 ], [ %6, %173 ], [ %225, %302 ]
  %184 = phi %"struct.std::__1::pair.95"* [ %32, %209 ], [ %32, %173 ], [ %226, %302 ]
  %185 = ptrtoint %"struct.std::__1::pair.95"* %184 to i64
  %186 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %15, i64 -1, i32 0
  %187 = ptrtoint i32* %186 to i64
  %188 = sub i64 %187, %185
  %189 = lshr i64 %188, 3
  %190 = add nuw nsw i64 %189, 1
  %191 = and i64 %190, 7
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %204, label %193

193:                                              ; preds = %182, %193
  %194 = phi %"struct.std::__1::pair.95"* [ %201, %193 ], [ %183, %182 ]
  %195 = phi %"struct.std::__1::pair.95"* [ %200, %193 ], [ %184, %182 ]
  %196 = phi i64 [ %202, %193 ], [ %191, %182 ]
  %197 = bitcast %"struct.std::__1::pair.95"* %195 to i64*
  %198 = bitcast %"struct.std::__1::pair.95"* %194 to i64*
  %199 = load i64, i64* %197, align 4
  store i64 %199, i64* %198, align 4
  %200 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %195, i64 1
  %201 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %194, i64 1
  %202 = add i64 %196, -1
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %193, !llvm.loop !45

204:                                              ; preds = %193, %182
  %205 = phi %"struct.std::__1::pair.95"* [ undef, %182 ], [ %201, %193 ]
  %206 = phi %"struct.std::__1::pair.95"* [ %183, %182 ], [ %201, %193 ]
  %207 = phi %"struct.std::__1::pair.95"* [ %184, %182 ], [ %200, %193 ]
  %208 = icmp ult i64 %188, 56
  br i1 %208, label %434, label %516

209:                                              ; preds = %173
  %210 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %15, i64 -1, i32 0
  %211 = bitcast i32* %210 to i8*
  %212 = sub i64 0, %18
  %213 = getelementptr i8, i8* %211, i64 %212
  %214 = ptrtoint i8* %213 to i64
  %215 = lshr i64 %214, 3
  %216 = add nuw nsw i64 %215, 1
  %217 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %6, i64 %216
  %218 = bitcast %"struct.std::__1::pair.95"* %217 to i8*
  %219 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %32, i64 %216
  %220 = icmp ugt %"struct.std::__1::pair.95"* %219, %6
  %221 = icmp ult i8* %33, %218
  %222 = and i1 %220, %221
  br i1 %222, label %182, label %223

223:                                              ; preds = %209
  %224 = and i64 %180, 4611686018427387900
  %225 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %6, i64 %224
  %226 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %32, i64 %224
  %227 = add nsw i64 %224, -4
  %228 = lshr exact i64 %227, 2
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 3
  %231 = icmp ult i64 %227, 12
  br i1 %231, label %283, label %232

232:                                              ; preds = %223
  %233 = sub nsw i64 %229, %230
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %280, %234 ]
  %236 = phi i64 [ %233, %232 ], [ %281, %234 ]
  %237 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %6, i64 %235
  %238 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %32, i64 %235
  %239 = bitcast %"struct.std::__1::pair.95"* %238 to <2 x i64>*
  %240 = load <2 x i64>, <2 x i64>* %239, align 4, !alias.scope !46
  %241 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %238, i64 2
  %242 = bitcast %"struct.std::__1::pair.95"* %241 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 4, !alias.scope !46
  %244 = bitcast %"struct.std::__1::pair.95"* %237 to <2 x i64>*
  store <2 x i64> %240, <2 x i64>* %244, align 4, !alias.scope !49, !noalias !46
  %245 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %237, i64 2
  %246 = bitcast %"struct.std::__1::pair.95"* %245 to <2 x i64>*
  store <2 x i64> %243, <2 x i64>* %246, align 4, !alias.scope !49, !noalias !46
  %247 = or i64 %235, 4
  %248 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %6, i64 %247
  %249 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %32, i64 %247
  %250 = bitcast %"struct.std::__1::pair.95"* %249 to <2 x i64>*
  %251 = load <2 x i64>, <2 x i64>* %250, align 4, !alias.scope !46
  %252 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %249, i64 2
  %253 = bitcast %"struct.std::__1::pair.95"* %252 to <2 x i64>*
  %254 = load <2 x i64>, <2 x i64>* %253, align 4, !alias.scope !46
  %255 = bitcast %"struct.std::__1::pair.95"* %248 to <2 x i64>*
  store <2 x i64> %251, <2 x i64>* %255, align 4, !alias.scope !49, !noalias !46
  %256 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %248, i64 2
  %257 = bitcast %"struct.std::__1::pair.95"* %256 to <2 x i64>*
  store <2 x i64> %254, <2 x i64>* %257, align 4, !alias.scope !49, !noalias !46
  %258 = or i64 %235, 8
  %259 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %6, i64 %258
  %260 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %32, i64 %258
  %261 = bitcast %"struct.std::__1::pair.95"* %260 to <2 x i64>*
  %262 = load <2 x i64>, <2 x i64>* %261, align 4, !alias.scope !46
  %263 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %260, i64 2
  %264 = bitcast %"struct.std::__1::pair.95"* %263 to <2 x i64>*
  %265 = load <2 x i64>, <2 x i64>* %264, align 4, !alias.scope !46
  %266 = bitcast %"struct.std::__1::pair.95"* %259 to <2 x i64>*
  store <2 x i64> %262, <2 x i64>* %266, align 4, !alias.scope !49, !noalias !46
  %267 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %259, i64 2
  %268 = bitcast %"struct.std::__1::pair.95"* %267 to <2 x i64>*
  store <2 x i64> %265, <2 x i64>* %268, align 4, !alias.scope !49, !noalias !46
  %269 = or i64 %235, 12
  %270 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %6, i64 %269
  %271 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %32, i64 %269
  %272 = bitcast %"struct.std::__1::pair.95"* %271 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 4, !alias.scope !46
  %274 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %271, i64 2
  %275 = bitcast %"struct.std::__1::pair.95"* %274 to <2 x i64>*
  %276 = load <2 x i64>, <2 x i64>* %275, align 4, !alias.scope !46
  %277 = bitcast %"struct.std::__1::pair.95"* %270 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %277, align 4, !alias.scope !49, !noalias !46
  %278 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %270, i64 2
  %279 = bitcast %"struct.std::__1::pair.95"* %278 to <2 x i64>*
  store <2 x i64> %276, <2 x i64>* %279, align 4, !alias.scope !49, !noalias !46
  %280 = add i64 %235, 16
  %281 = add i64 %236, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %234, !llvm.loop !51

283:                                              ; preds = %234, %223
  %284 = phi i64 [ 0, %223 ], [ %280, %234 ]
  %285 = icmp eq i64 %230, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %299, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %300, %286 ], [ %230, %283 ]
  %289 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %6, i64 %287
  %290 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %32, i64 %287
  %291 = bitcast %"struct.std::__1::pair.95"* %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 4, !alias.scope !46
  %293 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %290, i64 2
  %294 = bitcast %"struct.std::__1::pair.95"* %293 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 4, !alias.scope !46
  %296 = bitcast %"struct.std::__1::pair.95"* %289 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %296, align 4, !alias.scope !49, !noalias !46
  %297 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %289, i64 2
  %298 = bitcast %"struct.std::__1::pair.95"* %297 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %298, align 4, !alias.scope !49, !noalias !46
  %299 = add i64 %287, 4
  %300 = add i64 %288, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %286, !llvm.loop !52

302:                                              ; preds = %286, %283
  %303 = icmp eq i64 %180, %224
  br i1 %303, label %434, label %182

304:                                              ; preds = %68, %390, %167
  %305 = phi %"struct.std::__1::pair.95"* [ %170, %167 ], [ %69, %68 ], [ %427, %390 ]
  %306 = phi %"struct.std::__1::pair.95"* [ %90, %167 ], [ %70, %68 ], [ %432, %390 ]
  %307 = icmp eq %"struct.std::__1::pair.95"* %306, %6
  br i1 %307, label %781, label %308

308:                                              ; preds = %304, %381
  %309 = phi %"struct.std::__1::pair.95"* [ %384, %381 ], [ %6, %304 ]
  %310 = phi %"struct.std::__1::pair.95"* [ %388, %381 ], [ %30, %304 ]
  %311 = phi %"struct.std::__1::pair.95"* [ %383, %381 ], [ %32, %304 ]
  %312 = icmp eq %"struct.std::__1::pair.95"* %311, %15
  br i1 %312, label %313, label %370

313:                                              ; preds = %308
  %314 = ptrtoint %"struct.std::__1::pair.95"* %309 to i64
  %315 = ptrtoint %"struct.std::__1::pair.95"* %305 to i64
  %316 = sub i64 %315, %314
  %317 = lshr i64 %316, 3
  %318 = add nuw nsw i64 %317, 1
  %319 = and i64 %318, 3
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %335, label %321

321:                                              ; preds = %313, %321
  %322 = phi %"struct.std::__1::pair.95"* [ %332, %321 ], [ %310, %313 ]
  %323 = phi %"struct.std::__1::pair.95"* [ %331, %321 ], [ %309, %313 ]
  %324 = phi i64 [ %333, %321 ], [ %319, %313 ]
  %325 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %323, i64 0, i32 0
  %326 = load i32, i32* %325, align 4
  %327 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %322, i64 0, i32 0
  store i32 %326, i32* %327, align 4
  %328 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %323, i64 0, i32 1
  %329 = load i32, i32* %328, align 4
  %330 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %322, i64 0, i32 1
  store i32 %329, i32* %330, align 4
  %331 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %323, i64 1
  %332 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %322, i64 1
  %333 = add i64 %324, -1
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %321, !llvm.loop !53

335:                                              ; preds = %321, %313
  %336 = phi %"struct.std::__1::pair.95"* [ %310, %313 ], [ %332, %321 ]
  %337 = phi %"struct.std::__1::pair.95"* [ %309, %313 ], [ %331, %321 ]
  %338 = icmp ult i64 %316, 24
  br i1 %338, label %781, label %339

339:                                              ; preds = %335, %339
  %340 = phi %"struct.std::__1::pair.95"* [ %368, %339 ], [ %336, %335 ]
  %341 = phi %"struct.std::__1::pair.95"* [ %367, %339 ], [ %337, %335 ]
  %342 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %341, i64 0, i32 0
  %343 = load i32, i32* %342, align 4
  %344 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %340, i64 0, i32 0
  store i32 %343, i32* %344, align 4
  %345 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %341, i64 0, i32 1
  %346 = load i32, i32* %345, align 4
  %347 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %340, i64 0, i32 1
  store i32 %346, i32* %347, align 4
  %348 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %341, i64 1, i32 0
  %349 = load i32, i32* %348, align 4
  %350 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %340, i64 1, i32 0
  store i32 %349, i32* %350, align 4
  %351 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %341, i64 1, i32 1
  %352 = load i32, i32* %351, align 4
  %353 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %340, i64 1, i32 1
  store i32 %352, i32* %353, align 4
  %354 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %341, i64 2, i32 0
  %355 = load i32, i32* %354, align 4
  %356 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %340, i64 2, i32 0
  store i32 %355, i32* %356, align 4
  %357 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %341, i64 2, i32 1
  %358 = load i32, i32* %357, align 4
  %359 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %340, i64 2, i32 1
  store i32 %358, i32* %359, align 4
  %360 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %341, i64 3
  %361 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %360, i64 0, i32 0
  %362 = load i32, i32* %361, align 4
  %363 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %340, i64 3, i32 0
  store i32 %362, i32* %363, align 4
  %364 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %341, i64 3, i32 1
  %365 = load i32, i32* %364, align 4
  %366 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %340, i64 3, i32 1
  store i32 %365, i32* %366, align 4
  %367 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %341, i64 4
  %368 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %340, i64 4
  %369 = icmp eq %"struct.std::__1::pair.95"* %360, %305
  br i1 %369, label %781, label %339

370:                                              ; preds = %308
  %371 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %311, i64 0, i32 0
  %372 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %309, i64 0, i32 0
  %373 = load i32, i32* %371, align 4
  %374 = load i32, i32* %372, align 4
  %375 = icmp slt i32 %373, %374
  %376 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %310, i64 0, i32 0
  br i1 %375, label %377, label %379

377:                                              ; preds = %370
  store i32 %373, i32* %376, align 4
  %378 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %311, i64 1
  br label %381

379:                                              ; preds = %370
  store i32 %374, i32* %376, align 4
  %380 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %309, i64 1
  br label %381

381:                                              ; preds = %379, %377
  %382 = phi %"struct.std::__1::pair.95"* [ %311, %377 ], [ %309, %379 ]
  %383 = phi %"struct.std::__1::pair.95"* [ %378, %377 ], [ %311, %379 ]
  %384 = phi %"struct.std::__1::pair.95"* [ %309, %377 ], [ %380, %379 ]
  %385 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %382, i64 0, i32 1
  %386 = load i32, i32* %385, align 4
  %387 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %310, i64 0, i32 1
  store i32 %386, i32* %387, align 4
  %388 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %310, i64 1
  %389 = icmp eq %"struct.std::__1::pair.95"* %384, %306
  br i1 %389, label %781, label %308

390:                                              ; preds = %68, %390
  %391 = phi %"struct.std::__1::pair.95"* [ %432, %390 ], [ %71, %68 ]
  %392 = phi %"struct.std::__1::pair.95"* [ %431, %390 ], [ %72, %68 ]
  %393 = bitcast %"struct.std::__1::pair.95"* %392 to i64*
  %394 = bitcast %"struct.std::__1::pair.95"* %391 to i64*
  %395 = load i64, i64* %393, align 4
  store i64 %395, i64* %394, align 4
  %396 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %392, i64 1
  %397 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %391, i64 1
  %398 = bitcast %"struct.std::__1::pair.95"* %396 to i64*
  %399 = bitcast %"struct.std::__1::pair.95"* %397 to i64*
  %400 = load i64, i64* %398, align 4
  store i64 %400, i64* %399, align 4
  %401 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %392, i64 2
  %402 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %391, i64 2
  %403 = bitcast %"struct.std::__1::pair.95"* %401 to i64*
  %404 = bitcast %"struct.std::__1::pair.95"* %402 to i64*
  %405 = load i64, i64* %403, align 4
  store i64 %405, i64* %404, align 4
  %406 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %392, i64 3
  %407 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %391, i64 3
  %408 = bitcast %"struct.std::__1::pair.95"* %406 to i64*
  %409 = bitcast %"struct.std::__1::pair.95"* %407 to i64*
  %410 = load i64, i64* %408, align 4
  store i64 %410, i64* %409, align 4
  %411 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %392, i64 4
  %412 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %391, i64 4
  %413 = bitcast %"struct.std::__1::pair.95"* %411 to i64*
  %414 = bitcast %"struct.std::__1::pair.95"* %412 to i64*
  %415 = load i64, i64* %413, align 4
  store i64 %415, i64* %414, align 4
  %416 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %392, i64 5
  %417 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %391, i64 5
  %418 = bitcast %"struct.std::__1::pair.95"* %416 to i64*
  %419 = bitcast %"struct.std::__1::pair.95"* %417 to i64*
  %420 = load i64, i64* %418, align 4
  store i64 %420, i64* %419, align 4
  %421 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %392, i64 6
  %422 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %391, i64 6
  %423 = bitcast %"struct.std::__1::pair.95"* %421 to i64*
  %424 = bitcast %"struct.std::__1::pair.95"* %422 to i64*
  %425 = load i64, i64* %423, align 4
  store i64 %425, i64* %424, align 4
  %426 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %392, i64 7
  %427 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %391, i64 7
  %428 = bitcast %"struct.std::__1::pair.95"* %426 to i64*
  %429 = bitcast %"struct.std::__1::pair.95"* %427 to i64*
  %430 = load i64, i64* %428, align 4
  store i64 %430, i64* %429, align 4
  %431 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %392, i64 8
  %432 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %391, i64 8
  %433 = icmp eq %"struct.std::__1::pair.95"* %431, %32
  br i1 %433, label %304, label %390, !llvm.loop !54

434:                                              ; preds = %204, %516, %302
  %435 = phi %"struct.std::__1::pair.95"* [ %225, %302 ], [ %205, %204 ], [ %558, %516 ]
  %436 = icmp eq %"struct.std::__1::pair.95"* %435, %6
  br i1 %436, label %781, label %437

437:                                              ; preds = %434, %498
  %438 = phi %"struct.std::__1::pair.95"* [ %514, %498 ], [ %15, %434 ]
  %439 = phi %"struct.std::__1::pair.95"* [ %510, %498 ], [ %435, %434 ]
  %440 = phi %"struct.std::__1::pair.95"* [ %509, %498 ], [ %32, %434 ]
  %441 = icmp eq %"struct.std::__1::pair.95"* %440, %30
  br i1 %441, label %442, label %498

442:                                              ; preds = %437
  %443 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %439, i64 -1, i32 0
  %444 = ptrtoint i32* %443 to i64
  %445 = sub i64 %444, %9
  %446 = lshr i64 %445, 3
  %447 = add nuw nsw i64 %446, 1
  %448 = and i64 %447, 3
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %464, label %450

450:                                              ; preds = %442, %450
  %451 = phi %"struct.std::__1::pair.95"* [ %454, %450 ], [ %439, %442 ]
  %452 = phi %"struct.std::__1::pair.95"* [ %455, %450 ], [ %438, %442 ]
  %453 = phi i64 [ %462, %450 ], [ %448, %442 ]
  %454 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %451, i64 -1
  %455 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %452, i64 -1
  %456 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %454, i64 0, i32 0
  %457 = load i32, i32* %456, align 4
  %458 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %455, i64 0, i32 0
  store i32 %457, i32* %458, align 4
  %459 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %451, i64 -1, i32 1
  %460 = load i32, i32* %459, align 4
  %461 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %452, i64 -1, i32 1
  store i32 %460, i32* %461, align 4
  %462 = add i64 %453, -1
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %464, label %450, !llvm.loop !55

464:                                              ; preds = %450, %442
  %465 = phi %"struct.std::__1::pair.95"* [ %439, %442 ], [ %454, %450 ]
  %466 = phi %"struct.std::__1::pair.95"* [ %438, %442 ], [ %455, %450 ]
  %467 = icmp ult i64 %445, 24
  br i1 %467, label %781, label %468

468:                                              ; preds = %464, %468
  %469 = phi %"struct.std::__1::pair.95"* [ %489, %468 ], [ %465, %464 ]
  %470 = phi %"struct.std::__1::pair.95"* [ %490, %468 ], [ %466, %464 ]
  %471 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %469, i64 -1, i32 0
  %472 = load i32, i32* %471, align 4
  %473 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %470, i64 -1, i32 0
  store i32 %472, i32* %473, align 4
  %474 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %469, i64 -1, i32 1
  %475 = load i32, i32* %474, align 4
  %476 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %470, i64 -1, i32 1
  store i32 %475, i32* %476, align 4
  %477 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %469, i64 -2, i32 0
  %478 = load i32, i32* %477, align 4
  %479 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %470, i64 -2, i32 0
  store i32 %478, i32* %479, align 4
  %480 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %469, i64 -2, i32 1
  %481 = load i32, i32* %480, align 4
  %482 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %470, i64 -2, i32 1
  store i32 %481, i32* %482, align 4
  %483 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %469, i64 -3, i32 0
  %484 = load i32, i32* %483, align 4
  %485 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %470, i64 -3, i32 0
  store i32 %484, i32* %485, align 4
  %486 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %469, i64 -3, i32 1
  %487 = load i32, i32* %486, align 4
  %488 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %470, i64 -3, i32 1
  store i32 %487, i32* %488, align 4
  %489 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %469, i64 -4
  %490 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %470, i64 -4
  %491 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %489, i64 0, i32 0
  %492 = load i32, i32* %491, align 4
  %493 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %490, i64 0, i32 0
  store i32 %492, i32* %493, align 4
  %494 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %469, i64 -4, i32 1
  %495 = load i32, i32* %494, align 4
  %496 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %470, i64 -4, i32 1
  store i32 %495, i32* %496, align 4
  %497 = icmp eq %"struct.std::__1::pair.95"* %489, %6
  br i1 %497, label %781, label %468

498:                                              ; preds = %437
  %499 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %440, i64 -1
  %500 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %439, i64 -1
  %501 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %500, i64 0, i32 0
  %502 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %499, i64 0, i32 0
  %503 = load i32, i32* %501, align 4
  %504 = load i32, i32* %502, align 4
  %505 = icmp slt i32 %503, %504
  %506 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %438, i64 -1, i32 0
  %507 = select i1 %505, i32 %504, i32 %503
  %508 = select i1 %505, %"struct.std::__1::pair.95"* %440, %"struct.std::__1::pair.95"* %439
  %509 = select i1 %505, %"struct.std::__1::pair.95"* %499, %"struct.std::__1::pair.95"* %440
  %510 = select i1 %505, %"struct.std::__1::pair.95"* %439, %"struct.std::__1::pair.95"* %500
  store i32 %507, i32* %506, align 4
  %511 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %508, i64 -1, i32 1
  %512 = load i32, i32* %511, align 4
  %513 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %438, i64 -1, i32 1
  store i32 %512, i32* %513, align 4
  %514 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %438, i64 -1
  %515 = icmp eq %"struct.std::__1::pair.95"* %510, %6
  br i1 %515, label %781, label %437

516:                                              ; preds = %204, %516
  %517 = phi %"struct.std::__1::pair.95"* [ %558, %516 ], [ %206, %204 ]
  %518 = phi %"struct.std::__1::pair.95"* [ %557, %516 ], [ %207, %204 ]
  %519 = bitcast %"struct.std::__1::pair.95"* %518 to i64*
  %520 = bitcast %"struct.std::__1::pair.95"* %517 to i64*
  %521 = load i64, i64* %519, align 4
  store i64 %521, i64* %520, align 4
  %522 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %518, i64 1
  %523 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %517, i64 1
  %524 = bitcast %"struct.std::__1::pair.95"* %522 to i64*
  %525 = bitcast %"struct.std::__1::pair.95"* %523 to i64*
  %526 = load i64, i64* %524, align 4
  store i64 %526, i64* %525, align 4
  %527 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %518, i64 2
  %528 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %517, i64 2
  %529 = bitcast %"struct.std::__1::pair.95"* %527 to i64*
  %530 = bitcast %"struct.std::__1::pair.95"* %528 to i64*
  %531 = load i64, i64* %529, align 4
  store i64 %531, i64* %530, align 4
  %532 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %518, i64 3
  %533 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %517, i64 3
  %534 = bitcast %"struct.std::__1::pair.95"* %532 to i64*
  %535 = bitcast %"struct.std::__1::pair.95"* %533 to i64*
  %536 = load i64, i64* %534, align 4
  store i64 %536, i64* %535, align 4
  %537 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %518, i64 4
  %538 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %517, i64 4
  %539 = bitcast %"struct.std::__1::pair.95"* %537 to i64*
  %540 = bitcast %"struct.std::__1::pair.95"* %538 to i64*
  %541 = load i64, i64* %539, align 4
  store i64 %541, i64* %540, align 4
  %542 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %518, i64 5
  %543 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %517, i64 5
  %544 = bitcast %"struct.std::__1::pair.95"* %542 to i64*
  %545 = bitcast %"struct.std::__1::pair.95"* %543 to i64*
  %546 = load i64, i64* %544, align 4
  store i64 %546, i64* %545, align 4
  %547 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %518, i64 6
  %548 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %517, i64 6
  %549 = bitcast %"struct.std::__1::pair.95"* %547 to i64*
  %550 = bitcast %"struct.std::__1::pair.95"* %548 to i64*
  %551 = load i64, i64* %549, align 4
  store i64 %551, i64* %550, align 4
  %552 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %518, i64 7
  %553 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %517, i64 7
  %554 = bitcast %"struct.std::__1::pair.95"* %552 to i64*
  %555 = bitcast %"struct.std::__1::pair.95"* %553 to i64*
  %556 = load i64, i64* %554, align 4
  store i64 %556, i64* %555, align 4
  %557 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %518, i64 8
  %558 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %517, i64 8
  %559 = icmp eq %"struct.std::__1::pair.95"* %557, %15
  br i1 %559, label %434, label %516, !llvm.loop !56

560:                                              ; preds = %25, %567
  %561 = phi i64 [ %16, %25 ], [ %570, %567 ]
  %562 = phi i64 [ %19, %25 ], [ %569, %567 ]
  %563 = inttoptr i64 %562 to %"struct.std::__1::pair.95"*
  %564 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %563, i64 0, i32 0
  %565 = load i32, i32* %564, align 4
  %566 = icmp slt i32 %28, %565
  br i1 %566, label %572, label %567

567:                                              ; preds = %560
  %568 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %563, i64 1
  %569 = ptrtoint %"struct.std::__1::pair.95"* %568 to i64
  %570 = add nsw i64 %561, -1
  %571 = icmp eq i64 %570, 0
  br i1 %571, label %781, label %560

572:                                              ; preds = %560
  %573 = inttoptr i64 %562 to %"struct.std::__1::pair.95"*
  %574 = icmp slt i64 %561, %17
  br i1 %574, label %575, label %604

575:                                              ; preds = %572
  %576 = sdiv i64 %17, 2
  %577 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %26, i64 %576
  %578 = ptrtoint %"struct.std::__1::pair.95"* %577 to i64
  %579 = sub i64 %18, %562
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %599, label %581

581:                                              ; preds = %575
  %582 = ashr exact i64 %579, 3
  %583 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %577, i64 0, i32 0
  %584 = load i32, i32* %583, align 4
  br label %585

585:                                              ; preds = %585, %581
  %586 = phi %"struct.std::__1::pair.95"* [ %573, %581 ], [ %597, %585 ]
  %587 = phi i64 [ %582, %581 ], [ %596, %585 ]
  %588 = lshr i64 %587, 1
  %589 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %586, i64 %588
  %590 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %589, i64 0, i32 0
  %591 = load i32, i32* %590, align 4
  %592 = icmp slt i32 %584, %591
  %593 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %589, i64 1
  %594 = xor i64 %588, -1
  %595 = add i64 %587, %594
  %596 = select i1 %592, i64 %588, i64 %595
  %597 = select i1 %592, %"struct.std::__1::pair.95"* %586, %"struct.std::__1::pair.95"* %593
  %598 = icmp eq i64 %596, 0
  br i1 %598, label %599, label %585

599:                                              ; preds = %585, %575
  %600 = phi %"struct.std::__1::pair.95"* [ %573, %575 ], [ %597, %585 ]
  %601 = ptrtoint %"struct.std::__1::pair.95"* %600 to i64
  %602 = sub i64 %601, %562
  %603 = ashr exact i64 %602, 3
  br label %644

604:                                              ; preds = %572
  %605 = icmp eq i64 %561, 1
  br i1 %605, label %606, label %614

606:                                              ; preds = %604
  %607 = inttoptr i64 %18 to %"struct.std::__1::pair.95"*
  %608 = inttoptr i64 %562 to %"struct.std::__1::pair.95"*
  %609 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %608, i64 0, i32 0
  store i32 %28, i32* %609, align 4
  store i32 %565, i32* %27, align 4
  %610 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %608, i64 0, i32 1
  %611 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %607, i64 0, i32 1
  %612 = load i32, i32* %610, align 4
  %613 = load i32, i32* %611, align 4
  store i32 %613, i32* %610, align 4
  store i32 %612, i32* %611, align 4
  br label %781

614:                                              ; preds = %604
  %615 = sdiv i64 %561, 2
  %616 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %573, i64 %615
  %617 = ptrtoint %"struct.std::__1::pair.95"* %616 to i64
  %618 = ptrtoint %"struct.std::__1::pair.95"* %15 to i64
  %619 = sub i64 %618, %18
  %620 = icmp eq i64 %619, 0
  br i1 %620, label %639, label %621

621:                                              ; preds = %614
  %622 = ashr exact i64 %619, 3
  %623 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %616, i64 0, i32 0
  %624 = load i32, i32* %623, align 4
  br label %625

625:                                              ; preds = %625, %621
  %626 = phi %"struct.std::__1::pair.95"* [ %26, %621 ], [ %637, %625 ]
  %627 = phi i64 [ %622, %621 ], [ %636, %625 ]
  %628 = lshr i64 %627, 1
  %629 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %626, i64 %628
  %630 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %629, i64 0, i32 0
  %631 = load i32, i32* %630, align 4
  %632 = icmp slt i32 %631, %624
  %633 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %629, i64 1
  %634 = xor i64 %628, -1
  %635 = add i64 %627, %634
  %636 = select i1 %632, i64 %635, i64 %628
  %637 = select i1 %632, %"struct.std::__1::pair.95"* %633, %"struct.std::__1::pair.95"* %626
  %638 = icmp eq i64 %636, 0
  br i1 %638, label %639, label %625

639:                                              ; preds = %625, %614
  %640 = phi %"struct.std::__1::pair.95"* [ %26, %614 ], [ %637, %625 ]
  %641 = ptrtoint %"struct.std::__1::pair.95"* %640 to i64
  %642 = sub i64 %641, %18
  %643 = ashr exact i64 %642, 3
  br label %644

644:                                              ; preds = %639, %599
  %645 = phi i64 [ %601, %599 ], [ %617, %639 ]
  %646 = phi i64 [ %578, %599 ], [ %641, %639 ]
  %647 = phi i64 [ %576, %599 ], [ %643, %639 ]
  %648 = phi i64 [ %603, %599 ], [ %615, %639 ]
  %649 = sub nsw i64 %561, %648
  %650 = sub nsw i64 %17, %647
  %651 = inttoptr i64 %645 to %"struct.std::__1::pair.95"*
  %652 = inttoptr i64 %646 to %"struct.std::__1::pair.95"*
  %653 = icmp eq %"struct.std::__1::pair.95"* %651, %26
  br i1 %653, label %766, label %654

654:                                              ; preds = %644
  %655 = icmp eq %"struct.std::__1::pair.95"* %26, %652
  br i1 %655, label %766, label %656

656:                                              ; preds = %654
  %657 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %651, i64 0, i32 0
  %658 = load i32, i32* %657, align 4
  store i32 %28, i32* %657, align 4
  store i32 %658, i32* %27, align 4
  %659 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %651, i64 0, i32 1
  %660 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %26, i64 0, i32 1
  %661 = load i32, i32* %659, align 4
  %662 = load i32, i32* %660, align 4
  store i32 %662, i32* %659, align 4
  store i32 %661, i32* %660, align 4
  %663 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %651, i64 1
  %664 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %26, i64 1
  %665 = icmp eq %"struct.std::__1::pair.95"* %664, %652
  br i1 %665, label %735, label %666

666:                                              ; preds = %656
  %667 = getelementptr %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %652, i64 -2
  %668 = bitcast %"struct.std::__1::pair.95"* %667 to i8*
  %669 = sub i64 0, %18
  %670 = getelementptr i8, i8* %668, i64 %669
  %671 = ptrtoint i8* %670 to i64
  %672 = and i64 %671, 8
  %673 = icmp eq i64 %672, 0
  br i1 %673, label %674, label %689

674:                                              ; preds = %666
  %675 = ptrtoint %"struct.std::__1::pair.95"* %664 to i64
  %676 = icmp eq %"struct.std::__1::pair.95"* %663, %26
  %677 = select i1 %676, i64 %675, i64 %18
  %678 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %663, i64 0, i32 0
  %679 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %664, i64 0, i32 0
  %680 = load i32, i32* %678, align 4
  %681 = load i32, i32* %679, align 4
  store i32 %681, i32* %678, align 4
  store i32 %680, i32* %679, align 4
  %682 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %651, i64 1, i32 1
  %683 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %26, i64 1, i32 1
  %684 = load i32, i32* %682, align 4
  %685 = load i32, i32* %683, align 4
  store i32 %685, i32* %682, align 4
  store i32 %684, i32* %683, align 4
  %686 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %651, i64 2
  %687 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %26, i64 2
  %688 = inttoptr i64 %677 to %"struct.std::__1::pair.95"*
  br label %689

689:                                              ; preds = %674, %666
  %690 = phi i64 [ %677, %674 ], [ undef, %666 ]
  %691 = phi %"struct.std::__1::pair.95"* [ %686, %674 ], [ undef, %666 ]
  %692 = phi %"struct.std::__1::pair.95"* [ %688, %674 ], [ %26, %666 ]
  %693 = phi %"struct.std::__1::pair.95"* [ %687, %674 ], [ %664, %666 ]
  %694 = phi %"struct.std::__1::pair.95"* [ %686, %674 ], [ %663, %666 ]
  %695 = phi i64 [ %677, %674 ], [ %18, %666 ]
  %696 = icmp ult i8* %670, inttoptr (i64 8 to i8*)
  br i1 %696, label %731, label %697

697:                                              ; preds = %689, %697
  %698 = phi %"struct.std::__1::pair.95"* [ %730, %697 ], [ %692, %689 ]
  %699 = phi %"struct.std::__1::pair.95"* [ %728, %697 ], [ %693, %689 ]
  %700 = phi %"struct.std::__1::pair.95"* [ %727, %697 ], [ %694, %689 ]
  %701 = phi i64 [ %718, %697 ], [ %695, %689 ]
  %702 = ptrtoint %"struct.std::__1::pair.95"* %699 to i64
  %703 = icmp eq %"struct.std::__1::pair.95"* %700, %698
  %704 = select i1 %703, i64 %702, i64 %701
  %705 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %700, i64 0, i32 0
  %706 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %699, i64 0, i32 0
  %707 = load i32, i32* %705, align 4
  %708 = load i32, i32* %706, align 4
  store i32 %708, i32* %705, align 4
  store i32 %707, i32* %706, align 4
  %709 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %700, i64 0, i32 1
  %710 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %699, i64 0, i32 1
  %711 = load i32, i32* %709, align 4
  %712 = load i32, i32* %710, align 4
  store i32 %712, i32* %709, align 4
  store i32 %711, i32* %710, align 4
  %713 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %700, i64 1
  %714 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %699, i64 1
  %715 = inttoptr i64 %704 to %"struct.std::__1::pair.95"*
  %716 = ptrtoint %"struct.std::__1::pair.95"* %714 to i64
  %717 = icmp eq %"struct.std::__1::pair.95"* %713, %715
  %718 = select i1 %717, i64 %716, i64 %704
  %719 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %713, i64 0, i32 0
  %720 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %714, i64 0, i32 0
  %721 = load i32, i32* %719, align 4
  %722 = load i32, i32* %720, align 4
  store i32 %722, i32* %719, align 4
  store i32 %721, i32* %720, align 4
  %723 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %700, i64 1, i32 1
  %724 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %699, i64 1, i32 1
  %725 = load i32, i32* %723, align 4
  %726 = load i32, i32* %724, align 4
  store i32 %726, i32* %723, align 4
  store i32 %725, i32* %724, align 4
  %727 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %700, i64 2
  %728 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %699, i64 2
  %729 = icmp eq %"struct.std::__1::pair.95"* %728, %652
  %730 = inttoptr i64 %718 to %"struct.std::__1::pair.95"*
  br i1 %729, label %731, label %697

731:                                              ; preds = %697, %689
  %732 = phi i64 [ %690, %689 ], [ %718, %697 ]
  %733 = phi %"struct.std::__1::pair.95"* [ %691, %689 ], [ %727, %697 ]
  %734 = inttoptr i64 %732 to %"struct.std::__1::pair.95"*
  br label %735

735:                                              ; preds = %731, %656
  %736 = phi i64 [ %18, %656 ], [ %732, %731 ]
  %737 = phi %"struct.std::__1::pair.95"* [ %663, %656 ], [ %733, %731 ]
  %738 = phi %"struct.std::__1::pair.95"* [ %26, %656 ], [ %734, %731 ]
  %739 = icmp eq %"struct.std::__1::pair.95"* %737, %738
  br i1 %739, label %766, label %740

740:                                              ; preds = %735
  %741 = inttoptr i64 %736 to %"struct.std::__1::pair.95"*
  br label %742

742:                                              ; preds = %740, %763
  %743 = phi i64 [ %736, %740 ], [ %765, %763 ]
  %744 = phi %"struct.std::__1::pair.95"* [ %737, %740 ], [ %758, %763 ]
  %745 = phi %"struct.std::__1::pair.95"* [ %741, %740 ], [ %759, %763 ]
  %746 = inttoptr i64 %743 to %"struct.std::__1::pair.95"*
  br label %747

747:                                              ; preds = %742, %762
  %748 = phi %"struct.std::__1::pair.95"* [ %758, %762 ], [ %744, %742 ]
  %749 = phi %"struct.std::__1::pair.95"* [ %746, %762 ], [ %745, %742 ]
  %750 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %748, i64 0, i32 0
  %751 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %749, i64 0, i32 0
  %752 = load i32, i32* %750, align 4
  %753 = load i32, i32* %751, align 4
  store i32 %753, i32* %750, align 4
  store i32 %752, i32* %751, align 4
  %754 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %748, i64 0, i32 1
  %755 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %749, i64 0, i32 1
  %756 = load i32, i32* %754, align 4
  %757 = load i32, i32* %755, align 4
  store i32 %757, i32* %754, align 4
  store i32 %756, i32* %755, align 4
  %758 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %748, i64 1
  %759 = getelementptr inbounds %"struct.std::__1::pair.95", %"struct.std::__1::pair.95"* %749, i64 1
  %760 = icmp eq %"struct.std::__1::pair.95"* %759, %652
  %761 = icmp eq %"struct.std::__1::pair.95"* %758, %746
  br i1 %760, label %762, label %763

762:                                              ; preds = %747
  br i1 %761, label %766, label %747

763:                                              ; preds = %747
  %764 = ptrtoint %"struct.std::__1::pair.95"* %759 to i64
  %765 = select i1 %761, i64 %764, i64 %743
  br label %742

766:                                              ; preds = %762, %644, %654, %735
  %767 = phi %"struct.std::__1::pair.95"* [ %651, %654 ], [ %652, %644 ], [ %737, %735 ], [ %737, %762 ]
  %768 = add nsw i64 %648, %647
  %769 = add nsw i64 %649, %650
  %770 = icmp slt i64 %768, %769
  br i1 %770, label %771, label %773

771:                                              ; preds = %766
  %772 = ptrtoint %"struct.std::__1::pair.95"* %767 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat11ElementTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_SO_T_NS_15iterator_traitsISO_E15difference_typeESS_PNSR_10value_typeEl(%"struct.std::__1::pair.95"* %573, %"struct.std::__1::pair.95"* %651, %"struct.std::__1::pair.95"* %767, %"struct.base::internal::flat_tree<url_pattern_index::proto::ElementType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType> > > >::value_compare"* dereferenceable(1) %3, i64 %648, i64 %647, %"struct.std::__1::pair.95"* %6, i64 %7)
  br label %774

773:                                              ; preds = %766
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN17url_pattern_index5proto11ElementTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat11ElementTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_SO_T_NS_15iterator_traitsISO_E15difference_typeESS_PNSR_10value_typeEl(%"struct.std::__1::pair.95"* %767, %"struct.std::__1::pair.95"* %652, %"struct.std::__1::pair.95"* %15, %"struct.base::internal::flat_tree<url_pattern_index::proto::ElementType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ElementType, url_pattern_index::flat::ElementType> > > >::value_compare"* dereferenceable(1) %3, i64 %649, i64 %650, %"struct.std::__1::pair.95"* %6, i64 %7)
  br label %774

774:                                              ; preds = %771, %773
  %775 = phi i64 [ %772, %771 ], [ %562, %773 ]
  %776 = phi i64 [ %646, %771 ], [ %645, %773 ]
  %777 = phi i64 [ %650, %771 ], [ %647, %773 ]
  %778 = phi i64 [ %649, %771 ], [ %648, %773 ]
  %779 = phi %"struct.std::__1::pair.95"* [ %15, %771 ], [ %767, %773 ]
  %780 = icmp eq i64 %777, 0
  br i1 %780, label %781, label %14

781:                                              ; preds = %774, %23, %567, %381, %335, %339, %498, %464, %468, %8, %606, %434, %304, %171, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS0_8GetFirstENSt3__14lessIvEENS6_6vectorINS6_4pairIS4_NS2_4flat14ActivationTypeEEENS6_9allocatorISD_EEEEE15sort_and_uniqueENS6_11__wrap_iterIPSD_EESK_(%"class.base::internal::flat_tree.115"*, %"struct.std::__1::pair.118"*, %"struct.std::__1::pair.118"*) local_unnamed_addr #2 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair.118"* %2 to i64
  %5 = alloca %"struct.base::internal::flat_tree<url_pattern_index::proto::ActivationType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType> > > >::value_compare", align 1
  %6 = getelementptr inbounds %"struct.base::internal::flat_tree<url_pattern_index::proto::ActivationType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType> > > >::value_compare", %"struct.base::internal::flat_tree<url_pattern_index::proto::ActivationType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType> > > >::value_compare"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  %7 = ptrtoint %"struct.std::__1::pair.118"* %1 to i64
  %8 = sub i64 %4, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp sgt i64 %8, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %3
  %12 = icmp slt i64 %9, 1152921504606846975
  %13 = select i1 %12, i64 %9, i64 1152921504606846975
  br label %14

14:                                               ; preds = %19, %11
  %15 = phi i64 [ %20, %19 ], [ %13, %11 ]
  %16 = shl i64 %15, 3
  %17 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %16, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #20
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = lshr i64 %15, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %14

22:                                               ; preds = %19, %3
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat14ActivationTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeEl(%"struct.std::__1::pair.118"* %1, %"struct.std::__1::pair.118"* %2, %"struct.base::internal::flat_tree<url_pattern_index::proto::ActivationType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType> > > >::value_compare"* nonnull dereferenceable(1) %5, i64 %9, %"struct.std::__1::pair.118"* null, i64 0) #20
  br label %25

23:                                               ; preds = %14
  %24 = bitcast i8* %17 to %"struct.std::__1::pair.118"*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat14ActivationTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeEl(%"struct.std::__1::pair.118"* %1, %"struct.std::__1::pair.118"* %2, %"struct.base::internal::flat_tree<url_pattern_index::proto::ActivationType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType> > > >::value_compare"* nonnull dereferenceable(1) %5, i64 %9, %"struct.std::__1::pair.118"* nonnull %24, i64 %15) #20
  call void @_ZdlPv(i8* nonnull %17) #21
  br label %25

25:                                               ; preds = %22, %23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  %26 = icmp eq %"struct.std::__1::pair.118"* %1, %2
  br i1 %26, label %107, label %27

27:                                               ; preds = %25, %31
  %28 = phi %"struct.std::__1::pair.118"* [ %29, %31 ], [ %1, %25 ]
  %29 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %28, i64 1
  %30 = icmp eq %"struct.std::__1::pair.118"* %29, %2
  br i1 %30, label %107, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %28, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %29, i64 0, i32 0
  %34 = load i32, i32* %32, align 4
  %35 = load i32, i32* %33, align 4
  %36 = icmp slt i32 %34, %35
  br i1 %36, label %27, label %37

37:                                               ; preds = %31
  %38 = ptrtoint %"struct.std::__1::pair.118"* %28 to i64
  %39 = icmp eq %"struct.std::__1::pair.118"* %28, %2
  br i1 %39, label %107, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %28, i64 2
  %42 = icmp eq %"struct.std::__1::pair.118"* %41, %2
  br i1 %42, label %103, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %28, i64 1
  %45 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %2, i64 -3, i32 0
  %46 = ptrtoint i32* %45 to i64
  %47 = sub i64 %46, %38
  %48 = and i64 %47, 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %67

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %28, i64 0, i32 0
  %52 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %41, i64 0, i32 0
  %53 = load i32, i32* %51, align 4
  %54 = load i32, i32* %52, align 4
  %55 = icmp slt i32 %53, %54
  br i1 %55, label %56, label %63

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %28, i64 1
  %58 = ptrtoint %"struct.std::__1::pair.118"* %57 to i64
  %59 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %57, i64 0, i32 0
  store i32 %54, i32* %59, align 4
  %60 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %28, i64 2, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %28, i64 1, i32 1
  store i32 %61, i32* %62, align 4
  br label %63

63:                                               ; preds = %56, %50
  %64 = phi i64 [ %38, %50 ], [ %58, %56 ]
  %65 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %28, i64 3
  %66 = inttoptr i64 %64 to %"struct.std::__1::pair.118"*
  br label %67

67:                                               ; preds = %63, %43
  %68 = phi i64 [ undef, %43 ], [ %64, %63 ]
  %69 = phi %"struct.std::__1::pair.118"* [ %28, %43 ], [ %66, %63 ]
  %70 = phi %"struct.std::__1::pair.118"* [ %41, %43 ], [ %65, %63 ]
  %71 = phi %"struct.std::__1::pair.118"* [ %44, %43 ], [ %41, %63 ]
  %72 = phi i64 [ %38, %43 ], [ %64, %63 ]
  %73 = icmp ult i64 %47, 8
  br i1 %73, label %100, label %74

74:                                               ; preds = %67, %182
  %75 = phi %"struct.std::__1::pair.118"* [ %186, %182 ], [ %69, %67 ]
  %76 = phi %"struct.std::__1::pair.118"* [ %184, %182 ], [ %70, %67 ]
  %77 = phi %"struct.std::__1::pair.118"* [ %93, %182 ], [ %71, %67 ]
  %78 = phi i64 [ %183, %182 ], [ %72, %67 ]
  %79 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %75, i64 0, i32 0
  %80 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %76, i64 0, i32 0
  %81 = load i32, i32* %79, align 4
  %82 = load i32, i32* %80, align 4
  %83 = icmp slt i32 %81, %82
  br i1 %83, label %84, label %91

84:                                               ; preds = %74
  %85 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %75, i64 1
  %86 = ptrtoint %"struct.std::__1::pair.118"* %85 to i64
  %87 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %85, i64 0, i32 0
  store i32 %82, i32* %87, align 4
  %88 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %77, i64 1, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %75, i64 1, i32 1
  store i32 %89, i32* %90, align 4
  br label %91

91:                                               ; preds = %84, %74
  %92 = phi i64 [ %78, %74 ], [ %86, %84 ]
  %93 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %76, i64 1
  %94 = inttoptr i64 %92 to %"struct.std::__1::pair.118"*
  %95 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %94, i64 0, i32 0
  %96 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %93, i64 0, i32 0
  %97 = load i32, i32* %95, align 4
  %98 = load i32, i32* %96, align 4
  %99 = icmp slt i32 %97, %98
  br i1 %99, label %175, label %182

100:                                              ; preds = %182, %67
  %101 = phi i64 [ %68, %67 ], [ %183, %182 ]
  %102 = inttoptr i64 %101 to %"struct.std::__1::pair.118"*
  br label %103

103:                                              ; preds = %100, %40
  %104 = phi %"struct.std::__1::pair.118"* [ %28, %40 ], [ %102, %100 ]
  %105 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %104, i64 1
  %106 = ptrtoint %"struct.std::__1::pair.118"* %105 to i64
  br label %107

107:                                              ; preds = %27, %25, %37, %103
  %108 = phi i64 [ %106, %103 ], [ %38, %37 ], [ %4, %25 ], [ %4, %27 ]
  %109 = inttoptr i64 %108 to %"struct.std::__1::pair.118"*
  %110 = icmp eq %"struct.std::__1::pair.118"* %109, %2
  br i1 %110, label %174, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.base::internal::flat_tree.115", %"class.base::internal::flat_tree.115"* %0, i64 0, i32 0, i32 0, i32 1
  %113 = load %"struct.std::__1::pair.118"*, %"struct.std::__1::pair.118"** %112, align 8
  %114 = icmp eq %"struct.std::__1::pair.118"* %113, %2
  br i1 %114, label %172, label %115

115:                                              ; preds = %111
  %116 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %113, i64 -1, i32 0
  %117 = ptrtoint i32* %116 to i64
  %118 = sub i64 %117, %4
  %119 = lshr i64 %118, 3
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 3
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %137, label %123

123:                                              ; preds = %115, %123
  %124 = phi %"struct.std::__1::pair.118"* [ %134, %123 ], [ %109, %115 ]
  %125 = phi %"struct.std::__1::pair.118"* [ %133, %123 ], [ %2, %115 ]
  %126 = phi i64 [ %135, %123 ], [ %121, %115 ]
  %127 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %125, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %124, i64 0, i32 0
  store i32 %128, i32* %129, align 4
  %130 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %125, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %124, i64 0, i32 1
  store i32 %131, i32* %132, align 4
  %133 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %125, i64 1
  %134 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %124, i64 1
  %135 = add i64 %126, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %123, !llvm.loop !57

137:                                              ; preds = %123, %115
  %138 = phi %"struct.std::__1::pair.118"* [ undef, %115 ], [ %134, %123 ]
  %139 = phi %"struct.std::__1::pair.118"* [ %109, %115 ], [ %134, %123 ]
  %140 = phi %"struct.std::__1::pair.118"* [ %2, %115 ], [ %133, %123 ]
  %141 = icmp ult i64 %118, 24
  br i1 %141, label %172, label %142

142:                                              ; preds = %137, %142
  %143 = phi %"struct.std::__1::pair.118"* [ %170, %142 ], [ %139, %137 ]
  %144 = phi %"struct.std::__1::pair.118"* [ %169, %142 ], [ %140, %137 ]
  %145 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %144, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %143, i64 0, i32 0
  store i32 %146, i32* %147, align 4
  %148 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %144, i64 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %143, i64 0, i32 1
  store i32 %149, i32* %150, align 4
  %151 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %144, i64 1, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %143, i64 1, i32 0
  store i32 %152, i32* %153, align 4
  %154 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %144, i64 1, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %143, i64 1, i32 1
  store i32 %155, i32* %156, align 4
  %157 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %144, i64 2, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %143, i64 2, i32 0
  store i32 %158, i32* %159, align 4
  %160 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %144, i64 2, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %143, i64 2, i32 1
  store i32 %161, i32* %162, align 4
  %163 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %144, i64 3, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %143, i64 3, i32 0
  store i32 %164, i32* %165, align 4
  %166 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %144, i64 3, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %143, i64 3, i32 1
  store i32 %167, i32* %168, align 4
  %169 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %144, i64 4
  %170 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %143, i64 4
  %171 = icmp eq %"struct.std::__1::pair.118"* %169, %113
  br i1 %171, label %172, label %142

172:                                              ; preds = %137, %142, %111
  %173 = phi %"struct.std::__1::pair.118"* [ %109, %111 ], [ %138, %137 ], [ %170, %142 ]
  store %"struct.std::__1::pair.118"* %173, %"struct.std::__1::pair.118"** %112, align 8
  br label %174

174:                                              ; preds = %107, %172
  ret void

175:                                              ; preds = %91
  %176 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %94, i64 1
  %177 = ptrtoint %"struct.std::__1::pair.118"* %176 to i64
  %178 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %176, i64 0, i32 0
  store i32 %98, i32* %178, align 4
  %179 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %76, i64 1, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %94, i64 1, i32 1
  store i32 %180, i32* %181, align 4
  br label %182

182:                                              ; preds = %175, %91
  %183 = phi i64 [ %92, %91 ], [ %177, %175 ]
  %184 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %76, i64 2
  %185 = icmp eq %"struct.std::__1::pair.118"* %184, %2
  %186 = inttoptr i64 %183 to %"struct.std::__1::pair.118"*
  br i1 %185, label %100, label %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat14ActivationTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeEl(%"struct.std::__1::pair.118"*, %"struct.std::__1::pair.118"*, %"struct.base::internal::flat_tree<url_pattern_index::proto::ActivationType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType> > > >::value_compare"* dereferenceable(1), i64, %"struct.std::__1::pair.118"*, i64) local_unnamed_addr #2 comdat {
  switch i64 %3, label %18 [
    i64 0, label %206
    i64 1, label %206
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %1, i64 -1, i32 0
  %9 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %0, i64 0, i32 0
  %10 = load i32, i32* %8, align 4
  %11 = load i32, i32* %9, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %206

13:                                               ; preds = %7
  store i32 %10, i32* %9, align 4
  store i32 %11, i32* %8, align 4
  %14 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %1, i64 -1, i32 1
  %16 = load i32, i32* %14, align 4
  %17 = load i32, i32* %15, align 4
  store i32 %17, i32* %14, align 4
  store i32 %16, i32* %15, align 4
  br label %206

18:                                               ; preds = %6
  %19 = icmp slt i64 %3, 1
  br i1 %19, label %20, label %51

20:                                               ; preds = %18
  %21 = icmp eq %"struct.std::__1::pair.118"* %0, %1
  br i1 %21, label %206, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %0, i64 1
  %24 = icmp eq %"struct.std::__1::pair.118"* %23, %1
  br i1 %24, label %206, label %25

25:                                               ; preds = %22, %39
  %26 = phi %"struct.std::__1::pair.118"* [ %43, %39 ], [ %23, %22 ]
  %27 = bitcast %"struct.std::__1::pair.118"* %26 to i64*
  %28 = load i64, i64* %27, align 4
  %29 = trunc i64 %28 to i32
  %30 = lshr i64 %28, 32
  %31 = trunc i64 %30 to i32
  %32 = icmp eq %"struct.std::__1::pair.118"* %26, %0
  br i1 %32, label %39, label %33

33:                                               ; preds = %25, %45
  %34 = phi %"struct.std::__1::pair.118"* [ %35, %45 ], [ %26, %25 ]
  %35 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %34, i64 -1
  %36 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %37, %29
  br i1 %38, label %45, label %39

39:                                               ; preds = %45, %33, %25
  %40 = phi %"struct.std::__1::pair.118"* [ %0, %25 ], [ %34, %33 ], [ %0, %45 ]
  %41 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %40, i64 0, i32 0
  store i32 %29, i32* %41, align 4
  %42 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %40, i64 0, i32 1
  store i32 %31, i32* %42, align 4
  %43 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %26, i64 1
  %44 = icmp eq %"struct.std::__1::pair.118"* %43, %1
  br i1 %44, label %206, label %25

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %34, i64 0, i32 0
  store i32 %37, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %34, i64 -1, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %34, i64 0, i32 1
  store i32 %48, i32* %49, align 4
  %50 = icmp eq %"struct.std::__1::pair.118"* %35, %0
  br i1 %50, label %39, label %33

51:                                               ; preds = %18
  %52 = lshr i64 %3, 1
  %53 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %0, i64 %52
  %54 = icmp sgt i64 %3, %5
  br i1 %54, label %204, label %55

55:                                               ; preds = %51
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat14ActivationTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeE(%"struct.std::__1::pair.118"* %0, %"struct.std::__1::pair.118"* %53, %"struct.base::internal::flat_tree<url_pattern_index::proto::ActivationType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType> > > >::value_compare"* dereferenceable(1) %2, i64 %52, %"struct.std::__1::pair.118"* %4)
  %56 = sub nsw i64 %3, %52
  %57 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %4, i64 %52
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat14ActivationTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeE(%"struct.std::__1::pair.118"* %53, %"struct.std::__1::pair.118"* %1, %"struct.base::internal::flat_tree<url_pattern_index::proto::ActivationType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType> > > >::value_compare"* dereferenceable(1) %2, i64 %56, %"struct.std::__1::pair.118"* %57)
  %58 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %4, i64 %3
  br label %89

59:                                               ; preds = %165
  %60 = icmp eq %"struct.std::__1::pair.118"* %167, %58
  br i1 %60, label %206, label %61

61:                                               ; preds = %59
  %62 = ptrtoint %"struct.std::__1::pair.118"* %167 to i64
  %63 = add i64 %3, -1
  %64 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %4, i64 %63, i32 0
  %65 = ptrtoint i32* %64 to i64
  %66 = sub i64 %65, %62
  %67 = lshr i64 %66, 3
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %85, label %71

71:                                               ; preds = %61, %71
  %72 = phi %"struct.std::__1::pair.118"* [ %81, %71 ], [ %167, %61 ]
  %73 = phi %"struct.std::__1::pair.118"* [ %82, %71 ], [ %172, %61 ]
  %74 = phi i64 [ %83, %71 ], [ %69, %61 ]
  %75 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %72, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %73, i64 0, i32 0
  store i32 %76, i32* %77, align 4
  %78 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %72, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %73, i64 0, i32 1
  store i32 %79, i32* %80, align 4
  %81 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %72, i64 1
  %82 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %73, i64 1
  %83 = add i64 %74, -1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %71, !llvm.loop !58

85:                                               ; preds = %71, %61
  %86 = phi %"struct.std::__1::pair.118"* [ %167, %61 ], [ %81, %71 ]
  %87 = phi %"struct.std::__1::pair.118"* [ %172, %61 ], [ %82, %71 ]
  %88 = icmp ult i64 %66, 24
  br i1 %88, label %206, label %174

89:                                               ; preds = %55, %165
  %90 = phi %"struct.std::__1::pair.118"* [ %168, %165 ], [ %4, %55 ]
  %91 = phi %"struct.std::__1::pair.118"* [ %167, %165 ], [ %57, %55 ]
  %92 = phi %"struct.std::__1::pair.118"* [ %172, %165 ], [ %0, %55 ]
  %93 = icmp eq %"struct.std::__1::pair.118"* %91, %58
  br i1 %93, label %94, label %154

94:                                               ; preds = %89
  %95 = icmp eq %"struct.std::__1::pair.118"* %90, %57
  br i1 %95, label %206, label %96

96:                                               ; preds = %94
  %97 = ptrtoint %"struct.std::__1::pair.118"* %90 to i64
  %98 = add nsw i64 %52, -1
  %99 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %4, i64 %98, i32 0
  %100 = ptrtoint i32* %99 to i64
  %101 = sub i64 %100, %97
  %102 = lshr i64 %101, 3
  %103 = add nuw nsw i64 %102, 1
  %104 = and i64 %103, 3
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %120, label %106

106:                                              ; preds = %96, %106
  %107 = phi %"struct.std::__1::pair.118"* [ %116, %106 ], [ %90, %96 ]
  %108 = phi %"struct.std::__1::pair.118"* [ %117, %106 ], [ %92, %96 ]
  %109 = phi i64 [ %118, %106 ], [ %104, %96 ]
  %110 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %107, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %108, i64 0, i32 0
  store i32 %111, i32* %112, align 4
  %113 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %107, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %108, i64 0, i32 1
  store i32 %114, i32* %115, align 4
  %116 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %107, i64 1
  %117 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %108, i64 1
  %118 = add i64 %109, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %106, !llvm.loop !59

120:                                              ; preds = %106, %96
  %121 = phi %"struct.std::__1::pair.118"* [ %90, %96 ], [ %116, %106 ]
  %122 = phi %"struct.std::__1::pair.118"* [ %92, %96 ], [ %117, %106 ]
  %123 = icmp ult i64 %101, 24
  br i1 %123, label %206, label %124

124:                                              ; preds = %120, %124
  %125 = phi %"struct.std::__1::pair.118"* [ %151, %124 ], [ %121, %120 ]
  %126 = phi %"struct.std::__1::pair.118"* [ %152, %124 ], [ %122, %120 ]
  %127 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %125, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %126, i64 0, i32 0
  store i32 %128, i32* %129, align 4
  %130 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %125, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %126, i64 0, i32 1
  store i32 %131, i32* %132, align 4
  %133 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %125, i64 1, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %126, i64 1, i32 0
  store i32 %134, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %125, i64 1, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %126, i64 1, i32 1
  store i32 %137, i32* %138, align 4
  %139 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %125, i64 2, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %126, i64 2, i32 0
  store i32 %140, i32* %141, align 4
  %142 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %125, i64 2, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %126, i64 2, i32 1
  store i32 %143, i32* %144, align 4
  %145 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %125, i64 3, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %126, i64 3, i32 0
  store i32 %146, i32* %147, align 4
  %148 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %125, i64 3, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %126, i64 3, i32 1
  store i32 %149, i32* %150, align 4
  %151 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %125, i64 4
  %152 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %126, i64 4
  %153 = icmp eq %"struct.std::__1::pair.118"* %151, %57
  br i1 %153, label %206, label %124

154:                                              ; preds = %89
  %155 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %91, i64 0, i32 0
  %156 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %90, i64 0, i32 0
  %157 = load i32, i32* %155, align 4
  %158 = load i32, i32* %156, align 4
  %159 = icmp slt i32 %157, %158
  %160 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %92, i64 0, i32 0
  br i1 %159, label %161, label %163

161:                                              ; preds = %154
  store i32 %157, i32* %160, align 4
  %162 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %91, i64 1
  br label %165

163:                                              ; preds = %154
  store i32 %158, i32* %160, align 4
  %164 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %90, i64 1
  br label %165

165:                                              ; preds = %163, %161
  %166 = phi %"struct.std::__1::pair.118"* [ %91, %161 ], [ %90, %163 ]
  %167 = phi %"struct.std::__1::pair.118"* [ %162, %161 ], [ %91, %163 ]
  %168 = phi %"struct.std::__1::pair.118"* [ %90, %161 ], [ %164, %163 ]
  %169 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %166, i64 0, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %92, i64 0, i32 1
  store i32 %170, i32* %171, align 4
  %172 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %92, i64 1
  %173 = icmp eq %"struct.std::__1::pair.118"* %168, %57
  br i1 %173, label %59, label %89

174:                                              ; preds = %85, %174
  %175 = phi %"struct.std::__1::pair.118"* [ %201, %174 ], [ %86, %85 ]
  %176 = phi %"struct.std::__1::pair.118"* [ %202, %174 ], [ %87, %85 ]
  %177 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %175, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %176, i64 0, i32 0
  store i32 %178, i32* %179, align 4
  %180 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %175, i64 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %176, i64 0, i32 1
  store i32 %181, i32* %182, align 4
  %183 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %175, i64 1, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %176, i64 1, i32 0
  store i32 %184, i32* %185, align 4
  %186 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %175, i64 1, i32 1
  %187 = load i32, i32* %186, align 4
  %188 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %176, i64 1, i32 1
  store i32 %187, i32* %188, align 4
  %189 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %175, i64 2, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %176, i64 2, i32 0
  store i32 %190, i32* %191, align 4
  %192 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %175, i64 2, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %176, i64 2, i32 1
  store i32 %193, i32* %194, align 4
  %195 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %175, i64 3, i32 0
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %176, i64 3, i32 0
  store i32 %196, i32* %197, align 4
  %198 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %175, i64 3, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %176, i64 3, i32 1
  store i32 %199, i32* %200, align 4
  %201 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %175, i64 4
  %202 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %176, i64 4
  %203 = icmp eq %"struct.std::__1::pair.118"* %201, %58
  br i1 %203, label %206, label %174

204:                                              ; preds = %51
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat14ActivationTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeEl(%"struct.std::__1::pair.118"* %0, %"struct.std::__1::pair.118"* %53, %"struct.base::internal::flat_tree<url_pattern_index::proto::ActivationType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType> > > >::value_compare"* dereferenceable(1) %2, i64 %52, %"struct.std::__1::pair.118"* %4, i64 %5)
  %205 = sub nsw i64 %3, %52
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat14ActivationTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeEl(%"struct.std::__1::pair.118"* %53, %"struct.std::__1::pair.118"* %1, %"struct.base::internal::flat_tree<url_pattern_index::proto::ActivationType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType> > > >::value_compare"* dereferenceable(1) %2, i64 %205, %"struct.std::__1::pair.118"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat14ActivationTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_SO_T_NS_15iterator_traitsISO_E15difference_typeESS_PNSR_10value_typeEl(%"struct.std::__1::pair.118"* %0, %"struct.std::__1::pair.118"* %53, %"struct.std::__1::pair.118"* %1, %"struct.base::internal::flat_tree<url_pattern_index::proto::ActivationType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType> > > >::value_compare"* dereferenceable(1) %2, i64 %52, i64 %205, %"struct.std::__1::pair.118"* %4, i64 %5)
  ret void

206:                                              ; preds = %85, %174, %120, %124, %39, %94, %59, %22, %20, %7, %13, %6, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat14ActivationTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeE(%"struct.std::__1::pair.118"*, %"struct.std::__1::pair.118"*, %"struct.base::internal::flat_tree<url_pattern_index::proto::ActivationType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType> > > >::value_compare"* dereferenceable(1), i64, %"struct.std::__1::pair.118"*) local_unnamed_addr #2 comdat {
  switch i64 %3, label %33 [
    i64 0, label %466
    i64 1, label %6
    i64 2, label %10
  ]

6:                                                ; preds = %5
  %7 = bitcast %"struct.std::__1::pair.118"* %0 to i64*
  %8 = bitcast %"struct.std::__1::pair.118"* %4 to i64*
  %9 = load i64, i64* %7, align 4
  store i64 %9, i64* %8, align 4
  br label %466

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %1, i64 -1
  %12 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %0, i64 0, i32 0
  %14 = load i32, i32* %12, align 4
  %15 = load i32, i32* %13, align 4
  %16 = icmp slt i32 %14, %15
  br i1 %16, label %17, label %25

17:                                               ; preds = %10
  %18 = bitcast %"struct.std::__1::pair.118"* %11 to i64*
  %19 = bitcast %"struct.std::__1::pair.118"* %4 to i64*
  %20 = load i64, i64* %18, align 4
  store i64 %20, i64* %19, align 4
  %21 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %4, i64 1
  %22 = bitcast %"struct.std::__1::pair.118"* %0 to i64*
  %23 = bitcast %"struct.std::__1::pair.118"* %21 to i64*
  %24 = load i64, i64* %22, align 4
  store i64 %24, i64* %23, align 4
  br label %466

25:                                               ; preds = %10
  %26 = bitcast %"struct.std::__1::pair.118"* %0 to i64*
  %27 = bitcast %"struct.std::__1::pair.118"* %4 to i64*
  %28 = load i64, i64* %26, align 4
  store i64 %28, i64* %27, align 4
  %29 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %4, i64 1
  %30 = bitcast %"struct.std::__1::pair.118"* %11 to i64*
  %31 = bitcast %"struct.std::__1::pair.118"* %29 to i64*
  %32 = load i64, i64* %30, align 4
  store i64 %32, i64* %31, align 4
  br label %466

33:                                               ; preds = %5
  %34 = icmp slt i64 %3, 9
  br i1 %34, label %35, label %85

35:                                               ; preds = %33
  %36 = icmp eq %"struct.std::__1::pair.118"* %0, %1
  br i1 %36, label %466, label %37

37:                                               ; preds = %35
  %38 = bitcast %"struct.std::__1::pair.118"* %0 to i64*
  %39 = bitcast %"struct.std::__1::pair.118"* %4 to i64*
  %40 = load i64, i64* %38, align 4
  store i64 %40, i64* %39, align 4
  %41 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %0, i64 1
  %42 = icmp eq %"struct.std::__1::pair.118"* %41, %1
  br i1 %42, label %466, label %43

43:                                               ; preds = %37, %82
  %44 = phi %"struct.std::__1::pair.118"* [ %83, %82 ], [ %41, %37 ]
  %45 = phi %"struct.std::__1::pair.118"* [ %47, %82 ], [ %4, %37 ]
  %46 = phi %"struct.std::__1::pair.118"* [ %44, %82 ], [ %0, %37 ]
  %47 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %45, i64 1
  %48 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %44, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %45, i64 0, i32 0
  %50 = load i32, i32* %48, align 4
  %51 = load i32, i32* %49, align 4
  %52 = icmp slt i32 %50, %51
  br i1 %52, label %53, label %78

53:                                               ; preds = %43
  %54 = bitcast %"struct.std::__1::pair.118"* %45 to i64*
  %55 = bitcast %"struct.std::__1::pair.118"* %47 to i64*
  %56 = load i64, i64* %54, align 4
  store i64 %56, i64* %55, align 4
  %57 = icmp eq %"struct.std::__1::pair.118"* %45, %4
  br i1 %57, label %71, label %58

58:                                               ; preds = %53, %65
  %59 = phi %"struct.std::__1::pair.118"* [ %60, %65 ], [ %45, %53 ]
  %60 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %59, i64 -1
  %61 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %60, i64 0, i32 0
  %62 = load i32, i32* %48, align 4
  %63 = load i32, i32* %61, align 4
  %64 = icmp slt i32 %62, %63
  br i1 %64, label %65, label %71

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %59, i64 0, i32 0
  store i32 %63, i32* %66, align 4
  %67 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %59, i64 -1, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %59, i64 0, i32 1
  store i32 %68, i32* %69, align 4
  %70 = icmp eq %"struct.std::__1::pair.118"* %60, %4
  br i1 %70, label %71, label %58

71:                                               ; preds = %65, %58, %53
  %72 = phi %"struct.std::__1::pair.118"* [ %4, %53 ], [ %59, %58 ], [ %4, %65 ]
  %73 = load i32, i32* %48, align 4
  %74 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %72, i64 0, i32 0
  store i32 %73, i32* %74, align 4
  %75 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %46, i64 1, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %72, i64 0, i32 1
  store i32 %76, i32* %77, align 4
  br label %82

78:                                               ; preds = %43
  %79 = bitcast %"struct.std::__1::pair.118"* %44 to i64*
  %80 = bitcast %"struct.std::__1::pair.118"* %47 to i64*
  %81 = load i64, i64* %79, align 4
  store i64 %81, i64* %80, align 4
  br label %82

82:                                               ; preds = %78, %71
  %83 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %44, i64 1
  %84 = icmp eq %"struct.std::__1::pair.118"* %83, %1
  br i1 %84, label %466, label %43

85:                                               ; preds = %33
  %86 = lshr i64 %3, 1
  %87 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %0, i64 %86
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat14ActivationTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeEl(%"struct.std::__1::pair.118"* %0, %"struct.std::__1::pair.118"* %87, %"struct.base::internal::flat_tree<url_pattern_index::proto::ActivationType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType> > > >::value_compare"* dereferenceable(1) %2, i64 %86, %"struct.std::__1::pair.118"* %4, i64 %86)
  %88 = sub nsw i64 %3, %86
  %89 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %4, i64 %86
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat14ActivationTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_T_NS_15iterator_traitsISO_E15difference_typeEPNSR_10value_typeEl(%"struct.std::__1::pair.118"* %87, %"struct.std::__1::pair.118"* %1, %"struct.base::internal::flat_tree<url_pattern_index::proto::ActivationType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType> > > >::value_compare"* dereferenceable(1) %2, i64 %88, %"struct.std::__1::pair.118"* %89, i64 %88)
  %90 = icmp eq i64 %86, 0
  br i1 %90, label %91, label %265

91:                                               ; preds = %461, %85
  %92 = phi %"struct.std::__1::pair.118"* [ %87, %85 ], [ %462, %461 ]
  %93 = phi %"struct.std::__1::pair.118"* [ %4, %85 ], [ %464, %461 ]
  %94 = ptrtoint %"struct.std::__1::pair.118"* %92 to i64
  %95 = icmp eq %"struct.std::__1::pair.118"* %92, %1
  br i1 %95, label %466, label %96

96:                                               ; preds = %91
  %97 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %1, i64 -1, i32 0
  %98 = ptrtoint i32* %97 to i64
  %99 = sub i64 %98, %94
  %100 = lshr i64 %99, 3
  %101 = add nuw nsw i64 %100, 1
  %102 = icmp ult i64 %101, 4
  br i1 %102, label %195, label %103

103:                                              ; preds = %96
  %104 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %1, i64 -1, i32 0
  %105 = ptrtoint i32* %104 to i64
  %106 = sub i64 %105, %94
  %107 = lshr i64 %106, 3
  %108 = add nuw nsw i64 %107, 1
  %109 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %93, i64 %108
  %110 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %92, i64 %108
  %111 = icmp ult %"struct.std::__1::pair.118"* %93, %110
  %112 = icmp ult %"struct.std::__1::pair.118"* %92, %109
  %113 = and i1 %111, %112
  br i1 %113, label %195, label %114

114:                                              ; preds = %103
  %115 = and i64 %101, 4611686018427387900
  %116 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %93, i64 %115
  %117 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %92, i64 %115
  %118 = add nsw i64 %115, -4
  %119 = lshr exact i64 %118, 2
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 3
  %122 = icmp ult i64 %118, 12
  br i1 %122, label %174, label %123

123:                                              ; preds = %114
  %124 = sub nsw i64 %120, %121
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi i64 [ 0, %123 ], [ %171, %125 ]
  %127 = phi i64 [ %124, %123 ], [ %172, %125 ]
  %128 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %93, i64 %126
  %129 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %92, i64 %126
  %130 = bitcast %"struct.std::__1::pair.118"* %129 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 4, !alias.scope !60
  %132 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %129, i64 2
  %133 = bitcast %"struct.std::__1::pair.118"* %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 4, !alias.scope !60
  %135 = bitcast %"struct.std::__1::pair.118"* %128 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %135, align 4, !alias.scope !63, !noalias !60
  %136 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %128, i64 2
  %137 = bitcast %"struct.std::__1::pair.118"* %136 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %137, align 4, !alias.scope !63, !noalias !60
  %138 = or i64 %126, 4
  %139 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %93, i64 %138
  %140 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %92, i64 %138
  %141 = bitcast %"struct.std::__1::pair.118"* %140 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 4, !alias.scope !60
  %143 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %140, i64 2
  %144 = bitcast %"struct.std::__1::pair.118"* %143 to <2 x i64>*
  %145 = load <2 x i64>, <2 x i64>* %144, align 4, !alias.scope !60
  %146 = bitcast %"struct.std::__1::pair.118"* %139 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %146, align 4, !alias.scope !63, !noalias !60
  %147 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %139, i64 2
  %148 = bitcast %"struct.std::__1::pair.118"* %147 to <2 x i64>*
  store <2 x i64> %145, <2 x i64>* %148, align 4, !alias.scope !63, !noalias !60
  %149 = or i64 %126, 8
  %150 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %93, i64 %149
  %151 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %92, i64 %149
  %152 = bitcast %"struct.std::__1::pair.118"* %151 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 4, !alias.scope !60
  %154 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %151, i64 2
  %155 = bitcast %"struct.std::__1::pair.118"* %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 4, !alias.scope !60
  %157 = bitcast %"struct.std::__1::pair.118"* %150 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %157, align 4, !alias.scope !63, !noalias !60
  %158 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %150, i64 2
  %159 = bitcast %"struct.std::__1::pair.118"* %158 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %159, align 4, !alias.scope !63, !noalias !60
  %160 = or i64 %126, 12
  %161 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %93, i64 %160
  %162 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %92, i64 %160
  %163 = bitcast %"struct.std::__1::pair.118"* %162 to <2 x i64>*
  %164 = load <2 x i64>, <2 x i64>* %163, align 4, !alias.scope !60
  %165 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %162, i64 2
  %166 = bitcast %"struct.std::__1::pair.118"* %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 4, !alias.scope !60
  %168 = bitcast %"struct.std::__1::pair.118"* %161 to <2 x i64>*
  store <2 x i64> %164, <2 x i64>* %168, align 4, !alias.scope !63, !noalias !60
  %169 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %161, i64 2
  %170 = bitcast %"struct.std::__1::pair.118"* %169 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %170, align 4, !alias.scope !63, !noalias !60
  %171 = add i64 %126, 16
  %172 = add i64 %127, -4
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %125, !llvm.loop !65

174:                                              ; preds = %125, %114
  %175 = phi i64 [ 0, %114 ], [ %171, %125 ]
  %176 = icmp eq i64 %121, 0
  br i1 %176, label %193, label %177

177:                                              ; preds = %174, %177
  %178 = phi i64 [ %190, %177 ], [ %175, %174 ]
  %179 = phi i64 [ %191, %177 ], [ %121, %174 ]
  %180 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %93, i64 %178
  %181 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %92, i64 %178
  %182 = bitcast %"struct.std::__1::pair.118"* %181 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 4, !alias.scope !60
  %184 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %181, i64 2
  %185 = bitcast %"struct.std::__1::pair.118"* %184 to <2 x i64>*
  %186 = load <2 x i64>, <2 x i64>* %185, align 4, !alias.scope !60
  %187 = bitcast %"struct.std::__1::pair.118"* %180 to <2 x i64>*
  store <2 x i64> %183, <2 x i64>* %187, align 4, !alias.scope !63, !noalias !60
  %188 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %180, i64 2
  %189 = bitcast %"struct.std::__1::pair.118"* %188 to <2 x i64>*
  store <2 x i64> %186, <2 x i64>* %189, align 4, !alias.scope !63, !noalias !60
  %190 = add i64 %178, 4
  %191 = add i64 %179, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %177, !llvm.loop !66

193:                                              ; preds = %177, %174
  %194 = icmp eq i64 %101, %115
  br i1 %194, label %466, label %195

195:                                              ; preds = %193, %103, %96
  %196 = phi %"struct.std::__1::pair.118"* [ %93, %103 ], [ %93, %96 ], [ %116, %193 ]
  %197 = phi %"struct.std::__1::pair.118"* [ %92, %103 ], [ %92, %96 ], [ %117, %193 ]
  %198 = ptrtoint %"struct.std::__1::pair.118"* %197 to i64
  %199 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %1, i64 -1, i32 0
  %200 = ptrtoint i32* %199 to i64
  %201 = sub i64 %200, %198
  %202 = lshr i64 %201, 3
  %203 = add nuw nsw i64 %202, 1
  %204 = and i64 %203, 7
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %217, label %206

206:                                              ; preds = %195, %206
  %207 = phi %"struct.std::__1::pair.118"* [ %214, %206 ], [ %196, %195 ]
  %208 = phi %"struct.std::__1::pair.118"* [ %213, %206 ], [ %197, %195 ]
  %209 = phi i64 [ %215, %206 ], [ %204, %195 ]
  %210 = bitcast %"struct.std::__1::pair.118"* %208 to i64*
  %211 = bitcast %"struct.std::__1::pair.118"* %207 to i64*
  %212 = load i64, i64* %210, align 4
  store i64 %212, i64* %211, align 4
  %213 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %208, i64 1
  %214 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %207, i64 1
  %215 = add i64 %209, -1
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %206, !llvm.loop !67

217:                                              ; preds = %206, %195
  %218 = phi %"struct.std::__1::pair.118"* [ %196, %195 ], [ %214, %206 ]
  %219 = phi %"struct.std::__1::pair.118"* [ %197, %195 ], [ %213, %206 ]
  %220 = icmp ult i64 %201, 56
  br i1 %220, label %466, label %221

221:                                              ; preds = %217, %221
  %222 = phi %"struct.std::__1::pair.118"* [ %263, %221 ], [ %218, %217 ]
  %223 = phi %"struct.std::__1::pair.118"* [ %262, %221 ], [ %219, %217 ]
  %224 = bitcast %"struct.std::__1::pair.118"* %223 to i64*
  %225 = bitcast %"struct.std::__1::pair.118"* %222 to i64*
  %226 = load i64, i64* %224, align 4
  store i64 %226, i64* %225, align 4
  %227 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %223, i64 1
  %228 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %222, i64 1
  %229 = bitcast %"struct.std::__1::pair.118"* %227 to i64*
  %230 = bitcast %"struct.std::__1::pair.118"* %228 to i64*
  %231 = load i64, i64* %229, align 4
  store i64 %231, i64* %230, align 4
  %232 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %223, i64 2
  %233 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %222, i64 2
  %234 = bitcast %"struct.std::__1::pair.118"* %232 to i64*
  %235 = bitcast %"struct.std::__1::pair.118"* %233 to i64*
  %236 = load i64, i64* %234, align 4
  store i64 %236, i64* %235, align 4
  %237 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %223, i64 3
  %238 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %222, i64 3
  %239 = bitcast %"struct.std::__1::pair.118"* %237 to i64*
  %240 = bitcast %"struct.std::__1::pair.118"* %238 to i64*
  %241 = load i64, i64* %239, align 4
  store i64 %241, i64* %240, align 4
  %242 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %223, i64 4
  %243 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %222, i64 4
  %244 = bitcast %"struct.std::__1::pair.118"* %242 to i64*
  %245 = bitcast %"struct.std::__1::pair.118"* %243 to i64*
  %246 = load i64, i64* %244, align 4
  store i64 %246, i64* %245, align 4
  %247 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %223, i64 5
  %248 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %222, i64 5
  %249 = bitcast %"struct.std::__1::pair.118"* %247 to i64*
  %250 = bitcast %"struct.std::__1::pair.118"* %248 to i64*
  %251 = load i64, i64* %249, align 4
  store i64 %251, i64* %250, align 4
  %252 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %223, i64 6
  %253 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %222, i64 6
  %254 = bitcast %"struct.std::__1::pair.118"* %252 to i64*
  %255 = bitcast %"struct.std::__1::pair.118"* %253 to i64*
  %256 = load i64, i64* %254, align 4
  store i64 %256, i64* %255, align 4
  %257 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %223, i64 7
  %258 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %222, i64 7
  %259 = bitcast %"struct.std::__1::pair.118"* %257 to i64*
  %260 = bitcast %"struct.std::__1::pair.118"* %258 to i64*
  %261 = load i64, i64* %259, align 4
  store i64 %261, i64* %260, align 4
  %262 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %223, i64 8
  %263 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %222, i64 8
  %264 = icmp eq %"struct.std::__1::pair.118"* %262, %1
  br i1 %264, label %466, label %221, !llvm.loop !68

265:                                              ; preds = %85, %461
  %266 = phi %"struct.std::__1::pair.118"* [ %464, %461 ], [ %4, %85 ]
  %267 = phi %"struct.std::__1::pair.118"* [ %463, %461 ], [ %0, %85 ]
  %268 = phi %"struct.std::__1::pair.118"* [ %462, %461 ], [ %87, %85 ]
  %269 = icmp eq %"struct.std::__1::pair.118"* %268, %1
  br i1 %269, label %270, label %445

270:                                              ; preds = %265
  %271 = ptrtoint %"struct.std::__1::pair.118"* %267 to i64
  %272 = icmp eq %"struct.std::__1::pair.118"* %267, %87
  br i1 %272, label %466, label %273

273:                                              ; preds = %270
  %274 = add nsw i64 %86, -1
  %275 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %0, i64 %274, i32 0
  %276 = ptrtoint i32* %275 to i64
  %277 = sub i64 %276, %271
  %278 = lshr i64 %277, 3
  %279 = add nuw nsw i64 %278, 1
  %280 = icmp ult i64 %279, 4
  br i1 %280, label %374, label %281

281:                                              ; preds = %273
  %282 = add nsw i64 %86, -1
  %283 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %0, i64 %282, i32 0
  %284 = ptrtoint i32* %283 to i64
  %285 = sub i64 %284, %271
  %286 = lshr i64 %285, 3
  %287 = add nuw nsw i64 %286, 1
  %288 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %266, i64 %287
  %289 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %267, i64 %287
  %290 = icmp ult %"struct.std::__1::pair.118"* %266, %289
  %291 = icmp ult %"struct.std::__1::pair.118"* %267, %288
  %292 = and i1 %290, %291
  br i1 %292, label %374, label %293

293:                                              ; preds = %281
  %294 = and i64 %279, 4611686018427387900
  %295 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %266, i64 %294
  %296 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %267, i64 %294
  %297 = add nsw i64 %294, -4
  %298 = lshr exact i64 %297, 2
  %299 = add nuw nsw i64 %298, 1
  %300 = and i64 %299, 3
  %301 = icmp ult i64 %297, 12
  br i1 %301, label %353, label %302

302:                                              ; preds = %293
  %303 = sub nsw i64 %299, %300
  br label %304

304:                                              ; preds = %304, %302
  %305 = phi i64 [ 0, %302 ], [ %350, %304 ]
  %306 = phi i64 [ %303, %302 ], [ %351, %304 ]
  %307 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %266, i64 %305
  %308 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %267, i64 %305
  %309 = bitcast %"struct.std::__1::pair.118"* %308 to <2 x i64>*
  %310 = load <2 x i64>, <2 x i64>* %309, align 4, !alias.scope !69
  %311 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %308, i64 2
  %312 = bitcast %"struct.std::__1::pair.118"* %311 to <2 x i64>*
  %313 = load <2 x i64>, <2 x i64>* %312, align 4, !alias.scope !69
  %314 = bitcast %"struct.std::__1::pair.118"* %307 to <2 x i64>*
  store <2 x i64> %310, <2 x i64>* %314, align 4, !alias.scope !72, !noalias !69
  %315 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %307, i64 2
  %316 = bitcast %"struct.std::__1::pair.118"* %315 to <2 x i64>*
  store <2 x i64> %313, <2 x i64>* %316, align 4, !alias.scope !72, !noalias !69
  %317 = or i64 %305, 4
  %318 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %266, i64 %317
  %319 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %267, i64 %317
  %320 = bitcast %"struct.std::__1::pair.118"* %319 to <2 x i64>*
  %321 = load <2 x i64>, <2 x i64>* %320, align 4, !alias.scope !69
  %322 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %319, i64 2
  %323 = bitcast %"struct.std::__1::pair.118"* %322 to <2 x i64>*
  %324 = load <2 x i64>, <2 x i64>* %323, align 4, !alias.scope !69
  %325 = bitcast %"struct.std::__1::pair.118"* %318 to <2 x i64>*
  store <2 x i64> %321, <2 x i64>* %325, align 4, !alias.scope !72, !noalias !69
  %326 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %318, i64 2
  %327 = bitcast %"struct.std::__1::pair.118"* %326 to <2 x i64>*
  store <2 x i64> %324, <2 x i64>* %327, align 4, !alias.scope !72, !noalias !69
  %328 = or i64 %305, 8
  %329 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %266, i64 %328
  %330 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %267, i64 %328
  %331 = bitcast %"struct.std::__1::pair.118"* %330 to <2 x i64>*
  %332 = load <2 x i64>, <2 x i64>* %331, align 4, !alias.scope !69
  %333 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %330, i64 2
  %334 = bitcast %"struct.std::__1::pair.118"* %333 to <2 x i64>*
  %335 = load <2 x i64>, <2 x i64>* %334, align 4, !alias.scope !69
  %336 = bitcast %"struct.std::__1::pair.118"* %329 to <2 x i64>*
  store <2 x i64> %332, <2 x i64>* %336, align 4, !alias.scope !72, !noalias !69
  %337 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %329, i64 2
  %338 = bitcast %"struct.std::__1::pair.118"* %337 to <2 x i64>*
  store <2 x i64> %335, <2 x i64>* %338, align 4, !alias.scope !72, !noalias !69
  %339 = or i64 %305, 12
  %340 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %266, i64 %339
  %341 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %267, i64 %339
  %342 = bitcast %"struct.std::__1::pair.118"* %341 to <2 x i64>*
  %343 = load <2 x i64>, <2 x i64>* %342, align 4, !alias.scope !69
  %344 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %341, i64 2
  %345 = bitcast %"struct.std::__1::pair.118"* %344 to <2 x i64>*
  %346 = load <2 x i64>, <2 x i64>* %345, align 4, !alias.scope !69
  %347 = bitcast %"struct.std::__1::pair.118"* %340 to <2 x i64>*
  store <2 x i64> %343, <2 x i64>* %347, align 4, !alias.scope !72, !noalias !69
  %348 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %340, i64 2
  %349 = bitcast %"struct.std::__1::pair.118"* %348 to <2 x i64>*
  store <2 x i64> %346, <2 x i64>* %349, align 4, !alias.scope !72, !noalias !69
  %350 = add i64 %305, 16
  %351 = add i64 %306, -4
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %353, label %304, !llvm.loop !74

353:                                              ; preds = %304, %293
  %354 = phi i64 [ 0, %293 ], [ %350, %304 ]
  %355 = icmp eq i64 %300, 0
  br i1 %355, label %372, label %356

356:                                              ; preds = %353, %356
  %357 = phi i64 [ %369, %356 ], [ %354, %353 ]
  %358 = phi i64 [ %370, %356 ], [ %300, %353 ]
  %359 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %266, i64 %357
  %360 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %267, i64 %357
  %361 = bitcast %"struct.std::__1::pair.118"* %360 to <2 x i64>*
  %362 = load <2 x i64>, <2 x i64>* %361, align 4, !alias.scope !69
  %363 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %360, i64 2
  %364 = bitcast %"struct.std::__1::pair.118"* %363 to <2 x i64>*
  %365 = load <2 x i64>, <2 x i64>* %364, align 4, !alias.scope !69
  %366 = bitcast %"struct.std::__1::pair.118"* %359 to <2 x i64>*
  store <2 x i64> %362, <2 x i64>* %366, align 4, !alias.scope !72, !noalias !69
  %367 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %359, i64 2
  %368 = bitcast %"struct.std::__1::pair.118"* %367 to <2 x i64>*
  store <2 x i64> %365, <2 x i64>* %368, align 4, !alias.scope !72, !noalias !69
  %369 = add i64 %357, 4
  %370 = add i64 %358, -1
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %372, label %356, !llvm.loop !75

372:                                              ; preds = %356, %353
  %373 = icmp eq i64 %279, %294
  br i1 %373, label %466, label %374

374:                                              ; preds = %372, %281, %273
  %375 = phi %"struct.std::__1::pair.118"* [ %266, %281 ], [ %266, %273 ], [ %295, %372 ]
  %376 = phi %"struct.std::__1::pair.118"* [ %267, %281 ], [ %267, %273 ], [ %296, %372 ]
  %377 = ptrtoint %"struct.std::__1::pair.118"* %376 to i64
  %378 = add nsw i64 %86, -1
  %379 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %0, i64 %378, i32 0
  %380 = ptrtoint i32* %379 to i64
  %381 = sub i64 %380, %377
  %382 = lshr i64 %381, 3
  %383 = add nuw nsw i64 %382, 1
  %384 = and i64 %383, 7
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %397, label %386

386:                                              ; preds = %374, %386
  %387 = phi %"struct.std::__1::pair.118"* [ %394, %386 ], [ %375, %374 ]
  %388 = phi %"struct.std::__1::pair.118"* [ %393, %386 ], [ %376, %374 ]
  %389 = phi i64 [ %395, %386 ], [ %384, %374 ]
  %390 = bitcast %"struct.std::__1::pair.118"* %388 to i64*
  %391 = bitcast %"struct.std::__1::pair.118"* %387 to i64*
  %392 = load i64, i64* %390, align 4
  store i64 %392, i64* %391, align 4
  %393 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %388, i64 1
  %394 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %387, i64 1
  %395 = add i64 %389, -1
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %397, label %386, !llvm.loop !76

397:                                              ; preds = %386, %374
  %398 = phi %"struct.std::__1::pair.118"* [ %375, %374 ], [ %394, %386 ]
  %399 = phi %"struct.std::__1::pair.118"* [ %376, %374 ], [ %393, %386 ]
  %400 = icmp ult i64 %381, 56
  br i1 %400, label %466, label %401

401:                                              ; preds = %397, %401
  %402 = phi %"struct.std::__1::pair.118"* [ %443, %401 ], [ %398, %397 ]
  %403 = phi %"struct.std::__1::pair.118"* [ %442, %401 ], [ %399, %397 ]
  %404 = bitcast %"struct.std::__1::pair.118"* %403 to i64*
  %405 = bitcast %"struct.std::__1::pair.118"* %402 to i64*
  %406 = load i64, i64* %404, align 4
  store i64 %406, i64* %405, align 4
  %407 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %403, i64 1
  %408 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %402, i64 1
  %409 = bitcast %"struct.std::__1::pair.118"* %407 to i64*
  %410 = bitcast %"struct.std::__1::pair.118"* %408 to i64*
  %411 = load i64, i64* %409, align 4
  store i64 %411, i64* %410, align 4
  %412 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %403, i64 2
  %413 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %402, i64 2
  %414 = bitcast %"struct.std::__1::pair.118"* %412 to i64*
  %415 = bitcast %"struct.std::__1::pair.118"* %413 to i64*
  %416 = load i64, i64* %414, align 4
  store i64 %416, i64* %415, align 4
  %417 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %403, i64 3
  %418 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %402, i64 3
  %419 = bitcast %"struct.std::__1::pair.118"* %417 to i64*
  %420 = bitcast %"struct.std::__1::pair.118"* %418 to i64*
  %421 = load i64, i64* %419, align 4
  store i64 %421, i64* %420, align 4
  %422 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %403, i64 4
  %423 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %402, i64 4
  %424 = bitcast %"struct.std::__1::pair.118"* %422 to i64*
  %425 = bitcast %"struct.std::__1::pair.118"* %423 to i64*
  %426 = load i64, i64* %424, align 4
  store i64 %426, i64* %425, align 4
  %427 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %403, i64 5
  %428 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %402, i64 5
  %429 = bitcast %"struct.std::__1::pair.118"* %427 to i64*
  %430 = bitcast %"struct.std::__1::pair.118"* %428 to i64*
  %431 = load i64, i64* %429, align 4
  store i64 %431, i64* %430, align 4
  %432 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %403, i64 6
  %433 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %402, i64 6
  %434 = bitcast %"struct.std::__1::pair.118"* %432 to i64*
  %435 = bitcast %"struct.std::__1::pair.118"* %433 to i64*
  %436 = load i64, i64* %434, align 4
  store i64 %436, i64* %435, align 4
  %437 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %403, i64 7
  %438 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %402, i64 7
  %439 = bitcast %"struct.std::__1::pair.118"* %437 to i64*
  %440 = bitcast %"struct.std::__1::pair.118"* %438 to i64*
  %441 = load i64, i64* %439, align 4
  store i64 %441, i64* %440, align 4
  %442 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %403, i64 8
  %443 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %402, i64 8
  %444 = icmp eq %"struct.std::__1::pair.118"* %442, %87
  br i1 %444, label %466, label %401, !llvm.loop !77

445:                                              ; preds = %265
  %446 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %268, i64 0, i32 0
  %447 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %267, i64 0, i32 0
  %448 = load i32, i32* %446, align 4
  %449 = load i32, i32* %447, align 4
  %450 = icmp slt i32 %448, %449
  br i1 %450, label %451, label %456

451:                                              ; preds = %445
  %452 = bitcast %"struct.std::__1::pair.118"* %268 to i64*
  %453 = bitcast %"struct.std::__1::pair.118"* %266 to i64*
  %454 = load i64, i64* %452, align 4
  store i64 %454, i64* %453, align 4
  %455 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %268, i64 1
  br label %461

456:                                              ; preds = %445
  %457 = bitcast %"struct.std::__1::pair.118"* %267 to i64*
  %458 = bitcast %"struct.std::__1::pair.118"* %266 to i64*
  %459 = load i64, i64* %457, align 4
  store i64 %459, i64* %458, align 4
  %460 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %267, i64 1
  br label %461

461:                                              ; preds = %456, %451
  %462 = phi %"struct.std::__1::pair.118"* [ %455, %451 ], [ %268, %456 ]
  %463 = phi %"struct.std::__1::pair.118"* [ %267, %451 ], [ %460, %456 ]
  %464 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %266, i64 1
  %465 = icmp eq %"struct.std::__1::pair.118"* %463, %87
  br i1 %465, label %91, label %265

466:                                              ; preds = %397, %401, %217, %221, %82, %372, %193, %270, %91, %37, %35, %17, %25, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat14ActivationTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_SO_T_NS_15iterator_traitsISO_E15difference_typeESS_PNSR_10value_typeEl(%"struct.std::__1::pair.118"*, %"struct.std::__1::pair.118"*, %"struct.std::__1::pair.118"*, %"struct.base::internal::flat_tree<url_pattern_index::proto::ActivationType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType> > > >::value_compare"* dereferenceable(1), i64, i64, %"struct.std::__1::pair.118"*, i64) local_unnamed_addr #2 comdat {
  %9 = ptrtoint %"struct.std::__1::pair.118"* %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %781, label %11

11:                                               ; preds = %8
  %12 = ptrtoint %"struct.std::__1::pair.118"* %1 to i64
  %13 = ptrtoint %"struct.std::__1::pair.118"* %0 to i64
  br label %14

14:                                               ; preds = %11, %774
  %15 = phi %"struct.std::__1::pair.118"* [ %779, %774 ], [ %2, %11 ]
  %16 = phi i64 [ %778, %774 ], [ %4, %11 ]
  %17 = phi i64 [ %777, %774 ], [ %5, %11 ]
  %18 = phi i64 [ %776, %774 ], [ %12, %11 ]
  %19 = phi i64 [ %775, %774 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %29

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %781, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to %"struct.std::__1::pair.118"*
  %27 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br label %560

29:                                               ; preds = %14
  %30 = inttoptr i64 %19 to %"struct.std::__1::pair.118"*
  %31 = inttoptr i64 %19 to i8*
  %32 = inttoptr i64 %18 to %"struct.std::__1::pair.118"*
  %33 = inttoptr i64 %18 to i8*
  %34 = icmp sgt i64 %16, %17
  br i1 %34, label %171, label %35

35:                                               ; preds = %29
  %36 = icmp eq %"struct.std::__1::pair.118"* %30, %32
  br i1 %36, label %781, label %37

37:                                               ; preds = %35
  %38 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %32, i64 -1, i32 0
  %39 = bitcast i32* %38 to i8*
  %40 = sub i64 0, %19
  %41 = getelementptr i8, i8* %39, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = lshr i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = icmp ult i64 %44, 4
  br i1 %45, label %46, label %74

46:                                               ; preds = %167, %74, %37
  %47 = phi %"struct.std::__1::pair.118"* [ %6, %74 ], [ %6, %37 ], [ %90, %167 ]
  %48 = phi %"struct.std::__1::pair.118"* [ %30, %74 ], [ %30, %37 ], [ %91, %167 ]
  %49 = ptrtoint %"struct.std::__1::pair.118"* %48 to i64
  %50 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %32, i64 -1, i32 0
  %51 = ptrtoint i32* %50 to i64
  %52 = sub i64 %51, %49
  %53 = lshr i64 %52, 3
  %54 = add nuw nsw i64 %53, 1
  %55 = and i64 %54, 7
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %68, label %57

57:                                               ; preds = %46, %57
  %58 = phi %"struct.std::__1::pair.118"* [ %65, %57 ], [ %47, %46 ]
  %59 = phi %"struct.std::__1::pair.118"* [ %64, %57 ], [ %48, %46 ]
  %60 = phi i64 [ %66, %57 ], [ %55, %46 ]
  %61 = bitcast %"struct.std::__1::pair.118"* %59 to i64*
  %62 = bitcast %"struct.std::__1::pair.118"* %58 to i64*
  %63 = load i64, i64* %61, align 4
  store i64 %63, i64* %62, align 4
  %64 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %59, i64 1
  %65 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %58, i64 1
  %66 = add i64 %60, -1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %57, !llvm.loop !78

68:                                               ; preds = %57, %46
  %69 = phi %"struct.std::__1::pair.118"* [ undef, %46 ], [ %58, %57 ]
  %70 = phi %"struct.std::__1::pair.118"* [ undef, %46 ], [ %65, %57 ]
  %71 = phi %"struct.std::__1::pair.118"* [ %47, %46 ], [ %65, %57 ]
  %72 = phi %"struct.std::__1::pair.118"* [ %48, %46 ], [ %64, %57 ]
  %73 = icmp ult i64 %52, 56
  br i1 %73, label %304, label %390

74:                                               ; preds = %37
  %75 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %32, i64 -1, i32 0
  %76 = bitcast i32* %75 to i8*
  %77 = sub i64 0, %19
  %78 = getelementptr i8, i8* %76, i64 %77
  %79 = ptrtoint i8* %78 to i64
  %80 = lshr i64 %79, 3
  %81 = add nuw nsw i64 %80, 1
  %82 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %6, i64 %81
  %83 = bitcast %"struct.std::__1::pair.118"* %82 to i8*
  %84 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %30, i64 %81
  %85 = icmp ugt %"struct.std::__1::pair.118"* %84, %6
  %86 = icmp ult i8* %31, %83
  %87 = and i1 %85, %86
  br i1 %87, label %46, label %88

88:                                               ; preds = %74
  %89 = and i64 %44, 4611686018427387900
  %90 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %6, i64 %89
  %91 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %30, i64 %89
  %92 = add nsw i64 %89, -4
  %93 = lshr exact i64 %92, 2
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 3
  %96 = icmp ult i64 %92, 12
  br i1 %96, label %148, label %97

97:                                               ; preds = %88
  %98 = sub nsw i64 %94, %95
  br label %99

99:                                               ; preds = %99, %97
  %100 = phi i64 [ 0, %97 ], [ %145, %99 ]
  %101 = phi i64 [ %98, %97 ], [ %146, %99 ]
  %102 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %6, i64 %100
  %103 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %30, i64 %100
  %104 = bitcast %"struct.std::__1::pair.118"* %103 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 4, !alias.scope !79
  %106 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %103, i64 2
  %107 = bitcast %"struct.std::__1::pair.118"* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 4, !alias.scope !79
  %109 = bitcast %"struct.std::__1::pair.118"* %102 to <2 x i64>*
  store <2 x i64> %105, <2 x i64>* %109, align 4, !alias.scope !82, !noalias !79
  %110 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %102, i64 2
  %111 = bitcast %"struct.std::__1::pair.118"* %110 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %111, align 4, !alias.scope !82, !noalias !79
  %112 = or i64 %100, 4
  %113 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %6, i64 %112
  %114 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %30, i64 %112
  %115 = bitcast %"struct.std::__1::pair.118"* %114 to <2 x i64>*
  %116 = load <2 x i64>, <2 x i64>* %115, align 4, !alias.scope !79
  %117 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %114, i64 2
  %118 = bitcast %"struct.std::__1::pair.118"* %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 4, !alias.scope !79
  %120 = bitcast %"struct.std::__1::pair.118"* %113 to <2 x i64>*
  store <2 x i64> %116, <2 x i64>* %120, align 4, !alias.scope !82, !noalias !79
  %121 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %113, i64 2
  %122 = bitcast %"struct.std::__1::pair.118"* %121 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %122, align 4, !alias.scope !82, !noalias !79
  %123 = or i64 %100, 8
  %124 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %6, i64 %123
  %125 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %30, i64 %123
  %126 = bitcast %"struct.std::__1::pair.118"* %125 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 4, !alias.scope !79
  %128 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %125, i64 2
  %129 = bitcast %"struct.std::__1::pair.118"* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 4, !alias.scope !79
  %131 = bitcast %"struct.std::__1::pair.118"* %124 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %131, align 4, !alias.scope !82, !noalias !79
  %132 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %124, i64 2
  %133 = bitcast %"struct.std::__1::pair.118"* %132 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %133, align 4, !alias.scope !82, !noalias !79
  %134 = or i64 %100, 12
  %135 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %6, i64 %134
  %136 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %30, i64 %134
  %137 = bitcast %"struct.std::__1::pair.118"* %136 to <2 x i64>*
  %138 = load <2 x i64>, <2 x i64>* %137, align 4, !alias.scope !79
  %139 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %136, i64 2
  %140 = bitcast %"struct.std::__1::pair.118"* %139 to <2 x i64>*
  %141 = load <2 x i64>, <2 x i64>* %140, align 4, !alias.scope !79
  %142 = bitcast %"struct.std::__1::pair.118"* %135 to <2 x i64>*
  store <2 x i64> %138, <2 x i64>* %142, align 4, !alias.scope !82, !noalias !79
  %143 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %135, i64 2
  %144 = bitcast %"struct.std::__1::pair.118"* %143 to <2 x i64>*
  store <2 x i64> %141, <2 x i64>* %144, align 4, !alias.scope !82, !noalias !79
  %145 = add i64 %100, 16
  %146 = add i64 %101, -4
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %99, !llvm.loop !84

148:                                              ; preds = %99, %88
  %149 = phi i64 [ 0, %88 ], [ %145, %99 ]
  %150 = icmp eq i64 %95, 0
  br i1 %150, label %167, label %151

151:                                              ; preds = %148, %151
  %152 = phi i64 [ %164, %151 ], [ %149, %148 ]
  %153 = phi i64 [ %165, %151 ], [ %95, %148 ]
  %154 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %6, i64 %152
  %155 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %30, i64 %152
  %156 = bitcast %"struct.std::__1::pair.118"* %155 to <2 x i64>*
  %157 = load <2 x i64>, <2 x i64>* %156, align 4, !alias.scope !79
  %158 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %155, i64 2
  %159 = bitcast %"struct.std::__1::pair.118"* %158 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 4, !alias.scope !79
  %161 = bitcast %"struct.std::__1::pair.118"* %154 to <2 x i64>*
  store <2 x i64> %157, <2 x i64>* %161, align 4, !alias.scope !82, !noalias !79
  %162 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %154, i64 2
  %163 = bitcast %"struct.std::__1::pair.118"* %162 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %163, align 4, !alias.scope !82, !noalias !79
  %164 = add i64 %152, 4
  %165 = add i64 %153, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %151, !llvm.loop !85

167:                                              ; preds = %151, %148
  %168 = icmp eq i64 %44, %89
  %169 = add nsw i64 %89, -1
  %170 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %6, i64 %169
  br i1 %168, label %304, label %46

171:                                              ; preds = %29
  %172 = icmp eq %"struct.std::__1::pair.118"* %15, %32
  br i1 %172, label %781, label %173

173:                                              ; preds = %171
  %174 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %15, i64 -1, i32 0
  %175 = bitcast i32* %174 to i8*
  %176 = sub i64 0, %18
  %177 = getelementptr i8, i8* %175, i64 %176
  %178 = ptrtoint i8* %177 to i64
  %179 = lshr i64 %178, 3
  %180 = add nuw nsw i64 %179, 1
  %181 = icmp ult i64 %180, 4
  br i1 %181, label %182, label %209

182:                                              ; preds = %302, %209, %173
  %183 = phi %"struct.std::__1::pair.118"* [ %6, %209 ], [ %6, %173 ], [ %225, %302 ]
  %184 = phi %"struct.std::__1::pair.118"* [ %32, %209 ], [ %32, %173 ], [ %226, %302 ]
  %185 = ptrtoint %"struct.std::__1::pair.118"* %184 to i64
  %186 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %15, i64 -1, i32 0
  %187 = ptrtoint i32* %186 to i64
  %188 = sub i64 %187, %185
  %189 = lshr i64 %188, 3
  %190 = add nuw nsw i64 %189, 1
  %191 = and i64 %190, 7
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %204, label %193

193:                                              ; preds = %182, %193
  %194 = phi %"struct.std::__1::pair.118"* [ %201, %193 ], [ %183, %182 ]
  %195 = phi %"struct.std::__1::pair.118"* [ %200, %193 ], [ %184, %182 ]
  %196 = phi i64 [ %202, %193 ], [ %191, %182 ]
  %197 = bitcast %"struct.std::__1::pair.118"* %195 to i64*
  %198 = bitcast %"struct.std::__1::pair.118"* %194 to i64*
  %199 = load i64, i64* %197, align 4
  store i64 %199, i64* %198, align 4
  %200 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %195, i64 1
  %201 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %194, i64 1
  %202 = add i64 %196, -1
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %193, !llvm.loop !86

204:                                              ; preds = %193, %182
  %205 = phi %"struct.std::__1::pair.118"* [ undef, %182 ], [ %201, %193 ]
  %206 = phi %"struct.std::__1::pair.118"* [ %183, %182 ], [ %201, %193 ]
  %207 = phi %"struct.std::__1::pair.118"* [ %184, %182 ], [ %200, %193 ]
  %208 = icmp ult i64 %188, 56
  br i1 %208, label %434, label %516

209:                                              ; preds = %173
  %210 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %15, i64 -1, i32 0
  %211 = bitcast i32* %210 to i8*
  %212 = sub i64 0, %18
  %213 = getelementptr i8, i8* %211, i64 %212
  %214 = ptrtoint i8* %213 to i64
  %215 = lshr i64 %214, 3
  %216 = add nuw nsw i64 %215, 1
  %217 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %6, i64 %216
  %218 = bitcast %"struct.std::__1::pair.118"* %217 to i8*
  %219 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %32, i64 %216
  %220 = icmp ugt %"struct.std::__1::pair.118"* %219, %6
  %221 = icmp ult i8* %33, %218
  %222 = and i1 %220, %221
  br i1 %222, label %182, label %223

223:                                              ; preds = %209
  %224 = and i64 %180, 4611686018427387900
  %225 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %6, i64 %224
  %226 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %32, i64 %224
  %227 = add nsw i64 %224, -4
  %228 = lshr exact i64 %227, 2
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 3
  %231 = icmp ult i64 %227, 12
  br i1 %231, label %283, label %232

232:                                              ; preds = %223
  %233 = sub nsw i64 %229, %230
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %280, %234 ]
  %236 = phi i64 [ %233, %232 ], [ %281, %234 ]
  %237 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %6, i64 %235
  %238 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %32, i64 %235
  %239 = bitcast %"struct.std::__1::pair.118"* %238 to <2 x i64>*
  %240 = load <2 x i64>, <2 x i64>* %239, align 4, !alias.scope !87
  %241 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %238, i64 2
  %242 = bitcast %"struct.std::__1::pair.118"* %241 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 4, !alias.scope !87
  %244 = bitcast %"struct.std::__1::pair.118"* %237 to <2 x i64>*
  store <2 x i64> %240, <2 x i64>* %244, align 4, !alias.scope !90, !noalias !87
  %245 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %237, i64 2
  %246 = bitcast %"struct.std::__1::pair.118"* %245 to <2 x i64>*
  store <2 x i64> %243, <2 x i64>* %246, align 4, !alias.scope !90, !noalias !87
  %247 = or i64 %235, 4
  %248 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %6, i64 %247
  %249 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %32, i64 %247
  %250 = bitcast %"struct.std::__1::pair.118"* %249 to <2 x i64>*
  %251 = load <2 x i64>, <2 x i64>* %250, align 4, !alias.scope !87
  %252 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %249, i64 2
  %253 = bitcast %"struct.std::__1::pair.118"* %252 to <2 x i64>*
  %254 = load <2 x i64>, <2 x i64>* %253, align 4, !alias.scope !87
  %255 = bitcast %"struct.std::__1::pair.118"* %248 to <2 x i64>*
  store <2 x i64> %251, <2 x i64>* %255, align 4, !alias.scope !90, !noalias !87
  %256 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %248, i64 2
  %257 = bitcast %"struct.std::__1::pair.118"* %256 to <2 x i64>*
  store <2 x i64> %254, <2 x i64>* %257, align 4, !alias.scope !90, !noalias !87
  %258 = or i64 %235, 8
  %259 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %6, i64 %258
  %260 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %32, i64 %258
  %261 = bitcast %"struct.std::__1::pair.118"* %260 to <2 x i64>*
  %262 = load <2 x i64>, <2 x i64>* %261, align 4, !alias.scope !87
  %263 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %260, i64 2
  %264 = bitcast %"struct.std::__1::pair.118"* %263 to <2 x i64>*
  %265 = load <2 x i64>, <2 x i64>* %264, align 4, !alias.scope !87
  %266 = bitcast %"struct.std::__1::pair.118"* %259 to <2 x i64>*
  store <2 x i64> %262, <2 x i64>* %266, align 4, !alias.scope !90, !noalias !87
  %267 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %259, i64 2
  %268 = bitcast %"struct.std::__1::pair.118"* %267 to <2 x i64>*
  store <2 x i64> %265, <2 x i64>* %268, align 4, !alias.scope !90, !noalias !87
  %269 = or i64 %235, 12
  %270 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %6, i64 %269
  %271 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %32, i64 %269
  %272 = bitcast %"struct.std::__1::pair.118"* %271 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 4, !alias.scope !87
  %274 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %271, i64 2
  %275 = bitcast %"struct.std::__1::pair.118"* %274 to <2 x i64>*
  %276 = load <2 x i64>, <2 x i64>* %275, align 4, !alias.scope !87
  %277 = bitcast %"struct.std::__1::pair.118"* %270 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %277, align 4, !alias.scope !90, !noalias !87
  %278 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %270, i64 2
  %279 = bitcast %"struct.std::__1::pair.118"* %278 to <2 x i64>*
  store <2 x i64> %276, <2 x i64>* %279, align 4, !alias.scope !90, !noalias !87
  %280 = add i64 %235, 16
  %281 = add i64 %236, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %234, !llvm.loop !92

283:                                              ; preds = %234, %223
  %284 = phi i64 [ 0, %223 ], [ %280, %234 ]
  %285 = icmp eq i64 %230, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %299, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %300, %286 ], [ %230, %283 ]
  %289 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %6, i64 %287
  %290 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %32, i64 %287
  %291 = bitcast %"struct.std::__1::pair.118"* %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 4, !alias.scope !87
  %293 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %290, i64 2
  %294 = bitcast %"struct.std::__1::pair.118"* %293 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 4, !alias.scope !87
  %296 = bitcast %"struct.std::__1::pair.118"* %289 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %296, align 4, !alias.scope !90, !noalias !87
  %297 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %289, i64 2
  %298 = bitcast %"struct.std::__1::pair.118"* %297 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %298, align 4, !alias.scope !90, !noalias !87
  %299 = add i64 %287, 4
  %300 = add i64 %288, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %286, !llvm.loop !93

302:                                              ; preds = %286, %283
  %303 = icmp eq i64 %180, %224
  br i1 %303, label %434, label %182

304:                                              ; preds = %68, %390, %167
  %305 = phi %"struct.std::__1::pair.118"* [ %170, %167 ], [ %69, %68 ], [ %427, %390 ]
  %306 = phi %"struct.std::__1::pair.118"* [ %90, %167 ], [ %70, %68 ], [ %432, %390 ]
  %307 = icmp eq %"struct.std::__1::pair.118"* %306, %6
  br i1 %307, label %781, label %308

308:                                              ; preds = %304, %381
  %309 = phi %"struct.std::__1::pair.118"* [ %384, %381 ], [ %6, %304 ]
  %310 = phi %"struct.std::__1::pair.118"* [ %388, %381 ], [ %30, %304 ]
  %311 = phi %"struct.std::__1::pair.118"* [ %383, %381 ], [ %32, %304 ]
  %312 = icmp eq %"struct.std::__1::pair.118"* %311, %15
  br i1 %312, label %313, label %370

313:                                              ; preds = %308
  %314 = ptrtoint %"struct.std::__1::pair.118"* %309 to i64
  %315 = ptrtoint %"struct.std::__1::pair.118"* %305 to i64
  %316 = sub i64 %315, %314
  %317 = lshr i64 %316, 3
  %318 = add nuw nsw i64 %317, 1
  %319 = and i64 %318, 3
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %335, label %321

321:                                              ; preds = %313, %321
  %322 = phi %"struct.std::__1::pair.118"* [ %332, %321 ], [ %310, %313 ]
  %323 = phi %"struct.std::__1::pair.118"* [ %331, %321 ], [ %309, %313 ]
  %324 = phi i64 [ %333, %321 ], [ %319, %313 ]
  %325 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %323, i64 0, i32 0
  %326 = load i32, i32* %325, align 4
  %327 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %322, i64 0, i32 0
  store i32 %326, i32* %327, align 4
  %328 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %323, i64 0, i32 1
  %329 = load i32, i32* %328, align 4
  %330 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %322, i64 0, i32 1
  store i32 %329, i32* %330, align 4
  %331 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %323, i64 1
  %332 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %322, i64 1
  %333 = add i64 %324, -1
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %321, !llvm.loop !94

335:                                              ; preds = %321, %313
  %336 = phi %"struct.std::__1::pair.118"* [ %310, %313 ], [ %332, %321 ]
  %337 = phi %"struct.std::__1::pair.118"* [ %309, %313 ], [ %331, %321 ]
  %338 = icmp ult i64 %316, 24
  br i1 %338, label %781, label %339

339:                                              ; preds = %335, %339
  %340 = phi %"struct.std::__1::pair.118"* [ %368, %339 ], [ %336, %335 ]
  %341 = phi %"struct.std::__1::pair.118"* [ %367, %339 ], [ %337, %335 ]
  %342 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %341, i64 0, i32 0
  %343 = load i32, i32* %342, align 4
  %344 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %340, i64 0, i32 0
  store i32 %343, i32* %344, align 4
  %345 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %341, i64 0, i32 1
  %346 = load i32, i32* %345, align 4
  %347 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %340, i64 0, i32 1
  store i32 %346, i32* %347, align 4
  %348 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %341, i64 1, i32 0
  %349 = load i32, i32* %348, align 4
  %350 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %340, i64 1, i32 0
  store i32 %349, i32* %350, align 4
  %351 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %341, i64 1, i32 1
  %352 = load i32, i32* %351, align 4
  %353 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %340, i64 1, i32 1
  store i32 %352, i32* %353, align 4
  %354 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %341, i64 2, i32 0
  %355 = load i32, i32* %354, align 4
  %356 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %340, i64 2, i32 0
  store i32 %355, i32* %356, align 4
  %357 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %341, i64 2, i32 1
  %358 = load i32, i32* %357, align 4
  %359 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %340, i64 2, i32 1
  store i32 %358, i32* %359, align 4
  %360 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %341, i64 3
  %361 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %360, i64 0, i32 0
  %362 = load i32, i32* %361, align 4
  %363 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %340, i64 3, i32 0
  store i32 %362, i32* %363, align 4
  %364 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %341, i64 3, i32 1
  %365 = load i32, i32* %364, align 4
  %366 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %340, i64 3, i32 1
  store i32 %365, i32* %366, align 4
  %367 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %341, i64 4
  %368 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %340, i64 4
  %369 = icmp eq %"struct.std::__1::pair.118"* %360, %305
  br i1 %369, label %781, label %339

370:                                              ; preds = %308
  %371 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %311, i64 0, i32 0
  %372 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %309, i64 0, i32 0
  %373 = load i32, i32* %371, align 4
  %374 = load i32, i32* %372, align 4
  %375 = icmp slt i32 %373, %374
  %376 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %310, i64 0, i32 0
  br i1 %375, label %377, label %379

377:                                              ; preds = %370
  store i32 %373, i32* %376, align 4
  %378 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %311, i64 1
  br label %381

379:                                              ; preds = %370
  store i32 %374, i32* %376, align 4
  %380 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %309, i64 1
  br label %381

381:                                              ; preds = %379, %377
  %382 = phi %"struct.std::__1::pair.118"* [ %311, %377 ], [ %309, %379 ]
  %383 = phi %"struct.std::__1::pair.118"* [ %378, %377 ], [ %311, %379 ]
  %384 = phi %"struct.std::__1::pair.118"* [ %309, %377 ], [ %380, %379 ]
  %385 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %382, i64 0, i32 1
  %386 = load i32, i32* %385, align 4
  %387 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %310, i64 0, i32 1
  store i32 %386, i32* %387, align 4
  %388 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %310, i64 1
  %389 = icmp eq %"struct.std::__1::pair.118"* %384, %306
  br i1 %389, label %781, label %308

390:                                              ; preds = %68, %390
  %391 = phi %"struct.std::__1::pair.118"* [ %432, %390 ], [ %71, %68 ]
  %392 = phi %"struct.std::__1::pair.118"* [ %431, %390 ], [ %72, %68 ]
  %393 = bitcast %"struct.std::__1::pair.118"* %392 to i64*
  %394 = bitcast %"struct.std::__1::pair.118"* %391 to i64*
  %395 = load i64, i64* %393, align 4
  store i64 %395, i64* %394, align 4
  %396 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %392, i64 1
  %397 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %391, i64 1
  %398 = bitcast %"struct.std::__1::pair.118"* %396 to i64*
  %399 = bitcast %"struct.std::__1::pair.118"* %397 to i64*
  %400 = load i64, i64* %398, align 4
  store i64 %400, i64* %399, align 4
  %401 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %392, i64 2
  %402 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %391, i64 2
  %403 = bitcast %"struct.std::__1::pair.118"* %401 to i64*
  %404 = bitcast %"struct.std::__1::pair.118"* %402 to i64*
  %405 = load i64, i64* %403, align 4
  store i64 %405, i64* %404, align 4
  %406 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %392, i64 3
  %407 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %391, i64 3
  %408 = bitcast %"struct.std::__1::pair.118"* %406 to i64*
  %409 = bitcast %"struct.std::__1::pair.118"* %407 to i64*
  %410 = load i64, i64* %408, align 4
  store i64 %410, i64* %409, align 4
  %411 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %392, i64 4
  %412 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %391, i64 4
  %413 = bitcast %"struct.std::__1::pair.118"* %411 to i64*
  %414 = bitcast %"struct.std::__1::pair.118"* %412 to i64*
  %415 = load i64, i64* %413, align 4
  store i64 %415, i64* %414, align 4
  %416 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %392, i64 5
  %417 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %391, i64 5
  %418 = bitcast %"struct.std::__1::pair.118"* %416 to i64*
  %419 = bitcast %"struct.std::__1::pair.118"* %417 to i64*
  %420 = load i64, i64* %418, align 4
  store i64 %420, i64* %419, align 4
  %421 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %392, i64 6
  %422 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %391, i64 6
  %423 = bitcast %"struct.std::__1::pair.118"* %421 to i64*
  %424 = bitcast %"struct.std::__1::pair.118"* %422 to i64*
  %425 = load i64, i64* %423, align 4
  store i64 %425, i64* %424, align 4
  %426 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %392, i64 7
  %427 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %391, i64 7
  %428 = bitcast %"struct.std::__1::pair.118"* %426 to i64*
  %429 = bitcast %"struct.std::__1::pair.118"* %427 to i64*
  %430 = load i64, i64* %428, align 4
  store i64 %430, i64* %429, align 4
  %431 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %392, i64 8
  %432 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %391, i64 8
  %433 = icmp eq %"struct.std::__1::pair.118"* %431, %32
  br i1 %433, label %304, label %390, !llvm.loop !95

434:                                              ; preds = %204, %516, %302
  %435 = phi %"struct.std::__1::pair.118"* [ %225, %302 ], [ %205, %204 ], [ %558, %516 ]
  %436 = icmp eq %"struct.std::__1::pair.118"* %435, %6
  br i1 %436, label %781, label %437

437:                                              ; preds = %434, %498
  %438 = phi %"struct.std::__1::pair.118"* [ %514, %498 ], [ %15, %434 ]
  %439 = phi %"struct.std::__1::pair.118"* [ %510, %498 ], [ %435, %434 ]
  %440 = phi %"struct.std::__1::pair.118"* [ %509, %498 ], [ %32, %434 ]
  %441 = icmp eq %"struct.std::__1::pair.118"* %440, %30
  br i1 %441, label %442, label %498

442:                                              ; preds = %437
  %443 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %439, i64 -1, i32 0
  %444 = ptrtoint i32* %443 to i64
  %445 = sub i64 %444, %9
  %446 = lshr i64 %445, 3
  %447 = add nuw nsw i64 %446, 1
  %448 = and i64 %447, 3
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %464, label %450

450:                                              ; preds = %442, %450
  %451 = phi %"struct.std::__1::pair.118"* [ %454, %450 ], [ %439, %442 ]
  %452 = phi %"struct.std::__1::pair.118"* [ %455, %450 ], [ %438, %442 ]
  %453 = phi i64 [ %462, %450 ], [ %448, %442 ]
  %454 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %451, i64 -1
  %455 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %452, i64 -1
  %456 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %454, i64 0, i32 0
  %457 = load i32, i32* %456, align 4
  %458 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %455, i64 0, i32 0
  store i32 %457, i32* %458, align 4
  %459 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %451, i64 -1, i32 1
  %460 = load i32, i32* %459, align 4
  %461 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %452, i64 -1, i32 1
  store i32 %460, i32* %461, align 4
  %462 = add i64 %453, -1
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %464, label %450, !llvm.loop !96

464:                                              ; preds = %450, %442
  %465 = phi %"struct.std::__1::pair.118"* [ %439, %442 ], [ %454, %450 ]
  %466 = phi %"struct.std::__1::pair.118"* [ %438, %442 ], [ %455, %450 ]
  %467 = icmp ult i64 %445, 24
  br i1 %467, label %781, label %468

468:                                              ; preds = %464, %468
  %469 = phi %"struct.std::__1::pair.118"* [ %489, %468 ], [ %465, %464 ]
  %470 = phi %"struct.std::__1::pair.118"* [ %490, %468 ], [ %466, %464 ]
  %471 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %469, i64 -1, i32 0
  %472 = load i32, i32* %471, align 4
  %473 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %470, i64 -1, i32 0
  store i32 %472, i32* %473, align 4
  %474 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %469, i64 -1, i32 1
  %475 = load i32, i32* %474, align 4
  %476 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %470, i64 -1, i32 1
  store i32 %475, i32* %476, align 4
  %477 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %469, i64 -2, i32 0
  %478 = load i32, i32* %477, align 4
  %479 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %470, i64 -2, i32 0
  store i32 %478, i32* %479, align 4
  %480 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %469, i64 -2, i32 1
  %481 = load i32, i32* %480, align 4
  %482 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %470, i64 -2, i32 1
  store i32 %481, i32* %482, align 4
  %483 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %469, i64 -3, i32 0
  %484 = load i32, i32* %483, align 4
  %485 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %470, i64 -3, i32 0
  store i32 %484, i32* %485, align 4
  %486 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %469, i64 -3, i32 1
  %487 = load i32, i32* %486, align 4
  %488 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %470, i64 -3, i32 1
  store i32 %487, i32* %488, align 4
  %489 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %469, i64 -4
  %490 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %470, i64 -4
  %491 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %489, i64 0, i32 0
  %492 = load i32, i32* %491, align 4
  %493 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %490, i64 0, i32 0
  store i32 %492, i32* %493, align 4
  %494 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %469, i64 -4, i32 1
  %495 = load i32, i32* %494, align 4
  %496 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %470, i64 -4, i32 1
  store i32 %495, i32* %496, align 4
  %497 = icmp eq %"struct.std::__1::pair.118"* %489, %6
  br i1 %497, label %781, label %468

498:                                              ; preds = %437
  %499 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %440, i64 -1
  %500 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %439, i64 -1
  %501 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %500, i64 0, i32 0
  %502 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %499, i64 0, i32 0
  %503 = load i32, i32* %501, align 4
  %504 = load i32, i32* %502, align 4
  %505 = icmp slt i32 %503, %504
  %506 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %438, i64 -1, i32 0
  %507 = select i1 %505, i32 %504, i32 %503
  %508 = select i1 %505, %"struct.std::__1::pair.118"* %440, %"struct.std::__1::pair.118"* %439
  %509 = select i1 %505, %"struct.std::__1::pair.118"* %499, %"struct.std::__1::pair.118"* %440
  %510 = select i1 %505, %"struct.std::__1::pair.118"* %439, %"struct.std::__1::pair.118"* %500
  store i32 %507, i32* %506, align 4
  %511 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %508, i64 -1, i32 1
  %512 = load i32, i32* %511, align 4
  %513 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %438, i64 -1, i32 1
  store i32 %512, i32* %513, align 4
  %514 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %438, i64 -1
  %515 = icmp eq %"struct.std::__1::pair.118"* %510, %6
  br i1 %515, label %781, label %437

516:                                              ; preds = %204, %516
  %517 = phi %"struct.std::__1::pair.118"* [ %558, %516 ], [ %206, %204 ]
  %518 = phi %"struct.std::__1::pair.118"* [ %557, %516 ], [ %207, %204 ]
  %519 = bitcast %"struct.std::__1::pair.118"* %518 to i64*
  %520 = bitcast %"struct.std::__1::pair.118"* %517 to i64*
  %521 = load i64, i64* %519, align 4
  store i64 %521, i64* %520, align 4
  %522 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %518, i64 1
  %523 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %517, i64 1
  %524 = bitcast %"struct.std::__1::pair.118"* %522 to i64*
  %525 = bitcast %"struct.std::__1::pair.118"* %523 to i64*
  %526 = load i64, i64* %524, align 4
  store i64 %526, i64* %525, align 4
  %527 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %518, i64 2
  %528 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %517, i64 2
  %529 = bitcast %"struct.std::__1::pair.118"* %527 to i64*
  %530 = bitcast %"struct.std::__1::pair.118"* %528 to i64*
  %531 = load i64, i64* %529, align 4
  store i64 %531, i64* %530, align 4
  %532 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %518, i64 3
  %533 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %517, i64 3
  %534 = bitcast %"struct.std::__1::pair.118"* %532 to i64*
  %535 = bitcast %"struct.std::__1::pair.118"* %533 to i64*
  %536 = load i64, i64* %534, align 4
  store i64 %536, i64* %535, align 4
  %537 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %518, i64 4
  %538 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %517, i64 4
  %539 = bitcast %"struct.std::__1::pair.118"* %537 to i64*
  %540 = bitcast %"struct.std::__1::pair.118"* %538 to i64*
  %541 = load i64, i64* %539, align 4
  store i64 %541, i64* %540, align 4
  %542 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %518, i64 5
  %543 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %517, i64 5
  %544 = bitcast %"struct.std::__1::pair.118"* %542 to i64*
  %545 = bitcast %"struct.std::__1::pair.118"* %543 to i64*
  %546 = load i64, i64* %544, align 4
  store i64 %546, i64* %545, align 4
  %547 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %518, i64 6
  %548 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %517, i64 6
  %549 = bitcast %"struct.std::__1::pair.118"* %547 to i64*
  %550 = bitcast %"struct.std::__1::pair.118"* %548 to i64*
  %551 = load i64, i64* %549, align 4
  store i64 %551, i64* %550, align 4
  %552 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %518, i64 7
  %553 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %517, i64 7
  %554 = bitcast %"struct.std::__1::pair.118"* %552 to i64*
  %555 = bitcast %"struct.std::__1::pair.118"* %553 to i64*
  %556 = load i64, i64* %554, align 4
  store i64 %556, i64* %555, align 4
  %557 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %518, i64 8
  %558 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %517, i64 8
  %559 = icmp eq %"struct.std::__1::pair.118"* %557, %15
  br i1 %559, label %434, label %516, !llvm.loop !97

560:                                              ; preds = %25, %567
  %561 = phi i64 [ %16, %25 ], [ %570, %567 ]
  %562 = phi i64 [ %19, %25 ], [ %569, %567 ]
  %563 = inttoptr i64 %562 to %"struct.std::__1::pair.118"*
  %564 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %563, i64 0, i32 0
  %565 = load i32, i32* %564, align 4
  %566 = icmp slt i32 %28, %565
  br i1 %566, label %572, label %567

567:                                              ; preds = %560
  %568 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %563, i64 1
  %569 = ptrtoint %"struct.std::__1::pair.118"* %568 to i64
  %570 = add nsw i64 %561, -1
  %571 = icmp eq i64 %570, 0
  br i1 %571, label %781, label %560

572:                                              ; preds = %560
  %573 = inttoptr i64 %562 to %"struct.std::__1::pair.118"*
  %574 = icmp slt i64 %561, %17
  br i1 %574, label %575, label %604

575:                                              ; preds = %572
  %576 = sdiv i64 %17, 2
  %577 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %26, i64 %576
  %578 = ptrtoint %"struct.std::__1::pair.118"* %577 to i64
  %579 = sub i64 %18, %562
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %599, label %581

581:                                              ; preds = %575
  %582 = ashr exact i64 %579, 3
  %583 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %577, i64 0, i32 0
  %584 = load i32, i32* %583, align 4
  br label %585

585:                                              ; preds = %585, %581
  %586 = phi %"struct.std::__1::pair.118"* [ %573, %581 ], [ %597, %585 ]
  %587 = phi i64 [ %582, %581 ], [ %596, %585 ]
  %588 = lshr i64 %587, 1
  %589 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %586, i64 %588
  %590 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %589, i64 0, i32 0
  %591 = load i32, i32* %590, align 4
  %592 = icmp slt i32 %584, %591
  %593 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %589, i64 1
  %594 = xor i64 %588, -1
  %595 = add i64 %587, %594
  %596 = select i1 %592, i64 %588, i64 %595
  %597 = select i1 %592, %"struct.std::__1::pair.118"* %586, %"struct.std::__1::pair.118"* %593
  %598 = icmp eq i64 %596, 0
  br i1 %598, label %599, label %585

599:                                              ; preds = %585, %575
  %600 = phi %"struct.std::__1::pair.118"* [ %573, %575 ], [ %597, %585 ]
  %601 = ptrtoint %"struct.std::__1::pair.118"* %600 to i64
  %602 = sub i64 %601, %562
  %603 = ashr exact i64 %602, 3
  br label %644

604:                                              ; preds = %572
  %605 = icmp eq i64 %561, 1
  br i1 %605, label %606, label %614

606:                                              ; preds = %604
  %607 = inttoptr i64 %18 to %"struct.std::__1::pair.118"*
  %608 = inttoptr i64 %562 to %"struct.std::__1::pair.118"*
  %609 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %608, i64 0, i32 0
  store i32 %28, i32* %609, align 4
  store i32 %565, i32* %27, align 4
  %610 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %608, i64 0, i32 1
  %611 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %607, i64 0, i32 1
  %612 = load i32, i32* %610, align 4
  %613 = load i32, i32* %611, align 4
  store i32 %613, i32* %610, align 4
  store i32 %612, i32* %611, align 4
  br label %781

614:                                              ; preds = %604
  %615 = sdiv i64 %561, 2
  %616 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %573, i64 %615
  %617 = ptrtoint %"struct.std::__1::pair.118"* %616 to i64
  %618 = ptrtoint %"struct.std::__1::pair.118"* %15 to i64
  %619 = sub i64 %618, %18
  %620 = icmp eq i64 %619, 0
  br i1 %620, label %639, label %621

621:                                              ; preds = %614
  %622 = ashr exact i64 %619, 3
  %623 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %616, i64 0, i32 0
  %624 = load i32, i32* %623, align 4
  br label %625

625:                                              ; preds = %625, %621
  %626 = phi %"struct.std::__1::pair.118"* [ %26, %621 ], [ %637, %625 ]
  %627 = phi i64 [ %622, %621 ], [ %636, %625 ]
  %628 = lshr i64 %627, 1
  %629 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %626, i64 %628
  %630 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %629, i64 0, i32 0
  %631 = load i32, i32* %630, align 4
  %632 = icmp slt i32 %631, %624
  %633 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %629, i64 1
  %634 = xor i64 %628, -1
  %635 = add i64 %627, %634
  %636 = select i1 %632, i64 %635, i64 %628
  %637 = select i1 %632, %"struct.std::__1::pair.118"* %633, %"struct.std::__1::pair.118"* %626
  %638 = icmp eq i64 %636, 0
  br i1 %638, label %639, label %625

639:                                              ; preds = %625, %614
  %640 = phi %"struct.std::__1::pair.118"* [ %26, %614 ], [ %637, %625 ]
  %641 = ptrtoint %"struct.std::__1::pair.118"* %640 to i64
  %642 = sub i64 %641, %18
  %643 = ashr exact i64 %642, 3
  br label %644

644:                                              ; preds = %639, %599
  %645 = phi i64 [ %601, %599 ], [ %617, %639 ]
  %646 = phi i64 [ %578, %599 ], [ %641, %639 ]
  %647 = phi i64 [ %576, %599 ], [ %643, %639 ]
  %648 = phi i64 [ %603, %599 ], [ %615, %639 ]
  %649 = sub nsw i64 %561, %648
  %650 = sub nsw i64 %17, %647
  %651 = inttoptr i64 %645 to %"struct.std::__1::pair.118"*
  %652 = inttoptr i64 %646 to %"struct.std::__1::pair.118"*
  %653 = icmp eq %"struct.std::__1::pair.118"* %651, %26
  br i1 %653, label %766, label %654

654:                                              ; preds = %644
  %655 = icmp eq %"struct.std::__1::pair.118"* %26, %652
  br i1 %655, label %766, label %656

656:                                              ; preds = %654
  %657 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %651, i64 0, i32 0
  %658 = load i32, i32* %657, align 4
  store i32 %28, i32* %657, align 4
  store i32 %658, i32* %27, align 4
  %659 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %651, i64 0, i32 1
  %660 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %26, i64 0, i32 1
  %661 = load i32, i32* %659, align 4
  %662 = load i32, i32* %660, align 4
  store i32 %662, i32* %659, align 4
  store i32 %661, i32* %660, align 4
  %663 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %651, i64 1
  %664 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %26, i64 1
  %665 = icmp eq %"struct.std::__1::pair.118"* %664, %652
  br i1 %665, label %735, label %666

666:                                              ; preds = %656
  %667 = getelementptr %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %652, i64 -2
  %668 = bitcast %"struct.std::__1::pair.118"* %667 to i8*
  %669 = sub i64 0, %18
  %670 = getelementptr i8, i8* %668, i64 %669
  %671 = ptrtoint i8* %670 to i64
  %672 = and i64 %671, 8
  %673 = icmp eq i64 %672, 0
  br i1 %673, label %674, label %689

674:                                              ; preds = %666
  %675 = ptrtoint %"struct.std::__1::pair.118"* %664 to i64
  %676 = icmp eq %"struct.std::__1::pair.118"* %663, %26
  %677 = select i1 %676, i64 %675, i64 %18
  %678 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %663, i64 0, i32 0
  %679 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %664, i64 0, i32 0
  %680 = load i32, i32* %678, align 4
  %681 = load i32, i32* %679, align 4
  store i32 %681, i32* %678, align 4
  store i32 %680, i32* %679, align 4
  %682 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %651, i64 1, i32 1
  %683 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %26, i64 1, i32 1
  %684 = load i32, i32* %682, align 4
  %685 = load i32, i32* %683, align 4
  store i32 %685, i32* %682, align 4
  store i32 %684, i32* %683, align 4
  %686 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %651, i64 2
  %687 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %26, i64 2
  %688 = inttoptr i64 %677 to %"struct.std::__1::pair.118"*
  br label %689

689:                                              ; preds = %674, %666
  %690 = phi i64 [ %677, %674 ], [ undef, %666 ]
  %691 = phi %"struct.std::__1::pair.118"* [ %686, %674 ], [ undef, %666 ]
  %692 = phi %"struct.std::__1::pair.118"* [ %688, %674 ], [ %26, %666 ]
  %693 = phi %"struct.std::__1::pair.118"* [ %687, %674 ], [ %664, %666 ]
  %694 = phi %"struct.std::__1::pair.118"* [ %686, %674 ], [ %663, %666 ]
  %695 = phi i64 [ %677, %674 ], [ %18, %666 ]
  %696 = icmp ult i8* %670, inttoptr (i64 8 to i8*)
  br i1 %696, label %731, label %697

697:                                              ; preds = %689, %697
  %698 = phi %"struct.std::__1::pair.118"* [ %730, %697 ], [ %692, %689 ]
  %699 = phi %"struct.std::__1::pair.118"* [ %728, %697 ], [ %693, %689 ]
  %700 = phi %"struct.std::__1::pair.118"* [ %727, %697 ], [ %694, %689 ]
  %701 = phi i64 [ %718, %697 ], [ %695, %689 ]
  %702 = ptrtoint %"struct.std::__1::pair.118"* %699 to i64
  %703 = icmp eq %"struct.std::__1::pair.118"* %700, %698
  %704 = select i1 %703, i64 %702, i64 %701
  %705 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %700, i64 0, i32 0
  %706 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %699, i64 0, i32 0
  %707 = load i32, i32* %705, align 4
  %708 = load i32, i32* %706, align 4
  store i32 %708, i32* %705, align 4
  store i32 %707, i32* %706, align 4
  %709 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %700, i64 0, i32 1
  %710 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %699, i64 0, i32 1
  %711 = load i32, i32* %709, align 4
  %712 = load i32, i32* %710, align 4
  store i32 %712, i32* %709, align 4
  store i32 %711, i32* %710, align 4
  %713 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %700, i64 1
  %714 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %699, i64 1
  %715 = inttoptr i64 %704 to %"struct.std::__1::pair.118"*
  %716 = ptrtoint %"struct.std::__1::pair.118"* %714 to i64
  %717 = icmp eq %"struct.std::__1::pair.118"* %713, %715
  %718 = select i1 %717, i64 %716, i64 %704
  %719 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %713, i64 0, i32 0
  %720 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %714, i64 0, i32 0
  %721 = load i32, i32* %719, align 4
  %722 = load i32, i32* %720, align 4
  store i32 %722, i32* %719, align 4
  store i32 %721, i32* %720, align 4
  %723 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %700, i64 1, i32 1
  %724 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %699, i64 1, i32 1
  %725 = load i32, i32* %723, align 4
  %726 = load i32, i32* %724, align 4
  store i32 %726, i32* %723, align 4
  store i32 %725, i32* %724, align 4
  %727 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %700, i64 2
  %728 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %699, i64 2
  %729 = icmp eq %"struct.std::__1::pair.118"* %728, %652
  %730 = inttoptr i64 %718 to %"struct.std::__1::pair.118"*
  br i1 %729, label %731, label %697

731:                                              ; preds = %697, %689
  %732 = phi i64 [ %690, %689 ], [ %718, %697 ]
  %733 = phi %"struct.std::__1::pair.118"* [ %691, %689 ], [ %727, %697 ]
  %734 = inttoptr i64 %732 to %"struct.std::__1::pair.118"*
  br label %735

735:                                              ; preds = %731, %656
  %736 = phi i64 [ %18, %656 ], [ %732, %731 ]
  %737 = phi %"struct.std::__1::pair.118"* [ %663, %656 ], [ %733, %731 ]
  %738 = phi %"struct.std::__1::pair.118"* [ %26, %656 ], [ %734, %731 ]
  %739 = icmp eq %"struct.std::__1::pair.118"* %737, %738
  br i1 %739, label %766, label %740

740:                                              ; preds = %735
  %741 = inttoptr i64 %736 to %"struct.std::__1::pair.118"*
  br label %742

742:                                              ; preds = %740, %763
  %743 = phi i64 [ %736, %740 ], [ %765, %763 ]
  %744 = phi %"struct.std::__1::pair.118"* [ %737, %740 ], [ %758, %763 ]
  %745 = phi %"struct.std::__1::pair.118"* [ %741, %740 ], [ %759, %763 ]
  %746 = inttoptr i64 %743 to %"struct.std::__1::pair.118"*
  br label %747

747:                                              ; preds = %742, %762
  %748 = phi %"struct.std::__1::pair.118"* [ %758, %762 ], [ %744, %742 ]
  %749 = phi %"struct.std::__1::pair.118"* [ %746, %762 ], [ %745, %742 ]
  %750 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %748, i64 0, i32 0
  %751 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %749, i64 0, i32 0
  %752 = load i32, i32* %750, align 4
  %753 = load i32, i32* %751, align 4
  store i32 %753, i32* %750, align 4
  store i32 %752, i32* %751, align 4
  %754 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %748, i64 0, i32 1
  %755 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %749, i64 0, i32 1
  %756 = load i32, i32* %754, align 4
  %757 = load i32, i32* %755, align 4
  store i32 %757, i32* %754, align 4
  store i32 %756, i32* %755, align 4
  %758 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %748, i64 1
  %759 = getelementptr inbounds %"struct.std::__1::pair.118", %"struct.std::__1::pair.118"* %749, i64 1
  %760 = icmp eq %"struct.std::__1::pair.118"* %759, %652
  %761 = icmp eq %"struct.std::__1::pair.118"* %758, %746
  br i1 %760, label %762, label %763

762:                                              ; preds = %747
  br i1 %761, label %766, label %747

763:                                              ; preds = %747
  %764 = ptrtoint %"struct.std::__1::pair.118"* %759 to i64
  %765 = select i1 %761, i64 %764, i64 %743
  br label %742

766:                                              ; preds = %762, %644, %654, %735
  %767 = phi %"struct.std::__1::pair.118"* [ %651, %654 ], [ %652, %644 ], [ %737, %735 ], [ %737, %762 ]
  %768 = add nsw i64 %648, %647
  %769 = add nsw i64 %649, %650
  %770 = icmp slt i64 %768, %769
  br i1 %770, label %771, label %773

771:                                              ; preds = %766
  %772 = ptrtoint %"struct.std::__1::pair.118"* %767 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat14ActivationTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_SO_T_NS_15iterator_traitsISO_E15difference_typeESS_PNSR_10value_typeEl(%"struct.std::__1::pair.118"* %573, %"struct.std::__1::pair.118"* %651, %"struct.std::__1::pair.118"* %767, %"struct.base::internal::flat_tree<url_pattern_index::proto::ActivationType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType> > > >::value_compare"* dereferenceable(1) %3, i64 %648, i64 %647, %"struct.std::__1::pair.118"* %6, i64 %7)
  br label %774

773:                                              ; preds = %766
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN17url_pattern_index5proto14ActivationTypeENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS4_4flat14ActivationTypeEEENS_9allocatorISE_EEEEE13value_compareENS_11__wrap_iterIPSE_EEEEvT0_SO_SO_T_NS_15iterator_traitsISO_E15difference_typeESS_PNSR_10value_typeEl(%"struct.std::__1::pair.118"* %767, %"struct.std::__1::pair.118"* %652, %"struct.std::__1::pair.118"* %15, %"struct.base::internal::flat_tree<url_pattern_index::proto::ActivationType, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType>, std::__1::allocator<std::__1::pair<url_pattern_index::proto::ActivationType, url_pattern_index::flat::ActivationType> > > >::value_compare"* dereferenceable(1) %3, i64 %649, i64 %650, %"struct.std::__1::pair.118"* %6, i64 %7)
  br label %774

774:                                              ; preds = %771, %773
  %775 = phi i64 [ %772, %771 ], [ %562, %773 ]
  %776 = phi i64 [ %646, %771 ], [ %645, %773 ]
  %777 = phi i64 [ %650, %771 ], [ %647, %773 ]
  %778 = phi i64 [ %649, %771 ], [ %648, %773 ]
  %779 = phi %"struct.std::__1::pair.118"* [ %15, %771 ], [ %767, %773 ]
  %780 = icmp eq i64 %777, 0
  br i1 %780, label %781, label %14

781:                                              ; preds = %774, %23, %567, %381, %335, %339, %498, %464, %468, %8, %606, %434, %304, %171, %35
  ret void
}

declare zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #7

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENSt3__16vectorIN11flatbuffers6OffsetINS4_6StringEEENS2_9allocatorIS7_EEEEPNS4_17FlatBufferBuilderEPNS2_3mapISA_NS5_INS4_6VectorIS7_EEEENS_19OffsetVectorCompareENS8_INS2_4pairIKSA_SG_EEEEEE(%"class.std::__1::vector"*, %"class.flatbuffers::FlatBufferBuilder"*, %"class.std::__1::map"*) unnamed_addr #2 align 2 {
  %4 = alloca %class.anon.152, align 8
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.160", align 1
  %7 = alloca %"class.flatbuffers::FlatBufferBuilder"*, align 8
  store %"class.flatbuffers::FlatBufferBuilder"* %1, %"class.flatbuffers::FlatBufferBuilder"** %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %9 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %11 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %10, align 8
  %12 = icmp eq %"struct.flatbuffers::Offset"* %9, %11
  br i1 %12, label %117, label %13

13:                                               ; preds = %3
  %14 = bitcast %class.anon.152* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = getelementptr inbounds %class.anon.152, %class.anon.152* %4, i64 0, i32 0
  store %"class.flatbuffers::FlatBufferBuilder"** %7, %"class.flatbuffers::FlatBufferBuilder"*** %15, align 8
  call fastcc void @_ZNSt3__16__sortIRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEvT0_SS_T_(%"struct.flatbuffers::Offset"* %9, %"struct.flatbuffers::Offset"* %11, %class.anon.152* nonnull dereferenceable(8) %4) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  %16 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node.157"**
  %18 = load %"class.std::__1::__tree_node.157"*, %"class.std::__1::__tree_node.157"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node.157"* %18, null
  %20 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %8, align 8
  %21 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %10, align 8
  br i1 %19, label %85, label %22

22:                                               ; preds = %13
  %23 = icmp eq %"struct.flatbuffers::Offset"* %20, %21
  br label %24

24:                                               ; preds = %54, %22
  %25 = phi %"class.std::__1::__tree_end_node"* [ %16, %22 ], [ %56, %54 ]
  %26 = phi %"class.std::__1::__tree_node.157"* [ %18, %22 ], [ %57, %54 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.157", %"class.std::__1::__tree_node.157"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %28 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %27, align 8
  br i1 %23, label %48, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.157", %"class.std::__1::__tree_node.157"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %30, align 8
  br label %32

32:                                               ; preds = %44, %29
  %33 = phi %"struct.flatbuffers::Offset"* [ %45, %44 ], [ %31, %29 ]
  %34 = phi %"struct.flatbuffers::Offset"* [ %46, %44 ], [ %20, %29 ]
  %35 = icmp eq %"struct.flatbuffers::Offset"* %33, %28
  br i1 %35, label %51, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %33, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %34, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp ult i32 %38, %40
  br i1 %41, label %51, label %42

42:                                               ; preds = %36
  %43 = icmp ult i32 %40, %38
  br i1 %43, label %48, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %33, i64 1
  %46 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %34, i64 1
  %47 = icmp eq %"struct.flatbuffers::Offset"* %46, %21
  br i1 %47, label %48, label %32

48:                                               ; preds = %44, %42, %24
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.157", %"class.std::__1::__tree_node.157"* %26, i64 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::__tree_node.157"* %26 to %"class.std::__1::__tree_node.157"**
  br label %54

51:                                               ; preds = %36, %32
  %52 = getelementptr inbounds %"class.std::__1::__tree_node.157", %"class.std::__1::__tree_node.157"* %26, i64 0, i32 0, i32 1
  %53 = bitcast %"class.std::__1::__tree_node_base"** %52 to %"class.std::__1::__tree_node.157"**
  br label %54

54:                                               ; preds = %51, %48
  %55 = phi %"class.std::__1::__tree_node.157"** [ %53, %51 ], [ %50, %48 ]
  %56 = phi %"class.std::__1::__tree_end_node"* [ %25, %51 ], [ %49, %48 ]
  %57 = load %"class.std::__1::__tree_node.157"*, %"class.std::__1::__tree_node.157"** %55, align 8
  %58 = icmp eq %"class.std::__1::__tree_node.157"* %57, null
  br i1 %58, label %59, label %24

59:                                               ; preds = %54
  %60 = icmp eq %"class.std::__1::__tree_end_node"* %56, %16
  br i1 %60, label %85, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 4
  %63 = bitcast %"class.std::__1::__tree_end_node"* %62 to %"struct.flatbuffers::Offset"**
  %64 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to %"struct.flatbuffers::Offset"**
  %67 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %66, align 8
  %68 = icmp eq %"struct.flatbuffers::Offset"* %64, %67
  br i1 %68, label %113, label %69

69:                                               ; preds = %61, %81
  %70 = phi %"struct.flatbuffers::Offset"* [ %82, %81 ], [ %20, %61 ]
  %71 = phi %"struct.flatbuffers::Offset"* [ %83, %81 ], [ %64, %61 ]
  %72 = icmp eq %"struct.flatbuffers::Offset"* %70, %21
  br i1 %72, label %85, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %70, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %71, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp ult i32 %75, %77
  br i1 %78, label %85, label %79

79:                                               ; preds = %73
  %80 = icmp ult i32 %77, %75
  br i1 %80, label %113, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %70, i64 1
  %83 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %71, i64 1
  %84 = icmp eq %"struct.flatbuffers::Offset"* %83, %67
  br i1 %84, label %113, label %69

85:                                               ; preds = %69, %73, %13, %59
  %86 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %7, align 8
  %87 = icmp eq %"struct.flatbuffers::Offset"* %20, %21
  %88 = select i1 %87, %"struct.flatbuffers::Offset"* bitcast (i8* @_ZZN11flatbuffers4dataINS_6OffsetINS_6StringEEENSt3__19allocatorIS3_EEEEPKT_RKNS4_6vectorIS7_T0_EEE1t to %"struct.flatbuffers::Offset"*), %"struct.flatbuffers::Offset"* %20
  %89 = ptrtoint %"struct.flatbuffers::Offset"* %21 to i64
  %90 = ptrtoint %"struct.flatbuffers::Offset"* %20 to i64
  %91 = sub i64 %89, %90
  %92 = ashr exact i64 %91, 2
  call void @_ZN11flatbuffers17FlatBufferBuilder11StartVectorEmm(%"class.flatbuffers::FlatBufferBuilder"* %86, i64 %92, i64 4) #20
  %93 = icmp eq i64 %91, 0
  br i1 %93, label %101, label %94

94:                                               ; preds = %85, %94
  %95 = phi i64 [ %96, %94 ], [ %92, %85 ]
  %96 = add i64 %95, -1
  %97 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %88, i64 %96, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementINS_6StringEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %86, i32 %98) #20
  %100 = icmp eq i64 %96, 0
  br i1 %100, label %101, label %94

101:                                              ; preds = %94, %85
  %102 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %86, i64 0, i32 3
  store i8 0, i8* %102, align 2
  %103 = trunc i64 %92 to i32
  %104 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %86, i32 %103) #20
  %105 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0
  %106 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #20
  %107 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::vector"* %0, %"class.std::__1::vector"** %107, align 8
  %108 = getelementptr inbounds %"class.std::__1::tuple.160", %"class.std::__1::tuple.160"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %108) #20
  %109 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN11flatbuffers6OffsetINS3_6StringEEENS_9allocatorIS6_EEEENS4_INS3_6VectorIS6_EEEEEENS_19__map_value_compareIS9_SD_N17url_pattern_index19OffsetVectorCompareELb1EEENS7_ISD_EEE25__emplace_unique_key_argsIS9_JRKNS_21piecewise_construct_tENS_5tupleIJRKS9_EEENSO_IJEEEEEENS_4pairINS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.25"* %105, %"class.std::__1::vector"* dereferenceable(24) %0, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.160"* nonnull dereferenceable(1) %6) #20
  %110 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %109, 0
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %110, i64 7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %108) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #20
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i32*
  store i32 %104, i32* %112, align 4
  br label %117

113:                                              ; preds = %81, %79, %61
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 7
  %115 = bitcast %"class.std::__1::__tree_end_node"* %114 to i32*
  %116 = load i32, i32* %115, align 8
  br label %117

117:                                              ; preds = %101, %113, %3
  %118 = phi i32 [ 0, %3 ], [ %104, %101 ], [ %116, %113 ]
  ret i32 %118
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN17url_pattern_index4flat13CreateUrlRuleERN11flatbuffers17FlatBufferBuilderEhtthNS0_14UrlPatternTypeENS0_10AnchorTypeES5_NS1_6OffsetINS1_6VectorINS6_INS1_6StringEEEEEEESB_S9_jmNS6_INS7_IhEEEE(%"class.flatbuffers::FlatBufferBuilder"* dereferenceable(96), i8 zeroext, i16 zeroext, i16 zeroext, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i64, i32) local_unnamed_addr #4 comdat {
  %15 = alloca %"struct.url_pattern_index::flat::UrlRuleBuilder", align 8
  %16 = bitcast %"struct.url_pattern_index::flat::UrlRuleBuilder"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #20
  %17 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRuleBuilder", %"struct.url_pattern_index::flat::UrlRuleBuilder"* %15, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRuleBuilder", %"struct.url_pattern_index::flat::UrlRuleBuilder"* %15, i64 0, i32 1
  %19 = bitcast %"struct.url_pattern_index::flat::UrlRuleBuilder"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  store %"class.flatbuffers::FlatBufferBuilder"* %0, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 3
  store i8 1, i8* %20, align 2
  %21 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %27 = bitcast i8** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %22, %25
  %30 = add i64 %29, %28
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* %18, align 8
  tail call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementImEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %0, i16 zeroext 26, i64 %12, i64 0) #20
  call void @_ZN17url_pattern_index4flat14UrlRuleBuilder23add_embedder_conditionsEN11flatbuffers6OffsetINS2_6VectorIhEEEE(%"struct.url_pattern_index::flat::UrlRuleBuilder"* nonnull %15, i32 %13)
  %32 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  %33 = icmp eq i32 %11, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %14
  %35 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %32, i64 0, i32 6
  %36 = load i8, i8* %35, align 8, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %67, label %38

38:                                               ; preds = %34, %14
  %39 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %32, i32 %11) #20
  %40 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %32, i64 0, i32 0, i32 6
  %41 = bitcast i8** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %32, i64 0, i32 0, i32 7
  %44 = bitcast i8** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %42, %45
  %47 = icmp ult i64 %46, 8
  br i1 %47, label %50, label %48

48:                                               ; preds = %38
  %49 = inttoptr i64 %45 to i64*
  br label %54

50:                                               ; preds = %38
  %51 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %32, i64 0, i32 0
  call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %51, i64 8) #20
  %52 = bitcast i8** %43 to i64**
  %53 = load i64*, i64** %52, align 8
  br label %54

54:                                               ; preds = %50, %48
  %55 = phi i64* [ %49, %48 ], [ %53, %50 ]
  %56 = zext i32 %39 to i64
  %57 = or i64 %56, -6149102238141775872
  store i64 %57, i64* %55, align 4
  %58 = load i8*, i8** %43, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 8
  store i8* %59, i8** %43, align 8
  %60 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %32, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = add i32 %61, 1
  store i32 %62, i32* %60, align 8
  %63 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %32, i64 0, i32 2
  %64 = load i16, i16* %63, align 2
  %65 = icmp ugt i16 %64, 24
  %66 = select i1 %65, i16 %64, i16 24
  store i16 %66, i16* %63, align 4
  br label %67

67:                                               ; preds = %34, %54
  call void @_ZN17url_pattern_index4flat14UrlRuleBuilder15add_url_patternEN11flatbuffers6OffsetINS2_6StringEEE(%"struct.url_pattern_index::flat::UrlRuleBuilder"* nonnull %15, i32 %10)
  call void @_ZN17url_pattern_index4flat14UrlRuleBuilder20add_domains_excludedEN11flatbuffers6OffsetINS2_6VectorINS3_INS2_6StringEEEEEEE(%"struct.url_pattern_index::flat::UrlRuleBuilder"* nonnull %15, i32 %9)
  call void @_ZN17url_pattern_index4flat14UrlRuleBuilder20add_domains_includedEN11flatbuffers6OffsetINS2_6VectorINS3_INS2_6StringEEEEEEE(%"struct.url_pattern_index::flat::UrlRuleBuilder"* nonnull %15, i32 %8)
  %68 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementItEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %68, i16 zeroext 8, i16 zeroext %3, i16 zeroext 127) #20
  %69 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementItEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %69, i16 zeroext 6, i16 zeroext %2, i16 zeroext 8191) #20
  %70 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  %71 = trunc i32 %7 to i8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %70, i16 zeroext 16, i8 zeroext %71, i8 zeroext 0) #20
  %72 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  %73 = trunc i32 %6 to i8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %72, i16 zeroext 14, i8 zeroext %73, i8 zeroext 0) #20
  %74 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  %75 = trunc i32 %5 to i8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %74, i16 zeroext 12, i8 zeroext %75, i8 zeroext 0) #20
  %76 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %76, i16 zeroext 10, i8 zeroext %4, i8 zeroext 0) #20
  %77 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %77, i16 zeroext 4, i8 zeroext %1, i8 zeroext 0) #20
  %78 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  %79 = load i32, i32* %18, align 8
  %80 = call i32 @_ZN11flatbuffers17FlatBufferBuilder8EndTableEj(%"class.flatbuffers::FlatBufferBuilder"* %78, i32 %79) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #20
  ret i32 %80
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"*, i8*, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"struct.flatbuffers::Offset", align 4
  %5 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 8
  %6 = load %"class.std::__1::set"*, %"class.std::__1::set"** %5, align 8
  %7 = icmp eq %"class.std::__1::set"* %6, null
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = tail call i8* @_Znwm(i64 32) #21
  %10 = ptrtoint %"class.flatbuffers::FlatBufferBuilder"* %0 to i64
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = getelementptr inbounds i8, i8* %9, i64 24
  %13 = bitcast i8* %12 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #20
  store i64 %10, i64* %13, align 8
  %14 = bitcast i8* %9 to i8**
  store i8* %11, i8** %14, align 8
  %15 = bitcast %"class.std::__1::set"** %5 to i8**
  store i8* %9, i8** %15, align 8
  br label %16

16:                                               ; preds = %3, %8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"struct.flatbuffers::Offset"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #20
  %26 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %4, i64 0, i32 0
  %27 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder12CreateStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %0, i8* %1, i64 %2)
  store i32 %27, i32* %26, align 4
  %28 = load %"class.std::__1::set"*, %"class.std::__1::set"** %5, align 8
  %29 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %28, i64 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %28, i64 0, i32 0, i32 1, i32 0, i32 0
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_node"**
  %32 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node"* %32, null
  br i1 %33, label %107, label %34

34:                                               ; preds = %16
  %35 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %28, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %36 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %35, align 8
  %37 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %36, i64 0, i32 5
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %36, i64 0, i32 4
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds i8, i8* %38, i64 %40
  %42 = zext i32 %27 to i64
  %43 = sub nsw i64 0, %42
  %44 = getelementptr inbounds i8, i8* %41, i64 %43
  %45 = getelementptr inbounds i8, i8* %44, i64 4
  %46 = bitcast i8* %44 to i32*
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %48, %34
  %49 = phi %"class.std::__1::__tree_end_node"* [ %30, %34 ], [ %72, %48 ]
  %50 = phi %"class.std::__1::__tree_node"* [ %32, %34 ], [ %73, %48 ]
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %50, i64 0, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = sub nsw i64 0, %53
  %55 = getelementptr inbounds i8, i8* %41, i64 %54
  %56 = getelementptr inbounds i8, i8* %55, i64 4
  %57 = bitcast i8* %55 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = icmp ult i32 %47, %58
  %60 = select i1 %59, i32 %47, i32 %58
  %61 = zext i32 %60 to i64
  %62 = tail call i32 @memcmp(i8* %56, i8* %45, i64 %61) #23
  %63 = icmp eq i32 %62, 0
  %64 = icmp ult i32 %58, %47
  %65 = icmp slt i32 %62, 0
  %66 = select i1 %63, i1 %64, i1 %65
  %67 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %50, i64 0, i32 0, i32 1
  %68 = bitcast %"class.std::__1::__tree_node_base"** %67 to %"class.std::__1::__tree_node"**
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %50, i64 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::__tree_node"* %50 to %"class.std::__1::__tree_node"**
  %71 = select i1 %66, %"class.std::__1::__tree_node"** %68, %"class.std::__1::__tree_node"** %70
  %72 = select i1 %66, %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"* %69
  %73 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %71, align 8
  %74 = icmp eq %"class.std::__1::__tree_node"* %73, null
  br i1 %74, label %75, label %48

75:                                               ; preds = %48
  %76 = icmp eq %"class.std::__1::__tree_end_node"* %72, %30
  br i1 %76, label %107, label %77

77:                                               ; preds = %75
  %78 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_node"*
  %79 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %78, i64 0, i32 1, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i64
  %82 = sub nsw i64 0, %81
  %83 = getelementptr inbounds i8, i8* %41, i64 %82
  %84 = getelementptr inbounds i8, i8* %83, i64 4
  %85 = bitcast i8* %83 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = icmp ult i32 %86, %47
  %88 = select i1 %87, i32 %86, i32 %47
  %89 = zext i32 %88 to i64
  %90 = tail call i32 @memcmp(i8* %45, i8* %84, i64 %89) #23
  %91 = icmp eq i32 %90, 0
  %92 = icmp ult i32 %47, %86
  %93 = icmp slt i32 %90, 0
  %94 = select i1 %91, i1 %92, i1 %93
  br i1 %94, label %107, label %95

95:                                               ; preds = %77
  %96 = load i64, i64* %17, align 8
  %97 = load i64, i64* %20, align 8
  %98 = load i64, i64* %23, align 8
  %99 = sub i64 %21, %18
  %100 = sub i64 %99, %24
  %101 = add i64 %100, %96
  %102 = sub i64 %101, %97
  %103 = add i64 %102, %98
  %104 = and i64 %103, 4294967295
  %105 = inttoptr i64 %97 to i8*
  %106 = getelementptr inbounds i8, i8* %105, i64 %104
  store i8* %106, i8** %19, align 8
  br label %109

107:                                              ; preds = %77, %75, %16
  %108 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %29, %"struct.flatbuffers::Offset"* nonnull dereferenceable(4) %4, %"struct.flatbuffers::Offset"* nonnull dereferenceable(4) %4) #20
  br label %109

109:                                              ; preds = %107, %95
  %110 = phi i32* [ %26, %107 ], [ %79, %95 ]
  %111 = load i32, i32* %110, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #20
  ret i32 %111
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11flatbuffers17FlatBufferBuilder12CreateStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"*, i8*, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = add i64 %2, 1
  %5 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, 4
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  store i64 4, i64* %5, align 8
  br label %9

9:                                                ; preds = %8, %3
  %10 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %11, %14
  %19 = add i64 %18, %17
  %20 = add i64 %4, %19
  %21 = sub i64 0, %20
  %22 = and i64 %21, 3
  %23 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %14, %25
  %27 = icmp ult i64 %26, %22
  br i1 %27, label %28, label %33

28:                                               ; preds = %9
  %29 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %29, i64 %22) #20
  %30 = load i8*, i8** %12, align 8
  %31 = sub nsw i64 0, %22
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  store i8* %32, i8** %12, align 8
  br label %38

33:                                               ; preds = %9
  %34 = inttoptr i64 %14 to i8*
  %35 = sub nsw i64 0, %22
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  store i8* %36, i8** %12, align 8
  %37 = icmp eq i64 %22, 0
  br i1 %37, label %76, label %38

38:                                               ; preds = %33, %28
  %39 = phi i8* [ %32, %28 ], [ %36, %33 ]
  store i8 0, i8* %39, align 1
  %40 = icmp eq i64 %22, 1
  br i1 %40, label %76, label %41

41:                                               ; preds = %38
  %42 = add nsw i64 %22, -1
  %43 = add nsw i64 %22, -2
  %44 = and i64 %42, 3
  %45 = icmp ult i64 %43, 3
  br i1 %45, label %65, label %46

46:                                               ; preds = %41
  %47 = sub nsw i64 %42, %44
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i64 [ 1, %46 ], [ %62, %48 ]
  %50 = phi i64 [ %47, %46 ], [ %63, %48 ]
  %51 = load i8*, i8** %12, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %49
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %49, 1
  %54 = load i8*, i8** %12, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw nsw i64 %49, 2
  %57 = load i8*, i8** %12, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %49, 3
  %60 = load i8*, i8** %12, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8 0, i8* %61, align 1
  %62 = add nuw i64 %49, 4
  %63 = add i64 %50, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %48

65:                                               ; preds = %48, %41
  %66 = phi i64 [ 1, %41 ], [ %62, %48 ]
  %67 = icmp eq i64 %44, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %73, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %74, %68 ], [ %44, %65 ]
  %71 = load i8*, i8** %12, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 %69
  store i8 0, i8* %72, align 1
  %73 = add nuw i64 %69, 1
  %74 = add i64 %70, -1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %68, !llvm.loop !98

76:                                               ; preds = %65, %68, %33, %38
  %77 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  %78 = load i64, i64* %13, align 8
  %79 = load i64, i64* %24, align 8
  %80 = icmp eq i64 %78, %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %77, i64 1) #20
  %82 = load i8*, i8** %12, align 8
  br label %85

83:                                               ; preds = %76
  %84 = inttoptr i64 %78 to i8*
  br label %85

85:                                               ; preds = %83, %81
  %86 = phi i8* [ %84, %83 ], [ %82, %81 ]
  %87 = getelementptr inbounds i8, i8* %86, i64 -1
  store i8* %87, i8** %12, align 8
  store i8 0, i8* %87, align 1
  %88 = icmp eq i64 %2, 0
  br i1 %88, label %101, label %89

89:                                               ; preds = %85
  %90 = load i64, i64* %13, align 8
  %91 = load i64, i64* %24, align 8
  %92 = sub i64 %90, %91
  %93 = icmp ult i64 %92, %2
  %94 = inttoptr i64 %90 to i8*
  br i1 %93, label %95, label %97

95:                                               ; preds = %89
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %77, i64 %2) #20
  %96 = load i8*, i8** %12, align 8
  br label %97

97:                                               ; preds = %95, %89
  %98 = phi i8* [ %94, %89 ], [ %96, %95 ]
  %99 = sub i64 0, %2
  %100 = getelementptr inbounds i8, i8* %98, i64 %99
  store i8* %100, i8** %12, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* align 1 %1, i64 %2, i1 false) #20
  br label %101

101:                                              ; preds = %85, %97
  %102 = trunc i64 %2 to i32
  %103 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %102)
  %104 = load i64, i64* %10, align 8
  %105 = load i64, i64* %13, align 8
  %106 = load i64, i64* %16, align 8
  %107 = sub i64 %104, %105
  %108 = add i64 %107, %106
  %109 = trunc i64 %108 to i32
  ret i32 %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i64 4, i64* %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %9, %12
  %17 = add i64 %16, %15
  %18 = sub i64 0, %17
  %19 = and i64 %18, 3
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %12, %22
  %24 = icmp ult i64 %23, %19
  br i1 %24, label %25, label %30

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %26, i64 %19) #20
  %27 = load i8*, i8** %10, align 8
  %28 = sub nsw i64 0, %19
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8* %29, i8** %10, align 8
  br label %35

30:                                               ; preds = %7
  %31 = inttoptr i64 %12 to i8*
  %32 = sub nsw i64 0, %19
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %10, align 8
  %34 = icmp eq i64 %19, 0
  br i1 %34, label %73, label %35

35:                                               ; preds = %30, %25
  %36 = phi i8* [ %29, %25 ], [ %33, %30 ]
  store i8 0, i8* %36, align 1
  %37 = icmp eq i64 %19, 1
  br i1 %37, label %73, label %38

38:                                               ; preds = %35
  %39 = add nsw i64 %19, -1
  %40 = add nsw i64 %19, -2
  %41 = and i64 %39, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %62, label %43

43:                                               ; preds = %38
  %44 = sub nsw i64 %39, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 1, %43 ], [ %59, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %60, %45 ]
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %46
  store i8 0, i8* %49, align 1
  %50 = add nuw nsw i64 %46, 1
  %51 = load i8*, i8** %10, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %46, 2
  %54 = load i8*, i8** %10, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw i64 %46, 3
  %57 = load i8*, i8** %10, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %46, 4
  %60 = add i64 %47, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %45

62:                                               ; preds = %45, %38
  %63 = phi i64 [ 1, %38 ], [ %59, %45 ]
  %64 = icmp eq i64 %41, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %70, %65 ], [ %63, %62 ]
  %67 = phi i64 [ %71, %65 ], [ %41, %62 ]
  %68 = load i8*, i8** %10, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %66
  store i8 0, i8* %69, align 1
  %70 = add nuw i64 %66, 1
  %71 = add i64 %67, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %65, !llvm.loop !99

73:                                               ; preds = %62, %65, %30, %35
  %74 = load i64, i64* %11, align 8
  %75 = load i64, i64* %21, align 8
  %76 = sub i64 %74, %75
  %77 = icmp ult i64 %76, 4
  %78 = inttoptr i64 %74 to i8*
  br i1 %77, label %79, label %82

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %80, i64 4) #20
  %81 = load i8*, i8** %10, align 8
  br label %82

82:                                               ; preds = %73, %79
  %83 = phi i8* [ %78, %73 ], [ %81, %79 ]
  %84 = getelementptr inbounds i8, i8* %83, i64 -4
  store i8* %84, i8** %10, align 8
  %85 = bitcast i8* %84 to i32*
  store i32 %1, i32* %85, align 4
  %86 = load i64, i64* %8, align 8
  %87 = load i64, i64* %11, align 8
  %88 = load i64, i64* %14, align 8
  %89 = sub i64 %86, %87
  %90 = add i64 %89, %88
  %91 = trunc i64 %90 to i32
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 6
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 5
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %4, %7
  %12 = add i64 %11, %10
  %13 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 7
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %10
  %17 = icmp eq i64 %4, 0
  %18 = inttoptr i64 %10 to i8*
  br i1 %17, label %21, label %19

19:                                               ; preds = %2
  %20 = lshr i64 %4, 1
  br label %24

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 2
  %23 = load i64, i64* %22, align 8
  br label %24

24:                                               ; preds = %21, %19
  %25 = phi i64 [ %20, %19 ], [ %23, %21 ]
  %26 = icmp ugt i64 %25, %1
  %27 = select i1 %26, i64 %25, i64 %1
  %28 = add i64 %27, %4
  %29 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  %32 = add i64 %31, %28
  %33 = sub i64 0, %30
  %34 = and i64 %32, %33
  store i64 %34, i64* %3, align 8
  %35 = icmp eq i64 %10, 0
  %36 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 0
  %37 = load %"class.flatbuffers::Allocator"*, %"class.flatbuffers::Allocator"** %36, align 8
  br i1 %35, label %55, label %38

38:                                               ; preds = %24
  %39 = and i64 %12, 4294967295
  %40 = and i64 %16, 4294967295
  %41 = icmp eq %"class.flatbuffers::Allocator"* %37, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.flatbuffers::Allocator"* %37 to i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)***
  %44 = load i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)**, i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)*** %43, align 8
  %45 = getelementptr inbounds i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)*, i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)** %44, i64 4
  %46 = load i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)*, i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)** %45, align 8
  %47 = tail call i8* %46(%"class.flatbuffers::Allocator"* nonnull %37, i8* nonnull %18, i64 %4, i64 %34, i64 %39, i64 %40) #20
  br label %65

48:                                               ; preds = %38
  %49 = tail call i8* @_Znam(i64 %34) #21
  %50 = getelementptr inbounds i8, i8* %49, i64 %34
  %51 = sub nsw i64 0, %39
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = getelementptr inbounds i8, i8* %18, i64 %4
  %54 = getelementptr inbounds i8, i8* %53, i64 %51
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %54, i64 %39, i1 false) #20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %49, i8* nonnull align 1 %18, i64 %40, i1 false) #20
  tail call void @_ZdaPv(i8* nonnull %18) #21
  br label %65

55:                                               ; preds = %24
  %56 = icmp eq %"class.flatbuffers::Allocator"* %37, null
  br i1 %56, label %63, label %57

57:                                               ; preds = %55
  %58 = bitcast %"class.flatbuffers::Allocator"* %37 to i8* (%"class.flatbuffers::Allocator"*, i64)***
  %59 = load i8* (%"class.flatbuffers::Allocator"*, i64)**, i8* (%"class.flatbuffers::Allocator"*, i64)*** %58, align 8
  %60 = getelementptr inbounds i8* (%"class.flatbuffers::Allocator"*, i64)*, i8* (%"class.flatbuffers::Allocator"*, i64)** %59, i64 2
  %61 = load i8* (%"class.flatbuffers::Allocator"*, i64)*, i8* (%"class.flatbuffers::Allocator"*, i64)** %60, align 8
  %62 = tail call i8* %61(%"class.flatbuffers::Allocator"* nonnull %37, i64 %34) #20
  br label %65

63:                                               ; preds = %55
  %64 = tail call i8* @_Znam(i64 %34) #21
  br label %65

65:                                               ; preds = %63, %57, %48, %42
  %66 = phi i8* [ %47, %42 ], [ %49, %48 ], [ %62, %57 ], [ %64, %63 ]
  store i8* %66, i8** %8, align 8
  %67 = load i64, i64* %3, align 8
  %68 = getelementptr inbounds i8, i8* %66, i64 %67
  %69 = and i64 %12, 4294967295
  %70 = sub nsw i64 0, %69
  %71 = getelementptr inbounds i8, i8* %68, i64 %70
  store i8* %71, i8** %5, align 8
  %72 = and i64 %16, 4294967295
  %73 = getelementptr inbounds i8, i8* %66, i64 %72
  store i8* %73, i8** %13, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #12

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #14

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"struct.flatbuffers::Offset"* dereferenceable(4), %"struct.flatbuffers::Offset"* dereferenceable(4)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %67, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %11 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %10, align 8
  %12 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %11, i64 0, i32 5
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %11, i64 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  %20 = sub nsw i64 0, %14
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = getelementptr inbounds i8, i8* %21, i64 4
  %23 = bitcast i8* %21 to i32*
  %24 = load i32, i32* %23, align 4
  br label %25

25:                                               ; preds = %63, %8
  %26 = phi %"class.std::__1::__tree_node"* [ %66, %63 ], [ %6, %8 ]
  %27 = phi %"class.std::__1::__tree_node_base"** [ %65, %63 ], [ %9, %8 ]
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 1, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = sub nsw i64 0, %30
  %32 = getelementptr inbounds i8, i8* %19, i64 %31
  %33 = getelementptr inbounds i8, i8* %32, i64 4
  %34 = bitcast i8* %32 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = icmp ult i32 %35, %24
  %37 = select i1 %36, i32 %35, i32 %24
  %38 = zext i32 %37 to i64
  %39 = tail call i32 @memcmp(i8* %22, i8* %33, i64 %38) #23
  %40 = icmp eq i32 %39, 0
  %41 = icmp ult i32 %24, %35
  %42 = icmp slt i32 %39, 0
  %43 = select i1 %40, i1 %41, i1 %42
  br i1 %43, label %44, label %50

44:                                               ; preds = %25
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %48, label %63

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0
  br label %69

50:                                               ; preds = %25
  %51 = tail call i32 @memcmp(i8* %33, i8* %22, i64 %38) #23
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %51, 0
  %54 = select i1 %52, i1 %36, i1 %53
  br i1 %54, label %55, label %61

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 1
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %59, label %63

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0
  br label %69

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0
  br label %69

63:                                               ; preds = %55, %44
  %64 = phi %"class.std::__1::__tree_node_base"* [ %46, %44 ], [ %57, %55 ]
  %65 = phi %"class.std::__1::__tree_node_base"** [ %45, %44 ], [ %56, %55 ]
  %66 = bitcast %"class.std::__1::__tree_node_base"* %64 to %"class.std::__1::__tree_node"*
  br label %25

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %69

69:                                               ; preds = %48, %59, %61, %67
  %70 = phi %"class.std::__1::__tree_end_node"* [ %4, %67 ], [ %49, %48 ], [ %60, %59 ], [ %62, %61 ]
  %71 = phi %"class.std::__1::__tree_node_base"** [ %68, %67 ], [ %45, %48 ], [ %56, %59 ], [ %27, %61 ]
  %72 = bitcast %"class.std::__1::__tree_node_base"** %71 to %"class.std::__1::__tree_node"**
  %73 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node"* %73, null
  br i1 %74, label %75, label %102

75:                                               ; preds = %69
  %76 = tail call i8* @_Znwm(i64 32) #21, !noalias !100
  %77 = getelementptr inbounds i8, i8* %76, i64 28
  %78 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %2, i64 0, i32 0
  %79 = bitcast i8* %77 to i32*
  %80 = load i32, i32* %78, align 4, !noalias !100
  store i32 %80, i32* %79, align 4, !noalias !100
  %81 = bitcast i8* %76 to %"class.std::__1::__tree_node"*
  %82 = bitcast i8* %76 to %"class.std::__1::__tree_node_base"*
  %83 = getelementptr inbounds i8, i8* %76, i64 16
  %84 = bitcast i8* %83 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 16, i1 false) #20
  store %"class.std::__1::__tree_end_node"* %70, %"class.std::__1::__tree_end_node"** %84, align 8
  %85 = bitcast %"class.std::__1::__tree_node_base"** %71 to i8**
  store i8* %76, i8** %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %87 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %87, i64 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %75
  %92 = ptrtoint %"class.std::__1::__tree_node_base"* %89 to i64
  %93 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %92, i64* %93, align 8
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  br label %95

95:                                               ; preds = %91, %75
  %96 = phi %"class.std::__1::__tree_node_base"* [ %82, %75 ], [ %94, %91 ]
  %97 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %96) #20
  %99 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, 1
  store i64 %101, i64* %99, align 8
  br label %102

102:                                              ; preds = %95, %69
  %103 = phi i8 [ 1, %95 ], [ 0, %69 ]
  %104 = phi %"class.std::__1::__tree_node"* [ %81, %95 ], [ %73, %69 ]
  %105 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %104, i64 0, i32 0, i32 0
  %106 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %105, 0
  %107 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %106, i8 %103, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #2 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !3
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__sortIRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEvT0_SS_T_(%"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"*, %class.anon.152* readonly dereferenceable(8)) unnamed_addr #2 {
  %4 = getelementptr inbounds %class.anon.152, %class.anon.152* %2, i64 0, i32 0
  br label %5

5:                                                ; preds = %497, %3
  %6 = phi %"struct.flatbuffers::Offset"* [ %1, %3 ], [ %445, %497 ]
  %7 = phi %"struct.flatbuffers::Offset"* [ %0, %3 ], [ %16, %497 ]
  %8 = ptrtoint %"struct.flatbuffers::Offset"* %6 to i64
  %9 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %6, i64 -1
  %10 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %6, i64 -1, i32 0
  %11 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %9, i64 0, i32 0
  %12 = ptrtoint %"struct.flatbuffers::Offset"* %6 to i64
  br label %13

13:                                               ; preds = %506, %5
  %14 = phi %"struct.flatbuffers::Offset"* [ %7, %5 ], [ %507, %506 ]
  br label %15

15:                                               ; preds = %337, %13
  %16 = phi %"struct.flatbuffers::Offset"* [ %14, %13 ], [ %299, %337 ]
  %17 = ptrtoint %"struct.flatbuffers::Offset"* %16 to i64
  %18 = sub i64 %8, %17
  %19 = ashr exact i64 %18, 2
  switch i64 %19, label %74 [
    i64 0, label %510
    i64 1, label %510
    i64 2, label %20
    i64 3, label %59
    i64 4, label %63
    i64 5, label %68
  ]

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %6, i64 -1, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %4, align 8
  %26 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %25, align 8
  %27 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %26, i64 0, i32 0, i32 6
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %26, i64 0, i32 0, i32 4
  %30 = load i64, i64* %29, align 8
  %31 = ptrtoint i8* %28 to i64
  %32 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %26, i64 0, i32 0, i32 5
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %30, %31
  %36 = add i64 %35, %34
  %37 = and i64 %36, 4294967295
  %38 = getelementptr inbounds i8, i8* %28, i64 %37
  %39 = zext i32 %22 to i64
  %40 = sub nsw i64 0, %39
  %41 = getelementptr inbounds i8, i8* %38, i64 %40
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %24 to i64
  %45 = sub nsw i64 0, %44
  %46 = getelementptr inbounds i8, i8* %38, i64 %45
  %47 = bitcast i8* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %43, %48
  br i1 %49, label %52, label %50

50:                                               ; preds = %20
  %51 = icmp ugt i32 %43, %48
  br i1 %51, label %58, label %510

52:                                               ; preds = %20
  %53 = zext i32 %43 to i64
  %54 = getelementptr inbounds i8, i8* %46, i64 4
  %55 = getelementptr inbounds i8, i8* %41, i64 4
  %56 = tail call i32 @memcmp(i8* %55, i8* %54, i64 %53) #20
  %57 = icmp slt i32 %56, 0
  br i1 %57, label %58, label %510

58:                                               ; preds = %50, %52
  store i32 %22, i32* %23, align 4
  store i32 %24, i32* %21, align 4
  br label %510

59:                                               ; preds = %15
  %60 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %16, i64 1
  %61 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %6, i64 -1
  %62 = tail call fastcc i32 @_ZNSt3__17__sort3IRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEjT0_SS_SS_T_(%"struct.flatbuffers::Offset"* %16, %"struct.flatbuffers::Offset"* %60, %"struct.flatbuffers::Offset"* %61, %class.anon.152* dereferenceable(8) %2)
  br label %510

63:                                               ; preds = %15
  %64 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %16, i64 1
  %65 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %16, i64 2
  %66 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %6, i64 -1
  %67 = tail call fastcc i32 @_ZNSt3__17__sort4IRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEjT0_SS_SS_SS_T_(%"struct.flatbuffers::Offset"* %16, %"struct.flatbuffers::Offset"* %64, %"struct.flatbuffers::Offset"* %65, %"struct.flatbuffers::Offset"* %66, %class.anon.152* dereferenceable(8) %2)
  br label %510

68:                                               ; preds = %15
  %69 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %16, i64 1
  %70 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %16, i64 2
  %71 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %16, i64 3
  %72 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %6, i64 -1
  %73 = tail call fastcc i32 @_ZNSt3__17__sort5IRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEjT0_SS_SS_SS_SS_T_(%"struct.flatbuffers::Offset"* %16, %"struct.flatbuffers::Offset"* %69, %"struct.flatbuffers::Offset"* %70, %"struct.flatbuffers::Offset"* %71, %"struct.flatbuffers::Offset"* %72, %class.anon.152* dereferenceable(8) %2)
  br label %510

74:                                               ; preds = %15
  %75 = icmp slt i64 %18, 124
  br i1 %75, label %76, label %169

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %16, i64 2
  %78 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %16, i64 1
  %79 = tail call fastcc i32 @_ZNSt3__17__sort3IRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEjT0_SS_SS_T_(%"struct.flatbuffers::Offset"* %16, %"struct.flatbuffers::Offset"* %78, %"struct.flatbuffers::Offset"* %77, %class.anon.152* dereferenceable(8) %2) #20
  %80 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %16, i64 3
  %81 = icmp eq %"struct.flatbuffers::Offset"* %80, %6
  br i1 %81, label %510, label %82

82:                                               ; preds = %76, %166
  %83 = phi %"struct.flatbuffers::Offset"* [ %84, %166 ], [ %77, %76 ]
  %84 = phi %"struct.flatbuffers::Offset"* [ %167, %166 ], [ %80, %76 ]
  %85 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %84, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %83, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %4, align 8
  %90 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %89, align 8
  %91 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %90, i64 0, i32 0, i32 6
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %90, i64 0, i32 0, i32 4
  %94 = load i64, i64* %93, align 8
  %95 = ptrtoint i8* %92 to i64
  %96 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %90, i64 0, i32 0, i32 5
  %97 = bitcast i8** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %94, %95
  %100 = add i64 %99, %98
  %101 = and i64 %100, 4294967295
  %102 = getelementptr inbounds i8, i8* %92, i64 %101
  %103 = zext i32 %86 to i64
  %104 = sub nsw i64 0, %103
  %105 = getelementptr inbounds i8, i8* %102, i64 %104
  %106 = bitcast i8* %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %88 to i64
  %109 = sub nsw i64 0, %108
  %110 = getelementptr inbounds i8, i8* %102, i64 %109
  %111 = bitcast i8* %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %107, %112
  br i1 %113, label %116, label %114

114:                                              ; preds = %82
  %115 = icmp ugt i32 %107, %112
  br i1 %115, label %122, label %166

116:                                              ; preds = %82
  %117 = zext i32 %107 to i64
  %118 = getelementptr inbounds i8, i8* %110, i64 4
  %119 = getelementptr inbounds i8, i8* %105, i64 4
  %120 = tail call i32 @memcmp(i8* %119, i8* %118, i64 %117) #20
  %121 = icmp slt i32 %120, 0
  br i1 %121, label %122, label %166

122:                                              ; preds = %116, %114
  store i32 %88, i32* %85, align 4
  %123 = icmp eq %"struct.flatbuffers::Offset"* %83, %16
  br i1 %123, label %163, label %124

124:                                              ; preds = %122, %160
  %125 = phi %"struct.flatbuffers::Offset"* [ %126, %160 ], [ %83, %122 ]
  %126 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %125, i64 -1
  %127 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %125, i64 -1, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %4, align 8
  %130 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %129, align 8
  %131 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %130, i64 0, i32 0, i32 6
  %132 = load i8*, i8** %131, align 8
  %133 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %130, i64 0, i32 0, i32 4
  %134 = load i64, i64* %133, align 8
  %135 = ptrtoint i8* %132 to i64
  %136 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %130, i64 0, i32 0, i32 5
  %137 = bitcast i8** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = sub i64 %134, %135
  %140 = add i64 %139, %138
  %141 = and i64 %140, 4294967295
  %142 = getelementptr inbounds i8, i8* %132, i64 %141
  %143 = getelementptr inbounds i8, i8* %142, i64 %104
  %144 = bitcast i8* %143 to i32*
  %145 = load i32, i32* %144, align 4
  %146 = zext i32 %128 to i64
  %147 = sub nsw i64 0, %146
  %148 = getelementptr inbounds i8, i8* %142, i64 %147
  %149 = bitcast i8* %148 to i32*
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %145, %150
  br i1 %151, label %154, label %152

152:                                              ; preds = %124
  %153 = icmp ugt i32 %145, %150
  br i1 %153, label %160, label %163

154:                                              ; preds = %124
  %155 = zext i32 %145 to i64
  %156 = getelementptr inbounds i8, i8* %148, i64 4
  %157 = getelementptr inbounds i8, i8* %143, i64 4
  %158 = tail call i32 @memcmp(i8* %157, i8* %156, i64 %155) #20
  %159 = icmp slt i32 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %154, %152
  %161 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %125, i64 0, i32 0
  store i32 %128, i32* %161, align 4
  %162 = icmp eq %"struct.flatbuffers::Offset"* %126, %16
  br i1 %162, label %163, label %124

163:                                              ; preds = %160, %152, %154, %122
  %164 = phi %"struct.flatbuffers::Offset"* [ %16, %122 ], [ %125, %154 ], [ %125, %152 ], [ %16, %160 ]
  %165 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %164, i64 0, i32 0
  store i32 %86, i32* %165, align 4
  br label %166

166:                                              ; preds = %163, %116, %114
  %167 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %84, i64 1
  %168 = icmp eq %"struct.flatbuffers::Offset"* %167, %6
  br i1 %168, label %510, label %82

169:                                              ; preds = %74
  %170 = icmp sgt i64 %18, 3996
  %171 = sdiv i64 %19, 2
  %172 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %16, i64 %171
  br i1 %170, label %173, label %178

173:                                              ; preds = %169
  %174 = sdiv i64 %19, 4
  %175 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %16, i64 %174
  %176 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %172, i64 %174
  %177 = tail call fastcc i32 @_ZNSt3__17__sort5IRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEjT0_SS_SS_SS_SS_T_(%"struct.flatbuffers::Offset"* %16, %"struct.flatbuffers::Offset"* %175, %"struct.flatbuffers::Offset"* %172, %"struct.flatbuffers::Offset"* %176, %"struct.flatbuffers::Offset"* %9, %class.anon.152* dereferenceable(8) %2)
  br label %180

178:                                              ; preds = %169
  %179 = tail call fastcc i32 @_ZNSt3__17__sort3IRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEjT0_SS_SS_T_(%"struct.flatbuffers::Offset"* %16, %"struct.flatbuffers::Offset"* %172, %"struct.flatbuffers::Offset"* %9, %class.anon.152* dereferenceable(8) %2)
  br label %180

180:                                              ; preds = %178, %173
  %181 = phi i32 [ %177, %173 ], [ %179, %178 ]
  %182 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %16, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %172, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %4, align 8
  %187 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %186, align 8
  %188 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %187, i64 0, i32 0, i32 6
  %189 = load i8*, i8** %188, align 8
  %190 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %187, i64 0, i32 0, i32 4
  %191 = load i64, i64* %190, align 8
  %192 = ptrtoint i8* %189 to i64
  %193 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %187, i64 0, i32 0, i32 5
  %194 = bitcast i8** %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = sub i64 %191, %192
  %197 = add i64 %196, %195
  %198 = and i64 %197, 4294967295
  %199 = getelementptr inbounds i8, i8* %189, i64 %198
  %200 = zext i32 %183 to i64
  %201 = sub nsw i64 0, %200
  %202 = getelementptr inbounds i8, i8* %199, i64 %201
  %203 = bitcast i8* %202 to i32*
  %204 = load i32, i32* %203, align 4
  %205 = zext i32 %185 to i64
  %206 = sub nsw i64 0, %205
  %207 = getelementptr inbounds i8, i8* %199, i64 %206
  %208 = bitcast i8* %207 to i32*
  %209 = load i32, i32* %208, align 4
  %210 = icmp eq i32 %204, %209
  br i1 %210, label %213, label %211

211:                                              ; preds = %180
  %212 = icmp ugt i32 %204, %209
  br i1 %212, label %362, label %219

213:                                              ; preds = %180
  %214 = zext i32 %204 to i64
  %215 = getelementptr inbounds i8, i8* %207, i64 4
  %216 = getelementptr inbounds i8, i8* %202, i64 4
  %217 = tail call i32 @memcmp(i8* %216, i8* %215, i64 %214) #20
  %218 = icmp slt i32 %217, 0
  br i1 %218, label %362, label %219

219:                                              ; preds = %211, %213
  %220 = getelementptr inbounds i8, i8* %207, i64 4
  %221 = zext i32 %209 to i64
  br label %222

222:                                              ; preds = %219, %356
  %223 = phi %"struct.flatbuffers::Offset"* [ %224, %356 ], [ %9, %219 ]
  %224 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %223, i64 -1
  %225 = icmp eq %"struct.flatbuffers::Offset"* %16, %224
  br i1 %225, label %226, label %342

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %16, i64 1
  %228 = load i32, i32* %10, align 4
  %229 = zext i32 %228 to i64
  %230 = sub nsw i64 0, %229
  %231 = getelementptr inbounds i8, i8* %199, i64 %230
  %232 = bitcast i8* %231 to i32*
  %233 = load i32, i32* %232, align 4
  %234 = icmp eq i32 %204, %233
  br i1 %234, label %237, label %235

235:                                              ; preds = %226
  %236 = icmp ugt i32 %204, %233
  br i1 %236, label %270, label %243

237:                                              ; preds = %226
  %238 = zext i32 %204 to i64
  %239 = getelementptr inbounds i8, i8* %231, i64 4
  %240 = getelementptr inbounds i8, i8* %202, i64 4
  %241 = tail call i32 @memcmp(i8* %240, i8* %239, i64 %238) #20
  %242 = icmp slt i32 %241, 0
  br i1 %242, label %270, label %243

243:                                              ; preds = %235, %237
  %244 = icmp eq %"struct.flatbuffers::Offset"* %227, %9
  br i1 %244, label %510, label %245

245:                                              ; preds = %243
  %246 = zext i32 %204 to i64
  %247 = getelementptr inbounds i8, i8* %202, i64 4
  br label %248

248:                                              ; preds = %245, %267
  %249 = phi %"struct.flatbuffers::Offset"* [ %227, %245 ], [ %268, %267 ]
  %250 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %249, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = zext i32 %251 to i64
  %253 = sub nsw i64 0, %252
  %254 = getelementptr inbounds i8, i8* %199, i64 %253
  %255 = bitcast i8* %254 to i32*
  %256 = load i32, i32* %255, align 4
  %257 = icmp eq i32 %204, %256
  br i1 %257, label %260, label %258

258:                                              ; preds = %248
  %259 = icmp ugt i32 %204, %256
  br i1 %259, label %264, label %267

260:                                              ; preds = %248
  %261 = getelementptr inbounds i8, i8* %254, i64 4
  %262 = tail call i32 @memcmp(i8* %247, i8* %261, i64 %246) #20
  %263 = icmp slt i32 %262, 0
  br i1 %263, label %264, label %267

264:                                              ; preds = %258, %260
  %265 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %249, i64 0, i32 0
  store i32 %228, i32* %265, align 4
  store i32 %251, i32* %11, align 4
  %266 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %249, i64 1
  br label %270

267:                                              ; preds = %258, %260
  %268 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %249, i64 1
  %269 = icmp eq %"struct.flatbuffers::Offset"* %268, %9
  br i1 %269, label %510, label %248

270:                                              ; preds = %235, %264, %237
  %271 = phi %"struct.flatbuffers::Offset"* [ %227, %237 ], [ %266, %264 ], [ %227, %235 ]
  %272 = icmp eq %"struct.flatbuffers::Offset"* %271, %9
  br i1 %272, label %510, label %273

273:                                              ; preds = %270, %339
  %274 = phi %"struct.flatbuffers::Offset"* [ %320, %339 ], [ %9, %270 ]
  %275 = phi %"struct.flatbuffers::Offset"* [ %341, %339 ], [ %271, %270 ]
  %276 = load i32, i32* %182, align 4
  %277 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %4, align 8
  %278 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %277, align 8
  %279 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %278, i64 0, i32 0, i32 6
  %280 = load i8*, i8** %279, align 8
  %281 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %278, i64 0, i32 0, i32 4
  %282 = load i64, i64* %281, align 8
  %283 = ptrtoint i8* %280 to i64
  %284 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %278, i64 0, i32 0, i32 5
  %285 = bitcast i8** %284 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = sub i64 %282, %283
  %288 = add i64 %287, %286
  %289 = and i64 %288, 4294967295
  %290 = getelementptr inbounds i8, i8* %280, i64 %289
  %291 = zext i32 %276 to i64
  %292 = sub nsw i64 0, %291
  %293 = getelementptr inbounds i8, i8* %290, i64 %292
  %294 = bitcast i8* %293 to i32*
  %295 = load i32, i32* %294, align 4
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds i8, i8* %293, i64 4
  br label %298

298:                                              ; preds = %316, %273
  %299 = phi %"struct.flatbuffers::Offset"* [ %275, %273 ], [ %317, %316 ]
  %300 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %299, i64 0, i32 0
  %301 = load i32, i32* %300, align 4
  %302 = zext i32 %301 to i64
  %303 = sub nsw i64 0, %302
  %304 = getelementptr inbounds i8, i8* %290, i64 %303
  %305 = bitcast i8* %304 to i32*
  %306 = load i32, i32* %305, align 4
  %307 = icmp eq i32 %295, %306
  br i1 %307, label %310, label %308

308:                                              ; preds = %298
  %309 = icmp ugt i32 %295, %306
  br i1 %309, label %314, label %316

310:                                              ; preds = %298
  %311 = getelementptr inbounds i8, i8* %304, i64 4
  %312 = tail call i32 @memcmp(i8* %297, i8* %311, i64 %296) #20
  %313 = icmp slt i32 %312, 0
  br i1 %313, label %314, label %316

314:                                              ; preds = %308, %310
  %315 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %299, i64 0, i32 0
  br label %318

316:                                              ; preds = %308, %310
  %317 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %299, i64 1
  br label %298

318:                                              ; preds = %314, %334
  %319 = phi %"struct.flatbuffers::Offset"* [ %320, %334 ], [ %274, %314 ]
  %320 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %319, i64 -1
  %321 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %319, i64 -1, i32 0
  %322 = load i32, i32* %321, align 4
  %323 = zext i32 %322 to i64
  %324 = sub nsw i64 0, %323
  %325 = getelementptr inbounds i8, i8* %290, i64 %324
  %326 = bitcast i8* %325 to i32*
  %327 = load i32, i32* %326, align 4
  %328 = icmp eq i32 %295, %327
  br i1 %328, label %331, label %329

329:                                              ; preds = %318
  %330 = icmp ugt i32 %295, %327
  br i1 %330, label %334, label %337

331:                                              ; preds = %318
  %332 = getelementptr inbounds i8, i8* %325, i64 4
  %333 = tail call i32 @memcmp(i8* %297, i8* %332, i64 %296) #20
  br label %334

334:                                              ; preds = %329, %331
  %335 = phi i32 [ %333, %331 ], [ -1, %329 ]
  %336 = icmp slt i32 %335, 0
  br i1 %336, label %318, label %337

337:                                              ; preds = %329, %334
  %338 = icmp ult %"struct.flatbuffers::Offset"* %299, %320
  br i1 %338, label %339, label %15

339:                                              ; preds = %337
  %340 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %320, i64 0, i32 0
  store i32 %322, i32* %315, align 4
  store i32 %301, i32* %340, align 4
  %341 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %299, i64 1
  br label %273

342:                                              ; preds = %222
  %343 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %224, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  %345 = zext i32 %344 to i64
  %346 = sub nsw i64 0, %345
  %347 = getelementptr inbounds i8, i8* %199, i64 %346
  %348 = bitcast i8* %347 to i32*
  %349 = load i32, i32* %348, align 4
  %350 = icmp eq i32 %349, %209
  br i1 %350, label %353, label %351

351:                                              ; preds = %342
  %352 = icmp ugt i32 %349, %209
  br i1 %352, label %359, label %356

353:                                              ; preds = %342
  %354 = getelementptr inbounds i8, i8* %347, i64 4
  %355 = tail call i32 @memcmp(i8* %354, i8* %220, i64 %221) #20
  br label %356

356:                                              ; preds = %351, %353
  %357 = phi i32 [ 1, %351 ], [ %355, %353 ]
  %358 = icmp slt i32 %357, 0
  br i1 %358, label %359, label %222

359:                                              ; preds = %351, %356
  %360 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %224, i64 0, i32 0
  store i32 %344, i32* %182, align 4
  store i32 %183, i32* %360, align 4
  %361 = add i32 %181, 1
  br label %362

362:                                              ; preds = %211, %213, %359
  %363 = phi %"struct.flatbuffers::Offset"* [ %224, %359 ], [ %9, %213 ], [ %9, %211 ]
  %364 = phi i32 [ %361, %359 ], [ %181, %213 ], [ %181, %211 ]
  %365 = ptrtoint %"struct.flatbuffers::Offset"* %16 to i64
  %366 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %16, i64 1
  %367 = icmp ult %"struct.flatbuffers::Offset"* %366, %363
  br i1 %367, label %368, label %444

368:                                              ; preds = %362, %438
  %369 = phi %"struct.flatbuffers::Offset"* [ %419, %438 ], [ %363, %362 ]
  %370 = phi %"struct.flatbuffers::Offset"* [ %443, %438 ], [ %366, %362 ]
  %371 = phi i32 [ %440, %438 ], [ %364, %362 ]
  %372 = phi %"struct.flatbuffers::Offset"* [ %442, %438 ], [ %172, %362 ]
  %373 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %372, i64 0, i32 0
  %374 = load i32, i32* %373, align 4
  %375 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %4, align 8
  %376 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %375, align 8
  %377 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %376, i64 0, i32 0, i32 6
  %378 = load i8*, i8** %377, align 8
  %379 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %376, i64 0, i32 0, i32 4
  %380 = load i64, i64* %379, align 8
  %381 = ptrtoint i8* %378 to i64
  %382 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %376, i64 0, i32 0, i32 5
  %383 = bitcast i8** %382 to i64*
  %384 = load i64, i64* %383, align 8
  %385 = sub i64 %380, %381
  %386 = add i64 %385, %384
  %387 = and i64 %386, 4294967295
  %388 = getelementptr inbounds i8, i8* %378, i64 %387
  %389 = zext i32 %374 to i64
  %390 = sub nsw i64 0, %389
  %391 = getelementptr inbounds i8, i8* %388, i64 %390
  %392 = bitcast i8* %391 to i32*
  %393 = load i32, i32* %392, align 4
  %394 = getelementptr inbounds i8, i8* %391, i64 4
  %395 = zext i32 %393 to i64
  br label %396

396:                                              ; preds = %415, %368
  %397 = phi %"struct.flatbuffers::Offset"* [ %370, %368 ], [ %416, %415 ]
  %398 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %397, i64 0, i32 0
  %399 = load i32, i32* %398, align 4
  %400 = zext i32 %399 to i64
  %401 = sub nsw i64 0, %400
  %402 = getelementptr inbounds i8, i8* %388, i64 %401
  %403 = bitcast i8* %402 to i32*
  %404 = load i32, i32* %403, align 4
  %405 = icmp eq i32 %404, %393
  br i1 %405, label %408, label %406

406:                                              ; preds = %396
  %407 = icmp ugt i32 %404, %393
  br i1 %407, label %415, label %412

408:                                              ; preds = %396
  %409 = getelementptr inbounds i8, i8* %402, i64 4
  %410 = tail call i32 @memcmp(i8* %409, i8* %394, i64 %395) #20
  %411 = icmp slt i32 %410, 0
  br i1 %411, label %415, label %412

412:                                              ; preds = %406, %408
  %413 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %397, i64 0, i32 0
  %414 = zext i32 %393 to i64
  br label %417

415:                                              ; preds = %406, %408
  %416 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %397, i64 1
  br label %396

417:                                              ; preds = %412, %433
  %418 = phi %"struct.flatbuffers::Offset"* [ %419, %433 ], [ %369, %412 ]
  %419 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %418, i64 -1
  %420 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %418, i64 -1, i32 0
  %421 = load i32, i32* %420, align 4
  %422 = zext i32 %421 to i64
  %423 = sub nsw i64 0, %422
  %424 = getelementptr inbounds i8, i8* %388, i64 %423
  %425 = bitcast i8* %424 to i32*
  %426 = load i32, i32* %425, align 4
  %427 = icmp eq i32 %426, %393
  br i1 %427, label %430, label %428

428:                                              ; preds = %417
  %429 = icmp ugt i32 %426, %393
  br i1 %429, label %436, label %433

430:                                              ; preds = %417
  %431 = getelementptr inbounds i8, i8* %424, i64 4
  %432 = tail call i32 @memcmp(i8* %431, i8* %394, i64 %414) #20
  br label %433

433:                                              ; preds = %428, %430
  %434 = phi i32 [ 1, %428 ], [ %432, %430 ]
  %435 = icmp slt i32 %434, 0
  br i1 %435, label %436, label %417

436:                                              ; preds = %428, %433
  %437 = icmp ugt %"struct.flatbuffers::Offset"* %397, %419
  br i1 %437, label %444, label %438

438:                                              ; preds = %436
  %439 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %419, i64 0, i32 0
  store i32 %421, i32* %413, align 4
  store i32 %399, i32* %439, align 4
  %440 = add i32 %371, 1
  %441 = icmp eq %"struct.flatbuffers::Offset"* %372, %397
  %442 = select i1 %441, %"struct.flatbuffers::Offset"* %419, %"struct.flatbuffers::Offset"* %372
  %443 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %397, i64 1
  br label %368

444:                                              ; preds = %436, %362
  %445 = phi %"struct.flatbuffers::Offset"* [ %366, %362 ], [ %397, %436 ]
  %446 = phi i32 [ %364, %362 ], [ %371, %436 ]
  %447 = phi %"struct.flatbuffers::Offset"* [ %172, %362 ], [ %372, %436 ]
  %448 = icmp eq %"struct.flatbuffers::Offset"* %445, %447
  br i1 %448, label %489, label %449

449:                                              ; preds = %444
  %450 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %447, i64 0, i32 0
  %451 = load i32, i32* %450, align 4
  %452 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %445, i64 0, i32 0
  %453 = load i32, i32* %452, align 4
  %454 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %4, align 8
  %455 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %454, align 8
  %456 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %455, i64 0, i32 0, i32 6
  %457 = load i8*, i8** %456, align 8
  %458 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %455, i64 0, i32 0, i32 4
  %459 = load i64, i64* %458, align 8
  %460 = ptrtoint i8* %457 to i64
  %461 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %455, i64 0, i32 0, i32 5
  %462 = bitcast i8** %461 to i64*
  %463 = load i64, i64* %462, align 8
  %464 = sub i64 %459, %460
  %465 = add i64 %464, %463
  %466 = and i64 %465, 4294967295
  %467 = getelementptr inbounds i8, i8* %457, i64 %466
  %468 = zext i32 %451 to i64
  %469 = sub nsw i64 0, %468
  %470 = getelementptr inbounds i8, i8* %467, i64 %469
  %471 = bitcast i8* %470 to i32*
  %472 = load i32, i32* %471, align 4
  %473 = zext i32 %453 to i64
  %474 = sub nsw i64 0, %473
  %475 = getelementptr inbounds i8, i8* %467, i64 %474
  %476 = bitcast i8* %475 to i32*
  %477 = load i32, i32* %476, align 4
  %478 = icmp eq i32 %472, %477
  br i1 %478, label %481, label %479

479:                                              ; preds = %449
  %480 = icmp ugt i32 %472, %477
  br i1 %480, label %487, label %489

481:                                              ; preds = %449
  %482 = zext i32 %472 to i64
  %483 = getelementptr inbounds i8, i8* %475, i64 4
  %484 = getelementptr inbounds i8, i8* %470, i64 4
  %485 = tail call i32 @memcmp(i8* %484, i8* %483, i64 %482) #20
  %486 = icmp slt i32 %485, 0
  br i1 %486, label %487, label %489

487:                                              ; preds = %479, %481
  store i32 %451, i32* %452, align 4
  store i32 %453, i32* %450, align 4
  %488 = add i32 %446, 1
  br label %489

489:                                              ; preds = %479, %444, %487, %481
  %490 = phi i32 [ %488, %487 ], [ %446, %481 ], [ %446, %444 ], [ %446, %479 ]
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %492, label %499

492:                                              ; preds = %489
  %493 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEbT0_SS_T_(%"struct.flatbuffers::Offset"* %16, %"struct.flatbuffers::Offset"* %445, %class.anon.152* dereferenceable(8) %2)
  %494 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %445, i64 1
  %495 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEbT0_SS_T_(%"struct.flatbuffers::Offset"* %494, %"struct.flatbuffers::Offset"* %6, %class.anon.152* dereferenceable(8) %2)
  br i1 %495, label %496, label %498

496:                                              ; preds = %492
  br i1 %493, label %510, label %497

497:                                              ; preds = %496, %508
  br label %5

498:                                              ; preds = %492
  br i1 %493, label %506, label %499

499:                                              ; preds = %498, %489
  %500 = ptrtoint %"struct.flatbuffers::Offset"* %445 to i64
  %501 = sub i64 %500, %365
  %502 = sub i64 %12, %500
  %503 = icmp slt i64 %501, %502
  br i1 %503, label %504, label %508

504:                                              ; preds = %499
  tail call fastcc void @_ZNSt3__16__sortIRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEvT0_SS_T_(%"struct.flatbuffers::Offset"* %16, %"struct.flatbuffers::Offset"* %445, %class.anon.152* dereferenceable(8) %2)
  %505 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %445, i64 1
  br label %506

506:                                              ; preds = %504, %498
  %507 = phi %"struct.flatbuffers::Offset"* [ %494, %498 ], [ %505, %504 ]
  br label %13

508:                                              ; preds = %499
  %509 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %445, i64 1
  tail call fastcc void @_ZNSt3__16__sortIRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEvT0_SS_T_(%"struct.flatbuffers::Offset"* %509, %"struct.flatbuffers::Offset"* %6, %class.anon.152* dereferenceable(8) %2)
  br label %497

510:                                              ; preds = %496, %270, %15, %15, %243, %267, %166, %50, %76, %52, %58, %59, %63, %68
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort3IRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEjT0_SS_SS_T_(%"struct.flatbuffers::Offset"* nocapture, %"struct.flatbuffers::Offset"* nocapture, %"struct.flatbuffers::Offset"* nocapture, %class.anon.152* nocapture readonly dereferenceable(8)) unnamed_addr #16 {
  %5 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %class.anon.152, %class.anon.152* %3, i64 0, i32 0
  %10 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %9, align 8
  %11 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %10, align 8
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %11, i64 0, i32 0, i32 6
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %11, i64 0, i32 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = ptrtoint i8* %13 to i64
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %11, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %15, %16
  %21 = add i64 %20, %19
  %22 = and i64 %21, 4294967295
  %23 = getelementptr inbounds i8, i8* %13, i64 %22
  %24 = zext i32 %6 to i64
  %25 = sub nsw i64 0, %24
  %26 = getelementptr inbounds i8, i8* %23, i64 %25
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %8 to i64
  %30 = sub nsw i64 0, %29
  %31 = getelementptr inbounds i8, i8* %23, i64 %30
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %28, %33
  br i1 %34, label %38, label %35

35:                                               ; preds = %4
  %36 = icmp ugt i32 %28, %33
  %37 = select i1 %36, i32 -1, i32 1
  br label %43

38:                                               ; preds = %4
  %39 = zext i32 %28 to i64
  %40 = getelementptr inbounds i8, i8* %31, i64 4
  %41 = getelementptr inbounds i8, i8* %26, i64 4
  %42 = tail call i32 @memcmp(i8* %41, i8* %40, i64 %39) #20
  br label %43

43:                                               ; preds = %35, %38
  %44 = phi i32 [ %37, %35 ], [ %42, %38 ]
  %45 = icmp slt i32 %44, 0
  %46 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %2, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = sub nsw i64 0, %48
  %50 = getelementptr inbounds i8, i8* %23, i64 %49
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %28
  br i1 %53, label %57, label %54

54:                                               ; preds = %43
  %55 = icmp ugt i32 %52, %28
  %56 = select i1 %55, i32 -1, i32 1
  br label %62

57:                                               ; preds = %43
  %58 = zext i32 %28 to i64
  %59 = getelementptr inbounds i8, i8* %26, i64 4
  %60 = getelementptr inbounds i8, i8* %50, i64 4
  %61 = tail call i32 @memcmp(i8* %60, i8* %59, i64 %58) #20
  br label %62

62:                                               ; preds = %54, %57
  %63 = phi i32 [ %56, %54 ], [ %61, %57 ]
  %64 = icmp slt i32 %63, 0
  br i1 %45, label %103, label %65

65:                                               ; preds = %62
  br i1 %64, label %66, label %139

66:                                               ; preds = %65
  store i32 %47, i32* %5, align 4
  store i32 %6, i32* %46, align 4
  %67 = load i32, i32* %5, align 4
  %68 = load i32, i32* %7, align 4
  %69 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %9, align 8
  %70 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %69, align 8
  %71 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %70, i64 0, i32 0, i32 6
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %70, i64 0, i32 0, i32 4
  %74 = load i64, i64* %73, align 8
  %75 = ptrtoint i8* %72 to i64
  %76 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %70, i64 0, i32 0, i32 5
  %77 = bitcast i8** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %74, %75
  %80 = add i64 %79, %78
  %81 = and i64 %80, 4294967295
  %82 = getelementptr inbounds i8, i8* %72, i64 %81
  %83 = zext i32 %67 to i64
  %84 = sub nsw i64 0, %83
  %85 = getelementptr inbounds i8, i8* %82, i64 %84
  %86 = bitcast i8* %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %68 to i64
  %89 = sub nsw i64 0, %88
  %90 = getelementptr inbounds i8, i8* %82, i64 %89
  %91 = bitcast i8* %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %87, %92
  br i1 %93, label %96, label %94

94:                                               ; preds = %66
  %95 = icmp ugt i32 %87, %92
  br i1 %95, label %102, label %139

96:                                               ; preds = %66
  %97 = zext i32 %87 to i64
  %98 = getelementptr inbounds i8, i8* %90, i64 4
  %99 = getelementptr inbounds i8, i8* %85, i64 4
  %100 = tail call i32 @memcmp(i8* %99, i8* %98, i64 %97) #20
  %101 = icmp slt i32 %100, 0
  br i1 %101, label %102, label %139

102:                                              ; preds = %94, %96
  store i32 %67, i32* %7, align 4
  store i32 %68, i32* %5, align 4
  br label %139

103:                                              ; preds = %62
  br i1 %64, label %104, label %105

104:                                              ; preds = %103
  store i32 %47, i32* %7, align 4
  store i32 %8, i32* %46, align 4
  br label %139

105:                                              ; preds = %103
  store i32 %6, i32* %7, align 4
  store i32 %8, i32* %5, align 4
  %106 = load i32, i32* %46, align 4
  %107 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %9, align 8
  %108 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %107, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %108, i64 0, i32 0, i32 6
  %110 = load i8*, i8** %109, align 8
  %111 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %108, i64 0, i32 0, i32 4
  %112 = load i64, i64* %111, align 8
  %113 = ptrtoint i8* %110 to i64
  %114 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %108, i64 0, i32 0, i32 5
  %115 = bitcast i8** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %112, %113
  %118 = add i64 %117, %116
  %119 = and i64 %118, 4294967295
  %120 = getelementptr inbounds i8, i8* %110, i64 %119
  %121 = zext i32 %106 to i64
  %122 = sub nsw i64 0, %121
  %123 = getelementptr inbounds i8, i8* %120, i64 %122
  %124 = bitcast i8* %123 to i32*
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds i8, i8* %120, i64 %30
  %127 = bitcast i8* %126 to i32*
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %125, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %105
  %131 = icmp ugt i32 %125, %128
  br i1 %131, label %138, label %139

132:                                              ; preds = %105
  %133 = zext i32 %125 to i64
  %134 = getelementptr inbounds i8, i8* %126, i64 4
  %135 = getelementptr inbounds i8, i8* %123, i64 4
  %136 = tail call i32 @memcmp(i8* %135, i8* %134, i64 %133) #20
  %137 = icmp slt i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %130, %132
  store i32 %106, i32* %5, align 4
  store i32 %8, i32* %46, align 4
  br label %139

139:                                              ; preds = %130, %94, %132, %138, %96, %102, %65, %104
  %140 = phi i32 [ 1, %104 ], [ 0, %65 ], [ 2, %102 ], [ 1, %96 ], [ 2, %138 ], [ 1, %132 ], [ 1, %94 ], [ 1, %130 ]
  ret i32 %140
}

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort4IRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEjT0_SS_SS_SS_T_(%"struct.flatbuffers::Offset"* nocapture, %"struct.flatbuffers::Offset"* nocapture, %"struct.flatbuffers::Offset"* nocapture, %"struct.flatbuffers::Offset"* nocapture, %class.anon.152* nocapture readonly dereferenceable(8)) unnamed_addr #16 {
  %6 = tail call fastcc i32 @_ZNSt3__17__sort3IRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEjT0_SS_SS_T_(%"struct.flatbuffers::Offset"* %0, %"struct.flatbuffers::Offset"* %1, %"struct.flatbuffers::Offset"* %2, %class.anon.152* dereferenceable(8) %4)
  %7 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %3, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %2, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %class.anon.152, %class.anon.152* %4, i64 0, i32 0
  %12 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %11, align 8
  %13 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %13, i64 0, i32 0, i32 6
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %13, i64 0, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = ptrtoint i8* %15 to i64
  %19 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %13, i64 0, i32 0, i32 5
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %17, %18
  %23 = add i64 %22, %21
  %24 = and i64 %23, 4294967295
  %25 = getelementptr inbounds i8, i8* %15, i64 %24
  %26 = zext i32 %8 to i64
  %27 = sub nsw i64 0, %26
  %28 = getelementptr inbounds i8, i8* %25, i64 %27
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %10 to i64
  %32 = sub nsw i64 0, %31
  %33 = getelementptr inbounds i8, i8* %25, i64 %32
  %34 = bitcast i8* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %30, %35
  br i1 %36, label %39, label %37

37:                                               ; preds = %5
  %38 = icmp ugt i32 %30, %35
  br i1 %38, label %45, label %123

39:                                               ; preds = %5
  %40 = zext i32 %30 to i64
  %41 = getelementptr inbounds i8, i8* %33, i64 4
  %42 = getelementptr inbounds i8, i8* %28, i64 4
  %43 = tail call i32 @memcmp(i8* %42, i8* %41, i64 %40) #20
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %123

45:                                               ; preds = %37, %39
  store i32 %8, i32* %9, align 4
  store i32 %10, i32* %7, align 4
  %46 = add i32 %6, 1
  %47 = load i32, i32* %9, align 4
  %48 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %11, align 8
  %51 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %50, align 8
  %52 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %51, i64 0, i32 0, i32 6
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %51, i64 0, i32 0, i32 4
  %55 = load i64, i64* %54, align 8
  %56 = ptrtoint i8* %53 to i64
  %57 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %51, i64 0, i32 0, i32 5
  %58 = bitcast i8** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %55, %56
  %61 = add i64 %60, %59
  %62 = and i64 %61, 4294967295
  %63 = getelementptr inbounds i8, i8* %53, i64 %62
  %64 = zext i32 %47 to i64
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds i8, i8* %63, i64 %65
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %49 to i64
  %70 = sub nsw i64 0, %69
  %71 = getelementptr inbounds i8, i8* %63, i64 %70
  %72 = bitcast i8* %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %68, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %45
  %76 = icmp ugt i32 %68, %73
  br i1 %76, label %83, label %123

77:                                               ; preds = %45
  %78 = zext i32 %68 to i64
  %79 = getelementptr inbounds i8, i8* %71, i64 4
  %80 = getelementptr inbounds i8, i8* %66, i64 4
  %81 = tail call i32 @memcmp(i8* %80, i8* %79, i64 %78) #20
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %83, label %123

83:                                               ; preds = %75, %77
  store i32 %47, i32* %48, align 4
  store i32 %49, i32* %9, align 4
  %84 = add i32 %6, 2
  %85 = load i32, i32* %48, align 4
  %86 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %0, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %11, align 8
  %89 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %88, align 8
  %90 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %89, i64 0, i32 0, i32 6
  %91 = load i8*, i8** %90, align 8
  %92 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %89, i64 0, i32 0, i32 4
  %93 = load i64, i64* %92, align 8
  %94 = ptrtoint i8* %91 to i64
  %95 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %89, i64 0, i32 0, i32 5
  %96 = bitcast i8** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %93, %94
  %99 = add i64 %98, %97
  %100 = and i64 %99, 4294967295
  %101 = getelementptr inbounds i8, i8* %91, i64 %100
  %102 = zext i32 %85 to i64
  %103 = sub nsw i64 0, %102
  %104 = getelementptr inbounds i8, i8* %101, i64 %103
  %105 = bitcast i8* %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = zext i32 %87 to i64
  %108 = sub nsw i64 0, %107
  %109 = getelementptr inbounds i8, i8* %101, i64 %108
  %110 = bitcast i8* %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %106, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %83
  %114 = icmp ugt i32 %106, %111
  br i1 %114, label %121, label %123

115:                                              ; preds = %83
  %116 = zext i32 %106 to i64
  %117 = getelementptr inbounds i8, i8* %109, i64 4
  %118 = getelementptr inbounds i8, i8* %104, i64 4
  %119 = tail call i32 @memcmp(i8* %118, i8* %117, i64 %116) #20
  %120 = icmp slt i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %113, %115
  store i32 %85, i32* %86, align 4
  store i32 %87, i32* %48, align 4
  %122 = add i32 %6, 3
  br label %123

123:                                              ; preds = %113, %75, %37, %77, %121, %115, %39
  %124 = phi i32 [ %122, %121 ], [ %84, %115 ], [ %46, %77 ], [ %6, %39 ], [ %6, %37 ], [ %46, %75 ], [ %84, %113 ]
  ret i32 %124
}

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort5IRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEjT0_SS_SS_SS_SS_T_(%"struct.flatbuffers::Offset"* nocapture, %"struct.flatbuffers::Offset"* nocapture, %"struct.flatbuffers::Offset"* nocapture, %"struct.flatbuffers::Offset"* nocapture, %"struct.flatbuffers::Offset"* nocapture, %class.anon.152* nocapture readonly dereferenceable(8)) unnamed_addr #16 {
  %7 = tail call fastcc i32 @_ZNSt3__17__sort4IRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEjT0_SS_SS_SS_T_(%"struct.flatbuffers::Offset"* %0, %"struct.flatbuffers::Offset"* %1, %"struct.flatbuffers::Offset"* %2, %"struct.flatbuffers::Offset"* %3, %class.anon.152* dereferenceable(8) %5)
  %8 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %4, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %class.anon.152, %class.anon.152* %5, i64 0, i32 0
  %13 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %12, align 8
  %14 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %13, align 8
  %15 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 0, i32 6
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = ptrtoint i8* %16 to i64
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 0, i32 5
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %18, %19
  %24 = add i64 %23, %22
  %25 = and i64 %24, 4294967295
  %26 = getelementptr inbounds i8, i8* %16, i64 %25
  %27 = zext i32 %9 to i64
  %28 = sub nsw i64 0, %27
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %11 to i64
  %33 = sub nsw i64 0, %32
  %34 = getelementptr inbounds i8, i8* %26, i64 %33
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %31, %36
  br i1 %37, label %40, label %38

38:                                               ; preds = %6
  %39 = icmp ugt i32 %31, %36
  br i1 %39, label %46, label %162

40:                                               ; preds = %6
  %41 = zext i32 %31 to i64
  %42 = getelementptr inbounds i8, i8* %34, i64 4
  %43 = getelementptr inbounds i8, i8* %29, i64 4
  %44 = tail call i32 @memcmp(i8* %43, i8* %42, i64 %41) #20
  %45 = icmp slt i32 %44, 0
  br i1 %45, label %46, label %162

46:                                               ; preds = %38, %40
  store i32 %9, i32* %10, align 4
  store i32 %11, i32* %8, align 4
  %47 = add i32 %7, 1
  %48 = load i32, i32* %10, align 4
  %49 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %2, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %12, align 8
  %52 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %51, align 8
  %53 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %52, i64 0, i32 0, i32 6
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %52, i64 0, i32 0, i32 4
  %56 = load i64, i64* %55, align 8
  %57 = ptrtoint i8* %54 to i64
  %58 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %52, i64 0, i32 0, i32 5
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %56, %57
  %62 = add i64 %61, %60
  %63 = and i64 %62, 4294967295
  %64 = getelementptr inbounds i8, i8* %54, i64 %63
  %65 = zext i32 %48 to i64
  %66 = sub nsw i64 0, %65
  %67 = getelementptr inbounds i8, i8* %64, i64 %66
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %50 to i64
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i8, i8* %64, i64 %71
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %69, %74
  br i1 %75, label %78, label %76

76:                                               ; preds = %46
  %77 = icmp ugt i32 %69, %74
  br i1 %77, label %84, label %162

78:                                               ; preds = %46
  %79 = zext i32 %69 to i64
  %80 = getelementptr inbounds i8, i8* %72, i64 4
  %81 = getelementptr inbounds i8, i8* %67, i64 4
  %82 = tail call i32 @memcmp(i8* %81, i8* %80, i64 %79) #20
  %83 = icmp slt i32 %82, 0
  br i1 %83, label %84, label %162

84:                                               ; preds = %76, %78
  store i32 %48, i32* %49, align 4
  store i32 %50, i32* %10, align 4
  %85 = add i32 %7, 2
  %86 = load i32, i32* %49, align 4
  %87 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %1, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %12, align 8
  %90 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %89, align 8
  %91 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %90, i64 0, i32 0, i32 6
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %90, i64 0, i32 0, i32 4
  %94 = load i64, i64* %93, align 8
  %95 = ptrtoint i8* %92 to i64
  %96 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %90, i64 0, i32 0, i32 5
  %97 = bitcast i8** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %94, %95
  %100 = add i64 %99, %98
  %101 = and i64 %100, 4294967295
  %102 = getelementptr inbounds i8, i8* %92, i64 %101
  %103 = zext i32 %86 to i64
  %104 = sub nsw i64 0, %103
  %105 = getelementptr inbounds i8, i8* %102, i64 %104
  %106 = bitcast i8* %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %88 to i64
  %109 = sub nsw i64 0, %108
  %110 = getelementptr inbounds i8, i8* %102, i64 %109
  %111 = bitcast i8* %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %107, %112
  br i1 %113, label %116, label %114

114:                                              ; preds = %84
  %115 = icmp ugt i32 %107, %112
  br i1 %115, label %122, label %162

116:                                              ; preds = %84
  %117 = zext i32 %107 to i64
  %118 = getelementptr inbounds i8, i8* %110, i64 4
  %119 = getelementptr inbounds i8, i8* %105, i64 4
  %120 = tail call i32 @memcmp(i8* %119, i8* %118, i64 %117) #20
  %121 = icmp slt i32 %120, 0
  br i1 %121, label %122, label %162

122:                                              ; preds = %114, %116
  store i32 %86, i32* %87, align 4
  store i32 %88, i32* %49, align 4
  %123 = add i32 %7, 3
  %124 = load i32, i32* %87, align 4
  %125 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %0, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %12, align 8
  %128 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %127, align 8
  %129 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %128, i64 0, i32 0, i32 6
  %130 = load i8*, i8** %129, align 8
  %131 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %128, i64 0, i32 0, i32 4
  %132 = load i64, i64* %131, align 8
  %133 = ptrtoint i8* %130 to i64
  %134 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %128, i64 0, i32 0, i32 5
  %135 = bitcast i8** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = sub i64 %132, %133
  %138 = add i64 %137, %136
  %139 = and i64 %138, 4294967295
  %140 = getelementptr inbounds i8, i8* %130, i64 %139
  %141 = zext i32 %124 to i64
  %142 = sub nsw i64 0, %141
  %143 = getelementptr inbounds i8, i8* %140, i64 %142
  %144 = bitcast i8* %143 to i32*
  %145 = load i32, i32* %144, align 4
  %146 = zext i32 %126 to i64
  %147 = sub nsw i64 0, %146
  %148 = getelementptr inbounds i8, i8* %140, i64 %147
  %149 = bitcast i8* %148 to i32*
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %145, %150
  br i1 %151, label %154, label %152

152:                                              ; preds = %122
  %153 = icmp ugt i32 %145, %150
  br i1 %153, label %160, label %162

154:                                              ; preds = %122
  %155 = zext i32 %145 to i64
  %156 = getelementptr inbounds i8, i8* %148, i64 4
  %157 = getelementptr inbounds i8, i8* %143, i64 4
  %158 = tail call i32 @memcmp(i8* %157, i8* %156, i64 %155) #20
  %159 = icmp slt i32 %158, 0
  br i1 %159, label %160, label %162

160:                                              ; preds = %152, %154
  store i32 %124, i32* %125, align 4
  store i32 %126, i32* %87, align 4
  %161 = add i32 %7, 4
  br label %162

162:                                              ; preds = %152, %114, %76, %38, %78, %154, %160, %116, %40
  %163 = phi i32 [ %161, %160 ], [ %123, %154 ], [ %85, %116 ], [ %47, %78 ], [ %7, %40 ], [ %7, %38 ], [ %47, %76 ], [ %85, %114 ], [ %123, %152 ]
  ret i32 %163
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEbT0_SS_T_(%"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"*, %class.anon.152* nocapture readonly dereferenceable(8)) unnamed_addr #2 {
  %4 = ptrtoint %"struct.flatbuffers::Offset"* %1 to i64
  %5 = ptrtoint %"struct.flatbuffers::Offset"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  switch i64 %7, label %63 [
    i64 0, label %166
    i64 1, label %166
    i64 2, label %8
    i64 3, label %48
    i64 4, label %52
    i64 5, label %57
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %1, i64 -1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.anon.152, %class.anon.152* %2, i64 0, i32 0
  %14 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %13, align 8
  %15 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %14, align 8
  %16 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %15, i64 0, i32 0, i32 6
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %15, i64 0, i32 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = ptrtoint i8* %17 to i64
  %21 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %15, i64 0, i32 0, i32 5
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %19, %20
  %25 = add i64 %24, %23
  %26 = and i64 %25, 4294967295
  %27 = getelementptr inbounds i8, i8* %17, i64 %26
  %28 = zext i32 %10 to i64
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i8, i8* %27, i64 %29
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %12 to i64
  %34 = sub nsw i64 0, %33
  %35 = getelementptr inbounds i8, i8* %27, i64 %34
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %32, %37
  br i1 %38, label %41, label %39

39:                                               ; preds = %8
  %40 = icmp ugt i32 %32, %37
  br i1 %40, label %47, label %166

41:                                               ; preds = %8
  %42 = zext i32 %32 to i64
  %43 = getelementptr inbounds i8, i8* %35, i64 4
  %44 = getelementptr inbounds i8, i8* %30, i64 4
  %45 = tail call i32 @memcmp(i8* %44, i8* %43, i64 %42) #20
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %47, label %166

47:                                               ; preds = %39, %41
  store i32 %10, i32* %11, align 4
  store i32 %12, i32* %9, align 4
  br label %166

48:                                               ; preds = %3
  %49 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %0, i64 1
  %50 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %1, i64 -1
  %51 = tail call fastcc i32 @_ZNSt3__17__sort3IRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEjT0_SS_SS_T_(%"struct.flatbuffers::Offset"* %0, %"struct.flatbuffers::Offset"* %49, %"struct.flatbuffers::Offset"* %50, %class.anon.152* dereferenceable(8) %2)
  br label %166

52:                                               ; preds = %3
  %53 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %0, i64 1
  %54 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %0, i64 2
  %55 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %1, i64 -1
  %56 = tail call fastcc i32 @_ZNSt3__17__sort4IRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEjT0_SS_SS_SS_T_(%"struct.flatbuffers::Offset"* %0, %"struct.flatbuffers::Offset"* %53, %"struct.flatbuffers::Offset"* %54, %"struct.flatbuffers::Offset"* %55, %class.anon.152* dereferenceable(8) %2)
  br label %166

57:                                               ; preds = %3
  %58 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %0, i64 1
  %59 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %0, i64 2
  %60 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %0, i64 3
  %61 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %1, i64 -1
  %62 = tail call fastcc i32 @_ZNSt3__17__sort5IRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEjT0_SS_SS_SS_SS_T_(%"struct.flatbuffers::Offset"* %0, %"struct.flatbuffers::Offset"* %58, %"struct.flatbuffers::Offset"* %59, %"struct.flatbuffers::Offset"* %60, %"struct.flatbuffers::Offset"* %61, %class.anon.152* dereferenceable(8) %2)
  br label %166

63:                                               ; preds = %3
  %64 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %0, i64 2
  %65 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %0, i64 1
  %66 = tail call fastcc i32 @_ZNSt3__17__sort3IRZNK17url_pattern_index12_GLOBAL__N_126UrlRuleFlatBufferConverter19SerializeDomainListENS_6vectorIN11flatbuffers6OffsetINS5_6StringEEENS_9allocatorIS8_EEEEPNS5_17FlatBufferBuilderEPNS_3mapISB_NS6_INS5_6VectorIS8_EEEENS1_19OffsetVectorCompareENS9_INS_4pairIKSB_SH_EEEEEEEUlS8_S8_E_PS8_EEjT0_SS_SS_T_(%"struct.flatbuffers::Offset"* %0, %"struct.flatbuffers::Offset"* %65, %"struct.flatbuffers::Offset"* %64, %class.anon.152* dereferenceable(8) %2)
  %67 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %0, i64 3
  %68 = icmp eq %"struct.flatbuffers::Offset"* %67, %1
  br i1 %68, label %166, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %class.anon.152, %class.anon.152* %2, i64 0, i32 0
  br label %71

71:                                               ; preds = %69, %159
  %72 = phi %"struct.flatbuffers::Offset"* [ %64, %69 ], [ %74, %159 ]
  %73 = phi i32 [ 0, %69 ], [ %160, %159 ]
  %74 = phi %"struct.flatbuffers::Offset"* [ %67, %69 ], [ %161, %159 ]
  %75 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %74, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %72, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %70, align 8
  %80 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %79, align 8
  %81 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %80, i64 0, i32 0, i32 6
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %80, i64 0, i32 0, i32 4
  %84 = load i64, i64* %83, align 8
  %85 = ptrtoint i8* %82 to i64
  %86 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %80, i64 0, i32 0, i32 5
  %87 = bitcast i8** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = sub i64 %84, %85
  %90 = add i64 %89, %88
  %91 = and i64 %90, 4294967295
  %92 = getelementptr inbounds i8, i8* %82, i64 %91
  %93 = zext i32 %76 to i64
  %94 = sub nsw i64 0, %93
  %95 = getelementptr inbounds i8, i8* %92, i64 %94
  %96 = bitcast i8* %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %78 to i64
  %99 = sub nsw i64 0, %98
  %100 = getelementptr inbounds i8, i8* %92, i64 %99
  %101 = bitcast i8* %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %97, %102
  br i1 %103, label %106, label %104

104:                                              ; preds = %71
  %105 = icmp ugt i32 %97, %102
  br i1 %105, label %112, label %159

106:                                              ; preds = %71
  %107 = zext i32 %97 to i64
  %108 = getelementptr inbounds i8, i8* %100, i64 4
  %109 = getelementptr inbounds i8, i8* %95, i64 4
  %110 = tail call i32 @memcmp(i8* %109, i8* %108, i64 %107) #20
  %111 = icmp slt i32 %110, 0
  br i1 %111, label %112, label %159

112:                                              ; preds = %104, %106
  %113 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %74, i64 0, i32 0
  store i32 %78, i32* %113, align 4
  %114 = icmp eq %"struct.flatbuffers::Offset"* %72, %0
  br i1 %114, label %154, label %115

115:                                              ; preds = %112, %151
  %116 = phi %"struct.flatbuffers::Offset"* [ %117, %151 ], [ %72, %112 ]
  %117 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %116, i64 -1
  %118 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %116, i64 -1, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = load %"class.flatbuffers::FlatBufferBuilder"**, %"class.flatbuffers::FlatBufferBuilder"*** %70, align 8
  %121 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %120, align 8
  %122 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %121, i64 0, i32 0, i32 6
  %123 = load i8*, i8** %122, align 8
  %124 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %121, i64 0, i32 0, i32 4
  %125 = load i64, i64* %124, align 8
  %126 = ptrtoint i8* %123 to i64
  %127 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %121, i64 0, i32 0, i32 5
  %128 = bitcast i8** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %125, %126
  %131 = add i64 %130, %129
  %132 = and i64 %131, 4294967295
  %133 = getelementptr inbounds i8, i8* %123, i64 %132
  %134 = getelementptr inbounds i8, i8* %133, i64 %94
  %135 = bitcast i8* %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = zext i32 %119 to i64
  %138 = sub nsw i64 0, %137
  %139 = getelementptr inbounds i8, i8* %133, i64 %138
  %140 = bitcast i8* %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %136, %141
  br i1 %142, label %145, label %143

143:                                              ; preds = %115
  %144 = icmp ugt i32 %136, %141
  br i1 %144, label %151, label %154

145:                                              ; preds = %115
  %146 = zext i32 %136 to i64
  %147 = getelementptr inbounds i8, i8* %139, i64 4
  %148 = getelementptr inbounds i8, i8* %134, i64 4
  %149 = tail call i32 @memcmp(i8* %148, i8* %147, i64 %146) #20
  %150 = icmp slt i32 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %143, %145
  %152 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %116, i64 0, i32 0
  store i32 %119, i32* %152, align 4
  %153 = icmp eq %"struct.flatbuffers::Offset"* %117, %0
  br i1 %153, label %154, label %115

154:                                              ; preds = %145, %151, %143, %112
  %155 = phi %"struct.flatbuffers::Offset"* [ %0, %112 ], [ %116, %145 ], [ %0, %151 ], [ %116, %143 ]
  %156 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %155, i64 0, i32 0
  store i32 %76, i32* %156, align 4
  %157 = add i32 %73, 1
  %158 = icmp eq i32 %157, 8
  br i1 %158, label %163, label %159

159:                                              ; preds = %154, %104, %106
  %160 = phi i32 [ %157, %154 ], [ %73, %106 ], [ %73, %104 ]
  %161 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %74, i64 1
  %162 = icmp eq %"struct.flatbuffers::Offset"* %161, %1
  br i1 %162, label %166, label %71

163:                                              ; preds = %154
  %164 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %74, i64 1
  %165 = icmp eq %"struct.flatbuffers::Offset"* %164, %1
  br label %166

166:                                              ; preds = %159, %163, %63, %39, %41, %47, %3, %3, %57, %52, %48
  %167 = phi i1 [ true, %57 ], [ true, %52 ], [ true, %48 ], [ true, %3 ], [ true, %3 ], [ true, %47 ], [ true, %41 ], [ true, %39 ], [ true, %63 ], [ %165, %163 ], [ true, %159 ]
  ret i1 %167
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11flatbuffers17FlatBufferBuilder11StartVectorEmm(%"class.flatbuffers::FlatBufferBuilder"*, i64, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 3
  store i8 1, i8* %4, align 2
  %5 = mul i64 %2, %1
  %6 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, 4
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  store i64 4, i64* %6, align 8
  br label %10

10:                                               ; preds = %9, %3
  %11 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %12, %15
  %20 = add i64 %19, %18
  %21 = add i64 %5, %20
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %15, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %10
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #20
  %31 = load i8*, i8** %13, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %13, align 8
  br label %39

34:                                               ; preds = %10
  %35 = inttoptr i64 %15 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %13, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %13, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %13, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %13, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %13, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %13, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !103

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %6, align 8
  %79 = icmp ult i64 %78, %2
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  store i64 %2, i64* %6, align 8
  br label %81

81:                                               ; preds = %80, %77
  %82 = load i64, i64* %11, align 8
  %83 = load i64, i64* %14, align 8
  %84 = load i64, i64* %17, align 8
  %85 = sub i64 %82, %83
  %86 = add i64 %85, %84
  %87 = and i64 %86, 4294967295
  %88 = add i64 %5, %87
  %89 = sub i64 0, %88
  %90 = add i64 %2, -1
  %91 = and i64 %90, %89
  %92 = load i64, i64* %25, align 8
  %93 = sub i64 %83, %92
  %94 = icmp ult i64 %93, %91
  br i1 %94, label %95, label %100

95:                                               ; preds = %81
  %96 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %96, i64 %91) #20
  %97 = load i8*, i8** %13, align 8
  %98 = sub i64 0, %91
  %99 = getelementptr inbounds i8, i8* %97, i64 %98
  store i8* %99, i8** %13, align 8
  br label %105

100:                                              ; preds = %81
  %101 = inttoptr i64 %83 to i8*
  %102 = sub i64 0, %91
  %103 = getelementptr inbounds i8, i8* %101, i64 %102
  store i8* %103, i8** %13, align 8
  %104 = icmp eq i64 %91, 0
  br i1 %104, label %143, label %105

105:                                              ; preds = %100, %95
  %106 = phi i8* [ %99, %95 ], [ %103, %100 ]
  store i8 0, i8* %106, align 1
  %107 = icmp eq i64 %91, 1
  br i1 %107, label %143, label %108

108:                                              ; preds = %105
  %109 = add i64 %91, -1
  %110 = add i64 %91, -2
  %111 = and i64 %109, 3
  %112 = icmp ult i64 %110, 3
  br i1 %112, label %132, label %113

113:                                              ; preds = %108
  %114 = sub i64 %109, %111
  br label %115

115:                                              ; preds = %115, %113
  %116 = phi i64 [ 1, %113 ], [ %129, %115 ]
  %117 = phi i64 [ %114, %113 ], [ %130, %115 ]
  %118 = load i8*, i8** %13, align 8
  %119 = getelementptr inbounds i8, i8* %118, i64 %116
  store i8 0, i8* %119, align 1
  %120 = add nuw nsw i64 %116, 1
  %121 = load i8*, i8** %13, align 8
  %122 = getelementptr inbounds i8, i8* %121, i64 %120
  store i8 0, i8* %122, align 1
  %123 = add nuw nsw i64 %116, 2
  %124 = load i8*, i8** %13, align 8
  %125 = getelementptr inbounds i8, i8* %124, i64 %123
  store i8 0, i8* %125, align 1
  %126 = add nuw i64 %116, 3
  %127 = load i8*, i8** %13, align 8
  %128 = getelementptr inbounds i8, i8* %127, i64 %126
  store i8 0, i8* %128, align 1
  %129 = add nuw i64 %116, 4
  %130 = add i64 %117, -4
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %115

132:                                              ; preds = %115, %108
  %133 = phi i64 [ 1, %108 ], [ %129, %115 ]
  %134 = icmp eq i64 %111, 0
  br i1 %134, label %143, label %135

135:                                              ; preds = %132, %135
  %136 = phi i64 [ %140, %135 ], [ %133, %132 ]
  %137 = phi i64 [ %141, %135 ], [ %111, %132 ]
  %138 = load i8*, i8** %13, align 8
  %139 = getelementptr inbounds i8, i8* %138, i64 %136
  store i8 0, i8* %139, align 1
  %140 = add nuw i64 %136, 1
  %141 = add i64 %137, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %135, !llvm.loop !104

143:                                              ; preds = %132, %135, %100, %105
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementINS_6StringEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i64 4, i64* %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %9, %12
  %17 = add i64 %16, %15
  %18 = sub i64 0, %17
  %19 = and i64 %18, 3
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %12, %22
  %24 = icmp ult i64 %23, %19
  br i1 %24, label %25, label %30

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %26, i64 %19) #20
  %27 = load i8*, i8** %10, align 8
  %28 = sub nsw i64 0, %19
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8* %29, i8** %10, align 8
  br label %35

30:                                               ; preds = %7
  %31 = inttoptr i64 %12 to i8*
  %32 = sub nsw i64 0, %19
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %10, align 8
  %34 = icmp eq i64 %19, 0
  br i1 %34, label %73, label %35

35:                                               ; preds = %30, %25
  %36 = phi i8* [ %29, %25 ], [ %33, %30 ]
  store i8 0, i8* %36, align 1
  %37 = icmp eq i64 %19, 1
  br i1 %37, label %73, label %38

38:                                               ; preds = %35
  %39 = add nsw i64 %19, -1
  %40 = add nsw i64 %19, -2
  %41 = and i64 %39, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %62, label %43

43:                                               ; preds = %38
  %44 = sub nsw i64 %39, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 1, %43 ], [ %59, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %60, %45 ]
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %46
  store i8 0, i8* %49, align 1
  %50 = add nuw nsw i64 %46, 1
  %51 = load i8*, i8** %10, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %46, 2
  %54 = load i8*, i8** %10, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw i64 %46, 3
  %57 = load i8*, i8** %10, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %46, 4
  %60 = add i64 %47, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %45

62:                                               ; preds = %45, %38
  %63 = phi i64 [ 1, %38 ], [ %59, %45 ]
  %64 = icmp eq i64 %41, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %70, %65 ], [ %63, %62 ]
  %67 = phi i64 [ %71, %65 ], [ %41, %62 ]
  %68 = load i8*, i8** %10, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %66
  store i8 0, i8* %69, align 1
  %70 = add nuw i64 %66, 1
  %71 = add i64 %67, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %65, !llvm.loop !105

73:                                               ; preds = %62, %65, %30, %35
  %74 = load i64, i64* %8, align 8
  %75 = load i64, i64* %11, align 8
  %76 = load i64, i64* %14, align 8
  %77 = sub i64 %74, %75
  %78 = add i64 %77, %76
  %79 = trunc i64 %78 to i32
  %80 = sub i32 4, %1
  %81 = add i32 %80, %79
  %82 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %81)
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN11flatbuffers6OffsetINS3_6StringEEENS_9allocatorIS6_EEEENS4_INS3_6VectorIS6_EEEEEENS_19__map_value_compareIS9_SD_N17url_pattern_index19OffsetVectorCompareELb1EEENS7_ISD_EEE25__emplace_unique_key_argsIS9_JRKNS_21piecewise_construct_tENS_5tupleIJRKS9_EEENSO_IJEEEEEENS_4pairINS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.25"*, %"class.std::__1::vector"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.160"* dereferenceable(1)) local_unnamed_addr #2 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node.157"**
  %8 = load %"class.std::__1::__tree_node.157"*, %"class.std::__1::__tree_node.157"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node.157"* %8, null
  br i1 %9, label %76, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %13 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %15 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %14, align 8
  %16 = icmp eq %"struct.flatbuffers::Offset"* %15, %13
  br label %17

17:                                               ; preds = %72, %10
  %18 = phi %"class.std::__1::__tree_node.157"* [ %75, %72 ], [ %8, %10 ]
  %19 = phi %"class.std::__1::__tree_node_base"** [ %74, %72 ], [ %11, %10 ]
  %20 = getelementptr inbounds %"class.std::__1::__tree_node.157", %"class.std::__1::__tree_node.157"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::__tree_node.157", %"class.std::__1::__tree_node.157"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %23 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %22, align 8
  %24 = icmp eq %"struct.flatbuffers::Offset"* %21, %23
  br i1 %24, label %47, label %25

25:                                               ; preds = %17, %37
  %26 = phi %"struct.flatbuffers::Offset"* [ %38, %37 ], [ %15, %17 ]
  %27 = phi %"struct.flatbuffers::Offset"* [ %39, %37 ], [ %21, %17 ]
  %28 = icmp eq %"struct.flatbuffers::Offset"* %26, %13
  br i1 %28, label %41, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %26, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %27, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp ult i32 %31, %33
  br i1 %34, label %41, label %35

35:                                               ; preds = %29
  %36 = icmp ult i32 %33, %31
  br i1 %36, label %47, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %26, i64 1
  %39 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %27, i64 1
  %40 = icmp eq %"struct.flatbuffers::Offset"* %39, %23
  br i1 %40, label %47, label %25

41:                                               ; preds = %29, %25
  %42 = getelementptr inbounds %"class.std::__1::__tree_node.157", %"class.std::__1::__tree_node.157"* %18, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, null
  br i1 %44, label %45, label %72

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::__tree_node.157", %"class.std::__1::__tree_node.157"* %18, i64 0, i32 0, i32 0
  br label %78

47:                                               ; preds = %37, %35, %17
  br i1 %16, label %70, label %48

48:                                               ; preds = %47, %60
  %49 = phi %"struct.flatbuffers::Offset"* [ %61, %60 ], [ %21, %47 ]
  %50 = phi %"struct.flatbuffers::Offset"* [ %62, %60 ], [ %15, %47 ]
  %51 = icmp eq %"struct.flatbuffers::Offset"* %49, %23
  br i1 %51, label %64, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %49, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %50, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp ult i32 %54, %56
  br i1 %57, label %64, label %58

58:                                               ; preds = %52
  %59 = icmp ult i32 %56, %54
  br i1 %59, label %70, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %49, i64 1
  %62 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %50, i64 1
  %63 = icmp eq %"struct.flatbuffers::Offset"* %62, %13
  br i1 %63, label %70, label %48

64:                                               ; preds = %52, %48
  %65 = getelementptr inbounds %"class.std::__1::__tree_node.157", %"class.std::__1::__tree_node.157"* %18, i64 0, i32 0, i32 1
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.std::__1::__tree_node.157", %"class.std::__1::__tree_node.157"* %18, i64 0, i32 0, i32 0
  br label %78

70:                                               ; preds = %47, %60, %58
  %71 = getelementptr inbounds %"class.std::__1::__tree_node.157", %"class.std::__1::__tree_node.157"* %18, i64 0, i32 0, i32 0
  br label %78

72:                                               ; preds = %64, %41
  %73 = phi %"class.std::__1::__tree_node_base"* [ %43, %41 ], [ %66, %64 ]
  %74 = phi %"class.std::__1::__tree_node_base"** [ %42, %41 ], [ %65, %64 ]
  %75 = bitcast %"class.std::__1::__tree_node_base"* %73 to %"class.std::__1::__tree_node.157"*
  br label %17

76:                                               ; preds = %5
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %78

78:                                               ; preds = %45, %68, %70, %76
  %79 = phi %"class.std::__1::__tree_end_node"* [ %6, %76 ], [ %71, %70 ], [ %69, %68 ], [ %46, %45 ]
  %80 = phi %"class.std::__1::__tree_node_base"** [ %77, %76 ], [ %19, %70 ], [ %65, %68 ], [ %42, %45 ]
  %81 = bitcast %"class.std::__1::__tree_node_base"** %80 to %"class.std::__1::__tree_node.157"**
  %82 = load %"class.std::__1::__tree_node.157"*, %"class.std::__1::__tree_node.157"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node.157"* %82, null
  br i1 %83, label %84, label %149

84:                                               ; preds = %78
  %85 = tail call i8* @_Znwm(i64 64) #21, !noalias !106
  %86 = getelementptr inbounds i8, i8* %85, i64 32
  %87 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %87, align 8, !noalias !106
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 24, i1 false) #20, !noalias !106
  %89 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %88, i64 0, i32 0, i32 1
  %90 = bitcast %"struct.flatbuffers::Offset"** %89 to i64*
  %91 = load i64, i64* %90, align 8, !noalias !106
  %92 = bitcast %"class.std::__1::vector"* %88 to i64*
  %93 = load i64, i64* %92, align 8, !noalias !106
  %94 = sub i64 %91, %93
  %95 = ashr exact i64 %94, 2
  %96 = icmp eq i64 %94, 0
  br i1 %96, label %125, label %97

97:                                               ; preds = %84
  %98 = icmp ugt i64 %95, 4611686018427387903
  br i1 %98, label %99, label %101

99:                                               ; preds = %97
  %100 = bitcast i8* %86 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %100) #22, !noalias !106
  unreachable

101:                                              ; preds = %97
  %102 = tail call i8* @_Znwm(i64 %94) #21, !noalias !106
  %103 = bitcast i8* %102 to %"struct.flatbuffers::Offset"*
  %104 = getelementptr inbounds i8, i8* %85, i64 40
  %105 = bitcast i8* %104 to i8**
  store i8* %102, i8** %105, align 8, !noalias !106
  %106 = bitcast i8* %86 to i8**
  store i8* %102, i8** %106, align 8, !noalias !106
  %107 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %103, i64 %95
  %108 = getelementptr inbounds i8, i8* %85, i64 48
  %109 = bitcast i8* %108 to %"struct.flatbuffers::Offset"**
  store %"struct.flatbuffers::Offset"* %107, %"struct.flatbuffers::Offset"** %109, align 8, !noalias !106
  %110 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %88, i64 0, i32 0, i32 0
  %111 = load %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"** %110, align 8, !noalias !106
  %112 = load i64, i64* %90, align 8, !noalias !106
  %113 = bitcast i8* %104 to i64*
  %114 = ptrtoint i8* %102 to i64
  %115 = ptrtoint %"struct.flatbuffers::Offset"* %111 to i64
  %116 = sub i64 %112, %115
  %117 = icmp sgt i64 %116, 0
  br i1 %117, label %118, label %123

118:                                              ; preds = %101
  %119 = lshr exact i64 %116, 2
  %120 = bitcast %"struct.flatbuffers::Offset"* %111 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %102, i8* align 4 %120, i64 %116, i1 false) #20, !noalias !106
  %121 = getelementptr inbounds %"struct.flatbuffers::Offset", %"struct.flatbuffers::Offset"* %103, i64 %119
  %122 = ptrtoint %"struct.flatbuffers::Offset"* %121 to i64
  br label %123

123:                                              ; preds = %118, %101
  %124 = phi i64 [ %122, %118 ], [ %114, %101 ]
  store i64 %124, i64* %113, align 8, !noalias !106
  br label %125

125:                                              ; preds = %84, %123
  %126 = getelementptr inbounds i8, i8* %85, i64 56
  %127 = bitcast i8* %126 to i32*
  store i32 0, i32* %127, align 4, !noalias !106
  %128 = bitcast i8* %85 to %"class.std::__1::__tree_node.157"*
  %129 = bitcast i8* %85 to %"class.std::__1::__tree_node_base"*
  %130 = getelementptr inbounds i8, i8* %85, i64 16
  %131 = bitcast i8* %130 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 16, i1 false) #20
  store %"class.std::__1::__tree_end_node"* %79, %"class.std::__1::__tree_end_node"** %131, align 8
  %132 = bitcast %"class.std::__1::__tree_node_base"** %80 to i8**
  store i8* %85, i8** %132, align 8
  %133 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 0
  %134 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %133, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %136, null
  br i1 %137, label %142, label %138

138:                                              ; preds = %125
  %139 = ptrtoint %"class.std::__1::__tree_node_base"* %136 to i64
  %140 = bitcast %"class.std::__1::__tree.25"* %0 to i64*
  store i64 %139, i64* %140, align 8
  %141 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  br label %142

142:                                              ; preds = %138, %125
  %143 = phi %"class.std::__1::__tree_node_base"* [ %129, %125 ], [ %141, %138 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %145, %"class.std::__1::__tree_node_base"* %143) #20
  %146 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 2, i32 0, i32 0
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, 1
  store i64 %148, i64* %146, align 8
  br label %149

149:                                              ; preds = %142, %78
  %150 = phi i8 [ 1, %142 ], [ 0, %78 ]
  %151 = phi %"class.std::__1::__tree_node.157"* [ %128, %142 ], [ %82, %78 ]
  %152 = getelementptr inbounds %"class.std::__1::__tree_node.157", %"class.std::__1::__tree_node.157"* %151, i64 0, i32 0, i32 0
  %153 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %152, 0
  %154 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %153, i8 %150, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %154
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17url_pattern_index4flat14UrlRuleBuilder23add_embedder_conditionsEN11flatbuffers6OffsetINS2_6VectorIhEEEE(%"struct.url_pattern_index::flat::UrlRuleBuilder"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRuleBuilder", %"struct.url_pattern_index::flat::UrlRuleBuilder"* %0, i64 0, i32 0
  %4 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i64 4, i64* %7, align 8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %16, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #20
  %31 = load i8*, i8** %14, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %14, align 8
  br label %39

34:                                               ; preds = %11
  %35 = inttoptr i64 %16 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %14, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %14, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %14, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !109

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %18, align 8
  %81 = sub i64 %78, %79
  %82 = add i64 %81, %80
  %83 = trunc i64 %82 to i32
  %84 = sub i32 4, %1
  %85 = add i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 6
  %89 = load i8, i8* %88, align 8, !range !3
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %77
  %92 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %4, i32 %85) #20
  %93 = load i64, i64* %15, align 8
  %94 = load i64, i64* %25, align 8
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %95, 8
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i64*
  br label %103

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %100, i64 8) #20
  %101 = bitcast i8** %24 to i64**
  %102 = load i64*, i64** %101, align 8
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i64* [ %98, %97 ], [ %102, %99 ]
  %105 = zext i32 %92 to i64
  %106 = or i64 %105, -6149102220961906688
  store i64 %106, i64* %104, align 4
  %107 = load i8*, i8** %24, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  store i8* %108, i8** %24, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 28
  %115 = select i1 %114, i16 %113, i16 28
  store i16 %115, i16* %112, align 4
  br label %116

116:                                              ; preds = %103, %87, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17url_pattern_index4flat14UrlRuleBuilder15add_url_patternEN11flatbuffers6OffsetINS2_6StringEEE(%"struct.url_pattern_index::flat::UrlRuleBuilder"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRuleBuilder", %"struct.url_pattern_index::flat::UrlRuleBuilder"* %0, i64 0, i32 0
  %4 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i64 4, i64* %7, align 8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %16, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #20
  %31 = load i8*, i8** %14, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %14, align 8
  br label %39

34:                                               ; preds = %11
  %35 = inttoptr i64 %16 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %14, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %14, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %14, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !110

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %18, align 8
  %81 = sub i64 %78, %79
  %82 = add i64 %81, %80
  %83 = trunc i64 %82 to i32
  %84 = sub i32 4, %1
  %85 = add i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 6
  %89 = load i8, i8* %88, align 8, !range !3
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %77
  %92 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %4, i32 %85) #20
  %93 = load i64, i64* %15, align 8
  %94 = load i64, i64* %25, align 8
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %95, 8
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i64*
  br label %103

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %100, i64 8) #20
  %101 = bitcast i8** %24 to i64**
  %102 = load i64*, i64** %101, align 8
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i64* [ %98, %97 ], [ %102, %99 ]
  %105 = zext i32 %92 to i64
  %106 = or i64 %105, -6149102246731710464
  store i64 %106, i64* %104, align 4
  %107 = load i8*, i8** %24, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  store i8* %108, i8** %24, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 22
  %115 = select i1 %114, i16 %113, i16 22
  store i16 %115, i16* %112, align 4
  br label %116

116:                                              ; preds = %103, %87, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17url_pattern_index4flat14UrlRuleBuilder20add_domains_excludedEN11flatbuffers6OffsetINS2_6VectorINS3_INS2_6StringEEEEEEE(%"struct.url_pattern_index::flat::UrlRuleBuilder"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRuleBuilder", %"struct.url_pattern_index::flat::UrlRuleBuilder"* %0, i64 0, i32 0
  %4 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i64 4, i64* %7, align 8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %16, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #20
  %31 = load i8*, i8** %14, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %14, align 8
  br label %39

34:                                               ; preds = %11
  %35 = inttoptr i64 %16 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %14, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %14, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %14, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !111

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %18, align 8
  %81 = sub i64 %78, %79
  %82 = add i64 %81, %80
  %83 = trunc i64 %82 to i32
  %84 = sub i32 4, %1
  %85 = add i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 6
  %89 = load i8, i8* %88, align 8, !range !3
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %77
  %92 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %4, i32 %85) #20
  %93 = load i64, i64* %15, align 8
  %94 = load i64, i64* %25, align 8
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %95, 8
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i64*
  br label %103

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %100, i64 8) #20
  %101 = bitcast i8** %24 to i64**
  %102 = load i64*, i64** %101, align 8
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i64* [ %98, %97 ], [ %102, %99 ]
  %105 = zext i32 %92 to i64
  %106 = or i64 %105, -6149102255321645056
  store i64 %106, i64* %104, align 4
  %107 = load i8*, i8** %24, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  store i8* %108, i8** %24, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 20
  %115 = select i1 %114, i16 %113, i16 20
  store i16 %115, i16* %112, align 4
  br label %116

116:                                              ; preds = %103, %87, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17url_pattern_index4flat14UrlRuleBuilder20add_domains_includedEN11flatbuffers6OffsetINS2_6VectorINS3_INS2_6StringEEEEEEE(%"struct.url_pattern_index::flat::UrlRuleBuilder"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRuleBuilder", %"struct.url_pattern_index::flat::UrlRuleBuilder"* %0, i64 0, i32 0
  %4 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i64 4, i64* %7, align 8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %16, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #20
  %31 = load i8*, i8** %14, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %14, align 8
  br label %39

34:                                               ; preds = %11
  %35 = inttoptr i64 %16 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %14, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %14, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %14, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !112

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %18, align 8
  %81 = sub i64 %78, %79
  %82 = add i64 %81, %80
  %83 = trunc i64 %82 to i32
  %84 = sub i32 4, %1
  %85 = add i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 6
  %89 = load i8, i8* %88, align 8, !range !3
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %77
  %92 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %4, i32 %85) #20
  %93 = load i64, i64* %15, align 8
  %94 = load i64, i64* %25, align 8
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %95, 8
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i64*
  br label %103

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %100, i64 8) #20
  %101 = bitcast i8** %24 to i64**
  %102 = load i64*, i64** %101, align 8
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i64* [ %98, %97 ], [ %102, %99 ]
  %105 = zext i32 %92 to i64
  %106 = or i64 %105, -6149102263911579648
  store i64 %106, i64* %104, align 4
  %107 = load i8*, i8** %24, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  store i8* %108, i8** %24, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 18
  %115 = select i1 %114, i16 %113, i16 18
  store i16 %115, i16* %112, align 4
  br label %116

116:                                              ; preds = %103, %87, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11flatbuffers17FlatBufferBuilder10AddElementImEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"*, i16 zeroext, i64, i64) local_unnamed_addr #2 comdat align 2 {
  %5 = icmp eq i64 %2, %3
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 6
  %8 = load i8, i8* %7, align 8, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %124, label %10

10:                                               ; preds = %6, %4
  %11 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %12, 8
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i64 8, i64* %11, align 8
  br label %15

15:                                               ; preds = %14, %10
  %16 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %17, %20
  %25 = add i64 %24, %23
  %26 = sub i64 0, %25
  %27 = and i64 %26, 7
  %28 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %20, %30
  %32 = icmp ult i64 %31, %27
  br i1 %32, label %33, label %38

33:                                               ; preds = %15
  %34 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %34, i64 %27) #20
  %35 = load i8*, i8** %18, align 8
  %36 = sub nsw i64 0, %27
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %18, align 8
  br label %43

38:                                               ; preds = %15
  %39 = inttoptr i64 %20 to i8*
  %40 = sub nsw i64 0, %27
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  store i8* %41, i8** %18, align 8
  %42 = icmp eq i64 %27, 0
  br i1 %42, label %81, label %43

43:                                               ; preds = %38, %33
  %44 = phi i8* [ %37, %33 ], [ %41, %38 ]
  store i8 0, i8* %44, align 1
  %45 = icmp eq i64 %27, 1
  br i1 %45, label %81, label %46

46:                                               ; preds = %43
  %47 = add nsw i64 %27, -1
  %48 = add nsw i64 %27, -2
  %49 = and i64 %47, 3
  %50 = icmp ult i64 %48, 3
  br i1 %50, label %70, label %51

51:                                               ; preds = %46
  %52 = sub nsw i64 %47, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 1, %51 ], [ %67, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %68, %53 ]
  %56 = load i8*, i8** %18, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %54
  store i8 0, i8* %57, align 1
  %58 = add nuw nsw i64 %54, 1
  %59 = load i8*, i8** %18, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 %58
  store i8 0, i8* %60, align 1
  %61 = add nuw nsw i64 %54, 2
  %62 = load i8*, i8** %18, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 %61
  store i8 0, i8* %63, align 1
  %64 = add nuw i64 %54, 3
  %65 = load i8*, i8** %18, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  store i8 0, i8* %66, align 1
  %67 = add nuw i64 %54, 4
  %68 = add i64 %55, -4
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %53

70:                                               ; preds = %53, %46
  %71 = phi i64 [ 1, %46 ], [ %67, %53 ]
  %72 = icmp eq i64 %49, 0
  br i1 %72, label %81, label %73

73:                                               ; preds = %70, %73
  %74 = phi i64 [ %78, %73 ], [ %71, %70 ]
  %75 = phi i64 [ %79, %73 ], [ %49, %70 ]
  %76 = load i8*, i8** %18, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 %74
  store i8 0, i8* %77, align 1
  %78 = add nuw i64 %74, 1
  %79 = add i64 %75, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %73, !llvm.loop !113

81:                                               ; preds = %70, %73, %38, %43
  %82 = load i64, i64* %19, align 8
  %83 = load i64, i64* %29, align 8
  %84 = sub i64 %82, %83
  %85 = icmp ult i64 %84, 8
  %86 = inttoptr i64 %82 to i8*
  br i1 %85, label %87, label %90

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %88, i64 8) #20
  %89 = load i8*, i8** %18, align 8
  br label %90

90:                                               ; preds = %81, %87
  %91 = phi i8* [ %86, %81 ], [ %89, %87 ]
  %92 = getelementptr inbounds i8, i8* %91, i64 -8
  store i8* %92, i8** %18, align 8
  %93 = bitcast i8* %92 to i64*
  store i64 %2, i64* %93, align 8
  %94 = load i64, i64* %16, align 8
  %95 = load i64, i64* %19, align 8
  %96 = load i64, i64* %22, align 8
  %97 = sub i64 %94, %95
  %98 = add i64 %97, %96
  %99 = load i64, i64* %29, align 8
  %100 = sub i64 %95, %99
  %101 = icmp ult i64 %100, 8
  br i1 %101, label %104, label %102

102:                                              ; preds = %90
  %103 = inttoptr i64 %99 to i64*
  br label %108

104:                                              ; preds = %90
  %105 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %105, i64 8) #20
  %106 = bitcast i8** %28 to i64**
  %107 = load i64*, i64** %106, align 8
  br label %108

108:                                              ; preds = %102, %104
  %109 = phi i64* [ %103, %102 ], [ %107, %104 ]
  %110 = zext i16 %1 to i64
  %111 = shl nuw nsw i64 %110, 32
  %112 = and i64 %98, 4294967295
  %113 = or i64 %111, %112
  %114 = or i64 %113, -6149102341220990976
  store i64 %114, i64* %109, align 4
  %115 = load i8*, i8** %28, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 8
  store i8* %116, i8** %28, align 8
  %117 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, 1
  store i32 %119, i32* %117, align 8
  %120 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 2
  %121 = load i16, i16* %120, align 2
  %122 = icmp ult i16 %121, %1
  %123 = select i1 %122, i16 %1, i16 %121
  store i16 %123, i16* %120, align 4
  br label %124

124:                                              ; preds = %6, %108
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11flatbuffers17FlatBufferBuilder10AddElementItEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"*, i16 zeroext, i16 zeroext, i16 zeroext) local_unnamed_addr #2 comdat align 2 {
  %5 = icmp eq i16 %2, %3
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 6
  %8 = load i8, i8* %7, align 8, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %90, label %10

10:                                               ; preds = %6, %4
  %11 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %12, 2
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i64 2, i64* %11, align 8
  br label %15

15:                                               ; preds = %14, %10
  %16 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %17, %20
  %25 = add i64 %24, %23
  %26 = and i64 %25, 1
  %27 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %20, %29
  %31 = icmp ult i64 %30, %26
  br i1 %31, label %32, label %37

32:                                               ; preds = %15
  %33 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %33, i64 %26) #20
  %34 = load i8*, i8** %18, align 8
  %35 = sub nsw i64 0, %26
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  store i8* %36, i8** %18, align 8
  br label %43

37:                                               ; preds = %15
  %38 = inttoptr i64 %20 to i8*
  %39 = sub nsw i64 0, %26
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  store i8* %40, i8** %18, align 8
  %41 = icmp eq i64 %26, 0
  %42 = ptrtoint i8* %40 to i64
  br i1 %41, label %47, label %43

43:                                               ; preds = %37, %32
  %44 = phi i8* [ %36, %32 ], [ %40, %37 ]
  store i8 0, i8* %44, align 1
  %45 = load i64, i64* %19, align 8
  %46 = load i64, i64* %28, align 8
  br label %47

47:                                               ; preds = %43, %37
  %48 = phi i64 [ %46, %43 ], [ %29, %37 ]
  %49 = phi i64 [ %45, %43 ], [ %42, %37 ]
  %50 = sub i64 %49, %48
  %51 = icmp ult i64 %50, 2
  %52 = inttoptr i64 %49 to i8*
  br i1 %51, label %53, label %56

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %54, i64 2) #20
  %55 = load i8*, i8** %18, align 8
  br label %56

56:                                               ; preds = %47, %53
  %57 = phi i8* [ %52, %47 ], [ %55, %53 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 -2
  store i8* %58, i8** %18, align 8
  %59 = bitcast i8* %58 to i16*
  store i16 %2, i16* %59, align 2
  %60 = load i64, i64* %16, align 8
  %61 = load i64, i64* %19, align 8
  %62 = load i64, i64* %22, align 8
  %63 = sub i64 %60, %61
  %64 = add i64 %63, %62
  %65 = load i64, i64* %28, align 8
  %66 = sub i64 %61, %65
  %67 = icmp ult i64 %66, 8
  br i1 %67, label %70, label %68

68:                                               ; preds = %56
  %69 = inttoptr i64 %65 to i64*
  br label %74

70:                                               ; preds = %56
  %71 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %71, i64 8) #20
  %72 = bitcast i8** %27 to i64**
  %73 = load i64*, i64** %72, align 8
  br label %74

74:                                               ; preds = %68, %70
  %75 = phi i64* [ %69, %68 ], [ %73, %70 ]
  %76 = zext i16 %1 to i64
  %77 = shl nuw nsw i64 %76, 32
  %78 = and i64 %64, 4294967295
  %79 = or i64 %77, %78
  %80 = or i64 %79, -6149102341220990976
  store i64 %80, i64* %75, align 4
  %81 = load i8*, i8** %27, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 8
  store i8* %82, i8** %27, align 8
  %83 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, 1
  store i32 %85, i32* %83, align 8
  %86 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 2
  %87 = load i16, i16* %86, align 2
  %88 = icmp ult i16 %87, %1
  %89 = select i1 %88, i16 %1, i16 %87
  store i16 %89, i16* %86, align 4
  br label %90

90:                                               ; preds = %6, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"*, i16 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #2 comdat align 2 {
  %5 = icmp eq i8 %2, %3
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 6
  %8 = load i8, i8* %7, align 8, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %63, label %10

10:                                               ; preds = %6, %4
  %11 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i64 1, i64* %11, align 8
  br label %15

15:                                               ; preds = %14, %10
  %16 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %18 = bitcast i8** %17 to i64*
  %19 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %18, align 8
  %22 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %21, %24
  %26 = inttoptr i64 %21 to i8*
  br i1 %25, label %27, label %30

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %28, i64 1) #20
  %29 = load i8*, i8** %17, align 8
  br label %30

30:                                               ; preds = %15, %27
  %31 = phi i8* [ %26, %15 ], [ %29, %27 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 -1
  store i8* %32, i8** %17, align 8
  store i8 %2, i8* %32, align 1
  %33 = load i64, i64* %16, align 8
  %34 = load i64, i64* %18, align 8
  %35 = load i64, i64* %20, align 8
  %36 = sub i64 %33, %34
  %37 = add i64 %36, %35
  %38 = load i64, i64* %23, align 8
  %39 = sub i64 %34, %38
  %40 = icmp ult i64 %39, 8
  br i1 %40, label %43, label %41

41:                                               ; preds = %30
  %42 = inttoptr i64 %38 to i64*
  br label %47

43:                                               ; preds = %30
  %44 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %44, i64 8) #20
  %45 = bitcast i8** %22 to i64**
  %46 = load i64*, i64** %45, align 8
  br label %47

47:                                               ; preds = %41, %43
  %48 = phi i64* [ %42, %41 ], [ %46, %43 ]
  %49 = zext i16 %1 to i64
  %50 = shl nuw nsw i64 %49, 32
  %51 = and i64 %37, 4294967295
  %52 = or i64 %50, %51
  %53 = or i64 %52, -6149102341220990976
  store i64 %53, i64* %48, align 4
  %54 = load i8*, i8** %22, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 8
  store i8* %55, i8** %22, align 8
  %56 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  %59 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 2
  %60 = load i16, i16* %59, align 2
  %61 = icmp ult i16 %60, %1
  %62 = select i1 %61, i16 %1, i16 %60
  store i16 %62, i16* %59, align 4
  br label %63

63:                                               ; preds = %6, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11flatbuffers17FlatBufferBuilder8EndTableEj(%"class.flatbuffers::FlatBufferBuilder"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i64 4, i64* %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %9, %12
  %17 = add i64 %16, %15
  %18 = sub i64 0, %17
  %19 = and i64 %18, 3
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %12, %22
  %24 = icmp ult i64 %23, %19
  br i1 %24, label %25, label %30

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %26, i64 %19) #20
  %27 = load i8*, i8** %10, align 8
  %28 = sub nsw i64 0, %19
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8* %29, i8** %10, align 8
  br label %35

30:                                               ; preds = %7
  %31 = inttoptr i64 %12 to i8*
  %32 = sub nsw i64 0, %19
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %10, align 8
  %34 = icmp eq i64 %19, 0
  br i1 %34, label %73, label %35

35:                                               ; preds = %30, %25
  %36 = phi i8* [ %29, %25 ], [ %33, %30 ]
  store i8 0, i8* %36, align 1
  %37 = icmp eq i64 %19, 1
  br i1 %37, label %73, label %38

38:                                               ; preds = %35
  %39 = add nsw i64 %19, -1
  %40 = add nsw i64 %19, -2
  %41 = and i64 %39, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %62, label %43

43:                                               ; preds = %38
  %44 = sub nsw i64 %39, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 1, %43 ], [ %59, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %60, %45 ]
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %46
  store i8 0, i8* %49, align 1
  %50 = add nuw nsw i64 %46, 1
  %51 = load i8*, i8** %10, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %46, 2
  %54 = load i8*, i8** %10, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw i64 %46, 3
  %57 = load i8*, i8** %10, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %46, 4
  %60 = add i64 %47, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %45

62:                                               ; preds = %45, %38
  %63 = phi i64 [ 1, %38 ], [ %59, %45 ]
  %64 = icmp eq i64 %41, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %70, %65 ], [ %63, %62 ]
  %67 = phi i64 [ %71, %65 ], [ %41, %62 ]
  %68 = load i8*, i8** %10, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %66
  store i8 0, i8* %69, align 1
  %70 = add nuw i64 %66, 1
  %71 = add i64 %67, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %65, !llvm.loop !114

73:                                               ; preds = %62, %65, %30, %35
  %74 = load i64, i64* %11, align 8
  %75 = load i64, i64* %21, align 8
  %76 = sub i64 %74, %75
  %77 = icmp ult i64 %76, 4
  %78 = inttoptr i64 %74 to i8*
  br i1 %77, label %79, label %82

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %80, i64 4) #20
  %81 = load i8*, i8** %10, align 8
  br label %82

82:                                               ; preds = %73, %79
  %83 = phi i8* [ %78, %73 ], [ %81, %79 ]
  %84 = getelementptr inbounds i8, i8* %83, i64 -4
  store i8* %84, i8** %10, align 8
  %85 = bitcast i8* %84 to i32*
  store i32 0, i32* %85, align 4
  %86 = load i64, i64* %8, align 8
  %87 = load i64, i64* %11, align 8
  %88 = load i64, i64* %14, align 8
  %89 = sub i64 %86, %87
  %90 = add i64 %89, %88
  %91 = trunc i64 %90 to i32
  %92 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 2
  %93 = load i16, i16* %92, align 4
  %94 = add i16 %93, 2
  %95 = icmp ugt i16 %94, 4
  %96 = select i1 %95, i16 %94, i16 4
  store i16 %96, i16* %92, align 4
  %97 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  %98 = zext i16 %96 to i64
  %99 = load i64, i64* %21, align 8
  %100 = sub i64 %87, %99
  %101 = icmp ult i64 %100, %98
  %102 = inttoptr i64 %87 to i8*
  br i1 %101, label %103, label %105

103:                                              ; preds = %82
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %97, i64 %98) #20
  %104 = load i8*, i8** %10, align 8
  br label %105

105:                                              ; preds = %82, %103
  %106 = phi i8* [ %102, %82 ], [ %104, %103 ]
  %107 = sub nsw i64 0, %98
  %108 = getelementptr inbounds i8, i8* %106, i64 %107
  store i8* %108, i8** %10, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %108, i8 0, i64 %98, i1 false) #20
  %109 = sub i32 %91, %1
  %110 = load i8*, i8** %10, align 8
  %111 = getelementptr inbounds i8, i8* %110, i64 2
  %112 = trunc i32 %109 to i16
  %113 = bitcast i8* %111 to i16*
  store i16 %112, i16* %113, align 2
  %114 = bitcast i8** %10 to i16**
  %115 = load i16*, i16** %114, align 8
  %116 = load i16, i16* %92, align 4
  store i16 %116, i16* %115, align 2
  %117 = load i8*, i8** %20, align 8
  %118 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 1
  %119 = load i32, i32* %118, align 8
  %120 = zext i32 %119 to i64
  %121 = shl nuw nsw i64 %120, 3
  %122 = sub nsw i64 0, %121
  %123 = icmp eq i32 %119, 0
  br i1 %123, label %131, label %124

124:                                              ; preds = %105
  %125 = getelementptr inbounds i8, i8* %117, i64 %122
  br label %151

126:                                              ; preds = %151
  %127 = load i32, i32* %118, align 8
  %128 = zext i32 %127 to i64
  %129 = shl nuw nsw i64 %128, 3
  %130 = sub nsw i64 0, %129
  br label %131

131:                                              ; preds = %105, %126
  %132 = phi i64 [ %130, %126 ], [ %122, %105 ]
  %133 = phi i8* [ %165, %126 ], [ %117, %105 ]
  %134 = getelementptr inbounds i8, i8* %133, i64 %132
  store i8* %134, i8** %20, align 8
  store i32 0, i32* %118, align 8
  store i16 0, i16* %92, align 4
  %135 = load i8*, i8** %10, align 8
  %136 = bitcast i8* %135 to i16*
  %137 = load i16, i16* %136, align 2
  %138 = load i64, i64* %8, align 8
  %139 = ptrtoint i8* %135 to i64
  %140 = load i64, i64* %14, align 8
  %141 = sub i64 %138, %139
  %142 = add i64 %141, %140
  %143 = trunc i64 %142 to i32
  %144 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 7
  %145 = load i8, i8* %144, align 1, !range !3
  %146 = icmp ne i8 %145, 0
  %147 = inttoptr i64 %140 to i8*
  %148 = ptrtoint i8* %134 to i64
  %149 = icmp ugt i8* %134, %147
  %150 = and i1 %146, %149
  br i1 %150, label %167, label %191

151:                                              ; preds = %124, %151
  %152 = phi i8* [ %164, %151 ], [ %125, %124 ]
  %153 = bitcast i8* %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = sub i32 %91, %154
  %156 = trunc i32 %155 to i16
  %157 = load i8*, i8** %10, align 8
  %158 = getelementptr inbounds i8, i8* %152, i64 4
  %159 = bitcast i8* %158 to i16*
  %160 = load i16, i16* %159, align 4
  %161 = zext i16 %160 to i64
  %162 = getelementptr inbounds i8, i8* %157, i64 %161
  %163 = bitcast i8* %162 to i16*
  store i16 %156, i16* %163, align 2
  %164 = getelementptr inbounds i8, i8* %152, i64 8
  %165 = load i8*, i8** %20, align 8
  %166 = icmp ult i8* %164, %165
  br i1 %166, label %151, label %126

167:                                              ; preds = %131
  %168 = getelementptr inbounds i8, i8* %147, i64 %138
  %169 = zext i16 %137 to i64
  br label %170

170:                                              ; preds = %167, %188
  %171 = phi i8* [ %147, %167 ], [ %189, %188 ]
  %172 = bitcast i8* %171 to i32*
  %173 = load i32, i32* %172, align 4
  %174 = zext i32 %173 to i64
  %175 = sub nsw i64 0, %174
  %176 = getelementptr inbounds i8, i8* %168, i64 %175
  %177 = bitcast i8* %176 to i16*
  %178 = load i16, i16* %177, align 2
  %179 = icmp eq i16 %137, %178
  br i1 %179, label %180, label %188

180:                                              ; preds = %170
  %181 = tail call i32 @bcmp(i8* %176, i8* %135, i64 %169)
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %188

183:                                              ; preds = %180
  %184 = sub i64 %142, %90
  %185 = and i64 %184, 4294967295
  %186 = getelementptr inbounds i8, i8* %135, i64 %185
  store i8* %186, i8** %10, align 8
  %187 = ptrtoint i8* %186 to i64
  br label %191

188:                                              ; preds = %180, %170
  %189 = getelementptr inbounds i8, i8* %171, i64 4
  %190 = icmp ult i8* %189, %134
  br i1 %190, label %170, label %191

191:                                              ; preds = %188, %131, %183
  %192 = phi i64 [ %139, %131 ], [ %187, %183 ], [ %139, %188 ]
  %193 = phi i32 [ %143, %131 ], [ %173, %183 ], [ %143, %188 ]
  %194 = add i64 %140, %138
  %195 = sub i64 %194, %192
  %196 = trunc i64 %195 to i32
  %197 = icmp eq i32 %193, %196
  br i1 %197, label %198, label %212

198:                                              ; preds = %191
  %199 = sub i64 %192, %148
  %200 = icmp ult i64 %199, 4
  br i1 %200, label %203, label %201

201:                                              ; preds = %198
  %202 = bitcast i8* %134 to i32*
  br label %206

203:                                              ; preds = %198
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %97, i64 4) #20
  %204 = bitcast i8** %20 to i32**
  %205 = load i32*, i32** %204, align 8
  br label %206

206:                                              ; preds = %201, %203
  %207 = phi i32* [ %202, %201 ], [ %205, %203 ]
  store i32 %193, i32* %207, align 4
  %208 = load i8*, i8** %20, align 8
  %209 = getelementptr inbounds i8, i8* %208, i64 4
  store i8* %209, i8** %20, align 8
  %210 = load i8*, i8** %13, align 8
  %211 = load i64, i64* %8, align 8
  br label %212

212:                                              ; preds = %206, %191
  %213 = phi i64 [ %211, %206 ], [ %138, %191 ]
  %214 = phi i8* [ %210, %206 ], [ %147, %191 ]
  %215 = and i64 %90, 4294967295
  %216 = getelementptr inbounds i8, i8* %214, i64 %213
  %217 = sub nsw i64 0, %215
  %218 = getelementptr inbounds i8, i8* %216, i64 %217
  %219 = sub nsw i32 %193, %91
  %220 = bitcast i8* %218 to i32*
  store i32 %219, i32* %220, align 4
  %221 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 3
  store i8 0, i8* %221, align 2
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17url_pattern_index4flat19NGramToRulesBuilder13add_rule_listEN11flatbuffers6OffsetINS2_6VectorINS3_INS0_7UrlRuleEEEEEEE(%"struct.url_pattern_index::flat::NGramToRulesBuilder"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.url_pattern_index::flat::NGramToRulesBuilder", %"struct.url_pattern_index::flat::NGramToRulesBuilder"* %0, i64 0, i32 0
  %4 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i64 4, i64* %7, align 8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %16, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #20
  %31 = load i8*, i8** %14, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %14, align 8
  br label %39

34:                                               ; preds = %11
  %35 = inttoptr i64 %16 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %14, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %14, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %14, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !115

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %18, align 8
  %81 = sub i64 %78, %79
  %82 = add i64 %81, %80
  %83 = trunc i64 %82 to i32
  %84 = sub i32 4, %1
  %85 = add i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 6
  %89 = load i8, i8* %88, align 8, !range !3
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %77
  %92 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %4, i32 %85) #20
  %93 = load i64, i64* %15, align 8
  %94 = load i64, i64* %25, align 8
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %95, 8
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i64*
  br label %103

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %100, i64 8) #20
  %101 = bitcast i8** %24 to i64**
  %102 = load i64*, i64** %101, align 8
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i64* [ %98, %97 ], [ %102, %99 ]
  %105 = zext i32 %92 to i64
  %106 = or i64 %105, -6149102315451187200
  store i64 %106, i64* %104, align 4
  %107 = load i8*, i8** %24, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  store i8* %108, i8** %24, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 6
  %115 = select i1 %114, i16 %113, i16 6
  store i16 %115, i16* %112, align 4
  br label %116

116:                                              ; preds = %103, %87, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17url_pattern_index4flat22UrlPatternIndexBuilder18add_fallback_rulesEN11flatbuffers6OffsetINS2_6VectorINS3_INS0_7UrlRuleEEEEEEE(%"struct.url_pattern_index::flat::UrlPatternIndexBuilder"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndexBuilder", %"struct.url_pattern_index::flat::UrlPatternIndexBuilder"* %0, i64 0, i32 0
  %4 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i64 4, i64* %7, align 8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %16, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #20
  %31 = load i8*, i8** %14, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %14, align 8
  br label %39

34:                                               ; preds = %11
  %35 = inttoptr i64 %16 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %14, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %14, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %14, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !116

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %18, align 8
  %81 = sub i64 %78, %79
  %82 = add i64 %81, %80
  %83 = trunc i64 %82 to i32
  %84 = sub i32 4, %1
  %85 = add i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 6
  %89 = load i8, i8* %88, align 8, !range !3
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %77
  %92 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %4, i32 %85) #20
  %93 = load i64, i64* %15, align 8
  %94 = load i64, i64* %25, align 8
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %95, 8
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i64*
  br label %103

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %100, i64 8) #20
  %101 = bitcast i8** %24 to i64**
  %102 = load i64*, i64** %101, align 8
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i64* [ %98, %97 ], [ %102, %99 ]
  %105 = zext i32 %92 to i64
  %106 = or i64 %105, -6149102298271318016
  store i64 %106, i64* %104, align 4
  %107 = load i8*, i8** %24, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  store i8* %108, i8** %24, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 10
  %115 = select i1 %114, i16 %113, i16 10
  store i16 %115, i16* %112, align 4
  br label %116

116:                                              ; preds = %103, %87, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17url_pattern_index4flat22UrlPatternIndexBuilder26add_ngram_index_empty_slotEN11flatbuffers6OffsetINS0_12NGramToRulesEEE(%"struct.url_pattern_index::flat::UrlPatternIndexBuilder"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndexBuilder", %"struct.url_pattern_index::flat::UrlPatternIndexBuilder"* %0, i64 0, i32 0
  %4 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i64 4, i64* %7, align 8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %16, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #20
  %31 = load i8*, i8** %14, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %14, align 8
  br label %39

34:                                               ; preds = %11
  %35 = inttoptr i64 %16 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %14, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %14, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %14, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !117

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %18, align 8
  %81 = sub i64 %78, %79
  %82 = add i64 %81, %80
  %83 = trunc i64 %82 to i32
  %84 = sub i32 4, %1
  %85 = add i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 6
  %89 = load i8, i8* %88, align 8, !range !3
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %77
  %92 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %4, i32 %85) #20
  %93 = load i64, i64* %15, align 8
  %94 = load i64, i64* %25, align 8
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %95, 8
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i64*
  br label %103

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %100, i64 8) #20
  %101 = bitcast i8** %24 to i64**
  %102 = load i64*, i64** %101, align 8
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i64* [ %98, %97 ], [ %102, %99 ]
  %105 = zext i32 %92 to i64
  %106 = or i64 %105, -6149102306861252608
  store i64 %106, i64* %104, align 4
  %107 = load i8*, i8** %24, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  store i8* %108, i8** %24, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 8
  %115 = select i1 %114, i16 %113, i16 8
  store i16 %115, i16* %112, align 4
  br label %116

116:                                              ; preds = %103, %87, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17url_pattern_index4flat22UrlPatternIndexBuilder15add_ngram_indexEN11flatbuffers6OffsetINS2_6VectorINS3_INS0_12NGramToRulesEEEEEEE(%"struct.url_pattern_index::flat::UrlPatternIndexBuilder"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndexBuilder", %"struct.url_pattern_index::flat::UrlPatternIndexBuilder"* %0, i64 0, i32 0
  %4 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i64 4, i64* %7, align 8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %16, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #20
  %31 = load i8*, i8** %14, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %14, align 8
  br label %39

34:                                               ; preds = %11
  %35 = inttoptr i64 %16 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %14, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %14, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %14, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !118

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %18, align 8
  %81 = sub i64 %78, %79
  %82 = add i64 %81, %80
  %83 = trunc i64 %82 to i32
  %84 = sub i32 4, %1
  %85 = add i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 6
  %89 = load i8, i8* %88, align 8, !range !3
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %77
  %92 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %4, i32 %85) #20
  %93 = load i64, i64* %15, align 8
  %94 = load i64, i64* %25, align 8
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %95, 8
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i64*
  br label %103

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %100, i64 8) #20
  %101 = bitcast i8** %24 to i64**
  %102 = load i64*, i64** %101, align 8
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i64* [ %98, %97 ], [ %102, %99 ]
  %105 = zext i32 %92 to i64
  %106 = or i64 %105, -6149102315451187200
  store i64 %106, i64* %104, align 4
  %107 = load i8*, i8** %24, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  store i8* %108, i8** %24, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 6
  %115 = select i1 %114, i16 %113, i16 6
  store i16 %115, i16* %112, align 4
  br label %116

116:                                              ; preds = %103, %87, %2
  ret void
}

declare zeroext i1 @_ZNK3url6Origin8DomainIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.url::Origin"*, i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_suffixEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #2 align 2

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #2 align 2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #2 align 2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #7

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.url_pattern_index::flat::UrlRule"* @_ZN17url_pattern_index12_GLOBAL__N_124FindMatchAmongCandidatesEPKN11flatbuffers6VectorINS1_6OffsetINS_4flat7UrlRuleEEEEERKNS_10UrlPattern7UrlInfoERKN3url6OriginENS4_11ElementTypeENS4_14ActivationTypeENS4_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKNS2_IhEEEEEPNSt3__16vectorIPKS5_NSU_9allocatorISX_EEEE(%"class.flatbuffers::Vector.76"*, %"class.url_pattern_index::UrlPattern::UrlInfo"* dereferenceable(72), %"class.url::Origin"* dereferenceable(80), i32, i32, i32, i1 zeroext, i1 zeroext, %"class.base::RepeatingCallback"* nocapture readonly dereferenceable(8), %"class.std::__1::vector.86"*) unnamed_addr #2 {
  %11 = alloca %"class.url_pattern_index::UrlPattern", align 8
  %12 = icmp eq %"class.flatbuffers::Vector.76"* %0, null
  br i1 %12, label %189, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.flatbuffers::Vector.76", %"class.flatbuffers::Vector.76"* %0, i64 1, i32 0
  %15 = getelementptr inbounds %"class.flatbuffers::Vector.76", %"class.flatbuffers::Vector.76"* %0, i64 0, i32 0
  %16 = load i32, i32* %15, align 4, !noalias !119
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i32, i32* %14, i64 %17
  %19 = bitcast i32* %18 to i8*
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %189, label %21

21:                                               ; preds = %13
  %22 = bitcast i32* %14 to i8*
  %23 = bitcast %"class.url_pattern_index::UrlPattern"* %11 to i8*
  %24 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = icmp eq %"class.std::__1::vector.86"* %9, null
  %26 = getelementptr inbounds %"class.std::__1::vector.86", %"class.std::__1::vector.86"* %9, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.std::__1::vector.86", %"class.std::__1::vector.86"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast %"struct.url_pattern_index::flat::UrlRule"*** %26 to i64*
  %29 = bitcast %"class.std::__1::vector.86"* %9 to i64*
  %30 = bitcast %"struct.url_pattern_index::flat::UrlRule"*** %27 to i64*
  %31 = getelementptr inbounds %"class.std::__1::vector.86", %"class.std::__1::vector.86"* %9, i64 0, i32 0, i32 0
  br label %32

32:                                               ; preds = %21, %184
  %33 = phi i8* [ %22, %21 ], [ %185, %184 ]
  %34 = bitcast i8* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %33, i64 %36
  %38 = bitcast i8* %37 to %"struct.url_pattern_index::flat::UrlRule"*
  %39 = ptrtoint i8* %37 to i64
  %40 = call zeroext i1 @_ZN17url_pattern_index18DoesRuleFlagsMatchERKNS_4flat7UrlRuleENS0_11ElementTypeENS0_14ActivationTypeENS0_13RequestMethodEbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEE(%"struct.url_pattern_index::flat::UrlRule"* dereferenceable(1) %38, i32 %3, i32 %4, i32 %5, i1 zeroext %6, %"class.base::RepeatingCallback"* dereferenceable(8) %8)
  br i1 %40, label %41, label %184

41:                                               ; preds = %32
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #20
  call void @_ZN17url_pattern_index10UrlPatternC1ERKNS_4flat7UrlRuleE(%"class.url_pattern_index::UrlPattern"* nonnull %11, %"struct.url_pattern_index::flat::UrlRule"* dereferenceable(1) %38) #20
  %42 = call zeroext i1 @_ZNK17url_pattern_index10UrlPattern10MatchesUrlERKNS0_7UrlInfoE(%"class.url_pattern_index::UrlPattern"* nonnull %11, %"class.url_pattern_index::UrlPattern::UrlInfo"* dereferenceable(72) %1) #20
  call void @_ZN17url_pattern_index10UrlPatternD1Ev(%"class.url_pattern_index::UrlPattern"* nonnull %11) #20
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #20
  br i1 %42, label %43, label %184

43:                                               ; preds = %41
  %44 = bitcast i8* %37 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  %47 = sub nsw i64 0, %46
  %48 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %38, i64 0, i32 0, i32 0, i64 %47
  %49 = bitcast i8* %48 to i16*
  %50 = load i16, i16* %49, align 2
  %51 = icmp ugt i16 %50, 18
  br i1 %51, label %52, label %65

52:                                               ; preds = %43
  %53 = getelementptr inbounds i8, i8* %48, i64 18
  %54 = bitcast i8* %53 to i16*
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i64
  %57 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %38, i64 0, i32 0, i32 0, i64 %56
  %58 = icmp eq i16 %55, 0
  br i1 %58, label %65, label %59

59:                                               ; preds = %52
  %60 = bitcast i8* %57 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %57, i64 %62
  %64 = icmp eq i8* %63, null
  br label %65

65:                                               ; preds = %59, %52, %43
  %66 = phi i1 [ %64, %59 ], [ true, %52 ], [ true, %43 ]
  %67 = and i1 %66, %7
  br i1 %67, label %184, label %68

68:                                               ; preds = %65
  %69 = load i8, i8* %24, align 8, !range !3
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %120

71:                                               ; preds = %68
  br i1 %66, label %97, label %72

72:                                               ; preds = %71
  br i1 %51, label %73, label %86

73:                                               ; preds = %72
  %74 = getelementptr inbounds i8, i8* %48, i64 18
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = zext i16 %76 to i64
  %78 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %38, i64 0, i32 0, i32 0, i64 %77
  %79 = icmp eq i16 %76, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %73
  %81 = bitcast i8* %78 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %78, i64 %83
  %85 = bitcast i8* %84 to %"class.flatbuffers::Vector.69"*
  br label %86

86:                                               ; preds = %80, %73, %72
  %87 = phi %"class.flatbuffers::Vector.69"* [ %85, %80 ], [ null, %73 ], [ null, %72 ]
  %88 = call fastcc i64 @_ZN17url_pattern_index12_GLOBAL__N_127GetLongestMatchingSubdomainERKN3url6OriginERKN11flatbuffers6VectorINS5_6OffsetINS5_6StringEEEEE(%"class.url::Origin"* dereferenceable(80) %2, %"class.flatbuffers::Vector.69"* dereferenceable(4) %87) #20
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %184, label %90

90:                                               ; preds = %86
  %91 = load i32, i32* %44, align 4
  %92 = sext i32 %91 to i64
  %93 = sub nsw i64 0, %92
  %94 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %38, i64 0, i32 0, i32 0, i64 %93
  %95 = bitcast i8* %94 to i16*
  %96 = load i16, i16* %95, align 2
  br label %97

97:                                               ; preds = %90, %71
  %98 = phi i16 [ %96, %90 ], [ %50, %71 ]
  %99 = phi i64 [ %93, %90 ], [ %47, %71 ]
  %100 = phi i64 [ %88, %90 ], [ 1, %71 ]
  %101 = icmp ugt i16 %98, 20
  br i1 %101, label %102, label %121

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %38, i64 0, i32 0, i32 0, i64 %99
  %104 = getelementptr inbounds i8, i8* %103, i64 20
  %105 = bitcast i8* %104 to i16*
  %106 = load i16, i16* %105, align 2
  %107 = zext i16 %106 to i64
  %108 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %38, i64 0, i32 0, i32 0, i64 %107
  %109 = icmp eq i16 %106, 0
  br i1 %109, label %121, label %110

110:                                              ; preds = %102
  %111 = bitcast i8* %108 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* %108, i64 %113
  %115 = icmp eq i8* %114, null
  br i1 %115, label %121, label %116

116:                                              ; preds = %110
  %117 = bitcast i8* %114 to %"class.flatbuffers::Vector.69"*
  %118 = call fastcc i64 @_ZN17url_pattern_index12_GLOBAL__N_127GetLongestMatchingSubdomainERKN3url6OriginERKN11flatbuffers6VectorINS5_6OffsetINS5_6StringEEEEE(%"class.url::Origin"* dereferenceable(80) %2, %"class.flatbuffers::Vector.69"* nonnull dereferenceable(4) %117) #20
  %119 = icmp ult i64 %118, %100
  br i1 %119, label %121, label %184

120:                                              ; preds = %68
  br i1 %66, label %121, label %184

121:                                              ; preds = %97, %102, %110, %116, %120
  br i1 %25, label %187, label %122

122:                                              ; preds = %121
  %123 = load %"struct.url_pattern_index::flat::UrlRule"**, %"struct.url_pattern_index::flat::UrlRule"*** %26, align 8
  %124 = load %"struct.url_pattern_index::flat::UrlRule"**, %"struct.url_pattern_index::flat::UrlRule"*** %27, align 8
  %125 = icmp eq %"struct.url_pattern_index::flat::UrlRule"** %123, %124
  %126 = ptrtoint %"struct.url_pattern_index::flat::UrlRule"** %124 to i64
  br i1 %125, label %131, label %127

127:                                              ; preds = %122
  %128 = bitcast %"struct.url_pattern_index::flat::UrlRule"** %123 to i64*
  store i64 %39, i64* %128, align 8
  %129 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule"*, %"struct.url_pattern_index::flat::UrlRule"** %123, i64 1
  %130 = ptrtoint %"struct.url_pattern_index::flat::UrlRule"** %129 to i64
  store i64 %130, i64* %28, align 8
  br label %184

131:                                              ; preds = %122
  %132 = ptrtoint %"struct.url_pattern_index::flat::UrlRule"** %123 to i64
  %133 = load i64, i64* %29, align 8
  %134 = sub i64 %132, %133
  %135 = ashr exact i64 %134, 3
  %136 = add nsw i64 %135, 1
  %137 = icmp ugt i64 %136, 2305843009213693951
  br i1 %137, label %138, label %140

138:                                              ; preds = %131
  %139 = bitcast %"class.std::__1::vector.86"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %139) #22
  unreachable

140:                                              ; preds = %131
  %141 = sub i64 %126, %133
  %142 = ashr exact i64 %141, 3
  %143 = icmp ult i64 %142, 1152921504606846975
  br i1 %143, label %144, label %152

144:                                              ; preds = %140
  %145 = ashr exact i64 %141, 2
  %146 = icmp ult i64 %145, %136
  %147 = select i1 %146, i64 %136, i64 %145
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %157, label %149

149:                                              ; preds = %144
  %150 = icmp ugt i64 %147, 2305843009213693951
  br i1 %150, label %151, label %152

151:                                              ; preds = %149
  call void @abort() #22
  unreachable

152:                                              ; preds = %149, %140
  %153 = phi i64 [ %147, %149 ], [ 2305843009213693951, %140 ]
  %154 = shl i64 %153, 3
  %155 = call i8* @_Znwm(i64 %154) #21
  %156 = bitcast i8* %155 to %"struct.url_pattern_index::flat::UrlRule"**
  br label %157

157:                                              ; preds = %152, %144
  %158 = phi i64 [ %153, %152 ], [ 0, %144 ]
  %159 = phi %"struct.url_pattern_index::flat::UrlRule"** [ %156, %152 ], [ null, %144 ]
  %160 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule"*, %"struct.url_pattern_index::flat::UrlRule"** %159, i64 %135
  %161 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule"*, %"struct.url_pattern_index::flat::UrlRule"** %159, i64 %158
  %162 = ptrtoint %"struct.url_pattern_index::flat::UrlRule"** %161 to i64
  %163 = bitcast %"struct.url_pattern_index::flat::UrlRule"** %160 to i64*
  store i64 %39, i64* %163, align 8
  %164 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule"*, %"struct.url_pattern_index::flat::UrlRule"** %160, i64 1
  %165 = ptrtoint %"struct.url_pattern_index::flat::UrlRule"** %164 to i64
  %166 = load %"struct.url_pattern_index::flat::UrlRule"**, %"struct.url_pattern_index::flat::UrlRule"*** %31, align 8
  %167 = load i64, i64* %28, align 8
  %168 = ptrtoint %"struct.url_pattern_index::flat::UrlRule"** %166 to i64
  %169 = sub i64 %167, %168
  %170 = ashr exact i64 %169, 3
  %171 = sub nsw i64 0, %170
  %172 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule"*, %"struct.url_pattern_index::flat::UrlRule"** %160, i64 %171
  %173 = ptrtoint %"struct.url_pattern_index::flat::UrlRule"** %172 to i64
  %174 = icmp sgt i64 %169, 0
  br i1 %174, label %175, label %179

175:                                              ; preds = %157
  %176 = bitcast %"struct.url_pattern_index::flat::UrlRule"** %172 to i8*
  %177 = bitcast %"struct.url_pattern_index::flat::UrlRule"** %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %176, i8* align 8 %177, i64 %169, i1 false) #20
  %178 = load %"struct.url_pattern_index::flat::UrlRule"**, %"struct.url_pattern_index::flat::UrlRule"*** %31, align 8
  br label %179

179:                                              ; preds = %175, %157
  %180 = phi %"struct.url_pattern_index::flat::UrlRule"** [ %166, %157 ], [ %178, %175 ]
  store i64 %173, i64* %29, align 8
  store i64 %165, i64* %28, align 8
  store i64 %162, i64* %30, align 8
  %181 = icmp eq %"struct.url_pattern_index::flat::UrlRule"** %180, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %179
  %183 = bitcast %"struct.url_pattern_index::flat::UrlRule"** %180 to i8*
  call void @_ZdlPv(i8* %183) #21
  br label %184

184:                                              ; preds = %86, %65, %32, %41, %120, %116, %127, %179, %182
  %185 = getelementptr inbounds i8, i8* %33, i64 4
  %186 = icmp eq i8* %185, %19
  br i1 %186, label %189, label %32

187:                                              ; preds = %121
  %188 = bitcast i8* %37 to %"struct.url_pattern_index::flat::UrlRule"*
  br label %189

189:                                              ; preds = %184, %187, %13, %10
  %190 = phi %"struct.url_pattern_index::flat::UrlRule"* [ null, %10 ], [ null, %13 ], [ %188, %187 ], [ null, %184 ]
  ret %"struct.url_pattern_index::flat::UrlRule"* %190
}

declare void @_ZN17url_pattern_index10UrlPatternC1ERKNS_4flat7UrlRuleE(%"class.url_pattern_index::UrlPattern"*, %"struct.url_pattern_index::flat::UrlRule"* dereferenceable(1)) unnamed_addr #7

declare zeroext i1 @_ZNK17url_pattern_index10UrlPattern10MatchesUrlERKNS0_7UrlInfoE(%"class.url_pattern_index::UrlPattern"*, %"class.url_pattern_index::UrlPattern::UrlInfo"* dereferenceable(72)) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN17url_pattern_index10UrlPatternD1Ev(%"class.url_pattern_index::UrlPattern"*) unnamed_addr #8

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIN17url_pattern_index4flat7UrlRuleEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i64 4, i64* %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %9, %12
  %17 = add i64 %16, %15
  %18 = sub i64 0, %17
  %19 = and i64 %18, 3
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %12, %22
  %24 = icmp ult i64 %23, %19
  br i1 %24, label %25, label %30

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %26, i64 %19) #20
  %27 = load i8*, i8** %10, align 8
  %28 = sub nsw i64 0, %19
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8* %29, i8** %10, align 8
  br label %35

30:                                               ; preds = %7
  %31 = inttoptr i64 %12 to i8*
  %32 = sub nsw i64 0, %19
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %10, align 8
  %34 = icmp eq i64 %19, 0
  br i1 %34, label %73, label %35

35:                                               ; preds = %30, %25
  %36 = phi i8* [ %29, %25 ], [ %33, %30 ]
  store i8 0, i8* %36, align 1
  %37 = icmp eq i64 %19, 1
  br i1 %37, label %73, label %38

38:                                               ; preds = %35
  %39 = add nsw i64 %19, -1
  %40 = add nsw i64 %19, -2
  %41 = and i64 %39, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %62, label %43

43:                                               ; preds = %38
  %44 = sub nsw i64 %39, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 1, %43 ], [ %59, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %60, %45 ]
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %46
  store i8 0, i8* %49, align 1
  %50 = add nuw nsw i64 %46, 1
  %51 = load i8*, i8** %10, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %46, 2
  %54 = load i8*, i8** %10, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw i64 %46, 3
  %57 = load i8*, i8** %10, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %46, 4
  %60 = add i64 %47, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %45

62:                                               ; preds = %45, %38
  %63 = phi i64 [ 1, %38 ], [ %59, %45 ]
  %64 = icmp eq i64 %41, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %70, %65 ], [ %63, %62 ]
  %67 = phi i64 [ %71, %65 ], [ %41, %62 ]
  %68 = load i8*, i8** %10, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %66
  store i8 0, i8* %69, align 1
  %70 = add nuw i64 %66, 1
  %71 = add i64 %67, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %65, !llvm.loop !122

73:                                               ; preds = %62, %65, %30, %35
  %74 = load i64, i64* %8, align 8
  %75 = load i64, i64* %11, align 8
  %76 = load i64, i64* %14, align 8
  %77 = sub i64 %74, %75
  %78 = add i64 %77, %76
  %79 = trunc i64 %78 to i32
  %80 = sub i32 4, %1
  %81 = add i32 %80, %79
  %82 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %81)
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIN17url_pattern_index4flat12NGramToRulesEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i64 4, i64* %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %9, %12
  %17 = add i64 %16, %15
  %18 = sub i64 0, %17
  %19 = and i64 %18, 3
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %12, %22
  %24 = icmp ult i64 %23, %19
  br i1 %24, label %25, label %30

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %26, i64 %19) #20
  %27 = load i8*, i8** %10, align 8
  %28 = sub nsw i64 0, %19
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8* %29, i8** %10, align 8
  br label %35

30:                                               ; preds = %7
  %31 = inttoptr i64 %12 to i8*
  %32 = sub nsw i64 0, %19
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %10, align 8
  %34 = icmp eq i64 %19, 0
  br i1 %34, label %73, label %35

35:                                               ; preds = %30, %25
  %36 = phi i8* [ %29, %25 ], [ %33, %30 ]
  store i8 0, i8* %36, align 1
  %37 = icmp eq i64 %19, 1
  br i1 %37, label %73, label %38

38:                                               ; preds = %35
  %39 = add nsw i64 %19, -1
  %40 = add nsw i64 %19, -2
  %41 = and i64 %39, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %62, label %43

43:                                               ; preds = %38
  %44 = sub nsw i64 %39, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 1, %43 ], [ %59, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %60, %45 ]
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %46
  store i8 0, i8* %49, align 1
  %50 = add nuw nsw i64 %46, 1
  %51 = load i8*, i8** %10, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %46, 2
  %54 = load i8*, i8** %10, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw i64 %46, 3
  %57 = load i8*, i8** %10, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %46, 4
  %60 = add i64 %47, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %45

62:                                               ; preds = %45, %38
  %63 = phi i64 [ 1, %38 ], [ %59, %45 ]
  %64 = icmp eq i64 %41, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %70, %65 ], [ %63, %62 ]
  %67 = phi i64 [ %71, %65 ], [ %41, %62 ]
  %68 = load i8*, i8** %10, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %66
  store i8 0, i8* %69, align 1
  %70 = add nuw i64 %66, 1
  %71 = add i64 %67, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %65, !llvm.loop !123

73:                                               ; preds = %62, %65, %30, %35
  %74 = load i64, i64* %8, align 8
  %75 = load i64, i64* %11, align 8
  %76 = load i64, i64* %14, align 8
  %77 = sub i64 %74, %75
  %78 = add i64 %77, %76
  %79 = trunc i64 %78 to i32
  %80 = sub i32 4, %1
  %81 = add i32 %80, %79
  %82 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %81)
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN17url_pattern_index13ClosedHashMapImNSt3__16vectorIN11flatbuffers6OffsetINS_4flat7UrlRuleEEENS1_9allocatorIS7_EEEENS_21SimpleQuadraticProberImNS_20Uint64ToUint32HasherEEEE25CalculateHashTableSizeForEj(i32) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq i32 %0, 0
  %6 = select i1 %5, i32 -1, i32 32
  %7 = add i32 %0, -1
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #20, !range !124
  %9 = sub nuw nsw i32 %6, %8
  %10 = add nsw i32 %9, 1
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #20
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = icmp slt i32 %10, 32
  br i1 %14, label %15, label %16

15:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %12, align 8
  br label %25

16:                                               ; preds = %1
  %17 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %10) #20
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 32) #20
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0), i8* %17, i8* %18) #20
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %20, i8** %12, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #20
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.10, i64 0, i64 0), i32 196, %"class.logging::CheckOpResult"* nonnull %3) #20
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #20
  br label %25

25:                                               ; preds = %15, %16, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #20
  %26 = shl i32 1, %10
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairImNS0_IN11flatbuffers6OffsetIN17url_pattern_index4flat7UrlRuleEEENS_9allocatorIS7_EEEEEENS8_ISB_EEE7reserveEm(%"class.std::__1::vector.39"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.std::__1::pair"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.39"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair"*
  br i1 %10, label %12, label %141

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.std::__1::pair"** %13 to i64*
  %15 = icmp ugt i64 %1, 576460752303423487
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #22
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 5
  %21 = shl i64 %1, 5
  %22 = tail call i8* @_Znwm(i64 %21) #21
  %23 = bitcast i8* %22 to %"struct.std::__1::pair"*
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 %20
  %25 = ptrtoint %"struct.std::__1::pair"* %24 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 %1
  %27 = ptrtoint %"struct.std::__1::pair"* %26 to i64
  %28 = inttoptr i64 %18 to %"struct.std::__1::pair"*
  %29 = icmp eq %"struct.std::__1::pair"* %28, %11
  br i1 %29, label %118, label %30

30:                                               ; preds = %17
  %31 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 -1, i32 0
  %32 = bitcast i64* %31 to i8*
  %33 = sub i64 0, %7
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = and i64 %35, 32
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %61

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 -1
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 -1, i32 0
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %39, i64 0, i32 0
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %40, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 -1, i32 1
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 -1, i32 1
  %45 = bitcast %"class.std::__1::vector.41"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #20
  %46 = bitcast %"class.std::__1::vector.41"* %44 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::vector.41"* %43 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 -1, i32 1, i32 0, i32 1
  %50 = bitcast %"struct.flatbuffers::Offset.1"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 -1, i32 1, i32 0, i32 1
  %53 = bitcast %"struct.flatbuffers::Offset.1"** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %55 = bitcast %"struct.flatbuffers::Offset.1"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast %"struct.flatbuffers::Offset.1"** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = bitcast %"class.std::__1::vector.41"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #20
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 -1
  br label %61

61:                                               ; preds = %38, %30
  %62 = phi %"struct.std::__1::pair"* [ undef, %30 ], [ %60, %38 ]
  %63 = phi %"struct.std::__1::pair"* [ %24, %30 ], [ %60, %38 ]
  %64 = phi %"struct.std::__1::pair"* [ %28, %30 ], [ %39, %38 ]
  %65 = icmp ult i8* %34, inttoptr (i64 32 to i8*)
  br i1 %65, label %112, label %66

66:                                               ; preds = %61, %66
  %67 = phi %"struct.std::__1::pair"* [ %110, %66 ], [ %63, %61 ]
  %68 = phi %"struct.std::__1::pair"* [ %89, %66 ], [ %64, %61 ]
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %67, i64 -1, i32 0
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 -1, i32 0
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %69, align 8
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %67, i64 -1, i32 1
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 -1, i32 1
  %74 = bitcast %"class.std::__1::vector.41"* %72 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #20
  %75 = bitcast %"class.std::__1::vector.41"* %73 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.std::__1::vector.41"* %72 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 -1, i32 1, i32 0, i32 1
  %79 = bitcast %"struct.flatbuffers::Offset.1"** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %67, i64 -1, i32 1, i32 0, i32 1
  %82 = bitcast %"struct.flatbuffers::Offset.1"** %81 to i64*
  store i64 %80, i64* %82, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %84 = bitcast %"struct.flatbuffers::Offset.1"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %67, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast %"struct.flatbuffers::Offset.1"** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = bitcast %"class.std::__1::vector.41"* %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #20
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 -2
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %67, i64 -2, i32 0
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %89, i64 0, i32 0
  %92 = load i64, i64* %91, align 8
  store i64 %92, i64* %90, align 8
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %67, i64 -2, i32 1
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 -2, i32 1
  %95 = bitcast %"class.std::__1::vector.41"* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #20
  %96 = bitcast %"class.std::__1::vector.41"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.std::__1::vector.41"* %93 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 -2, i32 1, i32 0, i32 1
  %100 = bitcast %"struct.flatbuffers::Offset.1"** %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %67, i64 -2, i32 1, i32 0, i32 1
  %103 = bitcast %"struct.flatbuffers::Offset.1"** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 -2, i32 1, i32 0, i32 2, i32 0, i32 0
  %105 = bitcast %"struct.flatbuffers::Offset.1"** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %67, i64 -2, i32 1, i32 0, i32 2, i32 0, i32 0
  %108 = bitcast %"struct.flatbuffers::Offset.1"** %107 to i64*
  store i64 %106, i64* %108, align 8
  %109 = bitcast %"class.std::__1::vector.41"* %94 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 24, i1 false) #20
  %110 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %67, i64 -2
  %111 = icmp eq %"struct.std::__1::pair"* %89, %11
  br i1 %111, label %112, label %66

112:                                              ; preds = %66, %61
  %113 = phi %"struct.std::__1::pair"* [ %62, %61 ], [ %110, %66 ]
  %114 = ptrtoint %"struct.std::__1::pair"* %113 to i64
  %115 = load i64, i64* %6, align 8
  %116 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %117 = inttoptr i64 %115 to %"struct.std::__1::pair"*
  br label %118

118:                                              ; preds = %17, %112
  %119 = phi %"struct.std::__1::pair"* [ %117, %112 ], [ %28, %17 ]
  %120 = phi %"struct.std::__1::pair"* [ %116, %112 ], [ %11, %17 ]
  %121 = phi i64 [ %114, %112 ], [ %25, %17 ]
  %122 = phi i64 [ %115, %112 ], [ %18, %17 ]
  store i64 %121, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %123 = icmp eq %"struct.std::__1::pair"* %120, %119
  br i1 %123, label %137, label %124

124:                                              ; preds = %118, %135
  %125 = phi %"struct.std::__1::pair"* [ %126, %135 ], [ %120, %118 ]
  %126 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %125, i64 -1
  %127 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %125, i64 -1, i32 1, i32 0, i32 0
  %128 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %127, align 8
  %129 = icmp eq %"struct.flatbuffers::Offset.1"* %128, null
  br i1 %129, label %135, label %130

130:                                              ; preds = %124
  %131 = ptrtoint %"struct.flatbuffers::Offset.1"* %128 to i64
  %132 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %125, i64 -1, i32 1, i32 0, i32 1
  %133 = bitcast %"struct.flatbuffers::Offset.1"** %132 to i64*
  store i64 %131, i64* %133, align 8
  %134 = bitcast %"struct.flatbuffers::Offset.1"* %128 to i8*
  tail call void @_ZdlPv(i8* %134) #21
  br label %135

135:                                              ; preds = %130, %124
  %136 = icmp eq %"struct.std::__1::pair"* %126, %119
  br i1 %136, label %137, label %124

137:                                              ; preds = %135, %118
  %138 = icmp eq i64 %122, 0
  br i1 %138, label %141, label %139

139:                                              ; preds = %137
  %140 = inttoptr i64 %122 to i8*
  tail call void @_ZdlPv(i8* %140) #21
  br label %141

141:                                              ; preds = %139, %137, %2
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #17

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN17url_pattern_index13ClosedHashMapImNSt3__16vectorIN11flatbuffers6OffsetINS_4flat7UrlRuleEEENS1_9allocatorIS7_EEEENS_21SimpleQuadraticProberImNS_20Uint64ToUint32HasherEEEE15EmplaceKeyValueEjmSA_(%"class.url_pattern_index::ClosedHashMap"*, i32, i64, %"class.std::__1::vector.41"*) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store i64 %2, i64* %6, align 8
  %9 = getelementptr inbounds %"class.url_pattern_index::ClosedHashMap", %"class.url_pattern_index::ClosedHashMap"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.url_pattern_index::ClosedHashMap", %"class.url_pattern_index::ClosedHashMap"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::pair"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.39"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 5
  %17 = trunc i64 %16 to i32
  %18 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #20
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = icmp eq i32 %17, -1
  br i1 %21, label %23, label %22

22:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* null, i8** %19, align 8
  br label %32

23:                                               ; preds = %4
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 -1) #20
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 -1) #20
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0), i8* %24, i8* %25) #20
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* %27, i8** %19, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #20
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.10, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %7) #20
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #20
  br label %32

32:                                               ; preds = %22, %23, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #20
  %33 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %34 = getelementptr inbounds %"class.url_pattern_index::ClosedHashMap", %"class.url_pattern_index::ClosedHashMap"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %35 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %34, align 8
  %36 = icmp ult %"struct.std::__1::pair"* %33, %35
  br i1 %36, label %37, label %58

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 0, i32 0
  %39 = load i64, i64* %6, align 8
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 0, i32 1
  %41 = bitcast %"class.std::__1::vector.41"* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #20
  %42 = bitcast %"class.std::__1::vector.41"* %3 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::vector.41"* %40 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %3, i64 0, i32 0, i32 1
  %46 = bitcast %"struct.flatbuffers::Offset.1"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 0, i32 1, i32 0, i32 1
  %49 = bitcast %"struct.flatbuffers::Offset.1"** %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %51 = bitcast %"struct.flatbuffers::Offset.1"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast %"struct.flatbuffers::Offset.1"** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast %"class.std::__1::vector.41"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #20
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 1
  %57 = ptrtoint %"struct.std::__1::pair"* %56 to i64
  store i64 %57, i64* %11, align 8
  br label %59

58:                                               ; preds = %32
  call void @_ZNSt3__16vectorINS_4pairImNS0_IN11flatbuffers6OffsetIN17url_pattern_index4flat7UrlRuleEEENS_9allocatorIS7_EEEEEENS8_ISB_EEE24__emplace_back_slow_pathIJmSA_EEEvDpOT_(%"class.std::__1::vector.39"* %9, i64* nonnull dereferenceable(8) %6, %"class.std::__1::vector.41"* dereferenceable(24) %3) #20
  br label %59

59:                                               ; preds = %37, %58
  %60 = and i64 %16, 4294967295
  %61 = getelementptr inbounds %"class.url_pattern_index::ClosedHashMap", %"class.url_pattern_index::ClosedHashMap"* %0, i64 0, i32 0, i32 0, i32 1
  %62 = bitcast i32** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.url_pattern_index::ClosedHashMap"* %0 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %63, %65
  %67 = ashr exact i64 %66, 2
  %68 = lshr i64 %67, 1
  %69 = icmp ult i64 %60, %68
  br i1 %69, label %72, label %70

70:                                               ; preds = %59
  %71 = add i32 %17, 1
  call void @_ZN17url_pattern_index13ClosedHashMapImNSt3__16vectorIN11flatbuffers6OffsetINS_4flat7UrlRuleEEENS1_9allocatorIS7_EEEENS_21SimpleQuadraticProberImNS_20Uint64ToUint32HasherEEEE6RehashEj(%"class.url_pattern_index::ClosedHashMap"* %0, i32 %71)
  br label %76

72:                                               ; preds = %59
  %73 = inttoptr i64 %65 to i32*
  %74 = zext i32 %1 to i64
  %75 = getelementptr inbounds i32, i32* %73, i64 %74
  store i32 %17, i32* %75, align 4
  br label %76

76:                                               ; preds = %72, %70
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17url_pattern_index13ClosedHashMapImNSt3__16vectorIN11flatbuffers6OffsetINS_4flat7UrlRuleEEENS1_9allocatorIS7_EEEENS_21SimpleQuadraticProberImNS_20Uint64ToUint32HasherEEEE6RehashEj(%"class.url_pattern_index::ClosedHashMap"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.url_pattern_index::ClosedHashMap", %"class.url_pattern_index::ClosedHashMap"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast i32** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.url_pattern_index::ClosedHashMap"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 2
  %12 = lshr i64 %11, 1
  %13 = icmp ult i64 %12, %4
  br i1 %13, label %14, label %87

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.url_pattern_index::ClosedHashMap", %"class.url_pattern_index::ClosedHashMap"* %0, i64 0, i32 0
  %16 = tail call i32 @_ZN17url_pattern_index13ClosedHashMapImNSt3__16vectorIN11flatbuffers6OffsetINS_4flat7UrlRuleEEENS1_9allocatorIS7_EEEENS_21SimpleQuadraticProberImNS_20Uint64ToUint32HasherEEEE25CalculateHashTableSizeForEj(i32 %1)
  %17 = zext i32 %16 to i64
  %18 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #20
  store i32 -1, i32* %3, align 4
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignEmRKj(%"class.std::__1::vector.32"* %15, i64 %17, i32* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #20
  %19 = getelementptr inbounds %"class.url_pattern_index::ClosedHashMap", %"class.url_pattern_index::ClosedHashMap"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.url_pattern_index::ClosedHashMap", %"class.url_pattern_index::ClosedHashMap"* %0, i64 0, i32 1, i32 0, i32 1
  %21 = bitcast %"struct.std::__1::pair"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.39"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %22, %24
  br i1 %25, label %87, label %26

26:                                               ; preds = %14, %77
  %27 = phi i64 [ %83, %77 ], [ %24, %14 ]
  %28 = phi i64 [ %81, %77 ], [ 0, %14 ]
  %29 = phi i32 [ %80, %77 ], [ 0, %14 ]
  %30 = inttoptr i64 %27 to %"struct.std::__1::pair"*
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %28, i32 0
  %32 = load i64, i64* %6, align 8
  %33 = load i64, i64* %8, align 8
  %34 = sub i64 %32, %33
  %35 = lshr exact i64 %34, 2
  %36 = trunc i64 %35 to i32
  %37 = add i32 %36, -1
  %38 = load i64, i64* %31, align 8
  %39 = xor i64 %38, -1
  %40 = shl i64 %38, 18
  %41 = add i64 %40, %39
  %42 = lshr i64 %41, 31
  %43 = xor i64 %42, %41
  %44 = mul i64 %43, 21
  %45 = lshr i64 %44, 11
  %46 = xor i64 %45, %44
  %47 = mul i64 %46, 65
  %48 = lshr i64 %47, 22
  %49 = xor i64 %48, %47
  %50 = trunc i64 %49 to i32
  %51 = and i32 %37, %50
  %52 = zext i32 %51 to i64
  %53 = inttoptr i64 %33 to i32*
  %54 = getelementptr inbounds i32, i32* %53, i64 %52
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %77, label %57

57:                                               ; preds = %26, %67
  %58 = phi i32 [ %73, %67 ], [ %55, %26 ]
  %59 = phi i32 [ %70, %67 ], [ %51, %26 ]
  %60 = phi i32 [ %69, %67 ], [ 1, %26 ]
  %61 = zext i32 %58 to i64
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %61, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %38
  br i1 %64, label %65, label %67

65:                                               ; preds = %57
  %66 = zext i32 %59 to i64
  br label %77

67:                                               ; preds = %57
  %68 = add i32 %60, %59
  %69 = add i32 %60, 1
  %70 = and i32 %68, %37
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds i32, i32* %53, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, -1
  br i1 %74, label %75, label %57

75:                                               ; preds = %67
  %76 = zext i32 %70 to i64
  br label %77

77:                                               ; preds = %75, %65, %26
  %78 = phi i64 [ %52, %26 ], [ %66, %65 ], [ %76, %75 ]
  %79 = getelementptr inbounds i32, i32* %53, i64 %78
  store i32 %29, i32* %79, align 4
  %80 = add i32 %29, 1
  %81 = zext i32 %80 to i64
  %82 = load i64, i64* %21, align 8
  %83 = load i64, i64* %23, align 8
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 5
  %86 = icmp eq i64 %85, %81
  br i1 %86, label %87, label %26

87:                                               ; preds = %77, %14, %2
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairImNS0_IN11flatbuffers6OffsetIN17url_pattern_index4flat7UrlRuleEEENS_9allocatorIS7_EEEEEENS8_ISB_EEE24__emplace_back_slow_pathIJmSA_EEEvDpOT_(%"class.std::__1::vector.39"*, i64* dereferenceable(8), %"class.std::__1::vector.41"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.std::__1::pair"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.39"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 5
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 576460752303423487
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.39"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #22
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.std::__1::pair"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 5
  %21 = icmp ult i64 %20, 288230376151711743
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 4
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 576460752303423487
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #22
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 576460752303423487, %15 ]
  %32 = shl i64 %31, 5
  %33 = tail call i8* @_Znwm(i64 %32) #21
  %34 = bitcast i8* %33 to %"struct.std::__1::pair"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"struct.std::__1::pair"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 %10
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 %36
  %40 = ptrtoint %"struct.std::__1::pair"* %39 to i64
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 0, i32 0
  %42 = load i64, i64* %1, align 8
  store i64 %42, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 %10, i32 1
  %44 = bitcast %"class.std::__1::vector.41"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #20
  %45 = bitcast %"class.std::__1::vector.41"* %2 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector.41"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %2, i64 0, i32 0, i32 1
  %49 = bitcast %"struct.flatbuffers::Offset.1"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 %10, i32 1, i32 0, i32 1
  %52 = bitcast %"struct.flatbuffers::Offset.1"** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast %"struct.flatbuffers::Offset.1"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 %10, i32 1, i32 0, i32 2, i32 0, i32 0
  %57 = bitcast %"struct.flatbuffers::Offset.1"** %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = bitcast %"class.std::__1::vector.41"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #20
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 1
  %60 = ptrtoint %"struct.std::__1::pair"* %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 0
  %62 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %61, align 8
  %63 = ptrtoint %"struct.std::__1::pair"* %62 to i64
  %64 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %65 = icmp eq %"struct.std::__1::pair"* %64, %62
  br i1 %65, label %150, label %66

66:                                               ; preds = %35
  %67 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %64, i64 -1, i32 0
  %68 = ptrtoint i64* %67 to i64
  %69 = sub i64 %68, %63
  %70 = and i64 %69, 32
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %95

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %64, i64 -1
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 -1, i32 0
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  store i64 %76, i64* %74, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 -1, i32 1
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %64, i64 -1, i32 1
  %79 = bitcast %"class.std::__1::vector.41"* %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #20
  %80 = bitcast %"class.std::__1::vector.41"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.std::__1::vector.41"* %77 to i64*
  store i64 %81, i64* %82, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %64, i64 -1, i32 1, i32 0, i32 1
  %84 = bitcast %"struct.flatbuffers::Offset.1"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 -1, i32 1, i32 0, i32 1
  %87 = bitcast %"struct.flatbuffers::Offset.1"** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %64, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %89 = bitcast %"struct.flatbuffers::Offset.1"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %92 = bitcast %"struct.flatbuffers::Offset.1"** %91 to i64*
  store i64 %90, i64* %92, align 8
  %93 = bitcast %"class.std::__1::vector.41"* %78 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #20
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 -1
  br label %95

95:                                               ; preds = %72, %66
  %96 = phi %"struct.std::__1::pair"* [ undef, %66 ], [ %94, %72 ]
  %97 = phi %"struct.std::__1::pair"* [ %38, %66 ], [ %94, %72 ]
  %98 = phi %"struct.std::__1::pair"* [ %64, %66 ], [ %73, %72 ]
  %99 = icmp ult i64 %69, 32
  br i1 %99, label %146, label %100

100:                                              ; preds = %95, %100
  %101 = phi %"struct.std::__1::pair"* [ %144, %100 ], [ %97, %95 ]
  %102 = phi %"struct.std::__1::pair"* [ %123, %100 ], [ %98, %95 ]
  %103 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %101, i64 -1, i32 0
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 -1, i32 0
  %105 = load i64, i64* %104, align 8
  store i64 %105, i64* %103, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %101, i64 -1, i32 1
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 -1, i32 1
  %108 = bitcast %"class.std::__1::vector.41"* %106 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 24, i1 false) #20
  %109 = bitcast %"class.std::__1::vector.41"* %107 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.std::__1::vector.41"* %106 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 -1, i32 1, i32 0, i32 1
  %113 = bitcast %"struct.flatbuffers::Offset.1"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %101, i64 -1, i32 1, i32 0, i32 1
  %116 = bitcast %"struct.flatbuffers::Offset.1"** %115 to i64*
  store i64 %114, i64* %116, align 8
  %117 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %118 = bitcast %"struct.flatbuffers::Offset.1"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %101, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %121 = bitcast %"struct.flatbuffers::Offset.1"** %120 to i64*
  store i64 %119, i64* %121, align 8
  %122 = bitcast %"class.std::__1::vector.41"* %107 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 24, i1 false) #20
  %123 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 -2
  %124 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %101, i64 -2, i32 0
  %125 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 0, i32 0
  %126 = load i64, i64* %125, align 8
  store i64 %126, i64* %124, align 8
  %127 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %101, i64 -2, i32 1
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 -2, i32 1
  %129 = bitcast %"class.std::__1::vector.41"* %127 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 24, i1 false) #20
  %130 = bitcast %"class.std::__1::vector.41"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.std::__1::vector.41"* %127 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 -2, i32 1, i32 0, i32 1
  %134 = bitcast %"struct.flatbuffers::Offset.1"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %101, i64 -2, i32 1, i32 0, i32 1
  %137 = bitcast %"struct.flatbuffers::Offset.1"** %136 to i64*
  store i64 %135, i64* %137, align 8
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 -2, i32 1, i32 0, i32 2, i32 0, i32 0
  %139 = bitcast %"struct.flatbuffers::Offset.1"** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %101, i64 -2, i32 1, i32 0, i32 2, i32 0, i32 0
  %142 = bitcast %"struct.flatbuffers::Offset.1"** %141 to i64*
  store i64 %140, i64* %142, align 8
  %143 = bitcast %"class.std::__1::vector.41"* %128 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 24, i1 false) #20
  %144 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %101, i64 -2
  %145 = icmp eq %"struct.std::__1::pair"* %123, %62
  br i1 %145, label %146, label %100

146:                                              ; preds = %100, %95
  %147 = phi %"struct.std::__1::pair"* [ %96, %95 ], [ %144, %100 ]
  %148 = load i64, i64* %7, align 8
  %149 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %150

150:                                              ; preds = %35, %146
  %151 = phi %"struct.std::__1::pair"* [ %149, %146 ], [ %62, %35 ]
  %152 = phi %"struct.std::__1::pair"* [ %147, %146 ], [ %38, %35 ]
  %153 = phi i64 [ %148, %146 ], [ %63, %35 ]
  %154 = ptrtoint %"struct.std::__1::pair"* %152 to i64
  store i64 %154, i64* %7, align 8
  store i64 %60, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %155 = inttoptr i64 %153 to %"struct.std::__1::pair"*
  %156 = icmp eq %"struct.std::__1::pair"* %151, %155
  br i1 %156, label %170, label %157

157:                                              ; preds = %150, %168
  %158 = phi %"struct.std::__1::pair"* [ %159, %168 ], [ %151, %150 ]
  %159 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %158, i64 -1
  %160 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %158, i64 -1, i32 1, i32 0, i32 0
  %161 = load %"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"** %160, align 8
  %162 = icmp eq %"struct.flatbuffers::Offset.1"* %161, null
  br i1 %162, label %168, label %163

163:                                              ; preds = %157
  %164 = ptrtoint %"struct.flatbuffers::Offset.1"* %161 to i64
  %165 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %158, i64 -1, i32 1, i32 0, i32 1
  %166 = bitcast %"struct.flatbuffers::Offset.1"** %165 to i64*
  store i64 %164, i64* %166, align 8
  %167 = bitcast %"struct.flatbuffers::Offset.1"* %161 to i8*
  tail call void @_ZdlPv(i8* %167) #21
  br label %168

168:                                              ; preds = %163, %157
  %169 = icmp eq %"struct.std::__1::pair"* %159, %155
  br i1 %169, label %170, label %157

170:                                              ; preds = %168, %150
  %171 = icmp eq i64 %153, 0
  br i1 %171, label %174, label %172

172:                                              ; preds = %170
  %173 = inttoptr i64 %153 to i8*
  tail call void @_ZdlPv(i8* %173) #21
  br label %174

174:                                              ; preds = %170, %172
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignEmRKj(%"class.std::__1::vector.32"*, i64, i32* dereferenceable(4)) local_unnamed_addr #2 comdat align 2 {
  %4 = bitcast i32* %2 to i8*
  %5 = bitcast i32* %2 to i8*
  %6 = bitcast i32* %2 to i8*
  %7 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i32** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.32"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 2
  %14 = icmp ult i64 %13, %1
  br i1 %14, label %250, label %15

15:                                               ; preds = %3
  %16 = inttoptr i64 %11 to i32*
  %17 = inttoptr i64 %11 to i8*
  %18 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %11
  %22 = ashr exact i64 %21, 2
  %23 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 0
  %24 = icmp ult i64 %22, %1
  %25 = select i1 %24, i64 %22, i64 %1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %126, label %27

27:                                               ; preds = %15
  %28 = icmp ult i64 %25, 8
  br i1 %28, label %86, label %29

29:                                               ; preds = %27
  %30 = getelementptr i32, i32* %16, i64 %25
  %31 = getelementptr i8, i8* %6, i64 1
  %32 = icmp ugt i8* %31, %17
  %33 = icmp ugt i32* %30, %2
  %34 = and i1 %32, %33
  br i1 %34, label %86, label %35

35:                                               ; preds = %29
  %36 = and i64 %25, -8
  %37 = getelementptr i32, i32* %16, i64 %36
  %38 = sub i64 %25, %36
  %39 = add i64 %36, -8
  %40 = lshr exact i64 %39, 3
  %41 = add nuw nsw i64 %40, 1
  %42 = and i64 %41, 1
  %43 = icmp eq i64 %39, 0
  br i1 %43, label %71, label %44

44:                                               ; preds = %35
  %45 = sub nuw nsw i64 %41, %42
  %46 = load i32, i32* %2, align 4, !alias.scope !125
  %47 = insertelement <4 x i32> undef, i32 %46, i32 0
  %48 = shufflevector <4 x i32> %47, <4 x i32> undef, <4 x i32> zeroinitializer
  %49 = insertelement <4 x i32> undef, i32 %46, i32 0
  %50 = shufflevector <4 x i32> %49, <4 x i32> undef, <4 x i32> zeroinitializer
  %51 = load i32, i32* %2, align 4, !alias.scope !125
  %52 = insertelement <4 x i32> undef, i32 %51, i32 0
  %53 = shufflevector <4 x i32> %52, <4 x i32> undef, <4 x i32> zeroinitializer
  %54 = insertelement <4 x i32> undef, i32 %51, i32 0
  %55 = shufflevector <4 x i32> %54, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %56

56:                                               ; preds = %56, %44
  %57 = phi i64 [ 0, %44 ], [ %68, %56 ]
  %58 = phi i64 [ %45, %44 ], [ %69, %56 ]
  %59 = getelementptr i32, i32* %16, i64 %57
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> %48, <4 x i32>* %60, align 4, !alias.scope !128, !noalias !125
  %61 = getelementptr i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> %50, <4 x i32>* %62, align 4, !alias.scope !128, !noalias !125
  %63 = or i64 %57, 8
  %64 = getelementptr i32, i32* %16, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> %53, <4 x i32>* %65, align 4, !alias.scope !128, !noalias !125
  %66 = getelementptr i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> %55, <4 x i32>* %67, align 4, !alias.scope !128, !noalias !125
  %68 = add i64 %57, 16
  %69 = add i64 %58, -2
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %56, !llvm.loop !130

71:                                               ; preds = %56, %35
  %72 = phi i64 [ 0, %35 ], [ %68, %56 ]
  %73 = icmp eq i64 %42, 0
  br i1 %73, label %84, label %74

74:                                               ; preds = %71
  %75 = getelementptr i32, i32* %16, i64 %72
  %76 = load i32, i32* %2, align 4, !alias.scope !125
  %77 = insertelement <4 x i32> undef, i32 %76, i32 0
  %78 = shufflevector <4 x i32> %77, <4 x i32> undef, <4 x i32> zeroinitializer
  %79 = insertelement <4 x i32> undef, i32 %76, i32 0
  %80 = shufflevector <4 x i32> %79, <4 x i32> undef, <4 x i32> zeroinitializer
  %81 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !128, !noalias !125
  %82 = getelementptr i32, i32* %75, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> %80, <4 x i32>* %83, align 4, !alias.scope !128, !noalias !125
  br label %84

84:                                               ; preds = %71, %74
  %85 = icmp eq i64 %25, %36
  br i1 %85, label %126, label %86

86:                                               ; preds = %84, %29, %27
  %87 = phi i32* [ %16, %29 ], [ %16, %27 ], [ %37, %84 ]
  %88 = phi i64 [ %25, %29 ], [ %25, %27 ], [ %38, %84 ]
  %89 = add i64 %88, -1
  %90 = and i64 %88, 7
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %101, label %92

92:                                               ; preds = %86, %92
  %93 = phi i32* [ %97, %92 ], [ %87, %86 ]
  %94 = phi i64 [ %98, %92 ], [ %88, %86 ]
  %95 = phi i64 [ %99, %92 ], [ %90, %86 ]
  %96 = load i32, i32* %2, align 4
  store i32 %96, i32* %93, align 4
  %97 = getelementptr inbounds i32, i32* %93, i64 1
  %98 = add i64 %94, -1
  %99 = add i64 %95, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %92, !llvm.loop !131

101:                                              ; preds = %92, %86
  %102 = phi i32* [ %87, %86 ], [ %97, %92 ]
  %103 = phi i64 [ %88, %86 ], [ %98, %92 ]
  %104 = icmp ult i64 %89, 7
  br i1 %104, label %126, label %105

105:                                              ; preds = %101, %105
  %106 = phi i32* [ %123, %105 ], [ %102, %101 ]
  %107 = phi i64 [ %124, %105 ], [ %103, %101 ]
  %108 = load i32, i32* %2, align 4
  store i32 %108, i32* %106, align 4
  %109 = getelementptr inbounds i32, i32* %106, i64 1
  %110 = load i32, i32* %2, align 4
  store i32 %110, i32* %109, align 4
  %111 = getelementptr inbounds i32, i32* %106, i64 2
  %112 = load i32, i32* %2, align 4
  store i32 %112, i32* %111, align 4
  %113 = getelementptr inbounds i32, i32* %106, i64 3
  %114 = load i32, i32* %2, align 4
  store i32 %114, i32* %113, align 4
  %115 = getelementptr inbounds i32, i32* %106, i64 4
  %116 = load i32, i32* %2, align 4
  store i32 %116, i32* %115, align 4
  %117 = getelementptr inbounds i32, i32* %106, i64 5
  %118 = load i32, i32* %2, align 4
  store i32 %118, i32* %117, align 4
  %119 = getelementptr inbounds i32, i32* %106, i64 6
  %120 = load i32, i32* %2, align 4
  store i32 %120, i32* %119, align 4
  %121 = getelementptr inbounds i32, i32* %106, i64 7
  %122 = load i32, i32* %2, align 4
  store i32 %122, i32* %121, align 4
  %123 = getelementptr inbounds i32, i32* %106, i64 8
  %124 = add i64 %107, -8
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %105, !llvm.loop !132

126:                                              ; preds = %101, %105, %84, %15
  br i1 %24, label %127, label %247

127:                                              ; preds = %126
  %128 = sub i64 %1, %22
  %129 = load i64, i64* %19, align 8
  %130 = inttoptr i64 %129 to i32*
  %131 = inttoptr i64 %129 to i8*
  %132 = getelementptr inbounds i32, i32* %130, i64 %128
  %133 = icmp eq i64 %128, 0
  br i1 %133, label %245, label %134

134:                                              ; preds = %127
  %135 = shl i64 %1, 2
  %136 = add i64 %135, -4
  %137 = sub i64 %136, %21
  %138 = lshr i64 %137, 2
  %139 = add nuw nsw i64 %138, 1
  %140 = icmp ult i64 %139, 8
  br i1 %140, label %141, label %163

141:                                              ; preds = %222, %163, %134
  %142 = phi i32* [ %130, %163 ], [ %130, %134 ], [ %176, %222 ]
  %143 = ptrtoint i32* %142 to i64
  %144 = xor i64 %22, -1
  %145 = add i64 %144, %1
  %146 = getelementptr i32, i32* %130, i64 %145
  %147 = ptrtoint i32* %146 to i64
  %148 = sub i64 %147, %143
  %149 = lshr i64 %148, 2
  %150 = add nuw nsw i64 %149, 1
  %151 = and i64 %150, 7
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %160, label %153

153:                                              ; preds = %141, %153
  %154 = phi i32* [ %157, %153 ], [ %142, %141 ]
  %155 = phi i64 [ %158, %153 ], [ %151, %141 ]
  %156 = load i32, i32* %2, align 4
  store i32 %156, i32* %154, align 4
  %157 = getelementptr inbounds i32, i32* %154, i64 1
  %158 = add i64 %155, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %153, !llvm.loop !133

160:                                              ; preds = %153, %141
  %161 = phi i32* [ %142, %141 ], [ %157, %153 ]
  %162 = icmp ult i64 %148, 28
  br i1 %162, label %224, label %226

163:                                              ; preds = %134
  %164 = shl i64 %1, 2
  %165 = add i64 %164, -4
  %166 = sub i64 %165, %21
  %167 = lshr i64 %166, 2
  %168 = add nuw nsw i64 %167, 1
  %169 = getelementptr i32, i32* %130, i64 %168
  %170 = getelementptr i8, i8* %5, i64 1
  %171 = icmp ugt i8* %170, %131
  %172 = icmp ugt i32* %169, %2
  %173 = and i1 %171, %172
  br i1 %173, label %141, label %174

174:                                              ; preds = %163
  %175 = and i64 %139, 9223372036854775800
  %176 = getelementptr i32, i32* %130, i64 %175
  %177 = add nsw i64 %175, -8
  %178 = lshr exact i64 %177, 3
  %179 = add nuw nsw i64 %178, 1
  %180 = and i64 %179, 1
  %181 = icmp eq i64 %177, 0
  br i1 %181, label %209, label %182

182:                                              ; preds = %174
  %183 = sub nuw nsw i64 %179, %180
  %184 = load i32, i32* %2, align 4, !alias.scope !134
  %185 = insertelement <4 x i32> undef, i32 %184, i32 0
  %186 = shufflevector <4 x i32> %185, <4 x i32> undef, <4 x i32> zeroinitializer
  %187 = insertelement <4 x i32> undef, i32 %184, i32 0
  %188 = shufflevector <4 x i32> %187, <4 x i32> undef, <4 x i32> zeroinitializer
  %189 = load i32, i32* %2, align 4, !alias.scope !134
  %190 = insertelement <4 x i32> undef, i32 %189, i32 0
  %191 = shufflevector <4 x i32> %190, <4 x i32> undef, <4 x i32> zeroinitializer
  %192 = insertelement <4 x i32> undef, i32 %189, i32 0
  %193 = shufflevector <4 x i32> %192, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %194

194:                                              ; preds = %194, %182
  %195 = phi i64 [ 0, %182 ], [ %206, %194 ]
  %196 = phi i64 [ %183, %182 ], [ %207, %194 ]
  %197 = getelementptr i32, i32* %130, i64 %195
  %198 = bitcast i32* %197 to <4 x i32>*
  store <4 x i32> %186, <4 x i32>* %198, align 4, !alias.scope !137, !noalias !134
  %199 = getelementptr i32, i32* %197, i64 4
  %200 = bitcast i32* %199 to <4 x i32>*
  store <4 x i32> %188, <4 x i32>* %200, align 4, !alias.scope !137, !noalias !134
  %201 = or i64 %195, 8
  %202 = getelementptr i32, i32* %130, i64 %201
  %203 = bitcast i32* %202 to <4 x i32>*
  store <4 x i32> %191, <4 x i32>* %203, align 4, !alias.scope !137, !noalias !134
  %204 = getelementptr i32, i32* %202, i64 4
  %205 = bitcast i32* %204 to <4 x i32>*
  store <4 x i32> %193, <4 x i32>* %205, align 4, !alias.scope !137, !noalias !134
  %206 = add i64 %195, 16
  %207 = add i64 %196, -2
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %194, !llvm.loop !139

209:                                              ; preds = %194, %174
  %210 = phi i64 [ 0, %174 ], [ %206, %194 ]
  %211 = icmp eq i64 %180, 0
  br i1 %211, label %222, label %212

212:                                              ; preds = %209
  %213 = getelementptr i32, i32* %130, i64 %210
  %214 = load i32, i32* %2, align 4, !alias.scope !134
  %215 = insertelement <4 x i32> undef, i32 %214, i32 0
  %216 = shufflevector <4 x i32> %215, <4 x i32> undef, <4 x i32> zeroinitializer
  %217 = insertelement <4 x i32> undef, i32 %214, i32 0
  %218 = shufflevector <4 x i32> %217, <4 x i32> undef, <4 x i32> zeroinitializer
  %219 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> %216, <4 x i32>* %219, align 4, !alias.scope !137, !noalias !134
  %220 = getelementptr i32, i32* %213, i64 4
  %221 = bitcast i32* %220 to <4 x i32>*
  store <4 x i32> %218, <4 x i32>* %221, align 4, !alias.scope !137, !noalias !134
  br label %222

222:                                              ; preds = %209, %212
  %223 = icmp eq i64 %139, %175
  br i1 %223, label %224, label %141

224:                                              ; preds = %160, %226, %222
  %225 = ptrtoint i32* %132 to i64
  br label %245

226:                                              ; preds = %160, %226
  %227 = phi i32* [ %243, %226 ], [ %161, %160 ]
  %228 = load i32, i32* %2, align 4
  store i32 %228, i32* %227, align 4
  %229 = getelementptr inbounds i32, i32* %227, i64 1
  %230 = load i32, i32* %2, align 4
  store i32 %230, i32* %229, align 4
  %231 = getelementptr inbounds i32, i32* %227, i64 2
  %232 = load i32, i32* %2, align 4
  store i32 %232, i32* %231, align 4
  %233 = getelementptr inbounds i32, i32* %227, i64 3
  %234 = load i32, i32* %2, align 4
  store i32 %234, i32* %233, align 4
  %235 = getelementptr inbounds i32, i32* %227, i64 4
  %236 = load i32, i32* %2, align 4
  store i32 %236, i32* %235, align 4
  %237 = getelementptr inbounds i32, i32* %227, i64 5
  %238 = load i32, i32* %2, align 4
  store i32 %238, i32* %237, align 4
  %239 = getelementptr inbounds i32, i32* %227, i64 6
  %240 = load i32, i32* %2, align 4
  store i32 %240, i32* %239, align 4
  %241 = getelementptr inbounds i32, i32* %227, i64 7
  %242 = load i32, i32* %2, align 4
  store i32 %242, i32* %241, align 4
  %243 = getelementptr inbounds i32, i32* %227, i64 8
  %244 = icmp eq i32* %243, %132
  br i1 %244, label %224, label %226, !llvm.loop !140

245:                                              ; preds = %127, %224
  %246 = phi i64 [ %225, %224 ], [ %129, %127 ]
  store i64 %246, i64* %19, align 8
  br label %389

247:                                              ; preds = %126
  %248 = load i32*, i32** %23, align 8
  %249 = getelementptr inbounds i32, i32* %248, i64 %1
  store i32* %249, i32** %18, align 8
  br label %389

250:                                              ; preds = %3
  %251 = icmp eq i64 %11, 0
  br i1 %251, label %257, label %252

252:                                              ; preds = %250
  %253 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 1
  %254 = bitcast i32** %253 to i64*
  store i64 %11, i64* %254, align 8
  %255 = inttoptr i64 %11 to i8*
  tail call void @_ZdlPv(i8* %255) #21
  %256 = bitcast %"class.std::__1::vector.32"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %256, i8 0, i64 24, i1 false) #20
  br label %257

257:                                              ; preds = %250, %252
  %258 = phi i64 [ %9, %250 ], [ 0, %252 ]
  %259 = icmp ugt i64 %1, 4611686018427387903
  br i1 %259, label %260, label %262

260:                                              ; preds = %257
  %261 = bitcast %"class.std::__1::vector.32"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %261) #22
  unreachable

262:                                              ; preds = %257
  %263 = ashr exact i64 %258, 2
  %264 = icmp ult i64 %263, 2305843009213693951
  br i1 %264, label %265, label %272

265:                                              ; preds = %262
  %266 = ashr exact i64 %258, 1
  %267 = icmp ult i64 %266, %1
  br i1 %267, label %272, label %268

268:                                              ; preds = %265
  %269 = icmp ugt i64 %266, 4611686018427387903
  br i1 %269, label %270, label %272

270:                                              ; preds = %268
  %271 = bitcast %"class.std::__1::vector.32"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %271) #22
  unreachable

272:                                              ; preds = %265, %262, %268
  %273 = phi i64 [ %266, %268 ], [ 4611686018427387903, %262 ], [ %1, %265 ]
  %274 = shl i64 %273, 2
  %275 = tail call i8* @_Znwm(i64 %274) #21
  %276 = bitcast i8* %275 to i32*
  %277 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 1
  %278 = bitcast i32** %277 to i8**
  store i8* %275, i8** %278, align 8
  %279 = bitcast %"class.std::__1::vector.32"* %0 to i8**
  store i8* %275, i8** %279, align 8
  %280 = getelementptr inbounds i32, i32* %276, i64 %273
  store i32* %280, i32** %7, align 8
  %281 = getelementptr inbounds i32, i32* %276, i64 %1
  %282 = shl nsw i64 %1, 2
  %283 = add i64 %282, -4
  %284 = lshr exact i64 %283, 2
  %285 = add nuw nsw i64 %284, 1
  %286 = icmp ult i64 %285, 8
  br i1 %286, label %345, label %287

287:                                              ; preds = %272
  %288 = shl nsw i64 %1, 2
  %289 = getelementptr i8, i8* %275, i64 %288
  %290 = getelementptr i8, i8* %4, i64 1
  %291 = bitcast i32* %2 to i8*
  %292 = icmp ult i8* %275, %290
  %293 = icmp ugt i8* %289, %291
  %294 = and i1 %292, %293
  br i1 %294, label %345, label %295

295:                                              ; preds = %287
  %296 = and i64 %285, 9223372036854775800
  %297 = getelementptr i32, i32* %276, i64 %296
  %298 = add nsw i64 %296, -8
  %299 = lshr exact i64 %298, 3
  %300 = add nuw nsw i64 %299, 1
  %301 = and i64 %300, 1
  %302 = icmp eq i64 %298, 0
  br i1 %302, label %330, label %303

303:                                              ; preds = %295
  %304 = sub nuw nsw i64 %300, %301
  %305 = load i32, i32* %2, align 4, !alias.scope !141
  %306 = insertelement <4 x i32> undef, i32 %305, i32 0
  %307 = shufflevector <4 x i32> %306, <4 x i32> undef, <4 x i32> zeroinitializer
  %308 = insertelement <4 x i32> undef, i32 %305, i32 0
  %309 = shufflevector <4 x i32> %308, <4 x i32> undef, <4 x i32> zeroinitializer
  %310 = load i32, i32* %2, align 4, !alias.scope !141
  %311 = insertelement <4 x i32> undef, i32 %310, i32 0
  %312 = shufflevector <4 x i32> %311, <4 x i32> undef, <4 x i32> zeroinitializer
  %313 = insertelement <4 x i32> undef, i32 %310, i32 0
  %314 = shufflevector <4 x i32> %313, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %315

315:                                              ; preds = %315, %303
  %316 = phi i64 [ 0, %303 ], [ %327, %315 ]
  %317 = phi i64 [ %304, %303 ], [ %328, %315 ]
  %318 = getelementptr i32, i32* %276, i64 %316
  %319 = bitcast i32* %318 to <4 x i32>*
  store <4 x i32> %307, <4 x i32>* %319, align 4, !alias.scope !144, !noalias !141
  %320 = getelementptr i32, i32* %318, i64 4
  %321 = bitcast i32* %320 to <4 x i32>*
  store <4 x i32> %309, <4 x i32>* %321, align 4, !alias.scope !144, !noalias !141
  %322 = or i64 %316, 8
  %323 = getelementptr i32, i32* %276, i64 %322
  %324 = bitcast i32* %323 to <4 x i32>*
  store <4 x i32> %312, <4 x i32>* %324, align 4, !alias.scope !144, !noalias !141
  %325 = getelementptr i32, i32* %323, i64 4
  %326 = bitcast i32* %325 to <4 x i32>*
  store <4 x i32> %314, <4 x i32>* %326, align 4, !alias.scope !144, !noalias !141
  %327 = add i64 %316, 16
  %328 = add i64 %317, -2
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %330, label %315, !llvm.loop !146

330:                                              ; preds = %315, %295
  %331 = phi i64 [ 0, %295 ], [ %327, %315 ]
  %332 = icmp eq i64 %301, 0
  br i1 %332, label %343, label %333

333:                                              ; preds = %330
  %334 = getelementptr i32, i32* %276, i64 %331
  %335 = load i32, i32* %2, align 4, !alias.scope !141
  %336 = insertelement <4 x i32> undef, i32 %335, i32 0
  %337 = shufflevector <4 x i32> %336, <4 x i32> undef, <4 x i32> zeroinitializer
  %338 = insertelement <4 x i32> undef, i32 %335, i32 0
  %339 = shufflevector <4 x i32> %338, <4 x i32> undef, <4 x i32> zeroinitializer
  %340 = bitcast i32* %334 to <4 x i32>*
  store <4 x i32> %337, <4 x i32>* %340, align 4, !alias.scope !144, !noalias !141
  %341 = getelementptr i32, i32* %334, i64 4
  %342 = bitcast i32* %341 to <4 x i32>*
  store <4 x i32> %339, <4 x i32>* %342, align 4, !alias.scope !144, !noalias !141
  br label %343

343:                                              ; preds = %330, %333
  %344 = icmp eq i64 %285, %296
  br i1 %344, label %386, label %345

345:                                              ; preds = %343, %287, %272
  %346 = phi i32* [ %276, %287 ], [ %276, %272 ], [ %297, %343 ]
  %347 = ptrtoint i32* %346 to i64
  %348 = shl nsw i64 %1, 2
  %349 = add i64 %348, -4
  %350 = sub i64 %349, %347
  %351 = getelementptr i8, i8* %275, i64 %350
  %352 = ptrtoint i8* %351 to i64
  %353 = lshr i64 %352, 2
  %354 = add nuw nsw i64 %353, 1
  %355 = and i64 %354, 7
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %364, label %357

357:                                              ; preds = %345, %357
  %358 = phi i32* [ %361, %357 ], [ %346, %345 ]
  %359 = phi i64 [ %362, %357 ], [ %355, %345 ]
  %360 = load i32, i32* %2, align 4
  store i32 %360, i32* %358, align 4
  %361 = getelementptr inbounds i32, i32* %358, i64 1
  %362 = add i64 %359, -1
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %364, label %357, !llvm.loop !147

364:                                              ; preds = %357, %345
  %365 = phi i32* [ %346, %345 ], [ %361, %357 ]
  %366 = icmp ult i8* %351, inttoptr (i64 28 to i8*)
  br i1 %366, label %386, label %367

367:                                              ; preds = %364, %367
  %368 = phi i32* [ %384, %367 ], [ %365, %364 ]
  %369 = load i32, i32* %2, align 4
  store i32 %369, i32* %368, align 4
  %370 = getelementptr inbounds i32, i32* %368, i64 1
  %371 = load i32, i32* %2, align 4
  store i32 %371, i32* %370, align 4
  %372 = getelementptr inbounds i32, i32* %368, i64 2
  %373 = load i32, i32* %2, align 4
  store i32 %373, i32* %372, align 4
  %374 = getelementptr inbounds i32, i32* %368, i64 3
  %375 = load i32, i32* %2, align 4
  store i32 %375, i32* %374, align 4
  %376 = getelementptr inbounds i32, i32* %368, i64 4
  %377 = load i32, i32* %2, align 4
  store i32 %377, i32* %376, align 4
  %378 = getelementptr inbounds i32, i32* %368, i64 5
  %379 = load i32, i32* %2, align 4
  store i32 %379, i32* %378, align 4
  %380 = getelementptr inbounds i32, i32* %368, i64 6
  %381 = load i32, i32* %2, align 4
  store i32 %381, i32* %380, align 4
  %382 = getelementptr inbounds i32, i32* %368, i64 7
  %383 = load i32, i32* %2, align 4
  store i32 %383, i32* %382, align 4
  %384 = getelementptr inbounds i32, i32* %368, i64 8
  %385 = icmp eq i32* %384, %281
  br i1 %385, label %386, label %367, !llvm.loop !148

386:                                              ; preds = %364, %367, %343
  %387 = bitcast i32** %277 to i64*
  %388 = ptrtoint i32* %281 to i64
  store i64 %388, i64* %387, align 8
  br label %389

389:                                              ; preds = %245, %247, %386
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEvT0_SB_T_"(%"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"*, %class.anon.63* readonly dereferenceable(8)) unnamed_addr #2 {
  %4 = getelementptr inbounds %class.anon.63, %class.anon.63* %2, i64 0, i32 0
  br label %5

5:                                                ; preds = %817, %3
  %6 = phi %"struct.flatbuffers::Offset.1"* [ %1, %3 ], [ %736, %817 ]
  %7 = phi %"struct.flatbuffers::Offset.1"* [ %0, %3 ], [ %15, %817 ]
  %8 = ptrtoint %"struct.flatbuffers::Offset.1"* %6 to i64
  %9 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %6, i64 -1
  %10 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %9, i64 0, i32 0
  %11 = ptrtoint %"struct.flatbuffers::Offset.1"* %6 to i64
  br label %12

12:                                               ; preds = %826, %5
  %13 = phi %"struct.flatbuffers::Offset.1"* [ %7, %5 ], [ %827, %826 ]
  br label %14

14:                                               ; preds = %557, %12
  %15 = phi %"struct.flatbuffers::Offset.1"* [ %13, %12 ], [ %476, %557 ]
  %16 = ptrtoint %"struct.flatbuffers::Offset.1"* %15 to i64
  %17 = sub i64 %8, %16
  %18 = ashr exact i64 %17, 2
  switch i64 %18, label %104 [
    i64 0, label %830
    i64 1, label %830
    i64 2, label %19
    i64 3, label %89
    i64 4, label %93
    i64 5, label %98
  ]

19:                                               ; preds = %14
  %20 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %4, align 8
  %21 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %20, i64 0, i32 2
  %22 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %21, align 8
  %23 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %6, i64 -1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %22, i64 0, i32 0, i32 6
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %22, i64 0, i32 0, i32 4
  %28 = load i64, i64* %27, align 8
  %29 = ptrtoint i8* %26 to i64
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %22, i64 0, i32 0, i32 5
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %28, %29
  %34 = add i64 %33, %32
  %35 = and i64 %34, 4294967295
  %36 = getelementptr inbounds i8, i8* %26, i64 %35
  %37 = zext i32 %24 to i64
  %38 = sub nsw i64 0, %37
  %39 = getelementptr inbounds i8, i8* %36, i64 %38
  %40 = bitcast i8* %39 to %"struct.url_pattern_index::flat::UrlRule"*
  %41 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %15, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = sub nsw i64 0, %43
  %45 = getelementptr inbounds i8, i8* %36, i64 %44
  %46 = bitcast i8* %45 to %"struct.url_pattern_index::flat::UrlRule"*
  %47 = bitcast i8* %39 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = sext i32 %48 to i64
  %50 = sub nsw i64 0, %49
  %51 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %40, i64 0, i32 0, i32 0, i64 %50
  %52 = bitcast i8* %51 to i16*
  %53 = load i16, i16* %52, align 2
  %54 = icmp ugt i16 %53, 26
  br i1 %54, label %55, label %65

55:                                               ; preds = %19
  %56 = getelementptr inbounds i8, i8* %51, i64 26
  %57 = bitcast i8* %56 to i16*
  %58 = load i16, i16* %57, align 2
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = zext i16 %58 to i64
  %62 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %40, i64 0, i32 0, i32 0, i64 %61
  %63 = bitcast i8* %62 to i64*
  %64 = load i64, i64* %63, align 8
  br label %65

65:                                               ; preds = %60, %55, %19
  %66 = phi i64 [ %64, %60 ], [ 0, %55 ], [ 0, %19 ]
  %67 = bitcast i8* %45 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = sub nsw i64 0, %69
  %71 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %46, i64 0, i32 0, i32 0, i64 %70
  %72 = bitcast i8* %71 to i16*
  %73 = load i16, i16* %72, align 2
  %74 = icmp ugt i16 %73, 26
  br i1 %74, label %75, label %85

75:                                               ; preds = %65
  %76 = getelementptr inbounds i8, i8* %71, i64 26
  %77 = bitcast i8* %76 to i16*
  %78 = load i16, i16* %77, align 2
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %75
  %81 = zext i16 %78 to i64
  %82 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %46, i64 0, i32 0, i32 0, i64 %81
  %83 = bitcast i8* %82 to i64*
  %84 = load i64, i64* %83, align 8
  br label %85

85:                                               ; preds = %65, %75, %80
  %86 = phi i64 [ %84, %80 ], [ 0, %75 ], [ 0, %65 ]
  %87 = icmp ugt i64 %66, %86
  br i1 %87, label %88, label %830

88:                                               ; preds = %85
  store i32 %24, i32* %41, align 4
  store i32 %42, i32* %23, align 4
  br label %830

89:                                               ; preds = %14
  %90 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %15, i64 1
  %91 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %6, i64 -1
  %92 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEjT0_SB_SB_T_"(%"struct.flatbuffers::Offset.1"* %15, %"struct.flatbuffers::Offset.1"* %90, %"struct.flatbuffers::Offset.1"* %91, %class.anon.63* dereferenceable(8) %2)
  br label %830

93:                                               ; preds = %14
  %94 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %15, i64 1
  %95 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %15, i64 2
  %96 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %6, i64 -1
  %97 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEjT0_SB_SB_SB_T_"(%"struct.flatbuffers::Offset.1"* %15, %"struct.flatbuffers::Offset.1"* %94, %"struct.flatbuffers::Offset.1"* %95, %"struct.flatbuffers::Offset.1"* %96, %class.anon.63* dereferenceable(8) %2)
  br label %830

98:                                               ; preds = %14
  %99 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %15, i64 1
  %100 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %15, i64 2
  %101 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %15, i64 3
  %102 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %6, i64 -1
  %103 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEjT0_SB_SB_SB_SB_T_"(%"struct.flatbuffers::Offset.1"* %15, %"struct.flatbuffers::Offset.1"* %99, %"struct.flatbuffers::Offset.1"* %100, %"struct.flatbuffers::Offset.1"* %101, %"struct.flatbuffers::Offset.1"* %102, %class.anon.63* dereferenceable(8) %2)
  br label %830

104:                                              ; preds = %14
  %105 = icmp slt i64 %17, 124
  br i1 %105, label %106, label %261

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %15, i64 2
  %108 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %15, i64 1
  %109 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEjT0_SB_SB_T_"(%"struct.flatbuffers::Offset.1"* %15, %"struct.flatbuffers::Offset.1"* %108, %"struct.flatbuffers::Offset.1"* %107, %class.anon.63* dereferenceable(8) %2) #20
  %110 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %15, i64 3
  %111 = icmp eq %"struct.flatbuffers::Offset.1"* %110, %6
  br i1 %111, label %830, label %112

112:                                              ; preds = %106, %258
  %113 = phi %"struct.flatbuffers::Offset.1"* [ %259, %258 ], [ %110, %106 ]
  %114 = phi %"struct.flatbuffers::Offset.1"* [ %113, %258 ], [ %107, %106 ]
  %115 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %4, align 8
  %116 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %115, i64 0, i32 2
  %117 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %116, align 8
  %118 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %113, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %117, i64 0, i32 0, i32 6
  %121 = load i8*, i8** %120, align 8
  %122 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %117, i64 0, i32 0, i32 4
  %123 = load i64, i64* %122, align 8
  %124 = ptrtoint i8* %121 to i64
  %125 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %117, i64 0, i32 0, i32 5
  %126 = bitcast i8** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = sub i64 %123, %124
  %129 = add i64 %128, %127
  %130 = and i64 %129, 4294967295
  %131 = getelementptr inbounds i8, i8* %121, i64 %130
  %132 = zext i32 %119 to i64
  %133 = sub nsw i64 0, %132
  %134 = getelementptr inbounds i8, i8* %131, i64 %133
  %135 = bitcast i8* %134 to %"struct.url_pattern_index::flat::UrlRule"*
  %136 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %114, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = zext i32 %137 to i64
  %139 = sub nsw i64 0, %138
  %140 = getelementptr inbounds i8, i8* %131, i64 %139
  %141 = bitcast i8* %140 to %"struct.url_pattern_index::flat::UrlRule"*
  %142 = bitcast i8* %134 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = sext i32 %143 to i64
  %145 = sub nsw i64 0, %144
  %146 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %135, i64 0, i32 0, i32 0, i64 %145
  %147 = bitcast i8* %146 to i16*
  %148 = load i16, i16* %147, align 2
  %149 = icmp ugt i16 %148, 26
  br i1 %149, label %150, label %160

150:                                              ; preds = %112
  %151 = getelementptr inbounds i8, i8* %146, i64 26
  %152 = bitcast i8* %151 to i16*
  %153 = load i16, i16* %152, align 2
  %154 = icmp eq i16 %153, 0
  br i1 %154, label %160, label %155

155:                                              ; preds = %150
  %156 = zext i16 %153 to i64
  %157 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %135, i64 0, i32 0, i32 0, i64 %156
  %158 = bitcast i8* %157 to i64*
  %159 = load i64, i64* %158, align 8
  br label %160

160:                                              ; preds = %155, %150, %112
  %161 = phi i64 [ %159, %155 ], [ 0, %150 ], [ 0, %112 ]
  %162 = bitcast i8* %140 to i32*
  %163 = load i32, i32* %162, align 4
  %164 = sext i32 %163 to i64
  %165 = sub nsw i64 0, %164
  %166 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %141, i64 0, i32 0, i32 0, i64 %165
  %167 = bitcast i8* %166 to i16*
  %168 = load i16, i16* %167, align 2
  %169 = icmp ugt i16 %168, 26
  br i1 %169, label %170, label %180

170:                                              ; preds = %160
  %171 = getelementptr inbounds i8, i8* %166, i64 26
  %172 = bitcast i8* %171 to i16*
  %173 = load i16, i16* %172, align 2
  %174 = icmp eq i16 %173, 0
  br i1 %174, label %180, label %175

175:                                              ; preds = %170
  %176 = zext i16 %173 to i64
  %177 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %141, i64 0, i32 0, i32 0, i64 %176
  %178 = bitcast i8* %177 to i64*
  %179 = load i64, i64* %178, align 8
  br label %180

180:                                              ; preds = %175, %170, %160
  %181 = phi i64 [ %179, %175 ], [ 0, %170 ], [ 0, %160 ]
  %182 = icmp ugt i64 %161, %181
  br i1 %182, label %183, label %258

183:                                              ; preds = %180, %252
  %184 = phi i32 [ %209, %252 ], [ %137, %180 ]
  %185 = phi %"struct.flatbuffers::Offset.1"* [ %186, %252 ], [ %113, %180 ]
  %186 = phi %"struct.flatbuffers::Offset.1"* [ %190, %252 ], [ %114, %180 ]
  %187 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %185, i64 0, i32 0
  store i32 %184, i32* %187, align 4
  %188 = icmp eq %"struct.flatbuffers::Offset.1"* %186, %15
  br i1 %188, label %255, label %189

189:                                              ; preds = %183
  %190 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %186, i64 -1
  %191 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %4, align 8
  %192 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %191, i64 0, i32 2
  %193 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %192, align 8
  %194 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %193, i64 0, i32 0, i32 6
  %195 = load i8*, i8** %194, align 8
  %196 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %193, i64 0, i32 0, i32 4
  %197 = load i64, i64* %196, align 8
  %198 = ptrtoint i8* %195 to i64
  %199 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %193, i64 0, i32 0, i32 5
  %200 = bitcast i8** %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = sub i64 %197, %198
  %203 = add i64 %202, %201
  %204 = and i64 %203, 4294967295
  %205 = getelementptr inbounds i8, i8* %195, i64 %204
  %206 = getelementptr inbounds i8, i8* %205, i64 %133
  %207 = bitcast i8* %206 to %"struct.url_pattern_index::flat::UrlRule"*
  %208 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %190, i64 0, i32 0
  %209 = load i32, i32* %208, align 4
  %210 = zext i32 %209 to i64
  %211 = sub nsw i64 0, %210
  %212 = getelementptr inbounds i8, i8* %205, i64 %211
  %213 = bitcast i8* %212 to %"struct.url_pattern_index::flat::UrlRule"*
  %214 = bitcast i8* %206 to i32*
  %215 = load i32, i32* %214, align 4
  %216 = sext i32 %215 to i64
  %217 = sub nsw i64 0, %216
  %218 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %207, i64 0, i32 0, i32 0, i64 %217
  %219 = bitcast i8* %218 to i16*
  %220 = load i16, i16* %219, align 2
  %221 = icmp ugt i16 %220, 26
  br i1 %221, label %222, label %232

222:                                              ; preds = %189
  %223 = getelementptr inbounds i8, i8* %218, i64 26
  %224 = bitcast i8* %223 to i16*
  %225 = load i16, i16* %224, align 2
  %226 = icmp eq i16 %225, 0
  br i1 %226, label %232, label %227

227:                                              ; preds = %222
  %228 = zext i16 %225 to i64
  %229 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %207, i64 0, i32 0, i32 0, i64 %228
  %230 = bitcast i8* %229 to i64*
  %231 = load i64, i64* %230, align 8
  br label %232

232:                                              ; preds = %227, %222, %189
  %233 = phi i64 [ %231, %227 ], [ 0, %222 ], [ 0, %189 ]
  %234 = bitcast i8* %212 to i32*
  %235 = load i32, i32* %234, align 4
  %236 = sext i32 %235 to i64
  %237 = sub nsw i64 0, %236
  %238 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %213, i64 0, i32 0, i32 0, i64 %237
  %239 = bitcast i8* %238 to i16*
  %240 = load i16, i16* %239, align 2
  %241 = icmp ugt i16 %240, 26
  br i1 %241, label %242, label %252

242:                                              ; preds = %232
  %243 = getelementptr inbounds i8, i8* %238, i64 26
  %244 = bitcast i8* %243 to i16*
  %245 = load i16, i16* %244, align 2
  %246 = icmp eq i16 %245, 0
  br i1 %246, label %252, label %247

247:                                              ; preds = %242
  %248 = zext i16 %245 to i64
  %249 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %213, i64 0, i32 0, i32 0, i64 %248
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 8
  br label %252

252:                                              ; preds = %247, %242, %232
  %253 = phi i64 [ %251, %247 ], [ 0, %242 ], [ 0, %232 ]
  %254 = icmp ugt i64 %233, %253
  br i1 %254, label %183, label %255

255:                                              ; preds = %252, %183
  %256 = phi %"struct.flatbuffers::Offset.1"* [ %15, %183 ], [ %186, %252 ]
  %257 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %256, i64 0, i32 0
  store i32 %119, i32* %257, align 4
  br label %258

258:                                              ; preds = %255, %180
  %259 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %113, i64 1
  %260 = icmp eq %"struct.flatbuffers::Offset.1"* %259, %6
  br i1 %260, label %830, label %112

261:                                              ; preds = %104
  %262 = icmp sgt i64 %17, 3996
  %263 = sdiv i64 %18, 2
  %264 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %15, i64 %263
  br i1 %262, label %265, label %270

265:                                              ; preds = %261
  %266 = sdiv i64 %18, 4
  %267 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %15, i64 %266
  %268 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %264, i64 %266
  %269 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEjT0_SB_SB_SB_SB_T_"(%"struct.flatbuffers::Offset.1"* %15, %"struct.flatbuffers::Offset.1"* %267, %"struct.flatbuffers::Offset.1"* %264, %"struct.flatbuffers::Offset.1"* %268, %"struct.flatbuffers::Offset.1"* %9, %class.anon.63* dereferenceable(8) %2)
  br label %272

270:                                              ; preds = %261
  %271 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEjT0_SB_SB_T_"(%"struct.flatbuffers::Offset.1"* %15, %"struct.flatbuffers::Offset.1"* %264, %"struct.flatbuffers::Offset.1"* %9, %class.anon.63* dereferenceable(8) %2)
  br label %272

272:                                              ; preds = %270, %265
  %273 = phi i32 [ %269, %265 ], [ %271, %270 ]
  %274 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %4, align 8
  %275 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %274, i64 0, i32 2
  %276 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %275, align 8
  %277 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %15, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  %279 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %276, i64 0, i32 0, i32 6
  %280 = load i8*, i8** %279, align 8
  %281 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %276, i64 0, i32 0, i32 4
  %282 = load i64, i64* %281, align 8
  %283 = ptrtoint i8* %280 to i64
  %284 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %276, i64 0, i32 0, i32 5
  %285 = bitcast i8** %284 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = sub i64 %282, %283
  %288 = add i64 %287, %286
  %289 = and i64 %288, 4294967295
  %290 = getelementptr inbounds i8, i8* %280, i64 %289
  %291 = zext i32 %278 to i64
  %292 = sub nsw i64 0, %291
  %293 = getelementptr inbounds i8, i8* %290, i64 %292
  %294 = bitcast i8* %293 to %"struct.url_pattern_index::flat::UrlRule"*
  %295 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %264, i64 0, i32 0
  %296 = load i32, i32* %295, align 4
  %297 = zext i32 %296 to i64
  %298 = sub nsw i64 0, %297
  %299 = getelementptr inbounds i8, i8* %290, i64 %298
  %300 = bitcast i8* %299 to %"struct.url_pattern_index::flat::UrlRule"*
  %301 = bitcast i8* %293 to i32*
  %302 = load i32, i32* %301, align 4
  %303 = sext i32 %302 to i64
  %304 = sub nsw i64 0, %303
  %305 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %294, i64 0, i32 0, i32 0, i64 %304
  %306 = bitcast i8* %305 to i16*
  %307 = load i16, i16* %306, align 2
  %308 = icmp ugt i16 %307, 26
  br i1 %308, label %309, label %319

309:                                              ; preds = %272
  %310 = getelementptr inbounds i8, i8* %305, i64 26
  %311 = bitcast i8* %310 to i16*
  %312 = load i16, i16* %311, align 2
  %313 = icmp eq i16 %312, 0
  br i1 %313, label %319, label %314

314:                                              ; preds = %309
  %315 = zext i16 %312 to i64
  %316 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %294, i64 0, i32 0, i32 0, i64 %315
  %317 = bitcast i8* %316 to i64*
  %318 = load i64, i64* %317, align 8
  br label %319

319:                                              ; preds = %314, %309, %272
  %320 = phi i64 [ %318, %314 ], [ 0, %309 ], [ 0, %272 ]
  %321 = bitcast i8* %299 to i32*
  %322 = load i32, i32* %321, align 4
  %323 = sext i32 %322 to i64
  %324 = sub nsw i64 0, %323
  %325 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %300, i64 0, i32 0, i32 0, i64 %324
  %326 = bitcast i8* %325 to i16*
  %327 = load i16, i16* %326, align 2
  %328 = icmp ugt i16 %327, 26
  br i1 %328, label %329, label %339

329:                                              ; preds = %319
  %330 = getelementptr inbounds i8, i8* %325, i64 26
  %331 = bitcast i8* %330 to i16*
  %332 = load i16, i16* %331, align 2
  %333 = icmp eq i16 %332, 0
  br i1 %333, label %339, label %334

334:                                              ; preds = %329
  %335 = zext i16 %332 to i64
  %336 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %300, i64 0, i32 0, i32 0, i64 %335
  %337 = bitcast i8* %336 to i64*
  %338 = load i64, i64* %337, align 8
  br label %339

339:                                              ; preds = %319, %329, %334
  %340 = phi i64 [ %338, %334 ], [ 0, %329 ], [ 0, %319 ]
  %341 = icmp ugt i64 %320, %340
  br i1 %341, label %602, label %342

342:                                              ; preds = %339
  %343 = getelementptr inbounds i8, i8* %325, i64 26
  %344 = bitcast i8* %343 to i16*
  br label %345

345:                                              ; preds = %342, %596
  %346 = phi %"struct.flatbuffers::Offset.1"* [ %347, %596 ], [ %9, %342 ]
  %347 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %346, i64 -1
  %348 = icmp eq %"struct.flatbuffers::Offset.1"* %15, %347
  br i1 %348, label %349, label %561

349:                                              ; preds = %345
  %350 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %15, i64 1
  %351 = load i32, i32* %10, align 4
  %352 = zext i32 %351 to i64
  %353 = sub nsw i64 0, %352
  %354 = getelementptr inbounds i8, i8* %290, i64 %353
  %355 = bitcast i8* %354 to %"struct.url_pattern_index::flat::UrlRule"*
  br i1 %308, label %356, label %366

356:                                              ; preds = %349
  %357 = getelementptr inbounds i8, i8* %305, i64 26
  %358 = bitcast i8* %357 to i16*
  %359 = load i16, i16* %358, align 2
  %360 = icmp eq i16 %359, 0
  br i1 %360, label %366, label %361

361:                                              ; preds = %356
  %362 = zext i16 %359 to i64
  %363 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %294, i64 0, i32 0, i32 0, i64 %362
  %364 = bitcast i8* %363 to i64*
  %365 = load i64, i64* %364, align 8
  br label %366

366:                                              ; preds = %361, %356, %349
  %367 = phi i64 [ %365, %361 ], [ 0, %356 ], [ 0, %349 ]
  %368 = bitcast i8* %354 to i32*
  %369 = load i32, i32* %368, align 4
  %370 = sext i32 %369 to i64
  %371 = sub nsw i64 0, %370
  %372 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %355, i64 0, i32 0, i32 0, i64 %371
  %373 = bitcast i8* %372 to i16*
  %374 = load i16, i16* %373, align 2
  %375 = icmp ugt i16 %374, 26
  br i1 %375, label %376, label %386

376:                                              ; preds = %366
  %377 = getelementptr inbounds i8, i8* %372, i64 26
  %378 = bitcast i8* %377 to i16*
  %379 = load i16, i16* %378, align 2
  %380 = icmp eq i16 %379, 0
  br i1 %380, label %386, label %381

381:                                              ; preds = %376
  %382 = zext i16 %379 to i64
  %383 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %355, i64 0, i32 0, i32 0, i64 %382
  %384 = bitcast i8* %383 to i64*
  %385 = load i64, i64* %384, align 8
  br label %386

386:                                              ; preds = %366, %376, %381
  %387 = phi i64 [ %385, %381 ], [ 0, %376 ], [ 0, %366 ]
  %388 = icmp ugt i64 %367, %387
  br i1 %388, label %439, label %389

389:                                              ; preds = %386
  %390 = icmp eq %"struct.flatbuffers::Offset.1"* %350, %9
  br i1 %390, label %830, label %391

391:                                              ; preds = %389
  %392 = getelementptr inbounds i8, i8* %305, i64 26
  %393 = bitcast i8* %392 to i16*
  br label %394

394:                                              ; preds = %391, %436
  %395 = phi %"struct.flatbuffers::Offset.1"* [ %350, %391 ], [ %437, %436 ]
  %396 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %395, i64 0, i32 0
  %397 = load i32, i32* %396, align 4
  %398 = zext i32 %397 to i64
  %399 = sub nsw i64 0, %398
  %400 = getelementptr inbounds i8, i8* %290, i64 %399
  %401 = bitcast i8* %400 to %"struct.url_pattern_index::flat::UrlRule"*
  br i1 %308, label %402, label %410

402:                                              ; preds = %394
  %403 = load i16, i16* %393, align 2
  %404 = icmp eq i16 %403, 0
  br i1 %404, label %410, label %405

405:                                              ; preds = %402
  %406 = zext i16 %403 to i64
  %407 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %294, i64 0, i32 0, i32 0, i64 %406
  %408 = bitcast i8* %407 to i64*
  %409 = load i64, i64* %408, align 8
  br label %410

410:                                              ; preds = %405, %402, %394
  %411 = phi i64 [ %409, %405 ], [ 0, %402 ], [ 0, %394 ]
  %412 = bitcast i8* %400 to i32*
  %413 = load i32, i32* %412, align 4
  %414 = sext i32 %413 to i64
  %415 = sub nsw i64 0, %414
  %416 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %401, i64 0, i32 0, i32 0, i64 %415
  %417 = bitcast i8* %416 to i16*
  %418 = load i16, i16* %417, align 2
  %419 = icmp ugt i16 %418, 26
  br i1 %419, label %420, label %430

420:                                              ; preds = %410
  %421 = getelementptr inbounds i8, i8* %416, i64 26
  %422 = bitcast i8* %421 to i16*
  %423 = load i16, i16* %422, align 2
  %424 = icmp eq i16 %423, 0
  br i1 %424, label %430, label %425

425:                                              ; preds = %420
  %426 = zext i16 %423 to i64
  %427 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %401, i64 0, i32 0, i32 0, i64 %426
  %428 = bitcast i8* %427 to i64*
  %429 = load i64, i64* %428, align 8
  br label %430

430:                                              ; preds = %410, %420, %425
  %431 = phi i64 [ %429, %425 ], [ 0, %420 ], [ 0, %410 ]
  %432 = icmp ugt i64 %411, %431
  br i1 %432, label %433, label %436

433:                                              ; preds = %430
  %434 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %395, i64 0, i32 0
  store i32 %351, i32* %434, align 4
  store i32 %397, i32* %10, align 4
  %435 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %395, i64 1
  br label %439

436:                                              ; preds = %430
  %437 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %395, i64 1
  %438 = icmp eq %"struct.flatbuffers::Offset.1"* %437, %9
  br i1 %438, label %830, label %394

439:                                              ; preds = %433, %386
  %440 = phi %"struct.flatbuffers::Offset.1"* [ %350, %386 ], [ %435, %433 ]
  %441 = icmp eq %"struct.flatbuffers::Offset.1"* %440, %9
  br i1 %441, label %830, label %442

442:                                              ; preds = %439, %559
  %443 = phi %"struct.flatbuffers::Offset.1"* [ %514, %559 ], [ %440, %439 ]
  %444 = phi %"struct.flatbuffers::Offset.1"* [ %519, %559 ], [ %9, %439 ]
  %445 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %4, align 8
  %446 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %445, i64 0, i32 2
  %447 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %446, align 8
  %448 = load i32, i32* %277, align 4
  %449 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %447, i64 0, i32 0, i32 6
  %450 = load i8*, i8** %449, align 8
  %451 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %447, i64 0, i32 0, i32 4
  %452 = load i64, i64* %451, align 8
  %453 = ptrtoint i8* %450 to i64
  %454 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %447, i64 0, i32 0, i32 5
  %455 = bitcast i8** %454 to i64*
  %456 = load i64, i64* %455, align 8
  %457 = sub i64 %452, %453
  %458 = add i64 %457, %456
  %459 = and i64 %458, 4294967295
  %460 = getelementptr inbounds i8, i8* %450, i64 %459
  %461 = zext i32 %448 to i64
  %462 = sub nsw i64 0, %461
  %463 = getelementptr inbounds i8, i8* %460, i64 %462
  %464 = bitcast i8* %463 to %"struct.url_pattern_index::flat::UrlRule"*
  %465 = bitcast i8* %463 to i32*
  %466 = load i32, i32* %465, align 4
  %467 = sext i32 %466 to i64
  %468 = sub nsw i64 0, %467
  %469 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %464, i64 0, i32 0, i32 0, i64 %468
  %470 = bitcast i8* %469 to i16*
  %471 = load i16, i16* %470, align 2
  %472 = icmp ugt i16 %471, 26
  %473 = getelementptr inbounds i8, i8* %469, i64 26
  %474 = bitcast i8* %473 to i16*
  br label %475

475:                                              ; preds = %511, %442
  %476 = phi %"struct.flatbuffers::Offset.1"* [ %443, %442 ], [ %514, %511 ]
  %477 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %476, i64 0, i32 0
  %478 = load i32, i32* %477, align 4
  %479 = zext i32 %478 to i64
  %480 = sub nsw i64 0, %479
  %481 = getelementptr inbounds i8, i8* %460, i64 %480
  %482 = bitcast i8* %481 to %"struct.url_pattern_index::flat::UrlRule"*
  br i1 %472, label %483, label %491

483:                                              ; preds = %475
  %484 = load i16, i16* %474, align 2
  %485 = icmp eq i16 %484, 0
  br i1 %485, label %491, label %486

486:                                              ; preds = %483
  %487 = zext i16 %484 to i64
  %488 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %464, i64 0, i32 0, i32 0, i64 %487
  %489 = bitcast i8* %488 to i64*
  %490 = load i64, i64* %489, align 8
  br label %491

491:                                              ; preds = %486, %483, %475
  %492 = phi i64 [ %490, %486 ], [ 0, %483 ], [ 0, %475 ]
  %493 = bitcast i8* %481 to i32*
  %494 = load i32, i32* %493, align 4
  %495 = sext i32 %494 to i64
  %496 = sub nsw i64 0, %495
  %497 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %482, i64 0, i32 0, i32 0, i64 %496
  %498 = bitcast i8* %497 to i16*
  %499 = load i16, i16* %498, align 2
  %500 = icmp ugt i16 %499, 26
  br i1 %500, label %501, label %511

501:                                              ; preds = %491
  %502 = getelementptr inbounds i8, i8* %497, i64 26
  %503 = bitcast i8* %502 to i16*
  %504 = load i16, i16* %503, align 2
  %505 = icmp eq i16 %504, 0
  br i1 %505, label %511, label %506

506:                                              ; preds = %501
  %507 = zext i16 %504 to i64
  %508 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %482, i64 0, i32 0, i32 0, i64 %507
  %509 = bitcast i8* %508 to i64*
  %510 = load i64, i64* %509, align 8
  br label %511

511:                                              ; preds = %491, %501, %506
  %512 = phi i64 [ %510, %506 ], [ 0, %501 ], [ 0, %491 ]
  %513 = icmp ugt i64 %492, %512
  %514 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %476, i64 1
  br i1 %513, label %515, label %475

515:                                              ; preds = %511
  %516 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %476, i64 0, i32 0
  br label %517

517:                                              ; preds = %515, %554
  %518 = phi %"struct.flatbuffers::Offset.1"* [ %519, %554 ], [ %444, %515 ]
  %519 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %518, i64 -1
  %520 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %519, i64 0, i32 0
  %521 = load i32, i32* %520, align 4
  %522 = zext i32 %521 to i64
  %523 = sub nsw i64 0, %522
  %524 = getelementptr inbounds i8, i8* %460, i64 %523
  %525 = bitcast i8* %524 to %"struct.url_pattern_index::flat::UrlRule"*
  br i1 %472, label %526, label %534

526:                                              ; preds = %517
  %527 = load i16, i16* %474, align 2
  %528 = icmp eq i16 %527, 0
  br i1 %528, label %534, label %529

529:                                              ; preds = %526
  %530 = zext i16 %527 to i64
  %531 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %464, i64 0, i32 0, i32 0, i64 %530
  %532 = bitcast i8* %531 to i64*
  %533 = load i64, i64* %532, align 8
  br label %534

534:                                              ; preds = %529, %526, %517
  %535 = phi i64 [ %533, %529 ], [ 0, %526 ], [ 0, %517 ]
  %536 = bitcast i8* %524 to i32*
  %537 = load i32, i32* %536, align 4
  %538 = sext i32 %537 to i64
  %539 = sub nsw i64 0, %538
  %540 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %525, i64 0, i32 0, i32 0, i64 %539
  %541 = bitcast i8* %540 to i16*
  %542 = load i16, i16* %541, align 2
  %543 = icmp ugt i16 %542, 26
  br i1 %543, label %544, label %554

544:                                              ; preds = %534
  %545 = getelementptr inbounds i8, i8* %540, i64 26
  %546 = bitcast i8* %545 to i16*
  %547 = load i16, i16* %546, align 2
  %548 = icmp eq i16 %547, 0
  br i1 %548, label %554, label %549

549:                                              ; preds = %544
  %550 = zext i16 %547 to i64
  %551 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %525, i64 0, i32 0, i32 0, i64 %550
  %552 = bitcast i8* %551 to i64*
  %553 = load i64, i64* %552, align 8
  br label %554

554:                                              ; preds = %534, %544, %549
  %555 = phi i64 [ %553, %549 ], [ 0, %544 ], [ 0, %534 ]
  %556 = icmp ugt i64 %535, %555
  br i1 %556, label %517, label %557

557:                                              ; preds = %554
  %558 = icmp ult %"struct.flatbuffers::Offset.1"* %476, %519
  br i1 %558, label %559, label %14

559:                                              ; preds = %557
  %560 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %519, i64 0, i32 0
  store i32 %521, i32* %516, align 4
  store i32 %478, i32* %560, align 4
  br label %442

561:                                              ; preds = %345
  %562 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %347, i64 0, i32 0
  %563 = load i32, i32* %562, align 4
  %564 = zext i32 %563 to i64
  %565 = sub nsw i64 0, %564
  %566 = getelementptr inbounds i8, i8* %290, i64 %565
  %567 = bitcast i8* %566 to %"struct.url_pattern_index::flat::UrlRule"*
  %568 = bitcast i8* %566 to i32*
  %569 = load i32, i32* %568, align 4
  %570 = sext i32 %569 to i64
  %571 = sub nsw i64 0, %570
  %572 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %567, i64 0, i32 0, i32 0, i64 %571
  %573 = bitcast i8* %572 to i16*
  %574 = load i16, i16* %573, align 2
  %575 = icmp ugt i16 %574, 26
  br i1 %575, label %576, label %586

576:                                              ; preds = %561
  %577 = getelementptr inbounds i8, i8* %572, i64 26
  %578 = bitcast i8* %577 to i16*
  %579 = load i16, i16* %578, align 2
  %580 = icmp eq i16 %579, 0
  br i1 %580, label %586, label %581

581:                                              ; preds = %576
  %582 = zext i16 %579 to i64
  %583 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %567, i64 0, i32 0, i32 0, i64 %582
  %584 = bitcast i8* %583 to i64*
  %585 = load i64, i64* %584, align 8
  br label %586

586:                                              ; preds = %581, %576, %561
  %587 = phi i64 [ %585, %581 ], [ 0, %576 ], [ 0, %561 ]
  br i1 %328, label %588, label %596

588:                                              ; preds = %586
  %589 = load i16, i16* %344, align 2
  %590 = icmp eq i16 %589, 0
  br i1 %590, label %596, label %591

591:                                              ; preds = %588
  %592 = zext i16 %589 to i64
  %593 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %300, i64 0, i32 0, i32 0, i64 %592
  %594 = bitcast i8* %593 to i64*
  %595 = load i64, i64* %594, align 8
  br label %596

596:                                              ; preds = %586, %588, %591
  %597 = phi i64 [ %595, %591 ], [ 0, %588 ], [ 0, %586 ]
  %598 = icmp ugt i64 %587, %597
  br i1 %598, label %599, label %345

599:                                              ; preds = %596
  %600 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %347, i64 0, i32 0
  store i32 %563, i32* %277, align 4
  store i32 %278, i32* %600, align 4
  %601 = add i32 %273, 1
  br label %602

602:                                              ; preds = %339, %599
  %603 = phi i32 [ %601, %599 ], [ %273, %339 ]
  %604 = phi %"struct.flatbuffers::Offset.1"* [ %347, %599 ], [ %9, %339 ]
  %605 = ptrtoint %"struct.flatbuffers::Offset.1"* %15 to i64
  %606 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %15, i64 1
  %607 = icmp ult %"struct.flatbuffers::Offset.1"* %606, %604
  br i1 %607, label %608, label %733

608:                                              ; preds = %602, %728
  %609 = phi %"struct.flatbuffers::Offset.1"* [ %732, %728 ], [ %264, %602 ]
  %610 = phi i32 [ %730, %728 ], [ %603, %602 ]
  %611 = phi %"struct.flatbuffers::Offset.1"* [ %683, %728 ], [ %606, %602 ]
  %612 = phi %"struct.flatbuffers::Offset.1"* [ %688, %728 ], [ %604, %602 ]
  %613 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %4, align 8
  %614 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %613, i64 0, i32 2
  %615 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %614, align 8
  %616 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %615, i64 0, i32 0, i32 6
  %617 = load i8*, i8** %616, align 8
  %618 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %615, i64 0, i32 0, i32 4
  %619 = load i64, i64* %618, align 8
  %620 = ptrtoint i8* %617 to i64
  %621 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %615, i64 0, i32 0, i32 5
  %622 = bitcast i8** %621 to i64*
  %623 = load i64, i64* %622, align 8
  %624 = sub i64 %619, %620
  %625 = add i64 %624, %623
  %626 = and i64 %625, 4294967295
  %627 = getelementptr inbounds i8, i8* %617, i64 %626
  %628 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %609, i64 0, i32 0
  %629 = load i32, i32* %628, align 4
  %630 = zext i32 %629 to i64
  %631 = sub nsw i64 0, %630
  %632 = getelementptr inbounds i8, i8* %627, i64 %631
  %633 = bitcast i8* %632 to %"struct.url_pattern_index::flat::UrlRule"*
  %634 = bitcast i8* %632 to i32*
  %635 = load i32, i32* %634, align 4
  %636 = sext i32 %635 to i64
  %637 = sub nsw i64 0, %636
  %638 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %633, i64 0, i32 0, i32 0, i64 %637
  %639 = bitcast i8* %638 to i16*
  %640 = load i16, i16* %639, align 2
  %641 = icmp ugt i16 %640, 26
  %642 = getelementptr inbounds i8, i8* %638, i64 26
  %643 = bitcast i8* %642 to i16*
  br label %644

644:                                              ; preds = %680, %608
  %645 = phi %"struct.flatbuffers::Offset.1"* [ %611, %608 ], [ %683, %680 ]
  %646 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %645, i64 0, i32 0
  %647 = load i32, i32* %646, align 4
  %648 = zext i32 %647 to i64
  %649 = sub nsw i64 0, %648
  %650 = getelementptr inbounds i8, i8* %627, i64 %649
  %651 = bitcast i8* %650 to %"struct.url_pattern_index::flat::UrlRule"*
  %652 = bitcast i8* %650 to i32*
  %653 = load i32, i32* %652, align 4
  %654 = sext i32 %653 to i64
  %655 = sub nsw i64 0, %654
  %656 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %651, i64 0, i32 0, i32 0, i64 %655
  %657 = bitcast i8* %656 to i16*
  %658 = load i16, i16* %657, align 2
  %659 = icmp ugt i16 %658, 26
  br i1 %659, label %660, label %670

660:                                              ; preds = %644
  %661 = getelementptr inbounds i8, i8* %656, i64 26
  %662 = bitcast i8* %661 to i16*
  %663 = load i16, i16* %662, align 2
  %664 = icmp eq i16 %663, 0
  br i1 %664, label %670, label %665

665:                                              ; preds = %660
  %666 = zext i16 %663 to i64
  %667 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %651, i64 0, i32 0, i32 0, i64 %666
  %668 = bitcast i8* %667 to i64*
  %669 = load i64, i64* %668, align 8
  br label %670

670:                                              ; preds = %665, %660, %644
  %671 = phi i64 [ %669, %665 ], [ 0, %660 ], [ 0, %644 ]
  br i1 %641, label %672, label %680

672:                                              ; preds = %670
  %673 = load i16, i16* %643, align 2
  %674 = icmp eq i16 %673, 0
  br i1 %674, label %680, label %675

675:                                              ; preds = %672
  %676 = zext i16 %673 to i64
  %677 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %633, i64 0, i32 0, i32 0, i64 %676
  %678 = bitcast i8* %677 to i64*
  %679 = load i64, i64* %678, align 8
  br label %680

680:                                              ; preds = %670, %672, %675
  %681 = phi i64 [ %679, %675 ], [ 0, %672 ], [ 0, %670 ]
  %682 = icmp ugt i64 %671, %681
  %683 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %645, i64 1
  br i1 %682, label %644, label %684

684:                                              ; preds = %680
  %685 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %645, i64 0, i32 0
  br label %686

686:                                              ; preds = %684, %723
  %687 = phi %"struct.flatbuffers::Offset.1"* [ %688, %723 ], [ %612, %684 ]
  %688 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %687, i64 -1
  %689 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %688, i64 0, i32 0
  %690 = load i32, i32* %689, align 4
  %691 = zext i32 %690 to i64
  %692 = sub nsw i64 0, %691
  %693 = getelementptr inbounds i8, i8* %627, i64 %692
  %694 = bitcast i8* %693 to %"struct.url_pattern_index::flat::UrlRule"*
  %695 = bitcast i8* %693 to i32*
  %696 = load i32, i32* %695, align 4
  %697 = sext i32 %696 to i64
  %698 = sub nsw i64 0, %697
  %699 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %694, i64 0, i32 0, i32 0, i64 %698
  %700 = bitcast i8* %699 to i16*
  %701 = load i16, i16* %700, align 2
  %702 = icmp ugt i16 %701, 26
  br i1 %702, label %703, label %713

703:                                              ; preds = %686
  %704 = getelementptr inbounds i8, i8* %699, i64 26
  %705 = bitcast i8* %704 to i16*
  %706 = load i16, i16* %705, align 2
  %707 = icmp eq i16 %706, 0
  br i1 %707, label %713, label %708

708:                                              ; preds = %703
  %709 = zext i16 %706 to i64
  %710 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %694, i64 0, i32 0, i32 0, i64 %709
  %711 = bitcast i8* %710 to i64*
  %712 = load i64, i64* %711, align 8
  br label %713

713:                                              ; preds = %708, %703, %686
  %714 = phi i64 [ %712, %708 ], [ 0, %703 ], [ 0, %686 ]
  br i1 %641, label %715, label %723

715:                                              ; preds = %713
  %716 = load i16, i16* %643, align 2
  %717 = icmp eq i16 %716, 0
  br i1 %717, label %723, label %718

718:                                              ; preds = %715
  %719 = zext i16 %716 to i64
  %720 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %633, i64 0, i32 0, i32 0, i64 %719
  %721 = bitcast i8* %720 to i64*
  %722 = load i64, i64* %721, align 8
  br label %723

723:                                              ; preds = %713, %715, %718
  %724 = phi i64 [ %722, %718 ], [ 0, %715 ], [ 0, %713 ]
  %725 = icmp ugt i64 %714, %724
  br i1 %725, label %726, label %686

726:                                              ; preds = %723
  %727 = icmp ugt %"struct.flatbuffers::Offset.1"* %645, %688
  br i1 %727, label %733, label %728

728:                                              ; preds = %726
  %729 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %688, i64 0, i32 0
  store i32 %690, i32* %685, align 4
  store i32 %647, i32* %729, align 4
  %730 = add i32 %610, 1
  %731 = icmp eq %"struct.flatbuffers::Offset.1"* %609, %645
  %732 = select i1 %731, %"struct.flatbuffers::Offset.1"* %688, %"struct.flatbuffers::Offset.1"* %609
  br label %608

733:                                              ; preds = %726, %602
  %734 = phi %"struct.flatbuffers::Offset.1"* [ %264, %602 ], [ %609, %726 ]
  %735 = phi i32 [ %603, %602 ], [ %610, %726 ]
  %736 = phi %"struct.flatbuffers::Offset.1"* [ %606, %602 ], [ %645, %726 ]
  %737 = icmp eq %"struct.flatbuffers::Offset.1"* %736, %734
  br i1 %737, label %809, label %738

738:                                              ; preds = %733
  %739 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %4, align 8
  %740 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %739, i64 0, i32 2
  %741 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %740, align 8
  %742 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %734, i64 0, i32 0
  %743 = load i32, i32* %742, align 4
  %744 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %741, i64 0, i32 0, i32 6
  %745 = load i8*, i8** %744, align 8
  %746 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %741, i64 0, i32 0, i32 4
  %747 = load i64, i64* %746, align 8
  %748 = ptrtoint i8* %745 to i64
  %749 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %741, i64 0, i32 0, i32 5
  %750 = bitcast i8** %749 to i64*
  %751 = load i64, i64* %750, align 8
  %752 = sub i64 %747, %748
  %753 = add i64 %752, %751
  %754 = and i64 %753, 4294967295
  %755 = getelementptr inbounds i8, i8* %745, i64 %754
  %756 = zext i32 %743 to i64
  %757 = sub nsw i64 0, %756
  %758 = getelementptr inbounds i8, i8* %755, i64 %757
  %759 = bitcast i8* %758 to %"struct.url_pattern_index::flat::UrlRule"*
  %760 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %736, i64 0, i32 0
  %761 = load i32, i32* %760, align 4
  %762 = zext i32 %761 to i64
  %763 = sub nsw i64 0, %762
  %764 = getelementptr inbounds i8, i8* %755, i64 %763
  %765 = bitcast i8* %764 to %"struct.url_pattern_index::flat::UrlRule"*
  %766 = bitcast i8* %758 to i32*
  %767 = load i32, i32* %766, align 4
  %768 = sext i32 %767 to i64
  %769 = sub nsw i64 0, %768
  %770 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %759, i64 0, i32 0, i32 0, i64 %769
  %771 = bitcast i8* %770 to i16*
  %772 = load i16, i16* %771, align 2
  %773 = icmp ugt i16 %772, 26
  br i1 %773, label %774, label %784

774:                                              ; preds = %738
  %775 = getelementptr inbounds i8, i8* %770, i64 26
  %776 = bitcast i8* %775 to i16*
  %777 = load i16, i16* %776, align 2
  %778 = icmp eq i16 %777, 0
  br i1 %778, label %784, label %779

779:                                              ; preds = %774
  %780 = zext i16 %777 to i64
  %781 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %759, i64 0, i32 0, i32 0, i64 %780
  %782 = bitcast i8* %781 to i64*
  %783 = load i64, i64* %782, align 8
  br label %784

784:                                              ; preds = %779, %774, %738
  %785 = phi i64 [ %783, %779 ], [ 0, %774 ], [ 0, %738 ]
  %786 = bitcast i8* %764 to i32*
  %787 = load i32, i32* %786, align 4
  %788 = sext i32 %787 to i64
  %789 = sub nsw i64 0, %788
  %790 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %765, i64 0, i32 0, i32 0, i64 %789
  %791 = bitcast i8* %790 to i16*
  %792 = load i16, i16* %791, align 2
  %793 = icmp ugt i16 %792, 26
  br i1 %793, label %794, label %804

794:                                              ; preds = %784
  %795 = getelementptr inbounds i8, i8* %790, i64 26
  %796 = bitcast i8* %795 to i16*
  %797 = load i16, i16* %796, align 2
  %798 = icmp eq i16 %797, 0
  br i1 %798, label %804, label %799

799:                                              ; preds = %794
  %800 = zext i16 %797 to i64
  %801 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %765, i64 0, i32 0, i32 0, i64 %800
  %802 = bitcast i8* %801 to i64*
  %803 = load i64, i64* %802, align 8
  br label %804

804:                                              ; preds = %784, %794, %799
  %805 = phi i64 [ %803, %799 ], [ 0, %794 ], [ 0, %784 ]
  %806 = icmp ugt i64 %785, %805
  br i1 %806, label %807, label %809

807:                                              ; preds = %804
  store i32 %743, i32* %760, align 4
  store i32 %761, i32* %742, align 4
  %808 = add i32 %735, 1
  br label %809

809:                                              ; preds = %733, %807, %804
  %810 = phi i32 [ %808, %807 ], [ %735, %804 ], [ %735, %733 ]
  %811 = icmp eq i32 %810, 0
  br i1 %811, label %812, label %819

812:                                              ; preds = %809
  %813 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEbT0_SB_T_"(%"struct.flatbuffers::Offset.1"* %15, %"struct.flatbuffers::Offset.1"* %736, %class.anon.63* dereferenceable(8) %2)
  %814 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %736, i64 1
  %815 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEbT0_SB_T_"(%"struct.flatbuffers::Offset.1"* %814, %"struct.flatbuffers::Offset.1"* %6, %class.anon.63* dereferenceable(8) %2)
  br i1 %815, label %816, label %818

816:                                              ; preds = %812
  br i1 %813, label %830, label %817

817:                                              ; preds = %816, %828
  br label %5

818:                                              ; preds = %812
  br i1 %813, label %826, label %819

819:                                              ; preds = %818, %809
  %820 = ptrtoint %"struct.flatbuffers::Offset.1"* %736 to i64
  %821 = sub i64 %820, %605
  %822 = sub i64 %11, %820
  %823 = icmp slt i64 %821, %822
  br i1 %823, label %824, label %828

824:                                              ; preds = %819
  tail call fastcc void @"_ZNSt3__16__sortIRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEvT0_SB_T_"(%"struct.flatbuffers::Offset.1"* %15, %"struct.flatbuffers::Offset.1"* %736, %class.anon.63* dereferenceable(8) %2)
  %825 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %736, i64 1
  br label %826

826:                                              ; preds = %824, %818
  %827 = phi %"struct.flatbuffers::Offset.1"* [ %814, %818 ], [ %825, %824 ]
  br label %12

828:                                              ; preds = %819
  %829 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %736, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEvT0_SB_T_"(%"struct.flatbuffers::Offset.1"* %829, %"struct.flatbuffers::Offset.1"* %6, %class.anon.63* dereferenceable(8) %2)
  br label %817

830:                                              ; preds = %816, %439, %14, %14, %389, %436, %258, %106, %85, %88, %89, %93, %98
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEjT0_SB_SB_T_"(%"struct.flatbuffers::Offset.1"* nocapture, %"struct.flatbuffers::Offset.1"* nocapture, %"struct.flatbuffers::Offset.1"* nocapture, %class.anon.63* nocapture readonly dereferenceable(8)) unnamed_addr #18 {
  %5 = getelementptr inbounds %class.anon.63, %class.anon.63* %3, i64 0, i32 0
  %6 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %5, align 8
  %7 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %6, i64 0, i32 2
  %8 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %7, align 8
  %9 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %8, i64 0, i32 0, i32 6
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %8, i64 0, i32 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = ptrtoint i8* %12 to i64
  %16 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %8, i64 0, i32 0, i32 5
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %14, %15
  %20 = add i64 %19, %18
  %21 = and i64 %20, 4294967295
  %22 = getelementptr inbounds i8, i8* %12, i64 %21
  %23 = zext i32 %10 to i64
  %24 = sub nsw i64 0, %23
  %25 = getelementptr inbounds i8, i8* %22, i64 %24
  %26 = bitcast i8* %25 to %"struct.url_pattern_index::flat::UrlRule"*
  %27 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %0, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = sub nsw i64 0, %29
  %31 = getelementptr inbounds i8, i8* %22, i64 %30
  %32 = bitcast i8* %31 to %"struct.url_pattern_index::flat::UrlRule"*
  %33 = bitcast i8* %25 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = sub nsw i64 0, %35
  %37 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %26, i64 0, i32 0, i32 0, i64 %36
  %38 = bitcast i8* %37 to i16*
  %39 = load i16, i16* %38, align 2
  %40 = icmp ugt i16 %39, 26
  br i1 %40, label %41, label %51

41:                                               ; preds = %4
  %42 = getelementptr inbounds i8, i8* %37, i64 26
  %43 = bitcast i8* %42 to i16*
  %44 = load i16, i16* %43, align 2
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %41
  %47 = zext i16 %44 to i64
  %48 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %26, i64 0, i32 0, i32 0, i64 %47
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  br label %51

51:                                               ; preds = %46, %41, %4
  %52 = phi i64 [ %50, %46 ], [ 0, %41 ], [ 0, %4 ]
  %53 = bitcast i8* %31 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = sext i32 %54 to i64
  %56 = sub nsw i64 0, %55
  %57 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %32, i64 0, i32 0, i32 0, i64 %56
  %58 = bitcast i8* %57 to i16*
  %59 = load i16, i16* %58, align 2
  %60 = icmp ugt i16 %59, 26
  br i1 %60, label %61, label %71

61:                                               ; preds = %51
  %62 = getelementptr inbounds i8, i8* %57, i64 26
  %63 = bitcast i8* %62 to i16*
  %64 = load i16, i16* %63, align 2
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %61
  %67 = zext i16 %64 to i64
  %68 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %32, i64 0, i32 0, i32 0, i64 %67
  %69 = bitcast i8* %68 to i64*
  %70 = load i64, i64* %69, align 8
  br label %71

71:                                               ; preds = %51, %61, %66
  %72 = phi i64 [ %70, %66 ], [ 0, %61 ], [ 0, %51 ]
  %73 = icmp ugt i64 %52, %72
  %74 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %2, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i64
  %77 = sub nsw i64 0, %76
  %78 = getelementptr inbounds i8, i8* %22, i64 %77
  %79 = bitcast i8* %78 to %"struct.url_pattern_index::flat::UrlRule"*
  %80 = bitcast i8* %78 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = sext i32 %81 to i64
  %83 = sub nsw i64 0, %82
  %84 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %79, i64 0, i32 0, i32 0, i64 %83
  %85 = bitcast i8* %84 to i16*
  %86 = load i16, i16* %85, align 2
  %87 = icmp ugt i16 %86, 26
  br i1 %87, label %88, label %98

88:                                               ; preds = %71
  %89 = getelementptr inbounds i8, i8* %84, i64 26
  %90 = bitcast i8* %89 to i16*
  %91 = load i16, i16* %90, align 2
  %92 = icmp eq i16 %91, 0
  br i1 %92, label %98, label %93

93:                                               ; preds = %88
  %94 = zext i16 %91 to i64
  %95 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %79, i64 0, i32 0, i32 0, i64 %94
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %96, align 8
  br label %98

98:                                               ; preds = %93, %88, %71
  %99 = phi i64 [ %97, %93 ], [ 0, %88 ], [ 0, %71 ]
  br i1 %40, label %100, label %110

100:                                              ; preds = %98
  %101 = getelementptr inbounds i8, i8* %37, i64 26
  %102 = bitcast i8* %101 to i16*
  %103 = load i16, i16* %102, align 2
  %104 = icmp eq i16 %103, 0
  br i1 %104, label %110, label %105

105:                                              ; preds = %100
  %106 = zext i16 %103 to i64
  %107 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %26, i64 0, i32 0, i32 0, i64 %106
  %108 = bitcast i8* %107 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %98, %100, %105
  %111 = phi i64 [ %109, %105 ], [ 0, %100 ], [ 0, %98 ]
  %112 = icmp ugt i64 %99, %111
  br i1 %73, label %182, label %113

113:                                              ; preds = %110
  br i1 %112, label %114, label %249

114:                                              ; preds = %113
  store i32 %75, i32* %9, align 4
  store i32 %10, i32* %74, align 4
  %115 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %5, align 8
  %116 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %115, i64 0, i32 2
  %117 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %116, align 8
  %118 = load i32, i32* %9, align 4
  %119 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %117, i64 0, i32 0, i32 6
  %120 = load i8*, i8** %119, align 8
  %121 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %117, i64 0, i32 0, i32 4
  %122 = load i64, i64* %121, align 8
  %123 = ptrtoint i8* %120 to i64
  %124 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %117, i64 0, i32 0, i32 5
  %125 = bitcast i8** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %122, %123
  %128 = add i64 %127, %126
  %129 = and i64 %128, 4294967295
  %130 = getelementptr inbounds i8, i8* %120, i64 %129
  %131 = zext i32 %118 to i64
  %132 = sub nsw i64 0, %131
  %133 = getelementptr inbounds i8, i8* %130, i64 %132
  %134 = bitcast i8* %133 to %"struct.url_pattern_index::flat::UrlRule"*
  %135 = load i32, i32* %27, align 4
  %136 = zext i32 %135 to i64
  %137 = sub nsw i64 0, %136
  %138 = getelementptr inbounds i8, i8* %130, i64 %137
  %139 = bitcast i8* %138 to %"struct.url_pattern_index::flat::UrlRule"*
  %140 = bitcast i8* %133 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = sext i32 %141 to i64
  %143 = sub nsw i64 0, %142
  %144 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %134, i64 0, i32 0, i32 0, i64 %143
  %145 = bitcast i8* %144 to i16*
  %146 = load i16, i16* %145, align 2
  %147 = icmp ugt i16 %146, 26
  br i1 %147, label %148, label %158

148:                                              ; preds = %114
  %149 = getelementptr inbounds i8, i8* %144, i64 26
  %150 = bitcast i8* %149 to i16*
  %151 = load i16, i16* %150, align 2
  %152 = icmp eq i16 %151, 0
  br i1 %152, label %158, label %153

153:                                              ; preds = %148
  %154 = zext i16 %151 to i64
  %155 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %134, i64 0, i32 0, i32 0, i64 %154
  %156 = bitcast i8* %155 to i64*
  %157 = load i64, i64* %156, align 8
  br label %158

158:                                              ; preds = %153, %148, %114
  %159 = phi i64 [ %157, %153 ], [ 0, %148 ], [ 0, %114 ]
  %160 = bitcast i8* %138 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = sext i32 %161 to i64
  %163 = sub nsw i64 0, %162
  %164 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %139, i64 0, i32 0, i32 0, i64 %163
  %165 = bitcast i8* %164 to i16*
  %166 = load i16, i16* %165, align 2
  %167 = icmp ugt i16 %166, 26
  br i1 %167, label %168, label %178

168:                                              ; preds = %158
  %169 = getelementptr inbounds i8, i8* %164, i64 26
  %170 = bitcast i8* %169 to i16*
  %171 = load i16, i16* %170, align 2
  %172 = icmp eq i16 %171, 0
  br i1 %172, label %178, label %173

173:                                              ; preds = %168
  %174 = zext i16 %171 to i64
  %175 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %139, i64 0, i32 0, i32 0, i64 %174
  %176 = bitcast i8* %175 to i64*
  %177 = load i64, i64* %176, align 8
  br label %178

178:                                              ; preds = %158, %168, %173
  %179 = phi i64 [ %177, %173 ], [ 0, %168 ], [ 0, %158 ]
  %180 = icmp ugt i64 %159, %179
  br i1 %180, label %181, label %249

181:                                              ; preds = %178
  store i32 %118, i32* %27, align 4
  store i32 %135, i32* %9, align 4
  br label %249

182:                                              ; preds = %110
  br i1 %112, label %183, label %184

183:                                              ; preds = %182
  store i32 %75, i32* %27, align 4
  store i32 %28, i32* %74, align 4
  br label %249

184:                                              ; preds = %182
  store i32 %10, i32* %27, align 4
  store i32 %28, i32* %9, align 4
  %185 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %5, align 8
  %186 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %185, i64 0, i32 2
  %187 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %186, align 8
  %188 = load i32, i32* %74, align 4
  %189 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %187, i64 0, i32 0, i32 6
  %190 = load i8*, i8** %189, align 8
  %191 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %187, i64 0, i32 0, i32 4
  %192 = load i64, i64* %191, align 8
  %193 = ptrtoint i8* %190 to i64
  %194 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %187, i64 0, i32 0, i32 5
  %195 = bitcast i8** %194 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = sub i64 %192, %193
  %198 = add i64 %197, %196
  %199 = and i64 %198, 4294967295
  %200 = getelementptr inbounds i8, i8* %190, i64 %199
  %201 = zext i32 %188 to i64
  %202 = sub nsw i64 0, %201
  %203 = getelementptr inbounds i8, i8* %200, i64 %202
  %204 = bitcast i8* %203 to %"struct.url_pattern_index::flat::UrlRule"*
  %205 = getelementptr inbounds i8, i8* %200, i64 %30
  %206 = bitcast i8* %205 to %"struct.url_pattern_index::flat::UrlRule"*
  %207 = bitcast i8* %203 to i32*
  %208 = load i32, i32* %207, align 4
  %209 = sext i32 %208 to i64
  %210 = sub nsw i64 0, %209
  %211 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %204, i64 0, i32 0, i32 0, i64 %210
  %212 = bitcast i8* %211 to i16*
  %213 = load i16, i16* %212, align 2
  %214 = icmp ugt i16 %213, 26
  br i1 %214, label %215, label %225

215:                                              ; preds = %184
  %216 = getelementptr inbounds i8, i8* %211, i64 26
  %217 = bitcast i8* %216 to i16*
  %218 = load i16, i16* %217, align 2
  %219 = icmp eq i16 %218, 0
  br i1 %219, label %225, label %220

220:                                              ; preds = %215
  %221 = zext i16 %218 to i64
  %222 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %204, i64 0, i32 0, i32 0, i64 %221
  %223 = bitcast i8* %222 to i64*
  %224 = load i64, i64* %223, align 8
  br label %225

225:                                              ; preds = %220, %215, %184
  %226 = phi i64 [ %224, %220 ], [ 0, %215 ], [ 0, %184 ]
  %227 = bitcast i8* %205 to i32*
  %228 = load i32, i32* %227, align 4
  %229 = sext i32 %228 to i64
  %230 = sub nsw i64 0, %229
  %231 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %206, i64 0, i32 0, i32 0, i64 %230
  %232 = bitcast i8* %231 to i16*
  %233 = load i16, i16* %232, align 2
  %234 = icmp ugt i16 %233, 26
  br i1 %234, label %235, label %245

235:                                              ; preds = %225
  %236 = getelementptr inbounds i8, i8* %231, i64 26
  %237 = bitcast i8* %236 to i16*
  %238 = load i16, i16* %237, align 2
  %239 = icmp eq i16 %238, 0
  br i1 %239, label %245, label %240

240:                                              ; preds = %235
  %241 = zext i16 %238 to i64
  %242 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %206, i64 0, i32 0, i32 0, i64 %241
  %243 = bitcast i8* %242 to i64*
  %244 = load i64, i64* %243, align 8
  br label %245

245:                                              ; preds = %225, %235, %240
  %246 = phi i64 [ %244, %240 ], [ 0, %235 ], [ 0, %225 ]
  %247 = icmp ugt i64 %226, %246
  br i1 %247, label %248, label %249

248:                                              ; preds = %245
  store i32 %188, i32* %9, align 4
  store i32 %28, i32* %74, align 4
  br label %249

249:                                              ; preds = %245, %248, %178, %181, %113, %183
  %250 = phi i32 [ 1, %183 ], [ 0, %113 ], [ 2, %181 ], [ 1, %178 ], [ 2, %248 ], [ 1, %245 ]
  ret i32 %250
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEjT0_SB_SB_SB_T_"(%"struct.flatbuffers::Offset.1"* nocapture, %"struct.flatbuffers::Offset.1"* nocapture, %"struct.flatbuffers::Offset.1"* nocapture, %"struct.flatbuffers::Offset.1"* nocapture, %class.anon.63* nocapture readonly dereferenceable(8)) unnamed_addr #18 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEjT0_SB_SB_T_"(%"struct.flatbuffers::Offset.1"* %0, %"struct.flatbuffers::Offset.1"* %1, %"struct.flatbuffers::Offset.1"* %2, %class.anon.63* dereferenceable(8) %4)
  %7 = getelementptr inbounds %class.anon.63, %class.anon.63* %4, i64 0, i32 0
  %8 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %7, align 8
  %9 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %8, i64 0, i32 2
  %10 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %9, align 8
  %11 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %10, i64 0, i32 0, i32 6
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %10, i64 0, i32 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = ptrtoint i8* %14 to i64
  %18 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %10, i64 0, i32 0, i32 5
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %16, %17
  %22 = add i64 %21, %20
  %23 = and i64 %22, 4294967295
  %24 = getelementptr inbounds i8, i8* %14, i64 %23
  %25 = zext i32 %12 to i64
  %26 = sub nsw i64 0, %25
  %27 = getelementptr inbounds i8, i8* %24, i64 %26
  %28 = bitcast i8* %27 to %"struct.url_pattern_index::flat::UrlRule"*
  %29 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %2, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = sub nsw i64 0, %31
  %33 = getelementptr inbounds i8, i8* %24, i64 %32
  %34 = bitcast i8* %33 to %"struct.url_pattern_index::flat::UrlRule"*
  %35 = bitcast i8* %27 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = sub nsw i64 0, %37
  %39 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %28, i64 0, i32 0, i32 0, i64 %38
  %40 = bitcast i8* %39 to i16*
  %41 = load i16, i16* %40, align 2
  %42 = icmp ugt i16 %41, 26
  br i1 %42, label %43, label %53

43:                                               ; preds = %5
  %44 = getelementptr inbounds i8, i8* %39, i64 26
  %45 = bitcast i8* %44 to i16*
  %46 = load i16, i16* %45, align 2
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = zext i16 %46 to i64
  %50 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %28, i64 0, i32 0, i32 0, i64 %49
  %51 = bitcast i8* %50 to i64*
  %52 = load i64, i64* %51, align 8
  br label %53

53:                                               ; preds = %48, %43, %5
  %54 = phi i64 [ %52, %48 ], [ 0, %43 ], [ 0, %5 ]
  %55 = bitcast i8* %33 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = sext i32 %56 to i64
  %58 = sub nsw i64 0, %57
  %59 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %34, i64 0, i32 0, i32 0, i64 %58
  %60 = bitcast i8* %59 to i16*
  %61 = load i16, i16* %60, align 2
  %62 = icmp ugt i16 %61, 26
  br i1 %62, label %63, label %73

63:                                               ; preds = %53
  %64 = getelementptr inbounds i8, i8* %59, i64 26
  %65 = bitcast i8* %64 to i16*
  %66 = load i16, i16* %65, align 2
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = zext i16 %66 to i64
  %70 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %34, i64 0, i32 0, i32 0, i64 %69
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 8
  br label %73

73:                                               ; preds = %53, %63, %68
  %74 = phi i64 [ %72, %68 ], [ 0, %63 ], [ 0, %53 ]
  %75 = icmp ugt i64 %54, %74
  br i1 %75, label %76, label %216

76:                                               ; preds = %73
  store i32 %12, i32* %29, align 4
  store i32 %30, i32* %11, align 4
  %77 = add i32 %6, 1
  %78 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %7, align 8
  %79 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %78, i64 0, i32 2
  %80 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %79, align 8
  %81 = load i32, i32* %29, align 4
  %82 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %80, i64 0, i32 0, i32 6
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %80, i64 0, i32 0, i32 4
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint i8* %83 to i64
  %87 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %80, i64 0, i32 0, i32 5
  %88 = bitcast i8** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %85, %86
  %91 = add i64 %90, %89
  %92 = and i64 %91, 4294967295
  %93 = getelementptr inbounds i8, i8* %83, i64 %92
  %94 = zext i32 %81 to i64
  %95 = sub nsw i64 0, %94
  %96 = getelementptr inbounds i8, i8* %93, i64 %95
  %97 = bitcast i8* %96 to %"struct.url_pattern_index::flat::UrlRule"*
  %98 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %1, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i64
  %101 = sub nsw i64 0, %100
  %102 = getelementptr inbounds i8, i8* %93, i64 %101
  %103 = bitcast i8* %102 to %"struct.url_pattern_index::flat::UrlRule"*
  %104 = bitcast i8* %96 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = sext i32 %105 to i64
  %107 = sub nsw i64 0, %106
  %108 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %97, i64 0, i32 0, i32 0, i64 %107
  %109 = bitcast i8* %108 to i16*
  %110 = load i16, i16* %109, align 2
  %111 = icmp ugt i16 %110, 26
  br i1 %111, label %112, label %122

112:                                              ; preds = %76
  %113 = getelementptr inbounds i8, i8* %108, i64 26
  %114 = bitcast i8* %113 to i16*
  %115 = load i16, i16* %114, align 2
  %116 = icmp eq i16 %115, 0
  br i1 %116, label %122, label %117

117:                                              ; preds = %112
  %118 = zext i16 %115 to i64
  %119 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %97, i64 0, i32 0, i32 0, i64 %118
  %120 = bitcast i8* %119 to i64*
  %121 = load i64, i64* %120, align 8
  br label %122

122:                                              ; preds = %117, %112, %76
  %123 = phi i64 [ %121, %117 ], [ 0, %112 ], [ 0, %76 ]
  %124 = bitcast i8* %102 to i32*
  %125 = load i32, i32* %124, align 4
  %126 = sext i32 %125 to i64
  %127 = sub nsw i64 0, %126
  %128 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %103, i64 0, i32 0, i32 0, i64 %127
  %129 = bitcast i8* %128 to i16*
  %130 = load i16, i16* %129, align 2
  %131 = icmp ugt i16 %130, 26
  br i1 %131, label %132, label %142

132:                                              ; preds = %122
  %133 = getelementptr inbounds i8, i8* %128, i64 26
  %134 = bitcast i8* %133 to i16*
  %135 = load i16, i16* %134, align 2
  %136 = icmp eq i16 %135, 0
  br i1 %136, label %142, label %137

137:                                              ; preds = %132
  %138 = zext i16 %135 to i64
  %139 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %103, i64 0, i32 0, i32 0, i64 %138
  %140 = bitcast i8* %139 to i64*
  %141 = load i64, i64* %140, align 8
  br label %142

142:                                              ; preds = %122, %132, %137
  %143 = phi i64 [ %141, %137 ], [ 0, %132 ], [ 0, %122 ]
  %144 = icmp ugt i64 %123, %143
  br i1 %144, label %145, label %216

145:                                              ; preds = %142
  store i32 %81, i32* %98, align 4
  store i32 %99, i32* %29, align 4
  %146 = add i32 %6, 2
  %147 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %7, align 8
  %148 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %147, i64 0, i32 2
  %149 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %148, align 8
  %150 = load i32, i32* %98, align 4
  %151 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %149, i64 0, i32 0, i32 6
  %152 = load i8*, i8** %151, align 8
  %153 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %149, i64 0, i32 0, i32 4
  %154 = load i64, i64* %153, align 8
  %155 = ptrtoint i8* %152 to i64
  %156 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %149, i64 0, i32 0, i32 5
  %157 = bitcast i8** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = sub i64 %154, %155
  %160 = add i64 %159, %158
  %161 = and i64 %160, 4294967295
  %162 = getelementptr inbounds i8, i8* %152, i64 %161
  %163 = zext i32 %150 to i64
  %164 = sub nsw i64 0, %163
  %165 = getelementptr inbounds i8, i8* %162, i64 %164
  %166 = bitcast i8* %165 to %"struct.url_pattern_index::flat::UrlRule"*
  %167 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %0, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = zext i32 %168 to i64
  %170 = sub nsw i64 0, %169
  %171 = getelementptr inbounds i8, i8* %162, i64 %170
  %172 = bitcast i8* %171 to %"struct.url_pattern_index::flat::UrlRule"*
  %173 = bitcast i8* %165 to i32*
  %174 = load i32, i32* %173, align 4
  %175 = sext i32 %174 to i64
  %176 = sub nsw i64 0, %175
  %177 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %166, i64 0, i32 0, i32 0, i64 %176
  %178 = bitcast i8* %177 to i16*
  %179 = load i16, i16* %178, align 2
  %180 = icmp ugt i16 %179, 26
  br i1 %180, label %181, label %191

181:                                              ; preds = %145
  %182 = getelementptr inbounds i8, i8* %177, i64 26
  %183 = bitcast i8* %182 to i16*
  %184 = load i16, i16* %183, align 2
  %185 = icmp eq i16 %184, 0
  br i1 %185, label %191, label %186

186:                                              ; preds = %181
  %187 = zext i16 %184 to i64
  %188 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %166, i64 0, i32 0, i32 0, i64 %187
  %189 = bitcast i8* %188 to i64*
  %190 = load i64, i64* %189, align 8
  br label %191

191:                                              ; preds = %186, %181, %145
  %192 = phi i64 [ %190, %186 ], [ 0, %181 ], [ 0, %145 ]
  %193 = bitcast i8* %171 to i32*
  %194 = load i32, i32* %193, align 4
  %195 = sext i32 %194 to i64
  %196 = sub nsw i64 0, %195
  %197 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %172, i64 0, i32 0, i32 0, i64 %196
  %198 = bitcast i8* %197 to i16*
  %199 = load i16, i16* %198, align 2
  %200 = icmp ugt i16 %199, 26
  br i1 %200, label %201, label %211

201:                                              ; preds = %191
  %202 = getelementptr inbounds i8, i8* %197, i64 26
  %203 = bitcast i8* %202 to i16*
  %204 = load i16, i16* %203, align 2
  %205 = icmp eq i16 %204, 0
  br i1 %205, label %211, label %206

206:                                              ; preds = %201
  %207 = zext i16 %204 to i64
  %208 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %172, i64 0, i32 0, i32 0, i64 %207
  %209 = bitcast i8* %208 to i64*
  %210 = load i64, i64* %209, align 8
  br label %211

211:                                              ; preds = %191, %201, %206
  %212 = phi i64 [ %210, %206 ], [ 0, %201 ], [ 0, %191 ]
  %213 = icmp ugt i64 %192, %212
  br i1 %213, label %214, label %216

214:                                              ; preds = %211
  store i32 %150, i32* %167, align 4
  store i32 %168, i32* %98, align 4
  %215 = add i32 %6, 3
  br label %216

216:                                              ; preds = %142, %214, %211, %73
  %217 = phi i32 [ %215, %214 ], [ %146, %211 ], [ %77, %142 ], [ %6, %73 ]
  ret i32 %217
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEjT0_SB_SB_SB_SB_T_"(%"struct.flatbuffers::Offset.1"* nocapture, %"struct.flatbuffers::Offset.1"* nocapture, %"struct.flatbuffers::Offset.1"* nocapture, %"struct.flatbuffers::Offset.1"* nocapture, %"struct.flatbuffers::Offset.1"* nocapture, %class.anon.63* nocapture readonly dereferenceable(8)) unnamed_addr #18 {
  %7 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEjT0_SB_SB_SB_T_"(%"struct.flatbuffers::Offset.1"* %0, %"struct.flatbuffers::Offset.1"* %1, %"struct.flatbuffers::Offset.1"* %2, %"struct.flatbuffers::Offset.1"* %3, %class.anon.63* dereferenceable(8) %5)
  %8 = getelementptr inbounds %class.anon.63, %class.anon.63* %5, i64 0, i32 0
  %9 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %8, align 8
  %10 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %9, i64 0, i32 2
  %11 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %10, align 8
  %12 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %11, i64 0, i32 0, i32 6
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %11, i64 0, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = ptrtoint i8* %15 to i64
  %19 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %11, i64 0, i32 0, i32 5
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %17, %18
  %23 = add i64 %22, %21
  %24 = and i64 %23, 4294967295
  %25 = getelementptr inbounds i8, i8* %15, i64 %24
  %26 = zext i32 %13 to i64
  %27 = sub nsw i64 0, %26
  %28 = getelementptr inbounds i8, i8* %25, i64 %27
  %29 = bitcast i8* %28 to %"struct.url_pattern_index::flat::UrlRule"*
  %30 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %3, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = sub nsw i64 0, %32
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = bitcast i8* %34 to %"struct.url_pattern_index::flat::UrlRule"*
  %36 = bitcast i8* %28 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = sub nsw i64 0, %38
  %40 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %29, i64 0, i32 0, i32 0, i64 %39
  %41 = bitcast i8* %40 to i16*
  %42 = load i16, i16* %41, align 2
  %43 = icmp ugt i16 %42, 26
  br i1 %43, label %44, label %54

44:                                               ; preds = %6
  %45 = getelementptr inbounds i8, i8* %40, i64 26
  %46 = bitcast i8* %45 to i16*
  %47 = load i16, i16* %46, align 2
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = zext i16 %47 to i64
  %51 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %29, i64 0, i32 0, i32 0, i64 %50
  %52 = bitcast i8* %51 to i64*
  %53 = load i64, i64* %52, align 8
  br label %54

54:                                               ; preds = %49, %44, %6
  %55 = phi i64 [ %53, %49 ], [ 0, %44 ], [ 0, %6 ]
  %56 = bitcast i8* %34 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = sext i32 %57 to i64
  %59 = sub nsw i64 0, %58
  %60 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %35, i64 0, i32 0, i32 0, i64 %59
  %61 = bitcast i8* %60 to i16*
  %62 = load i16, i16* %61, align 2
  %63 = icmp ugt i16 %62, 26
  br i1 %63, label %64, label %74

64:                                               ; preds = %54
  %65 = getelementptr inbounds i8, i8* %60, i64 26
  %66 = bitcast i8* %65 to i16*
  %67 = load i16, i16* %66, align 2
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %64
  %70 = zext i16 %67 to i64
  %71 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %35, i64 0, i32 0, i32 0, i64 %70
  %72 = bitcast i8* %71 to i64*
  %73 = load i64, i64* %72, align 8
  br label %74

74:                                               ; preds = %54, %64, %69
  %75 = phi i64 [ %73, %69 ], [ 0, %64 ], [ 0, %54 ]
  %76 = icmp ugt i64 %55, %75
  br i1 %76, label %77, label %286

77:                                               ; preds = %74
  store i32 %13, i32* %30, align 4
  store i32 %31, i32* %12, align 4
  %78 = add i32 %7, 1
  %79 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %8, align 8
  %80 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %79, i64 0, i32 2
  %81 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %80, align 8
  %82 = load i32, i32* %30, align 4
  %83 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %81, i64 0, i32 0, i32 6
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %81, i64 0, i32 0, i32 4
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint i8* %84 to i64
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %81, i64 0, i32 0, i32 5
  %89 = bitcast i8** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %86, %87
  %92 = add i64 %91, %90
  %93 = and i64 %92, 4294967295
  %94 = getelementptr inbounds i8, i8* %84, i64 %93
  %95 = zext i32 %82 to i64
  %96 = sub nsw i64 0, %95
  %97 = getelementptr inbounds i8, i8* %94, i64 %96
  %98 = bitcast i8* %97 to %"struct.url_pattern_index::flat::UrlRule"*
  %99 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %2, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i64
  %102 = sub nsw i64 0, %101
  %103 = getelementptr inbounds i8, i8* %94, i64 %102
  %104 = bitcast i8* %103 to %"struct.url_pattern_index::flat::UrlRule"*
  %105 = bitcast i8* %97 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = sext i32 %106 to i64
  %108 = sub nsw i64 0, %107
  %109 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %98, i64 0, i32 0, i32 0, i64 %108
  %110 = bitcast i8* %109 to i16*
  %111 = load i16, i16* %110, align 2
  %112 = icmp ugt i16 %111, 26
  br i1 %112, label %113, label %123

113:                                              ; preds = %77
  %114 = getelementptr inbounds i8, i8* %109, i64 26
  %115 = bitcast i8* %114 to i16*
  %116 = load i16, i16* %115, align 2
  %117 = icmp eq i16 %116, 0
  br i1 %117, label %123, label %118

118:                                              ; preds = %113
  %119 = zext i16 %116 to i64
  %120 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %98, i64 0, i32 0, i32 0, i64 %119
  %121 = bitcast i8* %120 to i64*
  %122 = load i64, i64* %121, align 8
  br label %123

123:                                              ; preds = %118, %113, %77
  %124 = phi i64 [ %122, %118 ], [ 0, %113 ], [ 0, %77 ]
  %125 = bitcast i8* %103 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = sext i32 %126 to i64
  %128 = sub nsw i64 0, %127
  %129 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %104, i64 0, i32 0, i32 0, i64 %128
  %130 = bitcast i8* %129 to i16*
  %131 = load i16, i16* %130, align 2
  %132 = icmp ugt i16 %131, 26
  br i1 %132, label %133, label %143

133:                                              ; preds = %123
  %134 = getelementptr inbounds i8, i8* %129, i64 26
  %135 = bitcast i8* %134 to i16*
  %136 = load i16, i16* %135, align 2
  %137 = icmp eq i16 %136, 0
  br i1 %137, label %143, label %138

138:                                              ; preds = %133
  %139 = zext i16 %136 to i64
  %140 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %104, i64 0, i32 0, i32 0, i64 %139
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 8
  br label %143

143:                                              ; preds = %123, %133, %138
  %144 = phi i64 [ %142, %138 ], [ 0, %133 ], [ 0, %123 ]
  %145 = icmp ugt i64 %124, %144
  br i1 %145, label %146, label %286

146:                                              ; preds = %143
  store i32 %82, i32* %99, align 4
  store i32 %100, i32* %30, align 4
  %147 = add i32 %7, 2
  %148 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %8, align 8
  %149 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %148, i64 0, i32 2
  %150 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %149, align 8
  %151 = load i32, i32* %99, align 4
  %152 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %150, i64 0, i32 0, i32 6
  %153 = load i8*, i8** %152, align 8
  %154 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %150, i64 0, i32 0, i32 4
  %155 = load i64, i64* %154, align 8
  %156 = ptrtoint i8* %153 to i64
  %157 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %150, i64 0, i32 0, i32 5
  %158 = bitcast i8** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = sub i64 %155, %156
  %161 = add i64 %160, %159
  %162 = and i64 %161, 4294967295
  %163 = getelementptr inbounds i8, i8* %153, i64 %162
  %164 = zext i32 %151 to i64
  %165 = sub nsw i64 0, %164
  %166 = getelementptr inbounds i8, i8* %163, i64 %165
  %167 = bitcast i8* %166 to %"struct.url_pattern_index::flat::UrlRule"*
  %168 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %1, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = zext i32 %169 to i64
  %171 = sub nsw i64 0, %170
  %172 = getelementptr inbounds i8, i8* %163, i64 %171
  %173 = bitcast i8* %172 to %"struct.url_pattern_index::flat::UrlRule"*
  %174 = bitcast i8* %166 to i32*
  %175 = load i32, i32* %174, align 4
  %176 = sext i32 %175 to i64
  %177 = sub nsw i64 0, %176
  %178 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %167, i64 0, i32 0, i32 0, i64 %177
  %179 = bitcast i8* %178 to i16*
  %180 = load i16, i16* %179, align 2
  %181 = icmp ugt i16 %180, 26
  br i1 %181, label %182, label %192

182:                                              ; preds = %146
  %183 = getelementptr inbounds i8, i8* %178, i64 26
  %184 = bitcast i8* %183 to i16*
  %185 = load i16, i16* %184, align 2
  %186 = icmp eq i16 %185, 0
  br i1 %186, label %192, label %187

187:                                              ; preds = %182
  %188 = zext i16 %185 to i64
  %189 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %167, i64 0, i32 0, i32 0, i64 %188
  %190 = bitcast i8* %189 to i64*
  %191 = load i64, i64* %190, align 8
  br label %192

192:                                              ; preds = %187, %182, %146
  %193 = phi i64 [ %191, %187 ], [ 0, %182 ], [ 0, %146 ]
  %194 = bitcast i8* %172 to i32*
  %195 = load i32, i32* %194, align 4
  %196 = sext i32 %195 to i64
  %197 = sub nsw i64 0, %196
  %198 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %173, i64 0, i32 0, i32 0, i64 %197
  %199 = bitcast i8* %198 to i16*
  %200 = load i16, i16* %199, align 2
  %201 = icmp ugt i16 %200, 26
  br i1 %201, label %202, label %212

202:                                              ; preds = %192
  %203 = getelementptr inbounds i8, i8* %198, i64 26
  %204 = bitcast i8* %203 to i16*
  %205 = load i16, i16* %204, align 2
  %206 = icmp eq i16 %205, 0
  br i1 %206, label %212, label %207

207:                                              ; preds = %202
  %208 = zext i16 %205 to i64
  %209 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %173, i64 0, i32 0, i32 0, i64 %208
  %210 = bitcast i8* %209 to i64*
  %211 = load i64, i64* %210, align 8
  br label %212

212:                                              ; preds = %192, %202, %207
  %213 = phi i64 [ %211, %207 ], [ 0, %202 ], [ 0, %192 ]
  %214 = icmp ugt i64 %193, %213
  br i1 %214, label %215, label %286

215:                                              ; preds = %212
  store i32 %151, i32* %168, align 4
  store i32 %169, i32* %99, align 4
  %216 = add i32 %7, 3
  %217 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %8, align 8
  %218 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %217, i64 0, i32 2
  %219 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %218, align 8
  %220 = load i32, i32* %168, align 4
  %221 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %219, i64 0, i32 0, i32 6
  %222 = load i8*, i8** %221, align 8
  %223 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %219, i64 0, i32 0, i32 4
  %224 = load i64, i64* %223, align 8
  %225 = ptrtoint i8* %222 to i64
  %226 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %219, i64 0, i32 0, i32 5
  %227 = bitcast i8** %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = sub i64 %224, %225
  %230 = add i64 %229, %228
  %231 = and i64 %230, 4294967295
  %232 = getelementptr inbounds i8, i8* %222, i64 %231
  %233 = zext i32 %220 to i64
  %234 = sub nsw i64 0, %233
  %235 = getelementptr inbounds i8, i8* %232, i64 %234
  %236 = bitcast i8* %235 to %"struct.url_pattern_index::flat::UrlRule"*
  %237 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %0, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = zext i32 %238 to i64
  %240 = sub nsw i64 0, %239
  %241 = getelementptr inbounds i8, i8* %232, i64 %240
  %242 = bitcast i8* %241 to %"struct.url_pattern_index::flat::UrlRule"*
  %243 = bitcast i8* %235 to i32*
  %244 = load i32, i32* %243, align 4
  %245 = sext i32 %244 to i64
  %246 = sub nsw i64 0, %245
  %247 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %236, i64 0, i32 0, i32 0, i64 %246
  %248 = bitcast i8* %247 to i16*
  %249 = load i16, i16* %248, align 2
  %250 = icmp ugt i16 %249, 26
  br i1 %250, label %251, label %261

251:                                              ; preds = %215
  %252 = getelementptr inbounds i8, i8* %247, i64 26
  %253 = bitcast i8* %252 to i16*
  %254 = load i16, i16* %253, align 2
  %255 = icmp eq i16 %254, 0
  br i1 %255, label %261, label %256

256:                                              ; preds = %251
  %257 = zext i16 %254 to i64
  %258 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %236, i64 0, i32 0, i32 0, i64 %257
  %259 = bitcast i8* %258 to i64*
  %260 = load i64, i64* %259, align 8
  br label %261

261:                                              ; preds = %256, %251, %215
  %262 = phi i64 [ %260, %256 ], [ 0, %251 ], [ 0, %215 ]
  %263 = bitcast i8* %241 to i32*
  %264 = load i32, i32* %263, align 4
  %265 = sext i32 %264 to i64
  %266 = sub nsw i64 0, %265
  %267 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %242, i64 0, i32 0, i32 0, i64 %266
  %268 = bitcast i8* %267 to i16*
  %269 = load i16, i16* %268, align 2
  %270 = icmp ugt i16 %269, 26
  br i1 %270, label %271, label %281

271:                                              ; preds = %261
  %272 = getelementptr inbounds i8, i8* %267, i64 26
  %273 = bitcast i8* %272 to i16*
  %274 = load i16, i16* %273, align 2
  %275 = icmp eq i16 %274, 0
  br i1 %275, label %281, label %276

276:                                              ; preds = %271
  %277 = zext i16 %274 to i64
  %278 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %242, i64 0, i32 0, i32 0, i64 %277
  %279 = bitcast i8* %278 to i64*
  %280 = load i64, i64* %279, align 8
  br label %281

281:                                              ; preds = %261, %271, %276
  %282 = phi i64 [ %280, %276 ], [ 0, %271 ], [ 0, %261 ]
  %283 = icmp ugt i64 %262, %282
  br i1 %283, label %284, label %286

284:                                              ; preds = %281
  store i32 %220, i32* %237, align 4
  store i32 %238, i32* %168, align 4
  %285 = add i32 %7, 4
  br label %286

286:                                              ; preds = %143, %281, %284, %212, %74
  %287 = phi i32 [ %285, %284 ], [ %216, %281 ], [ %147, %212 ], [ %78, %143 ], [ %7, %74 ]
  ret i32 %287
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEbT0_SB_T_"(%"struct.flatbuffers::Offset.1"*, %"struct.flatbuffers::Offset.1"*, %class.anon.63* nocapture readonly dereferenceable(8)) unnamed_addr #2 {
  %4 = ptrtoint %"struct.flatbuffers::Offset.1"* %1 to i64
  %5 = ptrtoint %"struct.flatbuffers::Offset.1"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  switch i64 %7, label %94 [
    i64 0, label %258
    i64 1, label %258
    i64 2, label %8
    i64 3, label %79
    i64 4, label %83
    i64 5, label %88
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.anon.63, %class.anon.63* %2, i64 0, i32 0
  %10 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %9, align 8
  %11 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %10, i64 0, i32 2
  %12 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %11, align 8
  %13 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %1, i64 -1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %12, i64 0, i32 0, i32 6
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %12, i64 0, i32 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = ptrtoint i8* %16 to i64
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %12, i64 0, i32 0, i32 5
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %18, %19
  %24 = add i64 %23, %22
  %25 = and i64 %24, 4294967295
  %26 = getelementptr inbounds i8, i8* %16, i64 %25
  %27 = zext i32 %14 to i64
  %28 = sub nsw i64 0, %27
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  %30 = bitcast i8* %29 to %"struct.url_pattern_index::flat::UrlRule"*
  %31 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %0, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = sub nsw i64 0, %33
  %35 = getelementptr inbounds i8, i8* %26, i64 %34
  %36 = bitcast i8* %35 to %"struct.url_pattern_index::flat::UrlRule"*
  %37 = bitcast i8* %29 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = sext i32 %38 to i64
  %40 = sub nsw i64 0, %39
  %41 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %30, i64 0, i32 0, i32 0, i64 %40
  %42 = bitcast i8* %41 to i16*
  %43 = load i16, i16* %42, align 2
  %44 = icmp ugt i16 %43, 26
  br i1 %44, label %45, label %55

45:                                               ; preds = %8
  %46 = getelementptr inbounds i8, i8* %41, i64 26
  %47 = bitcast i8* %46 to i16*
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %45
  %51 = zext i16 %48 to i64
  %52 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %30, i64 0, i32 0, i32 0, i64 %51
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br label %55

55:                                               ; preds = %50, %45, %8
  %56 = phi i64 [ %54, %50 ], [ 0, %45 ], [ 0, %8 ]
  %57 = bitcast i8* %35 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %36, i64 0, i32 0, i32 0, i64 %60
  %62 = bitcast i8* %61 to i16*
  %63 = load i16, i16* %62, align 2
  %64 = icmp ugt i16 %63, 26
  br i1 %64, label %65, label %75

65:                                               ; preds = %55
  %66 = getelementptr inbounds i8, i8* %61, i64 26
  %67 = bitcast i8* %66 to i16*
  %68 = load i16, i16* %67, align 2
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = zext i16 %68 to i64
  %72 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %36, i64 0, i32 0, i32 0, i64 %71
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br label %75

75:                                               ; preds = %55, %65, %70
  %76 = phi i64 [ %74, %70 ], [ 0, %65 ], [ 0, %55 ]
  %77 = icmp ugt i64 %56, %76
  br i1 %77, label %78, label %258

78:                                               ; preds = %75
  store i32 %14, i32* %31, align 4
  store i32 %32, i32* %13, align 4
  br label %258

79:                                               ; preds = %3
  %80 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %0, i64 1
  %81 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %1, i64 -1
  %82 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEjT0_SB_SB_T_"(%"struct.flatbuffers::Offset.1"* %0, %"struct.flatbuffers::Offset.1"* %80, %"struct.flatbuffers::Offset.1"* %81, %class.anon.63* dereferenceable(8) %2)
  br label %258

83:                                               ; preds = %3
  %84 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %0, i64 1
  %85 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %0, i64 2
  %86 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %1, i64 -1
  %87 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEjT0_SB_SB_SB_T_"(%"struct.flatbuffers::Offset.1"* %0, %"struct.flatbuffers::Offset.1"* %84, %"struct.flatbuffers::Offset.1"* %85, %"struct.flatbuffers::Offset.1"* %86, %class.anon.63* dereferenceable(8) %2)
  br label %258

88:                                               ; preds = %3
  %89 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %0, i64 1
  %90 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %0, i64 2
  %91 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %0, i64 3
  %92 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %1, i64 -1
  %93 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEjT0_SB_SB_SB_SB_T_"(%"struct.flatbuffers::Offset.1"* %0, %"struct.flatbuffers::Offset.1"* %89, %"struct.flatbuffers::Offset.1"* %90, %"struct.flatbuffers::Offset.1"* %91, %"struct.flatbuffers::Offset.1"* %92, %class.anon.63* dereferenceable(8) %2)
  br label %258

94:                                               ; preds = %3
  %95 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %0, i64 2
  %96 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %0, i64 1
  %97 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN17url_pattern_index22UrlPatternIndexBuilder6FinishEvE3$_1PN11flatbuffers6OffsetINS1_4flat7UrlRuleEEEEEjT0_SB_SB_T_"(%"struct.flatbuffers::Offset.1"* %0, %"struct.flatbuffers::Offset.1"* %96, %"struct.flatbuffers::Offset.1"* %95, %class.anon.63* dereferenceable(8) %2)
  %98 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %0, i64 3
  %99 = icmp eq %"struct.flatbuffers::Offset.1"* %98, %1
  br i1 %99, label %258, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %class.anon.63, %class.anon.63* %2, i64 0, i32 0
  br label %102

102:                                              ; preds = %100, %251
  %103 = phi %"struct.flatbuffers::Offset.1"* [ %98, %100 ], [ %253, %251 ]
  %104 = phi i32 [ 0, %100 ], [ %252, %251 ]
  %105 = phi %"struct.flatbuffers::Offset.1"* [ %95, %100 ], [ %103, %251 ]
  %106 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %101, align 8
  %107 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %106, i64 0, i32 2
  %108 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %107, align 8
  %109 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %103, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %108, i64 0, i32 0, i32 6
  %112 = load i8*, i8** %111, align 8
  %113 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %108, i64 0, i32 0, i32 4
  %114 = load i64, i64* %113, align 8
  %115 = ptrtoint i8* %112 to i64
  %116 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %108, i64 0, i32 0, i32 5
  %117 = bitcast i8** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = sub i64 %114, %115
  %120 = add i64 %119, %118
  %121 = and i64 %120, 4294967295
  %122 = getelementptr inbounds i8, i8* %112, i64 %121
  %123 = zext i32 %110 to i64
  %124 = sub nsw i64 0, %123
  %125 = getelementptr inbounds i8, i8* %122, i64 %124
  %126 = bitcast i8* %125 to %"struct.url_pattern_index::flat::UrlRule"*
  %127 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %105, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = zext i32 %128 to i64
  %130 = sub nsw i64 0, %129
  %131 = getelementptr inbounds i8, i8* %122, i64 %130
  %132 = bitcast i8* %131 to %"struct.url_pattern_index::flat::UrlRule"*
  %133 = bitcast i8* %125 to i32*
  %134 = load i32, i32* %133, align 4
  %135 = sext i32 %134 to i64
  %136 = sub nsw i64 0, %135
  %137 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %126, i64 0, i32 0, i32 0, i64 %136
  %138 = bitcast i8* %137 to i16*
  %139 = load i16, i16* %138, align 2
  %140 = icmp ugt i16 %139, 26
  br i1 %140, label %141, label %151

141:                                              ; preds = %102
  %142 = getelementptr inbounds i8, i8* %137, i64 26
  %143 = bitcast i8* %142 to i16*
  %144 = load i16, i16* %143, align 2
  %145 = icmp eq i16 %144, 0
  br i1 %145, label %151, label %146

146:                                              ; preds = %141
  %147 = zext i16 %144 to i64
  %148 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %126, i64 0, i32 0, i32 0, i64 %147
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 8
  br label %151

151:                                              ; preds = %146, %141, %102
  %152 = phi i64 [ %150, %146 ], [ 0, %141 ], [ 0, %102 ]
  %153 = bitcast i8* %131 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = sext i32 %154 to i64
  %156 = sub nsw i64 0, %155
  %157 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %132, i64 0, i32 0, i32 0, i64 %156
  %158 = bitcast i8* %157 to i16*
  %159 = load i16, i16* %158, align 2
  %160 = icmp ugt i16 %159, 26
  br i1 %160, label %161, label %171

161:                                              ; preds = %151
  %162 = getelementptr inbounds i8, i8* %157, i64 26
  %163 = bitcast i8* %162 to i16*
  %164 = load i16, i16* %163, align 2
  %165 = icmp eq i16 %164, 0
  br i1 %165, label %171, label %166

166:                                              ; preds = %161
  %167 = zext i16 %164 to i64
  %168 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %132, i64 0, i32 0, i32 0, i64 %167
  %169 = bitcast i8* %168 to i64*
  %170 = load i64, i64* %169, align 8
  br label %171

171:                                              ; preds = %151, %161, %166
  %172 = phi i64 [ %170, %166 ], [ 0, %161 ], [ 0, %151 ]
  %173 = icmp ugt i64 %152, %172
  br i1 %173, label %174, label %251

174:                                              ; preds = %171, %243
  %175 = phi i32 [ %200, %243 ], [ %128, %171 ]
  %176 = phi %"struct.flatbuffers::Offset.1"* [ %177, %243 ], [ %103, %171 ]
  %177 = phi %"struct.flatbuffers::Offset.1"* [ %181, %243 ], [ %105, %171 ]
  %178 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %176, i64 0, i32 0
  store i32 %175, i32* %178, align 4
  %179 = icmp eq %"struct.flatbuffers::Offset.1"* %177, %0
  br i1 %179, label %246, label %180

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %177, i64 -1
  %182 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %101, align 8
  %183 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder"* %182, i64 0, i32 2
  %184 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %183, align 8
  %185 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %184, i64 0, i32 0, i32 6
  %186 = load i8*, i8** %185, align 8
  %187 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %184, i64 0, i32 0, i32 4
  %188 = load i64, i64* %187, align 8
  %189 = ptrtoint i8* %186 to i64
  %190 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %184, i64 0, i32 0, i32 5
  %191 = bitcast i8** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = sub i64 %188, %189
  %194 = add i64 %193, %192
  %195 = and i64 %194, 4294967295
  %196 = getelementptr inbounds i8, i8* %186, i64 %195
  %197 = getelementptr inbounds i8, i8* %196, i64 %124
  %198 = bitcast i8* %197 to %"struct.url_pattern_index::flat::UrlRule"*
  %199 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %181, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = zext i32 %200 to i64
  %202 = sub nsw i64 0, %201
  %203 = getelementptr inbounds i8, i8* %196, i64 %202
  %204 = bitcast i8* %203 to %"struct.url_pattern_index::flat::UrlRule"*
  %205 = bitcast i8* %197 to i32*
  %206 = load i32, i32* %205, align 4
  %207 = sext i32 %206 to i64
  %208 = sub nsw i64 0, %207
  %209 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %198, i64 0, i32 0, i32 0, i64 %208
  %210 = bitcast i8* %209 to i16*
  %211 = load i16, i16* %210, align 2
  %212 = icmp ugt i16 %211, 26
  br i1 %212, label %213, label %223

213:                                              ; preds = %180
  %214 = getelementptr inbounds i8, i8* %209, i64 26
  %215 = bitcast i8* %214 to i16*
  %216 = load i16, i16* %215, align 2
  %217 = icmp eq i16 %216, 0
  br i1 %217, label %223, label %218

218:                                              ; preds = %213
  %219 = zext i16 %216 to i64
  %220 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %198, i64 0, i32 0, i32 0, i64 %219
  %221 = bitcast i8* %220 to i64*
  %222 = load i64, i64* %221, align 8
  br label %223

223:                                              ; preds = %218, %213, %180
  %224 = phi i64 [ %222, %218 ], [ 0, %213 ], [ 0, %180 ]
  %225 = bitcast i8* %203 to i32*
  %226 = load i32, i32* %225, align 4
  %227 = sext i32 %226 to i64
  %228 = sub nsw i64 0, %227
  %229 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %204, i64 0, i32 0, i32 0, i64 %228
  %230 = bitcast i8* %229 to i16*
  %231 = load i16, i16* %230, align 2
  %232 = icmp ugt i16 %231, 26
  br i1 %232, label %233, label %243

233:                                              ; preds = %223
  %234 = getelementptr inbounds i8, i8* %229, i64 26
  %235 = bitcast i8* %234 to i16*
  %236 = load i16, i16* %235, align 2
  %237 = icmp eq i16 %236, 0
  br i1 %237, label %243, label %238

238:                                              ; preds = %233
  %239 = zext i16 %236 to i64
  %240 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %204, i64 0, i32 0, i32 0, i64 %239
  %241 = bitcast i8* %240 to i64*
  %242 = load i64, i64* %241, align 8
  br label %243

243:                                              ; preds = %223, %233, %238
  %244 = phi i64 [ %242, %238 ], [ 0, %233 ], [ 0, %223 ]
  %245 = icmp ugt i64 %224, %244
  br i1 %245, label %174, label %246

246:                                              ; preds = %174, %243
  %247 = phi %"struct.flatbuffers::Offset.1"* [ %0, %174 ], [ %177, %243 ]
  %248 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %247, i64 0, i32 0
  store i32 %110, i32* %248, align 4
  %249 = add i32 %104, 1
  %250 = icmp eq i32 %249, 8
  br i1 %250, label %255, label %251

251:                                              ; preds = %246, %171
  %252 = phi i32 [ %249, %246 ], [ %104, %171 ]
  %253 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %103, i64 1
  %254 = icmp eq %"struct.flatbuffers::Offset.1"* %253, %1
  br i1 %254, label %258, label %102

255:                                              ; preds = %246
  %256 = getelementptr inbounds %"struct.flatbuffers::Offset.1", %"struct.flatbuffers::Offset.1"* %103, i64 1
  %257 = icmp eq %"struct.flatbuffers::Offset.1"* %256, %1
  br label %258

258:                                              ; preds = %251, %255, %94, %75, %78, %3, %3, %88, %83, %79
  %259 = phi i1 [ true, %88 ], [ true, %83 ], [ true, %79 ], [ true, %3 ], [ true, %3 ], [ true, %78 ], [ true, %75 ], [ true, %94 ], [ %257, %255 ], [ true, %251 ]
  ret i1 %259
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #7

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #7

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #19

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind readnone speculatable }
attributes #18 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { nofree nounwind readonly }
attributes #20 = { nounwind }
attributes #21 = { builtin nounwind }
attributes #22 = { noreturn nounwind }
attributes #23 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK17url_pattern_index14NGramExtractorILm5EmLNS_19NGramCaseExtractionE1EZNS_22UrlPatternIndexBuilder23GetMostDistinctiveNGramEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE3$_2E5beginEv: argument 0"}
!6 = distinct !{!6, !"_ZNK17url_pattern_index14NGramExtractorILm5EmLNS_19NGramCaseExtractionE1EZNS_22UrlPatternIndexBuilder23GetMostDistinctiveNGramEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE3$_2E5beginEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK11flatbuffers6VectorINS_6OffsetIN17url_pattern_index4flat12NGramToRulesEEEE3endEv: argument 0"}
!9 = distinct !{!9, !"_ZNK11flatbuffers6VectorINS_6OffsetIN17url_pattern_index4flat12NGramToRulesEEEE3endEv"}
!10 = !{!"branch_weights", i32 2000, i32 1}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK17url_pattern_index14NGramExtractorILm5EmLNS_19NGramCaseExtractionE1EZNS_12_GLOBAL__N_130FindMatchInFlatUrlPatternIndexERKNS_4flat15UrlPatternIndexERKNS_10UrlPattern7UrlInfoERKN3url6OriginENS3_11ElementTypeENS3_14ActivationTypeENS3_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEENS_22UrlPatternIndexMatcher16FindRuleStrategyEPNSt3__16vectorIPKNS3_7UrlRuleENSV_9allocatorISZ_EEEEE3$_3E5beginEv: argument 0"}
!13 = distinct !{!13, !"_ZNK17url_pattern_index14NGramExtractorILm5EmLNS_19NGramCaseExtractionE1EZNS_12_GLOBAL__N_130FindMatchInFlatUrlPatternIndexERKNS_4flat15UrlPatternIndexERKNS_10UrlPattern7UrlInfoERKN3url6OriginENS3_11ElementTypeENS3_14ActivationTypeENS3_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEENS_22UrlPatternIndexMatcher16FindRuleStrategyEPNSt3__16vectorIPKNS3_7UrlRuleENSV_9allocatorISZ_EEEEE3$_3E5beginEv"}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = distinct !{!16, !15}
!17 = distinct !{!17, !15}
!18 = !{!19}
!19 = distinct !{!19, !20}
!20 = distinct !{!20, !"LVerDomain"}
!21 = !{!22}
!22 = distinct !{!22, !20}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.isvectorized", i32 1}
!25 = distinct !{!25, !15}
!26 = distinct !{!26, !15}
!27 = distinct !{!27, !24}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !24}
!34 = distinct !{!34, !15}
!35 = distinct !{!35, !15}
!36 = distinct !{!36, !24}
!37 = distinct !{!37, !15}
!38 = !{!39}
!39 = distinct !{!39, !40}
!40 = distinct !{!40, !"LVerDomain"}
!41 = !{!42}
!42 = distinct !{!42, !40}
!43 = distinct !{!43, !24}
!44 = distinct !{!44, !15}
!45 = distinct !{!45, !15}
!46 = !{!47}
!47 = distinct !{!47, !48}
!48 = distinct !{!48, !"LVerDomain"}
!49 = !{!50}
!50 = distinct !{!50, !48}
!51 = distinct !{!51, !24}
!52 = distinct !{!52, !15}
!53 = distinct !{!53, !15}
!54 = distinct !{!54, !24}
!55 = distinct !{!55, !15}
!56 = distinct !{!56, !24}
!57 = distinct !{!57, !15}
!58 = distinct !{!58, !15}
!59 = distinct !{!59, !15}
!60 = !{!61}
!61 = distinct !{!61, !62}
!62 = distinct !{!62, !"LVerDomain"}
!63 = !{!64}
!64 = distinct !{!64, !62}
!65 = distinct !{!65, !24}
!66 = distinct !{!66, !15}
!67 = distinct !{!67, !15}
!68 = distinct !{!68, !24}
!69 = !{!70}
!70 = distinct !{!70, !71}
!71 = distinct !{!71, !"LVerDomain"}
!72 = !{!73}
!73 = distinct !{!73, !71}
!74 = distinct !{!74, !24}
!75 = distinct !{!75, !15}
!76 = distinct !{!76, !15}
!77 = distinct !{!77, !24}
!78 = distinct !{!78, !15}
!79 = !{!80}
!80 = distinct !{!80, !81}
!81 = distinct !{!81, !"LVerDomain"}
!82 = !{!83}
!83 = distinct !{!83, !81}
!84 = distinct !{!84, !24}
!85 = distinct !{!85, !15}
!86 = distinct !{!86, !15}
!87 = !{!88}
!88 = distinct !{!88, !89}
!89 = distinct !{!89, !"LVerDomain"}
!90 = !{!91}
!91 = distinct !{!91, !89}
!92 = distinct !{!92, !24}
!93 = distinct !{!93, !15}
!94 = distinct !{!94, !15}
!95 = distinct !{!95, !24}
!96 = distinct !{!96, !15}
!97 = distinct !{!97, !24}
!98 = distinct !{!98, !15}
!99 = distinct !{!99, !15}
!100 = !{!101}
!101 = distinct !{!101, !102, !"_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!102 = distinct !{!102, !"_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!103 = distinct !{!103, !15}
!104 = distinct !{!104, !15}
!105 = distinct !{!105, !15}
!106 = !{!107}
!107 = distinct !{!107, !108, !"_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN11flatbuffers6OffsetINS3_6StringEEENS_9allocatorIS6_EEEENS4_INS3_6VectorIS6_EEEEEENS_19__map_value_compareIS9_SD_N17url_pattern_index19OffsetVectorCompareELb1EEENS7_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS9_EEENSO_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS7_ISW_EEEEEEDpOT_: argument 0"}
!108 = distinct !{!108, !"_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN11flatbuffers6OffsetINS3_6StringEEENS_9allocatorIS6_EEEENS4_INS3_6VectorIS6_EEEEEENS_19__map_value_compareIS9_SD_N17url_pattern_index19OffsetVectorCompareELb1EEENS7_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS9_EEENSO_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS7_ISW_EEEEEEDpOT_"}
!109 = distinct !{!109, !15}
!110 = distinct !{!110, !15}
!111 = distinct !{!111, !15}
!112 = distinct !{!112, !15}
!113 = distinct !{!113, !15}
!114 = distinct !{!114, !15}
!115 = distinct !{!115, !15}
!116 = distinct !{!116, !15}
!117 = distinct !{!117, !15}
!118 = distinct !{!118, !15}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZNK11flatbuffers6VectorINS_6OffsetIN17url_pattern_index4flat7UrlRuleEEEE3endEv: argument 0"}
!121 = distinct !{!121, !"_ZNK11flatbuffers6VectorINS_6OffsetIN17url_pattern_index4flat7UrlRuleEEEE3endEv"}
!122 = distinct !{!122, !15}
!123 = distinct !{!123, !15}
!124 = !{i32 0, i32 33}
!125 = !{!126}
!126 = distinct !{!126, !127}
!127 = distinct !{!127, !"LVerDomain"}
!128 = !{!129}
!129 = distinct !{!129, !127}
!130 = distinct !{!130, !24}
!131 = distinct !{!131, !15}
!132 = distinct !{!132, !24}
!133 = distinct !{!133, !15}
!134 = !{!135}
!135 = distinct !{!135, !136}
!136 = distinct !{!136, !"LVerDomain"}
!137 = !{!138}
!138 = distinct !{!138, !136}
!139 = distinct !{!139, !24}
!140 = distinct !{!140, !24}
!141 = !{!142}
!142 = distinct !{!142, !143}
!143 = distinct !{!143, !"LVerDomain"}
!144 = !{!145}
!145 = distinct !{!145, !143}
!146 = distinct !{!146, !24}
!147 = distinct !{!147, !15}
!148 = distinct !{!148, !24}
