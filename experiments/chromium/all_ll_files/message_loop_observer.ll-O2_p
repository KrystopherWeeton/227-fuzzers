; ModuleID = '../../content/browser/scheduler/responsiveness/message_loop_observer.cc'
source_filename = "../../content/browser/scheduler/responsiveness/message_loop_observer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::responsiveness::MessageLoopObserver" = type { %"class.base::TaskObserver", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1" }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback.1" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::CurrentThread" = type { %"class.base::sequence_manager::internal::SequenceManagerImpl"* }
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type opaque
%"struct.base::PendingTask" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8, [3 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.std::__1::array" = type { [4 x i8*] }

@_ZTVN7content14responsiveness19MessageLoopObserverE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::responsiveness::MessageLoopObserver"*, %"struct.base::PendingTask"*, i1)* @_ZN7content14responsiveness19MessageLoopObserver15WillProcessTaskERKN4base11PendingTaskEb to i8*), i8* bitcast (void (%"class.content::responsiveness::MessageLoopObserver"*, %"struct.base::PendingTask"*)* @_ZN7content14responsiveness19MessageLoopObserver14DidProcessTaskERKN4base11PendingTaskE to i8*), i8* bitcast (void (%"class.content::responsiveness::MessageLoopObserver"*)* @_ZN7content14responsiveness19MessageLoopObserverD2Ev to i8*), i8* bitcast (void (%"class.content::responsiveness::MessageLoopObserver"*)* @_ZN7content14responsiveness19MessageLoopObserverD0Ev to i8*)] }, align 8

@_ZN7content14responsiveness19MessageLoopObserverC1EN4base17RepeatingCallbackIFvPKNS2_11PendingTaskEbEEENS3_IFvS6_EEE = hidden unnamed_addr alias void (%"class.content::responsiveness::MessageLoopObserver"*, %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback.1"*), void (%"class.content::responsiveness::MessageLoopObserver"*, %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback.1"*)* @_ZN7content14responsiveness19MessageLoopObserverC2EN4base17RepeatingCallbackIFvPKNS2_11PendingTaskEbEEENS3_IFvS6_EEE
@_ZN7content14responsiveness19MessageLoopObserverD1Ev = hidden unnamed_addr alias void (%"class.content::responsiveness::MessageLoopObserver"*), void (%"class.content::responsiveness::MessageLoopObserver"*)* @_ZN7content14responsiveness19MessageLoopObserverD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness19MessageLoopObserverC2EN4base17RepeatingCallbackIFvPKNS2_11PendingTaskEbEEENS3_IFvS6_EEE(%"class.content::responsiveness::MessageLoopObserver"*, %"class.base::RepeatingCallback"* nocapture, %"class.base::RepeatingCallback.1"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::CurrentThread", align 8
  %5 = alloca %"class.base::CurrentThread", align 8
  %6 = getelementptr inbounds %"class.content::responsiveness::MessageLoopObserver", %"class.content::responsiveness::MessageLoopObserver"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.content::responsiveness::MessageLoopObserver", %"class.content::responsiveness::MessageLoopObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content14responsiveness19MessageLoopObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.content::responsiveness::MessageLoopObserver", %"class.content::responsiveness::MessageLoopObserver"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::RepeatingCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::RepeatingCallback"* %8 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds %"class.content::responsiveness::MessageLoopObserver", %"class.content::responsiveness::MessageLoopObserver"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.base::RepeatingCallback.1", %"class.base::RepeatingCallback.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::RepeatingCallback.1"* %2 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::RepeatingCallback.1"* %13 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %18 = bitcast %"class.base::CurrentThread"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #5
  %19 = tail call %"class.base::sequence_manager::internal::SequenceManagerImpl"* @_ZN4base13CurrentThread3GetEv() #5
  %20 = getelementptr inbounds %"class.base::CurrentThread", %"class.base::CurrentThread"* %4, i64 0, i32 0
  store %"class.base::sequence_manager::internal::SequenceManagerImpl"* %19, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %20, align 8
  call void @_ZN4base13CurrentThread22SetAddQueueTimeToTasksEb(%"class.base::CurrentThread"* nonnull %4, i1 zeroext true) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #5
  %21 = bitcast %"class.base::CurrentThread"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #5
  %22 = call %"class.base::sequence_manager::internal::SequenceManagerImpl"* @_ZN4base13CurrentThread3GetEv() #5
  %23 = getelementptr inbounds %"class.base::CurrentThread", %"class.base::CurrentThread"* %5, i64 0, i32 0
  store %"class.base::sequence_manager::internal::SequenceManagerImpl"* %22, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %23, align 8
  call void @_ZN4base13CurrentThread15AddTaskObserverEPNS_12TaskObserverE(%"class.base::CurrentThread"* nonnull %5, %"class.base::TaskObserver"* %6) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::sequence_manager::internal::SequenceManagerImpl"* @_ZN4base13CurrentThread3GetEv() local_unnamed_addr #2

declare void @_ZN4base13CurrentThread22SetAddQueueTimeToTasksEb(%"class.base::CurrentThread"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base13CurrentThread15AddTaskObserverEPNS_12TaskObserverE(%"class.base::CurrentThread"*, %"class.base::TaskObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness19MessageLoopObserverD2Ev(%"class.content::responsiveness::MessageLoopObserver"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::CurrentThread", align 8
  %3 = alloca %"class.base::CurrentThread", align 8
  %4 = getelementptr inbounds %"class.content::responsiveness::MessageLoopObserver", %"class.content::responsiveness::MessageLoopObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content14responsiveness19MessageLoopObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = bitcast %"class.base::CurrentThread"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = tail call %"class.base::sequence_manager::internal::SequenceManagerImpl"* @_ZN4base13CurrentThread3GetEv() #5
  %7 = getelementptr inbounds %"class.base::CurrentThread", %"class.base::CurrentThread"* %2, i64 0, i32 0
  store %"class.base::sequence_manager::internal::SequenceManagerImpl"* %6, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %7, align 8
  %8 = getelementptr inbounds %"class.content::responsiveness::MessageLoopObserver", %"class.content::responsiveness::MessageLoopObserver"* %0, i64 0, i32 0
  call void @_ZN4base13CurrentThread18RemoveTaskObserverEPNS_12TaskObserverE(%"class.base::CurrentThread"* nonnull %2, %"class.base::TaskObserver"* %8) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %9 = bitcast %"class.base::CurrentThread"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  %10 = call %"class.base::sequence_manager::internal::SequenceManagerImpl"* @_ZN4base13CurrentThread3GetEv() #5
  %11 = getelementptr inbounds %"class.base::CurrentThread", %"class.base::CurrentThread"* %3, i64 0, i32 0
  store %"class.base::sequence_manager::internal::SequenceManagerImpl"* %10, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %11, align 8
  call void @_ZN4base13CurrentThread22SetAddQueueTimeToTasksEb(%"class.base::CurrentThread"* nonnull %3, i1 zeroext false) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  %12 = getelementptr inbounds %"class.content::responsiveness::MessageLoopObserver", %"class.content::responsiveness::MessageLoopObserver"* %0, i64 0, i32 2, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %12) #5
  %13 = getelementptr inbounds %"class.content::responsiveness::MessageLoopObserver", %"class.content::responsiveness::MessageLoopObserver"* %0, i64 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %13) #5
  ret void
}

declare void @_ZN4base13CurrentThread18RemoveTaskObserverEPNS_12TaskObserverE(%"class.base::CurrentThread"*, %"class.base::TaskObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness19MessageLoopObserverD0Ev(%"class.content::responsiveness::MessageLoopObserver"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::CurrentThread", align 8
  %3 = alloca %"class.base::CurrentThread", align 8
  %4 = getelementptr inbounds %"class.content::responsiveness::MessageLoopObserver", %"class.content::responsiveness::MessageLoopObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content14responsiveness19MessageLoopObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = bitcast %"class.base::CurrentThread"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = tail call %"class.base::sequence_manager::internal::SequenceManagerImpl"* @_ZN4base13CurrentThread3GetEv() #5
  %7 = getelementptr inbounds %"class.base::CurrentThread", %"class.base::CurrentThread"* %2, i64 0, i32 0
  store %"class.base::sequence_manager::internal::SequenceManagerImpl"* %6, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %7, align 8
  %8 = getelementptr inbounds %"class.content::responsiveness::MessageLoopObserver", %"class.content::responsiveness::MessageLoopObserver"* %0, i64 0, i32 0
  call void @_ZN4base13CurrentThread18RemoveTaskObserverEPNS_12TaskObserverE(%"class.base::CurrentThread"* nonnull %2, %"class.base::TaskObserver"* %8) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %9 = bitcast %"class.base::CurrentThread"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  %10 = call %"class.base::sequence_manager::internal::SequenceManagerImpl"* @_ZN4base13CurrentThread3GetEv() #5
  %11 = getelementptr inbounds %"class.base::CurrentThread", %"class.base::CurrentThread"* %3, i64 0, i32 0
  store %"class.base::sequence_manager::internal::SequenceManagerImpl"* %10, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %11, align 8
  call void @_ZN4base13CurrentThread22SetAddQueueTimeToTasksEb(%"class.base::CurrentThread"* nonnull %3, i1 zeroext false) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  %12 = getelementptr inbounds %"class.content::responsiveness::MessageLoopObserver", %"class.content::responsiveness::MessageLoopObserver"* %0, i64 0, i32 2, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %12) #5
  %13 = getelementptr inbounds %"class.content::responsiveness::MessageLoopObserver", %"class.content::responsiveness::MessageLoopObserver"* %0, i64 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %13) #5
  %14 = bitcast %"class.content::responsiveness::MessageLoopObserver"* %0 to i8*
  call void @_ZdlPv(i8* %14) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness19MessageLoopObserver15WillProcessTaskERKN4base11PendingTaskEb(%"class.content::responsiveness::MessageLoopObserver"* nocapture readonly, %"struct.base::PendingTask"* dereferenceable(112), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.content::responsiveness::MessageLoopObserver", %"class.content::responsiveness::MessageLoopObserver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %5, i64 0, i32 1
  %7 = bitcast void ()** %6 to void (%"class.base::internal::BindStateBase"*, %"struct.base::PendingTask"*, i1)**
  %8 = load void (%"class.base::internal::BindStateBase"*, %"struct.base::PendingTask"*, i1)*, void (%"class.base::internal::BindStateBase"*, %"struct.base::PendingTask"*, i1)** %7, align 8
  tail call void %8(%"class.base::internal::BindStateBase"* %5, %"struct.base::PendingTask"* %1, i1 zeroext %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness19MessageLoopObserver14DidProcessTaskERKN4base11PendingTaskE(%"class.content::responsiveness::MessageLoopObserver"* nocapture readonly, %"struct.base::PendingTask"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::responsiveness::MessageLoopObserver", %"class.content::responsiveness::MessageLoopObserver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %4, i64 0, i32 1
  %6 = bitcast void ()** %5 to void (%"class.base::internal::BindStateBase"*, %"struct.base::PendingTask"*)**
  %7 = load void (%"class.base::internal::BindStateBase"*, %"struct.base::PendingTask"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.base::PendingTask"*)** %6, align 8
  tail call void %7(%"class.base::internal::BindStateBase"* %4, %"struct.base::PendingTask"* %1) #5
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
