; ModuleID = '../../third_party/blink/renderer/modules/accessibility/ax_validation_message.cc'
source_filename = "../../third_party/blink/renderer/modules/accessibility/ax_validation_message.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" }
%"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" = type { [8 x i8] }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.111 }
%class.scoped_refptr.111 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.200" }
%"struct.std::__1::atomic.200" = type { %"struct.std::__1::__atomic_base.201" }
%"struct.std::__1::__atomic_base.201" = type { %"struct.std::__1::__atomic_base.202" }
%"struct.std::__1::__atomic_base.202" = type { %"struct.std::__1::__cxx_atomic_impl.203" }
%"struct.std::__1::__cxx_atomic_impl.203" = type { %"struct.std::__1::__cxx_atomic_base_impl.204" }
%"struct.std::__1::__cxx_atomic_base_impl.204" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.253", i32, [4 x i8], %"class.std::__1::unique_ptr.389", %"class.std::__1::unique_ptr.389", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.405", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.423", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.430", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.325", %"class.std::__1::unique_ptr.325", %"class.std::__1::unique_ptr.332", %"class.std::__1::unique_ptr.339", %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.369", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.289" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.289" = type { %"struct.std::__1::__atomic_base.290" }
%"struct.std::__1::__atomic_base.290" = type { %"struct.std::__1::__atomic_base.291" }
%"struct.std::__1::__atomic_base.291" = type { %"struct.std::__1::__cxx_atomic_impl.292" }
%"struct.std::__1::__cxx_atomic_impl.292" = type { %"struct.std::__1::__cxx_atomic_base_impl.293" }
%"struct.std::__1::__cxx_atomic_base_impl.293" = type { i64 }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::Worklist.300"* }
%"class.blink::Worklist.300" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.289" }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::Worklist.307"* }
%"class.blink::Worklist.307" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.289" }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.blink::Worklist.314"* }
%"class.blink::Worklist.314" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.289" }
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::Worklist.321"* }
%"class.blink::Worklist.321" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.289" }
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::Worklist.328"* }
%"class.blink::Worklist.328" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.289" }
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.blink::Worklist.335"* }
%"class.blink::Worklist.335" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.289" }
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.blink::Worklist.342"* }
%"class.blink::Worklist.342" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.289" }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.349", %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.361", %"class.std::__1::__compressed_pair.363", [4 x i8] }>
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351", %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { i64 }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { float }
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.372", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.381" }
%"class.WTF::Vector.381" = type { %"class.WTF::VectorBuffer.382" }
%"class.WTF::VectorBuffer.382" = type { %"class.WTF::VectorBufferBase.383" }
%"class.WTF::VectorBufferBase.383" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.411" }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.300"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.307"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.314"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.321"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.328"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.666" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667" }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.429 }
%class.scoped_refptr.429 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.430" = type { %"struct.std::__1::__atomic_base.431" }
%"struct.std::__1::__atomic_base.431" = type { %"struct.std::__1::__cxx_atomic_impl.432" }
%"struct.std::__1::__cxx_atomic_impl.432" = type { %"struct.std::__1::__cxx_atomic_base_impl.433" }
%"struct.std::__1::__cxx_atomic_base_impl.433" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AXValidationMessage" = type { %"class.blink::AXMockObject" }
%"class.blink::AXMockObject" = type { %"class.blink::AXObject" }
%"class.blink::AXObject" = type { i32 (...)**, i32, %"class.blink::Member", %"class.blink::HeapVector", i8, i32, %"class.blink::LayoutRect", i32, i32, i8, %"class.blink::Member", i32, i32, %"class.blink::FloatRect", %"class.blink::Member.2" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::AXObject"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::AXObjectCacheImpl"* }
%"class.blink::AXObjectCacheImpl" = type { %"class.blink::AXObjectCacheBase", %"class.blink::mojom::blink::PermissionObserver", %"class.blink::Member.6", %"class.ui::AXMode", [4 x i8], %"class.blink::HeapHashMap", %"class.blink::HeapHashMap.11", %"class.WTF::HashMap.18", %"class.blink::HeapHashMap.22", %"class.WTF::HashMap.29", i32, [4 x i8], %"class.WTF::HashSet", i32, %"class.blink::WeakMember", %"class.std::__1::unique_ptr", %"class.blink::HeapVector.38", i32, %"class.blink::HeapMojoRemote", %"class.blink::HeapMojoReceiver", %"class.blink::HeapHashSet", %"class.blink::HeapVector.56", %"class.blink::HeapHashSet.64", i32, i8, [3 x i8], %"class.WTF::HashMap.72", %"class.WTF::HashSet", %"class.WTF::HashSet", i32, i32, %"class.WTF::HashCountedSet", i8, [7 x i8], %"class.WTF::HashSet" }
%"class.blink::AXObjectCacheBase" = type { %"class.blink::AXObjectCache" }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::mojom::blink::PermissionObserver" = type { i32 (...)** }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.196", %"class.WTF::Vector.196", i8, i32, %"class.blink::Member.207", %"class.blink::Member.209", %"class.blink::Member.211", %"class.blink::Member.213", %"class.blink::Member.215", %"class.blink::Member.217", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.225", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.231", %"class.blink::Member.233", %"class.blink::Member.152", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.236", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.128", %"class.blink::Member.109", %"class.blink::Member.445", %"class.blink::Member.109", %"class.blink::Member.109", %"class.blink::Member.109", %"class.blink::UserActionElementSet", %"class.blink::Member.454", double, double, i64, i64, %"class.blink::HeapHashSet.456", %"class.blink::HeapHashSet.463", i16, i8, %"class.blink::Member.470", %"class.blink::Member.472", %"class.blink::Member.474", %"class.blink::Member.476", %"class.blink::TextLinkColors", %"class.blink::Member.478", i8, [7 x i8], %"class.blink::HeapHashMap.480", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.109", %"class.WTF::Vector.487", %"class.blink::Member.492", %"class.blink::Member.494", i8, %"class.blink::Member.109", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.496", %"class.blink::HeapVector.498", %"class.std::__1::unique_ptr.506", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.512", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.525", %"class.WTF::Vector.527", i8, i8, %"class.std::__1::unique_ptr.532", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.128", %"class.blink::HeapVector.538", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.546", i8, i32, %"class.blink::Member.548", %"class.blink::Member.550", %"class.blink::Member.552", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.554", %"class.WTF::HashMap.556", %"class.blink::Member.561", %"class.blink::Member.563", %"class.blink::Member.565", %"class.blink::Member.567", %"class.blink::Member.6", %"class.blink::Member.6", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.569", i8, i32, %"class.blink::Member.576", %"class.blink::Member.578", i32, %"class.blink::Member.580", %"class.blink::Member.582", %"class.blink::Member.584", %"class.std::__1::unique_ptr.586", i64, %"class.std::__1::unique_ptr.592", i32, i32, %"class.blink::Member.603", %"class.blink::Member.605", %"class.blink::Member.607", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.609", %"class.WTF::Vector.611", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.616", %"class.blink::Member.623", %"class.std::__1::unique_ptr.625", %"class.blink::Member.631", i8, i8, %"class.WTF::String", %"class.blink::Member.633", i8, [7 x i8], %"class.blink::HeapHashMap.635", %"class.blink::HeapObserverSet", %"class.blink::Member.649", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.651", i32, i8, i8, %"class.blink::WeakMember.70", %"class.blink::Member.653" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.84", %"class.blink::Member.84" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.84", %"class.blink::Member.85", %"class.blink::Member.84", %"class.blink::Member.84", %"class.blink::Member.87" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.85" = type { %"class.blink::MemberBase.86" }
%"class.blink::MemberBase.86" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.87" = type { %"class.blink::MemberBase.88" }
%"class.blink::MemberBase.88" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.84" = type { %"class.blink::MemberBase.71" }
%"class.blink::MemberBase.71" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.91", %"class.blink::Member.6", %"class.blink::Member.85", %"class.blink::Member.93", %"class.blink::Member.93", %"class.blink::Member.135", %"class.blink::Member.137", %"class.blink::Member.139", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.144", %"class.blink::HeapVector.146" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.97" }
%"class.blink::HeapHashMap.97" = type { %"class.WTF::HashMap.100" }
%"class.WTF::HashMap.100" = type { %"class.WTF::HashTable.101" }
%"class.WTF::HashTable.101" = type <{ %"struct.WTF::KeyValuePair.103"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.103" = type { %"class.WTF::AtomicString", %"class.blink::Member.105" }
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.109", i32, %"class.blink::HeapVector.128" }
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.137" = type { %"class.blink::MemberBase.138" }
%"class.blink::MemberBase.138" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.139" = type { %"class.blink::MemberBase.140" }
%"class.blink::MemberBase.140" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.141" }
%"class.blink::Member.141" = type { %"class.blink::MemberBase.142" }
%"class.blink::MemberBase.142" = type { %"class.blink::HeapHashMap.143"* }
%"class.blink::HeapHashMap.143" = type opaque
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.146" = type { %"class.WTF::Vector.149" }
%"class.WTF::Vector.149" = type { %"class.WTF::VectorBuffer.150" }
%"class.WTF::VectorBuffer.150" = type { %"class.WTF::VectorBufferBase.151" }
%"class.WTF::VectorBufferBase.151" = type { %"class.blink::Member.152"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.189" }
%"class.blink::HeapHashMap.189" = type { %"class.WTF::HashMap.192" }
%"class.WTF::HashMap.192" = type { %"class.WTF::HashTable.193" }
%"class.WTF::HashTable.193" = type <{ %"struct.WTF::KeyValuePair.195"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.195" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.196" = type { %"class.WTF::VectorBuffer.197" }
%"class.WTF::VectorBuffer.197" = type { %"class.WTF::VectorBufferBase.198" }
%"class.WTF::VectorBufferBase.198" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.199 }
%class.scoped_refptr.199 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.200" }
%"class.blink::Member.207" = type { %"class.blink::MemberBase.208" }
%"class.blink::MemberBase.208" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.209" = type { %"class.blink::MemberBase.210" }
%"class.blink::MemberBase.210" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.671", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.712", i32, i8, [3 x i8], %"class.blink::HeapVector.714", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.722", %"class.blink::Member.724", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.733", %"class.blink::Member.739", %"class.blink::Member.741", i8, [7 x i8] }>
%"class.blink::Supplementable.671" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.672" }
%"class.blink::HeapHashMap.672" = type { %"class.WTF::HashMap.675" }
%"class.WTF::HashMap.675" = type { %"class.WTF::HashTable.676" }
%"class.WTF::HashTable.676" = type <{ %"struct.WTF::KeyValuePair.678"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.678" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.687" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.679" }
%"class.blink::HeapObserverSet.679" = type { i32, [4 x i8], %"class.blink::HeapHashSet.680" }
%"class.blink::HeapHashSet.680" = type { %"class.WTF::HashSet.683" }
%"class.WTF::HashSet.683" = type { %"class.WTF::HashTable.684" }
%"class.WTF::HashTable.684" = type <{ %"class.blink::WeakMember.686"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.686" = type opaque
%"class.blink::Supplementable.687" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.688" }
%"class.blink::HeapHashMap.688" = type { %"class.WTF::HashMap.691" }
%"class.WTF::HashMap.691" = type { %"class.WTF::HashTable.692" }
%"class.WTF::HashTable.692" = type <{ %"struct.WTF::KeyValuePair.694"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.694" = type { i8*, %"class.blink::Member.1464" }
%"class.blink::Member.1464" = type { %"class.blink::MemberBase.1465" }
%"class.blink::MemberBase.1465" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1466" }
%"class.blink::Member.1466" = type { %"class.blink::MemberBase.1467" }
%"class.blink::MemberBase.1467" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.695, %"class.std::__1::unique_ptr.696", %"class.std::__1::unique_ptr.696", %"class.std::__1::unique_ptr.702", %"class.std::__1::unique_ptr.702", %"class.blink::Member.209", i32, [4 x i8], %"class.WTF::HashSet.708", i32, i32 }
%class.scoped_refptr.695 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.702" = type { %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.708" = type { %"class.WTF::HashTable.709" }
%"class.WTF::HashTable.709" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.712" = type { %"class.blink::MemberBase.713" }
%"class.blink::MemberBase.713" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.714" = type { %"class.WTF::Vector.717" }
%"class.WTF::Vector.717" = type { %"class.WTF::VectorBuffer.718" }
%"class.WTF::VectorBuffer.718" = type { %"class.WTF::VectorBufferBase.719" }
%"class.WTF::VectorBufferBase.719" = type { %"class.blink::Member.720"*, i32, i32 }
%"class.blink::Member.720" = type opaque
%"class.blink::Member.722" = type { %"class.blink::MemberBase.723" }
%"class.blink::MemberBase.723" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.726", i32, i32 }
%"class.blink::HeapHashMap.726" = type { %"class.WTF::HashMap.729" }
%"class.WTF::HashMap.729" = type { %"class.WTF::HashTable.730" }
%"class.WTF::HashTable.730" = type <{ %"struct.WTF::KeyValuePair.732"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.732" = type opaque
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.211" = type { %"class.blink::MemberBase.212" }
%"class.blink::MemberBase.212" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.213" = type { %"class.blink::MemberBase.214" }
%"class.blink::MemberBase.214" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.215" = type { %"class.blink::MemberBase.216" }
%"class.blink::MemberBase.216" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.217" = type { %"class.blink::MemberBase.218" }
%"class.blink::MemberBase.218" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.219" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::KURL"* }
%"class.blink::Member.231" = type { %"class.blink::MemberBase.232" }
%"class.blink::MemberBase.232" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.152" = type { %"class.blink::MemberBase.153" }
%"class.blink::MemberBase.153" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.154", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.156, %"class.WTF::Vector.157", %"class.WTF::Vector.157", %"class.blink::Member.84", %"class.blink::Member.162", %"class.blink::HeapHashSet.166", %"class.blink::Member.6", %"class.WTF::HashSet.173", %"class.WTF::TextPosition", %"class.blink::Member.177", %"class.blink::HeapVector.179", %"class.blink::Member.186" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.154" = type { %"class.blink::MemberBase.155" }
%"class.blink::MemberBase.155" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.156 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.157" = type { %"class.WTF::VectorBuffer.158" }
%"class.WTF::VectorBuffer.158" = type { %"class.WTF::VectorBufferBase.159" }
%"class.WTF::VectorBufferBase.159" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.162" = type { %"class.blink::MemberBase.163" }
%"class.blink::MemberBase.163" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.164" }
%"class.blink::Member.164" = type { %"class.blink::MemberBase.165" }
%"class.blink::MemberBase.165" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.166" = type { %"class.WTF::HashSet.169" }
%"class.WTF::HashSet.169" = type { %"class.WTF::HashTable.170" }
%"class.WTF::HashTable.170" = type <{ %"class.blink::WeakMember.172"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.172" = type { %"class.blink::MemberBase.86" }
%"class.WTF::HashSet.173" = type { %"class.WTF::HashTable.174" }
%"class.WTF::HashTable.174" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.177" = type { %"class.blink::MemberBase.178" }
%"class.blink::MemberBase.178" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.179" = type { %"class.WTF::Vector.182" }
%"class.WTF::Vector.182" = type { %"class.WTF::VectorBuffer.183" }
%"class.WTF::VectorBuffer.183" = type { %"class.WTF::VectorBufferBase.184" }
%"class.WTF::VectorBufferBase.184" = type { %"class.blink::Member.162"*, i32, i32 }
%"class.blink::Member.186" = type { %"class.blink::MemberBase.187" }
%"class.blink::MemberBase.187" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.235 }
%class.scoped_refptr.235 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.236" = type { %"class.WTF::VectorBuffer.237" }
%"class.WTF::VectorBuffer.237" = type { %"class.WTF::VectorBufferBase.238" }
%"class.WTF::VectorBufferBase.238" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.239 }
%class.scoped_refptr.239 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.240", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.240" = type { %"class.base::RefCounted.241" }
%"class.base::RefCounted.241" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.244" }
%"class.blink::HeapHashMap.244" = type { %"class.WTF::HashMap.247" }
%"class.WTF::HashMap.247" = type { %"class.WTF::HashTable.248" }
%"class.WTF::HashTable.248" = type <{ %"struct.WTF::KeyValuePair.250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.250" = type { %"class.blink::WeakMember.251", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.6", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.84", %"class.blink::Member.84", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.447" }
%"class.blink::HeapHashMap.447" = type { %"class.WTF::HashMap.450" }
%"class.WTF::HashMap.450" = type { %"class.WTF::HashTable.451" }
%"class.WTF::HashTable.451" = type <{ %"struct.WTF::KeyValuePair.453"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.453" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.456" = type { %"class.WTF::HashSet.459" }
%"class.WTF::HashSet.459" = type { %"class.WTF::HashTable.460" }
%"class.WTF::HashTable.460" = type <{ %"class.blink::WeakMember.462"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.462" = type opaque
%"class.blink::HeapHashSet.463" = type { %"class.WTF::HashSet.466" }
%"class.WTF::HashSet.466" = type { %"class.WTF::HashTable.467" }
%"class.WTF::HashTable.467" = type <{ %"class.blink::WeakMember.469"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.469" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.85", %"class.blink::HeapVector.146" }
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.480" = type { %"class.WTF::HashMap.483" }
%"class.WTF::HashMap.483" = type { %"class.WTF::HashTable.484" }
%"class.WTF::HashTable.484" = type <{ %"struct.WTF::KeyValuePair.486"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.486" = type opaque
%"class.WTF::Vector.487" = type { %"class.WTF::VectorBuffer.488" }
%"class.WTF::VectorBuffer.488" = type { %"class.WTF::VectorBufferBase.489" }
%"class.WTF::VectorBufferBase.489" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::AXObjectCache"* }
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.109" = type { %"class.blink::MemberBase.110" }
%"class.blink::MemberBase.110" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.112" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.112" = type { %"class.blink::MemberBase.113" }
%"class.blink::MemberBase.113" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.116", %"class.blink::Member.118", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.116" = type { %"class.WTF::SingleThreadedBitField.117" }
%"class.WTF::SingleThreadedBitField.117" = type { i32 }
%"class.blink::Member.118" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.120 }
%class.scoped_refptr.120 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.121", %"class.WTF::AtomicString", %"class.WTF::Vector.123" }
%"class.WTF::RefCounted.121" = type { %"class.base::RefCounted.122" }
%"class.base::RefCounted.122" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.123" = type { %"class.WTF::VectorBuffer.124" }
%"class.WTF::VectorBuffer.124" = type { %"class.WTF::VectorBufferBase.125", [32 x i8] }
%"class.WTF::VectorBufferBase.125" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.498" = type { %"class.WTF::Vector.501" }
%"class.WTF::Vector.501" = type { %"class.WTF::VectorBuffer.502" }
%"class.WTF::VectorBuffer.502" = type { %"class.WTF::VectorBufferBase.503" }
%"class.WTF::VectorBufferBase.503" = type { %"class.blink::Member.504"*, i32, i32 }
%"class.blink::Member.504" = type opaque
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.512" = type { %"class.WTF::HashSet.515" }
%"class.WTF::HashSet.515" = type { %"class.WTF::HashTable.516" }
%"class.WTF::HashTable.516" = type <{ %"class.blink::WeakMember.518"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.518" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.519", i32, [4 x i8] }>
%"class.WTF::Vector.519" = type { %"class.WTF::VectorBuffer.520" }
%"class.WTF::VectorBuffer.520" = type { %"class.WTF::VectorBufferBase.521" }
%"class.WTF::VectorBufferBase.521" = type { %"struct.std::__1::pair.522"*, i32, i32 }
%"struct.std::__1::pair.522" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.527" = type { %"class.WTF::VectorBuffer.528" }
%"class.WTF::VectorBuffer.528" = type { %"class.WTF::VectorBufferBase.529" }
%"class.WTF::VectorBufferBase.529" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.128" = type { %"class.WTF::Vector.131" }
%"class.WTF::Vector.131" = type { %"class.WTF::VectorBuffer.132" }
%"class.WTF::VectorBuffer.132" = type { %"class.WTF::VectorBufferBase.133" }
%"class.WTF::VectorBufferBase.133" = type { %"class.blink::Member.109"*, i32, i32 }
%"class.blink::HeapVector.538" = type { %"class.WTF::Vector.541" }
%"class.WTF::Vector.541" = type { %"class.WTF::VectorBuffer.542" }
%"class.WTF::VectorBuffer.542" = type { %"class.WTF::VectorBufferBase.543" }
%"class.WTF::VectorBufferBase.543" = type { %"class.blink::Member.544"*, i32, i32 }
%"class.blink::Member.544" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.6" }
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.548" = type { %"class.blink::MemberBase.549" }
%"class.blink::MemberBase.549" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type opaque
%"class.blink::Member.561" = type { %"class.blink::MemberBase.562" }
%"class.blink::MemberBase.562" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.55", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.436, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.436 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.437" }>
%"class.base::RefCountedThreadSafe.437" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.438 }
%class.scoped_refptr.438 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.439", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.439" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.440" }
%"struct.std::__1::atomic.440" = type { %"struct.std::__1::__atomic_base.441" }
%"struct.std::__1::__atomic_base.441" = type { %"struct.std::__1::__atomic_base.442" }
%"struct.std::__1::__atomic_base.442" = type { %"struct.std::__1::__cxx_atomic_impl.443" }
%"struct.std::__1::__cxx_atomic_impl.443" = type { %"struct.std::__1::__cxx_atomic_base_impl.444" }
%"struct.std::__1::__cxx_atomic_base_impl.444" = type { i8 }
%"class.blink::WeakMember.55" = type { %"class.blink::MemberBase.7" }
%"class.blink::HeapHashSet.569" = type { %"class.WTF::HashSet.572" }
%"class.WTF::HashSet.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ %"class.blink::Member.575"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.575" = type opaque
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.578" = type { %"class.blink::MemberBase.579" }
%"class.blink::MemberBase.579" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.580" = type { %"class.blink::MemberBase.581" }
%"class.blink::MemberBase.581" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.586" = type { %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.173", %"class.WTF::HashSet.173", %"class.WTF::HashSet.173", %"class.WTF::HashSet.173", %"class.WTF::HashSet.173", %"class.WTF::HashSet.173", i32, [4 x i8], %"class.WTF::HashMap.595", %"class.WTF::HashMap.595", %"class.WTF::HashMap.595", %"class.WTF::HashMap.595", %"class.WTF::HashMap.595", %"class.WTF::HashMap.595", %"class.WTF::HashMap.595", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.595" = type { %"class.WTF::HashTable.596" }
%"class.WTF::HashTable.596" = type <{ %"struct.WTF::KeyValuePair.599"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.599" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.609" = type { %"class.blink::MemberBase.610" }
%"class.blink::MemberBase.610" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.611" = type { %"class.WTF::VectorBuffer.612" }
%"class.WTF::VectorBuffer.612" = type { %"class.WTF::VectorBufferBase.613" }
%"class.WTF::VectorBufferBase.613" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.616" = type { %"class.WTF::HashMap.619" }
%"class.WTF::HashMap.619" = type { %"class.WTF::HashTable.620" }
%"class.WTF::HashTable.620" = type <{ %"struct.WTF::KeyValuePair.622"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.622" = type opaque
%"class.blink::Member.623" = type { %"class.blink::MemberBase.624" }
%"class.blink::MemberBase.624" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.631" = type { %"class.blink::MemberBase.632" }
%"class.blink::MemberBase.632" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.633" = type { %"class.blink::MemberBase.634" }
%"class.blink::MemberBase.634" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.635" = type { %"class.WTF::HashMap.638" }
%"class.WTF::HashMap.638" = type { %"class.WTF::HashTable.639" }
%"class.WTF::HashTable.639" = type <{ %"struct.WTF::KeyValuePair.641"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.641" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.642" }
%"class.blink::HeapHashSet.642" = type { %"class.WTF::HashSet.645" }
%"class.WTF::HashSet.645" = type { %"class.WTF::HashTable.646" }
%"class.WTF::HashTable.646" = type <{ %"class.blink::WeakMember.648"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.648" = type opaque
%"class.blink::Member.649" = type { %"class.blink::MemberBase.650" }
%"class.blink::MemberBase.650" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.651" = type { %"class.blink::MemberBase.652" }
%"class.blink::MemberBase.652" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.6", %"class.blink::HeapHashSet.657", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.664", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.657" = type { %"class.WTF::HashSet.660" }
%"class.WTF::HashSet.660" = type { %"class.WTF::HashTable.661" }
%"class.WTF::HashTable.661" = type <{ %"class.blink::Member.663"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.663" = type opaque
%"class.blink::HeapTaskRunnerTimer.664" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.665", { i64, i64 } }
%"class.blink::WeakMember.665" = type { %"class.blink::MemberBase.652" }
%"class.blink::WeakMember.70" = type { %"class.blink::MemberBase.71" }
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.ui::AXMode" = type { i32 }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.blink::Member" }
%"class.blink::HeapHashMap.11" = type { %"class.WTF::HashMap.14" }
%"class.WTF::HashMap.14" = type { %"class.WTF::HashTable.15" }
%"class.WTF::HashTable.15" = type <{ %"struct.WTF::KeyValuePair.17"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.17" = type opaque
%"class.WTF::HashMap.18" = type { %"class.WTF::HashTable.19" }
%"class.WTF::HashTable.19" = type <{ %"struct.WTF::KeyValuePair.21"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.21" = type opaque
%"class.blink::HeapHashMap.22" = type { %"class.WTF::HashMap.25" }
%"class.WTF::HashMap.25" = type { %"class.WTF::HashTable.26" }
%"class.WTF::HashTable.26" = type <{ %"struct.WTF::KeyValuePair.28"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.28" = type opaque
%"class.WTF::HashMap.29" = type { %"class.WTF::HashTable.30" }
%"class.WTF::HashTable.30" = type <{ %"struct.WTF::KeyValuePair.33"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.33" = type opaque
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::AXRelationCache"* }
%"class.blink::AXRelationCache" = type opaque
%"class.blink::HeapVector.38" = type { %"class.WTF::Vector.41" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.blink::Member.44"*, i32, i32 }
%"class.blink::Member.44" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.46" }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.48" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::PermissionObserver, blink::AXObjectCacheImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::PermissionObserver, blink::AXObjectCacheImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.52" }
%"class.WTF::HashSet.52" = type { %"class.WTF::HashTable.53" }
%"class.WTF::HashTable.53" = type <{ %"class.blink::WeakMember.55"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.56" = type { %"class.WTF::Vector.59" }
%"class.WTF::Vector.59" = type { %"class.WTF::VectorBuffer.60" }
%"class.WTF::VectorBuffer.60" = type { %"class.WTF::VectorBufferBase.61" }
%"class.WTF::VectorBufferBase.61" = type { %"class.blink::Member.62"*, i32, i32 }
%"class.blink::Member.62" = type opaque
%"class.blink::HeapHashSet.64" = type { %"class.WTF::HashSet.67" }
%"class.WTF::HashSet.67" = type { %"class.WTF::HashTable.68" }
%"class.WTF::HashTable.68" = type <{ %"class.blink::WeakMember.70"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.72" = type { %"class.WTF::HashTable.73" }
%"class.WTF::HashTable.73" = type <{ %"struct.WTF::KeyValuePair.76"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.76" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.77" }
%"class.WTF::HashMap.77" = type { %"class.WTF::HashTable.78" }
%"class.WTF::HashTable.78" = type <{ %"struct.WTF::KeyValuePair.81"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.81" = type { %"class.blink::BlinkAXEventIntent", i32, [4 x i8] }
%"class.blink::BlinkAXEventIntent" = type <{ i32 (...)**, %"struct.ui::AXEventIntent", i8, i8, [6 x i8] }>
%"struct.ui::AXEventIntent" = type { i32 (...)**, i32, i32, i32, i32 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.34" }
%"class.WTF::HashTable.34" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.743" = type opaque
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.blink::ListedElement" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.744", %"class.blink::Member.746", %"class.blink::Member.748", %"class.WTF::String", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.blink::Member.744" = type { %"class.blink::MemberBase.745" }
%"class.blink::MemberBase.745" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.746" = type { %"class.blink::MemberBase.747" }
%"class.blink::MemberBase.747" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.748" = type { %"class.blink::MemberBase.749" }
%"class.blink::MemberBase.749" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.1492", %"class.blink::Member.1494", %"class.blink::Member.1496", %"class.blink::Member.1515", %"class.blink::Member.1517" }
%"class.blink::Member.1492" = type { %"class.blink::MemberBase.1493" }
%"class.blink::MemberBase.1493" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.750 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.750, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1199" }
%"class.blink::MemberBase.1199" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1200" }
%"class.std::__1::unique_ptr.1200" = type { %"class.std::__1::__compressed_pair.1201" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.1202" }
%"struct.std::__1::__compressed_pair_elem.1202" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1203", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1209", %"class.std::__1::unique_ptr.1332", i8, %"class.absl::optional.1338", %class.scoped_refptr.1314, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1343" }
%"class.std::__1::unique_ptr.1203" = type { %"class.std::__1::__compressed_pair.1204" }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.1205" }
%"struct.std::__1::__compressed_pair_elem.1205" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1209" = type { %"class.std::__1::__compressed_pair.1210" }
%"class.std::__1::__compressed_pair.1210" = type { %"struct.std::__1::__compressed_pair_elem.1211" }
%"struct.std::__1::__compressed_pair_elem.1211" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1212, %class.scoped_refptr.1212, %class.scoped_refptr.1212, %class.scoped_refptr.1212, %class.scoped_refptr.1212, %class.scoped_refptr.1212, %class.scoped_refptr.1247, %class.scoped_refptr.1263, %class.scoped_refptr.1264, %class.scoped_refptr.1264, %class.scoped_refptr.1264, %class.scoped_refptr.1264, %class.scoped_refptr.1264, %class.scoped_refptr.1264, %class.scoped_refptr.1304, %class.scoped_refptr.1305, %class.scoped_refptr.1305, %class.scoped_refptr.1305, %class.scoped_refptr.1305, %class.scoped_refptr.1305, %class.scoped_refptr.1305, %class.scoped_refptr.1305, %class.scoped_refptr.1305, %class.scoped_refptr.1328 }
%class.scoped_refptr.1212 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1229" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1213", i8, i8, %class.scoped_refptr.1215, i32, i32 }
%"class.WTF::RefCounted.1213" = type { %"class.base::RefCounted.1214" }
%"class.base::RefCounted.1214" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1215 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1222, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1223", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1216" }
%"class.std::__1::unique_ptr.1216" = type { %"class.std::__1::__compressed_pair.1217" }
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"struct.std::__1::__compressed_pair_elem.1218" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1222 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1248", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1248" = type { %"class.WTF::RefCounted.1249", i8, i8, %class.scoped_refptr.1222, i32, i32 }
%"class.WTF::RefCounted.1249" = type { %"class.base::RefCounted.1250" }
%"class.base::RefCounted.1250" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1251" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1251" = type { %"class.absl::optional_internal::optional_data.1252" }
%"class.absl::optional_internal::optional_data.1252" = type { %"class.absl::optional_internal::optional_data_base.1253" }
%"class.absl::optional_internal::optional_data_base.1253" = type { %"class.absl::optional_internal::optional_data_dtor_base.1254" }
%"class.absl::optional_internal::optional_data_dtor_base.1254" = type { i8, %union.anon.1255 }
%union.anon.1255 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1256", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1256" = type { %"class.std::__1::__vector_base.1257" }
%"class.std::__1::__vector_base.1257" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1258" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1258" = type { %"struct.std::__1::__compressed_pair_elem.1259" }
%"struct.std::__1::__compressed_pair_elem.1259" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1223" = type { %"class.std::__1::__compressed_pair.1224" }
%"class.std::__1::__compressed_pair.1224" = type { %"struct.std::__1::__compressed_pair_elem.1225" }
%"struct.std::__1::__compressed_pair_elem.1225" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1229" = type { %"class.std::__1::__compressed_pair.1230" }
%"class.std::__1::__compressed_pair.1230" = type { %"struct.std::__1::__compressed_pair_elem.1231" }
%"struct.std::__1::__compressed_pair_elem.1231" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1232", %"class.std::__1::unique_ptr.1238", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1232" = type { %"class.std::__1::__compressed_pair.1233" }
%"class.std::__1::__compressed_pair.1233" = type { %"struct.std::__1::__compressed_pair_elem.1234" }
%"struct.std::__1::__compressed_pair_elem.1234" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1238" = type { %"class.std::__1::__compressed_pair.1239" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.1240" }
%"struct.std::__1::__compressed_pair_elem.1240" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1247 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1263 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1264 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1265" }
%"class.blink::PaintPropertyNode.1265" = type { %"class.WTF::RefCounted.1266", i8, i8, %class.scoped_refptr.1268, i32, i32 }
%"class.WTF::RefCounted.1266" = type { %"class.base::RefCounted.1267" }
%"class.base::RefCounted.1267" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1268 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1215, %class.scoped_refptr.1269, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1291", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1269 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1306" }
%"class.blink::PaintPropertyNode.1306" = type { %"class.WTF::RefCounted.1307", i8, i8, %class.scoped_refptr.1269, i32, i32 }
%"class.WTF::RefCounted.1307" = type { %"class.base::RefCounted.1308" }
%"class.base::RefCounted.1308" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1270" }
%"class.std::__1::vector.1270" = type { %"class.std::__1::__vector_base.1271" }
%"class.std::__1::__vector_base.1271" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1286" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1272, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1279", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1272 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1273, i32, %"class.absl::optional.1274", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.200" }>
%class.sk_sp.1273 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1274" = type { %"class.absl::optional_internal::optional_data.1275" }
%"class.absl::optional_internal::optional_data.1275" = type { %"class.absl::optional_internal::optional_data_base.1276" }
%"class.absl::optional_internal::optional_data_base.1276" = type { %"class.absl::optional_internal::optional_data_dtor_base.1277" }
%"class.absl::optional_internal::optional_data_dtor_base.1277" = type { i8, %union.anon.1278 }
%union.anon.1278 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.1279" = type { %"class.std::__1::__vector_base.1280" }
%"class.std::__1::__vector_base.1280" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1281" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1281" = type { %"struct.std::__1::__compressed_pair_elem.1282" }
%"struct.std::__1::__compressed_pair_elem.1282" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1286" = type { %"struct.std::__1::__compressed_pair_elem.1287" }
%"struct.std::__1::__compressed_pair_elem.1287" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.1291" = type { %"class.std::__1::__compressed_pair.1292" }
%"class.std::__1::__compressed_pair.1292" = type { %"struct.std::__1::__compressed_pair_elem.1293" }
%"struct.std::__1::__compressed_pair_elem.1293" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1297" }
%"class.std::__1::vector.1297" = type { %"class.std::__1::__vector_base.1298" }
%"class.std::__1::__vector_base.1298" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1299" }
%"class.std::__1::__compressed_pair.1299" = type { %"struct.std::__1::__compressed_pair_elem.1300" }
%"struct.std::__1::__compressed_pair_elem.1300" = type { i32* }
%class.scoped_refptr.1304 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1305 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1317" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1215, %"class.absl::optional.1309", %class.scoped_refptr.1314, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1309" = type { %"class.absl::optional_internal::optional_data.1310" }
%"class.absl::optional_internal::optional_data.1310" = type { %"class.absl::optional_internal::optional_data_base.1311" }
%"class.absl::optional_internal::optional_data_base.1311" = type { %"class.absl::optional_internal::optional_data_dtor_base.1312" }
%"class.absl::optional_internal::optional_data_dtor_base.1312" = type { i8, [3 x i8], %union.anon.1313 }
%union.anon.1313 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1317" = type { %"class.std::__1::__compressed_pair.1318" }
%"class.std::__1::__compressed_pair.1318" = type { %"struct.std::__1::__compressed_pair_elem.1319" }
%"struct.std::__1::__compressed_pair_elem.1319" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1320", i32, [4 x i8] }>
%"class.WTF::Vector.1320" = type { %"class.WTF::VectorBuffer.1321" }
%"class.WTF::VectorBuffer.1321" = type { %"class.WTF::VectorBufferBase.1322" }
%"class.WTF::VectorBufferBase.1322" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1328 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1332" = type { %"class.std::__1::__compressed_pair.1333" }
%"class.std::__1::__compressed_pair.1333" = type { %"struct.std::__1::__compressed_pair_elem.1334" }
%"struct.std::__1::__compressed_pair_elem.1334" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1215, %class.scoped_refptr.1269, %class.scoped_refptr.1268 }
%"class.absl::optional.1338" = type { %"class.absl::optional_internal::optional_data.1339" }
%"class.absl::optional_internal::optional_data.1339" = type { %"class.absl::optional_internal::optional_data_base.1340" }
%"class.absl::optional_internal::optional_data_base.1340" = type { %"class.absl::optional_internal::optional_data_dtor_base.1341" }
%"class.absl::optional_internal::optional_data_dtor_base.1341" = type { i8, %union.anon.1342 }
%union.anon.1342 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1314 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1315", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1122, i32, %"struct.std::__1::atomic.440", %"struct.std::__1::atomic.440", i8, i8 }>
%class.sk_sp.1122 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1123, %class.SkTDArray.1124, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.200" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1123 = type { i8*, i32, i32 }
%class.SkTDArray.1124 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1125 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.200", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.440" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1125 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.430", [3 x i8] }
%"class.WTF::RefCounted.1315" = type { %"class.base::RefCounted.1316" }
%"class.base::RefCounted.1316" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1343" = type { %"class.std::__1::__compressed_pair.1344" }
%"class.std::__1::__compressed_pair.1344" = type { %"struct.std::__1::__compressed_pair_elem.1345" }
%"struct.std::__1::__compressed_pair_elem.1345" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.750 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1184", %"class.std::__1::unique_ptr.1186" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.816", %"class.blink::DataRef.896", %"class.blink::DataRef.900", %"class.blink::DataRef.1100", %"class.blink::DataRef.1167", %"class.blink::DataRef.1171", %"class.blink::DataRef.1175", %"class.blink::DataRef.1179", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.751 }
%class.scoped_refptr.751 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.752", %"class.blink::DataRef.754", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.752" = type { %"class.base::RefCounted.753" }
%"class.base::RefCounted.753" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.754" = type { %class.scoped_refptr.755 }
%class.scoped_refptr.755 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.756", %"class.blink::Font" }
%"class.WTF::RefCounted.756" = type { %"class.base::RefCounted.757" }
%"class.base::RefCounted.757" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.789 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.759, %class.scoped_refptr.767, %class.scoped_refptr.777, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.788 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.758 }
%class.scoped_refptr.758 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1354", [4 x i8] }>
%"class.WTF::RefCounted.1354" = type { %"class.base::RefCounted.1355" }
%"class.base::RefCounted.1355" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.759 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.765", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.760" }
%"class.WTF::Vector.760" = type { %"class.WTF::VectorBuffer.761" }
%"class.WTF::VectorBuffer.761" = type { %"class.WTF::VectorBufferBase.762" }
%"class.WTF::VectorBufferBase.762" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.765" = type { %"class.base::RefCounted.766" }
%"class.base::RefCounted.766" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.767 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.768", %"class.WTF::RefCounted.775", [4 x i8] }>
%"class.blink::FontSettings.768" = type { %"class.WTF::Vector.769" }
%"class.WTF::Vector.769" = type { %"class.WTF::VectorBuffer.770" }
%"class.WTF::VectorBuffer.770" = type { %"class.WTF::VectorBufferBase.771" }
%"class.WTF::VectorBufferBase.771" = type { %"class.blink::FontTagValuePair.772"*, i32, i32 }
%"class.blink::FontTagValuePair.772" = type { i32, float }
%"class.WTF::RefCounted.775" = type { %"class.base::RefCounted.776" }
%"class.base::RefCounted.776" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.777 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.778", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.785, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.778" = type { %"class.base::RefCounted.779" }
%"class.base::RefCounted.779" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.785 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.786", [4 x i8] }>
%"class.WTF::RefCounted.786" = type { %"class.base::RefCounted.787" }
%"class.base::RefCounted.787" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.788 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.789 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.790", %"class.WTF::Vector.792", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.790" = type { %"class.base::RefCounted.791" }
%"class.base::RefCounted.791" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.792" = type { %"class.WTF::VectorBuffer.793" }
%"class.WTF::VectorBuffer.793" = type { %"class.WTF::VectorBufferBase.794", [8 x i8] }
%"class.WTF::VectorBufferBase.794" = type { %class.scoped_refptr.795*, i32, i32 }
%class.scoped_refptr.795 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.796", [4 x i8] }>
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.802", %class.scoped_refptr.809, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.796" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.800 }
%union.anon.800 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.801, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.200" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.801 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.802" = type { %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.805, %class.scoped_refptr.805 }
%class.scoped_refptr.805 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.809 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.810", [4 x i8] }>
%"class.WTF::RefCounted.810" = type { %"class.base::RefCounted.811" }
%"class.base::RefCounted.811" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.812" }
%"class.blink::PersistentBase.812" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.813" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.813" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.814 }
%class.scoped_refptr.814 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.815, i8, i8, i8, i8 }>
%union.anon.815 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.816" = type { %class.scoped_refptr.817 }
%class.scoped_refptr.817 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.818", [4 x i8], %"class.blink::DataRef.820", %"class.blink::DataRef.861", %"class.WTF::Vector.865", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.869, %class.scoped_refptr.878, %"class.blink::Persistent.886", %"class.blink::Persistent.888", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.818" = type { %"class.base::RefCounted.819" }
%"class.base::RefCounted.819" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.820" = type { %class.scoped_refptr.821 }
%class.scoped_refptr.821 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.822", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.824, %class.scoped_refptr.831, %"class.blink::Persistent.848", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.822" = type { %"class.base::RefCounted.823" }
%"class.base::RefCounted.823" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.824 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.825", %"class.WTF::Vector.826" }
%"class.base::RefCountedThreadSafe.825" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.826" = type { %"class.WTF::VectorBuffer.827" }
%"class.WTF::VectorBuffer.827" = type { %"class.WTF::VectorBufferBase.828" }
%"class.WTF::VectorBufferBase.828" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.831 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.832", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.832" = type { %"class.base::RefCounted.833" }
%"class.base::RefCounted.833" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.834", %"class.blink::Persistent.839" }
%"class.WTF::HashMap.834" = type { %"class.WTF::HashTable.835" }
%"class.WTF::HashTable.835" = type <{ %"struct.WTF::KeyValuePair.838"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.838" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1478 }
%class.scoped_refptr.1478 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1479", %"class.WTF::Vector.1083", %"class.WTF::Vector.1481", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1479" = type { %"class.base::RefCounted.1480" }
%"class.base::RefCounted.1480" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1083" = type { %"class.WTF::VectorBuffer.1084" }
%"class.WTF::VectorBuffer.1084" = type { %"class.WTF::VectorBufferBase.1085" }
%"class.WTF::VectorBufferBase.1085" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1481" = type { %"class.WTF::VectorBuffer.1482" }
%"class.WTF::VectorBuffer.1482" = type { %"class.WTF::VectorBufferBase.1483" }
%"class.WTF::VectorBufferBase.1483" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1484 }
%union.anon.1484 = type { double }
%"class.blink::Persistent.839" = type { %"class.blink::PersistentBase.840" }
%"class.blink::PersistentBase.840" = type { %"class.blink::HeapHashMap.841"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.841" = type { %"class.WTF::HashMap.844" }
%"class.WTF::HashMap.844" = type { %"class.WTF::HashTable.845" }
%"class.WTF::HashTable.845" = type <{ %"struct.WTF::KeyValuePair.847"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.847" = type opaque
%"class.blink::Persistent.848" = type { %"class.blink::PersistentBase.849" }
%"class.blink::PersistentBase.849" = type { %"class.blink::HeapVector.850"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.850" = type { %"class.WTF::Vector.853" }
%"class.WTF::Vector.853" = type { %"class.WTF::VectorBuffer.854" }
%"class.WTF::VectorBuffer.854" = type { %"class.WTF::VectorBufferBase.855" }
%"class.WTF::VectorBufferBase.855" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.856", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.856" = type { %"class.blink::MemberBase.857" }
%"class.blink::MemberBase.857" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.861" = type { %class.scoped_refptr.862 }
%class.scoped_refptr.862 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.863", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.863" = type { %"class.base::RefCounted.864" }
%"class.base::RefCounted.864" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.125" }
%class.scoped_refptr.869 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.870", %"class.WTF::Vector.872" }
%"class.WTF::RefCounted.870" = type { %"class.base::RefCounted.871" }
%"class.base::RefCounted.871" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.872" = type { %"class.WTF::VectorBuffer.873" }
%"class.WTF::VectorBuffer.873" = type { %"class.WTF::VectorBufferBase.874" }
%"class.WTF::VectorBufferBase.874" = type { %"struct.std::__1::pair.875"*, i32, i32 }
%"struct.std::__1::pair.875" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.878 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.879", [4 x i8], %"class.WTF::Vector.881" }
%"class.WTF::RefCounted.879" = type { %"class.base::RefCounted.880" }
%"class.base::RefCounted.880" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.881" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.883", [28 x i8] }>
%"class.WTF::VectorBufferBase.883" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.886" = type { %"class.blink::PersistentBase.887" }
%"class.blink::PersistentBase.887" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.888" = type { %"class.blink::PersistentBase.889" }
%"class.blink::PersistentBase.889" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.892", %"class.blink::Member.894" }
%"class.blink::Member.892" = type { %"class.blink::MemberBase.893" }
%"class.blink::MemberBase.893" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.894" = type { %"class.blink::MemberBase.895" }
%"class.blink::MemberBase.895" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.896" = type { %class.scoped_refptr.897 }
%class.scoped_refptr.897 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.898", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.898" = type { %"class.base::RefCounted.899" }
%"class.base::RefCounted.899" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.900" = type { %class.scoped_refptr.901 }
%class.scoped_refptr.901 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.902", [4 x i8], %"class.blink::DataRef.904", %"class.blink::DataRef.970", %"class.blink::TransformOperations", %class.scoped_refptr.878, %"class.blink::Persistent.1094", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.902" = type { %"class.base::RefCounted.903" }
%"class.base::RefCounted.903" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.904" = type { %class.scoped_refptr.905 }
%class.scoped_refptr.905 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.906", [4 x i8], %"class.blink::DataRef.908", %"class.blink::Persistent.946", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.906" = type { %"class.base::RefCounted.907" }
%"class.base::RefCounted.907" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.908" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.910", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.928, %class.scoped_refptr.931, %class.scoped_refptr.934, %class.scoped_refptr.937, %class.scoped_refptr.938, %class.scoped_refptr.939, %"class.blink::Persistent.946", %"class.blink::Persistent.961", %"class.absl::optional.965", %"class.absl::optional.965", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.910" = type { %"class.base::RefCounted.911" }
%"class.base::RefCounted.911" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.912", %"class.std::__1::unique_ptr.917" }
%"class.WTF::Vector.912" = type { %"class.WTF::VectorBuffer.913" }
%"class.WTF::VectorBuffer.913" = type { %"class.WTF::VectorBufferBase.914" }
%"class.WTF::VectorBufferBase.914" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.920", %"class.WTF::Vector.912", i32, i32 }
%"class.WTF::Vector.920" = type { %"class.WTF::VectorBuffer.921" }
%"class.WTF::VectorBuffer.921" = type { %"class.WTF::VectorBufferBase.922" }
%"class.WTF::VectorBufferBase.922" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.928 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.929", [4 x i8] }>
%"class.WTF::RefCounted.929" = type { %"class.base::RefCounted.930" }
%"class.base::RefCounted.930" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.931 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.932", [4 x i8] }>
%"class.WTF::RefCounted.932" = type { %"class.base::RefCounted.933" }
%"class.base::RefCounted.933" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.934 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.935" }>
%"class.WTF::RefCounted.935" = type { %"class.base::RefCounted.936" }
%"class.base::RefCounted.936" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.937 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.938 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.939 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.940", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.940" = type { %"class.base::RefCounted.941" }
%"class.base::RefCounted.941" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.942" }
%"class.blink::DataRef.942" = type { %class.scoped_refptr.943 }
%class.scoped_refptr.943 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.886", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.944" }
%"class.WTF::RefCounted.944" = type { %"class.base::RefCounted.945" }
%"class.base::RefCounted.945" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.961" = type { %"class.blink::PersistentBase.962" }
%"class.blink::PersistentBase.962" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.931, %"class.blink::Member.856", i32, [4 x i8] }>
%"class.absl::optional.965" = type { %"class.absl::optional_internal::optional_data.966" }
%"class.absl::optional_internal::optional_data.966" = type { %"class.absl::optional_internal::optional_data_base.967" }
%"class.absl::optional_internal::optional_data_base.967" = type { %"class.absl::optional_internal::optional_data_dtor_base.968" }
%"class.absl::optional_internal::optional_data_dtor_base.968" = type { i8, [3 x i8], %union.anon.969 }
%union.anon.969 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.946" = type { %"class.blink::PersistentBase.947" }
%"class.blink::PersistentBase.947" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.950" }
%"class.blink::HeapVector.950" = type { %"class.WTF::Vector.953" }
%"class.WTF::Vector.953" = type { %"class.WTF::VectorBuffer.954" }
%"class.WTF::VectorBuffer.954" = type { %"class.WTF::VectorBufferBase.955" }
%"class.WTF::VectorBufferBase.955" = type { %"class.blink::Member.956"*, i32, i32 }
%"class.blink::Member.956" = type { %"class.blink::MemberBase.957" }
%"class.blink::MemberBase.957" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.970" = type { %class.scoped_refptr.971 }
%class.scoped_refptr.971 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.972", %"class.blink::DataRef.974", %"class.blink::DataRef.978", %"class.blink::DataRef.987", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1006", %"class.std::__1::unique_ptr.1017", %"class.std::__1::unique_ptr.1055", %"class.std::__1::unique_ptr.1066", %"class.std::__1::unique_ptr.1077", %"class.WTF::Vector.1083", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.972" = type { %"class.base::RefCounted.973" }
%"class.base::RefCounted.973" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.974" = type { %class.scoped_refptr.975 }
%class.scoped_refptr.975 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.976", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.976" = type { %"class.base::RefCounted.977" }
%"class.base::RefCounted.977" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.978" = type { %class.scoped_refptr.979 }
%class.scoped_refptr.979 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.980", [4 x i8], %"class.WTF::Vector.982", i8, [7 x i8] }>
%"class.WTF::RefCounted.980" = type { %"class.base::RefCounted.981" }
%"class.base::RefCounted.981" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.982" = type { %"class.WTF::VectorBuffer.983" }
%"class.WTF::VectorBuffer.983" = type { %"class.WTF::VectorBufferBase.984" }
%"class.WTF::VectorBufferBase.984" = type { i32*, i32, i32 }
%"class.blink::DataRef.987" = type { %class.scoped_refptr.988 }
%class.scoped_refptr.988 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.989", [4 x i8], %"class.WTF::HashMap.991", %"class.WTF::HashMap.991", %"class.WTF::HashMap.991", %"class.WTF::HashMap.991", %"class.WTF::HashMap.991", %"class.WTF::HashMap.991", %"class.WTF::HashMap.996", %"class.WTF::HashMap.996", %"class.WTF::HashMap.996", %"class.WTF::HashMap.996", %"class.WTF::HashMap.1001", %"class.WTF::Vector.912", %"class.WTF::Vector.912", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.989" = type { %"class.base::RefCounted.990" }
%"class.base::RefCounted.990" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.991" = type { %"class.WTF::HashTable.992" }
%"class.WTF::HashTable.992" = type <{ %"struct.WTF::KeyValuePair.995"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.995" = type { %"class.WTF::String", %"class.WTF::Vector.1468" }
%"class.WTF::Vector.1468" = type { %"class.WTF::VectorBuffer.1469" }
%"class.WTF::VectorBuffer.1469" = type { %"class.WTF::VectorBufferBase.1470" }
%"class.WTF::VectorBufferBase.1470" = type { i64*, i32, i32 }
%"class.WTF::HashMap.996" = type { %"class.WTF::HashTable.997" }
%"class.WTF::HashTable.997" = type <{ %"struct.WTF::KeyValuePair.1000"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1000" = type { i64, %"class.WTF::Vector.1083" }
%"class.WTF::HashMap.1001" = type { %"class.WTF::HashTable.1002" }
%"class.WTF::HashTable.1002" = type <{ %"struct.WTF::KeyValuePair.1005"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1005" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1006" = type { %"class.std::__1::__compressed_pair.1007" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.1008" }
%"struct.std::__1::__compressed_pair_elem.1008" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1009" }
%"class.WTF::HashMap.1009" = type { %"class.WTF::HashTable.1010" }
%"class.WTF::HashTable.1010" = type <{ %"struct.WTF::KeyValuePair.1013"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1013" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1473", %"class.absl::optional.1473", %"class.absl::optional.1473" }
%"class.absl::optional.1473" = type { %"class.absl::optional_internal::optional_data.1474" }
%"class.absl::optional_internal::optional_data.1474" = type { %"class.absl::optional_internal::optional_data_base.1475" }
%"class.absl::optional_internal::optional_data_base.1475" = type { %"class.absl::optional_internal::optional_data_dtor_base.1476" }
%"class.absl::optional_internal::optional_data_dtor_base.1476" = type { i8, %union.anon.1477 }
%union.anon.1477 = type { i32 }
%"class.std::__1::unique_ptr.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.865", %"class.WTF::Vector.1032", %"class.WTF::Vector.1020", %"class.WTF::Vector.1037", %"class.WTF::Vector.1042", %"class.WTF::Vector.1047" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1020", %"class.WTF::Vector.1020", %"class.WTF::Vector.1025" }
%"class.WTF::Vector.1025" = type { %"class.WTF::VectorBuffer.1026" }
%"class.WTF::VectorBuffer.1026" = type { %"class.WTF::VectorBufferBase.1027" }
%"class.WTF::VectorBufferBase.1027" = type { %class.scoped_refptr.1028*, i32, i32 }
%class.scoped_refptr.1028 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1029" }
%"class.base::RefCountedThreadSafe.1029" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1032" = type { %"class.WTF::VectorBuffer.1033" }
%"class.WTF::VectorBuffer.1033" = type { %"class.WTF::VectorBufferBase.1034" }
%"class.WTF::VectorBufferBase.1034" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1020" = type { %"class.WTF::VectorBuffer.1021" }
%"class.WTF::VectorBuffer.1021" = type { %"class.WTF::VectorBufferBase.1022" }
%"class.WTF::VectorBufferBase.1022" = type { double*, i32, i32 }
%"class.WTF::Vector.1037" = type { %"class.WTF::VectorBuffer.1038" }
%"class.WTF::VectorBuffer.1038" = type { %"class.WTF::VectorBufferBase.1039" }
%"class.WTF::VectorBufferBase.1039" = type { i32*, i32, i32 }
%"class.WTF::Vector.1042" = type { %"class.WTF::VectorBuffer.1043" }
%"class.WTF::VectorBuffer.1043" = type { %"class.WTF::VectorBufferBase.1044" }
%"class.WTF::VectorBufferBase.1044" = type { i32*, i32, i32 }
%"class.WTF::Vector.1047" = type { %"class.WTF::VectorBuffer.1048" }
%"class.WTF::VectorBuffer.1048" = type { %"class.WTF::VectorBufferBase.1049" }
%"class.WTF::VectorBufferBase.1049" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1055" = type { %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1058" }
%"class.WTF::Vector.1058" = type { %"class.WTF::VectorBuffer.1059" }
%"class.WTF::VectorBuffer.1059" = type { %"class.WTF::VectorBufferBase.1060" }
%"class.WTF::VectorBufferBase.1060" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1066" = type { %"class.std::__1::__compressed_pair.1067" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.1068" }
%"struct.std::__1::__compressed_pair_elem.1068" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.WTF::VectorBufferBase.1071" = type { %"class.blink::Persistent.886"*, i32, i32 }
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.886", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1088" }
%"class.WTF::Vector.1088" = type { %"class.WTF::VectorBuffer.1089" }
%"class.WTF::VectorBuffer.1089" = type { %"class.WTF::VectorBufferBase.1090" }
%"class.WTF::VectorBufferBase.1090" = type { %class.scoped_refptr.1091*, i32, i32 }
%class.scoped_refptr.1091 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.935", [4 x i8] }>
%"class.blink::Persistent.1094" = type { %"class.blink::PersistentBase.1095" }
%"class.blink::PersistentBase.1095" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1098" }
%"class.blink::Member.1098" = type { %"class.blink::MemberBase.1099" }
%"class.blink::MemberBase.1099" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1100" = type { %class.scoped_refptr.1101 }
%class.scoped_refptr.1101 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1102", [4 x i8], %"class.blink::DataRef.1104", %"class.blink::DataRef.1108", %"class.blink::DataRef.1129", %"class.blink::DataRef.1147", %"class.blink::DataRef.1159", %"class.blink::DataRef.1163", %class.scoped_refptr.1133, i32, [4 x i8] }>
%"class.WTF::RefCounted.1102" = type { %"class.base::RefCounted.1103" }
%"class.base::RefCounted.1103" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1104" = type { %class.scoped_refptr.1105 }
%class.scoped_refptr.1105 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1106", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1106" = type { %"class.base::RefCounted.1107" }
%"class.base::RefCounted.1107" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1108" = type { %class.scoped_refptr.1109 }
%class.scoped_refptr.1109 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1110", %class.scoped_refptr.1112, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1110" = type { %"class.base::RefCounted.1111" }
%"class.base::RefCounted.1111" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1112 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1113", %"class.std::__1::unique_ptr.1119", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.932" }>
%"class.std::__1::unique_ptr.1113" = type { %"class.std::__1::__compressed_pair.1114" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.1115" }
%"struct.std::__1::__compressed_pair_elem.1115" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1119" = type { %"class.std::__1::__compressed_pair.1120" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.1121" }
%"struct.std::__1::__compressed_pair_elem.1121" = type { %"class.blink::Path"* }
%"class.blink::DataRef.1129" = type { %class.scoped_refptr.1130 }
%class.scoped_refptr.1130 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1131", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1131" = type { %"class.base::RefCounted.1132" }
%"class.base::RefCounted.1132" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1133, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1147" = type { %class.scoped_refptr.1148 }
%class.scoped_refptr.1148 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1149", [4 x i8], %class.scoped_refptr.1151, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1149" = type { %"class.base::RefCounted.1150" }
%"class.base::RefCounted.1150" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1151 = type { %"class.base::RefCountedData.1152"* }
%"class.base::RefCountedData.1152" = type { %"class.base::RefCountedThreadSafe.1153", %"class.WTF::Vector.1154" }
%"class.base::RefCountedThreadSafe.1153" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1154" = type { %"class.WTF::VectorBuffer.1155" }
%"class.WTF::VectorBuffer.1155" = type { %"class.WTF::VectorBufferBase.1156" }
%"class.WTF::VectorBufferBase.1156" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1159" = type { %class.scoped_refptr.1160 }
%class.scoped_refptr.1160 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1161", %class.scoped_refptr.1133, %class.scoped_refptr.1133, %class.scoped_refptr.1133 }
%"class.WTF::RefCounted.1161" = type { %"class.base::RefCounted.1162" }
%"class.base::RefCounted.1162" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1163" = type { %class.scoped_refptr.1164 }
%class.scoped_refptr.1164 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1165", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1165" = type { %"class.base::RefCounted.1166" }
%"class.base::RefCounted.1166" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1133 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1134", %"class.blink::Persistent.1136", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1134" = type { %"class.base::RefCounted.1135" }
%"class.base::RefCounted.1135" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1136" = type { %"class.blink::PersistentBase.1137" }
%"class.blink::PersistentBase.1137" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.109", %"class.blink::HeapHashMap.1140" }
%"class.blink::HeapHashMap.1140" = type { %"class.WTF::HashMap.1143" }
%"class.WTF::HashMap.1143" = type { %"class.WTF::HashTable.1144" }
%"class.WTF::HashTable.1144" = type <{ %"struct.WTF::KeyValuePair.1146"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1146" = type opaque
%"class.blink::DataRef.1167" = type { %class.scoped_refptr.1168 }
%class.scoped_refptr.1168 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1169", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1169" = type { %"class.base::RefCounted.1170" }
%"class.base::RefCounted.1170" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1171" = type { %class.scoped_refptr.1172 }
%class.scoped_refptr.1172 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1173", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1173" = type { %"class.base::RefCounted.1174" }
%"class.base::RefCounted.1174" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1175" = type { %class.scoped_refptr.1176 }
%class.scoped_refptr.1176 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1177", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1177" = type { %"class.base::RefCounted.1178" }
%"class.base::RefCounted.1178" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1179" = type { %class.scoped_refptr.1180 }
%class.scoped_refptr.1180 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1181", %class.scoped_refptr.1183 }
%"class.WTF::RefCounted.1181" = type { %"class.base::RefCounted.1182" }
%"class.base::RefCounted.1182" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1183 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1352", %"class.blink::StyleVariables", %class.scoped_refptr.1183 }
%"class.WTF::RefCounted.1352" = type { %"class.base::RefCounted.1353" }
%"class.base::RefCounted.1353" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1184" = type { %"class.base::RefCounted.1185" }
%"class.base::RefCounted.1185" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1186" = type { %"class.std::__1::__compressed_pair.1187" }
%"class.std::__1::__compressed_pair.1187" = type { %"struct.std::__1::__compressed_pair_elem.1188" }
%"struct.std::__1::__compressed_pair_elem.1188" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1189" }
%"class.std::__1::unique_ptr.1189" = type { %"class.std::__1::__compressed_pair.1190" }
%"class.std::__1::__compressed_pair.1190" = type { %"struct.std::__1::__compressed_pair_elem.1191" }
%"struct.std::__1::__compressed_pair_elem.1191" = type { %"class.WTF::Vector.1192"* }
%"class.WTF::Vector.1192" = type { %"class.WTF::VectorBuffer.1488" }
%"class.WTF::VectorBuffer.1488" = type { %"class.WTF::VectorBufferBase.1489", [32 x i8] }
%"class.WTF::VectorBufferBase.1489" = type { %class.scoped_refptr.750*, i32, i32 }
%"class.blink::Member.1494" = type { %"class.blink::MemberBase.1495" }
%"class.blink::MemberBase.1495" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.1496" = type { %"class.blink::MemberBase.1497" }
%"class.blink::MemberBase.1497" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.1500", %"class.blink::HeapHashSet.1509" }
%"class.blink::HeapVector.1500" = type { %"class.WTF::Vector.1503" }
%"class.WTF::Vector.1503" = type { %"class.WTF::VectorBuffer.1504" }
%"class.WTF::VectorBuffer.1504" = type { %"class.WTF::VectorBufferBase.1505" }
%"class.WTF::VectorBufferBase.1505" = type { %"class.blink::Member.1506"*, i32, i32 }
%"class.blink::Member.1506" = type { %"class.blink::MemberBase.1507" }
%"class.blink::MemberBase.1507" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.1509" = type { %"class.WTF::HashSet.1512" }
%"class.WTF::HashSet.1512" = type { %"class.WTF::HashTable.1513" }
%"class.WTF::HashTable.1513" = type <{ %"class.blink::Member.1506"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.1517" = type { %"class.blink::MemberBase.1518" }
%"class.blink::MemberBase.1518" = type { %"class.blink::HeapHashSet.1519"* }
%"class.blink::HeapHashSet.1519" = type opaque
%"class.blink::HeapHashSet.1362" = type opaque
%"class.blink::HeapVector.1363" = type { %"class.WTF::Vector.1366" }
%"class.WTF::Vector.1366" = type { %"class.WTF::VectorBuffer.1367" }
%"class.WTF::VectorBuffer.1367" = type { %"class.WTF::VectorBufferBase.1368" }
%"class.WTF::VectorBufferBase.1368" = type { %"class.blink::Member.1369"*, i32, i32 }
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1461" }
%"class.blink::MemberBase.1461" = type { %"class.blink::NameSourceRelatedObject"* }
%"class.blink::NameSourceRelatedObject" = type { %"class.blink::WeakMember", %"class.WTF::String" }
%"class.blink::HeapVector.1371" = type { %"class.WTF::Vector.1374" }
%"class.WTF::Vector.1374" = type { %"class.WTF::VectorBuffer.1375" }
%"class.WTF::VectorBuffer.1375" = type { %"class.WTF::VectorBufferBase.1376" }
%"class.WTF::VectorBufferBase.1376" = type { %"class.blink::NameSource"*, i32, i32 }
%"class.blink::NameSource" = type { %"class.WTF::String", i8, i8, i32, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString", i32, %"class.blink::HeapVector.1363" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1378, i32, i8, i8, [2 x i8] }>
%union.anon.1378 = type { %"class.WTF::Vector.1379" }
%"class.WTF::Vector.1379" = type { %"class.WTF::VectorBuffer.1380" }
%"class.WTF::VectorBuffer.1380" = type { %"class.WTF::VectorBufferBase.1381", [16 x i8] }
%"class.WTF::VectorBufferBase.1381" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::AccessibleNode" = type opaque
%"class.blink::HeapVector.1389" = type opaque
%"class.WTF::Vector.1390" = type opaque
%"class.WTF::Vector.1391" = type opaque
%"class.blink::ScrollableArea" = type opaque
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.1392", %"class.std::__1::vector.1400", %"class.std::__1::vector.1408", %"class.std::__1::vector.1416", %"class.std::__1::vector.1424", %"class.std::__1::vector.1432", %"class.std::__1::vector.1440", %"class.std::__1::vector.1448", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.1392" = type { %"class.std::__1::__vector_base.1393" }
%"class.std::__1::__vector_base.1393" = type { %"struct.std::__1::pair.1394"*, %"struct.std::__1::pair.1394"*, %"class.std::__1::__compressed_pair.1395" }
%"struct.std::__1::pair.1394" = type opaque
%"class.std::__1::__compressed_pair.1395" = type { %"struct.std::__1::__compressed_pair_elem.1396" }
%"struct.std::__1::__compressed_pair_elem.1396" = type { %"struct.std::__1::pair.1394"* }
%"class.std::__1::vector.1400" = type { %"class.std::__1::__vector_base.1401" }
%"class.std::__1::__vector_base.1401" = type { %"struct.std::__1::pair.1402"*, %"struct.std::__1::pair.1402"*, %"class.std::__1::__compressed_pair.1403" }
%"struct.std::__1::pair.1402" = type opaque
%"class.std::__1::__compressed_pair.1403" = type { %"struct.std::__1::__compressed_pair_elem.1404" }
%"struct.std::__1::__compressed_pair_elem.1404" = type { %"struct.std::__1::pair.1402"* }
%"class.std::__1::vector.1408" = type { %"class.std::__1::__vector_base.1409" }
%"class.std::__1::__vector_base.1409" = type { %"struct.std::__1::pair.1410"*, %"struct.std::__1::pair.1410"*, %"class.std::__1::__compressed_pair.1411" }
%"struct.std::__1::pair.1410" = type opaque
%"class.std::__1::__compressed_pair.1411" = type { %"struct.std::__1::__compressed_pair_elem.1412" }
%"struct.std::__1::__compressed_pair_elem.1412" = type { %"struct.std::__1::pair.1410"* }
%"class.std::__1::vector.1416" = type { %"class.std::__1::__vector_base.1417" }
%"class.std::__1::__vector_base.1417" = type { %"struct.std::__1::pair.1418"*, %"struct.std::__1::pair.1418"*, %"class.std::__1::__compressed_pair.1419" }
%"struct.std::__1::pair.1418" = type opaque
%"class.std::__1::__compressed_pair.1419" = type { %"struct.std::__1::__compressed_pair_elem.1420" }
%"struct.std::__1::__compressed_pair_elem.1420" = type { %"struct.std::__1::pair.1418"* }
%"class.std::__1::vector.1424" = type { %"class.std::__1::__vector_base.1425" }
%"class.std::__1::__vector_base.1425" = type { %"struct.std::__1::pair.1426"*, %"struct.std::__1::pair.1426"*, %"class.std::__1::__compressed_pair.1427" }
%"struct.std::__1::pair.1426" = type opaque
%"class.std::__1::__compressed_pair.1427" = type { %"struct.std::__1::__compressed_pair_elem.1428" }
%"struct.std::__1::__compressed_pair_elem.1428" = type { %"struct.std::__1::pair.1426"* }
%"class.std::__1::vector.1432" = type { %"class.std::__1::__vector_base.1433" }
%"class.std::__1::__vector_base.1433" = type { %"struct.std::__1::pair.1434"*, %"struct.std::__1::pair.1434"*, %"class.std::__1::__compressed_pair.1435" }
%"struct.std::__1::pair.1434" = type opaque
%"class.std::__1::__compressed_pair.1435" = type { %"struct.std::__1::__compressed_pair_elem.1436" }
%"struct.std::__1::__compressed_pair_elem.1436" = type { %"struct.std::__1::pair.1434"* }
%"class.std::__1::vector.1440" = type { %"class.std::__1::__vector_base.1441" }
%"class.std::__1::__vector_base.1441" = type { %"struct.std::__1::pair.1442"*, %"struct.std::__1::pair.1442"*, %"class.std::__1::__compressed_pair.1443" }
%"struct.std::__1::pair.1442" = type opaque
%"class.std::__1::__compressed_pair.1443" = type { %"struct.std::__1::__compressed_pair_elem.1444" }
%"struct.std::__1::__compressed_pair_elem.1444" = type { %"struct.std::__1::pair.1442"* }
%"class.std::__1::vector.1448" = type { %"class.std::__1::__vector_base.1449" }
%"class.std::__1::__vector_base.1449" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1450" }
%"class.std::__1::__compressed_pair.1450" = type { %"struct.std::__1::__compressed_pair_elem.1451" }
%"struct.std::__1::__compressed_pair_elem.1451" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr.1455" }
%"class.std::__1::unique_ptr.1455" = type { %"class.std::__1::__compressed_pair.1456" }
%"class.std::__1::__compressed_pair.1456" = type { %"struct.std::__1::__compressed_pair_elem.1457" }
%"struct.std::__1::__compressed_pair_elem.1457" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%"class.WTF::Vector.1384" = type { %"class.WTF::VectorBuffer.1385" }
%"class.WTF::VectorBuffer.1385" = type { %"class.WTF::VectorBufferBase.1386", [16 x i8] }
%"class.WTF::VectorBufferBase.1386" = type { i16*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking.1549" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZNK5blink12AXMockObject12IsMockObjectEv = comdat any

$_ZNK5blink19AXValidationMessage19IsValidationMessageEv = comdat any

$_ZNK5blink8AXObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE = comdat any

$_ZNK5blink8AXObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_17DescriptionSourceELj0EEEPNS6_INS_6MemberINS_23NameSourceRelatedObjectEEELj0EEE = comdat any

$_ZNK5blink8AXObject11PlaceholderEN2ax5mojom8NameFromE = comdat any

$_ZNK5blink8AXObject5TitleEN2ax5mojom8NameFromE = comdat any

$_ZNK5blink8AXObject19TextFromDescendantsERNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEb = comdat any

$_ZNK5blink8AXObject9AccessKeyEv = comdat any

$_ZNK5blink8AXObject15BackgroundColorEv = comdat any

$_ZNK5blink8AXObject8GetColorEv = comdat any

$_ZNK5blink8AXObject10ColorValueEv = comdat any

$_ZNK5blink8AXObject24CanvasHasFallbackContentEv = comdat any

$_ZNK5blink8AXObject18ComputedFontFamilyEv = comdat any

$_ZNK5blink8AXObject26FontFamilyForSerializationEv = comdat any

$_ZNK5blink8AXObject8FontSizeEv = comdat any

$_ZNK5blink8AXObject10FontWeightEv = comdat any

$_ZNK5blink8AXObject12HeadingLevelEv = comdat any

$_ZNK5blink8AXObject17HierarchicalLevelEv = comdat any

$_ZNK5blink8AXObject12ImageDataUrlERKNS_7IntSizeE = comdat any

$_ZNK5blink8AXObject16InPageLinkTargetEv = comdat any

$_ZNK5blink8AXObject12GetListStyleEv = comdat any

$_ZNK5blink8AXObject12GetTextAlignEv = comdat any

$_ZNK5blink8AXObject16GetTextDirectionEv = comdat any

$_ZNK5blink8AXObject13GetTextIndentEv = comdat any

$_ZNK5blink8AXObject15GetTextPositionEv = comdat any

$_ZNK5blink8AXObject34GetTextStyleAndTextDecorationStyleEPiPN2ax5mojom19TextDecorationStyleES5_S5_ = comdat any

$_ZNK5blink8AXObject19RadioButtonsInGroupEv = comdat any

$_ZNK5blink8AXObject3UrlEv = comdat any

$_ZNK5blink8AXObject12ChooserPopupEv = comdat any

$_ZNK5blink8AXObject19GetAriaCurrentStateEv = comdat any

$_ZNK5blink8AXObject15GetInvalidStateEv = comdat any

$_ZNK5blink8AXObject16AriaInvalidValueEv = comdat any

$_ZNK5blink8AXObject13ValueForRangeEPf = comdat any

$_ZNK5blink8AXObject16MaxValueForRangeEPf = comdat any

$_ZNK5blink8AXObject16MinValueForRangeEPf = comdat any

$_ZNK5blink8AXObject17StepValueForRangeEPf = comdat any

$_ZNK5blink12AXMockObject11RestrictionEv = comdat any

$_ZN5blink8AXObject16ActiveDescendantEv = comdat any

$_ZNK5blink8AXObject12AutoCompleteEv = comdat any

$_ZNK5blink8AXObject16AriaOwnsElementsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE = comdat any

$_ZNK5blink8AXObject23AriaDescribedbyElementsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE = comdat any

$_ZNK5blink8AXObject12ErrorMessageEv = comdat any

$_ZNK5blink8AXObject20SupportsARIADraggingEv = comdat any

$_ZNK5blink8AXObject11DropeffectsERN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS1_18PartitionAllocatorEEE = comdat any

$_ZNK5blink8AXObject8PosInSetEv = comdat any

$_ZNK5blink8AXObject7SetSizeEv = comdat any

$_ZNK5blink8AXObject20AccessibilityHitTestERKNS_8IntPointE = comdat any

$_ZNK5blink19AXValidationMessage15CanHaveChildrenEv = comdat any

$_ZNK5blink8AXObject15SelectedOptionsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE = comdat any

$_ZNK5blink8AXObject24EstimatedLoadingProgressEv = comdat any

$_ZNK5blink8AXObject13AnchorElementEv = comdat any

$_ZNK5blink8AXObject13ActionElementEv = comdat any

$_ZNK5blink8AXObject12HasAttributeERKNS_13QualifiedNameE = comdat any

$_ZNK5blink8AXObject12GetAttributeERKNS_13QualifiedNameE = comdat any

$_ZNK5blink8AXObject11IsDataTableEv = comdat any

$_ZNK5blink8AXObject16GetSortDirectionEv = comdat any

$_ZNK5blink8AXObject12HeaderObjectEv = comdat any

$_ZNK5blink8AXObject29GetScrollableAreaIfScrollableEv = comdat any

$_ZN5blink8AXObject15ChildrenChangedEv = comdat any

$_ZN5blink8AXObject29HandleActiveDescendantChangedEv = comdat any

$_ZN5blink8AXObject26HandleAutofillStateChangedENS_18WebAXAutofillStateE = comdat any

$_ZN5blink8AXObject25HandleAriaExpandedChangedEv = comdat any

$_ZN5blink19AXValidationMessage11AddChildrenEv = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_ = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_8AXObjectEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv = comdat any

$_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink19AXValidationMessageE = hidden unnamed_addr constant { [164 x i8*] } { [164 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::AXValidationMessage"*)* @_ZN5blink19AXValidationMessageD2Ev to i8*), i8* bitcast (void (%"class.blink::AXValidationMessage"*)* @_ZN5blink19AXValidationMessageD0Ev to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)* @_ZNK5blink8AXObject5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::AXObject"*)* @_ZN5blink8AXObject4InitEPS0_ to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZN5blink8AXObject6DetachEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject29GetAOMPropertyOrARIAAttributeENS_17AOMStringPropertyE to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, i32, i8*)* @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_18AOMBooleanPropertyERb to i8*), i8* bitcast (%"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17GetAccessibleNodeEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsImageMapLinkEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsAXNodeObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16IsAXLayoutObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17IsAXInlineTextBoxEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject6IsListEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11IsAXListBoxEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17IsAXListBoxOptionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10IsMenuListEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16IsMenuListOptionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15IsMenuListPopupEv to i8*), i8* bitcast (i1 (%"class.blink::AXMockObject"*)* @_ZNK5blink12AXMockObject12IsMockObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsProgressIndicatorEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsAXRadioInputEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8IsSliderEv to i8*), i8* bitcast (i1 (%"class.blink::AXValidationMessage"*)* @_ZNK5blink19AXValidationMessage19IsValidationMessageEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15IsVirtualObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsControlEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsDefaultEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10IsFieldsetEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12IsInputImageEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject13IsNativeImageEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject18IsNativeSpinButtonEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsNativeSliderEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12IsSpinButtonEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsAutofillAvailableEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11IsClickableEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10IsExpandedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsFocusedEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsGrabbedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsHoveredEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject20IsLineBreakingObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8IsLinkedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8IsLoadedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject7IsModalEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17IsMultiSelectableEv to i8*), i8* bitcast (i1 (%"class.blink::AXValidationMessage"*)* @_ZNK5blink19AXValidationMessage11IsOffScreenEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10IsRequiredEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10IsSelectedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsSelectedFromFocusEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject22IsSelectedOptionActiveEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsNotUserSelectableEv to i8*), i8* bitcast (i1 (%"class.blink::AXValidationMessage"*)* @_ZNK5blink19AXValidationMessage9IsVisibleEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsVisitedEv to i8*), i8* bitcast (i1 (%"class.blink::AXValidationMessage"*, %"class.blink::HeapVector.743"*)* @_ZNK5blink19AXValidationMessage29ComputeAccessibilityIsIgnoredEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*, %"class.blink::HeapVector.743"*)* @_ZNK5blink8AXObject22DefaultObjectInclusionEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector"*)* @_ZNK5blink8AXObject7GetNameERN2ax5mojom8NameFromEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32, i32*, %"class.blink::HeapVector"*)* @_ZNK5blink8AXObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32, i32*, %"class.blink::HeapVector.1389"*, %"class.blink::HeapVector.1363"*)* @_ZNK5blink8AXObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_17DescriptionSourceELj0EEEPNS6_INS_6MemberINS_23NameSourceRelatedObjectEEELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject11PlaceholderEN2ax5mojom8NameFromE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject5TitleEN2ax5mojom8NameFromE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXValidationMessage"*, i1, i1, %"class.blink::HeapHashSet.1362"*, i32*, %"class.blink::HeapVector.1363"*, %"class.blink::HeapVector.1371"*)* @_ZNK5blink19AXValidationMessage15TextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSH_INS_10NameSourceELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, %"class.blink::HeapHashSet.1362"*, i1)* @_ZNK5blink8AXObject19TextFromDescendantsERNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEb to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9AccessKeyEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15BackgroundColorEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8GetColorEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10ColorValueEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject24CanvasHasFallbackContentEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject18ComputedFontFamilyEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject26FontFamilyForSerializationEv to i8*), i8* bitcast (float (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8FontSizeEv to i8*), i8* bitcast (float (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10FontWeightEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12HeadingLevelEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17HierarchicalLevelEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, %"class.blink::IntSize"*)* @_ZNK5blink8AXObject12ImageDataUrlERKNS_7IntSizeE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16InPageLinkTargetEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11OrientationEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12GetListStyleEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12GetTextAlignEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16GetTextDirectionEv to i8*), i8* bitcast (float (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject13GetTextIndentEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15GetTextPositionEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, i32*, i32*, i32*, i32*)* @_ZNK5blink8AXObject34GetTextStyleAndTextDecorationStyleEPiPN2ax5mojom19TextDecorationStyleES5_S5_ to i8*), i8* bitcast (void (%"class.blink::HeapVector"*, %"class.blink::AXObject"*)* @_ZNK5blink8AXObject19RadioButtonsInGroupEv to i8*), i8* bitcast (void (%"class.blink::KURL"*, %"class.blink::AXObject"*)* @_ZNK5blink8AXObject3UrlEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12ChooserPopupEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZN5blink8AXObject28LoadInlineTextBoxesRecursiveEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10NextOnLineEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14PreviousOnLineEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.WTF::Vector.1390"*)* @_ZNK5blink8AXObject20TextCharacterOffsetsERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.WTF::Vector.1390"*, %"class.WTF::Vector.1390"*)* @_ZNK5blink8AXObject17GetWordBoundariesERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEES5_ to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10TextLengthEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject29TextOffsetInFormattingContextEi to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject21TextOffsetInContainerEi to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19GetAriaCurrentStateEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15GetInvalidStateEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16AriaInvalidValueEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, float*)* @_ZNK5blink8AXObject13ValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, float*)* @_ZNK5blink8AXObject16MaxValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, float*)* @_ZNK5blink8AXObject16MinValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, float*)* @_ZNK5blink8AXObject17StepValueForRangeEPf to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject18GetValueForControlEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject46SlowGetValueForControlIncludingContentEditableEv to i8*), i8* bitcast (i32 (%"class.blink::AXMockObject"*)* @_ZNK5blink12AXMockObject11RestrictionEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject26DetermineAccessibilityRoleEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17AriaRoleAttributeEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZN5blink8AXObject16ActiveDescendantEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12AutoCompleteEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::HeapVector"*)* @_ZNK5blink8AXObject16AriaOwnsElementsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::HeapVector"*)* @_ZNK5blink8AXObject23AriaDescribedbyElementsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12ErrorMessageEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8HasPopupEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsEditableRootEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject30HasContentEditableAttributeSetEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject20SupportsARIADraggingEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.WTF::Vector.1391"*)* @_ZNK5blink8AXObject11DropeffectsERN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8PosInSetEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject7SetSizeEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXValidationMessage"*)* @_ZNK5blink19AXValidationMessage16LiveRegionStatusEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXValidationMessage"*)* @_ZNK5blink19AXValidationMessage18LiveRegionRelevantEv to i8*), i8* bitcast (void (%"class.blink::AXValidationMessage"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)* @_ZNK5blink19AXValidationMessage17GetRelativeBoundsEPPNS_8AXObjectERNS_9FloatRectER10SkMatrix44Pb to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*, %"class.blink::IntPoint"*)* @_ZNK5blink8AXObject20AccessibilityHitTestERKNS_8IntPointE to i8*), i8* bitcast (i1 (%"class.blink::AXValidationMessage"*)* @_ZNK5blink19AXValidationMessage15CanHaveChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject13ClearChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::HeapVector"*)* @_ZNK5blink8AXObject15SelectedOptionsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (double (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject24EstimatedLoadingProgressEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12RootScrollerEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject7GetNodeEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15GetLayoutObjectEv to i8*), i8* bitcast (%"class.blink::Document"* (%"class.blink::AXMockObject"*)* @_ZNK5blink12AXMockObject11GetDocumentEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject13AnchorElementEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject13ActionElementEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8LanguageEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)* @_ZNK5blink8AXObject12HasAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)* @_ZNK5blink8AXObject12GetAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11IsDataTableEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11ColumnCountEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8RowCountEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::HeapVector"*)* @_ZNK5blink8AXObject13ColumnHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::HeapVector"*)* @_ZNK5blink8AXObject10RowHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*, i32, i32)* @_ZNK5blink8AXObject19CellForColumnAndRowEjj to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11ColumnIndexEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8RowIndexEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10ColumnSpanEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject7RowSpanEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16GetSortDirectionEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12HeaderObjectEv to i8*), i8* bitcast (%"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject29GetScrollableAreaIfScrollableEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject35InternalSetAccessibilityFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject37InternalClearAccessibilityFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject23OnNativeDecrementActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject19OnNativeClickActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject19OnNativeFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject23OnNativeIncrementActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, i1)* @_ZN5blink8AXObject25OnNativeSetSelectedActionEb to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject55OnNativeSetSequentialFocusNavigationStartingPointActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, %"class.WTF::String"*)* @_ZN5blink8AXObject22OnNativeSetValueActionERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZN5blink8AXObject15ChildrenChangedEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZN5blink8AXObject29HandleActiveDescendantChangedEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, i32)* @_ZN5blink8AXObject26HandleAutofillStateChangedENS_18WebAXAutofillStateE to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZN5blink8AXObject25HandleAriaExpandedChangedEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZN5blink8AXObject16SelectionChangedEv to i8*), i8* bitcast (i32 (%"class.blink::AXValidationMessage"*)* @_ZNK5blink19AXValidationMessage22NativeRoleIgnoringAriaEv to i8*), i8* bitcast (void (%"class.blink::AXValidationMessage"*)* @_ZN5blink19AXValidationMessage11AddChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*)* @_ZNK5blink8AXObject25SerializeMarkerAttributesEPN2ui10AXNodeDataE to i8*)] }, align 8
@_ZZNK5blink19AXValidationMessage16LiveRegionStatusEvE30s_live_region_status_assertive = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZNK5blink19AXValidationMessage16LiveRegionStatusEvE30s_live_region_status_assertive = internal global i64 0, align 8
@_ZZNK5blink19AXValidationMessage18LiveRegionRelevantEvE32s_live_region_relevant_additions = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZNK5blink19AXValidationMessage18LiveRegionRelevantEvE32s_live_region_relevant_additions = internal global i64 0, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZN5blink11g_null_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.5 = private unnamed_addr constant [10 x i8] c"assertive\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"additions\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.7 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.9 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.12 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.13 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink19AXValidationMessageC1ERNS_17AXObjectCacheImplE = hidden unnamed_addr alias void (%"class.blink::AXValidationMessage"*, %"class.blink::AXObjectCacheImpl"*), void (%"class.blink::AXValidationMessage"*, %"class.blink::AXObjectCacheImpl"*)* @_ZN5blink19AXValidationMessageC2ERNS_17AXObjectCacheImplE
@_ZN5blink19AXValidationMessageD1Ev = hidden unnamed_addr alias void (%"class.blink::AXValidationMessage"*), void (%"class.blink::AXValidationMessage"*)* @_ZN5blink19AXValidationMessageD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19AXValidationMessageC2ERNS_17AXObjectCacheImplE(%"class.blink::AXValidationMessage"*, %"class.blink::AXObjectCacheImpl"* dereferenceable(456)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXValidationMessage", %"class.blink::AXValidationMessage"* %0, i64 0, i32 0
  tail call void @_ZN5blink12AXMockObjectC2ERNS_17AXObjectCacheImplE(%"class.blink::AXMockObject"* %3, %"class.blink::AXObjectCacheImpl"* dereferenceable(456) %1) #9
  %4 = getelementptr inbounds %"class.blink::AXValidationMessage", %"class.blink::AXValidationMessage"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [164 x i8*] }, { [164 x i8*] }* @_ZTVN5blink19AXValidationMessageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @_ZN5blink12AXMockObjectC2ERNS_17AXObjectCacheImplE(%"class.blink::AXMockObject"*, %"class.blink::AXObjectCacheImpl"* dereferenceable(456)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink12AXMockObjectD2Ev(%"class.blink::AXMockObject"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19AXValidationMessageD2Ev(%"class.blink::AXValidationMessage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXValidationMessage", %"class.blink::AXValidationMessage"* %0, i64 0, i32 0
  tail call void @_ZN5blink12AXMockObjectD2Ev(%"class.blink::AXMockObject"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19AXValidationMessageD0Ev(%"class.blink::AXValidationMessage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXValidationMessage", %"class.blink::AXValidationMessage"* %0, i64 0, i32 0
  tail call void @_ZN5blink12AXMockObjectD2Ev(%"class.blink::AXMockObject"* %2) #9
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink19AXValidationMessage29ComputeAccessibilityIsIgnoredEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXValidationMessage"* nocapture readnone, %"class.blink::HeapVector.743"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19AXValidationMessage17GetRelativeBoundsEPPNS_8AXObjectERNS_9FloatRectER10SkMatrix44Pb(%"class.blink::AXValidationMessage"*, %"class.blink::AXObject"** nocapture, %"class.blink::FloatRect"* nocapture dereferenceable(16), %class.SkMatrix44* dereferenceable(68), i8*) unnamed_addr #0 align 2 {
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %1, align 8
  %6 = bitcast %"class.blink::FloatRect"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 16, i1 false)
  tail call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* %3) #9
  %7 = icmp eq i8* %4, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  store i8 0, i8* %4, align 1
  br label %9

9:                                                ; preds = %5, %8
  %10 = getelementptr inbounds %"class.blink::AXValidationMessage", %"class.blink::AXValidationMessage"* %0, i64 0, i32 0, i32 0, i32 14, i32 0, i32 0
  %11 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %10, align 8
  %12 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl13FocusedObjectEv(%"class.blink::AXObjectCacheImpl"* %11) #9
  %13 = icmp eq %"class.blink::AXObject"* %12, null
  br i1 %13, label %71, label %14

14:                                               ; preds = %9
  %15 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* nonnull %12) #9
  %16 = icmp eq %"class.blink::Element"* %15, null
  br i1 %16, label %71, label %17

17:                                               ; preds = %14
  %18 = tail call %"class.blink::ListedElement"* @_ZN5blink13ListedElement4FromERNS_7ElementE(%"class.blink::Element"* nonnull dereferenceable(104) %15) #9
  %19 = icmp eq %"class.blink::ListedElement"* %18, null
  br i1 %19, label %71, label %20

20:                                               ; preds = %17
  %21 = tail call zeroext i1 @_ZNK5blink13ListedElement26IsValidationMessageVisibleEv(%"class.blink::ListedElement"* nonnull %18) #9
  br i1 %21, label %22, label %71

22:                                               ; preds = %20
  %23 = tail call zeroext i1 @_ZNK5blink13ListedElement26IsValidationMessageVisibleEv(%"class.blink::ListedElement"* nonnull %18) #9
  br i1 %23, label %24, label %71

24:                                               ; preds = %22
  %25 = tail call dereferenceable(104) %"class.blink::HTMLElement"* @_ZN5blink13ListedElement13ToHTMLElementEv(%"class.blink::ListedElement"* nonnull %18) #9
  %26 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %25, i64 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %25, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %31 = bitcast %"class.blink::NodeData"** %30 to %"class.blink::NodeRareData"**
  %32 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %32, i64 0, i32 1, i32 0, i32 0
  %34 = bitcast %"class.blink::NodeData"** %30 to %"class.blink::NodeRenderingData"**
  %35 = select i1 %29, %"class.blink::NodeRenderingData"** %34, %"class.blink::NodeRenderingData"** %33
  %36 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %36, i64 0, i32 1
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, null
  br i1 %39, label %71, label %40

40:                                               ; preds = %24
  %41 = getelementptr inbounds %"class.blink::AXValidationMessage", %"class.blink::AXValidationMessage"* %0, i64 0, i32 0, i32 0
  %42 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %41) #9
  store %"class.blink::AXObject"* %42, %"class.blink::AXObject"** %1, align 8
  %43 = load i32, i32* %26, align 8
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  %46 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %31, align 8
  %47 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %46, i64 0, i32 1, i32 0, i32 0
  %48 = select i1 %45, %"class.blink::NodeRenderingData"** %34, %"class.blink::NodeRenderingData"** %47
  %49 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %49, i64 0, i32 1
  %51 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %50, align 8
  %52 = icmp eq %"class.blink::LayoutObject"* %51, null
  br i1 %52, label %71, label %53

53:                                               ; preds = %40
  %54 = tail call { i64, i64 } @_ZNK5blink12LayoutObject23AbsoluteBoundingBoxRectEj(%"class.blink::LayoutObject"* nonnull %51, i32 0) #9
  %55 = extractvalue { i64, i64 } %54, 0
  %56 = trunc i64 %55 to i32
  %57 = lshr i64 %55, 32
  %58 = trunc i64 %57 to i32
  %59 = extractvalue { i64, i64 } %54, 1
  %60 = sitofp i32 %56 to float
  %61 = sitofp i32 %58 to float
  %62 = trunc i64 %59 to i32
  %63 = sitofp i32 %62 to float
  %64 = lshr i64 %59, 32
  %65 = trunc i64 %64 to i32
  %66 = sitofp i32 %65 to float
  %67 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 0
  store float %60, float* %67, align 4
  %68 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 1
  store float %61, float* %68, align 4
  %69 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1, i32 0
  store float %63, float* %69, align 4
  %70 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1, i32 1
  store float %66, float* %70, align 4
  br label %71

71:                                               ; preds = %20, %17, %22, %14, %9, %24, %40, %53
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ListedElement"* @_ZNK5blink19AXValidationMessage27RelatedFormControlIfVisibleEv(%"class.blink::AXValidationMessage"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXValidationMessage", %"class.blink::AXValidationMessage"* %0, i64 0, i32 0, i32 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %4 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl13FocusedObjectEv(%"class.blink::AXObjectCacheImpl"* %3) #9
  %5 = icmp eq %"class.blink::AXObject"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* nonnull %4) #9
  %8 = icmp eq %"class.blink::Element"* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %6
  %10 = tail call %"class.blink::ListedElement"* @_ZN5blink13ListedElement4FromERNS_7ElementE(%"class.blink::Element"* nonnull dereferenceable(104) %7) #9
  %11 = icmp eq %"class.blink::ListedElement"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @_ZNK5blink13ListedElement26IsValidationMessageVisibleEv(%"class.blink::ListedElement"* nonnull %10) #9
  br i1 %13, label %14, label %17

14:                                               ; preds = %12
  %15 = tail call zeroext i1 @_ZNK5blink13ListedElement26IsValidationMessageVisibleEv(%"class.blink::ListedElement"* nonnull %10) #9
  %16 = select i1 %15, %"class.blink::ListedElement"* %10, %"class.blink::ListedElement"* null
  br label %17

17:                                               ; preds = %6, %12, %9, %14, %1
  %18 = phi %"class.blink::ListedElement"* [ null, %1 ], [ null, %6 ], [ %16, %14 ], [ null, %9 ], [ null, %12 ]
  ret %"class.blink::ListedElement"* %18
}

declare dereferenceable(104) %"class.blink::HTMLElement"* @_ZN5blink13ListedElement13ToHTMLElementEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject23AbsoluteBoundingBoxRectEj(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink19AXValidationMessage11IsOffScreenEv(%"class.blink::AXValidationMessage"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19AXValidationMessage9IsVisibleEv(%"class.blink::AXValidationMessage"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXValidationMessage", %"class.blink::AXValidationMessage"* %0, i64 0, i32 0, i32 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %4 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl13FocusedObjectEv(%"class.blink::AXObjectCacheImpl"* %3) #9
  %5 = icmp eq %"class.blink::AXObject"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* nonnull %4) #9
  %8 = icmp eq %"class.blink::Element"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %6
  %10 = tail call %"class.blink::ListedElement"* @_ZN5blink13ListedElement4FromERNS_7ElementE(%"class.blink::Element"* nonnull dereferenceable(104) %7) #9
  %11 = icmp eq %"class.blink::ListedElement"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @_ZNK5blink13ListedElement26IsValidationMessageVisibleEv(%"class.blink::ListedElement"* nonnull %10) #9
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = tail call zeroext i1 @_ZNK5blink13ListedElement26IsValidationMessageVisibleEv(%"class.blink::ListedElement"* nonnull %10) #9
  br label %16

16:                                               ; preds = %1, %6, %9, %12, %14
  %17 = phi i1 [ false, %1 ], [ false, %6 ], [ %15, %14 ], [ false, %9 ], [ false, %12 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink19AXValidationMessage16LiveRegionStatusEv(%"class.blink::AXValidationMessage"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink19AXValidationMessage16LiveRegionStatusEvE30s_live_region_status_assertive to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink19AXValidationMessage16LiveRegionStatusEvE30s_live_region_status_assertive) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink19AXValidationMessage16LiveRegionStatusEvE30s_live_region_status_assertive to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i64 9) #9
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink19AXValidationMessage16LiveRegionStatusEvE30s_live_region_status_assertive) #9
  br label %8

8:                                                ; preds = %4, %7, %1
  ret %"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink19AXValidationMessage16LiveRegionStatusEvE30s_live_region_status_assertive to %"class.WTF::AtomicString"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink19AXValidationMessage18LiveRegionRelevantEv(%"class.blink::AXValidationMessage"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink19AXValidationMessage18LiveRegionRelevantEvE32s_live_region_relevant_additions to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink19AXValidationMessage18LiveRegionRelevantEvE32s_live_region_relevant_additions) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink19AXValidationMessage18LiveRegionRelevantEvE32s_live_region_relevant_additions to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i64 9) #9
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink19AXValidationMessage18LiveRegionRelevantEvE32s_live_region_relevant_additions) #9
  br label %8

8:                                                ; preds = %4, %7, %1
  ret %"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink19AXValidationMessage18LiveRegionRelevantEvE32s_live_region_relevant_additions to %"class.WTF::AtomicString"*)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink19AXValidationMessage22NativeRoleIgnoringAriaEv(%"class.blink::AXValidationMessage"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i32 2
}

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl13FocusedObjectEv(%"class.blink::AXObjectCacheImpl"*) local_unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::ListedElement"* @_ZN5blink13ListedElement4FromERNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement26IsValidationMessageVisibleEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink19AXValidationMessage15TextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSH_INS_10NameSourceELj0EEE(%"class.blink::AXValidationMessage"* nocapture readonly, i1 zeroext, i1 zeroext, %"class.blink::HeapHashSet.1362"* nocapture readnone, i32* nocapture readnone dereferenceable(4), %"class.blink::HeapVector.1363"* nocapture readnone, %"class.blink::HeapVector.1371"*) unnamed_addr #0 align 2 {
  %8 = alloca %"class.WTF::StringBuilder", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.blink::NameSource", align 8
  %12 = getelementptr inbounds %"class.blink::AXValidationMessage", %"class.blink::AXValidationMessage"* %0, i64 0, i32 0, i32 0, i32 14, i32 0, i32 0
  %13 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %12, align 8
  %14 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl13FocusedObjectEv(%"class.blink::AXObjectCacheImpl"* %13) #9
  %15 = icmp eq %"class.blink::AXObject"* %14, null
  br i1 %15, label %226, label %16

16:                                               ; preds = %7
  %17 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* nonnull %14) #9
  %18 = icmp eq %"class.blink::Element"* %17, null
  br i1 %18, label %226, label %19

19:                                               ; preds = %16
  %20 = tail call %"class.blink::ListedElement"* @_ZN5blink13ListedElement4FromERNS_7ElementE(%"class.blink::Element"* nonnull dereferenceable(104) %17) #9
  %21 = icmp eq %"class.blink::ListedElement"* %20, null
  br i1 %21, label %226, label %22

22:                                               ; preds = %19
  %23 = tail call zeroext i1 @_ZNK5blink13ListedElement26IsValidationMessageVisibleEv(%"class.blink::ListedElement"* nonnull %20) #9
  br i1 %23, label %24, label %226

24:                                               ; preds = %22
  %25 = tail call zeroext i1 @_ZNK5blink13ListedElement26IsValidationMessageVisibleEv(%"class.blink::ListedElement"* nonnull %20) #9
  br i1 %25, label %26, label %226

26:                                               ; preds = %24
  %27 = bitcast %"class.WTF::StringBuilder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 48, i1 false)
  %28 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 1
  %30 = bitcast %union.anon.1378* %29 to i8*
  store i8 0, i8* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 2
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 3
  store i8 1, i8* %32, align 4
  %33 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 4
  store i8 0, i8* %33, align 1
  %34 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #9
  %35 = bitcast %"class.blink::ListedElement"* %20 to %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)***
  %36 = load %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)** %36, i64 19
  %38 = load %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)** %37, align 8
  %39 = tail call %"class.WTF::StringImpl"* %38(%"class.blink::ListedElement"* nonnull %20) #9
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %41, label %46

41:                                               ; preds = %26
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %42, align 8
  %43 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %44 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 0, i32* %45, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  br label %66

46:                                               ; preds = %26
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 1
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %52 = bitcast i8** %51 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %49, i32* %53, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %46
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %46
  %63 = phi i32 [ %61, %60 ], [ %59, %46 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #9
  br label %66

66:                                               ; preds = %41, %62, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #9
  %67 = load %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)*** %35, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)** %67, i64 20
  %69 = load %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)** %68, align 8
  %70 = call %"class.WTF::StringImpl"* %69(%"class.blink::ListedElement"* nonnull %20) #9
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %118, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #9
  br label %85

85:                                               ; preds = %84, %81
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %8, i8 zeroext 32) #9
  %86 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #9
  %87 = load %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)*** %35, align 8
  %88 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)** %87, i64 20
  %89 = load %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)** %88, align 8
  %90 = call %"class.WTF::StringImpl"* %89(%"class.blink::ListedElement"* nonnull %20) #9
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %92, label %97

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %93, align 8
  %94 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %95 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 0, i32* %96, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  br label %117

97:                                               ; preds = %85
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %90, %"class.WTF::StringImpl"** %98, align 8
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 1
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %103 = bitcast i8** %102 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %103, align 8
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %100, i32* %104, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %97
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %97
  %114 = phi i32 [ %112, %111 ], [ %110, %97 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #9
  br label %117

117:                                              ; preds = %92, %113, %116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #9
  br label %118

118:                                              ; preds = %66, %117
  %119 = icmp eq %"class.blink::HeapVector.1371"* %6, null
  br i1 %119, label %208, label %120

120:                                              ; preds = %118
  %121 = getelementptr inbounds %"class.blink::HeapVector.1371", %"class.blink::HeapVector.1371"* %6, i64 0, i32 0
  %122 = bitcast %"class.blink::NameSource"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %122) #9
  %123 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %123, align 8
  %124 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %11, i64 0, i32 1
  store i8 1, i8* %124, align 8
  %125 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %11, i64 0, i32 2
  store i8 0, i8* %125, align 1
  %126 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %11, i64 0, i32 3
  store i32 1, i32* %126, align 4
  %127 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %11, i64 0, i32 4
  %128 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE to i64*), align 8
  %129 = bitcast %"class.blink::QualifiedName"** %127 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %11, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %130, align 8
  %131 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %11, i64 0, i32 6
  store i32 -1, i32* %131, align 8
  %132 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %11, i64 0, i32 7
  %133 = bitcast %"class.blink::HeapVector.1363"* %132 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 16, i1 false) #9
  %134 = getelementptr inbounds %"class.blink::HeapVector.1371", %"class.blink::HeapVector.1371"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"class.blink::HeapVector.1371", %"class.blink::HeapVector.1371"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  %138 = icmp eq i32 %135, %137
  br i1 %138, label %148, label %139, !prof !3

139:                                              ; preds = %120
  %140 = getelementptr inbounds %"class.blink::HeapVector.1371", %"class.blink::HeapVector.1371"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %141 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %140, align 8
  %142 = zext i32 %135 to i64
  %143 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %141, i64 %142
  %144 = bitcast %"class.blink::NameSource"* %143 to i8*
  %145 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %144, %"class.blink::NameSource"* nonnull dereferenceable(56) %11) #9
  %146 = load i32, i32* %134, align 4
  %147 = add i32 %146, 1
  store i32 %147, i32* %134, align 4
  br label %149

148:                                              ; preds = %120
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1374"* %121, %"class.blink::NameSource"* nonnull dereferenceable(56) %11) #9
  br label %149

149:                                              ; preds = %139, %148
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %165, label %152

152:                                              ; preds = %149
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %150) #9
  br label %165

165:                                              ; preds = %164, %161, %149
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %181, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  br i1 %172, label %175, label %177

175:                                              ; preds = %168
  %176 = add i32 %174, -1
  store i32 %176, i32* %173, align 4
  br label %177

177:                                              ; preds = %175, %168
  %178 = phi i32 [ %176, %175 ], [ %174, %168 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %166) #9
  br label %181

181:                                              ; preds = %165, %177, %180
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %122) #9
  %182 = load i32, i32* %134, align 4
  %183 = add i32 %182, -1
  %184 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1374"* %121, i32 %183) #9
  %185 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %184, i64 0, i32 3
  store i32 5, i32* %185, align 4
  %186 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %8) #9
  %187 = ptrtoint %"class.WTF::StringImpl"* %186 to i64
  %188 = load i32, i32* %134, align 4
  %189 = add i32 %188, -1
  %190 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1374"* %121, i32 %189) #9
  %191 = bitcast %"class.blink::NameSource"* %190 to i64*
  %192 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %190, i64 0, i32 0, i32 0, i32 0
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %192, align 8
  store i64 %187, i64* %191, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %208, label %195

195:                                              ; preds = %181
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %204

202:                                              ; preds = %195
  %203 = add i32 %201, -1
  store i32 %203, i32* %200, align 4
  br label %204

204:                                              ; preds = %202, %195
  %205 = phi i32 [ %203, %202 ], [ %201, %195 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #9
  br label %208

208:                                              ; preds = %181, %204, %207, %118
  %209 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %8) #9
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %8) #9
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %211, label %225, label %212

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = and i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 0
  %218 = load i32, i32* %217, align 4
  br i1 %216, label %219, label %221

219:                                              ; preds = %212
  %220 = add i32 %218, -1
  store i32 %220, i32* %217, align 4
  br label %221

221:                                              ; preds = %219, %212
  %222 = phi i32 [ %220, %219 ], [ %218, %212 ]
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %221
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %210) #9
  br label %225

225:                                              ; preds = %208, %221, %224
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #9
  br label %226

226:                                              ; preds = %22, %19, %24, %16, %7, %225
  %227 = phi %"class.WTF::StringImpl"* [ %209, %225 ], [ null, %7 ], [ null, %16 ], [ null, %24 ], [ null, %19 ], [ null, %22 ]
  ret %"class.WTF::StringImpl"* %227
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !4
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #9
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #9
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #9
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #9
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #9
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZNK5blink8AXObject5TraceEPNS_7VisitorE(%"class.blink::AXObject"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink8AXObject4InitEPS0_(%"class.blink::AXObject"*, %"class.blink::AXObject"*) unnamed_addr #1

declare void @_ZN5blink8AXObject6DetachEv(%"class.blink::AXObject"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject29GetAOMPropertyOrARIAAttributeENS_17AOMStringPropertyE(%"class.blink::AXObject"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_18AOMBooleanPropertyERb(%"class.blink::AXObject"*, i32, i8* dereferenceable(1)) unnamed_addr #1

declare %"class.blink::AccessibleNode"* @_ZNK5blink8AXObject17GetAccessibleNodeEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject14IsImageMapLinkEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject14IsAXNodeObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject16IsAXLayoutObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject17IsAXInlineTextBoxEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject6IsListEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject11IsAXListBoxEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject17IsAXListBoxOptionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject10IsMenuListEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject16IsMenuListOptionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject15IsMenuListPopupEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12AXMockObject12IsMockObjectEv(%"class.blink::AXMockObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZNK5blink8AXObject19IsProgressIndicatorEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject14IsAXRadioInputEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject8IsSliderEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19AXValidationMessage19IsValidationMessageEv(%"class.blink::AXValidationMessage"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZNK5blink8AXObject15IsVirtualObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject9IsControlEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject9IsDefaultEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject10IsFieldsetEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject12IsInputImageEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject13IsNativeImageEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject18IsNativeSpinButtonEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject14IsNativeSliderEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject12IsSpinButtonEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject19IsAutofillAvailableEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject11IsClickableEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject10IsExpandedEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject9IsFocusedEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject9IsGrabbedEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject9IsHoveredEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject20IsLineBreakingObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject8IsLinkedEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject8IsLoadedEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject7IsModalEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject17IsMultiSelectableEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject10IsRequiredEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject10IsSelectedEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject19IsSelectedFromFocusEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject22IsSelectedOptionActiveEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject19IsNotUserSelectableEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject9IsVisitedEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject22DefaultObjectInclusionEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.743"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8AXObject7GetNameERN2ax5mojom8NameFromEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, i32* dereferenceable(4), %"class.blink::HeapVector"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, i32, i32* dereferenceable(4), %"class.blink::HeapVector"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_17DescriptionSourceELj0EEEPNS6_INS_6MemberINS_23NameSourceRelatedObjectEEELj0EEE(%"class.blink::AXObject"*, i32, i32* dereferenceable(4), %"class.blink::HeapVector.1389"*, %"class.blink::HeapVector.1363"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject11PlaceholderEN2ax5mojom8NameFromE(%"class.blink::AXObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject5TitleEN2ax5mojom8NameFromE(%"class.blink::AXObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject19TextFromDescendantsERNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEb(%"class.blink::AXObject"*, %"class.blink::HeapHashSet.1362"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject9AccessKeyEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject15BackgroundColorEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject8GetColorEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 -16777216
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject10ColorValueEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject24CanvasHasFallbackContentEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject18ComputedFontFamilyEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject26FontFamilyForSerializationEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK5blink8AXObject8FontSizeEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret float 0.000000e+00
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK5blink8AXObject10FontWeightEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret float 0.000000e+00
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject12HeadingLevelEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject17HierarchicalLevelEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject12ImageDataUrlERKNS_7IntSizeE(%"class.blink::AXObject"*, %"class.blink::IntSize"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #9
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #9
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject16InPageLinkTargetEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

declare i32 @_ZNK5blink8AXObject11OrientationEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject12GetListStyleEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject12GetTextAlignEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject16GetTextDirectionEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK5blink8AXObject13GetTextIndentEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret float 0.000000e+00
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject15GetTextPositionEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject34GetTextStyleAndTextDecorationStyleEPiPN2ax5mojom19TextDecorationStyleES5_S5_(%"class.blink::AXObject"*, i32*, i32*, i32*, i32*) unnamed_addr #0 comdat align 2 {
  store i32 0, i32* %1, align 4
  store i32 0, i32* %2, align 4
  store i32 0, i32* %3, align 4
  store i32 0, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject19RadioButtonsInGroupEv(%"class.blink::HeapVector"* noalias sret, %"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject3UrlEv(%"class.blink::KURL"* noalias sret, %"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject12ChooserPopupEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

declare void @_ZN5blink8AXObject28LoadInlineTextBoxesRecursiveEv(%"class.blink::AXObject"*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject10NextOnLineEv(%"class.blink::AXObject"*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject14PreviousOnLineEv(%"class.blink::AXObject"*) unnamed_addr #1

declare void @_ZNK5blink8AXObject20TextCharacterOffsetsERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::AXObject"*, %"class.WTF::Vector.1390"*) unnamed_addr #1

declare void @_ZNK5blink8AXObject17GetWordBoundariesERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEES5_(%"class.blink::AXObject"*, %"class.WTF::Vector.1390"*, %"class.WTF::Vector.1390"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject10TextLengthEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject29TextOffsetInFormattingContextEi(%"class.blink::AXObject"*, i32) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject21TextOffsetInContainerEi(%"class.blink::AXObject"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject19GetAriaCurrentStateEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject15GetInvalidStateEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject16AriaInvalidValueEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject13ValueForRangeEPf(%"class.blink::AXObject"*, float*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject16MaxValueForRangeEPf(%"class.blink::AXObject"*, float*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject16MinValueForRangeEPf(%"class.blink::AXObject"*, float*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject17StepValueForRangeEPf(%"class.blink::AXObject"*, float*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8AXObject18GetValueForControlEv(%"class.blink::AXObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8AXObject46SlowGetValueForControlIncludingContentEditableEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12AXMockObject11RestrictionEv(%"class.blink::AXMockObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare i32 @_ZN5blink8AXObject26DetermineAccessibilityRoleEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject17AriaRoleAttributeEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZN5blink8AXObject16ActiveDescendantEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject12AutoCompleteEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject16AriaOwnsElementsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject23AriaDescribedbyElementsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject12ErrorMessageEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

declare i32 @_ZNK5blink8AXObject8HasPopupEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject14IsEditableRootEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject30HasContentEditableAttributeSetEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject20SupportsARIADraggingEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject11DropeffectsERN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS1_18PartitionAllocatorEEE(%"class.blink::AXObject"*, %"class.WTF::Vector.1391"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject8PosInSetEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject7SetSizeEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject20AccessibilityHitTestERKNS_8IntPointE(%"class.blink::AXObject"*, %"class.blink::IntPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19AXValidationMessage15CanHaveChildrenEv(%"class.blink::AXValidationMessage"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink8AXObject13ClearChildrenEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject15SelectedOptionsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK5blink8AXObject24EstimatedLoadingProgressEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret double 0.000000e+00
}

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject12RootScrollerEv(%"class.blink::AXObject"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink8AXObject7GetNodeEv(%"class.blink::AXObject"*) unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZNK5blink8AXObject15GetLayoutObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare %"class.blink::Document"* @_ZNK5blink12AXMockObject11GetDocumentEv(%"class.blink::AXMockObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Element"* @_ZNK5blink8AXObject13AnchorElementEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Element"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Element"* @_ZNK5blink8AXObject13ActionElementEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Element"* null
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8AXObject8LanguageEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject12HasAttributeERKNS_13QualifiedNameE(%"class.blink::AXObject"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject12GetAttributeERKNS_13QualifiedNameE(%"class.blink::AXObject"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  ret %"class.WTF::AtomicString"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject11IsDataTableEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink8AXObject11ColumnCountEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject8RowCountEv(%"class.blink::AXObject"*) unnamed_addr #1

declare void @_ZNK5blink8AXObject13ColumnHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector"* dereferenceable(16)) unnamed_addr #1

declare void @_ZNK5blink8AXObject10RowHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector"* dereferenceable(16)) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject19CellForColumnAndRowEjj(%"class.blink::AXObject"*, i32, i32) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject11ColumnIndexEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject8RowIndexEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject10ColumnSpanEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject7RowSpanEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject16GetSortDirectionEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject12HeaderObjectEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScrollableArea"* @_ZNK5blink8AXObject29GetScrollableAreaIfScrollableEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::ScrollableArea"* null
}

declare zeroext i1 @_ZN5blink8AXObject35InternalSetAccessibilityFocusActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject37InternalClearAccessibilityFocusActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject23OnNativeDecrementActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject19OnNativeClickActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject19OnNativeFocusActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject23OnNativeIncrementActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject25OnNativeSetSelectedActionEb(%"class.blink::AXObject"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject55OnNativeSetSequentialFocusNavigationStartingPointActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject22OnNativeSetValueActionERKN3WTF6StringE(%"class.blink::AXObject"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8AXObject15ChildrenChangedEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8AXObject29HandleActiveDescendantChangedEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8AXObject26HandleAutofillStateChangedENS_18WebAXAutofillStateE(%"class.blink::AXObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8AXObject25HandleAriaExpandedChangedEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink8AXObject16SelectionChangedEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19AXValidationMessage11AddChildrenEv(%"class.blink::AXValidationMessage"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZNK5blink8AXObject25SerializeMarkerAttributesEPN2ui10AXNodeDataE(%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*) unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #9
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !3

22:                                               ; preds = %15
  %23 = bitcast %union.anon.1378* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.1378* %16 to %"class.WTF::Vector.1384"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1384"* %30, i16* nonnull dereferenceable(2) %3) #9
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #9
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !3

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.1379", %"class.WTF::Vector.1379"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.1379"* %41, i8* nonnull dereferenceable(1) %4) #9
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1384"*, i16* dereferenceable(2)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1384"* %0, i32 %5) #9
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1384"* %0, i32 %5) #9
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1384"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !5

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1384"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1384"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1384"* %0, i32 %27) #9
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1384"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1384"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1384"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #9
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1385"* %19, i16* nonnull %6) #9
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #9
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #9
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !5

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #9
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !5

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1385"* %53, i16* %48) #9
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1384"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1385"*, i16*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.1379"*, i8* dereferenceable(1)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1379", %"class.WTF::Vector.1379"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1379", %"class.WTF::Vector.1379"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1379"* %0, i32 %5) #9
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1379"* %0, i32 %5) #9
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1379"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1379", %"class.WTF::Vector.1379"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !5

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1379", %"class.WTF::Vector.1379"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1379"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.1379", %"class.WTF::Vector.1379"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.1379"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1379"* %0, i32 %27) #9
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1379"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1379", %"class.WTF::Vector.1379"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1379", %"class.WTF::Vector.1379"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.1379"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.1379", %"class.WTF::Vector.1379"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.1379", %"class.WTF::Vector.1379"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.1379", %"class.WTF::Vector.1379"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.1379"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1379", %"class.WTF::Vector.1379"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #9
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1380"* %18, i8* nonnull %6) #9
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #9
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.1379", %"class.WTF::Vector.1379"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !5

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.1379", %"class.WTF::Vector.1379"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #9
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.1379", %"class.WTF::Vector.1379"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !5

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.1379", %"class.WTF::Vector.1379"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1380"* %46, i8* %42) #9
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.1379"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.1379", %"class.WTF::Vector.1379"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #9
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1380"*, i8*) local_unnamed_addr #8 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #9
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #1

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8*, %"class.blink::NameSource"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::NameSource"*
  %4 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::NameSource"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast i8* %0 to i64*
  store i64 %6, i64* %7, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 8
  %9 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false) #9
  %10 = getelementptr inbounds i8, i8* %0, i64 24
  %11 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 5
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast i8* %10 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %16 = getelementptr inbounds i8, i8* %0, i64 32
  %17 = bitcast i8* %16 to i32*
  %18 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds i8, i8* %0, i64 40
  %21 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 7
  %22 = getelementptr inbounds i8, i8* %0, i64 48
  %23 = bitcast i8* %22 to i32*
  %24 = getelementptr inbounds i8, i8* %0, i64 52
  %25 = bitcast i8* %24 to i32*
  %26 = bitcast %"class.blink::HeapVector.1363"* %21 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %20 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %23, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %23, align 4
  store i32 %30, i32* %29, align 4
  %32 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %25, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %25, align 4
  store i32 %33, i32* %32, align 4
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %2
  %38 = bitcast i8* %20 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #9
  br label %41

41:                                               ; preds = %37, %2
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.blink::HeapVector.1363"* %21 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %46) #9
  br label %48

48:                                               ; preds = %41, %44
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %75, label %51

51:                                               ; preds = %48
  %52 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %53 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %52, i64 0, i32 1
  %54 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %53) #9
  %55 = icmp eq i8* %54, null
  br i1 %55, label %56, label %58, !prof !3

56:                                               ; preds = %51
  %57 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %53, i8* %57) #9
  br label %58

58:                                               ; preds = %56, %51
  %59 = phi i8* [ %57, %56 ], [ %54, %51 ]
  %60 = bitcast i8* %59 to %"class.blink::ThreadState"**
  %61 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 9
  %63 = load i8, i8* %62, align 1, !range !4
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 13
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 1
  store i64 %68, i64* %66, align 8
  %69 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %70 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %70, i64 0, i32 0, i32 0
  %72 = bitcast i8* %20 to %"class.WTF::Vector.1366"*
  tail call void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.1366"* %72, %"class.blink::Visitor"* %71) #9
  %73 = load i64, i64* %66, align 8
  %74 = add i64 %73, -1
  store i64 %74, i64* %66, align 8
  br label %75

75:                                               ; preds = %48, %58, %65
  ret %"class.blink::NameSource"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1374"*, %"class.blink::NameSource"* dereferenceable(56)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1374", %"class.WTF::Vector.1374"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1374", %"class.WTF::Vector.1374"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %6, align 8
  %8 = icmp ugt %"class.blink::NameSource"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 %10
  %12 = icmp ugt %"class.blink::NameSource"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1374", %"class.WTF::Vector.1374"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1374"* %0, i32 %22) #9
  %23 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::NameSource"* %1 to i64
  %26 = ptrtoint %"class.blink::NameSource"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = sdiv exact i64 %27, 56
  %29 = getelementptr inbounds %"class.WTF::Vector.1374", %"class.WTF::Vector.1374"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1374"* %0, i32 %37) #9
  %38 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::NameSource"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::NameSource"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %41, i64 %44
  %46 = bitcast %"class.blink::NameSource"* %45 to i8*
  %47 = tail call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %46, %"class.blink::NameSource"* dereferenceable(56) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.1366"*, %"class.blink::Visitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.WTF::Vector.1366"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast %"class.WTF::Vector.1366"* %0 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #9
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1369"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.1369"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %9, i64 6
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* %1, i8* %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_8AXObjectEEEvRKNS_14LivenessBrokerEPKv) #9
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_8AXObjectEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AXObject"**
  %4 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %3, align 8
  %5 = ptrtoint %"class.blink::AXObject"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %4, i64 -1, i32 14
  %20 = bitcast %"class.blink::Member.2"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AXObject"*
  %4 = bitcast i8* %1 to void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)**, void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::AXObject"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1374"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1374", %"class.WTF::Vector.1374"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1374", %"class.WTF::Vector.1374"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %8, align 8
  %10 = icmp eq %"class.blink::NameSource"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = udiv i64 %12, 56
  %15 = tail call %"class.blink::HeapVectorBacking.1549"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1549"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1374"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1549", %"class.blink::HeapVectorBacking.1549"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %8, align 8
  %26 = icmp eq %"class.blink::NameSource"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::NameSource"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = udiv i64 %12, 56
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1374"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1374"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1374", %"class.WTF::Vector.1374"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1374", %"class.WTF::Vector.1374"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.1374"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1374", %"class.WTF::Vector.1374"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NameSource"* %6, %"class.blink::NameSource"* %10, %"class.blink::NameSource"* null, i1 zeroext true)
  %13 = bitcast %"class.blink::NameSource"* %6 to i8*
  %14 = mul nuw nsw i64 %9, 56
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %13, i64 %14) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %13) #9
  br label %42

15:                                               ; preds = %2
  %16 = zext i32 %1 to i64
  %17 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm(i64 %16) #9
  %18 = udiv i64 %17, 56
  %19 = tail call %"class.blink::HeapVectorBacking.1549"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %18) #9
  %20 = bitcast %"class.blink::HeapVectorBacking.1549"* %19 to %"class.blink::NameSource"*
  %21 = ptrtoint %"class.blink::HeapVectorBacking.1549"* %19 to i64
  %22 = getelementptr inbounds %"class.WTF::Vector.1374", %"class.WTF::Vector.1374"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %22, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.1374", %"class.WTF::Vector.1374"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 %26
  tail call void @_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NameSource"* %23, %"class.blink::NameSource"* %27, %"class.blink::NameSource"* %20, i1 zeroext false)
  %28 = bitcast %"class.WTF::Vector.1374"* %0 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = load i32, i32* %24, align 4
  %31 = zext i32 %30 to i64
  %32 = mul nuw nsw i64 %31, 56
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %29, i64 %32) #9
  %33 = load i8*, i8** %28, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %33) #9
  %34 = bitcast %"class.WTF::Vector.1374"* %0 to i64*
  store atomic i64 %21, i64* %34 monotonic, align 8
  %35 = trunc i64 %18 to i32
  %36 = getelementptr inbounds %"class.WTF::Vector.1374", %"class.WTF::Vector.1374"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %35, i32* %36, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %15
  %40 = getelementptr inbounds %"class.blink::HeapVectorBacking.1549", %"class.blink::HeapVectorBacking.1549"* %19, i64 0, i32 0
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #9
  br label %42

42:                                               ; preds = %39, %15, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2396745
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2396745) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 56
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1549"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.9, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 56
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1549"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1549"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 4
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #9
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !3

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #9
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #9
  br i1 %28, label %73, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::NameSource"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !3

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 56
  %51 = icmp ugt i64 %49, 55
  br i1 %51, label %52, label %73

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %54 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %55

55:                                               ; preds = %70, %52
  %56 = phi i64 [ 0, %52 ], [ %71, %70 ]
  %57 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %30, i64 %56, i32 7
  %58 = bitcast %"class.blink::HeapVector.1363"* %57 to i64*
  %59 = load atomic i64, i64* %58 monotonic, align 8
  %60 = icmp eq i64 %59, 0
  %61 = bitcast %"class.blink::HeapVector.1363"* %57 to i8**
  %62 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %62, i64 11
  %64 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8** %61) #9
  br i1 %60, label %70, label %65

65:                                               ; preds = %55
  %66 = inttoptr i64 %59 to i8*
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %54, align 8
  %68 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %67, i64 5
  %69 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %68, align 8
  tail call void %69(%"class.blink::Visitor"* %0, i8* nonnull %66, i8* nonnull %66, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %70

70:                                               ; preds = %65, %55
  %71 = add nuw nsw i64 %56, 1
  %72 = icmp ult i64 %71, %50
  br i1 %72, label %55, label %73

73:                                               ; preds = %70, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::HeapVectorBacking.1549"*
  tail call void @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv(%"class.blink::HeapVectorBacking.1549"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv(%"class.blink::HeapVectorBacking.1549"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapVectorBacking.1549", %"class.blink::HeapVectorBacking.1549"* %0, i64 -8, i32 0
  %3 = getelementptr inbounds i8, i8* %2, i64 6
  %4 = bitcast i8* %3 to i16*
  %5 = load i16, i16* %4, align 2
  %6 = lshr i16 %5, 2
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %15, !prof !3

8:                                                ; preds = %1
  %9 = ptrtoint i8* %2 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %6 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %8, %15
  %19 = phi i64 [ %14, %8 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 56
  %22 = getelementptr inbounds i8, i8* %2, i64 8
  %23 = bitcast i8* %22 to %"class.blink::NameSource"*
  %24 = icmp ugt i64 %20, 55
  br i1 %24, label %26, label %25

25:                                               ; preds = %62, %18
  ret void

26:                                               ; preds = %18, %62
  %27 = phi i64 [ %64, %62 ], [ 0, %18 ]
  %28 = phi i32 [ %63, %62 ], [ 0, %18 ]
  %29 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 %27, i32 5, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #9
  br label %45

45:                                               ; preds = %44, %41, %26
  %46 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 %27, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #9
  br label %62

62:                                               ; preds = %45, %58, %61
  %63 = add i32 %28, 1
  %64 = zext i32 %63 to i64
  %65 = icmp ugt i64 %21, %64
  br i1 %65, label %26, label %25
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NameSource"*, %"class.blink::NameSource"*, %"class.blink::NameSource"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %"class.blink::NameSource"* %0, %1
  br i1 %5, label %116, label %6

6:                                                ; preds = %4, %112
  %7 = phi %"class.blink::NameSource"* [ %114, %112 ], [ %0, %4 ]
  %8 = phi %"class.blink::NameSource"* [ %113, %112 ], [ %2, %4 ]
  %9 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.blink::NameSource"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::NameSource"* %8 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %13 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false) #9
  %15 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 5
  %16 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 5
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.WTF::AtomicString"* %16 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::AtomicString"* %15 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %21 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 6
  %22 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %21, align 8
  %24 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7
  %25 = bitcast %"class.blink::HeapVector.1363"* %24 to i8*
  %26 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 7
  %27 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %29 = bitcast %"class.blink::HeapVector.1363"* %26 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #9
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::HeapVector.1363"* %24 to i64*
  store atomic i64 0, i64* %29 monotonic, align 8
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %33 = load i32, i32* %27, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %27, align 4
  store i32 %33, i32* %32, align 4
  %35 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %28, align 4
  %37 = load i32, i32* %35, align 4
  store i32 %37, i32* %28, align 4
  store i32 %36, i32* %35, align 4
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %6
  %41 = bitcast %"class.blink::HeapVector.1363"* %24 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #9
  br label %44

44:                                               ; preds = %40, %6
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.blink::HeapVector.1363"* %26 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #9
  br label %51

51:                                               ; preds = %44, %47
  br i1 %3, label %52, label %79

52:                                               ; preds = %51
  %53 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %79, label %55

55:                                               ; preds = %52
  %56 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %57 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %56, i64 0, i32 1
  %58 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %57) #9
  %59 = icmp eq i8* %58, null
  br i1 %59, label %60, label %62, !prof !3

60:                                               ; preds = %55
  %61 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %57, i8* %61) #9
  br label %62

62:                                               ; preds = %60, %55
  %63 = phi i8* [ %61, %60 ], [ %58, %55 ]
  %64 = bitcast i8* %63 to %"class.blink::ThreadState"**
  %65 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 9
  %67 = load i8, i8* %66, align 1, !range !4
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %79, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 13
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %70, align 8
  %73 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %74 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %74, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7, i32 0
  tail call void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.1366"* %76, %"class.blink::Visitor"* %75) #9
  %77 = load i64, i64* %70, align 8
  %78 = add i64 %77, -1
  store i64 %78, i64* %70, align 8
  br label %79

79:                                               ; preds = %69, %62, %52, %51
  %80 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 5, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #9
  br label %96

96:                                               ; preds = %95, %92, %79
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #9
  br label %112

112:                                              ; preds = %96, %108, %111
  %113 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 1
  %114 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 1
  %115 = icmp eq %"class.blink::NameSource"* %114, %1
  br i1 %115, label %116, label %6

116:                                              ; preds = %112, %4
  ret void
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1374"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1374", %"class.WTF::Vector.1374"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.1374", %"class.WTF::Vector.1374"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %24, i64 %25
  ret %"class.blink::NameSource"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2000, i32 1}
