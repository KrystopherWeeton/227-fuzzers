; ModuleID = '../../third_party/leveldatabase/src/table/filter_block.cc'
source_filename = "../../third_party/leveldatabase/src/table/filter_block.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.leveldb::FilterBlockBuilder" = type { %"class.leveldb::FilterPolicy"*, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"class.std::__1::vector.6", %"class.std::__1::vector.13" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.leveldb::Slice"*, %"class.leveldb::Slice"*, %"class.std::__1::__compressed_pair.8" }
%"class.leveldb::Slice" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.leveldb::Slice"* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { i32*, i32*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i32* }
%"class.leveldb::FilterPolicy" = type { i32 (...)** }
%"class.leveldb::FilterBlockReader" = type { %"class.leveldb::FilterPolicy"*, i8*, i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN7leveldb5SliceENS_9allocatorIS2_EEE8__appendEm = comdat any

@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

@_ZN7leveldb18FilterBlockBuilderC1EPKNS_12FilterPolicyE = hidden unnamed_addr alias void (%"class.leveldb::FilterBlockBuilder"*, %"class.leveldb::FilterPolicy"*), void (%"class.leveldb::FilterBlockBuilder"*, %"class.leveldb::FilterPolicy"*)* @_ZN7leveldb18FilterBlockBuilderC2EPKNS_12FilterPolicyE
@_ZN7leveldb17FilterBlockReaderC1EPKNS_12FilterPolicyERKNS_5SliceE = hidden unnamed_addr alias void (%"class.leveldb::FilterBlockReader"*, %"class.leveldb::FilterPolicy"*, %"class.leveldb::Slice"*), void (%"class.leveldb::FilterBlockReader"*, %"class.leveldb::FilterPolicy"*, %"class.leveldb::Slice"*)* @_ZN7leveldb17FilterBlockReaderC2EPKNS_12FilterPolicyERKNS_5SliceE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb18FilterBlockBuilderC2EPKNS_12FilterPolicyE(%"class.leveldb::FilterBlockBuilder"* nocapture, %"class.leveldb::FilterPolicy"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 0
  store %"class.leveldb::FilterPolicy"* %1, %"class.leveldb::FilterPolicy"** %3, align 8
  %4 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 120, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb18FilterBlockBuilder10StartBlockEm(%"class.leveldb::FilterBlockBuilder"*, i64) local_unnamed_addr #0 align 2 {
  %3 = lshr i64 %1, 11
  %4 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 5
  %5 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 5, i32 0, i32 1
  %6 = bitcast i32** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.13"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 2
  %12 = icmp ugt i64 %3, %11
  br i1 %12, label %13, label %19

13:                                               ; preds = %2, %13
  tail call void @_ZN7leveldb18FilterBlockBuilder14GenerateFilterEv(%"class.leveldb::FilterBlockBuilder"* %0)
  %14 = load i64, i64* %6, align 8
  %15 = load i64, i64* %8, align 8
  %16 = sub i64 %14, %15
  %17 = ashr exact i64 %16, 2
  %18 = icmp ugt i64 %3, %17
  br i1 %18, label %13, label %19

19:                                               ; preds = %13, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb18FilterBlockBuilder14GenerateFilterEv(%"class.leveldb::FilterBlockBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 2, i32 0, i32 1
  %4 = bitcast i64** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp eq i64 %8, 0
  %11 = inttoptr i64 %5 to i64*
  br i1 %10, label %12, label %93

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 5
  %14 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 3
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  br label %24

22:                                               ; preds = %12
  %23 = zext i8 %17 to i64
  br label %24

24:                                               ; preds = %19, %22
  %25 = phi i64 [ %21, %19 ], [ %23, %22 ]
  %26 = trunc i64 %25 to i32
  %27 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 5, i32 0, i32 1
  %28 = load i32*, i32** %27, align 8
  %29 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = icmp ult i32* %28, %30
  %32 = ptrtoint i32* %30 to i64
  br i1 %31, label %33, label %37

33:                                               ; preds = %24
  store i32 %26, i32* %28, align 4
  %34 = getelementptr inbounds i32, i32* %28, i64 1
  %35 = ptrtoint i32* %34 to i64
  %36 = bitcast i32** %27 to i64*
  store i64 %35, i64* %36, align 8
  br label %307

37:                                               ; preds = %24
  %38 = ptrtoint i32* %28 to i64
  %39 = bitcast i32** %27 to i64*
  %40 = bitcast %"class.std::__1::vector.13"* %13 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %38, %41
  %43 = ashr exact i64 %42, 2
  %44 = add nsw i64 %43, 1
  %45 = icmp ugt i64 %44, 4611686018427387903
  br i1 %45, label %46, label %48

46:                                               ; preds = %37
  %47 = bitcast %"class.std::__1::vector.13"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %47) #8
  unreachable

48:                                               ; preds = %37
  %49 = bitcast i32** %29 to i64*
  %50 = sub i64 %32, %41
  %51 = ashr exact i64 %50, 2
  %52 = icmp ult i64 %51, 2305843009213693951
  br i1 %52, label %53, label %61

53:                                               ; preds = %48
  %54 = ashr exact i64 %50, 1
  %55 = icmp ult i64 %54, %44
  %56 = select i1 %55, i64 %44, i64 %54
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %53
  %59 = icmp ugt i64 %56, 4611686018427387903
  br i1 %59, label %60, label %61

60:                                               ; preds = %58
  tail call void @abort() #8
  unreachable

61:                                               ; preds = %58, %48
  %62 = phi i64 [ %56, %58 ], [ 4611686018427387903, %48 ]
  %63 = shl i64 %62, 2
  %64 = tail call i8* @_Znwm(i64 %63) #9
  %65 = bitcast i8* %64 to i32*
  br label %66

66:                                               ; preds = %61, %53
  %67 = phi i64 [ %62, %61 ], [ 0, %53 ]
  %68 = phi i32* [ %65, %61 ], [ null, %53 ]
  %69 = getelementptr inbounds i32, i32* %68, i64 %43
  %70 = getelementptr inbounds i32, i32* %68, i64 %67
  %71 = ptrtoint i32* %70 to i64
  store i32 %26, i32* %69, align 4
  %72 = getelementptr inbounds i32, i32* %69, i64 1
  %73 = ptrtoint i32* %72 to i64
  %74 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %13, i64 0, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = load i64, i64* %39, align 8
  %77 = ptrtoint i32* %75 to i64
  %78 = sub i64 %76, %77
  %79 = ashr exact i64 %78, 2
  %80 = sub nsw i64 0, %79
  %81 = getelementptr inbounds i32, i32* %69, i64 %80
  %82 = ptrtoint i32* %81 to i64
  %83 = icmp sgt i64 %78, 0
  br i1 %83, label %84, label %88

84:                                               ; preds = %66
  %85 = bitcast i32* %81 to i8*
  %86 = bitcast i32* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %85, i8* align 4 %86, i64 %78, i1 false) #10
  %87 = load i32*, i32** %74, align 8
  br label %88

88:                                               ; preds = %84, %66
  %89 = phi i32* [ %75, %66 ], [ %87, %84 ]
  store i64 %82, i64* %40, align 8
  store i64 %73, i64* %39, align 8
  store i64 %71, i64* %49, align 8
  %90 = icmp eq i32* %89, null
  br i1 %90, label %307, label %91

91:                                               ; preds = %88
  %92 = bitcast i32* %89 to i8*
  tail call void @_ZdlPv(i8* %92) #9
  br label %307

93:                                               ; preds = %1
  %94 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 1
  %95 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  br label %104

102:                                              ; preds = %93
  %103 = zext i8 %97 to i64
  br label %104

104:                                              ; preds = %99, %102
  %105 = phi i64 [ %101, %99 ], [ %103, %102 ]
  %106 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = icmp ugt i64* %107, %11
  %109 = ptrtoint i64* %107 to i64
  br i1 %108, label %110, label %113

110:                                              ; preds = %104
  store i64 %105, i64* %11, align 8
  %111 = getelementptr inbounds i64, i64* %11, i64 1
  %112 = ptrtoint i64* %111 to i64
  store i64 %112, i64* %4, align 8
  br label %163

113:                                              ; preds = %104
  %114 = add nsw i64 %9, 1
  %115 = icmp ugt i64 %114, 2305843009213693951
  br i1 %115, label %116, label %118

116:                                              ; preds = %113
  %117 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %117) #8
  unreachable

118:                                              ; preds = %113
  %119 = bitcast i64** %106 to i64*
  %120 = sub i64 %109, %7
  %121 = ashr exact i64 %120, 3
  %122 = icmp ult i64 %121, 1152921504606846975
  br i1 %122, label %123, label %131

123:                                              ; preds = %118
  %124 = ashr exact i64 %120, 2
  %125 = icmp ult i64 %124, %114
  %126 = select i1 %125, i64 %114, i64 %124
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %136, label %128

128:                                              ; preds = %123
  %129 = icmp ugt i64 %126, 2305843009213693951
  br i1 %129, label %130, label %131

130:                                              ; preds = %128
  tail call void @abort() #8
  unreachable

131:                                              ; preds = %128, %118
  %132 = phi i64 [ %126, %128 ], [ 2305843009213693951, %118 ]
  %133 = shl i64 %132, 3
  %134 = tail call i8* @_Znwm(i64 %133) #9
  %135 = bitcast i8* %134 to i64*
  br label %136

136:                                              ; preds = %131, %123
  %137 = phi i64 [ %132, %131 ], [ 0, %123 ]
  %138 = phi i64* [ %135, %131 ], [ null, %123 ]
  %139 = getelementptr inbounds i64, i64* %138, i64 %9
  %140 = getelementptr inbounds i64, i64* %138, i64 %137
  %141 = ptrtoint i64* %140 to i64
  store i64 %105, i64* %139, align 8
  %142 = getelementptr inbounds i64, i64* %139, i64 1
  %143 = ptrtoint i64* %142 to i64
  %144 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %145 = load i64*, i64** %144, align 8
  %146 = load i64, i64* %4, align 8
  %147 = ptrtoint i64* %145 to i64
  %148 = sub i64 %146, %147
  %149 = ashr exact i64 %148, 3
  %150 = sub nsw i64 0, %149
  %151 = getelementptr inbounds i64, i64* %139, i64 %150
  %152 = ptrtoint i64* %151 to i64
  %153 = icmp sgt i64 %148, 0
  br i1 %153, label %154, label %158

154:                                              ; preds = %136
  %155 = bitcast i64* %151 to i8*
  %156 = bitcast i64* %145 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 %148, i1 false) #10
  %157 = load i64*, i64** %144, align 8
  br label %158

158:                                              ; preds = %154, %136
  %159 = phi i64* [ %145, %136 ], [ %157, %154 ]
  store i64 %152, i64* %6, align 8
  store i64 %143, i64* %4, align 8
  store i64 %141, i64* %119, align 8
  %160 = icmp eq i64* %159, null
  br i1 %160, label %163, label %161

161:                                              ; preds = %158
  %162 = bitcast i64* %159 to i8*
  tail call void @_ZdlPv(i8* %162) #9
  br label %163

163:                                              ; preds = %110, %158, %161
  %164 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 4
  %165 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 4, i32 0, i32 1
  %166 = bitcast %"class.leveldb::Slice"** %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = bitcast %"class.std::__1::vector.6"* %164 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %167, %169
  %171 = ashr exact i64 %170, 4
  %172 = icmp ugt i64 %9, %171
  %173 = inttoptr i64 %169 to %"class.leveldb::Slice"*
  br i1 %172, label %174, label %176

174:                                              ; preds = %163
  %175 = sub nsw i64 %9, %171
  tail call void @_ZNSt3__16vectorIN7leveldb5SliceENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.6"* %164, i64 %175) #10
  br label %180

176:                                              ; preds = %163
  %177 = icmp ult i64 %9, %171
  br i1 %177, label %178, label %180

178:                                              ; preds = %176
  %179 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %173, i64 %9
  store %"class.leveldb::Slice"* %179, %"class.leveldb::Slice"** %165, align 8
  br label %180

180:                                              ; preds = %178, %176, %174
  %181 = bitcast %"class.std::__1::basic_string"* %94 to i8*
  %182 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %184 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %164, i64 0, i32 0, i32 0
  br label %287

185:                                              ; preds = %293
  %186 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 5
  %187 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 3
  %188 = bitcast %"class.std::__1::basic_string"* %187 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %188, i64 0, i32 1, i32 0
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %192, label %195

192:                                              ; preds = %185
  %193 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %194 = load i64, i64* %193, align 8
  br label %197

195:                                              ; preds = %185
  %196 = zext i8 %190 to i64
  br label %197

197:                                              ; preds = %192, %195
  %198 = phi i64 [ %194, %192 ], [ %196, %195 ]
  %199 = trunc i64 %198 to i32
  %200 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 5, i32 0, i32 1
  %201 = load i32*, i32** %200, align 8
  %202 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %203 = load i32*, i32** %202, align 8
  %204 = icmp ult i32* %201, %203
  %205 = ptrtoint i32* %203 to i64
  br i1 %204, label %206, label %210

206:                                              ; preds = %197
  store i32 %199, i32* %201, align 4
  %207 = getelementptr inbounds i32, i32* %201, i64 1
  %208 = ptrtoint i32* %207 to i64
  %209 = bitcast i32** %200 to i64*
  store i64 %208, i64* %209, align 8
  br label %266

210:                                              ; preds = %197
  %211 = ptrtoint i32* %201 to i64
  %212 = bitcast i32** %200 to i64*
  %213 = bitcast %"class.std::__1::vector.13"* %186 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = sub i64 %211, %214
  %216 = ashr exact i64 %215, 2
  %217 = add nsw i64 %216, 1
  %218 = icmp ugt i64 %217, 4611686018427387903
  br i1 %218, label %219, label %221

219:                                              ; preds = %210
  %220 = bitcast %"class.std::__1::vector.13"* %186 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %220) #8
  unreachable

221:                                              ; preds = %210
  %222 = bitcast i32** %202 to i64*
  %223 = sub i64 %205, %214
  %224 = ashr exact i64 %223, 2
  %225 = icmp ult i64 %224, 2305843009213693951
  br i1 %225, label %226, label %234

226:                                              ; preds = %221
  %227 = ashr exact i64 %223, 1
  %228 = icmp ult i64 %227, %217
  %229 = select i1 %228, i64 %217, i64 %227
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %239, label %231

231:                                              ; preds = %226
  %232 = icmp ugt i64 %229, 4611686018427387903
  br i1 %232, label %233, label %234

233:                                              ; preds = %231
  tail call void @abort() #8
  unreachable

234:                                              ; preds = %231, %221
  %235 = phi i64 [ %229, %231 ], [ 4611686018427387903, %221 ]
  %236 = shl i64 %235, 2
  %237 = tail call i8* @_Znwm(i64 %236) #9
  %238 = bitcast i8* %237 to i32*
  br label %239

239:                                              ; preds = %234, %226
  %240 = phi i64 [ %235, %234 ], [ 0, %226 ]
  %241 = phi i32* [ %238, %234 ], [ null, %226 ]
  %242 = getelementptr inbounds i32, i32* %241, i64 %216
  %243 = getelementptr inbounds i32, i32* %241, i64 %240
  %244 = ptrtoint i32* %243 to i64
  store i32 %199, i32* %242, align 4
  %245 = getelementptr inbounds i32, i32* %242, i64 1
  %246 = ptrtoint i32* %245 to i64
  %247 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %186, i64 0, i32 0, i32 0
  %248 = load i32*, i32** %247, align 8
  %249 = load i64, i64* %212, align 8
  %250 = ptrtoint i32* %248 to i64
  %251 = sub i64 %249, %250
  %252 = ashr exact i64 %251, 2
  %253 = sub nsw i64 0, %252
  %254 = getelementptr inbounds i32, i32* %242, i64 %253
  %255 = ptrtoint i32* %254 to i64
  %256 = icmp sgt i64 %251, 0
  br i1 %256, label %257, label %261

257:                                              ; preds = %239
  %258 = bitcast i32* %254 to i8*
  %259 = bitcast i32* %248 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %258, i8* align 4 %259, i64 %251, i1 false) #10
  %260 = load i32*, i32** %247, align 8
  br label %261

261:                                              ; preds = %257, %239
  %262 = phi i32* [ %248, %239 ], [ %260, %257 ]
  store i64 %255, i64* %213, align 8
  store i64 %246, i64* %212, align 8
  store i64 %244, i64* %222, align 8
  %263 = icmp eq i32* %262, null
  br i1 %263, label %266, label %264

264:                                              ; preds = %261
  %265 = bitcast i32* %262 to i8*
  tail call void @_ZdlPv(i8* %265) #9
  br label %266

266:                                              ; preds = %206, %261, %264
  %267 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 0
  %268 = load %"class.leveldb::FilterPolicy"*, %"class.leveldb::FilterPolicy"** %267, align 8
  %269 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %164, i64 0, i32 0, i32 0
  %270 = load %"class.leveldb::Slice"*, %"class.leveldb::Slice"** %269, align 8
  %271 = trunc i64 %9 to i32
  %272 = bitcast %"class.leveldb::FilterPolicy"* %268 to void (%"class.leveldb::FilterPolicy"*, %"class.leveldb::Slice"*, i32, %"class.std::__1::basic_string"*)***
  %273 = load void (%"class.leveldb::FilterPolicy"*, %"class.leveldb::Slice"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.leveldb::FilterPolicy"*, %"class.leveldb::Slice"*, i32, %"class.std::__1::basic_string"*)*** %272, align 8
  %274 = getelementptr inbounds void (%"class.leveldb::FilterPolicy"*, %"class.leveldb::Slice"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.leveldb::FilterPolicy"*, %"class.leveldb::Slice"*, i32, %"class.std::__1::basic_string"*)** %273, i64 3
  %275 = load void (%"class.leveldb::FilterPolicy"*, %"class.leveldb::Slice"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.leveldb::FilterPolicy"*, %"class.leveldb::Slice"*, i32, %"class.std::__1::basic_string"*)** %274, align 8
  tail call void %275(%"class.leveldb::FilterPolicy"* %268, %"class.leveldb::Slice"* %270, i32 %271, %"class.std::__1::basic_string"* %187) #10
  %276 = load i64, i64* %168, align 8
  store i64 %276, i64* %166, align 8
  %277 = load i8, i8* %96, align 1
  %278 = icmp slt i8 %277, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %266
  %280 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load i8*, i8** %280, align 8
  store i8 0, i8* %281, align 1
  %282 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %282, align 8
  br label %285

283:                                              ; preds = %266
  %284 = bitcast %"class.std::__1::basic_string"* %94 to i8*
  store i8 0, i8* %284, align 1
  store i8 0, i8* %96, align 1
  br label %285

285:                                              ; preds = %279, %283
  %286 = load i64, i64* %6, align 8
  store i64 %286, i64* %4, align 8
  br label %307

287:                                              ; preds = %180, %293
  %288 = phi i64 [ 0, %180 ], [ %299, %293 ]
  %289 = load i8, i8* %96, align 1
  %290 = icmp slt i8 %289, 0
  br i1 %290, label %291, label %293

291:                                              ; preds = %287
  %292 = load i8*, i8** %182, align 8
  br label %293

293:                                              ; preds = %287, %291
  %294 = phi i8* [ %292, %291 ], [ %181, %287 ]
  %295 = load i64*, i64** %183, align 8
  %296 = getelementptr inbounds i64, i64* %295, i64 %288
  %297 = load i64, i64* %296, align 8
  %298 = getelementptr inbounds i8, i8* %294, i64 %297
  %299 = add nuw i64 %288, 1
  %300 = getelementptr inbounds i64, i64* %295, i64 %299
  %301 = load i64, i64* %300, align 8
  %302 = sub i64 %301, %297
  %303 = load %"class.leveldb::Slice"*, %"class.leveldb::Slice"** %184, align 8
  %304 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %303, i64 %288, i32 0
  store i8* %298, i8** %304, align 8
  %305 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %303, i64 %288, i32 1
  store i64 %302, i64* %305, align 8
  %306 = icmp ult i64 %299, %9
  br i1 %306, label %287, label %185

307:                                              ; preds = %91, %88, %33, %285
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb18FilterBlockBuilder6AddKeyERKNS_5SliceE(%"class.leveldb::FilterBlockBuilder"*, %"class.leveldb::Slice"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %1, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  br label %18

16:                                               ; preds = %2
  %17 = zext i8 %11 to i64
  br label %18

18:                                               ; preds = %13, %16
  %19 = phi i64 [ %15, %13 ], [ %17, %16 ]
  %20 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 2, i32 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = icmp ult i64* %21, %23
  %25 = ptrtoint i64* %23 to i64
  br i1 %24, label %26, label %30

26:                                               ; preds = %18
  store i64 %19, i64* %21, align 8
  %27 = getelementptr inbounds i64, i64* %21, i64 1
  %28 = ptrtoint i64* %27 to i64
  %29 = bitcast i64** %20 to i64*
  store i64 %28, i64* %29, align 8
  br label %86

30:                                               ; preds = %18
  %31 = ptrtoint i64* %21 to i64
  %32 = bitcast i64** %20 to i64*
  %33 = bitcast %"class.std::__1::vector"* %7 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %31, %34
  %36 = ashr exact i64 %35, 3
  %37 = add nsw i64 %36, 1
  %38 = icmp ugt i64 %37, 2305843009213693951
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  %40 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #8
  unreachable

41:                                               ; preds = %30
  %42 = bitcast i64** %22 to i64*
  %43 = sub i64 %25, %34
  %44 = ashr exact i64 %43, 3
  %45 = icmp ult i64 %44, 1152921504606846975
  br i1 %45, label %46, label %54

46:                                               ; preds = %41
  %47 = ashr exact i64 %43, 2
  %48 = icmp ult i64 %47, %37
  %49 = select i1 %48, i64 %37, i64 %47
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %46
  %52 = icmp ugt i64 %49, 2305843009213693951
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void @abort() #8
  unreachable

54:                                               ; preds = %51, %41
  %55 = phi i64 [ %49, %51 ], [ 2305843009213693951, %41 ]
  %56 = shl i64 %55, 3
  %57 = tail call i8* @_Znwm(i64 %56) #9
  %58 = bitcast i8* %57 to i64*
  br label %59

59:                                               ; preds = %54, %46
  %60 = phi i64 [ %55, %54 ], [ 0, %46 ]
  %61 = phi i64* [ %58, %54 ], [ null, %46 ]
  %62 = getelementptr inbounds i64, i64* %61, i64 %36
  %63 = getelementptr inbounds i64, i64* %61, i64 %60
  %64 = ptrtoint i64* %63 to i64
  store i64 %19, i64* %62, align 8
  %65 = getelementptr inbounds i64, i64* %62, i64 1
  %66 = ptrtoint i64* %65 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = load i64, i64* %32, align 8
  %70 = ptrtoint i64* %68 to i64
  %71 = sub i64 %69, %70
  %72 = ashr exact i64 %71, 3
  %73 = sub nsw i64 0, %72
  %74 = getelementptr inbounds i64, i64* %62, i64 %73
  %75 = ptrtoint i64* %74 to i64
  %76 = icmp sgt i64 %71, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %59
  %78 = bitcast i64* %74 to i8*
  %79 = bitcast i64* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 %71, i1 false) #10
  %80 = load i64*, i64** %67, align 8
  br label %81

81:                                               ; preds = %77, %59
  %82 = phi i64* [ %68, %59 ], [ %80, %77 ]
  store i64 %75, i64* %33, align 8
  store i64 %66, i64* %32, align 8
  store i64 %64, i64* %42, align 8
  %83 = icmp eq i64* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = bitcast i64* %82 to i8*
  tail call void @_ZdlPv(i8* %85) #9
  br label %86

86:                                               ; preds = %26, %81, %84
  %87 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %8, i8* %4, i64 %6) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN7leveldb18FilterBlockBuilder6FinishEv(%"class.leveldb::FilterBlockBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64*, i64** %4, align 8
  %6 = icmp eq i64* %3, %5
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  tail call void @_ZN7leveldb18FilterBlockBuilder14GenerateFilterEv(%"class.leveldb::FilterBlockBuilder"* %0)
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 3
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  br label %19

17:                                               ; preds = %8
  %18 = zext i8 %12 to i64
  br label %19

19:                                               ; preds = %14, %17
  %20 = phi i64 [ %16, %14 ], [ %18, %17 ]
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 5
  %23 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 5, i32 0, i32 1
  %24 = bitcast i32** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.13"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %29, label %42

29:                                               ; preds = %42, %19
  tail call void @_ZN7leveldb10PutFixed32EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj(%"class.std::__1::basic_string"* %9, i32 %21) #10
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %9, i8 signext 11) #10
  %30 = load i8, i8* %11, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %35 = select i1 %31, i8* %33, i8* %34
  %36 = getelementptr inbounds %"class.leveldb::FilterBlockBuilder", %"class.leveldb::FilterBlockBuilder"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %30 to i64
  %39 = select i1 %31, i64 %37, i64 %38
  %40 = insertvalue { i8*, i64 } undef, i8* %35, 0
  %41 = insertvalue { i8*, i64 } %40, i64 %39, 1
  ret { i8*, i64 } %41

42:                                               ; preds = %19, %42
  %43 = phi i64 [ %50, %42 ], [ %27, %19 ]
  %44 = phi i64 [ %48, %42 ], [ 0, %19 ]
  %45 = inttoptr i64 %43 to i32*
  %46 = getelementptr inbounds i32, i32* %45, i64 %44
  %47 = load i32, i32* %46, align 4
  tail call void @_ZN7leveldb10PutFixed32EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj(%"class.std::__1::basic_string"* %9, i32 %47) #10
  %48 = add nuw i64 %44, 1
  %49 = load i64, i64* %24, align 8
  %50 = load i64, i64* %26, align 8
  %51 = sub i64 %49, %50
  %52 = ashr exact i64 %51, 2
  %53 = icmp ult i64 %48, %52
  br i1 %53, label %42, label %29
}

declare void @_ZN7leveldb10PutFixed32EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj(%"class.std::__1::basic_string"*, i32) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7leveldb17FilterBlockReaderC2EPKNS_12FilterPolicyERKNS_5SliceE(%"class.leveldb::FilterBlockReader"* nocapture, %"class.leveldb::FilterPolicy"*, %"class.leveldb::Slice"* nocapture readonly dereferenceable(16)) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.leveldb::FilterBlockReader", %"class.leveldb::FilterBlockReader"* %0, i64 0, i32 0
  store %"class.leveldb::FilterPolicy"* %1, %"class.leveldb::FilterPolicy"** %4, align 8
  %5 = getelementptr inbounds %"class.leveldb::FilterBlockReader", %"class.leveldb::FilterBlockReader"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.leveldb::FilterBlockReader", %"class.leveldb::FilterBlockReader"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.leveldb::FilterBlockReader", %"class.leveldb::FilterBlockReader"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %2, i64 0, i32 1
  %9 = bitcast i8** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false)
  %10 = load i64, i64* %8, align 8
  %11 = icmp ult i64 %10, 5
  br i1 %11, label %46, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.leveldb::FilterBlockReader", %"class.leveldb::FilterBlockReader"* %0, i64 0, i32 4
  %14 = add i64 %10, -1
  %15 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %2, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 %14
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i64
  store i64 %19, i64* %13, align 8
  %20 = load i8*, i8** %15, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 %10
  %22 = getelementptr inbounds i8, i8* %21, i64 -5
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i64
  %25 = getelementptr inbounds i8, i8* %22, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i64
  %28 = shl nuw nsw i64 %27, 8
  %29 = or i64 %28, %24
  %30 = getelementptr inbounds i8, i8* %22, i64 2
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i64
  %33 = shl nuw nsw i64 %32, 16
  %34 = or i64 %29, %33
  %35 = getelementptr inbounds i8, i8* %22, i64 3
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = shl nuw nsw i64 %37, 24
  %39 = or i64 %34, %38
  %40 = add i64 %10, -5
  %41 = icmp ult i64 %40, %39
  br i1 %41, label %46, label %42

42:                                               ; preds = %12
  store i8* %20, i8** %5, align 8
  %43 = getelementptr inbounds i8, i8* %20, i64 %39
  store i8* %43, i8** %6, align 8
  %44 = sub i64 %40, %39
  %45 = lshr i64 %44, 2
  store i64 %45, i64* %7, align 8
  br label %46

46:                                               ; preds = %42, %12, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7leveldb17FilterBlockReader11KeyMayMatchEmRKNS_5SliceE(%"class.leveldb::FilterBlockReader"* nocapture readonly, i64, %"class.leveldb::Slice"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.leveldb::Slice", align 8
  %5 = getelementptr inbounds %"class.leveldb::FilterBlockReader", %"class.leveldb::FilterBlockReader"* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, %6
  %8 = getelementptr inbounds %"class.leveldb::FilterBlockReader", %"class.leveldb::FilterBlockReader"* %0, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %78

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.leveldb::FilterBlockReader", %"class.leveldb::FilterBlockReader"* %0, i64 0, i32 2
  %13 = load i8*, i8** %12, align 8
  %14 = shl i64 %7, 2
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = getelementptr inbounds i8, i8* %15, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 8
  %22 = or i32 %21, %17
  %23 = getelementptr inbounds i8, i8* %15, i64 2
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 16
  %27 = or i32 %22, %26
  %28 = getelementptr inbounds i8, i8* %15, i64 3
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw i32 %30, 24
  %32 = or i32 %27, %31
  %33 = getelementptr inbounds i8, i8* %15, i64 4
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = getelementptr inbounds i8, i8* %33, i64 1
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = shl nuw nsw i32 %38, 8
  %40 = or i32 %39, %35
  %41 = getelementptr inbounds i8, i8* %33, i64 2
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = shl nuw nsw i32 %43, 16
  %45 = or i32 %40, %44
  %46 = getelementptr inbounds i8, i8* %33, i64 3
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw i32 %48, 24
  %50 = or i32 %45, %49
  %51 = icmp ult i32 %50, %32
  br i1 %51, label %76, label %52

52:                                               ; preds = %11
  %53 = ptrtoint i8* %13 to i64
  %54 = zext i32 %50 to i64
  %55 = getelementptr inbounds %"class.leveldb::FilterBlockReader", %"class.leveldb::FilterBlockReader"* %0, i64 0, i32 1
  %56 = bitcast i8** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %53, %57
  %59 = icmp ult i64 %58, %54
  br i1 %59, label %76, label %60

60:                                               ; preds = %52
  %61 = inttoptr i64 %57 to i8*
  %62 = bitcast %"class.leveldb::Slice"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #10
  %63 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %4, i64 0, i32 0
  %64 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %4, i64 0, i32 1
  %65 = zext i32 %32 to i64
  %66 = getelementptr inbounds i8, i8* %61, i64 %65
  %67 = sub i32 %50, %32
  %68 = zext i32 %67 to i64
  store i8* %66, i8** %63, align 8
  store i64 %68, i64* %64, align 8
  %69 = getelementptr inbounds %"class.leveldb::FilterBlockReader", %"class.leveldb::FilterBlockReader"* %0, i64 0, i32 0
  %70 = load %"class.leveldb::FilterPolicy"*, %"class.leveldb::FilterPolicy"** %69, align 8
  %71 = bitcast %"class.leveldb::FilterPolicy"* %70 to i1 (%"class.leveldb::FilterPolicy"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)***
  %72 = load i1 (%"class.leveldb::FilterPolicy"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)**, i1 (%"class.leveldb::FilterPolicy"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*** %71, align 8
  %73 = getelementptr inbounds i1 (%"class.leveldb::FilterPolicy"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*, i1 (%"class.leveldb::FilterPolicy"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)** %72, i64 4
  %74 = load i1 (%"class.leveldb::FilterPolicy"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*, i1 (%"class.leveldb::FilterPolicy"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)** %73, align 8
  %75 = call zeroext i1 %74(%"class.leveldb::FilterPolicy"* %70, %"class.leveldb::Slice"* dereferenceable(16) %2, %"class.leveldb::Slice"* nonnull dereferenceable(16) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #10
  br label %79

76:                                               ; preds = %11, %52
  %77 = icmp eq i32 %50, %32
  br i1 %77, label %79, label %78

78:                                               ; preds = %76, %3
  br label %79

79:                                               ; preds = %76, %60, %78
  %80 = phi i1 [ true, %78 ], [ false, %76 ], [ %75, %60 ]
  ret i1 %80
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7leveldb5SliceENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.6"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.leveldb::Slice"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.leveldb::Slice"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %58, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.leveldb::Slice"*
  %14 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %56, label %16

16:                                               ; preds = %12
  %17 = shl nsw i64 %1, 4
  %18 = add i64 %17, -16
  %19 = lshr exact i64 %18, 4
  %20 = add nuw nsw i64 %19, 1
  %21 = and i64 %20, 7
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %31, label %23

23:                                               ; preds = %16, %23
  %24 = phi %"class.leveldb::Slice"* [ %28, %23 ], [ %13, %16 ]
  %25 = phi i64 [ %29, %23 ], [ %21, %16 ]
  %26 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %24, i64 0, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %24, i64 0, i32 1
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %24, i64 1
  %29 = add i64 %25, -1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %23, !llvm.loop !2

31:                                               ; preds = %23, %16
  %32 = phi %"class.leveldb::Slice"* [ %13, %16 ], [ %28, %23 ]
  %33 = icmp ult i64 %18, 112
  br i1 %33, label %34, label %36

34:                                               ; preds = %36, %31
  %35 = ptrtoint %"class.leveldb::Slice"* %14 to i64
  br label %56

36:                                               ; preds = %31, %36
  %37 = phi %"class.leveldb::Slice"* [ %54, %36 ], [ %32, %31 ]
  %38 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %37, i64 0, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %38, align 8
  %39 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %37, i64 0, i32 1
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %37, i64 1, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %40, align 8
  %41 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %37, i64 1, i32 1
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %37, i64 2, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %42, align 8
  %43 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %37, i64 2, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %37, i64 3, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %44, align 8
  %45 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %37, i64 3, i32 1
  store i64 0, i64* %45, align 8
  %46 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %37, i64 4, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %46, align 8
  %47 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %37, i64 4, i32 1
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %37, i64 5, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %48, align 8
  %49 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %37, i64 5, i32 1
  store i64 0, i64* %49, align 8
  %50 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %37, i64 6, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %50, align 8
  %51 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %37, i64 6, i32 1
  store i64 0, i64* %51, align 8
  %52 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %37, i64 7, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %52, align 8
  %53 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %37, i64 7, i32 1
  store i64 0, i64* %53, align 8
  %54 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %37, i64 8
  %55 = icmp eq %"class.leveldb::Slice"* %54, %14
  br i1 %55, label %34, label %36

56:                                               ; preds = %12, %34
  %57 = phi i64 [ %35, %34 ], [ %8, %12 ]
  store i64 %57, i64* %7, align 8
  br label %149

58:                                               ; preds = %2
  %59 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %8, %60
  %62 = ashr exact i64 %61, 4
  %63 = add i64 %62, %1
  %64 = icmp ugt i64 %63, 1152921504606846975
  br i1 %64, label %65, label %67

65:                                               ; preds = %58
  %66 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %66) #8
  unreachable

67:                                               ; preds = %58
  %68 = sub i64 %5, %60
  %69 = ashr exact i64 %68, 4
  %70 = icmp ult i64 %69, 576460752303423487
  br i1 %70, label %71, label %79

71:                                               ; preds = %67
  %72 = ashr exact i64 %68, 3
  %73 = icmp ult i64 %72, %63
  %74 = select i1 %73, i64 %63, i64 %72
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %84, label %76

76:                                               ; preds = %71
  %77 = icmp ugt i64 %74, 1152921504606846975
  br i1 %77, label %78, label %79

78:                                               ; preds = %76
  tail call void @abort() #8
  unreachable

79:                                               ; preds = %67, %76
  %80 = phi i64 [ %74, %76 ], [ 1152921504606846975, %67 ]
  %81 = shl i64 %80, 4
  %82 = tail call i8* @_Znwm(i64 %81) #9
  %83 = bitcast i8* %82 to %"class.leveldb::Slice"*
  br label %84

84:                                               ; preds = %71, %79
  %85 = phi i64 [ %80, %79 ], [ 0, %71 ]
  %86 = phi %"class.leveldb::Slice"* [ %83, %79 ], [ null, %71 ]
  %87 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %86, i64 %62
  %88 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %86, i64 %85
  %89 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %87, i64 %1
  %90 = shl nsw i64 %1, 4
  %91 = add i64 %90, -16
  %92 = lshr exact i64 %91, 4
  %93 = add nuw nsw i64 %92, 1
  %94 = and i64 %93, 7
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %84, %96
  %97 = phi %"class.leveldb::Slice"* [ %101, %96 ], [ %87, %84 ]
  %98 = phi i64 [ %102, %96 ], [ %94, %84 ]
  %99 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %97, i64 0, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %99, align 8
  %100 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %97, i64 0, i32 1
  store i64 0, i64* %100, align 8
  %101 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %97, i64 1
  %102 = add i64 %98, -1
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %96, !llvm.loop !4

104:                                              ; preds = %96, %84
  %105 = phi %"class.leveldb::Slice"* [ %87, %84 ], [ %101, %96 ]
  %106 = icmp ult i64 %91, 112
  br i1 %106, label %127, label %107

107:                                              ; preds = %104, %107
  %108 = phi %"class.leveldb::Slice"* [ %125, %107 ], [ %105, %104 ]
  %109 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %108, i64 0, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %109, align 8
  %110 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %108, i64 0, i32 1
  store i64 0, i64* %110, align 8
  %111 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %108, i64 1, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %111, align 8
  %112 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %108, i64 1, i32 1
  store i64 0, i64* %112, align 8
  %113 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %108, i64 2, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %113, align 8
  %114 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %108, i64 2, i32 1
  store i64 0, i64* %114, align 8
  %115 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %108, i64 3, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %115, align 8
  %116 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %108, i64 3, i32 1
  store i64 0, i64* %116, align 8
  %117 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %108, i64 4, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %117, align 8
  %118 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %108, i64 4, i32 1
  store i64 0, i64* %118, align 8
  %119 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %108, i64 5, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %119, align 8
  %120 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %108, i64 5, i32 1
  store i64 0, i64* %120, align 8
  %121 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %108, i64 6, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %121, align 8
  %122 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %108, i64 6, i32 1
  store i64 0, i64* %122, align 8
  %123 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %108, i64 7, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %123, align 8
  %124 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %108, i64 7, i32 1
  store i64 0, i64* %124, align 8
  %125 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %108, i64 8
  %126 = icmp eq %"class.leveldb::Slice"* %89, %125
  br i1 %126, label %127, label %107

127:                                              ; preds = %107, %104
  %128 = ptrtoint %"class.leveldb::Slice"* %88 to i64
  %129 = ptrtoint %"class.leveldb::Slice"* %89 to i64
  %130 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 0
  %131 = load %"class.leveldb::Slice"*, %"class.leveldb::Slice"** %130, align 8
  %132 = load i64, i64* %7, align 8
  %133 = ptrtoint %"class.leveldb::Slice"* %131 to i64
  %134 = sub i64 %132, %133
  %135 = ashr exact i64 %134, 4
  %136 = sub nsw i64 0, %135
  %137 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %87, i64 %136
  %138 = ptrtoint %"class.leveldb::Slice"* %137 to i64
  %139 = icmp sgt i64 %134, 0
  br i1 %139, label %140, label %144

140:                                              ; preds = %127
  %141 = bitcast %"class.leveldb::Slice"* %137 to i8*
  %142 = bitcast %"class.leveldb::Slice"* %131 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* align 8 %142, i64 %134, i1 false) #10
  %143 = load %"class.leveldb::Slice"*, %"class.leveldb::Slice"** %130, align 8
  br label %144

144:                                              ; preds = %127, %140
  %145 = phi %"class.leveldb::Slice"* [ %131, %127 ], [ %143, %140 ]
  store i64 %138, i64* %59, align 8
  store i64 %129, i64* %7, align 8
  store i64 %128, i64* %4, align 8
  %146 = icmp eq %"class.leveldb::Slice"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %144
  %148 = bitcast %"class.leveldb::Slice"* %145 to i8*
  tail call void @_ZdlPv(i8* %148) #9
  br label %149

149:                                              ; preds = %147, %144, %56
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
