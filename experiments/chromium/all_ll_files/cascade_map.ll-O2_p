; ModuleID = '../../third_party/blink/renderer/core/css/resolver/cascade_map.cc'
source_filename = "../../third_party/blink/renderer/core/css/resolver/cascade_map.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::CascadeMap" = type { i64, i8, %"class.blink::CascadeMap::NativeMap", %"class.blink::CascadeMap::NativeMap", %"class.blink::CascadeMap::NativeMap", %"class.WTF::HashMap", %"class.WTF::HashMap" }
%"class.blink::CascadeMap::NativeMap" = type { %"class.blink::CSSBitsetBase", [4992 x i8] }
%"class.blink::CSSBitsetBase" = type { [10 x i64] }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::CSSPropertyName", %"class.blink::CascadePriority" }
%"class.blink::CSSPropertyName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CascadePriority" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SE_SF_EERKS2_EEPKS5_RKT0_ = comdat any

$_ZNK3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EEPKS5_RKT0_ = comdat any

$_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS2_RS4_EENS_18HashTableAddResultISG_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS5_jSH_ = comdat any

$_ZN3WTF15HashTableHelperINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS3_EEE28IsEmptyOrDeletedBucketForKeyERKS3_ = comdat any

$_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EENSt3__14pairIPS5_bEERKT0_ = comdat any

$_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS5_j = comdat any

@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_15CascadePriorityEEEEEPKcv = private unnamed_addr constant [113 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::CSSPropertyName, blink::CascadePriority>]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink10CascadeMap2AtERKNS_15CSSPropertyNameE(%"class.blink::CascadeMap"*, %"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 5, i32 0
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SE_SF_EERKS2_EEPKS5_RKT0_(%"class.WTF::HashTable"* %7, %"class.blink::CSSPropertyName"* dereferenceable(16) %1) #7
  %9 = icmp eq %"struct.WTF::KeyValuePair"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 0, i32 1, i32 0
  %12 = load i64, i64* %11, align 8
  br label %27

13:                                               ; preds = %2
  %14 = sext i32 %4 to i64
  %15 = lshr i64 %14, 6
  %16 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 2, i32 0, i32 0, i64 %15
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %14, 63
  %19 = shl i64 1, %18
  %20 = and i64 %17, %19
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 2, i32 1, i64 0
  %24 = bitcast i8* %23 to %"class.blink::CascadePriority"*
  %25 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %24, i64 %14, i32 0
  %26 = load i64, i64* %25, align 8
  br label %27

27:                                               ; preds = %22, %13, %10, %6
  %28 = phi i64 [ %12, %10 ], [ 0, %6 ], [ %26, %22 ], [ 0, %13 ]
  ret i64 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink10CascadeMap2AtERKNS_15CSSPropertyNameENS_13CascadeOriginE(%"class.blink::CascadeMap"*, %"class.blink::CSSPropertyName"* dereferenceable(16), i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  %7 = icmp ult i8 %2, 2
  br i1 %6, label %8, label %25

8:                                                ; preds = %3
  br i1 %7, label %68, label %9

9:                                                ; preds = %8
  %10 = icmp eq i8 %2, 2
  br i1 %10, label %11, label %18

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 6, i32 0
  %13 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SE_SF_EERKS2_EEPKS5_RKT0_(%"class.WTF::HashTable"* %12, %"class.blink::CSSPropertyName"* dereferenceable(16) %1) #7
  %14 = icmp eq %"struct.WTF::KeyValuePair"* %13, null
  br i1 %14, label %68, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 0, i32 1, i32 0
  %17 = load i64, i64* %16, align 8
  br label %68

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 5, i32 0
  %20 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SE_SF_EERKS2_EEPKS5_RKT0_(%"class.WTF::HashTable"* %19, %"class.blink::CSSPropertyName"* dereferenceable(16) %1) #7
  %21 = icmp eq %"struct.WTF::KeyValuePair"* %20, null
  br i1 %21, label %68, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 1, i32 0
  %24 = load i64, i64* %23, align 8
  br label %68

25:                                               ; preds = %3
  br i1 %7, label %26, label %40

26:                                               ; preds = %25
  %27 = sext i32 %5 to i64
  %28 = lshr i64 %27, 6
  %29 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 3, i32 0, i32 0, i64 %28
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %27, 63
  %32 = shl i64 1, %31
  %33 = and i64 %30, %32
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %68, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 3, i32 1, i64 0
  %37 = bitcast i8* %36 to %"class.blink::CascadePriority"*
  %38 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %37, i64 %27, i32 0
  %39 = load i64, i64* %38, align 8
  br label %68

40:                                               ; preds = %25
  %41 = icmp eq i8 %2, 2
  %42 = sext i32 %5 to i64
  %43 = lshr i64 %42, 6
  br i1 %41, label %44, label %56

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 4, i32 0, i32 0, i64 %43
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %42, 63
  %48 = shl i64 1, %47
  %49 = and i64 %46, %48
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %68, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 4, i32 1, i64 0
  %53 = bitcast i8* %52 to %"class.blink::CascadePriority"*
  %54 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %53, i64 %42, i32 0
  %55 = load i64, i64* %54, align 8
  br label %68

56:                                               ; preds = %40
  %57 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 2, i32 0, i32 0, i64 %43
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %42, 63
  %60 = shl i64 1, %59
  %61 = and i64 %58, %60
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %68, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 2, i32 1, i64 0
  %65 = bitcast i8* %64 to %"class.blink::CascadePriority"*
  %66 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %65, i64 %42, i32 0
  %67 = load i64, i64* %66, align 8
  br label %68

68:                                               ; preds = %63, %56, %51, %44, %35, %26, %22, %18, %15, %11, %8
  %69 = phi i64 [ 0, %8 ], [ %17, %15 ], [ 0, %11 ], [ %24, %22 ], [ 0, %18 ], [ %39, %35 ], [ 0, %26 ], [ %55, %51 ], [ 0, %44 ], [ %67, %63 ], [ 0, %56 ]
  ret i64 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CascadePriority"* @_ZN5blink10CascadeMap4FindERKNS_15CSSPropertyNameE(%"class.blink::CascadeMap"*, %"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %7, i64 0, i32 0
  %9 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EEPKS5_RKT0_(%"class.WTF::HashTable"* %8, %"class.blink::CSSPropertyName"* dereferenceable(16) %1) #7
  %10 = icmp eq %"struct.WTF::KeyValuePair"* %9, null
  %11 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %7, i64 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 5, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  %17 = select i1 %10, %"struct.WTF::KeyValuePair"* %16, %"struct.WTF::KeyValuePair"* %9
  %18 = icmp eq %"struct.WTF::KeyValuePair"* %17, %16
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 0, i32 1
  %20 = select i1 %18, %"class.blink::CascadePriority"* null, %"class.blink::CascadePriority"* %19
  br label %34

21:                                               ; preds = %2
  %22 = sext i32 %4 to i64
  %23 = lshr i64 %22, 6
  %24 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 2, i32 0, i32 0, i64 %23
  %25 = load i64, i64* %24, align 8
  %26 = and i64 %22, 63
  %27 = shl i64 1, %26
  %28 = and i64 %25, %27
  %29 = icmp eq i64 %28, 0
  %30 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 2, i32 1, i64 0
  %31 = bitcast i8* %30 to %"class.blink::CascadePriority"*
  %32 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %31, i64 %22
  %33 = select i1 %29, %"class.blink::CascadePriority"* null, %"class.blink::CascadePriority"* %32
  br label %34

34:                                               ; preds = %21, %6
  %35 = phi %"class.blink::CascadePriority"* [ %20, %6 ], [ %33, %21 ]
  ret %"class.blink::CascadePriority"* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CascadePriority"* @_ZN5blink10CascadeMap4FindERKNS_15CSSPropertyNameENS_13CascadeOriginE(%"class.blink::CascadeMap"*, %"class.blink::CSSPropertyName"* dereferenceable(16), i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  %7 = icmp ult i8 %2, 2
  br i1 %6, label %8, label %41

8:                                                ; preds = %3
  br i1 %7, label %81, label %9

9:                                                ; preds = %8
  %10 = icmp eq i8 %2, 2
  br i1 %10, label %11, label %26

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 6
  %13 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %12, i64 0, i32 0
  %14 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EEPKS5_RKT0_(%"class.WTF::HashTable"* %13, %"class.blink::CSSPropertyName"* dereferenceable(16) %1) #7
  %15 = icmp eq %"struct.WTF::KeyValuePair"* %14, null
  %16 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %12, i64 0, i32 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 6, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 %20
  %22 = select i1 %15, %"struct.WTF::KeyValuePair"* %21, %"struct.WTF::KeyValuePair"* %14
  %23 = icmp eq %"struct.WTF::KeyValuePair"* %22, %21
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 0, i32 1
  %25 = select i1 %23, %"class.blink::CascadePriority"* null, %"class.blink::CascadePriority"* %24
  br label %81

26:                                               ; preds = %9
  %27 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 5
  %28 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %27, i64 0, i32 0
  %29 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EEPKS5_RKT0_(%"class.WTF::HashTable"* %28, %"class.blink::CSSPropertyName"* dereferenceable(16) %1) #7
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %29, null
  %31 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %27, i64 0, i32 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 5, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 %35
  %37 = select i1 %30, %"struct.WTF::KeyValuePair"* %36, %"struct.WTF::KeyValuePair"* %29
  %38 = icmp eq %"struct.WTF::KeyValuePair"* %37, %36
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 0, i32 1
  %40 = select i1 %38, %"class.blink::CascadePriority"* null, %"class.blink::CascadePriority"* %39
  br label %81

41:                                               ; preds = %3
  br i1 %7, label %42, label %55

42:                                               ; preds = %41
  %43 = sext i32 %5 to i64
  %44 = lshr i64 %43, 6
  %45 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 3, i32 0, i32 0, i64 %44
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %43, 63
  %48 = shl i64 1, %47
  %49 = and i64 %46, %48
  %50 = icmp eq i64 %49, 0
  %51 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 3, i32 1, i64 0
  %52 = bitcast i8* %51 to %"class.blink::CascadePriority"*
  %53 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %52, i64 %43
  %54 = select i1 %50, %"class.blink::CascadePriority"* null, %"class.blink::CascadePriority"* %53
  br label %81

55:                                               ; preds = %41
  %56 = icmp eq i8 %2, 2
  %57 = sext i32 %5 to i64
  %58 = lshr i64 %57, 6
  br i1 %56, label %59, label %70

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 4, i32 0, i32 0, i64 %58
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %57, 63
  %63 = shl i64 1, %62
  %64 = and i64 %61, %63
  %65 = icmp eq i64 %64, 0
  %66 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 4, i32 1, i64 0
  %67 = bitcast i8* %66 to %"class.blink::CascadePriority"*
  %68 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %67, i64 %57
  %69 = select i1 %65, %"class.blink::CascadePriority"* null, %"class.blink::CascadePriority"* %68
  br label %81

70:                                               ; preds = %55
  %71 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 2, i32 0, i32 0, i64 %58
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %57, 63
  %74 = shl i64 1, %73
  %75 = and i64 %72, %74
  %76 = icmp eq i64 %75, 0
  %77 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 2, i32 1, i64 0
  %78 = bitcast i8* %77 to %"class.blink::CascadePriority"*
  %79 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %78, i64 %57
  %80 = select i1 %76, %"class.blink::CascadePriority"* null, %"class.blink::CascadePriority"* %79
  br label %81

81:                                               ; preds = %8, %70, %59, %42, %26, %11
  %82 = phi %"class.blink::CascadePriority"* [ %25, %11 ], [ %40, %26 ], [ %54, %42 ], [ %69, %59 ], [ %80, %70 ], [ null, %8 ]
  ret %"class.blink::CascadePriority"* %82
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10CascadeMap3AddERKNS_15CSSPropertyNameENS_15CascadePriorityE(%"class.blink::CascadeMap"*, %"class.blink::CSSPropertyName"* dereferenceable(16), i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CascadePriority", align 8
  %5 = alloca %"class.blink::CascadePriority", align 8
  %6 = lshr i64 %2, 55
  %7 = shl i64 %6, 63
  %8 = ashr exact i64 %7, 63
  %9 = and i64 %8, 15
  %10 = lshr i64 %2, 52
  %11 = xor i64 %9, %10
  %12 = trunc i64 %11 to i8
  %13 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %58

16:                                               ; preds = %3
  %17 = icmp ult i8 %12, 3
  br i1 %17, label %18, label %38

18:                                               ; preds = %16
  %19 = bitcast %"class.blink::CascadePriority"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %4, i64 0, i32 0
  store i64 %2, i64* %20, align 8
  %21 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 6, i32 0
  %22 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS2_RS4_EENS_18HashTableAddResultISG_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %21, %"class.blink::CSSPropertyName"* dereferenceable(16) %1, %"class.blink::CascadePriority"* nonnull dereferenceable(8) %4) #7
  %23 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %22, 0
  %24 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %22, 1
  %25 = and i8 %24, 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %18
  %28 = load i64, i64* %20, align 8
  br label %34

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 1, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = load i64, i64* %20, align 8
  %33 = icmp ult i64 %31, %32
  br i1 %33, label %34, label %37

34:                                               ; preds = %29, %27
  %35 = phi i64 [ %28, %27 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 1, i32 0
  store i64 %35, i64* %36, align 8
  br label %37

37:                                               ; preds = %29, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  br label %38

38:                                               ; preds = %37, %16
  %39 = bitcast %"class.blink::CascadePriority"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  %40 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %5, i64 0, i32 0
  store i64 %2, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 5, i32 0
  %42 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS2_RS4_EENS_18HashTableAddResultISG_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %41, %"class.blink::CSSPropertyName"* dereferenceable(16) %1, %"class.blink::CascadePriority"* nonnull dereferenceable(8) %5) #7
  %43 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %42, 0
  %44 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %42, 1
  %45 = and i8 %44, 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %38
  %48 = load i64, i64* %40, align 8
  br label %54

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 1, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = load i64, i64* %40, align 8
  %53 = icmp ult i64 %51, %52
  br i1 %53, label %54, label %57

54:                                               ; preds = %49, %47
  %55 = phi i64 [ %48, %47 ], [ %52, %49 ]
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 1, i32 0
  store i64 %55, i64* %56, align 8
  br label %57

57:                                               ; preds = %49, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  br label %135

58:                                               ; preds = %3
  %59 = add i32 %14, -2
  %60 = icmp ult i32 %59, 26
  br i1 %60, label %61, label %67

61:                                               ; preds = %58
  %62 = sext i32 %14 to i64
  %63 = shl i64 1, %62
  %64 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = or i64 %65, %63
  store i64 %66, i64* %64, align 8
  br label %67

67:                                               ; preds = %61, %58
  %68 = trunc i64 %6 to i8
  %69 = and i8 %68, 1
  %70 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 1
  %71 = load i8, i8* %70, align 8, !range !2
  %72 = or i8 %71, %69
  store i8 %72, i8* %70, align 8
  %73 = icmp ult i8 %12, 2
  br i1 %73, label %74, label %93

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 3, i32 1, i64 0
  %76 = bitcast i8* %75 to %"class.blink::CascadePriority"*
  %77 = sext i32 %14 to i64
  %78 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %76, i64 %77
  %79 = lshr i64 %77, 6
  %80 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 3, i32 0, i32 0, i64 %79
  %81 = load i64, i64* %80, align 8
  %82 = and i64 %77, 63
  %83 = shl i64 1, %82
  %84 = and i64 %81, %83
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %90, label %86

86:                                               ; preds = %74
  %87 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %78, i64 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = icmp ult i64 %88, %2
  br i1 %89, label %90, label %99

90:                                               ; preds = %86, %74
  %91 = or i64 %81, %83
  store i64 %91, i64* %80, align 8
  %92 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %78, i64 0, i32 0
  store i64 %2, i64* %92, align 8
  br label %99

93:                                               ; preds = %67
  %94 = icmp eq i8 %12, 2
  %95 = sext i32 %14 to i64
  %96 = lshr i64 %95, 6
  %97 = and i64 %95, 63
  %98 = shl i64 1, %97
  br i1 %94, label %99, label %117

99:                                               ; preds = %93, %86, %90
  %100 = phi i64 [ %83, %86 ], [ %83, %90 ], [ %98, %93 ]
  %101 = phi i64 [ %79, %86 ], [ %79, %90 ], [ %96, %93 ]
  %102 = phi i64 [ %77, %86 ], [ %77, %90 ], [ %95, %93 ]
  %103 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 4, i32 1, i64 0
  %104 = bitcast i8* %103 to %"class.blink::CascadePriority"*
  %105 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %104, i64 %102
  %106 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 4, i32 0, i32 0, i64 %101
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, %100
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %99
  %111 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %105, i64 0, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = icmp ult i64 %112, %2
  br i1 %113, label %114, label %117

114:                                              ; preds = %110, %99
  %115 = or i64 %107, %100
  store i64 %115, i64* %106, align 8
  %116 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %105, i64 0, i32 0
  store i64 %2, i64* %116, align 8
  br label %117

117:                                              ; preds = %93, %114, %110
  %118 = phi i64 [ %100, %114 ], [ %100, %110 ], [ %98, %93 ]
  %119 = phi i64 [ %101, %114 ], [ %101, %110 ], [ %96, %93 ]
  %120 = phi i64 [ %102, %114 ], [ %102, %110 ], [ %95, %93 ]
  %121 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 2, i32 1, i64 0
  %122 = bitcast i8* %121 to %"class.blink::CascadePriority"*
  %123 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %122, i64 %120
  %124 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 2, i32 0, i32 0, i64 %119
  %125 = load i64, i64* %124, align 8
  %126 = and i64 %125, %118
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %132, label %128

128:                                              ; preds = %117
  %129 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %123, i64 0, i32 0
  %130 = load i64, i64* %129, align 8
  %131 = icmp ult i64 %130, %2
  br i1 %131, label %132, label %135

132:                                              ; preds = %128, %117
  %133 = or i64 %125, %118
  store i64 %133, i64* %124, align 8
  %134 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %123, i64 0, i32 0
  store i64 %2, i64* %134, align 8
  br label %135

135:                                              ; preds = %132, %128, %57
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10CascadeMap5ResetEv(%"class.blink::CascadeMap"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 2, i32 0
  %5 = bitcast %"class.blink::CSSBitsetBase"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 80, i1 false) #7
  %6 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 3, i32 0
  %7 = bitcast %"class.blink::CSSBitsetBase"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 80, i1 false) #7
  %8 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 4, i32 0
  %9 = bitcast %"class.blink::CSSBitsetBase"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 80, i1 false) #7
  %10 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 5
  %11 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %10, i64 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = icmp eq %"struct.WTF::KeyValuePair"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 5, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  tail call void @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS5_j(%"struct.WTF::KeyValuePair"* nonnull %12, i32 %16) #7
  %17 = bitcast %"class.WTF::HashMap"* %10 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  store i32 0, i32* %15, align 8
  %18 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 5, i32 0, i32 2
  store i32 0, i32* %18, align 4
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 6
  %21 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %20, i64 0, i32 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %21, align 8
  %23 = icmp eq %"struct.WTF::KeyValuePair"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 6, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  tail call void @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS5_j(%"struct.WTF::KeyValuePair"* nonnull %22, i32 %26) #7
  %27 = bitcast %"class.WTF::HashMap"* %20 to i64*
  store atomic i64 0, i64* %27 monotonic, align 8
  store i32 0, i32* %25, align 8
  %28 = getelementptr inbounds %"class.blink::CascadeMap", %"class.blink::CascadeMap"* %0, i64 0, i32 6, i32 0, i32 2
  store i32 0, i32* %28, align 4
  br label %29

29:                                               ; preds = %19, %24
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SE_SF_EERKS2_EEPKS5_RKT0_(%"class.WTF::HashTable"*, %"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.blink::CSSPropertyName", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %64, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = tail call i32 @_ZNK5blink15CSSPropertyName7GetHashEv(%"class.blink::CSSPropertyName"* %1) #7
  %13 = and i32 %12, %10
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %14
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 0
  %17 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %16, %"class.blink::CSSPropertyName"* dereferenceable(16) %1) #7
  br i1 %17, label %64, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.blink::CSSPropertyName"* %3 to i8*
  %20 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = xor i32 %12, -1
  %23 = lshr i32 %12, 23
  %24 = add i32 %23, %22
  %25 = shl i32 %24, 12
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 7
  %28 = xor i32 %27, %26
  %29 = shl i32 %28, 2
  %30 = xor i32 %29, %28
  %31 = lshr i32 %30, 20
  %32 = xor i32 %31, %30
  %33 = or i32 %32, 1
  %34 = zext i32 %33 to i64
  br label %35

35:                                               ; preds = %18, %56
  %36 = phi %"class.blink::CSSPropertyName"* [ %16, %18 ], [ %62, %56 ]
  %37 = phi i64 [ %14, %18 ], [ %60, %56 ]
  %38 = phi i64 [ 0, %18 ], [ %58, %56 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #7
  store i32 -1, i32* %20, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %21, align 8
  %39 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %36, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %3) #7
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #7
  br label %55

55:                                               ; preds = %35, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #7
  br i1 %39, label %64, label %56

56:                                               ; preds = %55
  %57 = icmp eq i64 %38, 0
  %58 = select i1 %57, i64 %34, i64 %38
  %59 = add i64 %58, %37
  %60 = and i64 %59, %11
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 0, i32 0
  %63 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %62, %"class.blink::CSSPropertyName"* dereferenceable(16) %1) #7
  br i1 %63, label %64, label %35

64:                                               ; preds = %56, %55, %7, %2
  %65 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %15, %7 ], [ %61, %56 ], [ null, %55 ]
  ret %"struct.WTF::KeyValuePair"* %65
}

declare i32 @_ZNK5blink15CSSPropertyName7GetHashEv(%"class.blink::CSSPropertyName"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"*, %"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EEPKS5_RKT0_(%"class.WTF::HashTable"*, %"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.blink::CSSPropertyName", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %64, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = tail call i32 @_ZNK5blink15CSSPropertyName7GetHashEv(%"class.blink::CSSPropertyName"* %1) #7
  %13 = and i32 %12, %10
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %14
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 0
  %17 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %16, %"class.blink::CSSPropertyName"* dereferenceable(16) %1) #7
  br i1 %17, label %64, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.blink::CSSPropertyName"* %3 to i8*
  %20 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = xor i32 %12, -1
  %23 = lshr i32 %12, 23
  %24 = add i32 %23, %22
  %25 = shl i32 %24, 12
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 7
  %28 = xor i32 %27, %26
  %29 = shl i32 %28, 2
  %30 = xor i32 %29, %28
  %31 = lshr i32 %30, 20
  %32 = xor i32 %31, %30
  %33 = or i32 %32, 1
  %34 = zext i32 %33 to i64
  br label %35

35:                                               ; preds = %18, %56
  %36 = phi %"class.blink::CSSPropertyName"* [ %16, %18 ], [ %62, %56 ]
  %37 = phi i64 [ %14, %18 ], [ %60, %56 ]
  %38 = phi i64 [ 0, %18 ], [ %58, %56 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #7
  store i32 -1, i32* %20, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %21, align 8
  %39 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %36, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %3) #7
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #7
  br label %55

55:                                               ; preds = %35, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #7
  br i1 %39, label %64, label %56

56:                                               ; preds = %55
  %57 = icmp eq i64 %38, 0
  %58 = select i1 %57, i64 %34, i64 %38
  %59 = add i64 %58, %37
  %60 = and i64 %59, %11
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 0, i32 0
  %63 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %62, %"class.blink::CSSPropertyName"* dereferenceable(16) %1) #7
  br i1 %63, label %64, label %35

64:                                               ; preds = %56, %55, %7, %2
  %65 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %15, %7 ], [ %61, %56 ], [ null, %55 ]
  ret %"struct.WTF::KeyValuePair"* %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS2_RS4_EENS_18HashTableAddResultISG_S5_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::CSSPropertyName"* dereferenceable(16), %"class.blink::CascadePriority"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::CSSPropertyName", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = tail call i32 @_ZNK5blink15CSSPropertyName7GetHashEv(%"class.blink::CSSPropertyName"* %1) #7
  %18 = and i32 %17, %15
  %19 = zext i32 %18 to i64
  %20 = bitcast %"class.blink::CSSPropertyName"* %4 to i8*
  %21 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = xor i32 %17, -1
  %24 = lshr i32 %17, 23
  %25 = add i32 %24, %23
  %26 = shl i32 %25, 12
  %27 = xor i32 %26, %25
  %28 = lshr i32 %27, 7
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 2
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 20
  %33 = xor i32 %32, %31
  %34 = or i32 %33, 1
  %35 = zext i32 %34 to i64
  br label %36

36:                                               ; preds = %98, %11
  %37 = phi i64 [ 0, %11 ], [ %102, %98 ]
  %38 = phi i64 [ %19, %11 ], [ %104, %98 ]
  %39 = phi %"struct.WTF::KeyValuePair"* [ null, %11 ], [ %100, %98 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %38
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #7
  store i32 -1, i32* %21, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %42 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %41, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %4) #7
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #7
  br label %58

58:                                               ; preds = %36, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #7
  br i1 %42, label %105, label %59

59:                                               ; preds = %58
  %60 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %41, %"class.blink::CSSPropertyName"* dereferenceable(16) %1) #7
  br i1 %60, label %177, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %38, i32 0, i32 1, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %84, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %86

74:                                               ; preds = %67
  %75 = zext i32 %73 to i33
  %76 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %75, i33 1) #7
  %77 = extractvalue { i33, i1 } %76, 1
  %78 = extractvalue { i33, i1 } %76, 0
  %79 = icmp slt i33 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %82, !prof !3

81:                                               ; preds = %74
  call void @llvm.trap() #7
  unreachable

82:                                               ; preds = %74
  %83 = trunc i33 %78 to i32
  store i32 %83, i32* %72, align 4
  br label %86

84:                                               ; preds = %61
  %85 = icmp eq i32 %63, -2
  br label %98

86:                                               ; preds = %82, %67
  %87 = phi i32 [ %83, %82 ], [ %73, %67 ]
  %88 = icmp eq i32 %63, -2
  %89 = load atomic i32, i32* %68 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %86
  %93 = add i32 %87, -1
  store i32 %93, i32* %72, align 4
  br label %94

94:                                               ; preds = %92, %86
  %95 = phi i32 [ %93, %92 ], [ %87, %86 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #7
  br label %98

98:                                               ; preds = %84, %94, %97
  %99 = phi i1 [ %85, %84 ], [ %88, %94 ], [ %88, %97 ]
  %100 = select i1 %99, %"struct.WTF::KeyValuePair"* %40, %"struct.WTF::KeyValuePair"* %39
  %101 = icmp eq i64 %37, 0
  %102 = select i1 %101, i64 %35, i64 %37
  %103 = add i64 %102, %38
  %104 = and i64 %103, %16
  br label %36

105:                                              ; preds = %58
  %106 = icmp eq %"struct.WTF::KeyValuePair"* %39, null
  br i1 %106, label %117, label %107

107:                                              ; preds = %105
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0, i32 0
  store i32 -1, i32* %108, align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0, i32 1
  %110 = bitcast %"class.WTF::AtomicString"* %109 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 16, i1 false) #7
  %111 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, 2147483647
  %114 = and i32 %113, 2147483647
  %115 = and i32 %112, -2147483648
  %116 = or i32 %114, %115
  store i32 %116, i32* %111, align 8
  br label %117

117:                                              ; preds = %105, %107
  %118 = phi %"struct.WTF::KeyValuePair"* [ %39, %107 ], [ %40, %105 ]
  %119 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %1, i64 0, i32 0
  %120 = load i32, i32* %119, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %118, i64 0, i32 0, i32 0
  store i32 %120, i32* %121, align 8
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %118, i64 0, i32 0, i32 1
  %123 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %143, label %126

126:                                              ; preds = %117
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %143

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i33
  %135 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %134, i33 1) #7
  %136 = extractvalue { i33, i1 } %135, 1
  %137 = extractvalue { i33, i1 } %135, 0
  %138 = icmp slt i33 %137, 0
  %139 = or i1 %136, %138
  br i1 %139, label %140, label %141, !prof !3

140:                                              ; preds = %131
  call void @llvm.trap() #7
  unreachable

141:                                              ; preds = %131
  %142 = trunc i33 %137 to i32
  store i32 %142, i32* %132, align 4
  br label %143

143:                                              ; preds = %141, %126, %117
  %144 = ptrtoint %"class.WTF::StringImpl"* %124 to i64
  %145 = bitcast %"class.WTF::AtomicString"* %122 to i64*
  %146 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %122, i64 0, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  store i64 %144, i64* %145, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %143
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #7
  br label %162

162:                                              ; preds = %143, %158, %161
  %163 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %2, i64 0, i32 0
  %164 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %118, i64 0, i32 1, i32 0
  %165 = load i64, i64* %163, align 8
  store i64 %165, i64* %164, align 8
  %166 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %167 = load i32, i32* %166, align 4
  %168 = add i32 %167, 1
  store i32 %168, i32* %166, align 4
  %169 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %170 = load i32, i32* %169, align 8
  %171 = add i32 %170, %168
  %172 = shl i32 %171, 1
  %173 = load i32, i32* %13, align 8
  %174 = icmp ult i32 %172, %173
  br i1 %174, label %177, label %175

175:                                              ; preds = %162
  %176 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %118)
  br label %177

177:                                              ; preds = %59, %162, %175
  %178 = phi i8 [ 1, %162 ], [ 1, %175 ], [ 0, %59 ]
  %179 = phi %"struct.WTF::KeyValuePair"* [ %118, %162 ], [ %176, %175 ], [ %40, %59 ]
  %180 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %179, 0
  %181 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %180, i8 %178, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %181
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #7
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #7
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #7
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_15CascadePriorityEEEEEPKcv, i64 0, i64 0)) #7
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 0, i32 0
  store i32 -1, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 0, i32 1
  %49 = bitcast %"class.WTF::AtomicString"* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #7
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 0, i32 0
  store i32 -1, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 0, i32 1
  %53 = bitcast %"class.WTF::AtomicString"* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #7
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 0, i32 0
  store i32 -1, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 0, i32 1
  %57 = bitcast %"class.WTF::AtomicString"* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #7
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 0, i32 0
  store i32 -1, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 0, i32 1
  %61 = bitcast %"class.WTF::AtomicString"* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #7
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 0, i32 0
  store i32 -1, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 0, i32 1
  %73 = bitcast %"class.WTF::AtomicString"* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 16, i1 false) #7
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !4

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS5_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #7
  ret %"struct.WTF::KeyValuePair"* %78
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS5_jSH_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %36

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %22

19:                                               ; preds = %82
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %21 = load i64, i64* %20, align 8
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi i64* [ %18, %16 ], [ %20, %19 ]
  %24 = phi i64 [ %17, %16 ], [ %21, %19 ]
  %25 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %83, %19 ]
  %26 = phi i32 [ 0, %16 ], [ %84, %19 ]
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  store atomic i64 %24, i64* %27 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %28, i64* %23, align 8
  store i32 %26, i32* %8, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %22
  %31 = inttoptr i64 %28 to %"struct.WTF::KeyValuePair"*
  call void @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS5_j(%"struct.WTF::KeyValuePair"* nonnull %31, i32 %26) #7
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %32

32:                                               ; preds = %22, %30
  %33 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, -2147483648
  store i32 %35, i32* %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  ret %"struct.WTF::KeyValuePair"* %25

36:                                               ; preds = %4, %82
  %37 = phi %"struct.WTF::KeyValuePair"* [ %83, %82 ], [ null, %4 ]
  %38 = phi i32 [ %84, %82 ], [ 0, %4 ]
  %39 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %40 = zext i32 %38 to i64
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 %40, i32 0
  %42 = call zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS3_EEE28IsEmptyOrDeletedBucketForKeyERKS3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %41) #7
  br i1 %42, label %82, label %43

43:                                               ; preds = %36
  %44 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 %40
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 0
  %47 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EENSt3__14pairIPS5_bEERKT0_(%"class.WTF::HashTable"* nonnull %5, %"class.blink::CSSPropertyName"* dereferenceable(16) %46) #7
  %48 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %47, 0
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #7
  br label %65

65:                                               ; preds = %43, %61, %64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 8
  store i32 %68, i32* %66, align 8
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 0, i32 0, i32 1
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 %40, i32 0, i32 1
  %71 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.WTF::AtomicString"* %70 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.WTF::AtomicString"* %69 to i64*
  store i64 %73, i64* %74, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %71, align 8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 %40, i32 1, i32 0
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 0, i32 1, i32 0
  %77 = load i64, i64* %75, align 8
  store i64 %77, i64* %76, align 8
  %78 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %78, i64 %40
  %80 = icmp eq %"struct.WTF::KeyValuePair"* %79, %3
  %81 = select i1 %80, %"struct.WTF::KeyValuePair"* %48, %"struct.WTF::KeyValuePair"* %37
  br label %82

82:                                               ; preds = %36, %65
  %83 = phi %"struct.WTF::KeyValuePair"* [ %37, %36 ], [ %81, %65 ]
  %84 = add i32 %38, 1
  %85 = load i32, i32* %12, align 8
  %86 = icmp eq i32 %84, %85
  br i1 %86, label %19, label %36
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS3_EEE28IsEmptyOrDeletedBucketForKeyERKS3_(%"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::CSSPropertyName", align 8
  %3 = bitcast %"class.blink::CSSPropertyName"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #7
  %4 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %2, i64 0, i32 0
  store i32 -1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %6 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %0, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %2) #7
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #7
  br label %22

22:                                               ; preds = %1, %18, %21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #7
  br i1 %6, label %60, label %23

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %0, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %48

36:                                               ; preds = %29
  %37 = zext i32 %35 to i33
  %38 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #7
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !3

43:                                               ; preds = %36
  call void @llvm.trap() #7
  unreachable

44:                                               ; preds = %36
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %34, align 4
  br label %48

46:                                               ; preds = %23
  %47 = icmp eq i32 %25, -2
  br label %60

48:                                               ; preds = %44, %29
  %49 = phi i32 [ %45, %44 ], [ %35, %29 ]
  %50 = icmp eq i32 %25, -2
  %51 = load atomic i32, i32* %30 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = add i32 %49, -1
  store i32 %55, i32* %34, align 4
  br label %56

56:                                               ; preds = %54, %48
  %57 = phi i32 [ %55, %54 ], [ %49, %48 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %60

60:                                               ; preds = %59, %56, %46, %22
  %61 = phi i1 [ true, %22 ], [ %47, %46 ], [ %50, %56 ], [ %50, %59 ]
  ret i1 %61
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EENSt3__14pairIPS5_bEERKT0_(%"class.WTF::HashTable"*, %"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.blink::CSSPropertyName", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = tail call i32 @_ZNK5blink15CSSPropertyName7GetHashEv(%"class.blink::CSSPropertyName"* %1) #7
  %11 = and i32 %10, %8
  %12 = zext i32 %11 to i64
  %13 = bitcast %"class.blink::CSSPropertyName"* %3 to i8*
  %14 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = xor i32 %10, -1
  %17 = lshr i32 %10, 23
  %18 = add i32 %17, %16
  %19 = shl i32 %18, 12
  %20 = xor i32 %19, %18
  %21 = lshr i32 %20, 7
  %22 = xor i32 %21, %20
  %23 = shl i32 %22, 2
  %24 = xor i32 %23, %22
  %25 = lshr i32 %24, 20
  %26 = xor i32 %25, %24
  %27 = or i32 %26, 1
  %28 = zext i32 %27 to i64
  br label %29

29:                                               ; preds = %98, %2
  %30 = phi i64 [ 0, %2 ], [ %99, %98 ]
  %31 = phi i64 [ 0, %2 ], [ %101, %98 ]
  %32 = phi i64 [ %12, %2 ], [ %103, %98 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = ptrtoint %"struct.WTF::KeyValuePair"* %33 to i64
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #7
  store i32 -1, i32* %14, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  %36 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %35, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %3) #7
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #7
  br label %52

52:                                               ; preds = %29, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #7
  br i1 %36, label %53, label %57

53:                                               ; preds = %52
  %54 = ptrtoint %"struct.WTF::KeyValuePair"* %33 to i64
  %55 = icmp eq i64 %30, 0
  %56 = select i1 %55, i64 %54, i64 %30
  br label %106

57:                                               ; preds = %52
  %58 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %35, %"class.blink::CSSPropertyName"* dereferenceable(16) %1) #7
  br i1 %58, label %104, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %84

72:                                               ; preds = %65
  %73 = zext i32 %71 to i33
  %74 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #7
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !3

79:                                               ; preds = %72
  call void @llvm.trap() #7
  unreachable

80:                                               ; preds = %72
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %70, align 4
  br label %84

82:                                               ; preds = %59
  %83 = icmp eq i32 %61, -2
  br i1 %83, label %97, label %98

84:                                               ; preds = %80, %65
  %85 = phi i32 [ %81, %80 ], [ %71, %65 ]
  %86 = icmp eq i32 %61, -2
  %87 = load atomic i32, i32* %66 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %84
  %91 = add i32 %85, -1
  store i32 %91, i32* %70, align 4
  br label %92

92:                                               ; preds = %90, %84
  %93 = phi i32 [ %91, %90 ], [ %85, %84 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #7
  br i1 %86, label %97, label %98

96:                                               ; preds = %92
  br i1 %86, label %97, label %98

97:                                               ; preds = %95, %82, %96
  br label %98

98:                                               ; preds = %95, %82, %96, %97
  %99 = phi i64 [ %30, %95 ], [ %30, %82 ], [ %30, %96 ], [ %34, %97 ]
  %100 = icmp eq i64 %31, 0
  %101 = select i1 %100, i64 %28, i64 %31
  %102 = add i64 %101, %32
  %103 = and i64 %102, %9
  br label %29

104:                                              ; preds = %57
  %105 = ptrtoint %"struct.WTF::KeyValuePair"* %33 to i64
  br label %106

106:                                              ; preds = %104, %53
  %107 = phi i64 [ %56, %53 ], [ %105, %104 ]
  %108 = phi i8 [ 0, %53 ], [ 1, %104 ]
  %109 = inttoptr i64 %107 to %"struct.WTF::KeyValuePair"*
  %110 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %109, 0
  %111 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %110, i8 %108, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %111
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS4_EEEESC_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS5_j(%"struct.WTF::KeyValuePair"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %61, %2
  %7 = bitcast %"struct.WTF::KeyValuePair"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #7
  ret void

8:                                                ; preds = %61, %4
  %9 = phi i64 [ 0, %4 ], [ %62, %61 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %9, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %9, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %61, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %32

22:                                               ; preds = %15
  %23 = zext i32 %21 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #7
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %22
  tail call void @llvm.trap() #7
  unreachable

30:                                               ; preds = %22
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %20, align 4
  br label %32

32:                                               ; preds = %30, %15
  %33 = phi i32 [ %31, %30 ], [ %21, %15 ]
  %34 = icmp eq i32 %11, -2
  %35 = load atomic i32, i32* %16 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = add i32 %33, -1
  store i32 %39, i32* %20, align 4
  br label %40

40:                                               ; preds = %38, %32
  %41 = phi i32 [ %39, %38 ], [ %33, %32 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #7
  br i1 %34, label %61, label %45

44:                                               ; preds = %40
  br i1 %34, label %61, label %45

45:                                               ; preds = %43, %44
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #7
  br label %61

61:                                               ; preds = %8, %60, %57, %45, %43, %44
  %62 = add nuw nsw i64 %9, 1
  %63 = icmp eq i64 %62, %5
  br i1 %63, label %6, label %8
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
