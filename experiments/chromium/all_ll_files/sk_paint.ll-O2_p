; ModuleID = '../../third_party/skia/src/c/sk_paint.cpp'
source_filename = "../../third_party/skia/src/c/sk_paint.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.anon.5 = type { i32, i32 }
%struct.anon.6 = type { i32, i8 }
%struct.sk_paint_t = type opaque
%class.SkPaint = type <{ %class.sk_sp, %class.sk_sp.0, %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.0 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.2 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.3 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.4 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%struct.sk_shader_t = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%struct.sk_maskfilter_t = type opaque

@_ZL21g_sk_stroke_cap_t_map = internal unnamed_addr constant [3 x %struct.anon.5] [%struct.anon.5 zeroinitializer, %struct.anon.5 { i32 1, i32 1 }, %struct.anon.5 { i32 2, i32 2 }], align 16
@_ZL22g_sk_stroke_join_t_map = internal unnamed_addr constant [3 x %struct.anon.6] [%struct.anon.6 zeroinitializer, %struct.anon.6 { i32 1, i8 1 }, %struct.anon.6 { i32 2, i8 2 }], align 16

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %struct.sk_paint_t* @sk_paint_new() local_unnamed_addr #0 {
  %1 = tail call i8* @_Znwm(i64 72) #8
  %2 = bitcast i8* %1 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %2) #9
  %3 = bitcast i8* %1 to %struct.sk_paint_t*
  ret %struct.sk_paint_t* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_paint_delete(%struct.sk_paint_t*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.sk_paint_t* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sk_paint_t* %0 to %class.SkPaint*
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %4) #9
  %5 = bitcast %struct.sk_paint_t* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #8
  br label %6

6:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @sk_paint_is_antialias(%struct.sk_paint_t* nocapture readonly) local_unnamed_addr #5 {
  %2 = bitcast %struct.sk_paint_t* %0 to %class.SkPaint*
  %3 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp ne i32 %5, 0
  ret i1 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @sk_paint_set_antialias(%struct.sk_paint_t* nocapture, i1 zeroext) local_unnamed_addr #6 {
  %3 = bitcast %struct.sk_paint_t* %0 to %class.SkPaint*
  %4 = zext i1 %1 to i32
  %5 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %3, i64 0, i32 8, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, -2
  %8 = or i32 %7, %4
  store i32 %8, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sk_paint_get_color(%struct.sk_paint_t*) local_unnamed_addr #0 {
  %2 = bitcast %struct.sk_paint_t* %0 to %class.SkPaint*
  %3 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 5
  %4 = tail call i32 @_ZNK8SkRGBA4fIL11SkAlphaType3EE9toSkColorEv(%struct.SkRGBA4f* %3) #9
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_paint_set_color(%struct.sk_paint_t*, i32) local_unnamed_addr #0 {
  %3 = bitcast %struct.sk_paint_t* %0 to %class.SkPaint*
  tail call void @_ZN7SkPaint8setColorEj(%class.SkPaint* %3, i32 %1) #9
  ret void
}

declare void @_ZN7SkPaint8setColorEj(%class.SkPaint*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_paint_set_shader(%struct.sk_paint_t*, %struct.sk_shader_t*) local_unnamed_addr #0 {
  %3 = alloca %class.sk_sp.0, align 8
  %4 = bitcast %struct.sk_paint_t* %0 to %class.SkPaint*
  %5 = icmp eq %struct.sk_shader_t* %1, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.sk_shader_t* %1 to %class.SkShader*
  %8 = getelementptr inbounds %class.SkShader, %class.SkShader* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic, !noalias !2
  br label %10

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds %class.sk_sp.0, %class.sk_sp.0* %3, i64 0, i32 0
  %12 = bitcast %class.sk_sp.0* %3 to %struct.sk_shader_t**
  store %struct.sk_shader_t* %1, %struct.sk_shader_t** %12, align 8, !alias.scope !2
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* %4, %class.sk_sp.0* nonnull %3) #9
  %13 = load %class.SkShader*, %class.SkShader** %11, align 8
  %14 = icmp eq %class.SkShader* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.SkShader, %class.SkShader* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %class.SkShader* %13 to %class.SkRefCntBase*
  %21 = bitcast %class.SkShader* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  call void %24(%class.SkRefCntBase* nonnull %20) #9
  br label %25

25:                                               ; preds = %10, %15, %19
  ret void
}

declare void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint*, %class.sk_sp.0*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_paint_set_maskfilter(%struct.sk_paint_t*, %struct.sk_maskfilter_t*) local_unnamed_addr #0 {
  %3 = alloca %class.sk_sp.2, align 8
  %4 = bitcast %struct.sk_paint_t* %0 to %class.SkPaint*
  %5 = icmp eq %struct.sk_maskfilter_t* %1, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.sk_maskfilter_t* %1 to %class.SkMaskFilter*
  %8 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic, !noalias !5
  br label %10

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %3, i64 0, i32 0
  %12 = bitcast %class.sk_sp.2* %3 to %struct.sk_maskfilter_t**
  store %struct.sk_maskfilter_t* %1, %struct.sk_maskfilter_t** %12, align 8, !alias.scope !5
  call void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint* %4, %class.sk_sp.2* nonnull %3) #9
  %13 = load %class.SkMaskFilter*, %class.SkMaskFilter** %11, align 8
  %14 = icmp eq %class.SkMaskFilter* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %class.SkMaskFilter* %13 to %class.SkRefCntBase*
  %21 = bitcast %class.SkMaskFilter* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  call void %24(%class.SkRefCntBase* nonnull %20) #9
  br label %25

25:                                               ; preds = %10, %15, %19
  ret void
}

declare void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint*, %class.sk_sp.2*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @sk_paint_is_stroke(%struct.sk_paint_t* nocapture readonly) local_unnamed_addr #5 {
  %2 = bitcast %struct.sk_paint_t* %0 to %class.SkPaint*
  %3 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 192
  %6 = icmp ne i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_paint_set_stroke(%struct.sk_paint_t*, i1 zeroext) local_unnamed_addr #0 {
  %3 = bitcast %struct.sk_paint_t* %0 to %class.SkPaint*
  %4 = zext i1 %1 to i8
  tail call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* %3, i8 zeroext %4) #9
  ret void
}

declare void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @sk_paint_get_stroke_width(%struct.sk_paint_t* nocapture readonly) local_unnamed_addr #5 {
  %2 = bitcast %struct.sk_paint_t* %0 to %class.SkPaint*
  %3 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 6
  %4 = load float, float* %3, align 8
  ret float %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_paint_set_stroke_width(%struct.sk_paint_t*, float) local_unnamed_addr #0 {
  %3 = bitcast %struct.sk_paint_t* %0 to %class.SkPaint*
  tail call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* %3, float %1) #9
  ret void
}

declare void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint*, float) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @sk_paint_get_stroke_miter(%struct.sk_paint_t* nocapture readonly) local_unnamed_addr #5 {
  %2 = bitcast %struct.sk_paint_t* %0 to %class.SkPaint*
  %3 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 7
  %4 = load float, float* %3, align 4
  ret float %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_paint_set_stroke_miter(%struct.sk_paint_t*, float) local_unnamed_addr #0 {
  %3 = bitcast %struct.sk_paint_t* %0 to %class.SkPaint*
  tail call void @_ZN7SkPaint14setStrokeMiterEf(%class.SkPaint* %3, float %1) #9
  ret void
}

declare void @_ZN7SkPaint14setStrokeMiterEf(%class.SkPaint*, float) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @sk_paint_get_stroke_cap(%struct.sk_paint_t* nocapture readonly) local_unnamed_addr #7 {
  %2 = bitcast %struct.sk_paint_t* %0 to %class.SkPaint*
  %3 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 12
  %6 = icmp eq i32 %5, 12
  %7 = select i1 %6, i32 -1431655766, i32 0
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_paint_set_stroke_cap(%struct.sk_paint_t*, i32) local_unnamed_addr #0 {
  %3 = icmp ult i32 %1, 3
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds [3 x %struct.anon.5], [3 x %struct.anon.5]* @_ZL21g_sk_stroke_cap_t_map, i64 0, i64 %5, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = bitcast %struct.sk_paint_t* %0 to %class.SkPaint*
  tail call void @_ZN7SkPaint12setStrokeCapENS_3CapE(%class.SkPaint* %8, i32 %7) #9
  br label %9

9:                                                ; preds = %2, %4
  ret void
}

declare void @_ZN7SkPaint12setStrokeCapENS_3CapE(%class.SkPaint*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @sk_paint_get_stroke_join(%struct.sk_paint_t* nocapture readonly) local_unnamed_addr #7 {
  %2 = bitcast %struct.sk_paint_t* %0 to %class.SkPaint*
  %3 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 48
  %6 = icmp eq i32 %5, 48
  %7 = select i1 %6, i32 -1431655766, i32 0
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_paint_set_stroke_join(%struct.sk_paint_t*, i32) local_unnamed_addr #0 {
  %3 = icmp ult i32 %1, 3
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds [3 x %struct.anon.6], [3 x %struct.anon.6]* @_ZL22g_sk_stroke_join_t_map, i64 0, i64 %5, i32 1
  %7 = load i8, i8* %6, align 4
  %8 = bitcast %struct.sk_paint_t* %0 to %class.SkPaint*
  tail call void @_ZN7SkPaint13setStrokeJoinENS_4JoinE(%class.SkPaint* %8, i8 zeroext %7) #9
  br label %9

9:                                                ; preds = %2, %4
  ret void
}

declare void @_ZN7SkPaint13setStrokeJoinENS_4JoinE(%class.SkPaint*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @sk_paint_set_xfermode_mode(%struct.sk_paint_t* nocapture, i32) local_unnamed_addr #6 {
  %3 = icmp ult i32 %1, 29
  br i1 %3, label %4, label %11

4:                                                ; preds = %2
  %5 = shl i32 %1, 10
  %6 = bitcast %struct.sk_paint_t* %0 to %class.SkPaint*
  %7 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %6, i64 0, i32 8, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, -261121
  %10 = or i32 %9, %5
  store i32 %10, i32* %7, align 8
  br label %11

11:                                               ; preds = %2, %4
  ret void
}

declare i32 @_ZNK8SkRGBA4fIL11SkAlphaType3EE9toSkColorEv(%struct.SkRGBA4f*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z9sk_ref_spI8SkShaderE5sk_spIT_EPS2_: argument 0"}
!4 = distinct !{!4, !"_Z9sk_ref_spI8SkShaderE5sk_spIT_EPS2_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_Z9sk_ref_spI12SkMaskFilterE5sk_spIT_EPS2_: argument 0"}
!7 = distinct !{!7, !"_Z9sk_ref_spI12SkMaskFilterE5sk_spIT_EPS2_"}
