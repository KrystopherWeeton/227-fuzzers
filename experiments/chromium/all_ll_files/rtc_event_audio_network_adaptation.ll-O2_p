; ModuleID = '../../third_party/webrtc/logging/rtc_event_log/events/rtc_event_audio_network_adaptation.cc'
source_filename = "../../third_party/webrtc/logging/rtc_event_log/events/rtc_event_audio_network_adaptation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::RtcEventAudioNetworkAdaptation" = type { %"class.webrtc::RtcEvent", %"class.std::__1::unique_ptr" }
%"class.webrtc::RtcEvent" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.webrtc::AudioEncoderRuntimeConfig"* }
%"struct.webrtc::AudioEncoderRuntimeConfig" = type <{ %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.0", %"class.absl::optional.5", %"class.absl::optional.5", [4 x i8], %"class.absl::optional.10", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { float }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { i8 }
%"class.absl::optional.10" = type { %"class.absl::optional_internal::optional_data.11" }
%"class.absl::optional_internal::optional_data.11" = type { %"class.absl::optional_internal::optional_data_base.12" }
%"class.absl::optional_internal::optional_data_base.12" = type { %"class.absl::optional_internal::optional_data_dtor_base.13" }
%"class.absl::optional_internal::optional_data_dtor_base.13" = type { i8, %union.anon.14 }
%union.anon.14 = type { i64 }

$_ZNK6webrtc30RtcEventAudioNetworkAdaptation7GetTypeEv = comdat any

$_ZNK6webrtc30RtcEventAudioNetworkAdaptation13IsConfigEventEv = comdat any

@_ZTVN6webrtc30RtcEventAudioNetworkAdaptationE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::RtcEventAudioNetworkAdaptation"*)* @_ZN6webrtc30RtcEventAudioNetworkAdaptationD2Ev to i8*), i8* bitcast (void (%"class.webrtc::RtcEventAudioNetworkAdaptation"*)* @_ZN6webrtc30RtcEventAudioNetworkAdaptationD0Ev to i8*), i8* bitcast (i32 (%"class.webrtc::RtcEventAudioNetworkAdaptation"*)* @_ZNK6webrtc30RtcEventAudioNetworkAdaptation7GetTypeEv to i8*), i8* bitcast (i1 (%"class.webrtc::RtcEventAudioNetworkAdaptation"*)* @_ZNK6webrtc30RtcEventAudioNetworkAdaptation13IsConfigEventEv to i8*)] }, align 8

@_ZN6webrtc30RtcEventAudioNetworkAdaptationC1ENSt3__110unique_ptrINS_25AudioEncoderRuntimeConfigENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"class.webrtc::RtcEventAudioNetworkAdaptation"*, %"struct.webrtc::AudioEncoderRuntimeConfig"*), void (%"class.webrtc::RtcEventAudioNetworkAdaptation"*, %"struct.webrtc::AudioEncoderRuntimeConfig"*)* @_ZN6webrtc30RtcEventAudioNetworkAdaptationC2ENSt3__110unique_ptrINS_25AudioEncoderRuntimeConfigENS1_14default_deleteIS3_EEEE
@_ZN6webrtc30RtcEventAudioNetworkAdaptationC1ERKS0_ = hidden unnamed_addr alias void (%"class.webrtc::RtcEventAudioNetworkAdaptation"*, %"class.webrtc::RtcEventAudioNetworkAdaptation"*), void (%"class.webrtc::RtcEventAudioNetworkAdaptation"*, %"class.webrtc::RtcEventAudioNetworkAdaptation"*)* @_ZN6webrtc30RtcEventAudioNetworkAdaptationC2ERKS0_
@_ZN6webrtc30RtcEventAudioNetworkAdaptationD1Ev = hidden unnamed_addr alias void (%"class.webrtc::RtcEventAudioNetworkAdaptation"*), void (%"class.webrtc::RtcEventAudioNetworkAdaptation"*)* @_ZN6webrtc30RtcEventAudioNetworkAdaptationD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc30RtcEventAudioNetworkAdaptationC2ENSt3__110unique_ptrINS_25AudioEncoderRuntimeConfigENS1_14default_deleteIS3_EEEE(%"class.webrtc::RtcEventAudioNetworkAdaptation"*, %"struct.webrtc::AudioEncoderRuntimeConfig"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"struct.webrtc::AudioEncoderRuntimeConfig"* %1 to i64
  %4 = getelementptr inbounds %"class.webrtc::RtcEventAudioNetworkAdaptation", %"class.webrtc::RtcEventAudioNetworkAdaptation"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc8RtcEventC2Ev(%"class.webrtc::RtcEvent"* %4) #5
  %5 = getelementptr inbounds %"class.webrtc::RtcEventAudioNetworkAdaptation", %"class.webrtc::RtcEventAudioNetworkAdaptation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc30RtcEventAudioNetworkAdaptationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::RtcEventAudioNetworkAdaptation", %"class.webrtc::RtcEventAudioNetworkAdaptation"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %3, i64* %7, align 8
  ret void
}

declare void @_ZN6webrtc8RtcEventC2Ev(%"class.webrtc::RtcEvent"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc30RtcEventAudioNetworkAdaptationC2ERKS0_(%"class.webrtc::RtcEventAudioNetworkAdaptation"* nocapture, %"class.webrtc::RtcEventAudioNetworkAdaptation"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::RtcEventAudioNetworkAdaptation", %"class.webrtc::RtcEventAudioNetworkAdaptation"* %1, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::RtcEventAudioNetworkAdaptation", %"class.webrtc::RtcEventAudioNetworkAdaptation"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.webrtc::RtcEventAudioNetworkAdaptation", %"class.webrtc::RtcEventAudioNetworkAdaptation"* %0, i64 0, i32 0, i32 1
  store i64 %4, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc30RtcEventAudioNetworkAdaptationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.webrtc::RtcEventAudioNetworkAdaptation", %"class.webrtc::RtcEventAudioNetworkAdaptation"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.webrtc::RtcEventAudioNetworkAdaptation", %"class.webrtc::RtcEventAudioNetworkAdaptation"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"struct.webrtc::AudioEncoderRuntimeConfig"*, %"struct.webrtc::AudioEncoderRuntimeConfig"** %8, align 8
  %10 = tail call i8* @_Znwm(i64 56) #6
  %11 = bitcast i8* %10 to %"struct.webrtc::AudioEncoderRuntimeConfig"*
  tail call void @_ZN6webrtc25AudioEncoderRuntimeConfigC1ERKS0_(%"struct.webrtc::AudioEncoderRuntimeConfig"* nonnull %11, %"struct.webrtc::AudioEncoderRuntimeConfig"* dereferenceable(56) %9) #5
  %12 = ptrtoint i8* %10 to i64
  %13 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %12, i64* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc30RtcEventAudioNetworkAdaptationD2Ev(%"class.webrtc::RtcEventAudioNetworkAdaptation"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::RtcEventAudioNetworkAdaptation", %"class.webrtc::RtcEventAudioNetworkAdaptation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc30RtcEventAudioNetworkAdaptationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::RtcEventAudioNetworkAdaptation", %"class.webrtc::RtcEventAudioNetworkAdaptation"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.webrtc::AudioEncoderRuntimeConfig"*, %"struct.webrtc::AudioEncoderRuntimeConfig"** %3, align 8
  store %"struct.webrtc::AudioEncoderRuntimeConfig"* null, %"struct.webrtc::AudioEncoderRuntimeConfig"** %3, align 8
  %5 = icmp eq %"struct.webrtc::AudioEncoderRuntimeConfig"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN6webrtc25AudioEncoderRuntimeConfigD1Ev(%"struct.webrtc::AudioEncoderRuntimeConfig"* nonnull %4) #5
  %7 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc30RtcEventAudioNetworkAdaptationD0Ev(%"class.webrtc::RtcEventAudioNetworkAdaptation"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::RtcEventAudioNetworkAdaptation", %"class.webrtc::RtcEventAudioNetworkAdaptation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc30RtcEventAudioNetworkAdaptationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::RtcEventAudioNetworkAdaptation", %"class.webrtc::RtcEventAudioNetworkAdaptation"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.webrtc::AudioEncoderRuntimeConfig"*, %"struct.webrtc::AudioEncoderRuntimeConfig"** %3, align 8
  store %"struct.webrtc::AudioEncoderRuntimeConfig"* null, %"struct.webrtc::AudioEncoderRuntimeConfig"** %3, align 8
  %5 = icmp eq %"struct.webrtc::AudioEncoderRuntimeConfig"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN6webrtc25AudioEncoderRuntimeConfigD1Ev(%"struct.webrtc::AudioEncoderRuntimeConfig"* nonnull %4) #5
  %7 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.webrtc::RtcEventAudioNetworkAdaptation"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.webrtc::RtcEventAudioNetworkAdaptation"* @_ZNK6webrtc30RtcEventAudioNetworkAdaptation4CopyEv(%"class.webrtc::RtcEventAudioNetworkAdaptation"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #6
  %3 = bitcast i8* %2 to %"class.webrtc::RtcEventAudioNetworkAdaptation"*
  %4 = getelementptr inbounds %"class.webrtc::RtcEventAudioNetworkAdaptation", %"class.webrtc::RtcEventAudioNetworkAdaptation"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = bitcast i8* %2 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to i64*
  store i64 %5, i64* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc30RtcEventAudioNetworkAdaptationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 16
  %10 = getelementptr inbounds %"class.webrtc::RtcEventAudioNetworkAdaptation", %"class.webrtc::RtcEventAudioNetworkAdaptation"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"struct.webrtc::AudioEncoderRuntimeConfig"*, %"struct.webrtc::AudioEncoderRuntimeConfig"** %10, align 8
  %12 = tail call i8* @_Znwm(i64 56) #6
  %13 = bitcast i8* %12 to %"struct.webrtc::AudioEncoderRuntimeConfig"*
  tail call void @_ZN6webrtc25AudioEncoderRuntimeConfigC1ERKS0_(%"struct.webrtc::AudioEncoderRuntimeConfig"* nonnull %13, %"struct.webrtc::AudioEncoderRuntimeConfig"* dereferenceable(56) %11) #5
  %14 = ptrtoint i8* %12 to i64
  %15 = bitcast i8* %9 to i64*
  store i64 %14, i64* %15, align 8
  ret %"class.webrtc::RtcEventAudioNetworkAdaptation"* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6webrtc30RtcEventAudioNetworkAdaptation7GetTypeEv(%"class.webrtc::RtcEventAudioNetworkAdaptation"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6webrtc30RtcEventAudioNetworkAdaptation13IsConfigEventEv(%"class.webrtc::RtcEventAudioNetworkAdaptation"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind
declare void @_ZN6webrtc25AudioEncoderRuntimeConfigD1Ev(%"struct.webrtc::AudioEncoderRuntimeConfig"*) unnamed_addr #4

declare void @_ZN6webrtc25AudioEncoderRuntimeConfigC1ERKS0_(%"struct.webrtc::AudioEncoderRuntimeConfig"*, %"struct.webrtc::AudioEncoderRuntimeConfig"* dereferenceable(56)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
