; ModuleID = 'gen/third_party/blink/public/mojom/indexeddb/indexeddb.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/indexeddb/indexeddb.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::IDBCallbacksAsyncWaiter" = type { %"class.blink::mojom::blink::IDBCallbacks"* }
%"class.blink::mojom::blink::IDBCallbacks" = type { i32 (...)** }
%"class.blink::mojom::blink::IDBDatabaseCallbacksAsyncWaiter" = type { %"class.blink::mojom::blink::IDBDatabaseCallbacks"* }
%"class.blink::mojom::blink::IDBDatabaseCallbacks" = type { i32 (...)** }
%"class.blink::mojom::blink::IDBCursorAsyncWaiter" = type { %"class.blink::mojom::blink::IDBCursor"* }
%"class.blink::mojom::blink::IDBCursor" = type { i32 (...)** }
%"class.blink::mojom::blink::IDBTransactionAsyncWaiter" = type { %"class.blink::mojom::blink::IDBTransaction"* }
%"class.blink::mojom::blink::IDBTransaction" = type { i32 (...)** }
%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkAsyncWaiter" = type { %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* }
%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink" = type { i32 (...)** }
%"class.blink::mojom::blink::IDBDatabaseAsyncWaiter" = type { %"class.blink::mojom::blink::IDBDatabase"* }
%"class.blink::mojom::blink::IDBDatabase" = type { i32 (...)** }
%"class.blink::mojom::blink::IDBFactoryAsyncWaiter" = type { %"class.blink::mojom::blink::IDBFactory"* }
%"class.blink::mojom::blink::IDBFactory" = type { i32 (...)** }
%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting" = type { %"class.blink::mojom::blink::IDBCallbacks" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::IDBNameAndVersion"* }
%"class.blink::mojom::blink::IDBNameAndVersion" = type { %"class.WTF::String", i64 }
%"class.mojo::PendingAssociatedRemote" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"struct.blink::IDBDatabaseMetadata" = type <{ %"class.WTF::String", i64, i64, i64, %"class.WTF::HashMap", i8, [7 x i8] }>
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting" = type { %"class.blink::mojom::blink::IDBDatabaseCallbacks" }
%"class.blink::mojom::blink::IDBCursorInterceptorForTesting" = type { %"class.blink::mojom::blink::IDBCursor" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i32 }
%"class.blink::IDBKey" = type { i32, %"class.WTF::Vector.14", %class.scoped_refptr.19, %"class.WTF::String", double, i64 }
%"class.WTF::Vector.14" = type { %"class.WTF::VectorBuffer.15" }
%"class.WTF::VectorBuffer.15" = type { %"class.WTF::VectorBufferBase.16" }
%"class.WTF::VectorBufferBase.16" = type { %"class.std::__1::unique_ptr.11"*, i32, i32 }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::IDBKey"* }
%class.scoped_refptr.19 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector.20", %"class.WTF::Vector.25" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.20" = type { %"class.WTF::VectorBuffer.21" }
%"class.WTF::VectorBuffer.21" = type { %"class.WTF::VectorBufferBase.22" }
%"class.WTF::VectorBufferBase.22" = type { i8*, i32, i32 }
%"class.WTF::Vector.25" = type { %"class.WTF::VectorBuffer.26" }
%"class.WTF::VectorBuffer.26" = type { %"class.WTF::VectorBufferBase.27" }
%"class.WTF::VectorBufferBase.27" = type { %"class.std::__1::unique_ptr.28"*, i32, i32 }
%"class.std::__1::unique_ptr.28" = type opaque
%"class.mojo::StructPtr.34" = type { %"class.std::__1::unique_ptr.35" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::mojom::blink::IDBCursorResult"* }
%"class.blink::mojom::blink::IDBCursorResult" = type { i32, %"union.blink::mojom::blink::IDBCursorResult::Union_" }
%"union.blink::mojom::blink::IDBCursorResult::Union_" = type { %"class.mojo::StructPtr.38"* }
%"class.mojo::StructPtr.38" = type { %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::mojom::blink::IDBError"* }
%"class.blink::mojom::blink::IDBError" = type { i32, %"class.WTF::String" }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.91, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.84", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.86" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.91 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.92" }>
%"class.base::RefCountedThreadSafe.92" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.93 }
%class.scoped_refptr.93 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.94", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.94" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.95" }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting" = type { %"class.blink::mojom::blink::IDBTransaction" }
%"class.blink::IDBKeyPath" = type { i32, %"class.WTF::String", %"class.WTF::Vector.65" }
%"class.WTF::Vector.65" = type { %"class.WTF::VectorBuffer.66" }
%"class.WTF::VectorBuffer.66" = type { %"class.WTF::VectorBufferBase.67" }
%"class.WTF::VectorBufferBase.67" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::IDBValue" = type { %class.scoped_refptr.19, %"class.WTF::Vector.55", %"class.WTF::Vector.60", %"class.std::__1::unique_ptr.11", %"class.blink::IDBKeyPath", %"class.v8::Isolate"*, i64 }
%"class.WTF::Vector.55" = type { %"class.WTF::VectorBuffer.56" }
%"class.WTF::VectorBuffer.56" = type { %"class.WTF::VectorBufferBase.57" }
%"class.WTF::VectorBufferBase.57" = type { %"class.blink::WebBlobInfo"*, i32, i32 }
%"class.blink::WebBlobInfo" = type opaque
%"class.WTF::Vector.60" = type { %"class.WTF::VectorBuffer.61" }
%"class.WTF::VectorBuffer.61" = type { %"class.WTF::VectorBufferBase.62" }
%"class.WTF::VectorBufferBase.62" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.v8::Isolate" = type { i8 }
%"class.WTF::Vector.104" = type { %"class.WTF::VectorBuffer.105" }
%"class.WTF::VectorBuffer.105" = type { %"class.WTF::VectorBufferBase.106" }
%"class.WTF::VectorBufferBase.106" = type { %"struct.blink::IDBIndexKeys"*, i32, i32 }
%"struct.blink::IDBIndexKeys" = type { i64, %"class.WTF::Vector.14" }
%"class.base::OnceCallback.109" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::Vector.110" = type { %"class.WTF::VectorBuffer.111" }
%"class.WTF::VectorBuffer.111" = type { %"class.WTF::VectorBufferBase.112" }
%"class.WTF::VectorBufferBase.112" = type { %"class.mojo::StructPtr.113"*, i32, i32 }
%"class.mojo::StructPtr.113" = type { %"class.std::__1::unique_ptr.114" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::mojom::blink::IDBPutParams"* }
%"class.blink::mojom::blink::IDBPutParams" = type { %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.11", %"class.WTF::Vector.104" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::IDBValue"* }
%"class.base::OnceCallback.122" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::StructPtr.123" = type { %"class.std::__1::unique_ptr.124" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::mojom::blink::IDBTransactionPutResult"* }
%"class.blink::mojom::blink::IDBTransactionPutResult" = type { i32, %"union.blink::mojom::blink::IDBTransactionPutResult::Union_" }
%"union.blink::mojom::blink::IDBTransactionPutResult::Union_" = type { %"class.mojo::StructPtr.38"* }
%"class.mojo::StructPtr.132" = type { %"class.std::__1::unique_ptr.133" }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::mojom::blink::IDBTransactionPutAllResult"* }
%"class.blink::mojom::blink::IDBTransactionPutAllResult" = type { i32, %"union.blink::mojom::blink::IDBTransactionPutAllResult::Union_" }
%"union.blink::mojom::blink::IDBTransactionPutAllResult::Union_" = type { %"class.mojo::StructPtr.38"* }
%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting" = type { %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink" }
%"class.WTF::Vector.141" = type { %"class.WTF::VectorBuffer.142" }
%"class.WTF::VectorBuffer.142" = type { %"class.WTF::VectorBufferBase.143" }
%"class.WTF::VectorBufferBase.143" = type { %"class.mojo::StructPtr.144"*, i32, i32 }
%"class.mojo::StructPtr.144" = type { %"class.std::__1::unique_ptr.145" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::mojom::blink::IDBReturnValue"* }
%"class.blink::mojom::blink::IDBReturnValue" = type { %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.11", %"class.blink::IDBKeyPath" }
%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting" = type { %"class.blink::mojom::blink::IDBDatabase" }
%"class.mojo::PendingAssociatedReceiver" = type { %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.WTF::Vector.153" = type { %"class.WTF::VectorBuffer.154" }
%"class.WTF::VectorBuffer.154" = type { %"class.WTF::VectorBufferBase.155" }
%"class.WTF::VectorBufferBase.155" = type { i64*, i32, i32 }
%"class.mojo::StructPtr.158" = type { %"class.std::__1::unique_ptr.159" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::mojom::blink::IDBKeyRange"* }
%"class.blink::mojom::blink::IDBKeyRange" = type <{ %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11", i8, i8, [6 x i8] }>
%"class.base::OnceCallback.165" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.166" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.167" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::PendingAssociatedRemote.168" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>
%"class.mojo::StructPtr.170" = type { %"class.std::__1::unique_ptr.171" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::mojom::blink::IDBDatabaseGetResult"* }
%"class.blink::mojom::blink::IDBDatabaseGetResult" = type { i32, %"union.blink::mojom::blink::IDBDatabaseGetResult::Union_" }
%"union.blink::mojom::blink::IDBDatabaseGetResult::Union_" = type { %"class.mojo::StructPtr.38"* }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.179 }
%class.scoped_refptr.179 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.180", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.181, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.180" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.181 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.mojo::StructPtr.184" = type { %"class.std::__1::unique_ptr.185" }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::mojom::blink::IDBDatabaseOpenCursorResult"* }
%"class.blink::mojom::blink::IDBDatabaseOpenCursorResult" = type { i32, %"union.blink::mojom::blink::IDBDatabaseOpenCursorResult::Union_" }
%"union.blink::mojom::blink::IDBDatabaseOpenCursorResult::Union_" = type { %"class.mojo::StructPtr.38"* }
%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting" = type { %"class.blink::mojom::blink::IDBFactory" }
%"class.mojo::PendingAssociatedRemote.202" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>
%"class.base::OnceCallback.204" = type { %"class.base::internal::CallbackBase" }

$_ZN5blink5mojom5blink12IDBCallbacksD2Ev = comdat any

$_ZN5blink5mojom5blink33IDBCallbacksInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom5blink20IDBDatabaseCallbacksD2Ev = comdat any

$_ZN5blink5mojom5blink41IDBDatabaseCallbacksInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom5blink9IDBCursorD2Ev = comdat any

$_ZN5blink5mojom5blink30IDBCursorInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom5blink14IDBTransactionD2Ev = comdat any

$_ZN5blink5mojom5blink35IDBTransactionInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom5blink27IDBDatabaseGetAllResultSinkD2Ev = comdat any

$_ZN5blink5mojom5blink48IDBDatabaseGetAllResultSinkInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom5blink11IDBDatabaseD2Ev = comdat any

$_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom5blink10IDBFactoryD2Ev = comdat any

$_ZN5blink5mojom5blink31IDBFactoryInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [8 x i8] c"Advance\00", align 1
@.str.1 = private unnamed_addr constant [81 x i8] c"gen/third_party/blink/public/mojom/indexeddb/indexeddb.mojom-blink-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"CursorContinue\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"Prefetch\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"Put\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"PutAll\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"Get\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"GetAll\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"OpenCursor\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"AbortTransactionsAndCompactDatabase\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"AbortTransactionsForDatabase\00", align 1
@_ZTVN5blink5mojom5blink33IDBCallbacksInterceptorForTestingE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::IDBCallbacks"*)* @_ZN5blink5mojom5blink12IDBCallbacksD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)* @_ZN5blink5mojom5blink33IDBCallbacksInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*, i32, %"class.WTF::String"*)* @_ZN5blink5mojom5blink33IDBCallbacksInterceptorForTesting5ErrorENS0_12IDBExceptionERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*, %"class.WTF::Vector"*)* @_ZN5blink5mojom5blink33IDBCallbacksInterceptorForTesting27SuccessNamesAndVersionsListEN3WTF6VectorIN4mojo9StructPtrINS1_17IDBNameAndVersionEEELj0ENS3_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*, i64)* @_ZN5blink5mojom5blink33IDBCallbacksInterceptorForTesting7BlockedEl to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*, %"class.mojo::PendingAssociatedRemote"*, i64, i32, %"class.WTF::String"*, %"struct.blink::IDBDatabaseMetadata"*)* @_ZN5blink5mojom5blink33IDBCallbacksInterceptorForTesting13UpgradeNeededEN4mojo23PendingAssociatedRemoteINS1_11IDBDatabaseEEElNS0_11IDBDataLossERKN3WTF6StringERKNS_19IDBDatabaseMetadataE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*, %"class.mojo::PendingAssociatedRemote"*, %"struct.blink::IDBDatabaseMetadata"*)* @_ZN5blink5mojom5blink33IDBCallbacksInterceptorForTesting15SuccessDatabaseEN4mojo23PendingAssociatedRemoteINS1_11IDBDatabaseEEERKNS_19IDBDatabaseMetadataE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*, i64)* @_ZN5blink5mojom5blink33IDBCallbacksInterceptorForTesting14SuccessIntegerEl to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)* @_ZN5blink5mojom5blink33IDBCallbacksInterceptorForTesting7SuccessEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom5blink41IDBDatabaseCallbacksInterceptorForTestingE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*)* @_ZN5blink5mojom5blink20IDBDatabaseCallbacksD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)* @_ZN5blink5mojom5blink41IDBDatabaseCallbacksInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)* @_ZN5blink5mojom5blink41IDBDatabaseCallbacksInterceptorForTesting11ForcedCloseEv to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*, i64, i64)* @_ZN5blink5mojom5blink41IDBDatabaseCallbacksInterceptorForTesting13VersionChangeEll to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*, i64, i32, %"class.WTF::String"*)* @_ZN5blink5mojom5blink41IDBDatabaseCallbacksInterceptorForTesting5AbortElNS0_12IDBExceptionERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*, i64)* @_ZN5blink5mojom5blink41IDBDatabaseCallbacksInterceptorForTesting8CompleteEl to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom5blink30IDBCursorInterceptorForTestingE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::IDBCursor"*)* @_ZN5blink5mojom5blink9IDBCursorD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)* @_ZN5blink5mojom5blink30IDBCursorInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*, i32, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink30IDBCursorInterceptorForTesting7AdvanceEjN4base12OnceCallbackIFvN4mojo9StructPtrINS1_15IDBCursorResultEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink30IDBCursorInterceptorForTesting14CursorContinueENSt3__110unique_ptrINS_6IDBKeyENS3_14default_deleteIS5_EEEES8_N4base12OnceCallbackIFvN4mojo9StructPtrINS1_15IDBCursorResultEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*, i32, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink30IDBCursorInterceptorForTesting8PrefetchEiN4base12OnceCallbackIFvN4mojo9StructPtrINS1_15IDBCursorResultEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*, i32, i32)* @_ZN5blink5mojom5blink30IDBCursorInterceptorForTesting13PrefetchResetEii to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom5blink35IDBTransactionInterceptorForTestingE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::IDBTransaction"*)* @_ZN5blink5mojom5blink14IDBTransactionD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)* @_ZN5blink5mojom5blink35IDBTransactionInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1)* @_ZN5blink5mojom5blink35IDBTransactionInterceptorForTesting17CreateObjectStoreElRKN3WTF6StringERKNS_10IDBKeyPathEb to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*, i64)* @_ZN5blink5mojom5blink35IDBTransactionInterceptorForTesting17DeleteObjectStoreEl to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.WTF::Vector.104"*, %"class.base::OnceCallback.109"*)* @_ZN5blink5mojom5blink35IDBTransactionInterceptorForTesting3PutElNSt3__110unique_ptrINS_8IDBValueENS3_14default_deleteIS5_EEEENS4_INS_6IDBKeyENS6_IS9_EEEENS0_10IDBPutModeEN3WTF6VectorINS_12IDBIndexKeysELj0ENSD_18PartitionAllocatorEEEN4base12OnceCallbackIFvN4mojo9StructPtrINS1_23IDBTransactionPutResultEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*, i64, %"class.WTF::Vector.110"*, %"class.base::OnceCallback.122"*)* @_ZN5blink5mojom5blink35IDBTransactionInterceptorForTesting6PutAllElN3WTF6VectorIN4mojo9StructPtrINS1_12IDBPutParamsEEELj0ENS3_18PartitionAllocatorEEEN4base12OnceCallbackIFvNS6_INS1_26IDBTransactionPutAllResultEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*, i64)* @_ZN5blink5mojom5blink35IDBTransactionInterceptorForTesting6CommitEl to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom5blink48IDBDatabaseGetAllResultSinkInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*)* @_ZN5blink5mojom5blink27IDBDatabaseGetAllResultSinkD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)* @_ZN5blink5mojom5blink48IDBDatabaseGetAllResultSinkInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*, %"class.WTF::Vector.141"*)* @_ZN5blink5mojom5blink48IDBDatabaseGetAllResultSinkInterceptorForTesting13ReceiveValuesEN3WTF6VectorIN4mojo9StructPtrINS1_14IDBReturnValueEEELj0ENS3_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*, %"class.WTF::Vector.14"*)* @_ZN5blink5mojom5blink48IDBDatabaseGetAllResultSinkInterceptorForTesting11ReceiveKeysEN3WTF6VectorINSt3__110unique_ptrINS_6IDBKeyENS5_14default_deleteIS7_EEEELj0ENS3_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*, %"class.mojo::StructPtr.38"*)* @_ZN5blink5mojom5blink48IDBDatabaseGetAllResultSinkInterceptorForTesting7OnErrorEN4mojo9StructPtrINS1_8IDBErrorEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom5blink32IDBDatabaseInterceptorForTestingE = hidden unnamed_addr constant { [22 x i8*] } { [22 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabase"*)* @_ZN5blink5mojom5blink11IDBDatabaseD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)* @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, %"class.WTF::String"*)* @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting17RenameObjectStoreEllRKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, %"class.mojo::PendingAssociatedReceiver"*, i64, %"class.WTF::Vector.153"*, i32, i32)* @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting17CreateTransactionEN4mojo25PendingAssociatedReceiverINS1_14IDBTransactionEEElRKN3WTF6VectorIlLj0ENS7_18PartitionAllocatorEEENS0_18IDBTransactionModeENS0_24IDBTransactionDurabilityE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)* @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting5CloseEv to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)* @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting20VersionChangeIgnoredEv to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, %"class.base::OnceCallback.165"*)* @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting3GetElllN4mojo9StructPtrINS1_11IDBKeyRangeEEEbN4base12OnceCallbackIFvNS4_INS1_20IDBDatabaseGetResultEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, i64, %"class.base::OnceCallback.166"*)* @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting6GetAllElllN4mojo9StructPtrINS1_11IDBKeyRangeEEEblN4base12OnceCallbackIFvNS3_15PendingReceiverINS1_27IDBDatabaseGetAllResultSinkEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, %"class.blink::IDBKey"*, %"class.WTF::Vector.104"*)* @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting12SetIndexKeysEllNSt3__110unique_ptrINS_6IDBKeyENS3_14default_deleteIS5_EEEEN3WTF6VectorINS_12IDBIndexKeysELj0ENS9_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, %"class.WTF::Vector.153"*)* @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting15SetIndexesReadyEllRKN3WTF6VectorIlLj0ENS3_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i32, i1, i32, %"class.base::OnceCallback.167"*)* @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting10OpenCursorElllN4mojo9StructPtrINS1_11IDBKeyRangeEEENS0_18IDBCursorDirectionEbNS0_11IDBTaskTypeEN4base12OnceCallbackIFvNS4_INS1_27IDBDatabaseOpenCursorResultEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, %"class.mojo::PendingAssociatedRemote.168"*)* @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting5CountElllN4mojo9StructPtrINS1_11IDBKeyRangeEEENS3_23PendingAssociatedRemoteINS1_12IDBCallbacksEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, %"class.mojo::StructPtr.158"*, %"class.mojo::PendingAssociatedRemote.168"*)* @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting11DeleteRangeEllN4mojo9StructPtrINS1_11IDBKeyRangeEEENS3_23PendingAssociatedRemoteINS1_12IDBCallbacksEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, %"class.mojo::PendingAssociatedRemote.168"*)* @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting28GetKeyGeneratorCurrentNumberEllN4mojo23PendingAssociatedRemoteINS1_12IDBCallbacksEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, %"class.mojo::PendingAssociatedRemote.168"*)* @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting5ClearEllN4mojo23PendingAssociatedRemoteINS1_12IDBCallbacksEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1, i1)* @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting11CreateIndexElllRKN3WTF6StringERKNS_10IDBKeyPathEbb to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, i64)* @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting11DeleteIndexElll to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, i64, %"class.WTF::String"*)* @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting11RenameIndexElllRKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64)* @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting5AbortEl to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom5blink31IDBFactoryInterceptorForTestingE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::IDBFactory"*)* @_ZN5blink5mojom5blink10IDBFactoryD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)* @_ZN5blink5mojom5blink31IDBFactoryInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*, %"class.mojo::PendingAssociatedRemote.168"*)* @_ZN5blink5mojom5blink31IDBFactoryInterceptorForTesting15GetDatabaseInfoEN4mojo23PendingAssociatedRemoteINS1_12IDBCallbacksEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*, %"class.mojo::PendingAssociatedRemote.168"*, %"class.mojo::PendingAssociatedRemote.202"*, %"class.WTF::String"*, i64, %"class.mojo::PendingAssociatedReceiver"*, i64)* @_ZN5blink5mojom5blink31IDBFactoryInterceptorForTesting4OpenEN4mojo23PendingAssociatedRemoteINS1_12IDBCallbacksEEENS4_INS1_20IDBDatabaseCallbacksEEERKN3WTF6StringElNS3_25PendingAssociatedReceiverINS1_14IDBTransactionEEEl to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*, %"class.mojo::PendingAssociatedRemote.168"*, %"class.WTF::String"*, i1)* @_ZN5blink5mojom5blink31IDBFactoryInterceptorForTesting14DeleteDatabaseEN4mojo23PendingAssociatedRemoteINS1_12IDBCallbacksEEERKN3WTF6StringEb to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*, %"class.base::OnceCallback.204"*)* @_ZN5blink5mojom5blink31IDBFactoryInterceptorForTesting35AbortTransactionsAndCompactDatabaseEN4base12OnceCallbackIFvNS0_9IDBStatusEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*, %"class.base::OnceCallback.204"*)* @_ZN5blink5mojom5blink31IDBFactoryInterceptorForTesting28AbortTransactionsForDatabaseEN4base12OnceCallbackIFvNS0_9IDBStatusEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink23IDBCallbacksAsyncWaiterC1EPNS1_12IDBCallbacksE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::IDBCallbacksAsyncWaiter"*, %"class.blink::mojom::blink::IDBCallbacks"*), void (%"class.blink::mojom::blink::IDBCallbacksAsyncWaiter"*, %"class.blink::mojom::blink::IDBCallbacks"*)* @_ZN5blink5mojom5blink23IDBCallbacksAsyncWaiterC2EPNS1_12IDBCallbacksE
@_ZN5blink5mojom5blink23IDBCallbacksAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::IDBCallbacksAsyncWaiter"*), void (%"class.blink::mojom::blink::IDBCallbacksAsyncWaiter"*)* @_ZN5blink5mojom5blink23IDBCallbacksAsyncWaiterD2Ev
@_ZN5blink5mojom5blink31IDBDatabaseCallbacksAsyncWaiterC1EPNS1_20IDBDatabaseCallbacksE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::IDBDatabaseCallbacksAsyncWaiter"*, %"class.blink::mojom::blink::IDBDatabaseCallbacks"*), void (%"class.blink::mojom::blink::IDBDatabaseCallbacksAsyncWaiter"*, %"class.blink::mojom::blink::IDBDatabaseCallbacks"*)* @_ZN5blink5mojom5blink31IDBDatabaseCallbacksAsyncWaiterC2EPNS1_20IDBDatabaseCallbacksE
@_ZN5blink5mojom5blink31IDBDatabaseCallbacksAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::IDBDatabaseCallbacksAsyncWaiter"*), void (%"class.blink::mojom::blink::IDBDatabaseCallbacksAsyncWaiter"*)* @_ZN5blink5mojom5blink31IDBDatabaseCallbacksAsyncWaiterD2Ev
@_ZN5blink5mojom5blink20IDBCursorAsyncWaiterC1EPNS1_9IDBCursorE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::IDBCursorAsyncWaiter"*, %"class.blink::mojom::blink::IDBCursor"*), void (%"class.blink::mojom::blink::IDBCursorAsyncWaiter"*, %"class.blink::mojom::blink::IDBCursor"*)* @_ZN5blink5mojom5blink20IDBCursorAsyncWaiterC2EPNS1_9IDBCursorE
@_ZN5blink5mojom5blink20IDBCursorAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::IDBCursorAsyncWaiter"*), void (%"class.blink::mojom::blink::IDBCursorAsyncWaiter"*)* @_ZN5blink5mojom5blink20IDBCursorAsyncWaiterD2Ev
@_ZN5blink5mojom5blink25IDBTransactionAsyncWaiterC1EPNS1_14IDBTransactionE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::IDBTransactionAsyncWaiter"*, %"class.blink::mojom::blink::IDBTransaction"*), void (%"class.blink::mojom::blink::IDBTransactionAsyncWaiter"*, %"class.blink::mojom::blink::IDBTransaction"*)* @_ZN5blink5mojom5blink25IDBTransactionAsyncWaiterC2EPNS1_14IDBTransactionE
@_ZN5blink5mojom5blink25IDBTransactionAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::IDBTransactionAsyncWaiter"*), void (%"class.blink::mojom::blink::IDBTransactionAsyncWaiter"*)* @_ZN5blink5mojom5blink25IDBTransactionAsyncWaiterD2Ev
@_ZN5blink5mojom5blink38IDBDatabaseGetAllResultSinkAsyncWaiterC1EPNS1_27IDBDatabaseGetAllResultSinkE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkAsyncWaiter"*, %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*), void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkAsyncWaiter"*, %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*)* @_ZN5blink5mojom5blink38IDBDatabaseGetAllResultSinkAsyncWaiterC2EPNS1_27IDBDatabaseGetAllResultSinkE
@_ZN5blink5mojom5blink38IDBDatabaseGetAllResultSinkAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkAsyncWaiter"*), void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkAsyncWaiter"*)* @_ZN5blink5mojom5blink38IDBDatabaseGetAllResultSinkAsyncWaiterD2Ev
@_ZN5blink5mojom5blink22IDBDatabaseAsyncWaiterC1EPNS1_11IDBDatabaseE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::IDBDatabaseAsyncWaiter"*, %"class.blink::mojom::blink::IDBDatabase"*), void (%"class.blink::mojom::blink::IDBDatabaseAsyncWaiter"*, %"class.blink::mojom::blink::IDBDatabase"*)* @_ZN5blink5mojom5blink22IDBDatabaseAsyncWaiterC2EPNS1_11IDBDatabaseE
@_ZN5blink5mojom5blink22IDBDatabaseAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::IDBDatabaseAsyncWaiter"*), void (%"class.blink::mojom::blink::IDBDatabaseAsyncWaiter"*)* @_ZN5blink5mojom5blink22IDBDatabaseAsyncWaiterD2Ev
@_ZN5blink5mojom5blink21IDBFactoryAsyncWaiterC1EPNS1_10IDBFactoryE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::IDBFactoryAsyncWaiter"*, %"class.blink::mojom::blink::IDBFactory"*), void (%"class.blink::mojom::blink::IDBFactoryAsyncWaiter"*, %"class.blink::mojom::blink::IDBFactory"*)* @_ZN5blink5mojom5blink21IDBFactoryAsyncWaiterC2EPNS1_10IDBFactoryE
@_ZN5blink5mojom5blink21IDBFactoryAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::IDBFactoryAsyncWaiter"*), void (%"class.blink::mojom::blink::IDBFactoryAsyncWaiter"*)* @_ZN5blink5mojom5blink21IDBFactoryAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33IDBCallbacksInterceptorForTesting5ErrorENS0_12IDBExceptionERKN3WTF6StringE(%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)** %5, i64 9
  %7 = load %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::IDBCallbacks"* %7(%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.blink::mojom::blink::IDBCallbacks"* %8 to void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)***
  %10 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)**, void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)** %10, i64 2
  %12 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)** %11, align 8
  tail call void %12(%"class.blink::mojom::blink::IDBCallbacks"* %8, i32 %1, %"class.WTF::String"* dereferenceable(8) %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33IDBCallbacksInterceptorForTesting27SuccessNamesAndVersionsListEN3WTF6VectorIN4mojo9StructPtrINS1_17IDBNameAndVersionEEELj0ENS3_18PartitionAllocatorEEE(%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*, %"class.WTF::Vector"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = bitcast %"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)** %5, i64 9
  %7 = load %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::IDBCallbacks"* %7(%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  %11 = bitcast %"class.WTF::Vector"* %1 to i64*
  %12 = bitcast %"class.WTF::Vector"* %3 to i64*
  store i64 0, i64* %12, align 8
  %13 = load i64, i64* %11, align 8
  %14 = bitcast %"class.WTF::Vector"* %3 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %9, align 8
  store i32 0, i32* %15, align 4
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %10, align 4
  store i32 0, i32* %17, align 4
  %19 = bitcast %"class.blink::mojom::blink::IDBCallbacks"* %8 to void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.WTF::Vector"*)***
  %20 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.WTF::Vector"*)**, void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.WTF::Vector"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.WTF::Vector"*)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.WTF::Vector"*)** %20, i64 3
  %22 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.WTF::Vector"*)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.WTF::Vector"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::IDBCallbacks"* %8, %"class.WTF::Vector"* nonnull %3) #10
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %23, align 8
  %25 = icmp eq %"class.mojo::StructPtr"* %24, null
  br i1 %25, label %48, label %26, !prof !2

26:                                               ; preds = %2
  %27 = bitcast %"class.mojo::StructPtr"* %24 to i8*
  %28 = load i32, i32* %10, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %46, label %30, !prof !3

30:                                               ; preds = %26
  %31 = zext i32 %28 to i64
  %32 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %24, i64 %31
  br label %33

33:                                               ; preds = %40, %30
  %34 = phi %"class.mojo::StructPtr"* [ %41, %40 ], [ %24, %30 ]
  %35 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::mojom::blink::IDBNameAndVersion"*, %"class.blink::mojom::blink::IDBNameAndVersion"** %35, align 8
  store %"class.blink::mojom::blink::IDBNameAndVersion"* null, %"class.blink::mojom::blink::IDBNameAndVersion"** %35, align 8
  %37 = icmp eq %"class.blink::mojom::blink::IDBNameAndVersion"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %33
  call void @_ZN5blink5mojom5blink17IDBNameAndVersionD1Ev(%"class.blink::mojom::blink::IDBNameAndVersion"* nonnull %36) #10
  %39 = bitcast %"class.blink::mojom::blink::IDBNameAndVersion"* %36 to i8*
  call void @_ZdlPv(i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %34, i64 1
  %42 = icmp eq %"class.mojo::StructPtr"* %41, %32
  br i1 %42, label %43, label %33

43:                                               ; preds = %40
  store i32 0, i32* %10, align 4
  %44 = bitcast %"class.WTF::Vector"* %3 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %46

46:                                               ; preds = %43, %26
  %47 = phi i8* [ %45, %43 ], [ %27, %26 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %47) #10
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %23, align 8
  br label %48

48:                                               ; preds = %2, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33IDBCallbacksInterceptorForTesting7BlockedEl(%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*, i64) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)** %4, i64 9
  %6 = load %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::IDBCallbacks"* %6(%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.blink::mojom::blink::IDBCallbacks"* %7 to void (%"class.blink::mojom::blink::IDBCallbacks"*, i64)***
  %9 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, i64)**, void (%"class.blink::mojom::blink::IDBCallbacks"*, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBCallbacks"*, i64)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, i64)** %9, i64 4
  %11 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, i64)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, i64)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::IDBCallbacks"* %7, i64 %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33IDBCallbacksInterceptorForTesting13UpgradeNeededEN4mojo23PendingAssociatedRemoteINS1_11IDBDatabaseEEElNS0_11IDBDataLossERKN3WTF6StringERKNS_19IDBDatabaseMetadataE(%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*, %"class.mojo::PendingAssociatedRemote"*, i64, i32, %"class.WTF::String"* dereferenceable(8), %"struct.blink::IDBDatabaseMetadata"* dereferenceable(64)) unnamed_addr #0 align 2 {
  %7 = alloca %"class.mojo::PendingAssociatedRemote", align 8
  %8 = bitcast %"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)***
  %9 = load %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)** %9, i64 9
  %11 = load %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)** %10, align 8
  %12 = tail call %"class.blink::mojom::blink::IDBCallbacks"* %11(%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"* %0) #10
  %13 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %7, i64 0, i32 0
  %14 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %1, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %13, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %14) #10
  %15 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %7, i64 0, i32 1
  %16 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %15, align 8
  %18 = bitcast %"class.blink::mojom::blink::IDBCallbacks"* %12 to void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.mojo::PendingAssociatedRemote"*, i64, i32, %"class.WTF::String"*, %"struct.blink::IDBDatabaseMetadata"*)***
  %19 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.mojo::PendingAssociatedRemote"*, i64, i32, %"class.WTF::String"*, %"struct.blink::IDBDatabaseMetadata"*)**, void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.mojo::PendingAssociatedRemote"*, i64, i32, %"class.WTF::String"*, %"struct.blink::IDBDatabaseMetadata"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.mojo::PendingAssociatedRemote"*, i64, i32, %"class.WTF::String"*, %"struct.blink::IDBDatabaseMetadata"*)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.mojo::PendingAssociatedRemote"*, i64, i32, %"class.WTF::String"*, %"struct.blink::IDBDatabaseMetadata"*)** %19, i64 5
  %21 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.mojo::PendingAssociatedRemote"*, i64, i32, %"class.WTF::String"*, %"struct.blink::IDBDatabaseMetadata"*)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.mojo::PendingAssociatedRemote"*, i64, i32, %"class.WTF::String"*, %"struct.blink::IDBDatabaseMetadata"*)** %20, align 8
  call void %21(%"class.blink::mojom::blink::IDBCallbacks"* %12, %"class.mojo::PendingAssociatedRemote"* nonnull %7, i64 %2, i32 %3, %"class.WTF::String"* dereferenceable(8) %4, %"struct.blink::IDBDatabaseMetadata"* dereferenceable(64) %5) #10
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33IDBCallbacksInterceptorForTesting15SuccessDatabaseEN4mojo23PendingAssociatedRemoteINS1_11IDBDatabaseEEERKNS_19IDBDatabaseMetadataE(%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*, %"class.mojo::PendingAssociatedRemote"*, %"struct.blink::IDBDatabaseMetadata"* dereferenceable(64)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::PendingAssociatedRemote", align 8
  %5 = bitcast %"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)** %6, i64 9
  %8 = load %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::IDBCallbacks"* %8(%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %1, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %10, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %11) #10
  %12 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  store i32 %14, i32* %12, align 8
  %15 = bitcast %"class.blink::mojom::blink::IDBCallbacks"* %9 to void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.mojo::PendingAssociatedRemote"*, %"struct.blink::IDBDatabaseMetadata"*)***
  %16 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.mojo::PendingAssociatedRemote"*, %"struct.blink::IDBDatabaseMetadata"*)**, void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.mojo::PendingAssociatedRemote"*, %"struct.blink::IDBDatabaseMetadata"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.mojo::PendingAssociatedRemote"*, %"struct.blink::IDBDatabaseMetadata"*)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.mojo::PendingAssociatedRemote"*, %"struct.blink::IDBDatabaseMetadata"*)** %16, i64 6
  %18 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.mojo::PendingAssociatedRemote"*, %"struct.blink::IDBDatabaseMetadata"*)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, %"class.mojo::PendingAssociatedRemote"*, %"struct.blink::IDBDatabaseMetadata"*)** %17, align 8
  call void %18(%"class.blink::mojom::blink::IDBCallbacks"* %9, %"class.mojo::PendingAssociatedRemote"* nonnull %4, %"struct.blink::IDBDatabaseMetadata"* dereferenceable(64) %2) #10
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33IDBCallbacksInterceptorForTesting14SuccessIntegerEl(%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*, i64) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)** %4, i64 9
  %6 = load %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::IDBCallbacks"* %6(%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.blink::mojom::blink::IDBCallbacks"* %7 to void (%"class.blink::mojom::blink::IDBCallbacks"*, i64)***
  %9 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, i64)**, void (%"class.blink::mojom::blink::IDBCallbacks"*, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBCallbacks"*, i64)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, i64)** %9, i64 7
  %11 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, i64)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, i64)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::IDBCallbacks"* %7, i64 %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33IDBCallbacksInterceptorForTesting7SuccessEv(%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)** %3, i64 9
  %5 = load %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCallbacks"* (%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::blink::IDBCallbacks"* %5(%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"* %0) #10
  %7 = bitcast %"class.blink::mojom::blink::IDBCallbacks"* %6 to void (%"class.blink::mojom::blink::IDBCallbacks"*)***
  %8 = load void (%"class.blink::mojom::blink::IDBCallbacks"*)**, void (%"class.blink::mojom::blink::IDBCallbacks"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBCallbacks"*)*, void (%"class.blink::mojom::blink::IDBCallbacks"*)** %8, i64 8
  %10 = load void (%"class.blink::mojom::blink::IDBCallbacks"*)*, void (%"class.blink::mojom::blink::IDBCallbacks"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::blink::IDBCallbacks"* %6) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink23IDBCallbacksAsyncWaiterC2EPNS1_12IDBCallbacksE(%"class.blink::mojom::blink::IDBCallbacksAsyncWaiter"* nocapture, %"class.blink::mojom::blink::IDBCallbacks"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::IDBCallbacksAsyncWaiter", %"class.blink::mojom::blink::IDBCallbacksAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::IDBCallbacks"* %1, %"class.blink::mojom::blink::IDBCallbacks"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink23IDBCallbacksAsyncWaiterD2Ev(%"class.blink::mojom::blink::IDBCallbacksAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink41IDBDatabaseCallbacksInterceptorForTesting11ForcedCloseEv(%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)** %3, i64 6
  %5 = load %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::blink::IDBDatabaseCallbacks"* %5(%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"* %0) #10
  %7 = bitcast %"class.blink::mojom::blink::IDBDatabaseCallbacks"* %6 to void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*)***
  %8 = load void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*)**, void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*)*, void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*)** %8, i64 2
  %10 = load void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*)*, void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::blink::IDBDatabaseCallbacks"* %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink41IDBDatabaseCallbacksInterceptorForTesting13VersionChangeEll(%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*, i64, i64) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)** %5, i64 6
  %7 = load %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::IDBDatabaseCallbacks"* %7(%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.blink::mojom::blink::IDBDatabaseCallbacks"* %8 to void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64, i64)***
  %10 = load void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64, i64)**, void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64, i64)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64, i64)*, void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64, i64)** %10, i64 3
  %12 = load void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64, i64)*, void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64, i64)** %11, align 8
  tail call void %12(%"class.blink::mojom::blink::IDBDatabaseCallbacks"* %8, i64 %1, i64 %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink41IDBDatabaseCallbacksInterceptorForTesting5AbortElNS0_12IDBExceptionERKN3WTF6StringE(%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*, i64, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)** %6, i64 6
  %8 = load %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::IDBDatabaseCallbacks"* %8(%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"* %0) #10
  %10 = bitcast %"class.blink::mojom::blink::IDBDatabaseCallbacks"* %9 to void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64, i32, %"class.WTF::String"*)***
  %11 = load void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64, i32, %"class.WTF::String"*)**, void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64, i32, %"class.WTF::String"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64, i32, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64, i32, %"class.WTF::String"*)** %11, i64 4
  %13 = load void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64, i32, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64, i32, %"class.WTF::String"*)** %12, align 8
  tail call void %13(%"class.blink::mojom::blink::IDBDatabaseCallbacks"* %9, i64 %1, i32 %2, %"class.WTF::String"* dereferenceable(8) %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink41IDBDatabaseCallbacksInterceptorForTesting8CompleteEl(%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*, i64) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)** %4, i64 6
  %6 = load %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabaseCallbacks"* (%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::IDBDatabaseCallbacks"* %6(%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.blink::mojom::blink::IDBDatabaseCallbacks"* %7 to void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64)***
  %9 = load void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64)**, void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64)*, void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64)** %9, i64 5
  %11 = load void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64)*, void (%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, i64)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::IDBDatabaseCallbacks"* %7, i64 %1) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink31IDBDatabaseCallbacksAsyncWaiterC2EPNS1_20IDBDatabaseCallbacksE(%"class.blink::mojom::blink::IDBDatabaseCallbacksAsyncWaiter"* nocapture, %"class.blink::mojom::blink::IDBDatabaseCallbacks"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabaseCallbacksAsyncWaiter", %"class.blink::mojom::blink::IDBDatabaseCallbacksAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::IDBDatabaseCallbacks"* %1, %"class.blink::mojom::blink::IDBDatabaseCallbacks"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink31IDBDatabaseCallbacksAsyncWaiterD2Ev(%"class.blink::mojom::blink::IDBDatabaseCallbacksAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink30IDBCursorInterceptorForTesting7AdvanceEjN4base12OnceCallbackIFvN4mojo9StructPtrINS1_15IDBCursorResultEEEEEE(%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*, i32, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.blink::mojom::blink::IDBCursorInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)** %6, i64 6
  %8 = load %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::IDBCursor"* %8(%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::IDBCursor"* %9 to void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)** %15, i64 2
  %17 = load void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::IDBCursor"* %9, i32 %1, %"class.base::OnceCallback"* nonnull %4) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink30IDBCursorInterceptorForTesting14CursorContinueENSt3__110unique_ptrINS_6IDBKeyENS3_14default_deleteIS5_EEEES8_N4base12OnceCallbackIFvN4mojo9StructPtrINS1_15IDBCursorResultEEEEEE(%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = bitcast %"class.blink::mojom::blink::IDBCursorInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)** %7, i64 6
  %9 = load %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::IDBCursor"* %9(%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"* %0) #10
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = bitcast %"class.blink::mojom::blink::IDBCursor"* %10 to void (%"class.blink::mojom::blink::IDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.base::OnceCallback"*)***
  %16 = load void (%"class.blink::mojom::blink::IDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::IDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.base::OnceCallback"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::IDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.base::OnceCallback"*)** %16, i64 3
  %18 = load void (%"class.blink::mojom::blink::IDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::IDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.base::OnceCallback"*)** %17, align 8
  call void %18(%"class.blink::mojom::blink::IDBCursor"* %10, %"class.blink::IDBKey"* %1, %"class.blink::IDBKey"* %2, %"class.base::OnceCallback"* nonnull %5) #10
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink30IDBCursorInterceptorForTesting8PrefetchEiN4base12OnceCallbackIFvN4mojo9StructPtrINS1_15IDBCursorResultEEEEEE(%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*, i32, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.blink::mojom::blink::IDBCursorInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)** %6, i64 6
  %8 = load %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::IDBCursor"* %8(%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::IDBCursor"* %9 to void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)** %15, i64 4
  %17 = load void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::IDBCursor"* %9, i32 %1, %"class.base::OnceCallback"* nonnull %4) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink30IDBCursorInterceptorForTesting13PrefetchResetEii(%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::mojom::blink::IDBCursorInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)** %5, i64 6
  %7 = load %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBCursor"* (%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::IDBCursor"* %7(%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.blink::mojom::blink::IDBCursor"* %8 to void (%"class.blink::mojom::blink::IDBCursor"*, i32, i32)***
  %10 = load void (%"class.blink::mojom::blink::IDBCursor"*, i32, i32)**, void (%"class.blink::mojom::blink::IDBCursor"*, i32, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBCursor"*, i32, i32)*, void (%"class.blink::mojom::blink::IDBCursor"*, i32, i32)** %10, i64 5
  %12 = load void (%"class.blink::mojom::blink::IDBCursor"*, i32, i32)*, void (%"class.blink::mojom::blink::IDBCursor"*, i32, i32)** %11, align 8
  tail call void %12(%"class.blink::mojom::blink::IDBCursor"* %8, i32 %1, i32 %2) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink20IDBCursorAsyncWaiterC2EPNS1_9IDBCursorE(%"class.blink::mojom::blink::IDBCursorAsyncWaiter"* nocapture, %"class.blink::mojom::blink::IDBCursor"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::IDBCursorAsyncWaiter", %"class.blink::mojom::blink::IDBCursorAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::IDBCursor"* %1, %"class.blink::mojom::blink::IDBCursor"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink20IDBCursorAsyncWaiterD2Ev(%"class.blink::mojom::blink::IDBCursorAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink20IDBCursorAsyncWaiter7AdvanceEjPN4mojo9StructPtrINS1_15IDBCursorResultEEE(%"class.blink::mojom::blink::IDBCursorAsyncWaiter"* nocapture readonly, i32, %"class.mojo::StructPtr.34"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint %"class.mojo::StructPtr.34"* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #10
  %9 = getelementptr inbounds %"class.blink::mojom::blink::IDBCursorAsyncWaiter", %"class.blink::mojom::blink::IDBCursorAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.blink::mojom::blink::IDBCursor"*, %"class.blink::mojom::blink::IDBCursor"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #11, !noalias !4
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.34"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink20IDBCursorAsyncWaiter7AdvanceEjPN4mojo9StructPtrINS5_15IDBCursorResultEEEE3$_0JPNS_7RunLoopESB_EEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink20IDBCursorAsyncWaiter7AdvanceEjPN4mojo9StructPtrINS4_15IDBCursorResultEEEE3$_0JPNS_7RunLoopESA_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !4
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !4
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !4
  %18 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !4
  %19 = bitcast %"class.blink::mojom::blink::IDBCursor"* %10 to void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)***
  %20 = load void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)** %20, i64 2
  %22 = load void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::IDBCursor"* %10, i32 %1, %"class.base::OnceCallback"* nonnull %5) #10
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #10
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 117) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #4

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink20IDBCursorAsyncWaiter14CursorContinueENSt3__110unique_ptrINS_6IDBKeyENS3_14default_deleteIS5_EEEES8_PN4mojo9StructPtrINS1_15IDBCursorResultEEE(%"class.blink::mojom::blink::IDBCursorAsyncWaiter"* nocapture readonly, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.mojo::StructPtr.34"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint %"class.mojo::StructPtr.34"* %3 to i64
  %9 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #10
  %10 = getelementptr inbounds %"class.blink::mojom::blink::IDBCursorAsyncWaiter", %"class.blink::mojom::blink::IDBCursorAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.blink::mojom::blink::IDBCursor"*, %"class.blink::mojom::blink::IDBCursor"** %10, align 8
  %12 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %13 = call i8* @_Znwm(i64 56) #11, !noalias !9
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.34"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink20IDBCursorAsyncWaiter14CursorContinueENSt3__110unique_ptrINS3_6IDBKeyENS7_14default_deleteIS9_EEEESC_PN4mojo9StructPtrINS5_15IDBCursorResultEEEE3$_1JPNS_7RunLoopESH_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseEOSG_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink20IDBCursorAsyncWaiter14CursorContinueENSt3__110unique_ptrINS2_6IDBKeyENS6_14default_deleteIS8_EEEESB_PN4mojo9StructPtrINS4_15IDBCursorResultEEEE3$_1JPNS_7RunLoopESG_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !9
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !9
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %8, i64* %18, align 8, !noalias !9
  %19 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %13, i8** %19, align 8, !alias.scope !9
  %20 = bitcast %"class.blink::mojom::blink::IDBCursor"* %11 to void (%"class.blink::mojom::blink::IDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.base::OnceCallback"*)***
  %21 = load void (%"class.blink::mojom::blink::IDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::IDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.base::OnceCallback"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::IDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.base::OnceCallback"*)** %21, i64 3
  %23 = load void (%"class.blink::mojom::blink::IDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::IDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.base::OnceCallback"*)** %22, align 8
  call void %23(%"class.blink::mojom::blink::IDBCursor"* %11, %"class.blink::IDBKey"* %1, %"class.blink::IDBKey"* %2, %"class.base::OnceCallback"* nonnull %6) #10
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #10
  %25 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 132) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink20IDBCursorAsyncWaiter8PrefetchEiPN4mojo9StructPtrINS1_15IDBCursorResultEEE(%"class.blink::mojom::blink::IDBCursorAsyncWaiter"* nocapture readonly, i32, %"class.mojo::StructPtr.34"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint %"class.mojo::StructPtr.34"* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #10
  %9 = getelementptr inbounds %"class.blink::mojom::blink::IDBCursorAsyncWaiter", %"class.blink::mojom::blink::IDBCursorAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.blink::mojom::blink::IDBCursor"*, %"class.blink::mojom::blink::IDBCursor"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #11, !noalias !14
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.34"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink20IDBCursorAsyncWaiter8PrefetchEiPN4mojo9StructPtrINS5_15IDBCursorResultEEEE3$_2JPNS_7RunLoopESB_EEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink20IDBCursorAsyncWaiter8PrefetchEiPN4mojo9StructPtrINS4_15IDBCursorResultEEEE3$_2JPNS_7RunLoopESA_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !14
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !14
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !14
  %18 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !14
  %19 = bitcast %"class.blink::mojom::blink::IDBCursor"* %10 to void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)***
  %20 = load void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)** %20, i64 4
  %22 = load void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::IDBCursor"*, i32, %"class.base::OnceCallback"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::IDBCursor"* %10, i32 %1, %"class.base::OnceCallback"* nonnull %5) #10
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #10
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 147) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink35IDBTransactionInterceptorForTesting17CreateObjectStoreElRKN3WTF6StringERKNS_10IDBKeyPathEb(%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::IDBKeyPath"* dereferenceable(32), i1 zeroext) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)** %7, i64 7
  %9 = load %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::IDBTransaction"* %9(%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"* %0) #10
  %11 = bitcast %"class.blink::mojom::blink::IDBTransaction"* %10 to void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1)***
  %12 = load void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1)**, void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1)*, void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1)** %12, i64 2
  %14 = load void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1)*, void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1)** %13, align 8
  tail call void %14(%"class.blink::mojom::blink::IDBTransaction"* %10, i64 %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::IDBKeyPath"* dereferenceable(32) %3, i1 zeroext %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink35IDBTransactionInterceptorForTesting17DeleteObjectStoreEl(%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*, i64) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)** %4, i64 7
  %6 = load %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::IDBTransaction"* %6(%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.blink::mojom::blink::IDBTransaction"* %7 to void (%"class.blink::mojom::blink::IDBTransaction"*, i64)***
  %9 = load void (%"class.blink::mojom::blink::IDBTransaction"*, i64)**, void (%"class.blink::mojom::blink::IDBTransaction"*, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBTransaction"*, i64)*, void (%"class.blink::mojom::blink::IDBTransaction"*, i64)** %9, i64 3
  %11 = load void (%"class.blink::mojom::blink::IDBTransaction"*, i64)*, void (%"class.blink::mojom::blink::IDBTransaction"*, i64)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::IDBTransaction"* %7, i64 %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink35IDBTransactionInterceptorForTesting3PutElNSt3__110unique_ptrINS_8IDBValueENS3_14default_deleteIS5_EEEENS4_INS_6IDBKeyENS6_IS9_EEEENS0_10IDBPutModeEN3WTF6VectorINS_12IDBIndexKeysELj0ENSD_18PartitionAllocatorEEEN4base12OnceCallbackIFvN4mojo9StructPtrINS1_23IDBTransactionPutResultEEEEEE(%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.WTF::Vector.104"* nocapture, %"class.base::OnceCallback.109"* nocapture) unnamed_addr #0 align 2 {
  %8 = alloca %"class.WTF::Vector.104", align 8
  %9 = alloca %"class.base::OnceCallback.109", align 8
  %10 = bitcast %"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)***
  %11 = load %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)** %11, i64 7
  %13 = load %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)** %12, align 8
  %14 = tail call %"class.blink::mojom::blink::IDBTransaction"* %13(%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"* %0) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %8, i64 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %8, i64 0, i32 0, i32 0, i32 2
  %17 = bitcast %"class.WTF::Vector.104"* %5 to i64*
  %18 = bitcast %"class.WTF::Vector.104"* %8 to i64*
  store i64 0, i64* %18, align 8
  %19 = load i64, i64* %17, align 8
  %20 = bitcast %"class.WTF::Vector.104"* %8 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %5, i64 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %15, align 8
  store i32 0, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %5, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %16, align 4
  store i32 0, i32* %23, align 4
  %25 = getelementptr inbounds %"class.base::OnceCallback.109", %"class.base::OnceCallback.109"* %6, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.base::OnceCallback.109"* %6 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.base::OnceCallback.109"* %9 to i64*
  store i64 %27, i64* %28, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %25, align 8
  %29 = bitcast %"class.blink::mojom::blink::IDBTransaction"* %14 to void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.WTF::Vector.104"*, %"class.base::OnceCallback.109"*)***
  %30 = load void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.WTF::Vector.104"*, %"class.base::OnceCallback.109"*)**, void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.WTF::Vector.104"*, %"class.base::OnceCallback.109"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.WTF::Vector.104"*, %"class.base::OnceCallback.109"*)*, void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.WTF::Vector.104"*, %"class.base::OnceCallback.109"*)** %30, i64 4
  %32 = load void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.WTF::Vector.104"*, %"class.base::OnceCallback.109"*)*, void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.WTF::Vector.104"*, %"class.base::OnceCallback.109"*)** %31, align 8
  call void %32(%"class.blink::mojom::blink::IDBTransaction"* %14, i64 %1, %"class.blink::IDBValue"* %2, %"class.blink::IDBKey"* %3, i32 %4, %"class.WTF::Vector.104"* nonnull %8, %"class.base::OnceCallback.109"* nonnull %9) #10
  %33 = getelementptr inbounds %"class.base::OnceCallback.109", %"class.base::OnceCallback.109"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #10
  %34 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %8, i64 0, i32 0, i32 0, i32 0
  %35 = load %"struct.blink::IDBIndexKeys"*, %"struct.blink::IDBIndexKeys"** %34, align 8
  %36 = icmp eq %"struct.blink::IDBIndexKeys"* %35, null
  br i1 %36, label %81, label %37, !prof !2

37:                                               ; preds = %7
  %38 = bitcast %"struct.blink::IDBIndexKeys"* %35 to i8*
  %39 = load i32, i32* %16, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %79, label %41, !prof !3

41:                                               ; preds = %37
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %35, i64 %42
  br label %44

44:                                               ; preds = %73, %41
  %45 = phi %"struct.blink::IDBIndexKeys"* [ %74, %73 ], [ %35, %41 ]
  %46 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %45, i64 0, i32 1
  %47 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"** %47, align 8
  %49 = icmp eq %"class.std::__1::unique_ptr.11"* %48, null
  br i1 %49, label %73, label %50, !prof !2

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::unique_ptr.11"* %48 to i8*
  %52 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %45, i64 0, i32 1, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %71, label %55, !prof !3

55:                                               ; preds = %50
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %48, i64 %56
  br label %58

58:                                               ; preds = %65, %55
  %59 = phi %"class.std::__1::unique_ptr.11"* [ %66, %65 ], [ %48, %55 ]
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %60, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %60, align 8
  %62 = icmp eq %"class.blink::IDBKey"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %58
  call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %61) #10
  %64 = bitcast %"class.blink::IDBKey"* %61 to i8*
  call void @free(i8* %64) #10
  br label %65

65:                                               ; preds = %63, %58
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %59, i64 1
  %67 = icmp eq %"class.std::__1::unique_ptr.11"* %66, %57
  br i1 %67, label %68, label %58

68:                                               ; preds = %65
  store i32 0, i32* %52, align 4
  %69 = bitcast %"class.WTF::Vector.14"* %46 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %68, %50
  %72 = phi i8* [ %70, %68 ], [ %51, %50 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %72) #10
  store %"class.std::__1::unique_ptr.11"* null, %"class.std::__1::unique_ptr.11"** %47, align 8
  br label %73

73:                                               ; preds = %71, %44
  %74 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %45, i64 1
  %75 = icmp eq %"struct.blink::IDBIndexKeys"* %74, %43
  br i1 %75, label %76, label %44

76:                                               ; preds = %73
  store i32 0, i32* %16, align 4
  %77 = bitcast %"class.WTF::Vector.104"* %8 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %37
  %80 = phi i8* [ %78, %76 ], [ %38, %37 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #10
  store %"struct.blink::IDBIndexKeys"* null, %"struct.blink::IDBIndexKeys"** %34, align 8
  br label %81

81:                                               ; preds = %7, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink35IDBTransactionInterceptorForTesting6PutAllElN3WTF6VectorIN4mojo9StructPtrINS1_12IDBPutParamsEEELj0ENS3_18PartitionAllocatorEEEN4base12OnceCallbackIFvNS6_INS1_26IDBTransactionPutAllResultEEEEEE(%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*, i64, %"class.WTF::Vector.110"* nocapture, %"class.base::OnceCallback.122"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector.110", align 8
  %6 = alloca %"class.base::OnceCallback.122", align 8
  %7 = bitcast %"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)***
  %8 = load %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)** %8, i64 7
  %10 = load %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.blink::mojom::blink::IDBTransaction"* %10(%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"* %0) #10
  %12 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %5, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %5, i64 0, i32 0, i32 0, i32 2
  %14 = bitcast %"class.WTF::Vector.110"* %2 to i64*
  %15 = bitcast %"class.WTF::Vector.110"* %5 to i64*
  store i64 0, i64* %15, align 8
  %16 = load i64, i64* %14, align 8
  %17 = bitcast %"class.WTF::Vector.110"* %5 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %2, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %12, align 8
  store i32 0, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %2, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %13, align 4
  store i32 0, i32* %20, align 4
  %22 = getelementptr inbounds %"class.base::OnceCallback.122", %"class.base::OnceCallback.122"* %3, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.base::OnceCallback.122"* %3 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.base::OnceCallback.122"* %6 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8
  %26 = bitcast %"class.blink::mojom::blink::IDBTransaction"* %11 to void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::Vector.110"*, %"class.base::OnceCallback.122"*)***
  %27 = load void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::Vector.110"*, %"class.base::OnceCallback.122"*)**, void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::Vector.110"*, %"class.base::OnceCallback.122"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::Vector.110"*, %"class.base::OnceCallback.122"*)*, void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::Vector.110"*, %"class.base::OnceCallback.122"*)** %27, i64 5
  %29 = load void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::Vector.110"*, %"class.base::OnceCallback.122"*)*, void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::Vector.110"*, %"class.base::OnceCallback.122"*)** %28, align 8
  call void %29(%"class.blink::mojom::blink::IDBTransaction"* %11, i64 %1, %"class.WTF::Vector.110"* nonnull %5, %"class.base::OnceCallback.122"* nonnull %6) #10
  %30 = getelementptr inbounds %"class.base::OnceCallback.122", %"class.base::OnceCallback.122"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #10
  %31 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %5, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.mojo::StructPtr.113"*, %"class.mojo::StructPtr.113"** %31, align 8
  %33 = icmp eq %"class.mojo::StructPtr.113"* %32, null
  br i1 %33, label %56, label %34, !prof !2

34:                                               ; preds = %4
  %35 = bitcast %"class.mojo::StructPtr.113"* %32 to i8*
  %36 = load i32, i32* %13, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %54, label %38, !prof !3

38:                                               ; preds = %34
  %39 = zext i32 %36 to i64
  %40 = getelementptr inbounds %"class.mojo::StructPtr.113", %"class.mojo::StructPtr.113"* %32, i64 %39
  br label %41

41:                                               ; preds = %48, %38
  %42 = phi %"class.mojo::StructPtr.113"* [ %49, %48 ], [ %32, %38 ]
  %43 = getelementptr inbounds %"class.mojo::StructPtr.113", %"class.mojo::StructPtr.113"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::mojom::blink::IDBPutParams"*, %"class.blink::mojom::blink::IDBPutParams"** %43, align 8
  store %"class.blink::mojom::blink::IDBPutParams"* null, %"class.blink::mojom::blink::IDBPutParams"** %43, align 8
  %45 = icmp eq %"class.blink::mojom::blink::IDBPutParams"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  call void @_ZN5blink5mojom5blink12IDBPutParamsD1Ev(%"class.blink::mojom::blink::IDBPutParams"* nonnull %44) #10
  %47 = bitcast %"class.blink::mojom::blink::IDBPutParams"* %44 to i8*
  call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %46, %41
  %49 = getelementptr inbounds %"class.mojo::StructPtr.113", %"class.mojo::StructPtr.113"* %42, i64 1
  %50 = icmp eq %"class.mojo::StructPtr.113"* %49, %40
  br i1 %50, label %51, label %41

51:                                               ; preds = %48
  store i32 0, i32* %13, align 4
  %52 = bitcast %"class.WTF::Vector.110"* %5 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %34
  %55 = phi i8* [ %53, %51 ], [ %35, %34 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #10
  store %"class.mojo::StructPtr.113"* null, %"class.mojo::StructPtr.113"** %31, align 8
  br label %56

56:                                               ; preds = %4, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink35IDBTransactionInterceptorForTesting6CommitEl(%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*, i64) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)** %4, i64 7
  %6 = load %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBTransaction"* (%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::IDBTransaction"* %6(%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.blink::mojom::blink::IDBTransaction"* %7 to void (%"class.blink::mojom::blink::IDBTransaction"*, i64)***
  %9 = load void (%"class.blink::mojom::blink::IDBTransaction"*, i64)**, void (%"class.blink::mojom::blink::IDBTransaction"*, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBTransaction"*, i64)*, void (%"class.blink::mojom::blink::IDBTransaction"*, i64)** %9, i64 6
  %11 = load void (%"class.blink::mojom::blink::IDBTransaction"*, i64)*, void (%"class.blink::mojom::blink::IDBTransaction"*, i64)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::IDBTransaction"* %7, i64 %1) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink25IDBTransactionAsyncWaiterC2EPNS1_14IDBTransactionE(%"class.blink::mojom::blink::IDBTransactionAsyncWaiter"* nocapture, %"class.blink::mojom::blink::IDBTransaction"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::IDBTransactionAsyncWaiter", %"class.blink::mojom::blink::IDBTransactionAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::IDBTransaction"* %1, %"class.blink::mojom::blink::IDBTransaction"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink25IDBTransactionAsyncWaiterD2Ev(%"class.blink::mojom::blink::IDBTransactionAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink25IDBTransactionAsyncWaiter3PutElNSt3__110unique_ptrINS_8IDBValueENS3_14default_deleteIS5_EEEENS4_INS_6IDBKeyENS6_IS9_EEEENS0_10IDBPutModeEN3WTF6VectorINS_12IDBIndexKeysELj0ENSD_18PartitionAllocatorEEEPN4mojo9StructPtrINS1_23IDBTransactionPutResultEEE(%"class.blink::mojom::blink::IDBTransactionAsyncWaiter"* nocapture readonly, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.WTF::Vector.104"* nocapture, %"class.mojo::StructPtr.123"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.base::RunLoop", align 8
  %9 = alloca %"class.WTF::Vector.104", align 8
  %10 = alloca %"class.base::OnceCallback.109", align 8
  %11 = alloca %"class.base::Location", align 8
  %12 = ptrtoint %"class.mojo::StructPtr.123"* %6 to i64
  %13 = bitcast %"class.base::RunLoop"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %8, i32 0) #10
  %14 = getelementptr inbounds %"class.blink::mojom::blink::IDBTransactionAsyncWaiter", %"class.blink::mojom::blink::IDBTransactionAsyncWaiter"* %0, i64 0, i32 0
  %15 = load %"class.blink::mojom::blink::IDBTransaction"*, %"class.blink::mojom::blink::IDBTransaction"** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %9, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %9, i64 0, i32 0, i32 0, i32 2
  %18 = bitcast %"class.WTF::Vector.104"* %5 to i64*
  %19 = bitcast %"class.WTF::Vector.104"* %9 to i64*
  store i64 0, i64* %19, align 8
  %20 = load i64, i64* %18, align 8
  %21 = bitcast %"class.WTF::Vector.104"* %9 to i64*
  store atomic i64 0, i64* %18 monotonic, align 8
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %5, i64 0, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %16, align 8
  store i32 0, i32* %22, align 4
  %24 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %5, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %17, align 4
  store i32 0, i32* %24, align 4
  %26 = ptrtoint %"class.base::RunLoop"* %8 to i64
  %27 = call i8* @_Znwm(i64 56) #11, !noalias !19
  %28 = bitcast i8* %27 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %28, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.123"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink25IDBTransactionAsyncWaiter3PutElNSt3__110unique_ptrINS3_8IDBValueENS7_14default_deleteIS9_EEEENS8_INS3_6IDBKeyENSA_ISD_EEEENS4_10IDBPutModeEN3WTF6VectorINS3_12IDBIndexKeysELj0ENSH_18PartitionAllocatorEEEPN4mojo9StructPtrINS5_23IDBTransactionPutResultEEEE3$_3JPNS_7RunLoopESQ_EEEFvSP_EE7RunOnceEPNS0_13BindStateBaseEOSP_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink25IDBTransactionAsyncWaiter3PutElNSt3__110unique_ptrINS2_8IDBValueENS6_14default_deleteIS8_EEEENS7_INS2_6IDBKeyENS9_ISC_EEEENS3_10IDBPutModeEN3WTF6VectorINS2_12IDBIndexKeysELj0ENSG_18PartitionAllocatorEEEPN4mojo9StructPtrINS4_23IDBTransactionPutResultEEEE3$_3JPNS_7RunLoopESP_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !19
  %29 = getelementptr inbounds i8, i8* %27, i64 40
  %30 = bitcast i8* %29 to i64*
  store i64 %26, i64* %30, align 8, !noalias !19
  %31 = getelementptr inbounds i8, i8* %27, i64 48
  %32 = bitcast i8* %31 to i64*
  store i64 %12, i64* %32, align 8, !noalias !19
  %33 = bitcast %"class.base::OnceCallback.109"* %10 to i8**
  store i8* %27, i8** %33, align 8, !alias.scope !19
  %34 = bitcast %"class.blink::mojom::blink::IDBTransaction"* %15 to void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.WTF::Vector.104"*, %"class.base::OnceCallback.109"*)***
  %35 = load void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.WTF::Vector.104"*, %"class.base::OnceCallback.109"*)**, void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.WTF::Vector.104"*, %"class.base::OnceCallback.109"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.WTF::Vector.104"*, %"class.base::OnceCallback.109"*)*, void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.WTF::Vector.104"*, %"class.base::OnceCallback.109"*)** %35, i64 4
  %37 = load void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.WTF::Vector.104"*, %"class.base::OnceCallback.109"*)*, void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.WTF::Vector.104"*, %"class.base::OnceCallback.109"*)** %36, align 8
  call void %37(%"class.blink::mojom::blink::IDBTransaction"* %15, i64 %1, %"class.blink::IDBValue"* %2, %"class.blink::IDBKey"* %3, i32 %4, %"class.WTF::Vector.104"* nonnull %9, %"class.base::OnceCallback.109"* nonnull %10) #10
  %38 = getelementptr inbounds %"class.base::OnceCallback.109", %"class.base::OnceCallback.109"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #10
  %39 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %9, i64 0, i32 0, i32 0, i32 0
  %40 = load %"struct.blink::IDBIndexKeys"*, %"struct.blink::IDBIndexKeys"** %39, align 8
  %41 = icmp eq %"struct.blink::IDBIndexKeys"* %40, null
  br i1 %41, label %86, label %42, !prof !2

42:                                               ; preds = %7
  %43 = bitcast %"struct.blink::IDBIndexKeys"* %40 to i8*
  %44 = load i32, i32* %17, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %84, label %46, !prof !3

46:                                               ; preds = %42
  %47 = zext i32 %44 to i64
  %48 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %40, i64 %47
  br label %49

49:                                               ; preds = %78, %46
  %50 = phi %"struct.blink::IDBIndexKeys"* [ %79, %78 ], [ %40, %46 ]
  %51 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %50, i64 0, i32 1
  %52 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"** %52, align 8
  %54 = icmp eq %"class.std::__1::unique_ptr.11"* %53, null
  br i1 %54, label %78, label %55, !prof !2

55:                                               ; preds = %49
  %56 = bitcast %"class.std::__1::unique_ptr.11"* %53 to i8*
  %57 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %50, i64 0, i32 1, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %76, label %60, !prof !3

60:                                               ; preds = %55
  %61 = zext i32 %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %53, i64 %61
  br label %63

63:                                               ; preds = %70, %60
  %64 = phi %"class.std::__1::unique_ptr.11"* [ %71, %70 ], [ %53, %60 ]
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %65, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %65, align 8
  %67 = icmp eq %"class.blink::IDBKey"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %63
  call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %66) #10
  %69 = bitcast %"class.blink::IDBKey"* %66 to i8*
  call void @free(i8* %69) #10
  br label %70

70:                                               ; preds = %68, %63
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %64, i64 1
  %72 = icmp eq %"class.std::__1::unique_ptr.11"* %71, %62
  br i1 %72, label %73, label %63

73:                                               ; preds = %70
  store i32 0, i32* %57, align 4
  %74 = bitcast %"class.WTF::Vector.14"* %51 to i8**
  %75 = load i8*, i8** %74, align 8
  br label %76

76:                                               ; preds = %73, %55
  %77 = phi i8* [ %75, %73 ], [ %56, %55 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %77) #10
  store %"class.std::__1::unique_ptr.11"* null, %"class.std::__1::unique_ptr.11"** %52, align 8
  br label %78

78:                                               ; preds = %76, %49
  %79 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %50, i64 1
  %80 = icmp eq %"struct.blink::IDBIndexKeys"* %79, %48
  br i1 %80, label %81, label %49

81:                                               ; preds = %78
  store i32 0, i32* %17, align 4
  %82 = bitcast %"class.WTF::Vector.104"* %9 to i8**
  %83 = load i8*, i8** %82, align 8
  br label %84

84:                                               ; preds = %81, %42
  %85 = phi i8* [ %83, %81 ], [ %43, %42 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %85) #10
  store %"struct.blink::IDBIndexKeys"* null, %"struct.blink::IDBIndexKeys"** %39, align 8
  br label %86

86:                                               ; preds = %7, %84
  %87 = bitcast %"class.base::Location"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %87) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 185) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %8, %"class.base::Location"* nonnull dereferenceable(32) %11) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %87) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink25IDBTransactionAsyncWaiter6PutAllElN3WTF6VectorIN4mojo9StructPtrINS1_12IDBPutParamsEEELj0ENS3_18PartitionAllocatorEEEPNS6_INS1_26IDBTransactionPutAllResultEEE(%"class.blink::mojom::blink::IDBTransactionAsyncWaiter"* nocapture readonly, i64, %"class.WTF::Vector.110"* nocapture, %"class.mojo::StructPtr.132"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.WTF::Vector.110", align 8
  %7 = alloca %"class.base::OnceCallback.122", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = ptrtoint %"class.mojo::StructPtr.132"* %3 to i64
  %10 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #10
  %11 = getelementptr inbounds %"class.blink::mojom::blink::IDBTransactionAsyncWaiter", %"class.blink::mojom::blink::IDBTransactionAsyncWaiter"* %0, i64 0, i32 0
  %12 = load %"class.blink::mojom::blink::IDBTransaction"*, %"class.blink::mojom::blink::IDBTransaction"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %6, i64 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %6, i64 0, i32 0, i32 0, i32 2
  %15 = bitcast %"class.WTF::Vector.110"* %2 to i64*
  %16 = bitcast %"class.WTF::Vector.110"* %6 to i64*
  store i64 0, i64* %16, align 8
  %17 = load i64, i64* %15, align 8
  %18 = bitcast %"class.WTF::Vector.110"* %6 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %2, i64 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %13, align 8
  store i32 0, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %2, i64 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %14, align 4
  store i32 0, i32* %21, align 4
  %23 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %24 = call i8* @_Znwm(i64 56) #11, !noalias !24
  %25 = bitcast i8* %24 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %25, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.132"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink25IDBTransactionAsyncWaiter6PutAllElN3WTF6VectorIN4mojo9StructPtrINS5_12IDBPutParamsEEELj0ENS7_18PartitionAllocatorEEEPNSA_INS5_26IDBTransactionPutAllResultEEEE3$_4JPNS_7RunLoopESH_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseEOSG_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink25IDBTransactionAsyncWaiter6PutAllElN3WTF6VectorIN4mojo9StructPtrINS4_12IDBPutParamsEEELj0ENS6_18PartitionAllocatorEEEPNS9_INS4_26IDBTransactionPutAllResultEEEE3$_4JPNS_7RunLoopESG_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !24
  %26 = getelementptr inbounds i8, i8* %24, i64 40
  %27 = bitcast i8* %26 to i64*
  store i64 %23, i64* %27, align 8, !noalias !24
  %28 = getelementptr inbounds i8, i8* %24, i64 48
  %29 = bitcast i8* %28 to i64*
  store i64 %9, i64* %29, align 8, !noalias !24
  %30 = bitcast %"class.base::OnceCallback.122"* %7 to i8**
  store i8* %24, i8** %30, align 8, !alias.scope !24
  %31 = bitcast %"class.blink::mojom::blink::IDBTransaction"* %12 to void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::Vector.110"*, %"class.base::OnceCallback.122"*)***
  %32 = load void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::Vector.110"*, %"class.base::OnceCallback.122"*)**, void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::Vector.110"*, %"class.base::OnceCallback.122"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::Vector.110"*, %"class.base::OnceCallback.122"*)*, void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::Vector.110"*, %"class.base::OnceCallback.122"*)** %32, i64 5
  %34 = load void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::Vector.110"*, %"class.base::OnceCallback.122"*)*, void (%"class.blink::mojom::blink::IDBTransaction"*, i64, %"class.WTF::Vector.110"*, %"class.base::OnceCallback.122"*)** %33, align 8
  call void %34(%"class.blink::mojom::blink::IDBTransaction"* %12, i64 %1, %"class.WTF::Vector.110"* nonnull %6, %"class.base::OnceCallback.122"* nonnull %7) #10
  %35 = getelementptr inbounds %"class.base::OnceCallback.122", %"class.base::OnceCallback.122"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #10
  %36 = getelementptr inbounds %"class.WTF::Vector.110", %"class.WTF::Vector.110"* %6, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.mojo::StructPtr.113"*, %"class.mojo::StructPtr.113"** %36, align 8
  %38 = icmp eq %"class.mojo::StructPtr.113"* %37, null
  br i1 %38, label %61, label %39, !prof !2

39:                                               ; preds = %4
  %40 = bitcast %"class.mojo::StructPtr.113"* %37 to i8*
  %41 = load i32, i32* %14, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %59, label %43, !prof !3

43:                                               ; preds = %39
  %44 = zext i32 %41 to i64
  %45 = getelementptr inbounds %"class.mojo::StructPtr.113", %"class.mojo::StructPtr.113"* %37, i64 %44
  br label %46

46:                                               ; preds = %53, %43
  %47 = phi %"class.mojo::StructPtr.113"* [ %54, %53 ], [ %37, %43 ]
  %48 = getelementptr inbounds %"class.mojo::StructPtr.113", %"class.mojo::StructPtr.113"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::mojom::blink::IDBPutParams"*, %"class.blink::mojom::blink::IDBPutParams"** %48, align 8
  store %"class.blink::mojom::blink::IDBPutParams"* null, %"class.blink::mojom::blink::IDBPutParams"** %48, align 8
  %50 = icmp eq %"class.blink::mojom::blink::IDBPutParams"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %46
  call void @_ZN5blink5mojom5blink12IDBPutParamsD1Ev(%"class.blink::mojom::blink::IDBPutParams"* nonnull %49) #10
  %52 = bitcast %"class.blink::mojom::blink::IDBPutParams"* %49 to i8*
  call void @_ZdlPv(i8* %52) #11
  br label %53

53:                                               ; preds = %51, %46
  %54 = getelementptr inbounds %"class.mojo::StructPtr.113", %"class.mojo::StructPtr.113"* %47, i64 1
  %55 = icmp eq %"class.mojo::StructPtr.113"* %54, %45
  br i1 %55, label %56, label %46

56:                                               ; preds = %53
  store i32 0, i32* %14, align 4
  %57 = bitcast %"class.WTF::Vector.110"* %6 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %39
  %60 = phi i8* [ %58, %56 ], [ %40, %39 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %60) #10
  store %"class.mojo::StructPtr.113"* null, %"class.mojo::StructPtr.113"** %36, align 8
  br label %61

61:                                               ; preds = %4, %59
  %62 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %62) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 200) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %62) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink48IDBDatabaseGetAllResultSinkInterceptorForTesting13ReceiveValuesEN3WTF6VectorIN4mojo9StructPtrINS1_14IDBReturnValueEEELj0ENS3_18PartitionAllocatorEEE(%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*, %"class.WTF::Vector.141"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.141", align 8
  %4 = bitcast %"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* %7(%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.WTF::Vector.141", %"class.WTF::Vector.141"* %3, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::Vector.141", %"class.WTF::Vector.141"* %3, i64 0, i32 0, i32 0, i32 2
  %11 = bitcast %"class.WTF::Vector.141"* %1 to i64*
  %12 = bitcast %"class.WTF::Vector.141"* %3 to i64*
  store i64 0, i64* %12, align 8
  %13 = load i64, i64* %11, align 8
  %14 = bitcast %"class.WTF::Vector.141"* %3 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.141", %"class.WTF::Vector.141"* %1, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %9, align 8
  store i32 0, i32* %15, align 4
  %17 = getelementptr inbounds %"class.WTF::Vector.141", %"class.WTF::Vector.141"* %1, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %10, align 4
  store i32 0, i32* %17, align 4
  %19 = bitcast %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* %8 to void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.WTF::Vector.141"*)***
  %20 = load void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.WTF::Vector.141"*)**, void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.WTF::Vector.141"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.WTF::Vector.141"*)*, void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.WTF::Vector.141"*)** %20, i64 2
  %22 = load void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.WTF::Vector.141"*)*, void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.WTF::Vector.141"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* %8, %"class.WTF::Vector.141"* nonnull %3) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.141", %"class.WTF::Vector.141"* %3, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.mojo::StructPtr.144"*, %"class.mojo::StructPtr.144"** %23, align 8
  %25 = icmp eq %"class.mojo::StructPtr.144"* %24, null
  br i1 %25, label %48, label %26, !prof !2

26:                                               ; preds = %2
  %27 = bitcast %"class.mojo::StructPtr.144"* %24 to i8*
  %28 = load i32, i32* %10, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %46, label %30, !prof !3

30:                                               ; preds = %26
  %31 = zext i32 %28 to i64
  %32 = getelementptr inbounds %"class.mojo::StructPtr.144", %"class.mojo::StructPtr.144"* %24, i64 %31
  br label %33

33:                                               ; preds = %40, %30
  %34 = phi %"class.mojo::StructPtr.144"* [ %41, %40 ], [ %24, %30 ]
  %35 = getelementptr inbounds %"class.mojo::StructPtr.144", %"class.mojo::StructPtr.144"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::mojom::blink::IDBReturnValue"*, %"class.blink::mojom::blink::IDBReturnValue"** %35, align 8
  store %"class.blink::mojom::blink::IDBReturnValue"* null, %"class.blink::mojom::blink::IDBReturnValue"** %35, align 8
  %37 = icmp eq %"class.blink::mojom::blink::IDBReturnValue"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %33
  call void @_ZN5blink5mojom5blink14IDBReturnValueD1Ev(%"class.blink::mojom::blink::IDBReturnValue"* nonnull %36) #10
  %39 = bitcast %"class.blink::mojom::blink::IDBReturnValue"* %36 to i8*
  call void @_ZdlPv(i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = getelementptr inbounds %"class.mojo::StructPtr.144", %"class.mojo::StructPtr.144"* %34, i64 1
  %42 = icmp eq %"class.mojo::StructPtr.144"* %41, %32
  br i1 %42, label %43, label %33

43:                                               ; preds = %40
  store i32 0, i32* %10, align 4
  %44 = bitcast %"class.WTF::Vector.141"* %3 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %46

46:                                               ; preds = %43, %26
  %47 = phi i8* [ %45, %43 ], [ %27, %26 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %47) #10
  store %"class.mojo::StructPtr.144"* null, %"class.mojo::StructPtr.144"** %23, align 8
  br label %48

48:                                               ; preds = %2, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink48IDBDatabaseGetAllResultSinkInterceptorForTesting11ReceiveKeysEN3WTF6VectorINSt3__110unique_ptrINS_6IDBKeyENS5_14default_deleteIS7_EEEELj0ENS3_18PartitionAllocatorEEE(%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*, %"class.WTF::Vector.14"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.14", align 8
  %4 = bitcast %"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* %7(%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %3, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %3, i64 0, i32 0, i32 0, i32 2
  %11 = bitcast %"class.WTF::Vector.14"* %1 to i64*
  %12 = bitcast %"class.WTF::Vector.14"* %3 to i64*
  store i64 0, i64* %12, align 8
  %13 = load i64, i64* %11, align 8
  %14 = bitcast %"class.WTF::Vector.14"* %3 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %1, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %9, align 8
  store i32 0, i32* %15, align 4
  %17 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %1, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %10, align 4
  store i32 0, i32* %17, align 4
  %19 = bitcast %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* %8 to void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.WTF::Vector.14"*)***
  %20 = load void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.WTF::Vector.14"*)**, void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.WTF::Vector.14"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.WTF::Vector.14"*)*, void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.WTF::Vector.14"*)** %20, i64 3
  %22 = load void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.WTF::Vector.14"*)*, void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.WTF::Vector.14"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* %8, %"class.WTF::Vector.14"* nonnull %3) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %3, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"** %23, align 8
  %25 = icmp eq %"class.std::__1::unique_ptr.11"* %24, null
  br i1 %25, label %48, label %26, !prof !2

26:                                               ; preds = %2
  %27 = bitcast %"class.std::__1::unique_ptr.11"* %24 to i8*
  %28 = load i32, i32* %10, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %46, label %30, !prof !3

30:                                               ; preds = %26
  %31 = zext i32 %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %24, i64 %31
  br label %33

33:                                               ; preds = %40, %30
  %34 = phi %"class.std::__1::unique_ptr.11"* [ %41, %40 ], [ %24, %30 ]
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %35, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %35, align 8
  %37 = icmp eq %"class.blink::IDBKey"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %33
  call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %36) #10
  %39 = bitcast %"class.blink::IDBKey"* %36 to i8*
  call void @free(i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %34, i64 1
  %42 = icmp eq %"class.std::__1::unique_ptr.11"* %41, %32
  br i1 %42, label %43, label %33

43:                                               ; preds = %40
  store i32 0, i32* %10, align 4
  %44 = bitcast %"class.WTF::Vector.14"* %3 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %46

46:                                               ; preds = %43, %26
  %47 = phi i8* [ %45, %43 ], [ %27, %26 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %47) #10
  store %"class.std::__1::unique_ptr.11"* null, %"class.std::__1::unique_ptr.11"** %23, align 8
  br label %48

48:                                               ; preds = %2, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink48IDBDatabaseGetAllResultSinkInterceptorForTesting7OnErrorEN4mojo9StructPtrINS1_8IDBErrorEEE(%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*, %"class.mojo::StructPtr.38"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr.38", align 8
  %4 = bitcast %"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* %7(%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.mojo::StructPtr.38"* %3 to i64*
  %10 = getelementptr inbounds %"class.mojo::StructPtr.38", %"class.mojo::StructPtr.38"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.mojo::StructPtr.38"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 0, i64* %11, align 8
  %13 = bitcast %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* %8 to void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.mojo::StructPtr.38"*)***
  %14 = load void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.mojo::StructPtr.38"*)**, void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.mojo::StructPtr.38"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.mojo::StructPtr.38"*)*, void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.mojo::StructPtr.38"*)** %14, i64 4
  %16 = load void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.mojo::StructPtr.38"*)*, void (%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*, %"class.mojo::StructPtr.38"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* %8, %"class.mojo::StructPtr.38"* nonnull %3) #10
  %17 = load %"class.blink::mojom::blink::IDBError"*, %"class.blink::mojom::blink::IDBError"** %10, align 8
  store %"class.blink::mojom::blink::IDBError"* null, %"class.blink::mojom::blink::IDBError"** %10, align 8
  %18 = icmp eq %"class.blink::mojom::blink::IDBError"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  call void @_ZN5blink5mojom5blink8IDBErrorD1Ev(%"class.blink::mojom::blink::IDBError"* nonnull %17) #10
  %20 = bitcast %"class.blink::mojom::blink::IDBError"* %17 to i8*
  call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink38IDBDatabaseGetAllResultSinkAsyncWaiterC2EPNS1_27IDBDatabaseGetAllResultSinkE(%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkAsyncWaiter"* nocapture, %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkAsyncWaiter", %"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"* %1, %"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink38IDBDatabaseGetAllResultSinkAsyncWaiterD2Ev(%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting17RenameObjectStoreEllRKN3WTF6StringE(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %6, i64 19
  %8 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::IDBDatabase"* %8(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0) #10
  %10 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %9 to void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.WTF::String"*)***
  %11 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.WTF::String"*)**, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.WTF::String"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.WTF::String"*)** %11, i64 2
  %13 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.WTF::String"*)** %12, align 8
  tail call void %13(%"class.blink::mojom::blink::IDBDatabase"* %9, i64 %1, i64 %2, %"class.WTF::String"* dereferenceable(8) %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting17CreateTransactionEN4mojo25PendingAssociatedReceiverINS1_14IDBTransactionEEElRKN3WTF6VectorIlLj0ENS7_18PartitionAllocatorEEENS0_18IDBTransactionModeENS0_24IDBTransactionDurabilityE(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, %"class.mojo::PendingAssociatedReceiver"*, i64, %"class.WTF::Vector.153"* dereferenceable(16), i32, i32) unnamed_addr #0 align 2 {
  %7 = alloca %"class.mojo::PendingAssociatedReceiver", align 8
  %8 = bitcast %"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)***
  %9 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %9, i64 19
  %11 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %10, align 8
  %12 = tail call %"class.blink::mojom::blink::IDBDatabase"* %11(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0) #10
  %13 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %7, i64 0, i32 0
  %14 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %1, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %13, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %14) #10
  %15 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %12 to void (%"class.blink::mojom::blink::IDBDatabase"*, %"class.mojo::PendingAssociatedReceiver"*, i64, %"class.WTF::Vector.153"*, i32, i32)***
  %16 = load void (%"class.blink::mojom::blink::IDBDatabase"*, %"class.mojo::PendingAssociatedReceiver"*, i64, %"class.WTF::Vector.153"*, i32, i32)**, void (%"class.blink::mojom::blink::IDBDatabase"*, %"class.mojo::PendingAssociatedReceiver"*, i64, %"class.WTF::Vector.153"*, i32, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*, %"class.mojo::PendingAssociatedReceiver"*, i64, %"class.WTF::Vector.153"*, i32, i32)*, void (%"class.blink::mojom::blink::IDBDatabase"*, %"class.mojo::PendingAssociatedReceiver"*, i64, %"class.WTF::Vector.153"*, i32, i32)** %16, i64 3
  %18 = load void (%"class.blink::mojom::blink::IDBDatabase"*, %"class.mojo::PendingAssociatedReceiver"*, i64, %"class.WTF::Vector.153"*, i32, i32)*, void (%"class.blink::mojom::blink::IDBDatabase"*, %"class.mojo::PendingAssociatedReceiver"*, i64, %"class.WTF::Vector.153"*, i32, i32)** %17, align 8
  call void %18(%"class.blink::mojom::blink::IDBDatabase"* %12, %"class.mojo::PendingAssociatedReceiver"* nonnull %7, i64 %2, %"class.WTF::Vector.153"* dereferenceable(16) %3, i32 %4, i32 %5) #10
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting5CloseEv(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %3, i64 19
  %5 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::blink::IDBDatabase"* %5(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0) #10
  %7 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %6 to void (%"class.blink::mojom::blink::IDBDatabase"*)***
  %8 = load void (%"class.blink::mojom::blink::IDBDatabase"*)**, void (%"class.blink::mojom::blink::IDBDatabase"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*)** %8, i64 4
  %10 = load void (%"class.blink::mojom::blink::IDBDatabase"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::blink::IDBDatabase"* %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting20VersionChangeIgnoredEv(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %3, i64 19
  %5 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::blink::IDBDatabase"* %5(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0) #10
  %7 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %6 to void (%"class.blink::mojom::blink::IDBDatabase"*)***
  %8 = load void (%"class.blink::mojom::blink::IDBDatabase"*)**, void (%"class.blink::mojom::blink::IDBDatabase"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*)** %8, i64 5
  %10 = load void (%"class.blink::mojom::blink::IDBDatabase"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::blink::IDBDatabase"* %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting3GetElllN4mojo9StructPtrINS1_11IDBKeyRangeEEEbN4base12OnceCallbackIFvNS4_INS1_20IDBDatabaseGetResultEEEEEE(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, i64, %"class.mojo::StructPtr.158"* nocapture, i1 zeroext, %"class.base::OnceCallback.165"* nocapture) unnamed_addr #0 align 2 {
  %8 = alloca %"class.mojo::StructPtr.158", align 8
  %9 = alloca %"class.base::OnceCallback.165", align 8
  %10 = bitcast %"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)***
  %11 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %11, i64 19
  %13 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %12, align 8
  %14 = tail call %"class.blink::mojom::blink::IDBDatabase"* %13(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0) #10
  %15 = bitcast %"class.mojo::StructPtr.158"* %8 to i64*
  %16 = getelementptr inbounds %"class.mojo::StructPtr.158", %"class.mojo::StructPtr.158"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.mojo::StructPtr.158"* %4 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 0, i64* %17, align 8
  %19 = getelementptr inbounds %"class.base::OnceCallback.165", %"class.base::OnceCallback.165"* %6, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::OnceCallback.165"* %6 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.base::OnceCallback.165"* %9 to i64*
  store i64 %21, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8
  %23 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %14 to void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, %"class.base::OnceCallback.165"*)***
  %24 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, %"class.base::OnceCallback.165"*)**, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, %"class.base::OnceCallback.165"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, %"class.base::OnceCallback.165"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, %"class.base::OnceCallback.165"*)** %24, i64 6
  %26 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, %"class.base::OnceCallback.165"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, %"class.base::OnceCallback.165"*)** %25, align 8
  call void %26(%"class.blink::mojom::blink::IDBDatabase"* %14, i64 %1, i64 %2, i64 %3, %"class.mojo::StructPtr.158"* nonnull %8, i1 zeroext %5, %"class.base::OnceCallback.165"* nonnull %9) #10
  %27 = getelementptr inbounds %"class.base::OnceCallback.165", %"class.base::OnceCallback.165"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #10
  %28 = load %"class.blink::mojom::blink::IDBKeyRange"*, %"class.blink::mojom::blink::IDBKeyRange"** %16, align 8
  store %"class.blink::mojom::blink::IDBKeyRange"* null, %"class.blink::mojom::blink::IDBKeyRange"** %16, align 8
  %29 = icmp eq %"class.blink::mojom::blink::IDBKeyRange"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %7
  call void @_ZN5blink5mojom5blink11IDBKeyRangeD1Ev(%"class.blink::mojom::blink::IDBKeyRange"* nonnull %28) #10
  %31 = bitcast %"class.blink::mojom::blink::IDBKeyRange"* %28 to i8*
  call void @_ZdlPv(i8* %31) #11
  br label %32

32:                                               ; preds = %7, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting6GetAllElllN4mojo9StructPtrINS1_11IDBKeyRangeEEEblN4base12OnceCallbackIFvNS3_15PendingReceiverINS1_27IDBDatabaseGetAllResultSinkEEEEEE(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, i64, %"class.mojo::StructPtr.158"* nocapture, i1 zeroext, i64, %"class.base::OnceCallback.166"* nocapture) unnamed_addr #0 align 2 {
  %9 = alloca %"class.mojo::StructPtr.158", align 8
  %10 = alloca %"class.base::OnceCallback.166", align 8
  %11 = bitcast %"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)***
  %12 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %12, i64 19
  %14 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %13, align 8
  %15 = tail call %"class.blink::mojom::blink::IDBDatabase"* %14(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0) #10
  %16 = bitcast %"class.mojo::StructPtr.158"* %9 to i64*
  %17 = getelementptr inbounds %"class.mojo::StructPtr.158", %"class.mojo::StructPtr.158"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.mojo::StructPtr.158"* %4 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 0, i64* %18, align 8
  %20 = getelementptr inbounds %"class.base::OnceCallback.166", %"class.base::OnceCallback.166"* %7, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::OnceCallback.166"* %7 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.base::OnceCallback.166"* %10 to i64*
  store i64 %22, i64* %23, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8
  %24 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %15 to void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, i64, %"class.base::OnceCallback.166"*)***
  %25 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, i64, %"class.base::OnceCallback.166"*)**, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, i64, %"class.base::OnceCallback.166"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, i64, %"class.base::OnceCallback.166"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, i64, %"class.base::OnceCallback.166"*)** %25, i64 7
  %27 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, i64, %"class.base::OnceCallback.166"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, i64, %"class.base::OnceCallback.166"*)** %26, align 8
  call void %27(%"class.blink::mojom::blink::IDBDatabase"* %15, i64 %1, i64 %2, i64 %3, %"class.mojo::StructPtr.158"* nonnull %9, i1 zeroext %5, i64 %6, %"class.base::OnceCallback.166"* nonnull %10) #10
  %28 = getelementptr inbounds %"class.base::OnceCallback.166", %"class.base::OnceCallback.166"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #10
  %29 = load %"class.blink::mojom::blink::IDBKeyRange"*, %"class.blink::mojom::blink::IDBKeyRange"** %17, align 8
  store %"class.blink::mojom::blink::IDBKeyRange"* null, %"class.blink::mojom::blink::IDBKeyRange"** %17, align 8
  %30 = icmp eq %"class.blink::mojom::blink::IDBKeyRange"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %8
  call void @_ZN5blink5mojom5blink11IDBKeyRangeD1Ev(%"class.blink::mojom::blink::IDBKeyRange"* nonnull %29) #10
  %32 = bitcast %"class.blink::mojom::blink::IDBKeyRange"* %29 to i8*
  call void @_ZdlPv(i8* %32) #11
  br label %33

33:                                               ; preds = %8, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting12SetIndexKeysEllNSt3__110unique_ptrINS_6IDBKeyENS3_14default_deleteIS5_EEEEN3WTF6VectorINS_12IDBIndexKeysELj0ENS9_18PartitionAllocatorEEE(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, %"class.blink::IDBKey"*, %"class.WTF::Vector.104"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::Vector.104", align 8
  %7 = bitcast %"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)***
  %8 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %8, i64 19
  %10 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.blink::mojom::blink::IDBDatabase"* %10(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0) #10
  %12 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %6, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %6, i64 0, i32 0, i32 0, i32 2
  %14 = bitcast %"class.WTF::Vector.104"* %4 to i64*
  %15 = bitcast %"class.WTF::Vector.104"* %6 to i64*
  store i64 0, i64* %15, align 8
  %16 = load i64, i64* %14, align 8
  %17 = bitcast %"class.WTF::Vector.104"* %6 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %4, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %12, align 8
  store i32 0, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %4, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %13, align 4
  store i32 0, i32* %20, align 4
  %22 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %11 to void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.blink::IDBKey"*, %"class.WTF::Vector.104"*)***
  %23 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.blink::IDBKey"*, %"class.WTF::Vector.104"*)**, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.blink::IDBKey"*, %"class.WTF::Vector.104"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.blink::IDBKey"*, %"class.WTF::Vector.104"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.blink::IDBKey"*, %"class.WTF::Vector.104"*)** %23, i64 8
  %25 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.blink::IDBKey"*, %"class.WTF::Vector.104"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.blink::IDBKey"*, %"class.WTF::Vector.104"*)** %24, align 8
  call void %25(%"class.blink::mojom::blink::IDBDatabase"* %11, i64 %1, i64 %2, %"class.blink::IDBKey"* %3, %"class.WTF::Vector.104"* nonnull %6) #10
  %26 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %6, i64 0, i32 0, i32 0, i32 0
  %27 = load %"struct.blink::IDBIndexKeys"*, %"struct.blink::IDBIndexKeys"** %26, align 8
  %28 = icmp eq %"struct.blink::IDBIndexKeys"* %27, null
  br i1 %28, label %73, label %29, !prof !2

29:                                               ; preds = %5
  %30 = bitcast %"struct.blink::IDBIndexKeys"* %27 to i8*
  %31 = load i32, i32* %13, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %71, label %33, !prof !3

33:                                               ; preds = %29
  %34 = zext i32 %31 to i64
  %35 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %27, i64 %34
  br label %36

36:                                               ; preds = %65, %33
  %37 = phi %"struct.blink::IDBIndexKeys"* [ %66, %65 ], [ %27, %33 ]
  %38 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %37, i64 0, i32 1
  %39 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"** %39, align 8
  %41 = icmp eq %"class.std::__1::unique_ptr.11"* %40, null
  br i1 %41, label %65, label %42, !prof !2

42:                                               ; preds = %36
  %43 = bitcast %"class.std::__1::unique_ptr.11"* %40 to i8*
  %44 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %37, i64 0, i32 1, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %63, label %47, !prof !3

47:                                               ; preds = %42
  %48 = zext i32 %45 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %40, i64 %48
  br label %50

50:                                               ; preds = %57, %47
  %51 = phi %"class.std::__1::unique_ptr.11"* [ %58, %57 ], [ %40, %47 ]
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %52, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %52, align 8
  %54 = icmp eq %"class.blink::IDBKey"* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %50
  call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %53) #10
  %56 = bitcast %"class.blink::IDBKey"* %53 to i8*
  call void @free(i8* %56) #10
  br label %57

57:                                               ; preds = %55, %50
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %51, i64 1
  %59 = icmp eq %"class.std::__1::unique_ptr.11"* %58, %49
  br i1 %59, label %60, label %50

60:                                               ; preds = %57
  store i32 0, i32* %44, align 4
  %61 = bitcast %"class.WTF::Vector.14"* %38 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %42
  %64 = phi i8* [ %62, %60 ], [ %43, %42 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #10
  store %"class.std::__1::unique_ptr.11"* null, %"class.std::__1::unique_ptr.11"** %39, align 8
  br label %65

65:                                               ; preds = %63, %36
  %66 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %37, i64 1
  %67 = icmp eq %"struct.blink::IDBIndexKeys"* %66, %35
  br i1 %67, label %68, label %36

68:                                               ; preds = %65
  store i32 0, i32* %13, align 4
  %69 = bitcast %"class.WTF::Vector.104"* %6 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %68, %29
  %72 = phi i8* [ %70, %68 ], [ %30, %29 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %72) #10
  store %"struct.blink::IDBIndexKeys"* null, %"struct.blink::IDBIndexKeys"** %26, align 8
  br label %73

73:                                               ; preds = %71, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting15SetIndexesReadyEllRKN3WTF6VectorIlLj0ENS3_18PartitionAllocatorEEE(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, %"class.WTF::Vector.153"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %6, i64 19
  %8 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::IDBDatabase"* %8(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0) #10
  %10 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %9 to void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.WTF::Vector.153"*)***
  %11 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.WTF::Vector.153"*)**, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.WTF::Vector.153"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.WTF::Vector.153"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.WTF::Vector.153"*)** %11, i64 9
  %13 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.WTF::Vector.153"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.WTF::Vector.153"*)** %12, align 8
  tail call void %13(%"class.blink::mojom::blink::IDBDatabase"* %9, i64 %1, i64 %2, %"class.WTF::Vector.153"* dereferenceable(16) %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting10OpenCursorElllN4mojo9StructPtrINS1_11IDBKeyRangeEEENS0_18IDBCursorDirectionEbNS0_11IDBTaskTypeEN4base12OnceCallbackIFvNS4_INS1_27IDBDatabaseOpenCursorResultEEEEEE(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, i64, %"class.mojo::StructPtr.158"* nocapture, i32, i1 zeroext, i32, %"class.base::OnceCallback.167"* nocapture) unnamed_addr #0 align 2 {
  %10 = alloca %"class.mojo::StructPtr.158", align 8
  %11 = alloca %"class.base::OnceCallback.167", align 8
  %12 = bitcast %"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)***
  %13 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %13, i64 19
  %15 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %14, align 8
  %16 = tail call %"class.blink::mojom::blink::IDBDatabase"* %15(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0) #10
  %17 = bitcast %"class.mojo::StructPtr.158"* %10 to i64*
  %18 = getelementptr inbounds %"class.mojo::StructPtr.158", %"class.mojo::StructPtr.158"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.mojo::StructPtr.158"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %17, align 8
  store i64 0, i64* %19, align 8
  %21 = getelementptr inbounds %"class.base::OnceCallback.167", %"class.base::OnceCallback.167"* %8, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.base::OnceCallback.167"* %8 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.base::OnceCallback.167"* %11 to i64*
  store i64 %23, i64* %24, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %21, align 8
  %25 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %16 to void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i32, i1, i32, %"class.base::OnceCallback.167"*)***
  %26 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i32, i1, i32, %"class.base::OnceCallback.167"*)**, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i32, i1, i32, %"class.base::OnceCallback.167"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i32, i1, i32, %"class.base::OnceCallback.167"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i32, i1, i32, %"class.base::OnceCallback.167"*)** %26, i64 10
  %28 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i32, i1, i32, %"class.base::OnceCallback.167"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i32, i1, i32, %"class.base::OnceCallback.167"*)** %27, align 8
  call void %28(%"class.blink::mojom::blink::IDBDatabase"* %16, i64 %1, i64 %2, i64 %3, %"class.mojo::StructPtr.158"* nonnull %10, i32 %5, i1 zeroext %6, i32 %7, %"class.base::OnceCallback.167"* nonnull %11) #10
  %29 = getelementptr inbounds %"class.base::OnceCallback.167", %"class.base::OnceCallback.167"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #10
  %30 = load %"class.blink::mojom::blink::IDBKeyRange"*, %"class.blink::mojom::blink::IDBKeyRange"** %18, align 8
  store %"class.blink::mojom::blink::IDBKeyRange"* null, %"class.blink::mojom::blink::IDBKeyRange"** %18, align 8
  %31 = icmp eq %"class.blink::mojom::blink::IDBKeyRange"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %9
  call void @_ZN5blink5mojom5blink11IDBKeyRangeD1Ev(%"class.blink::mojom::blink::IDBKeyRange"* nonnull %30) #10
  %33 = bitcast %"class.blink::mojom::blink::IDBKeyRange"* %30 to i8*
  call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %9, %32
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting5CountElllN4mojo9StructPtrINS1_11IDBKeyRangeEEENS3_23PendingAssociatedRemoteINS1_12IDBCallbacksEEE(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, i64, %"class.mojo::StructPtr.158"* nocapture, %"class.mojo::PendingAssociatedRemote.168"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.mojo::StructPtr.158", align 8
  %8 = alloca %"class.mojo::PendingAssociatedRemote.168", align 8
  %9 = bitcast %"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)***
  %10 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %10, i64 19
  %12 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %11, align 8
  %13 = tail call %"class.blink::mojom::blink::IDBDatabase"* %12(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0) #10
  %14 = bitcast %"class.mojo::StructPtr.158"* %7 to i64*
  %15 = getelementptr inbounds %"class.mojo::StructPtr.158", %"class.mojo::StructPtr.158"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.mojo::StructPtr.158"* %4 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %14, align 8
  store i64 0, i64* %16, align 8
  %18 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %8, i64 0, i32 0
  %19 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %5, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %18, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %19) #10
  %20 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %8, i64 0, i32 1
  %21 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %5, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %20, align 8
  %23 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %13 to void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, %"class.mojo::PendingAssociatedRemote.168"*)***
  %24 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, %"class.mojo::PendingAssociatedRemote.168"*)**, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, %"class.mojo::PendingAssociatedRemote.168"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, %"class.mojo::PendingAssociatedRemote.168"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, %"class.mojo::PendingAssociatedRemote.168"*)** %24, i64 11
  %26 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, %"class.mojo::PendingAssociatedRemote.168"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, %"class.mojo::PendingAssociatedRemote.168"*)** %25, align 8
  call void %26(%"class.blink::mojom::blink::IDBDatabase"* %13, i64 %1, i64 %2, i64 %3, %"class.mojo::StructPtr.158"* nonnull %7, %"class.mojo::PendingAssociatedRemote.168"* nonnull %8) #10
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %18) #10
  %27 = load %"class.blink::mojom::blink::IDBKeyRange"*, %"class.blink::mojom::blink::IDBKeyRange"** %15, align 8
  store %"class.blink::mojom::blink::IDBKeyRange"* null, %"class.blink::mojom::blink::IDBKeyRange"** %15, align 8
  %28 = icmp eq %"class.blink::mojom::blink::IDBKeyRange"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %6
  call void @_ZN5blink5mojom5blink11IDBKeyRangeD1Ev(%"class.blink::mojom::blink::IDBKeyRange"* nonnull %27) #10
  %30 = bitcast %"class.blink::mojom::blink::IDBKeyRange"* %27 to i8*
  call void @_ZdlPv(i8* %30) #11
  br label %31

31:                                               ; preds = %6, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting11DeleteRangeEllN4mojo9StructPtrINS1_11IDBKeyRangeEEENS3_23PendingAssociatedRemoteINS1_12IDBCallbacksEEE(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, %"class.mojo::StructPtr.158"* nocapture, %"class.mojo::PendingAssociatedRemote.168"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.mojo::StructPtr.158", align 8
  %7 = alloca %"class.mojo::PendingAssociatedRemote.168", align 8
  %8 = bitcast %"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)***
  %9 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %9, i64 19
  %11 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %10, align 8
  %12 = tail call %"class.blink::mojom::blink::IDBDatabase"* %11(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0) #10
  %13 = bitcast %"class.mojo::StructPtr.158"* %6 to i64*
  %14 = getelementptr inbounds %"class.mojo::StructPtr.158", %"class.mojo::StructPtr.158"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.mojo::StructPtr.158"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 0, i64* %15, align 8
  %17 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %7, i64 0, i32 0
  %18 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %4, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %17, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %18) #10
  %19 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %7, i64 0, i32 1
  %20 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %4, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  store i32 %21, i32* %19, align 8
  %22 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %12 to void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::StructPtr.158"*, %"class.mojo::PendingAssociatedRemote.168"*)***
  %23 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::StructPtr.158"*, %"class.mojo::PendingAssociatedRemote.168"*)**, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::StructPtr.158"*, %"class.mojo::PendingAssociatedRemote.168"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::StructPtr.158"*, %"class.mojo::PendingAssociatedRemote.168"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::StructPtr.158"*, %"class.mojo::PendingAssociatedRemote.168"*)** %23, i64 12
  %25 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::StructPtr.158"*, %"class.mojo::PendingAssociatedRemote.168"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::StructPtr.158"*, %"class.mojo::PendingAssociatedRemote.168"*)** %24, align 8
  call void %25(%"class.blink::mojom::blink::IDBDatabase"* %12, i64 %1, i64 %2, %"class.mojo::StructPtr.158"* nonnull %6, %"class.mojo::PendingAssociatedRemote.168"* nonnull %7) #10
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %17) #10
  %26 = load %"class.blink::mojom::blink::IDBKeyRange"*, %"class.blink::mojom::blink::IDBKeyRange"** %14, align 8
  store %"class.blink::mojom::blink::IDBKeyRange"* null, %"class.blink::mojom::blink::IDBKeyRange"** %14, align 8
  %27 = icmp eq %"class.blink::mojom::blink::IDBKeyRange"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %5
  call void @_ZN5blink5mojom5blink11IDBKeyRangeD1Ev(%"class.blink::mojom::blink::IDBKeyRange"* nonnull %26) #10
  %29 = bitcast %"class.blink::mojom::blink::IDBKeyRange"* %26 to i8*
  call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %5, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting28GetKeyGeneratorCurrentNumberEllN4mojo23PendingAssociatedRemoteINS1_12IDBCallbacksEEE(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, %"class.mojo::PendingAssociatedRemote.168"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.mojo::PendingAssociatedRemote.168", align 8
  %6 = bitcast %"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %7, i64 19
  %9 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::IDBDatabase"* %9(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0) #10
  %11 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %3, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %11, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %12) #10
  %13 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %5, i64 0, i32 1
  %14 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %3, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  store i32 %15, i32* %13, align 8
  %16 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %10 to void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::PendingAssociatedRemote.168"*)***
  %17 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::PendingAssociatedRemote.168"*)**, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::PendingAssociatedRemote.168"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::PendingAssociatedRemote.168"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::PendingAssociatedRemote.168"*)** %17, i64 13
  %19 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::PendingAssociatedRemote.168"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::PendingAssociatedRemote.168"*)** %18, align 8
  call void %19(%"class.blink::mojom::blink::IDBDatabase"* %10, i64 %1, i64 %2, %"class.mojo::PendingAssociatedRemote.168"* nonnull %5) #10
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %11) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting5ClearEllN4mojo23PendingAssociatedRemoteINS1_12IDBCallbacksEEE(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, %"class.mojo::PendingAssociatedRemote.168"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.mojo::PendingAssociatedRemote.168", align 8
  %6 = bitcast %"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %7, i64 19
  %9 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::IDBDatabase"* %9(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0) #10
  %11 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %3, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %11, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %12) #10
  %13 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %5, i64 0, i32 1
  %14 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %3, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  store i32 %15, i32* %13, align 8
  %16 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %10 to void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::PendingAssociatedRemote.168"*)***
  %17 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::PendingAssociatedRemote.168"*)**, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::PendingAssociatedRemote.168"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::PendingAssociatedRemote.168"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::PendingAssociatedRemote.168"*)** %17, i64 14
  %19 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::PendingAssociatedRemote.168"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, %"class.mojo::PendingAssociatedRemote.168"*)** %18, align 8
  call void %19(%"class.blink::mojom::blink::IDBDatabase"* %10, i64 %1, i64 %2, %"class.mojo::PendingAssociatedRemote.168"* nonnull %5) #10
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %11) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting11CreateIndexElllRKN3WTF6StringERKNS_10IDBKeyPathEbb(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::IDBKeyPath"* dereferenceable(32), i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %9 = bitcast %"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)***
  %10 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %10, i64 19
  %12 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %11, align 8
  %13 = tail call %"class.blink::mojom::blink::IDBDatabase"* %12(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0) #10
  %14 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %13 to void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1, i1)***
  %15 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1, i1)**, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1, i1)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1, i1)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1, i1)** %15, i64 15
  %17 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1, i1)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1, i1)** %16, align 8
  tail call void %17(%"class.blink::mojom::blink::IDBDatabase"* %13, i64 %1, i64 %2, i64 %3, %"class.WTF::String"* dereferenceable(8) %4, %"class.blink::IDBKeyPath"* dereferenceable(32) %5, i1 zeroext %6, i1 zeroext %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting11DeleteIndexElll(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, i64) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %6, i64 19
  %8 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::IDBDatabase"* %8(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0) #10
  %10 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %9 to void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64)***
  %11 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64)**, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64)** %11, i64 16
  %13 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64)** %12, align 8
  tail call void %13(%"class.blink::mojom::blink::IDBDatabase"* %9, i64 %1, i64 %2, i64 %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting11RenameIndexElllRKN3WTF6StringE(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64, i64, i64, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %7, i64 19
  %9 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::IDBDatabase"* %9(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0) #10
  %11 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %10 to void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.WTF::String"*)***
  %12 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.WTF::String"*)**, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.WTF::String"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.WTF::String"*)** %12, i64 17
  %14 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.WTF::String"*)** %13, align 8
  tail call void %14(%"class.blink::mojom::blink::IDBDatabase"* %10, i64 %1, i64 %2, i64 %3, %"class.WTF::String"* dereferenceable(8) %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTesting5AbortEl(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*, i64) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %4, i64 19
  %6 = load %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBDatabase"* (%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::IDBDatabase"* %6(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %7 to void (%"class.blink::mojom::blink::IDBDatabase"*, i64)***
  %9 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64)**, void (%"class.blink::mojom::blink::IDBDatabase"*, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*, i64)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64)** %9, i64 18
  %11 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::IDBDatabase"* %7, i64 %1) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink22IDBDatabaseAsyncWaiterC2EPNS1_11IDBDatabaseE(%"class.blink::mojom::blink::IDBDatabaseAsyncWaiter"* nocapture, %"class.blink::mojom::blink::IDBDatabase"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabaseAsyncWaiter", %"class.blink::mojom::blink::IDBDatabaseAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::IDBDatabase"* %1, %"class.blink::mojom::blink::IDBDatabase"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink22IDBDatabaseAsyncWaiterD2Ev(%"class.blink::mojom::blink::IDBDatabaseAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink22IDBDatabaseAsyncWaiter3GetElllN4mojo9StructPtrINS1_11IDBKeyRangeEEEbPNS4_INS1_20IDBDatabaseGetResultEEE(%"class.blink::mojom::blink::IDBDatabaseAsyncWaiter"* nocapture readonly, i64, i64, i64, %"class.mojo::StructPtr.158"* nocapture, i1 zeroext, %"class.mojo::StructPtr.170"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.base::RunLoop", align 8
  %9 = alloca %"class.mojo::StructPtr.158", align 8
  %10 = alloca %"class.base::OnceCallback.165", align 8
  %11 = alloca %"class.base::Location", align 8
  %12 = ptrtoint %"class.mojo::StructPtr.170"* %6 to i64
  %13 = bitcast %"class.base::RunLoop"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %8, i32 0) #10
  %14 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabaseAsyncWaiter", %"class.blink::mojom::blink::IDBDatabaseAsyncWaiter"* %0, i64 0, i32 0
  %15 = load %"class.blink::mojom::blink::IDBDatabase"*, %"class.blink::mojom::blink::IDBDatabase"** %14, align 8
  %16 = bitcast %"class.mojo::StructPtr.158"* %9 to i64*
  %17 = getelementptr inbounds %"class.mojo::StructPtr.158", %"class.mojo::StructPtr.158"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.mojo::StructPtr.158"* %4 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 0, i64* %18, align 8
  %20 = ptrtoint %"class.base::RunLoop"* %8 to i64
  %21 = call i8* @_Znwm(i64 56) #11, !noalias !29
  %22 = bitcast i8* %21 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %22, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.170"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink22IDBDatabaseAsyncWaiter3GetElllN4mojo9StructPtrINS5_11IDBKeyRangeEEEbPNS8_INS5_20IDBDatabaseGetResultEEEE3$_5JPNS_7RunLoopESD_EEEFvSC_EE7RunOnceEPNS0_13BindStateBaseEOSC_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink22IDBDatabaseAsyncWaiter3GetElllN4mojo9StructPtrINS4_11IDBKeyRangeEEEbPNS7_INS4_20IDBDatabaseGetResultEEEE3$_5JPNS_7RunLoopESC_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !29
  %23 = getelementptr inbounds i8, i8* %21, i64 40
  %24 = bitcast i8* %23 to i64*
  store i64 %20, i64* %24, align 8, !noalias !29
  %25 = getelementptr inbounds i8, i8* %21, i64 48
  %26 = bitcast i8* %25 to i64*
  store i64 %12, i64* %26, align 8, !noalias !29
  %27 = bitcast %"class.base::OnceCallback.165"* %10 to i8**
  store i8* %21, i8** %27, align 8, !alias.scope !29
  %28 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %15 to void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, %"class.base::OnceCallback.165"*)***
  %29 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, %"class.base::OnceCallback.165"*)**, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, %"class.base::OnceCallback.165"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, %"class.base::OnceCallback.165"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, %"class.base::OnceCallback.165"*)** %29, i64 6
  %31 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, %"class.base::OnceCallback.165"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, %"class.base::OnceCallback.165"*)** %30, align 8
  call void %31(%"class.blink::mojom::blink::IDBDatabase"* %15, i64 %1, i64 %2, i64 %3, %"class.mojo::StructPtr.158"* nonnull %9, i1 zeroext %5, %"class.base::OnceCallback.165"* nonnull %10) #10
  %32 = getelementptr inbounds %"class.base::OnceCallback.165", %"class.base::OnceCallback.165"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #10
  %33 = load %"class.blink::mojom::blink::IDBKeyRange"*, %"class.blink::mojom::blink::IDBKeyRange"** %17, align 8
  store %"class.blink::mojom::blink::IDBKeyRange"* null, %"class.blink::mojom::blink::IDBKeyRange"** %17, align 8
  %34 = icmp eq %"class.blink::mojom::blink::IDBKeyRange"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %7
  call void @_ZN5blink5mojom5blink11IDBKeyRangeD1Ev(%"class.blink::mojom::blink::IDBKeyRange"* nonnull %33) #10
  %36 = bitcast %"class.blink::mojom::blink::IDBKeyRange"* %33 to i8*
  call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %7, %35
  %38 = bitcast %"class.base::Location"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 291) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %8, %"class.base::Location"* nonnull dereferenceable(32) %11) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink22IDBDatabaseAsyncWaiter6GetAllElllN4mojo9StructPtrINS1_11IDBKeyRangeEEEblPNS3_15PendingReceiverINS1_27IDBDatabaseGetAllResultSinkEEE(%"class.blink::mojom::blink::IDBDatabaseAsyncWaiter"* nocapture readonly, i64, i64, i64, %"class.mojo::StructPtr.158"* nocapture, i1 zeroext, i64, %"class.mojo::PendingReceiver"*) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.base::RunLoop", align 8
  %10 = alloca %"class.mojo::StructPtr.158", align 8
  %11 = alloca %"class.base::OnceCallback.166", align 8
  %12 = alloca %"class.base::Location", align 8
  %13 = ptrtoint %"class.mojo::PendingReceiver"* %7 to i64
  %14 = bitcast %"class.base::RunLoop"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %9, i32 0) #10
  %15 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabaseAsyncWaiter", %"class.blink::mojom::blink::IDBDatabaseAsyncWaiter"* %0, i64 0, i32 0
  %16 = load %"class.blink::mojom::blink::IDBDatabase"*, %"class.blink::mojom::blink::IDBDatabase"** %15, align 8
  %17 = bitcast %"class.mojo::StructPtr.158"* %10 to i64*
  %18 = getelementptr inbounds %"class.mojo::StructPtr.158", %"class.mojo::StructPtr.158"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.mojo::StructPtr.158"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %17, align 8
  store i64 0, i64* %19, align 8
  %21 = ptrtoint %"class.base::RunLoop"* %9 to i64
  %22 = call i8* @_Znwm(i64 56) #11, !noalias !34
  %23 = bitcast i8* %22 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %23, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::PendingReceiver"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink22IDBDatabaseAsyncWaiter6GetAllElllN4mojo9StructPtrINS5_11IDBKeyRangeEEEblPNS7_15PendingReceiverINS5_27IDBDatabaseGetAllResultSinkEEEE3$_6JPNS_7RunLoopESE_EEEFvSD_EE7RunOnceEPNS0_13BindStateBaseEOSD_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink22IDBDatabaseAsyncWaiter6GetAllElllN4mojo9StructPtrINS4_11IDBKeyRangeEEEblPNS6_15PendingReceiverINS4_27IDBDatabaseGetAllResultSinkEEEE3$_6JPNS_7RunLoopESD_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !34
  %24 = getelementptr inbounds i8, i8* %22, i64 40
  %25 = bitcast i8* %24 to i64*
  store i64 %21, i64* %25, align 8, !noalias !34
  %26 = getelementptr inbounds i8, i8* %22, i64 48
  %27 = bitcast i8* %26 to i64*
  store i64 %13, i64* %27, align 8, !noalias !34
  %28 = bitcast %"class.base::OnceCallback.166"* %11 to i8**
  store i8* %22, i8** %28, align 8, !alias.scope !34
  %29 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %16 to void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, i64, %"class.base::OnceCallback.166"*)***
  %30 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, i64, %"class.base::OnceCallback.166"*)**, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, i64, %"class.base::OnceCallback.166"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, i64, %"class.base::OnceCallback.166"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, i64, %"class.base::OnceCallback.166"*)** %30, i64 7
  %32 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, i64, %"class.base::OnceCallback.166"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i1, i64, %"class.base::OnceCallback.166"*)** %31, align 8
  call void %32(%"class.blink::mojom::blink::IDBDatabase"* %16, i64 %1, i64 %2, i64 %3, %"class.mojo::StructPtr.158"* nonnull %10, i1 zeroext %5, i64 %6, %"class.base::OnceCallback.166"* nonnull %11) #10
  %33 = getelementptr inbounds %"class.base::OnceCallback.166", %"class.base::OnceCallback.166"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #10
  %34 = load %"class.blink::mojom::blink::IDBKeyRange"*, %"class.blink::mojom::blink::IDBKeyRange"** %18, align 8
  store %"class.blink::mojom::blink::IDBKeyRange"* null, %"class.blink::mojom::blink::IDBKeyRange"** %18, align 8
  %35 = icmp eq %"class.blink::mojom::blink::IDBKeyRange"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %8
  call void @_ZN5blink5mojom5blink11IDBKeyRangeD1Ev(%"class.blink::mojom::blink::IDBKeyRange"* nonnull %34) #10
  %37 = bitcast %"class.blink::mojom::blink::IDBKeyRange"* %34 to i8*
  call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %8, %36
  %39 = bitcast %"class.base::Location"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 306) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %9, %"class.base::Location"* nonnull dereferenceable(32) %12) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink22IDBDatabaseAsyncWaiter10OpenCursorElllN4mojo9StructPtrINS1_11IDBKeyRangeEEENS0_18IDBCursorDirectionEbNS0_11IDBTaskTypeEPNS4_INS1_27IDBDatabaseOpenCursorResultEEE(%"class.blink::mojom::blink::IDBDatabaseAsyncWaiter"* nocapture readonly, i64, i64, i64, %"class.mojo::StructPtr.158"* nocapture, i32, i1 zeroext, i32, %"class.mojo::StructPtr.184"*) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.base::RunLoop", align 8
  %11 = alloca %"class.mojo::StructPtr.158", align 8
  %12 = alloca %"class.base::OnceCallback.167", align 8
  %13 = alloca %"class.base::Location", align 8
  %14 = ptrtoint %"class.mojo::StructPtr.184"* %8 to i64
  %15 = bitcast %"class.base::RunLoop"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %10, i32 0) #10
  %16 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabaseAsyncWaiter", %"class.blink::mojom::blink::IDBDatabaseAsyncWaiter"* %0, i64 0, i32 0
  %17 = load %"class.blink::mojom::blink::IDBDatabase"*, %"class.blink::mojom::blink::IDBDatabase"** %16, align 8
  %18 = bitcast %"class.mojo::StructPtr.158"* %11 to i64*
  %19 = getelementptr inbounds %"class.mojo::StructPtr.158", %"class.mojo::StructPtr.158"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.mojo::StructPtr.158"* %4 to i64*
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %18, align 8
  store i64 0, i64* %20, align 8
  %22 = ptrtoint %"class.base::RunLoop"* %10 to i64
  %23 = call i8* @_Znwm(i64 56) #11, !noalias !39
  %24 = bitcast i8* %23 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %24, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.184"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink22IDBDatabaseAsyncWaiter10OpenCursorElllN4mojo9StructPtrINS5_11IDBKeyRangeEEENS4_18IDBCursorDirectionEbNS4_11IDBTaskTypeEPNS8_INS5_27IDBDatabaseOpenCursorResultEEEE3$_7JPNS_7RunLoopESF_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseEOSE_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink22IDBDatabaseAsyncWaiter10OpenCursorElllN4mojo9StructPtrINS4_11IDBKeyRangeEEENS3_18IDBCursorDirectionEbNS3_11IDBTaskTypeEPNS7_INS4_27IDBDatabaseOpenCursorResultEEEE3$_7JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !39
  %25 = getelementptr inbounds i8, i8* %23, i64 40
  %26 = bitcast i8* %25 to i64*
  store i64 %22, i64* %26, align 8, !noalias !39
  %27 = getelementptr inbounds i8, i8* %23, i64 48
  %28 = bitcast i8* %27 to i64*
  store i64 %14, i64* %28, align 8, !noalias !39
  %29 = bitcast %"class.base::OnceCallback.167"* %12 to i8**
  store i8* %23, i8** %29, align 8, !alias.scope !39
  %30 = bitcast %"class.blink::mojom::blink::IDBDatabase"* %17 to void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i32, i1, i32, %"class.base::OnceCallback.167"*)***
  %31 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i32, i1, i32, %"class.base::OnceCallback.167"*)**, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i32, i1, i32, %"class.base::OnceCallback.167"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i32, i1, i32, %"class.base::OnceCallback.167"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i32, i1, i32, %"class.base::OnceCallback.167"*)** %31, i64 10
  %33 = load void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i32, i1, i32, %"class.base::OnceCallback.167"*)*, void (%"class.blink::mojom::blink::IDBDatabase"*, i64, i64, i64, %"class.mojo::StructPtr.158"*, i32, i1, i32, %"class.base::OnceCallback.167"*)** %32, align 8
  call void %33(%"class.blink::mojom::blink::IDBDatabase"* %17, i64 %1, i64 %2, i64 %3, %"class.mojo::StructPtr.158"* nonnull %11, i32 %5, i1 zeroext %6, i32 %7, %"class.base::OnceCallback.167"* nonnull %12) #10
  %34 = getelementptr inbounds %"class.base::OnceCallback.167", %"class.base::OnceCallback.167"* %12, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %34) #10
  %35 = load %"class.blink::mojom::blink::IDBKeyRange"*, %"class.blink::mojom::blink::IDBKeyRange"** %19, align 8
  store %"class.blink::mojom::blink::IDBKeyRange"* null, %"class.blink::mojom::blink::IDBKeyRange"** %19, align 8
  %36 = icmp eq %"class.blink::mojom::blink::IDBKeyRange"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %9
  call void @_ZN5blink5mojom5blink11IDBKeyRangeD1Ev(%"class.blink::mojom::blink::IDBKeyRange"* nonnull %35) #10
  %38 = bitcast %"class.blink::mojom::blink::IDBKeyRange"* %35 to i8*
  call void @_ZdlPv(i8* %38) #11
  br label %39

39:                                               ; preds = %9, %37
  %40 = bitcast %"class.base::Location"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 321) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %10, %"class.base::Location"* nonnull dereferenceable(32) %13) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink31IDBFactoryInterceptorForTesting15GetDatabaseInfoEN4mojo23PendingAssociatedRemoteINS1_12IDBCallbacksEEE(%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*, %"class.mojo::PendingAssociatedRemote.168"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingAssociatedRemote.168", align 8
  %4 = bitcast %"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)** %5, i64 7
  %7 = load %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::IDBFactory"* %7(%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %1, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %9, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %10) #10
  %11 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %11, align 8
  %14 = bitcast %"class.blink::mojom::blink::IDBFactory"* %8 to void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*)***
  %15 = load void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*)**, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*)*, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*)** %15, i64 2
  %17 = load void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*)*, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::IDBFactory"* %8, %"class.mojo::PendingAssociatedRemote.168"* nonnull %3) #10
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink31IDBFactoryInterceptorForTesting4OpenEN4mojo23PendingAssociatedRemoteINS1_12IDBCallbacksEEENS4_INS1_20IDBDatabaseCallbacksEEERKN3WTF6StringElNS3_25PendingAssociatedReceiverINS1_14IDBTransactionEEEl(%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*, %"class.mojo::PendingAssociatedRemote.168"*, %"class.mojo::PendingAssociatedRemote.202"*, %"class.WTF::String"* dereferenceable(8), i64, %"class.mojo::PendingAssociatedReceiver"*, i64) unnamed_addr #0 align 2 {
  %8 = alloca %"class.mojo::PendingAssociatedRemote.168", align 8
  %9 = alloca %"class.mojo::PendingAssociatedRemote.202", align 8
  %10 = alloca %"class.mojo::PendingAssociatedReceiver", align 8
  %11 = bitcast %"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)***
  %12 = load %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)** %12, i64 7
  %14 = load %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)** %13, align 8
  %15 = tail call %"class.blink::mojom::blink::IDBFactory"* %14(%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"* %0) #10
  %16 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %8, i64 0, i32 0
  %17 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %1, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %16, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %17) #10
  %18 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %8, i64 0, i32 1
  %19 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %18, align 8
  %21 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.202", %"class.mojo::PendingAssociatedRemote.202"* %9, i64 0, i32 0
  %22 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.202", %"class.mojo::PendingAssociatedRemote.202"* %2, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %21, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %22) #10
  %23 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.202", %"class.mojo::PendingAssociatedRemote.202"* %9, i64 0, i32 1
  %24 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.202", %"class.mojo::PendingAssociatedRemote.202"* %2, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  store i32 %25, i32* %23, align 8
  %26 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %10, i64 0, i32 0
  %27 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %5, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %26, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %27) #10
  %28 = bitcast %"class.blink::mojom::blink::IDBFactory"* %15 to void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*, %"class.mojo::PendingAssociatedRemote.202"*, %"class.WTF::String"*, i64, %"class.mojo::PendingAssociatedReceiver"*, i64)***
  %29 = load void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*, %"class.mojo::PendingAssociatedRemote.202"*, %"class.WTF::String"*, i64, %"class.mojo::PendingAssociatedReceiver"*, i64)**, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*, %"class.mojo::PendingAssociatedRemote.202"*, %"class.WTF::String"*, i64, %"class.mojo::PendingAssociatedReceiver"*, i64)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*, %"class.mojo::PendingAssociatedRemote.202"*, %"class.WTF::String"*, i64, %"class.mojo::PendingAssociatedReceiver"*, i64)*, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*, %"class.mojo::PendingAssociatedRemote.202"*, %"class.WTF::String"*, i64, %"class.mojo::PendingAssociatedReceiver"*, i64)** %29, i64 3
  %31 = load void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*, %"class.mojo::PendingAssociatedRemote.202"*, %"class.WTF::String"*, i64, %"class.mojo::PendingAssociatedReceiver"*, i64)*, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*, %"class.mojo::PendingAssociatedRemote.202"*, %"class.WTF::String"*, i64, %"class.mojo::PendingAssociatedReceiver"*, i64)** %30, align 8
  call void %31(%"class.blink::mojom::blink::IDBFactory"* %15, %"class.mojo::PendingAssociatedRemote.168"* nonnull %8, %"class.mojo::PendingAssociatedRemote.202"* nonnull %9, %"class.WTF::String"* dereferenceable(8) %3, i64 %4, %"class.mojo::PendingAssociatedReceiver"* nonnull %10, i64 %6) #10
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %26) #10
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %21) #10
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %16) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink31IDBFactoryInterceptorForTesting14DeleteDatabaseEN4mojo23PendingAssociatedRemoteINS1_12IDBCallbacksEEERKN3WTF6StringEb(%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*, %"class.mojo::PendingAssociatedRemote.168"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %"class.mojo::PendingAssociatedRemote.168", align 8
  %6 = bitcast %"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)** %7, i64 7
  %9 = load %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::IDBFactory"* %9(%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"* %0) #10
  %11 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %1, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %11, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %12) #10
  %13 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %5, i64 0, i32 1
  %14 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.168", %"class.mojo::PendingAssociatedRemote.168"* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  store i32 %15, i32* %13, align 8
  %16 = bitcast %"class.blink::mojom::blink::IDBFactory"* %10 to void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*, %"class.WTF::String"*, i1)***
  %17 = load void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*, %"class.WTF::String"*, i1)**, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*, %"class.WTF::String"*, i1)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*, %"class.WTF::String"*, i1)*, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*, %"class.WTF::String"*, i1)** %17, i64 4
  %19 = load void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*, %"class.WTF::String"*, i1)*, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.mojo::PendingAssociatedRemote.168"*, %"class.WTF::String"*, i1)** %18, align 8
  call void %19(%"class.blink::mojom::blink::IDBFactory"* %10, %"class.mojo::PendingAssociatedRemote.168"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %2, i1 zeroext %3) #10
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %11) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink31IDBFactoryInterceptorForTesting35AbortTransactionsAndCompactDatabaseEN4base12OnceCallbackIFvNS0_9IDBStatusEEEE(%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*, %"class.base::OnceCallback.204"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.204", align 8
  %4 = bitcast %"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)** %5, i64 7
  %7 = load %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::IDBFactory"* %7(%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.base::OnceCallback.204", %"class.base::OnceCallback.204"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.204"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.204"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.blink::mojom::blink::IDBFactory"* %8 to void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)***
  %14 = load void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)**, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)*, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)** %14, i64 5
  %16 = load void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)*, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::IDBFactory"* %8, %"class.base::OnceCallback.204"* nonnull %3) #10
  %17 = getelementptr inbounds %"class.base::OnceCallback.204", %"class.base::OnceCallback.204"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink31IDBFactoryInterceptorForTesting28AbortTransactionsForDatabaseEN4base12OnceCallbackIFvNS0_9IDBStatusEEEE(%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*, %"class.base::OnceCallback.204"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.204", align 8
  %4 = bitcast %"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"* %0 to %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)**, %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)** %5, i64 7
  %7 = load %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)*, %"class.blink::mojom::blink::IDBFactory"* (%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::IDBFactory"* %7(%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.base::OnceCallback.204", %"class.base::OnceCallback.204"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.204"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.204"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.blink::mojom::blink::IDBFactory"* %8 to void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)***
  %14 = load void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)**, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)*, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)** %14, i64 6
  %16 = load void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)*, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::IDBFactory"* %8, %"class.base::OnceCallback.204"* nonnull %3) #10
  %17 = getelementptr inbounds %"class.base::OnceCallback.204", %"class.base::OnceCallback.204"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink21IDBFactoryAsyncWaiterC2EPNS1_10IDBFactoryE(%"class.blink::mojom::blink::IDBFactoryAsyncWaiter"* nocapture, %"class.blink::mojom::blink::IDBFactory"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::IDBFactoryAsyncWaiter", %"class.blink::mojom::blink::IDBFactoryAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::IDBFactory"* %1, %"class.blink::mojom::blink::IDBFactory"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink21IDBFactoryAsyncWaiterD2Ev(%"class.blink::mojom::blink::IDBFactoryAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink21IDBFactoryAsyncWaiter35AbortTransactionsAndCompactDatabaseEPNS0_9IDBStatusE(%"class.blink::mojom::blink::IDBFactoryAsyncWaiter"* nocapture readonly, i32*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RunLoop", align 8
  %4 = alloca %"class.base::OnceCallback.204", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = ptrtoint i32* %1 to i64
  %7 = bitcast %"class.base::RunLoop"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %3, i32 0) #10
  %8 = getelementptr inbounds %"class.blink::mojom::blink::IDBFactoryAsyncWaiter", %"class.blink::mojom::blink::IDBFactoryAsyncWaiter"* %0, i64 0, i32 0
  %9 = load %"class.blink::mojom::blink::IDBFactory"*, %"class.blink::mojom::blink::IDBFactory"** %8, align 8
  %10 = ptrtoint %"class.base::RunLoop"* %3 to i64
  %11 = call i8* @_Znwm(i64 56) #11, !noalias !44
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink21IDBFactoryAsyncWaiter35AbortTransactionsAndCompactDatabaseEPNS4_9IDBStatusEE3$_8JPNS_7RunLoopES8_EEEFvS7_EE7RunOnceEPNS0_13BindStateBaseES7_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink21IDBFactoryAsyncWaiter35AbortTransactionsAndCompactDatabaseEPNS3_9IDBStatusEE3$_8JPNS_7RunLoopES7_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !44
  %13 = getelementptr inbounds i8, i8* %11, i64 40
  %14 = bitcast i8* %13 to i64*
  store i64 %10, i64* %14, align 8, !noalias !44
  %15 = getelementptr inbounds i8, i8* %11, i64 48
  %16 = bitcast i8* %15 to i64*
  store i64 %6, i64* %16, align 8, !noalias !44
  %17 = bitcast %"class.base::OnceCallback.204"* %4 to i8**
  store i8* %11, i8** %17, align 8, !alias.scope !44
  %18 = bitcast %"class.blink::mojom::blink::IDBFactory"* %9 to void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)***
  %19 = load void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)**, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)*, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)** %19, i64 5
  %21 = load void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)*, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)** %20, align 8
  call void %21(%"class.blink::mojom::blink::IDBFactory"* %9, %"class.base::OnceCallback.204"* nonnull %4) #10
  %22 = getelementptr inbounds %"class.base::OnceCallback.204", %"class.base::OnceCallback.204"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #10
  %23 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 359) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink21IDBFactoryAsyncWaiter28AbortTransactionsForDatabaseEPNS0_9IDBStatusE(%"class.blink::mojom::blink::IDBFactoryAsyncWaiter"* nocapture readonly, i32*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RunLoop", align 8
  %4 = alloca %"class.base::OnceCallback.204", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = ptrtoint i32* %1 to i64
  %7 = bitcast %"class.base::RunLoop"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %3, i32 0) #10
  %8 = getelementptr inbounds %"class.blink::mojom::blink::IDBFactoryAsyncWaiter", %"class.blink::mojom::blink::IDBFactoryAsyncWaiter"* %0, i64 0, i32 0
  %9 = load %"class.blink::mojom::blink::IDBFactory"*, %"class.blink::mojom::blink::IDBFactory"** %8, align 8
  %10 = ptrtoint %"class.base::RunLoop"* %3 to i64
  %11 = call i8* @_Znwm(i64 56) #11, !noalias !49
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink21IDBFactoryAsyncWaiter28AbortTransactionsForDatabaseEPNS4_9IDBStatusEE3$_9JPNS_7RunLoopES8_EEEFvS7_EE7RunOnceEPNS0_13BindStateBaseES7_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink21IDBFactoryAsyncWaiter28AbortTransactionsForDatabaseEPNS3_9IDBStatusEE3$_9JPNS_7RunLoopES7_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !49
  %13 = getelementptr inbounds i8, i8* %11, i64 40
  %14 = bitcast i8* %13 to i64*
  store i64 %10, i64* %14, align 8, !noalias !49
  %15 = getelementptr inbounds i8, i8* %11, i64 48
  %16 = bitcast i8* %15 to i64*
  store i64 %6, i64* %16, align 8, !noalias !49
  %17 = bitcast %"class.base::OnceCallback.204"* %4 to i8**
  store i8* %11, i8** %17, align 8, !alias.scope !49
  %18 = bitcast %"class.blink::mojom::blink::IDBFactory"* %9 to void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)***
  %19 = load void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)**, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)*, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)** %19, i64 6
  %21 = load void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)*, void (%"class.blink::mojom::blink::IDBFactory"*, %"class.base::OnceCallback.204"*)** %20, align 8
  call void %21(%"class.blink::mojom::blink::IDBFactory"* %9, %"class.base::OnceCallback.204"* nonnull %4) #10
  %22 = getelementptr inbounds %"class.base::OnceCallback.204", %"class.base::OnceCallback.204"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #10
  %23 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 374) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink12IDBCallbacksD2Ev(%"class.blink::mojom::blink::IDBCallbacks"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink33IDBCallbacksInterceptorForTestingD0Ev(%"class.blink::mojom::blink::IDBCallbacksInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink20IDBDatabaseCallbacksD2Ev(%"class.blink::mojom::blink::IDBDatabaseCallbacks"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink41IDBDatabaseCallbacksInterceptorForTestingD0Ev(%"class.blink::mojom::blink::IDBDatabaseCallbacksInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink9IDBCursorD2Ev(%"class.blink::mojom::blink::IDBCursor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink30IDBCursorInterceptorForTestingD0Ev(%"class.blink::mojom::blink::IDBCursorInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink14IDBTransactionD2Ev(%"class.blink::mojom::blink::IDBTransaction"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink35IDBTransactionInterceptorForTestingD0Ev(%"class.blink::mojom::blink::IDBTransactionInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink27IDBDatabaseGetAllResultSinkD2Ev(%"class.blink::mojom::blink::IDBDatabaseGetAllResultSink"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink48IDBDatabaseGetAllResultSinkInterceptorForTestingD0Ev(%"class.blink::mojom::blink::IDBDatabaseGetAllResultSinkInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink11IDBDatabaseD2Ev(%"class.blink::mojom::blink::IDBDatabase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink32IDBDatabaseInterceptorForTestingD0Ev(%"class.blink::mojom::blink::IDBDatabaseInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink10IDBFactoryD2Ev(%"class.blink::mojom::blink::IDBFactory"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink31IDBFactoryInterceptorForTestingD0Ev(%"class.blink::mojom::blink::IDBFactoryInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink17IDBNameAndVersionD1Ev(%"class.blink::mojom::blink::IDBNameAndVersion"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink12IDBPutParamsD1Ev(%"class.blink::mojom::blink::IDBPutParams"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink14IDBReturnValueD1Ev(%"class.blink::mojom::blink::IDBReturnValue"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink8IDBErrorD1Ev(%"class.blink::mojom::blink::IDBError"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink11IDBKeyRangeD1Ev(%"class.blink::mojom::blink::IDBKeyRange"*) unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind
declare void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink20IDBCursorAsyncWaiter7AdvanceEjPN4mojo9StructPtrINS5_15IDBCursorResultEEEE3$_0JPNS_7RunLoopESB_EEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::StructPtr.34"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.mojo::StructPtr.34"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.mojo::StructPtr.34"*, %"class.mojo::StructPtr.34"** %6, align 8
  %9 = bitcast %"class.mojo::StructPtr.34"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 0, i64* %9, align 8
  %11 = getelementptr inbounds %"class.mojo::StructPtr.34", %"class.mojo::StructPtr.34"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::mojom::blink::IDBCursorResult"*, %"class.blink::mojom::blink::IDBCursorResult"** %11, align 8
  store %"class.blink::mojom::blink::IDBCursorResult"* null, %"class.blink::mojom::blink::IDBCursorResult"** %11, align 8
  %13 = icmp eq %"class.blink::mojom::blink::IDBCursorResult"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.mojo::StructPtr.34"* %8 to i64*
  store i64 %10, i64* %15, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  br label %23

16:                                               ; preds = %2
  tail call void @_ZN5blink5mojom5blink15IDBCursorResultD1Ev(%"class.blink::mojom::blink::IDBCursorResult"* nonnull %12) #10
  %17 = bitcast %"class.blink::mojom::blink::IDBCursorResult"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  %18 = load %"class.blink::mojom::blink::IDBCursorResult"*, %"class.blink::mojom::blink::IDBCursorResult"** %11, align 8
  %19 = bitcast %"class.mojo::StructPtr.34"* %8 to i64*
  store i64 %10, i64* %19, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  %20 = icmp eq %"class.blink::mojom::blink::IDBCursorResult"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::mojom::blink::IDBCursorResult"* %18 to i8*
  tail call void @_ZN5blink5mojom5blink15IDBCursorResultD1Ev(%"class.blink::mojom::blink::IDBCursorResult"* nonnull %18) #10
  tail call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %14, %16, %21
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink15IDBCursorResultD1Ev(%"class.blink::mojom::blink::IDBCursorResult"*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink20IDBCursorAsyncWaiter7AdvanceEjPN4mojo9StructPtrINS4_15IDBCursorResultEEEE3$_0JPNS_7RunLoopESA_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink20IDBCursorAsyncWaiter14CursorContinueENSt3__110unique_ptrINS3_6IDBKeyENS7_14default_deleteIS9_EEEESC_PN4mojo9StructPtrINS5_15IDBCursorResultEEEE3$_1JPNS_7RunLoopESH_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseEOSG_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::StructPtr.34"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.mojo::StructPtr.34"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.mojo::StructPtr.34"*, %"class.mojo::StructPtr.34"** %6, align 8
  %9 = bitcast %"class.mojo::StructPtr.34"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 0, i64* %9, align 8
  %11 = getelementptr inbounds %"class.mojo::StructPtr.34", %"class.mojo::StructPtr.34"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::mojom::blink::IDBCursorResult"*, %"class.blink::mojom::blink::IDBCursorResult"** %11, align 8
  store %"class.blink::mojom::blink::IDBCursorResult"* null, %"class.blink::mojom::blink::IDBCursorResult"** %11, align 8
  %13 = icmp eq %"class.blink::mojom::blink::IDBCursorResult"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.mojo::StructPtr.34"* %8 to i64*
  store i64 %10, i64* %15, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  br label %23

16:                                               ; preds = %2
  tail call void @_ZN5blink5mojom5blink15IDBCursorResultD1Ev(%"class.blink::mojom::blink::IDBCursorResult"* nonnull %12) #10
  %17 = bitcast %"class.blink::mojom::blink::IDBCursorResult"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  %18 = load %"class.blink::mojom::blink::IDBCursorResult"*, %"class.blink::mojom::blink::IDBCursorResult"** %11, align 8
  %19 = bitcast %"class.mojo::StructPtr.34"* %8 to i64*
  store i64 %10, i64* %19, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  %20 = icmp eq %"class.blink::mojom::blink::IDBCursorResult"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::mojom::blink::IDBCursorResult"* %18 to i8*
  tail call void @_ZN5blink5mojom5blink15IDBCursorResultD1Ev(%"class.blink::mojom::blink::IDBCursorResult"* nonnull %18) #10
  tail call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %14, %16, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink20IDBCursorAsyncWaiter14CursorContinueENSt3__110unique_ptrINS2_6IDBKeyENS6_14default_deleteIS8_EEEESB_PN4mojo9StructPtrINS4_15IDBCursorResultEEEE3$_1JPNS_7RunLoopESG_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink20IDBCursorAsyncWaiter8PrefetchEiPN4mojo9StructPtrINS5_15IDBCursorResultEEEE3$_2JPNS_7RunLoopESB_EEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::StructPtr.34"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.mojo::StructPtr.34"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.mojo::StructPtr.34"*, %"class.mojo::StructPtr.34"** %6, align 8
  %9 = bitcast %"class.mojo::StructPtr.34"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 0, i64* %9, align 8
  %11 = getelementptr inbounds %"class.mojo::StructPtr.34", %"class.mojo::StructPtr.34"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::mojom::blink::IDBCursorResult"*, %"class.blink::mojom::blink::IDBCursorResult"** %11, align 8
  store %"class.blink::mojom::blink::IDBCursorResult"* null, %"class.blink::mojom::blink::IDBCursorResult"** %11, align 8
  %13 = icmp eq %"class.blink::mojom::blink::IDBCursorResult"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.mojo::StructPtr.34"* %8 to i64*
  store i64 %10, i64* %15, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  br label %23

16:                                               ; preds = %2
  tail call void @_ZN5blink5mojom5blink15IDBCursorResultD1Ev(%"class.blink::mojom::blink::IDBCursorResult"* nonnull %12) #10
  %17 = bitcast %"class.blink::mojom::blink::IDBCursorResult"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  %18 = load %"class.blink::mojom::blink::IDBCursorResult"*, %"class.blink::mojom::blink::IDBCursorResult"** %11, align 8
  %19 = bitcast %"class.mojo::StructPtr.34"* %8 to i64*
  store i64 %10, i64* %19, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  %20 = icmp eq %"class.blink::mojom::blink::IDBCursorResult"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::mojom::blink::IDBCursorResult"* %18 to i8*
  tail call void @_ZN5blink5mojom5blink15IDBCursorResultD1Ev(%"class.blink::mojom::blink::IDBCursorResult"* nonnull %18) #10
  tail call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %14, %16, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink20IDBCursorAsyncWaiter8PrefetchEiPN4mojo9StructPtrINS4_15IDBCursorResultEEEE3$_2JPNS_7RunLoopESA_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink25IDBTransactionAsyncWaiter3PutElNSt3__110unique_ptrINS3_8IDBValueENS7_14default_deleteIS9_EEEENS8_INS3_6IDBKeyENSA_ISD_EEEENS4_10IDBPutModeEN3WTF6VectorINS3_12IDBIndexKeysELj0ENSH_18PartitionAllocatorEEEPN4mojo9StructPtrINS5_23IDBTransactionPutResultEEEE3$_3JPNS_7RunLoopESQ_EEEFvSP_EE7RunOnceEPNS0_13BindStateBaseEOSP_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::StructPtr.123"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.mojo::StructPtr.123"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.mojo::StructPtr.123"*, %"class.mojo::StructPtr.123"** %6, align 8
  %9 = bitcast %"class.mojo::StructPtr.123"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 0, i64* %9, align 8
  %11 = getelementptr inbounds %"class.mojo::StructPtr.123", %"class.mojo::StructPtr.123"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::mojom::blink::IDBTransactionPutResult"*, %"class.blink::mojom::blink::IDBTransactionPutResult"** %11, align 8
  store %"class.blink::mojom::blink::IDBTransactionPutResult"* null, %"class.blink::mojom::blink::IDBTransactionPutResult"** %11, align 8
  %13 = icmp eq %"class.blink::mojom::blink::IDBTransactionPutResult"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.mojo::StructPtr.123"* %8 to i64*
  store i64 %10, i64* %15, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  br label %23

16:                                               ; preds = %2
  tail call void @_ZN5blink5mojom5blink23IDBTransactionPutResultD1Ev(%"class.blink::mojom::blink::IDBTransactionPutResult"* nonnull %12) #10
  %17 = bitcast %"class.blink::mojom::blink::IDBTransactionPutResult"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  %18 = load %"class.blink::mojom::blink::IDBTransactionPutResult"*, %"class.blink::mojom::blink::IDBTransactionPutResult"** %11, align 8
  %19 = bitcast %"class.mojo::StructPtr.123"* %8 to i64*
  store i64 %10, i64* %19, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  %20 = icmp eq %"class.blink::mojom::blink::IDBTransactionPutResult"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::mojom::blink::IDBTransactionPutResult"* %18 to i8*
  tail call void @_ZN5blink5mojom5blink23IDBTransactionPutResultD1Ev(%"class.blink::mojom::blink::IDBTransactionPutResult"* nonnull %18) #10
  tail call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %14, %16, %21
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink23IDBTransactionPutResultD1Ev(%"class.blink::mojom::blink::IDBTransactionPutResult"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink25IDBTransactionAsyncWaiter3PutElNSt3__110unique_ptrINS2_8IDBValueENS6_14default_deleteIS8_EEEENS7_INS2_6IDBKeyENS9_ISC_EEEENS3_10IDBPutModeEN3WTF6VectorINS2_12IDBIndexKeysELj0ENSG_18PartitionAllocatorEEEPN4mojo9StructPtrINS4_23IDBTransactionPutResultEEEE3$_3JPNS_7RunLoopESP_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink25IDBTransactionAsyncWaiter6PutAllElN3WTF6VectorIN4mojo9StructPtrINS5_12IDBPutParamsEEELj0ENS7_18PartitionAllocatorEEEPNSA_INS5_26IDBTransactionPutAllResultEEEE3$_4JPNS_7RunLoopESH_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseEOSG_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::StructPtr.132"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.mojo::StructPtr.132"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.mojo::StructPtr.132"*, %"class.mojo::StructPtr.132"** %6, align 8
  %9 = bitcast %"class.mojo::StructPtr.132"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 0, i64* %9, align 8
  %11 = getelementptr inbounds %"class.mojo::StructPtr.132", %"class.mojo::StructPtr.132"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::mojom::blink::IDBTransactionPutAllResult"*, %"class.blink::mojom::blink::IDBTransactionPutAllResult"** %11, align 8
  store %"class.blink::mojom::blink::IDBTransactionPutAllResult"* null, %"class.blink::mojom::blink::IDBTransactionPutAllResult"** %11, align 8
  %13 = icmp eq %"class.blink::mojom::blink::IDBTransactionPutAllResult"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.mojo::StructPtr.132"* %8 to i64*
  store i64 %10, i64* %15, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  br label %23

16:                                               ; preds = %2
  tail call void @_ZN5blink5mojom5blink26IDBTransactionPutAllResultD1Ev(%"class.blink::mojom::blink::IDBTransactionPutAllResult"* nonnull %12) #10
  %17 = bitcast %"class.blink::mojom::blink::IDBTransactionPutAllResult"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  %18 = load %"class.blink::mojom::blink::IDBTransactionPutAllResult"*, %"class.blink::mojom::blink::IDBTransactionPutAllResult"** %11, align 8
  %19 = bitcast %"class.mojo::StructPtr.132"* %8 to i64*
  store i64 %10, i64* %19, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  %20 = icmp eq %"class.blink::mojom::blink::IDBTransactionPutAllResult"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::mojom::blink::IDBTransactionPutAllResult"* %18 to i8*
  tail call void @_ZN5blink5mojom5blink26IDBTransactionPutAllResultD1Ev(%"class.blink::mojom::blink::IDBTransactionPutAllResult"* nonnull %18) #10
  tail call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %14, %16, %21
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink26IDBTransactionPutAllResultD1Ev(%"class.blink::mojom::blink::IDBTransactionPutAllResult"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink25IDBTransactionAsyncWaiter6PutAllElN3WTF6VectorIN4mojo9StructPtrINS4_12IDBPutParamsEEELj0ENS6_18PartitionAllocatorEEEPNS9_INS4_26IDBTransactionPutAllResultEEEE3$_4JPNS_7RunLoopESG_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink22IDBDatabaseAsyncWaiter3GetElllN4mojo9StructPtrINS5_11IDBKeyRangeEEEbPNS8_INS5_20IDBDatabaseGetResultEEEE3$_5JPNS_7RunLoopESD_EEEFvSC_EE7RunOnceEPNS0_13BindStateBaseEOSC_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::StructPtr.170"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.mojo::StructPtr.170"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.mojo::StructPtr.170"*, %"class.mojo::StructPtr.170"** %6, align 8
  %9 = bitcast %"class.mojo::StructPtr.170"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 0, i64* %9, align 8
  %11 = getelementptr inbounds %"class.mojo::StructPtr.170", %"class.mojo::StructPtr.170"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::mojom::blink::IDBDatabaseGetResult"*, %"class.blink::mojom::blink::IDBDatabaseGetResult"** %11, align 8
  store %"class.blink::mojom::blink::IDBDatabaseGetResult"* null, %"class.blink::mojom::blink::IDBDatabaseGetResult"** %11, align 8
  %13 = icmp eq %"class.blink::mojom::blink::IDBDatabaseGetResult"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.mojo::StructPtr.170"* %8 to i64*
  store i64 %10, i64* %15, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  br label %23

16:                                               ; preds = %2
  tail call void @_ZN5blink5mojom5blink20IDBDatabaseGetResultD1Ev(%"class.blink::mojom::blink::IDBDatabaseGetResult"* nonnull %12) #10
  %17 = bitcast %"class.blink::mojom::blink::IDBDatabaseGetResult"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  %18 = load %"class.blink::mojom::blink::IDBDatabaseGetResult"*, %"class.blink::mojom::blink::IDBDatabaseGetResult"** %11, align 8
  %19 = bitcast %"class.mojo::StructPtr.170"* %8 to i64*
  store i64 %10, i64* %19, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  %20 = icmp eq %"class.blink::mojom::blink::IDBDatabaseGetResult"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::mojom::blink::IDBDatabaseGetResult"* %18 to i8*
  tail call void @_ZN5blink5mojom5blink20IDBDatabaseGetResultD1Ev(%"class.blink::mojom::blink::IDBDatabaseGetResult"* nonnull %18) #10
  tail call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %14, %16, %21
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink20IDBDatabaseGetResultD1Ev(%"class.blink::mojom::blink::IDBDatabaseGetResult"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink22IDBDatabaseAsyncWaiter3GetElllN4mojo9StructPtrINS4_11IDBKeyRangeEEEbPNS7_INS4_20IDBDatabaseGetResultEEEE3$_5JPNS_7RunLoopESC_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink22IDBDatabaseAsyncWaiter6GetAllElllN4mojo9StructPtrINS5_11IDBKeyRangeEEEblPNS7_15PendingReceiverINS5_27IDBDatabaseGetAllResultSinkEEEE3$_6JPNS_7RunLoopESE_EEEFvSD_EE7RunOnceEPNS0_13BindStateBaseEOSD_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::PendingReceiver"* dereferenceable(24)) #0 align 2 {
  %3 = alloca %"class.mojo::PendingReceiver", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to %"class.mojo::PendingReceiver"**
  %8 = bitcast %"class.mojo::PendingReceiver"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  %9 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %10 = load %"class.mojo::PendingReceiver"*, %"class.mojo::PendingReceiver"** %7, align 8
  %11 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %3, i64 0, i32 0
  %12 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %11, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %12) #10
  %13 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %10, i64 0, i32 0
  %14 = call dereferenceable(24) %"struct.mojo::internal::PendingReceiverState"* @_ZN4mojo8internal20PendingReceiverStateaSEOS1_(%"struct.mojo::internal::PendingReceiverState"* %13, %"struct.mojo::internal::PendingReceiverState"* nonnull dereferenceable(24) %11) #10
  call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %9) #10
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(24) %"struct.mojo::internal::PendingReceiverState"* @_ZN4mojo8internal20PendingReceiverStateaSEOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink22IDBDatabaseAsyncWaiter6GetAllElllN4mojo9StructPtrINS4_11IDBKeyRangeEEEblPNS6_15PendingReceiverINS4_27IDBDatabaseGetAllResultSinkEEEE3$_6JPNS_7RunLoopESD_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink22IDBDatabaseAsyncWaiter10OpenCursorElllN4mojo9StructPtrINS5_11IDBKeyRangeEEENS4_18IDBCursorDirectionEbNS4_11IDBTaskTypeEPNS8_INS5_27IDBDatabaseOpenCursorResultEEEE3$_7JPNS_7RunLoopESF_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseEOSE_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::StructPtr.184"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.mojo::StructPtr.184"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.mojo::StructPtr.184"*, %"class.mojo::StructPtr.184"** %6, align 8
  %9 = bitcast %"class.mojo::StructPtr.184"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 0, i64* %9, align 8
  %11 = getelementptr inbounds %"class.mojo::StructPtr.184", %"class.mojo::StructPtr.184"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::mojom::blink::IDBDatabaseOpenCursorResult"*, %"class.blink::mojom::blink::IDBDatabaseOpenCursorResult"** %11, align 8
  store %"class.blink::mojom::blink::IDBDatabaseOpenCursorResult"* null, %"class.blink::mojom::blink::IDBDatabaseOpenCursorResult"** %11, align 8
  %13 = icmp eq %"class.blink::mojom::blink::IDBDatabaseOpenCursorResult"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.mojo::StructPtr.184"* %8 to i64*
  store i64 %10, i64* %15, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  br label %23

16:                                               ; preds = %2
  tail call void @_ZN5blink5mojom5blink27IDBDatabaseOpenCursorResultD1Ev(%"class.blink::mojom::blink::IDBDatabaseOpenCursorResult"* nonnull %12) #10
  %17 = bitcast %"class.blink::mojom::blink::IDBDatabaseOpenCursorResult"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  %18 = load %"class.blink::mojom::blink::IDBDatabaseOpenCursorResult"*, %"class.blink::mojom::blink::IDBDatabaseOpenCursorResult"** %11, align 8
  %19 = bitcast %"class.mojo::StructPtr.184"* %8 to i64*
  store i64 %10, i64* %19, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  %20 = icmp eq %"class.blink::mojom::blink::IDBDatabaseOpenCursorResult"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::mojom::blink::IDBDatabaseOpenCursorResult"* %18 to i8*
  tail call void @_ZN5blink5mojom5blink27IDBDatabaseOpenCursorResultD1Ev(%"class.blink::mojom::blink::IDBDatabaseOpenCursorResult"* nonnull %18) #10
  tail call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %14, %16, %21
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink27IDBDatabaseOpenCursorResultD1Ev(%"class.blink::mojom::blink::IDBDatabaseOpenCursorResult"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink22IDBDatabaseAsyncWaiter10OpenCursorElllN4mojo9StructPtrINS4_11IDBKeyRangeEEENS3_18IDBCursorDirectionEbNS3_11IDBTaskTypeEPNS7_INS4_27IDBDatabaseOpenCursorResultEEEE3$_7JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink21IDBFactoryAsyncWaiter35AbortTransactionsAndCompactDatabaseEPNS4_9IDBStatusEE3$_8JPNS_7RunLoopES8_EEEFvS7_EE7RunOnceEPNS0_13BindStateBaseES7_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink21IDBFactoryAsyncWaiter35AbortTransactionsAndCompactDatabaseEPNS3_9IDBStatusEE3$_8JPNS_7RunLoopES7_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink21IDBFactoryAsyncWaiter28AbortTransactionsForDatabaseEPNS4_9IDBStatusEE3$_9JPNS_7RunLoopES8_EEEFvS7_EE7RunOnceEPNS0_13BindStateBaseES7_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink21IDBFactoryAsyncWaiter28AbortTransactionsForDatabaseEPNS3_9IDBStatusEE3$_9JPNS_7RunLoopES7_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink20IDBCursorAsyncWaiter7AdvanceEjPN4mojo9StructPtrINS5_15IDBCursorResultEEEE3$_0JPNS_7RunLoopERSB_EEEDcOT0_DpOT1_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink20IDBCursorAsyncWaiter7AdvanceEjPN4mojo9StructPtrINS5_15IDBCursorResultEEEE3$_0JPNS_7RunLoopERSB_EEEDcOT0_DpOT1_"}
!7 = distinct !{!7, !8, !"_ZN4base8BindOnceIZN5blink5mojom5blink20IDBCursorAsyncWaiter7AdvanceEjPN4mojo9StructPtrINS3_15IDBCursorResultEEEE3$_0JPNS_7RunLoopERS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8BindOnceIZN5blink5mojom5blink20IDBCursorAsyncWaiter7AdvanceEjPN4mojo9StructPtrINS3_15IDBCursorResultEEEE3$_0JPNS_7RunLoopERS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink20IDBCursorAsyncWaiter14CursorContinueENSt3__110unique_ptrINS3_6IDBKeyENS7_14default_deleteIS9_EEEESC_PN4mojo9StructPtrINS5_15IDBCursorResultEEEE3$_1JPNS_7RunLoopERSH_EEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink20IDBCursorAsyncWaiter14CursorContinueENSt3__110unique_ptrINS3_6IDBKeyENS7_14default_deleteIS9_EEEESC_PN4mojo9StructPtrINS5_15IDBCursorResultEEEE3$_1JPNS_7RunLoopERSH_EEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIZN5blink5mojom5blink20IDBCursorAsyncWaiter14CursorContinueENSt3__110unique_ptrINS1_6IDBKeyENS5_14default_deleteIS7_EEEESA_PN4mojo9StructPtrINS3_15IDBCursorResultEEEE3$_1JPNS_7RunLoopERSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIZN5blink5mojom5blink20IDBCursorAsyncWaiter14CursorContinueENSt3__110unique_ptrINS1_6IDBKeyENS5_14default_deleteIS7_EEEESA_PN4mojo9StructPtrINS3_15IDBCursorResultEEEE3$_1JPNS_7RunLoopERSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink20IDBCursorAsyncWaiter8PrefetchEiPN4mojo9StructPtrINS5_15IDBCursorResultEEEE3$_2JPNS_7RunLoopERSB_EEEDcOT0_DpOT1_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink20IDBCursorAsyncWaiter8PrefetchEiPN4mojo9StructPtrINS5_15IDBCursorResultEEEE3$_2JPNS_7RunLoopERSB_EEEDcOT0_DpOT1_"}
!17 = distinct !{!17, !18, !"_ZN4base8BindOnceIZN5blink5mojom5blink20IDBCursorAsyncWaiter8PrefetchEiPN4mojo9StructPtrINS3_15IDBCursorResultEEEE3$_2JPNS_7RunLoopERS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8BindOnceIZN5blink5mojom5blink20IDBCursorAsyncWaiter8PrefetchEiPN4mojo9StructPtrINS3_15IDBCursorResultEEEE3$_2JPNS_7RunLoopERS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink25IDBTransactionAsyncWaiter3PutElNSt3__110unique_ptrINS3_8IDBValueENS7_14default_deleteIS9_EEEENS8_INS3_6IDBKeyENSA_ISD_EEEENS4_10IDBPutModeEN3WTF6VectorINS3_12IDBIndexKeysELj0ENSH_18PartitionAllocatorEEEPN4mojo9StructPtrINS5_23IDBTransactionPutResultEEEE3$_3JPNS_7RunLoopERSQ_EEEDcOT0_DpOT1_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink25IDBTransactionAsyncWaiter3PutElNSt3__110unique_ptrINS3_8IDBValueENS7_14default_deleteIS9_EEEENS8_INS3_6IDBKeyENSA_ISD_EEEENS4_10IDBPutModeEN3WTF6VectorINS3_12IDBIndexKeysELj0ENSH_18PartitionAllocatorEEEPN4mojo9StructPtrINS5_23IDBTransactionPutResultEEEE3$_3JPNS_7RunLoopERSQ_EEEDcOT0_DpOT1_"}
!22 = distinct !{!22, !23, !"_ZN4base8BindOnceIZN5blink5mojom5blink25IDBTransactionAsyncWaiter3PutElNSt3__110unique_ptrINS1_8IDBValueENS5_14default_deleteIS7_EEEENS6_INS1_6IDBKeyENS8_ISB_EEEENS2_10IDBPutModeEN3WTF6VectorINS1_12IDBIndexKeysELj0ENSF_18PartitionAllocatorEEEPN4mojo9StructPtrINS3_23IDBTransactionPutResultEEEE3$_3JPNS_7RunLoopERSO_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSW_DpOSX_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8BindOnceIZN5blink5mojom5blink25IDBTransactionAsyncWaiter3PutElNSt3__110unique_ptrINS1_8IDBValueENS5_14default_deleteIS7_EEEENS6_INS1_6IDBKeyENS8_ISB_EEEENS2_10IDBPutModeEN3WTF6VectorINS1_12IDBIndexKeysELj0ENSF_18PartitionAllocatorEEEPN4mojo9StructPtrINS3_23IDBTransactionPutResultEEEE3$_3JPNS_7RunLoopERSO_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSW_DpOSX_"}
!24 = !{!25, !27}
!25 = distinct !{!25, !26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink25IDBTransactionAsyncWaiter6PutAllElN3WTF6VectorIN4mojo9StructPtrINS5_12IDBPutParamsEEELj0ENS7_18PartitionAllocatorEEEPNSA_INS5_26IDBTransactionPutAllResultEEEE3$_4JPNS_7RunLoopERSH_EEEDcOT0_DpOT1_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink25IDBTransactionAsyncWaiter6PutAllElN3WTF6VectorIN4mojo9StructPtrINS5_12IDBPutParamsEEELj0ENS7_18PartitionAllocatorEEEPNSA_INS5_26IDBTransactionPutAllResultEEEE3$_4JPNS_7RunLoopERSH_EEEDcOT0_DpOT1_"}
!27 = distinct !{!27, !28, !"_ZN4base8BindOnceIZN5blink5mojom5blink25IDBTransactionAsyncWaiter6PutAllElN3WTF6VectorIN4mojo9StructPtrINS3_12IDBPutParamsEEELj0ENS5_18PartitionAllocatorEEEPNS8_INS3_26IDBTransactionPutAllResultEEEE3$_4JPNS_7RunLoopERSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8BindOnceIZN5blink5mojom5blink25IDBTransactionAsyncWaiter6PutAllElN3WTF6VectorIN4mojo9StructPtrINS3_12IDBPutParamsEEELj0ENS5_18PartitionAllocatorEEEPNS8_INS3_26IDBTransactionPutAllResultEEEE3$_4JPNS_7RunLoopERSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_"}
!29 = !{!30, !32}
!30 = distinct !{!30, !31, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink22IDBDatabaseAsyncWaiter3GetElllN4mojo9StructPtrINS5_11IDBKeyRangeEEEbPNS8_INS5_20IDBDatabaseGetResultEEEE3$_5JPNS_7RunLoopERSD_EEEDcOT0_DpOT1_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink22IDBDatabaseAsyncWaiter3GetElllN4mojo9StructPtrINS5_11IDBKeyRangeEEEbPNS8_INS5_20IDBDatabaseGetResultEEEE3$_5JPNS_7RunLoopERSD_EEEDcOT0_DpOT1_"}
!32 = distinct !{!32, !33, !"_ZN4base8BindOnceIZN5blink5mojom5blink22IDBDatabaseAsyncWaiter3GetElllN4mojo9StructPtrINS3_11IDBKeyRangeEEEbPNS6_INS3_20IDBDatabaseGetResultEEEE3$_5JPNS_7RunLoopERSB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!33 = distinct !{!33, !"_ZN4base8BindOnceIZN5blink5mojom5blink22IDBDatabaseAsyncWaiter3GetElllN4mojo9StructPtrINS3_11IDBKeyRangeEEEbPNS6_INS3_20IDBDatabaseGetResultEEEE3$_5JPNS_7RunLoopERSB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!34 = !{!35, !37}
!35 = distinct !{!35, !36, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink22IDBDatabaseAsyncWaiter6GetAllElllN4mojo9StructPtrINS5_11IDBKeyRangeEEEblPNS7_15PendingReceiverINS5_27IDBDatabaseGetAllResultSinkEEEE3$_6JPNS_7RunLoopERSE_EEEDcOT0_DpOT1_: argument 0"}
!36 = distinct !{!36, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink22IDBDatabaseAsyncWaiter6GetAllElllN4mojo9StructPtrINS5_11IDBKeyRangeEEEblPNS7_15PendingReceiverINS5_27IDBDatabaseGetAllResultSinkEEEE3$_6JPNS_7RunLoopERSE_EEEDcOT0_DpOT1_"}
!37 = distinct !{!37, !38, !"_ZN4base8BindOnceIZN5blink5mojom5blink22IDBDatabaseAsyncWaiter6GetAllElllN4mojo9StructPtrINS3_11IDBKeyRangeEEEblPNS5_15PendingReceiverINS3_27IDBDatabaseGetAllResultSinkEEEE3$_6JPNS_7RunLoopERSC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!38 = distinct !{!38, !"_ZN4base8BindOnceIZN5blink5mojom5blink22IDBDatabaseAsyncWaiter6GetAllElllN4mojo9StructPtrINS3_11IDBKeyRangeEEEblPNS5_15PendingReceiverINS3_27IDBDatabaseGetAllResultSinkEEEE3$_6JPNS_7RunLoopERSC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!39 = !{!40, !42}
!40 = distinct !{!40, !41, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink22IDBDatabaseAsyncWaiter10OpenCursorElllN4mojo9StructPtrINS5_11IDBKeyRangeEEENS4_18IDBCursorDirectionEbNS4_11IDBTaskTypeEPNS8_INS5_27IDBDatabaseOpenCursorResultEEEE3$_7JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_: argument 0"}
!41 = distinct !{!41, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink22IDBDatabaseAsyncWaiter10OpenCursorElllN4mojo9StructPtrINS5_11IDBKeyRangeEEENS4_18IDBCursorDirectionEbNS4_11IDBTaskTypeEPNS8_INS5_27IDBDatabaseOpenCursorResultEEEE3$_7JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_"}
!42 = distinct !{!42, !43, !"_ZN4base8BindOnceIZN5blink5mojom5blink22IDBDatabaseAsyncWaiter10OpenCursorElllN4mojo9StructPtrINS3_11IDBKeyRangeEEENS2_18IDBCursorDirectionEbNS2_11IDBTaskTypeEPNS6_INS3_27IDBDatabaseOpenCursorResultEEEE3$_7JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!43 = distinct !{!43, !"_ZN4base8BindOnceIZN5blink5mojom5blink22IDBDatabaseAsyncWaiter10OpenCursorElllN4mojo9StructPtrINS3_11IDBKeyRangeEEENS2_18IDBCursorDirectionEbNS2_11IDBTaskTypeEPNS6_INS3_27IDBDatabaseOpenCursorResultEEEE3$_7JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!44 = !{!45, !47}
!45 = distinct !{!45, !46, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink21IDBFactoryAsyncWaiter35AbortTransactionsAndCompactDatabaseEPNS4_9IDBStatusEE3$_8JPNS_7RunLoopERS8_EEEDcOT0_DpOT1_: argument 0"}
!46 = distinct !{!46, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink21IDBFactoryAsyncWaiter35AbortTransactionsAndCompactDatabaseEPNS4_9IDBStatusEE3$_8JPNS_7RunLoopERS8_EEEDcOT0_DpOT1_"}
!47 = distinct !{!47, !48, !"_ZN4base8BindOnceIZN5blink5mojom5blink21IDBFactoryAsyncWaiter35AbortTransactionsAndCompactDatabaseEPNS2_9IDBStatusEE3$_8JPNS_7RunLoopERS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!48 = distinct !{!48, !"_ZN4base8BindOnceIZN5blink5mojom5blink21IDBFactoryAsyncWaiter35AbortTransactionsAndCompactDatabaseEPNS2_9IDBStatusEE3$_8JPNS_7RunLoopERS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!49 = !{!50, !52}
!50 = distinct !{!50, !51, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink21IDBFactoryAsyncWaiter28AbortTransactionsForDatabaseEPNS4_9IDBStatusEE3$_9JPNS_7RunLoopERS8_EEEDcOT0_DpOT1_: argument 0"}
!51 = distinct !{!51, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink21IDBFactoryAsyncWaiter28AbortTransactionsForDatabaseEPNS4_9IDBStatusEE3$_9JPNS_7RunLoopERS8_EEEDcOT0_DpOT1_"}
!52 = distinct !{!52, !53, !"_ZN4base8BindOnceIZN5blink5mojom5blink21IDBFactoryAsyncWaiter28AbortTransactionsForDatabaseEPNS2_9IDBStatusEE3$_9JPNS_7RunLoopERS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!53 = distinct !{!53, !"_ZN4base8BindOnceIZN5blink5mojom5blink21IDBFactoryAsyncWaiter28AbortTransactionsForDatabaseEPNS2_9IDBStatusEE3$_9JPNS_7RunLoopERS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
