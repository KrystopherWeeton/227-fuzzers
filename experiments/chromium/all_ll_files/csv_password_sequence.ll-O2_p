; ModuleID = '../../components/password_manager/core/browser/import/csv_password_sequence.cc'
source_filename = "../../components/password_manager/core/browser/import/csv_password_sequence.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.password_manager::CSVPasswordSequence" = type <{ %"class.std::__1::basic_string", %"class.base::flat_map", %"class.base::BasicStringPiece", i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.1" }
%"struct.std::__1::pair" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::pair"* }
%"class.password_manager::CSVFieldParser" = type { i32, %"class.base::BasicStringPiece", i64, i64 }
%"class.base::internal::flat_tree.6" = type { %"class.std::__1::vector.7" }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { i32*, i32*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i32* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::pair.20" = type <{ %"class.base::BasicStringPiece", i32, [4 x i8] }>
%"class.base::internal::flat_tree.19" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [9 x %"struct.std::__1::pair.20"] }
%"class.password_manager::CSVPasswordIterator" = type { %"class.base::flat_map"*, %"class.base::BasicStringPiece", %"class.base::BasicStringPiece", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.17 }
%union.anon.17 = type { %"class.password_manager::CSVPassword" }
%"class.password_manager::CSVPassword" = type { %"class.base::flat_map"*, %"class.base::BasicStringPiece" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::allocator.4"* }
%"class.std::__1::allocator.4" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__split_buffer.35" = type { i32*, i32*, i32*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.10", %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::allocator.12"* }
%"class.std::__1::allocator.12" = type { i8 }

$_ZNK4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8GetFirstENS3_4lessIvEENS3_5arrayINS3_4pairIKS6_N16password_manager11CSVPassword5LabelEEELm9EEEE11equal_rangeINS3_12basic_stringIcS5_NS3_9allocatorIcEEEEEENSB_IPKSG_SP_EERKT_ = comdat any

$_ZNSt3__16vectorINS_4pairImN16password_manager11CSVPassword5LabelEEENS_9allocatorIS5_EEE7emplaceIJRKmS4_EEENS_11__wrap_iterIPS5_EENSC_IPKS5_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairImN16password_manager11CSVPassword5LabelEEERNS_9allocatorIS5_EEE12emplace_backIJRKmS4_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN16password_manager11CSVPassword5LabelENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIN16password_manager11CSVPassword5LabelERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_ = comdat any

@_ZZN16password_manager12_GLOBAL__N_111NameToLabelEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE9kLabelMap = internal constant { { [9 x { %"class.base::BasicStringPiece", i32 }] } } { { [9 x { %"class.base::BasicStringPiece", i32 }] } { [9 x { %"class.base::BasicStringPiece", i32 }] [{ %"class.base::BasicStringPiece", i32 } { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i64 7 }, i32 1 }, { %"class.base::BasicStringPiece", i32 } { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i64 8 }, i32 0 }, { %"class.base::BasicStringPiece", i32 } { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i64 5 }, i32 1 }, { %"class.base::BasicStringPiece", i32 } { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i64 6 }, i32 0 }, { %"class.base::BasicStringPiece", i32 } { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), i64 8 }, i32 2 }, { %"class.base::BasicStringPiece", i32 } { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), i64 3 }, i32 0 }, { %"class.base::BasicStringPiece", i32 } { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i64 4 }, i32 1 }, { %"class.base::BasicStringPiece", i32 } { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i32 0, i32 0), i64 8 }, i32 1 }, { %"class.base::BasicStringPiece", i32 } { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0), i64 7 }, i32 0 }] } }, align 8
@.str = private unnamed_addr constant [8 x i8] c"account\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"hostname\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"login\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"password\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"user\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"username\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"website\00", align 1

@_ZN16password_manager19CSVPasswordSequenceC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.password_manager::CSVPasswordSequence"*, %"class.std::__1::basic_string"*), void (%"class.password_manager::CSVPasswordSequence"*, %"class.std::__1::basic_string"*)* @_ZN16password_manager19CSVPasswordSequenceC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN16password_manager19CSVPasswordSequenceC1EOS0_ = hidden unnamed_addr alias void (%"class.password_manager::CSVPasswordSequence"*, %"class.password_manager::CSVPasswordSequence"*), void (%"class.password_manager::CSVPasswordSequence"*, %"class.password_manager::CSVPasswordSequence"*)* @_ZN16password_manager19CSVPasswordSequenceC2EOS0_
@_ZN16password_manager19CSVPasswordSequenceD1Ev = hidden unnamed_addr alias void (%"class.password_manager::CSVPasswordSequence"*), void (%"class.password_manager::CSVPasswordSequence"*)* @_ZN16password_manager19CSVPasswordSequenceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager19CSVPasswordSequenceC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.password_manager::CSVPasswordSequence"*, %"class.std::__1::basic_string"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca %"class.password_manager::CSVFieldParser", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.base::internal::flat_tree.6", align 8
  %9 = bitcast %"class.password_manager::CSVPasswordSequence"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #9
  %11 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 3
  %14 = bitcast %"class.password_manager::CSVPasswordSequence"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = bitcast %"class.base::flat_map"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 44, i1 false)
  %17 = load i8, i8* %15, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  br label %24

22:                                               ; preds = %2
  %23 = zext i8 %17 to i64
  br label %24

24:                                               ; preds = %19, %22
  %25 = phi i64 [ %21, %19 ], [ %23, %22 ]
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  store i32 1, i32* %13, align 8
  br label %200

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = select i1 %18, i8* %30, i8* %9
  %32 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %17 to i64
  %35 = select i1 %18, i64 %33, i64 %34
  %36 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 2, i32 0
  store i8* %31, i8** %36, align 8
  %37 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 2, i32 1
  store i64 %35, i64* %37, align 8
  %38 = tail call { i8*, i64 } @_ZN16password_manager14ConsumeCSVLineEPN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* %12) #9
  %39 = extractvalue { i8*, i64 } %38, 0
  %40 = extractvalue { i8*, i64 } %38, 1
  %41 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #9
  store i64 0, i64* %5, align 8
  %42 = bitcast %"class.password_manager::CSVFieldParser"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %42) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 40, i1 false)
  call void @_ZN16password_manager14CSVFieldParserC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.password_manager::CSVFieldParser"* nonnull %6, i8* %39, i64 %40) #9
  %43 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %6, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %128, label %46

46:                                               ; preds = %28
  %47 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %6, i64 0, i32 2
  %48 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %6, i64 0, i32 1, i32 1
  %49 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  %50 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %51 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %52 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %58 = bitcast %"struct.std::__1::pair"** %57 to i64*
  %59 = bitcast i32* %4 to i8*
  %60 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %11, i64 0, i32 0, i32 0
  br label %61

61:                                               ; preds = %46, %123
  %62 = load i64, i64* %47, align 8
  %63 = load i64, i64* %48, align 8
  %64 = icmp ugt i64 %62, %63
  br i1 %64, label %128, label %65

65:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 16, i1 false) #9
  %66 = call zeroext i1 @_ZN16password_manager14CSVFieldParser9NextFieldEPN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.password_manager::CSVFieldParser"* nonnull %6, %"class.base::BasicStringPiece"* nonnull %7) #9
  br i1 %66, label %67, label %122

67:                                               ; preds = %65
  %68 = load i8*, i8** %50, align 8
  %69 = load i64, i64* %51, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #9
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, i8* %68, i64 %69) #9
  %70 = call { %"struct.std::__1::pair.20"*, %"struct.std::__1::pair.20"* } @_ZNK4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8GetFirstENS3_4lessIvEENS3_5arrayINS3_4pairIKS6_N16password_manager11CSVPassword5LabelEEELm9EEEE11equal_rangeINS3_12basic_stringIcS5_NS3_9allocatorIcEEEEEENSB_IPKSG_SP_EERKT_(%"class.base::internal::flat_tree.19"* bitcast ({ { [9 x { %"class.base::BasicStringPiece", i32 }] } }* @_ZZN16password_manager12_GLOBAL__N_111NameToLabelEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE9kLabelMap to %"class.base::internal::flat_tree.19"*), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #9
  %71 = extractvalue { %"struct.std::__1::pair.20"*, %"struct.std::__1::pair.20"* } %70, 0
  %72 = extractvalue { %"struct.std::__1::pair.20"*, %"struct.std::__1::pair.20"* } %70, 1
  %73 = icmp eq %"struct.std::__1::pair.20"* %71, %72
  %74 = select i1 %73, %"struct.std::__1::pair.20"* bitcast (i8** getelementptr inbounds ({ { [9 x { %"class.base::BasicStringPiece", i32 }] } }, { { [9 x { %"class.base::BasicStringPiece", i32 }] } }* @_ZZN16password_manager12_GLOBAL__N_111NameToLabelEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE9kLabelMap, i64 1, i32 0, i32 0, i64 0, i32 0, i32 0) to %"struct.std::__1::pair.20"*), %"struct.std::__1::pair.20"* %71
  %75 = load i8, i8* %54, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %67
  %78 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %78) #10
  br label %79

79:                                               ; preds = %67, %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #9
  %80 = icmp eq %"struct.std::__1::pair.20"* %74, bitcast (i8** getelementptr inbounds ({ { [9 x { %"class.base::BasicStringPiece", i32 }] } }, { { [9 x { %"class.base::BasicStringPiece", i32 }] } }* @_ZZN16password_manager12_GLOBAL__N_111NameToLabelEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE9kLabelMap, i64 1, i32 0, i32 0, i64 0, i32 0, i32 0) to %"struct.std::__1::pair.20"*)
  %81 = getelementptr inbounds %"struct.std::__1::pair.20", %"struct.std::__1::pair.20"* %74, i64 0, i32 1
  %82 = icmp eq i32* %81, null
  %83 = or i1 %80, %82
  br i1 %83, label %123, label %84

84:                                               ; preds = %79
  %85 = load i32, i32* %81, align 4
  %86 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %56, align 8
  %87 = load i64, i64* %58, align 8
  %88 = ptrtoint %"struct.std::__1::pair"* %86 to i64
  %89 = sub i64 %87, %88
  %90 = icmp eq i64 %89, 0
  %91 = inttoptr i64 %87 to %"struct.std::__1::pair"*
  br i1 %90, label %109, label %92

92:                                               ; preds = %84
  %93 = ashr exact i64 %89, 4
  %94 = load i64, i64* %5, align 8
  br label %95

95:                                               ; preds = %95, %92
  %96 = phi %"struct.std::__1::pair"* [ %86, %92 ], [ %107, %95 ]
  %97 = phi i64 [ %93, %92 ], [ %106, %95 ]
  %98 = lshr i64 %97, 1
  %99 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 %98
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 0, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = icmp ult i64 %101, %94
  %103 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 1
  %104 = xor i64 %98, -1
  %105 = add i64 %97, %104
  %106 = select i1 %102, i64 %105, i64 %98
  %107 = select i1 %102, %"struct.std::__1::pair"* %103, %"struct.std::__1::pair"* %96
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %109, label %95

109:                                              ; preds = %95, %84
  %110 = phi %"struct.std::__1::pair"* [ %86, %84 ], [ %107, %95 ]
  %111 = icmp eq %"struct.std::__1::pair"* %110, %91
  br i1 %111, label %117, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %110, i64 0, i32 0
  %114 = load i64, i64* %5, align 8
  %115 = load i64, i64* %113, align 8
  %116 = icmp ult i64 %114, %115
  br i1 %116, label %117, label %119

117:                                              ; preds = %112, %109
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #9
  store i32 0, i32* %4, align 4
  %118 = call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairImN16password_manager11CSVPassword5LabelEEENS_9allocatorIS5_EEE7emplaceIJRKmS4_EEENS_11__wrap_iterIPS5_EENSC_IPKS5_EEDpOT_(%"class.std::__1::vector"* %60, %"struct.std::__1::pair"* %110, i64* nonnull dereferenceable(8) %5, i32* nonnull dereferenceable(4) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #9
  br label %119

119:                                              ; preds = %112, %117
  %120 = phi %"struct.std::__1::pair"* [ %118, %117 ], [ %110, %112 ]
  %121 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %120, i64 0, i32 1
  store i32 %85, i32* %121, align 4
  br label %123

122:                                              ; preds = %65
  store i32 1, i32* %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #9
  call void @_ZN16password_manager14CSVFieldParserD1Ev(%"class.password_manager::CSVFieldParser"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %42) #9
  br label %199

123:                                              ; preds = %79, %119
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #9
  %124 = load i64, i64* %5, align 8
  %125 = add i64 %124, 1
  store i64 %125, i64* %5, align 8
  %126 = load i32, i32* %43, align 8
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %128, label %61

128:                                              ; preds = %123, %61, %28
  call void @_ZN16password_manager14CSVFieldParserD1Ev(%"class.password_manager::CSVFieldParser"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %42) #9
  %129 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %130 = bitcast %"struct.std::__1::pair"** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.base::flat_map"* %11 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 %131, %133
  %135 = icmp eq i64 %134, 48
  %136 = inttoptr i64 %133 to %"struct.std::__1::pair"*
  %137 = inttoptr i64 %131 to %"struct.std::__1::pair"*
  br i1 %135, label %139, label %138

138:                                              ; preds = %128
  store i32 2, i32* %13, align 8
  br label %199

139:                                              ; preds = %128
  %140 = bitcast %"class.base::internal::flat_tree.6"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #9
  %141 = getelementptr inbounds %"class.base::internal::flat_tree.6", %"class.base::internal::flat_tree.6"* %8, i64 0, i32 0, i32 0, i32 0
  %142 = getelementptr inbounds %"class.base::internal::flat_tree.6", %"class.base::internal::flat_tree.6"* %8, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %140, i8 0, i64 24, i1 false) #9
  %143 = icmp eq %"struct.std::__1::pair"* %136, %137
  br i1 %143, label %198, label %144

144:                                              ; preds = %139
  %145 = bitcast i32** %142 to i64*
  %146 = getelementptr inbounds %"class.base::internal::flat_tree.6", %"class.base::internal::flat_tree.6"* %8, i64 0, i32 0
  br label %147

147:                                              ; preds = %187, %144
  %148 = phi i64 [ 0, %144 ], [ %188, %187 ]
  %149 = phi i8* [ null, %144 ], [ %186, %187 ]
  %150 = phi i32* [ null, %144 ], [ %185, %187 ]
  %151 = phi %"struct.std::__1::pair"* [ %136, %144 ], [ %183, %187 ]
  %152 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 0, i32 1
  %153 = ptrtoint i32* %150 to i64
  %154 = sub i64 %148, %153
  %155 = icmp eq i64 %154, 0
  %156 = inttoptr i64 %148 to i32*
  br i1 %155, label %173, label %157

157:                                              ; preds = %147
  %158 = ashr exact i64 %154, 2
  %159 = load i32, i32* %152, align 4
  br label %160

160:                                              ; preds = %160, %157
  %161 = phi i32* [ %150, %157 ], [ %171, %160 ]
  %162 = phi i64 [ %158, %157 ], [ %170, %160 ]
  %163 = lshr i64 %162, 1
  %164 = getelementptr inbounds i32, i32* %161, i64 %163
  %165 = load i32, i32* %164, align 4
  %166 = icmp slt i32 %165, %159
  %167 = getelementptr inbounds i32, i32* %164, i64 1
  %168 = xor i64 %163, -1
  %169 = add i64 %162, %168
  %170 = select i1 %166, i64 %169, i64 %163
  %171 = select i1 %166, i32* %167, i32* %161
  %172 = icmp eq i64 %170, 0
  br i1 %172, label %173, label %160

173:                                              ; preds = %160, %147
  %174 = phi i32* [ %150, %147 ], [ %171, %160 ]
  %175 = icmp eq i32* %174, %156
  br i1 %175, label %181, label %176

176:                                              ; preds = %173
  %177 = load i32, i32* %152, align 4
  %178 = load i32, i32* %174, align 4
  %179 = icmp slt i32 %177, %178
  br i1 %179, label %181, label %180

180:                                              ; preds = %176
  store i32 2, i32* %13, align 8
  br label %191

181:                                              ; preds = %176, %173
  %182 = call i32* @_ZNSt3__16vectorIN16password_manager11CSVPassword5LabelENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.7"* nonnull %146, i32* %174, i32* dereferenceable(4) %152) #9
  %183 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 1
  %184 = icmp eq %"struct.std::__1::pair"* %183, %137
  %185 = load i32*, i32** %141, align 8
  %186 = bitcast i32* %185 to i8*
  br i1 %184, label %189, label %187

187:                                              ; preds = %181
  %188 = load i64, i64* %145, align 8
  br label %147

189:                                              ; preds = %181
  %190 = bitcast i32* %185 to i8*
  br label %191

191:                                              ; preds = %189, %180
  %192 = phi i8* [ %149, %180 ], [ %190, %189 ]
  %193 = phi i32* [ %150, %180 ], [ %185, %189 ]
  %194 = icmp eq i32* %193, null
  br i1 %194, label %198, label %195

195:                                              ; preds = %191
  %196 = ptrtoint i32* %193 to i64
  %197 = bitcast i32** %142 to i64*
  store i64 %196, i64* %197, align 8
  call void @_ZdlPv(i8* %192) #10
  br label %198

198:                                              ; preds = %139, %191, %195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #9
  br label %199

199:                                              ; preds = %122, %198, %138
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #9
  br label %200

200:                                              ; preds = %199, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare { i8*, i64 } @_ZN16password_manager14ConsumeCSVLineEPN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN16password_manager14CSVFieldParserC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.password_manager::CSVFieldParser"*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZN16password_manager14CSVFieldParser9NextFieldEPN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.password_manager::CSVFieldParser"*, %"class.base::BasicStringPiece"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN16password_manager14CSVFieldParserD1Ev(%"class.password_manager::CSVFieldParser"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager19CSVPasswordSequenceC2EOS0_(%"class.password_manager::CSVPasswordSequence"* nocapture, %"class.password_manager::CSVPasswordSequence"* nocapture dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.password_manager::CSVPasswordSequence"* %0 to i8*
  %4 = bitcast %"class.password_manager::CSVPasswordSequence"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #9
  %5 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %1, i64 0, i32 1
  %7 = bitcast %"class.base::flat_map"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = bitcast %"class.base::flat_map"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::flat_map"* %5 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"struct.std::__1::pair"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::pair"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.std::__1::pair"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"struct.std::__1::pair"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.base::flat_map"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #9
  %22 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %1, i64 0, i32 2
  %24 = bitcast %"class.base::BasicStringPiece"* %22 to i8*
  %25 = bitcast %"class.base::BasicStringPiece"* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"class.password_manager::CSVPasswordSequence"* @_ZN16password_manager19CSVPasswordSequenceaSEOS0_(%"class.password_manager::CSVPasswordSequence"* returned, %"class.password_manager::CSVPasswordSequence"* nocapture dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.password_manager::CSVPasswordSequence"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #10
  br label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %"class.password_manager::CSVPasswordSequence"* %0 to i8*
  %12 = bitcast %"class.password_manager::CSVPasswordSequence"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #9
  %13 = bitcast %"class.password_manager::CSVPasswordSequence"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  store i8 0, i8* %14, align 1
  store i8 0, i8* %12, align 1
  %15 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %1, i64 0, i32 1
  %17 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %10
  %21 = ptrtoint %"struct.std::__1::pair"* %18 to i64
  %22 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %"struct.std::__1::pair"** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"struct.std::__1::pair"* %18 to i8*
  tail call void @_ZdlPv(i8* %24) #10
  %25 = bitcast %"class.base::flat_map"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #9
  br label %26

26:                                               ; preds = %10, %20
  %27 = bitcast %"class.base::flat_map"* %16 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.base::flat_map"* %15 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast %"struct.std::__1::pair"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast %"struct.std::__1::pair"** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"struct.std::__1::pair"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"struct.std::__1::pair"** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.base::flat_map"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #9
  %41 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 2
  %42 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %1, i64 0, i32 2
  %43 = bitcast %"class.base::BasicStringPiece"* %41 to i8*
  %44 = bitcast %"class.base::BasicStringPiece"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %1, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 3
  store i32 %46, i32* %47, align 8
  ret %"class.password_manager::CSVPasswordSequence"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager19CSVPasswordSequenceD2Ev(%"class.password_manager::CSVPasswordSequence"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %2, align 8
  %4 = icmp eq %"struct.std::__1::pair"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.std::__1::pair"* %3 to i64
  %7 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::pair"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.std::__1::pair"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #10
  br label %10

10:                                               ; preds = %1, %5
  %11 = bitcast %"class.password_manager::CSVPasswordSequence"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #10
  br label %18

18:                                               ; preds = %10, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16password_manager19CSVPasswordSequence5beginEv(%"class.password_manager::CSVPasswordIterator"* noalias sret, %"class.password_manager::CSVPasswordSequence"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %1, i64 0, i32 1
  br i1 %5, label %8, label %7

7:                                                ; preds = %2
  tail call void @_ZN16password_manager19CSVPasswordIteratorC1ERKN4base8flat_mapImNS_11CSVPassword5LabelENSt3__14lessIvEENS5_6vectorINS5_4pairImS4_EENS5_9allocatorISA_EEEEEENS1_16BasicStringPieceIcNS5_11char_traitsIcEEEE(%"class.password_manager::CSVPasswordIterator"* %0, %"class.base::flat_map"* dereferenceable(24) %6, i8* null, i64 0) #9
  br label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %1, i64 0, i32 2, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %1, i64 0, i32 2, i32 1
  %12 = load i64, i64* %11, align 8
  tail call void @_ZN16password_manager19CSVPasswordIteratorC1ERKN4base8flat_mapImNS_11CSVPassword5LabelENSt3__14lessIvEENS5_6vectorINS5_4pairImS4_EENS5_9allocatorISA_EEEEEENS1_16BasicStringPieceIcNS5_11char_traitsIcEEEE(%"class.password_manager::CSVPasswordIterator"* %0, %"class.base::flat_map"* dereferenceable(24) %6, i8* %10, i64 %12) #9
  br label %13

13:                                               ; preds = %8, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16password_manager19CSVPasswordSequence3endEv(%"class.password_manager::CSVPasswordIterator"* noalias sret, %"class.password_manager::CSVPasswordSequence"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.password_manager::CSVPasswordSequence", %"class.password_manager::CSVPasswordSequence"* %1, i64 0, i32 1
  tail call void @_ZN16password_manager19CSVPasswordIteratorC1ERKN4base8flat_mapImNS_11CSVPassword5LabelENSt3__14lessIvEENS5_6vectorINS5_4pairImS4_EENS5_9allocatorISA_EEEEEENS1_16BasicStringPieceIcNS5_11char_traitsIcEEEE(%"class.password_manager::CSVPasswordIterator"* %0, %"class.base::flat_map"* dereferenceable(24) %3, i8* null, i64 0) #9
  ret void
}

declare void @_ZN16password_manager19CSVPasswordIteratorC1ERKN4base8flat_mapImNS_11CSVPassword5LabelENSt3__14lessIvEENS5_6vectorINS5_4pairImS4_EENS5_9allocatorISA_EEEEEENS1_16BasicStringPieceIcNS5_11char_traitsIcEEEE(%"class.password_manager::CSVPasswordIterator"*, %"class.base::flat_map"* dereferenceable(24), i8*, i64) unnamed_addr #2

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair.20"*, %"struct.std::__1::pair.20"* } @_ZNK4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8GetFirstENS3_4lessIvEENS3_5arrayINS3_4pairIKS6_N16password_manager11CSVPassword5LabelEEELm9EEEE11equal_rangeINS3_12basic_stringIcS5_NS3_9allocatorIcEEEEEENSB_IPKSG_SP_EERKT_(%"class.base::internal::flat_tree.19"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::flat_tree.19", %"class.base::internal::flat_tree.19"* %0, i64 0, i32 0, i32 0, i64 0
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %11 = select i1 %7, i8* %9, i8* %10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %6 to i64
  %15 = select i1 %7, i64 %13, i64 %14
  br label %16

16:                                               ; preds = %37, %2
  %17 = phi i64 [ 9, %2 ], [ %39, %37 ]
  %18 = phi %"struct.std::__1::pair.20"* [ %3, %2 ], [ %38, %37 ]
  %19 = lshr i64 %17, 1
  %20 = getelementptr inbounds %"struct.std::__1::pair.20", %"struct.std::__1::pair.20"* %18, i64 %19
  %21 = getelementptr inbounds %"struct.std::__1::pair.20", %"struct.std::__1::pair.20"* %20, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::pair.20", %"struct.std::__1::pair.20"* %18, i64 %19, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp ugt i64 %24, %15
  %26 = select i1 %25, i64 %15, i64 %24
  %27 = tail call i32 @memcmp(i8* %22, i8* %11, i64 %26) #9
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %16
  %30 = icmp ult i64 %24, %15
  br i1 %30, label %33, label %37

31:                                               ; preds = %16
  %32 = icmp slt i32 %27, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %31, %29
  %34 = getelementptr inbounds %"struct.std::__1::pair.20", %"struct.std::__1::pair.20"* %20, i64 1
  %35 = xor i64 %19, -1
  %36 = add i64 %17, %35
  br label %37

37:                                               ; preds = %33, %31, %29
  %38 = phi %"struct.std::__1::pair.20"* [ %34, %33 ], [ %18, %31 ], [ %18, %29 ]
  %39 = phi i64 [ %36, %33 ], [ %19, %31 ], [ %19, %29 ]
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %16

41:                                               ; preds = %37
  %42 = ptrtoint %"struct.std::__1::pair.20"* %38 to i64
  %43 = getelementptr inbounds %"class.base::internal::flat_tree.19", %"class.base::internal::flat_tree.19"* %0, i64 0, i32 0, i32 0, i64 9
  %44 = icmp eq %"struct.std::__1::pair.20"* %38, %43
  br i1 %44, label %61, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.std::__1::pair.20", %"struct.std::__1::pair.20"* %38, i64 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair.20", %"struct.std::__1::pair.20"* %38, i64 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ugt i64 %15, %49
  %51 = select i1 %50, i64 %49, i64 %15
  %52 = tail call i32 @memcmp(i8* %11, i8* %47, i64 %51) #9
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %45
  %55 = icmp ult i64 %15, %49
  br i1 %55, label %61, label %58

56:                                               ; preds = %45
  %57 = icmp slt i32 %52, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %54, %56
  %59 = getelementptr inbounds %"struct.std::__1::pair.20", %"struct.std::__1::pair.20"* %38, i64 1
  %60 = ptrtoint %"struct.std::__1::pair.20"* %59 to i64
  br label %61

61:                                               ; preds = %54, %41, %56, %58
  %62 = phi i64 [ %60, %58 ], [ %42, %56 ], [ %42, %41 ], [ %42, %54 ]
  %63 = insertvalue { %"struct.std::__1::pair.20"*, %"struct.std::__1::pair.20"* } undef, %"struct.std::__1::pair.20"* %38, 0
  %64 = inttoptr i64 %62 to %"struct.std::__1::pair.20"*
  %65 = insertvalue { %"struct.std::__1::pair.20"*, %"struct.std::__1::pair.20"* } %63, %"struct.std::__1::pair.20"* %64, 1
  ret { %"struct.std::__1::pair.20"*, %"struct.std::__1::pair.20"* } %65
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairImN16password_manager11CSVPassword5LabelEEENS_9allocatorIS5_EEE7emplaceIJRKmS4_EEENS_11__wrap_iterIPS5_EENSC_IPKS5_EEDpOT_(%"class.std::__1::vector"*, %"struct.std::__1::pair"*, i64* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %6 = alloca %"struct.std::__1::__split_buffer", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair"* %9 to i64
  %14 = ptrtoint %"struct.std::__1::pair"* %11 to i64
  br i1 %12, label %15, label %144

15:                                               ; preds = %4
  %16 = icmp eq %"struct.std::__1::pair"* %9, %1
  br i1 %16, label %17, label %25

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %19 = load i64, i64* %2, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %21 = load i32, i32* %3, align 4
  store i32 %21, i32* %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %23 = ptrtoint %"struct.std::__1::pair"* %22 to i64
  %24 = bitcast %"struct.std::__1::pair"** %8 to i64*
  store i64 %23, i64* %24, align 8
  br label %295

25:                                               ; preds = %15
  %26 = load i64, i64* %2, align 8
  %27 = load i32, i32* %3, align 4
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %29 = ptrtoint %"struct.std::__1::pair"* %28 to i64
  %30 = sub i64 %13, %29
  %31 = ashr exact i64 %30, 4
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %31
  %33 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %34 = icmp ult %"struct.std::__1::pair"* %32, %9
  br i1 %34, label %35, label %64

35:                                               ; preds = %25
  %36 = sub nsw i64 0, %31
  %37 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 %36, i32 0
  %38 = bitcast i64* %37 to i8*
  %39 = xor i64 %5, -1
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 4
  %43 = add nuw nsw i64 %42, 1
  %44 = and i64 %43, 3
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %35, %46
  %47 = phi %"struct.std::__1::pair"* [ %53, %46 ], [ %9, %35 ]
  %48 = phi %"struct.std::__1::pair"* [ %52, %46 ], [ %32, %35 ]
  %49 = phi i64 [ %54, %46 ], [ %44, %35 ]
  %50 = bitcast %"struct.std::__1::pair"* %47 to i8*
  %51 = bitcast %"struct.std::__1::pair"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false) #9
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 1
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 1
  %54 = add i64 %49, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %46, !llvm.loop !2

56:                                               ; preds = %46, %35
  %57 = phi %"struct.std::__1::pair"* [ %9, %35 ], [ %53, %46 ]
  %58 = phi %"struct.std::__1::pair"* [ %32, %35 ], [ %52, %46 ]
  %59 = phi %"struct.std::__1::pair"* [ undef, %35 ], [ %53, %46 ]
  %60 = icmp ult i8* %40, inttoptr (i64 48 to i8*)
  br i1 %60, label %61, label %121

61:                                               ; preds = %121, %56
  %62 = phi %"struct.std::__1::pair"* [ %59, %56 ], [ %139, %121 ]
  %63 = ptrtoint %"struct.std::__1::pair"* %62 to i64
  br label %64

64:                                               ; preds = %61, %25
  %65 = phi i64 [ %63, %61 ], [ %13, %25 ]
  store i64 %65, i64* %33, align 8
  %66 = icmp eq i64 %30, 0
  br i1 %66, label %141, label %67

67:                                               ; preds = %64
  %68 = add i64 %30, -16
  %69 = lshr i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %87, label %73

73:                                               ; preds = %67, %73
  %74 = phi %"struct.std::__1::pair"* [ %78, %73 ], [ %9, %67 ]
  %75 = phi %"struct.std::__1::pair"* [ %77, %73 ], [ %32, %67 ]
  %76 = phi i64 [ %85, %73 ], [ %71, %67 ]
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %75, i64 -1
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 -1
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %77, i64 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 0, i32 0
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %75, i64 -1, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 -1, i32 1
  store i32 %83, i32* %84, align 8
  %85 = add i64 %76, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %73, !llvm.loop !4

87:                                               ; preds = %73, %67
  %88 = phi %"struct.std::__1::pair"* [ %9, %67 ], [ %78, %73 ]
  %89 = phi %"struct.std::__1::pair"* [ %32, %67 ], [ %77, %73 ]
  %90 = icmp ult i64 %68, 48
  br i1 %90, label %141, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::pair"* [ %113, %91 ], [ %88, %87 ]
  %93 = phi %"struct.std::__1::pair"* [ %112, %91 ], [ %89, %87 ]
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -1, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -1, i32 0
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -1, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -1, i32 1
  store i32 %98, i32* %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -2, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -2, i32 0
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -2, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -2, i32 1
  store i32 %104, i32* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -3, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -3, i32 0
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -3, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -3, i32 1
  store i32 %110, i32* %111, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -4
  %113 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -4
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %112, i64 0, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %113, i64 0, i32 0
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -4, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -4, i32 1
  store i32 %118, i32* %119, align 8
  %120 = icmp eq %"struct.std::__1::pair"* %112, %1
  br i1 %120, label %141, label %91

121:                                              ; preds = %56, %121
  %122 = phi %"struct.std::__1::pair"* [ %139, %121 ], [ %57, %56 ]
  %123 = phi %"struct.std::__1::pair"* [ %138, %121 ], [ %58, %56 ]
  %124 = bitcast %"struct.std::__1::pair"* %122 to i8*
  %125 = bitcast %"struct.std::__1::pair"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 16, i1 false) #9
  %126 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 1
  %127 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %122, i64 1
  %128 = bitcast %"struct.std::__1::pair"* %127 to i8*
  %129 = bitcast %"struct.std::__1::pair"* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 16, i1 false) #9
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 2
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %122, i64 2
  %132 = bitcast %"struct.std::__1::pair"* %131 to i8*
  %133 = bitcast %"struct.std::__1::pair"* %130 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 16, i1 false) #9
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 3
  %135 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %122, i64 3
  %136 = bitcast %"struct.std::__1::pair"* %135 to i8*
  %137 = bitcast %"struct.std::__1::pair"* %134 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %137, i64 16, i1 false) #9
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 4
  %139 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %122, i64 4
  %140 = icmp ult %"struct.std::__1::pair"* %138, %9
  br i1 %140, label %121, label %61

141:                                              ; preds = %87, %91, %64
  %142 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  store i64 %26, i64* %142, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  store i32 %27, i32* %143, align 8
  br label %295

144:                                              ; preds = %4
  %145 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %146 = bitcast %"struct.std::__1::__split_buffer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %146) #9
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 0
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 1
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 2
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 3, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 3, i32 1, i32 0
  %152 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %153 = bitcast %"class.std::__1::vector"* %0 to i64*
  %154 = bitcast %"struct.std::__1::__split_buffer"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 40, i1 false)
  %155 = load i64, i64* %153, align 8
  %156 = sub i64 %13, %155
  %157 = ashr exact i64 %156, 4
  %158 = add nsw i64 %157, 1
  %159 = icmp ugt i64 %158, 1152921504606846975
  br i1 %159, label %160, label %162

160:                                              ; preds = %144
  %161 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %161) #11
  unreachable

162:                                              ; preds = %144
  %163 = bitcast %"struct.std::__1::pair"** %10 to i64*
  %164 = sub i64 %14, %155
  %165 = ashr exact i64 %164, 4
  %166 = icmp ult i64 %165, 576460752303423487
  br i1 %166, label %171, label %167

167:                                              ; preds = %162
  %168 = sub i64 %5, %155
  %169 = ashr exact i64 %168, 4
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %150, align 8
  %170 = bitcast %"class.std::__1::allocator.4"** %151 to %"class.std::__1::__compressed_pair.1"**
  store %"class.std::__1::__compressed_pair.1"* %145, %"class.std::__1::__compressed_pair.1"** %170, align 8
  br label %182

171:                                              ; preds = %162
  %172 = ashr exact i64 %164, 3
  %173 = icmp ult i64 %172, %158
  %174 = select i1 %173, i64 %158, i64 %172
  %175 = sub i64 %5, %155
  %176 = ashr exact i64 %175, 4
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %150, align 8
  %177 = bitcast %"class.std::__1::allocator.4"** %151 to %"class.std::__1::__compressed_pair.1"**
  store %"class.std::__1::__compressed_pair.1"* %145, %"class.std::__1::__compressed_pair.1"** %177, align 8
  %178 = icmp eq i64 %174, 0
  br i1 %178, label %188, label %179

179:                                              ; preds = %171
  %180 = icmp ugt i64 %174, 1152921504606846975
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  tail call void @abort() #11
  unreachable

182:                                              ; preds = %167, %179
  %183 = phi i64 [ 1152921504606846975, %167 ], [ %174, %179 ]
  %184 = phi i64 [ %169, %167 ], [ %176, %179 ]
  %185 = shl i64 %183, 4
  %186 = tail call i8* @_Znwm(i64 %185) #10
  %187 = bitcast i8* %186 to %"struct.std::__1::pair"*
  br label %188

188:                                              ; preds = %171, %182
  %189 = phi i64 [ %184, %182 ], [ %176, %171 ]
  %190 = phi i64 [ %183, %182 ], [ 0, %171 ]
  %191 = phi %"struct.std::__1::pair"* [ %187, %182 ], [ null, %171 ]
  store %"struct.std::__1::pair"* %191, %"struct.std::__1::pair"** %147, align 8
  %192 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %191, i64 %189
  store %"struct.std::__1::pair"* %192, %"struct.std::__1::pair"** %149, align 8
  store %"struct.std::__1::pair"* %192, %"struct.std::__1::pair"** %148, align 8
  %193 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %191, i64 %190
  store %"struct.std::__1::pair"* %193, %"struct.std::__1::pair"** %150, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairImN16password_manager11CSVPassword5LabelEEERNS_9allocatorIS5_EEE12emplace_backIJRKmS4_EEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %6, i64* dereferenceable(8) %2, i32* dereferenceable(4) %3)
  %194 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %148, align 8
  %195 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %196 = ptrtoint %"struct.std::__1::pair"* %195 to i64
  %197 = sub i64 %5, %196
  %198 = ashr exact i64 %197, 4
  %199 = sub nsw i64 0, %198
  %200 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %194, i64 %199
  store %"struct.std::__1::pair"* %200, %"struct.std::__1::pair"** %148, align 8
  %201 = icmp sgt i64 %197, 0
  br i1 %201, label %202, label %205

202:                                              ; preds = %188
  %203 = bitcast %"struct.std::__1::pair"* %200 to i8*
  %204 = bitcast %"struct.std::__1::pair"* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %204, i64 %197, i1 false) #9
  br label %205

205:                                              ; preds = %202, %188
  %206 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %207 = icmp eq %"struct.std::__1::pair"* %206, %1
  br i1 %207, label %208, label %212

208:                                              ; preds = %205
  %209 = ptrtoint %"struct.std::__1::pair"* %206 to i64
  %210 = bitcast %"struct.std::__1::pair"** %149 to i64*
  %211 = load i64, i64* %210, align 8
  br label %269

212:                                              ; preds = %205
  %213 = bitcast %"struct.std::__1::pair"** %149 to i8**
  %214 = load i8*, i8** %213, align 8
  %215 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %206, i64 -1, i32 0
  %216 = ptrtoint i64* %215 to i64
  %217 = sub i64 %216, %5
  %218 = lshr i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %235, label %222

222:                                              ; preds = %212, %222
  %223 = phi i8* [ %230, %222 ], [ %214, %212 ]
  %224 = phi %"struct.std::__1::pair"* [ %227, %222 ], [ %1, %212 ]
  %225 = phi i64 [ %231, %222 ], [ %220, %212 ]
  %226 = bitcast %"struct.std::__1::pair"* %224 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %226, i64 16, i1 false) #9
  %227 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %224, i64 1
  %228 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %149, align 8
  %229 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %228, i64 1
  store %"struct.std::__1::pair"* %229, %"struct.std::__1::pair"** %149, align 8
  %230 = bitcast %"struct.std::__1::pair"* %229 to i8*
  %231 = add i64 %225, -1
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %222, !llvm.loop !5

233:                                              ; preds = %222
  %234 = bitcast %"struct.std::__1::pair"* %229 to i8*
  br label %235

235:                                              ; preds = %212, %233
  %236 = phi %"struct.std::__1::pair"* [ undef, %212 ], [ %229, %233 ]
  %237 = phi i8* [ %214, %212 ], [ %234, %233 ]
  %238 = phi %"struct.std::__1::pair"* [ %1, %212 ], [ %227, %233 ]
  %239 = icmp ult i64 %217, 48
  br i1 %239, label %264, label %240

240:                                              ; preds = %235, %240
  %241 = phi i8* [ %263, %240 ], [ %237, %235 ]
  %242 = phi %"struct.std::__1::pair"* [ %259, %240 ], [ %238, %235 ]
  %243 = bitcast %"struct.std::__1::pair"* %242 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* align 8 %243, i64 16, i1 false) #9
  %244 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %242, i64 1
  %245 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %149, align 8
  %246 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %245, i64 1
  store %"struct.std::__1::pair"* %246, %"struct.std::__1::pair"** %149, align 8
  %247 = bitcast %"struct.std::__1::pair"* %246 to i8*
  %248 = bitcast %"struct.std::__1::pair"* %244 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %247, i8* align 8 %248, i64 16, i1 false) #9
  %249 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %242, i64 2
  %250 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %149, align 8
  %251 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %250, i64 1
  store %"struct.std::__1::pair"* %251, %"struct.std::__1::pair"** %149, align 8
  %252 = bitcast %"struct.std::__1::pair"* %251 to i8*
  %253 = bitcast %"struct.std::__1::pair"* %249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %252, i8* align 8 %253, i64 16, i1 false) #9
  %254 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %242, i64 3
  %255 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %149, align 8
  %256 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %255, i64 1
  store %"struct.std::__1::pair"* %256, %"struct.std::__1::pair"** %149, align 8
  %257 = bitcast %"struct.std::__1::pair"* %256 to i8*
  %258 = bitcast %"struct.std::__1::pair"* %254 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* align 8 %258, i64 16, i1 false) #9
  %259 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %242, i64 4
  %260 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %149, align 8
  %261 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %260, i64 1
  store %"struct.std::__1::pair"* %261, %"struct.std::__1::pair"** %149, align 8
  %262 = icmp eq %"struct.std::__1::pair"* %259, %206
  %263 = bitcast %"struct.std::__1::pair"* %261 to i8*
  br i1 %262, label %264, label %240

264:                                              ; preds = %240, %235
  %265 = phi %"struct.std::__1::pair"* [ %236, %235 ], [ %261, %240 ]
  %266 = ptrtoint %"struct.std::__1::pair"* %265 to i64
  %267 = load i64, i64* %152, align 8
  %268 = bitcast %"struct.std::__1::pair"** %149 to i64*
  br label %269

269:                                              ; preds = %208, %264
  %270 = phi i64* [ %210, %208 ], [ %268, %264 ]
  %271 = phi i64 [ %211, %208 ], [ %266, %264 ]
  %272 = phi i64 [ %209, %208 ], [ %267, %264 ]
  %273 = load i64, i64* %153, align 8
  %274 = bitcast %"struct.std::__1::pair"** %148 to i64*
  %275 = load i64, i64* %274, align 8
  store i64 %275, i64* %153, align 8
  store i64 %273, i64* %274, align 8
  store i64 %271, i64* %152, align 8
  store i64 %272, i64* %270, align 8
  %276 = load i64, i64* %163, align 8
  %277 = bitcast %"struct.std::__1::pair"** %150 to i64*
  %278 = load i64, i64* %277, align 8
  store i64 %278, i64* %163, align 8
  store i64 %276, i64* %277, align 8
  %279 = bitcast %"struct.std::__1::__split_buffer"* %6 to i64*
  store i64 %273, i64* %279, align 8
  %280 = inttoptr i64 %273 to %"struct.std::__1::pair"*
  %281 = inttoptr i64 %272 to %"struct.std::__1::pair"*
  %282 = icmp eq %"struct.std::__1::pair"* %281, %280
  br i1 %282, label %290, label %283

283:                                              ; preds = %269
  %284 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %281, i64 -1, i32 0
  %285 = ptrtoint i64* %284 to i64
  %286 = sub i64 %285, %273
  %287 = lshr i64 %286, 4
  %288 = xor i64 %287, -1
  %289 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %281, i64 %288
  store %"struct.std::__1::pair"* %289, %"struct.std::__1::pair"** %149, align 8
  br label %290

290:                                              ; preds = %283, %269
  %291 = icmp eq i64 %273, 0
  br i1 %291, label %294, label %292

292:                                              ; preds = %290
  %293 = inttoptr i64 %273 to i8*
  call void @_ZdlPv(i8* %293) #10
  br label %294

294:                                              ; preds = %290, %292
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %146) #9
  br label %295

295:                                              ; preds = %17, %141, %294
  %296 = phi %"struct.std::__1::pair"* [ %1, %17 ], [ %1, %141 ], [ %194, %294 ]
  ret %"struct.std::__1::pair"* %296
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairImN16password_manager11CSVPassword5LabelEEERNS_9allocatorIS5_EEE12emplace_backIJRKmS4_EEEvDpOT_(%"struct.std::__1::__split_buffer"*, i64* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  br i1 %8, label %10, label %174

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair"* %15 to i64
  br i1 %16, label %18, label %90

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair"* %12, %5
  br i1 %25, label %86, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 0
  %28 = ptrtoint i64* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair"* [ %45, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair"* [ %44, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %46, %34 ], [ %32, %26 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 0
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 1
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 1
  %46 = add i64 %37, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %34, !llvm.loop !6

48:                                               ; preds = %34, %26
  %49 = phi %"struct.std::__1::pair"* [ undef, %26 ], [ %45, %34 ]
  %50 = phi %"struct.std::__1::pair"* [ %24, %26 ], [ %45, %34 ]
  %51 = phi %"struct.std::__1::pair"* [ %12, %26 ], [ %44, %34 ]
  %52 = icmp ult i64 %29, 48
  br i1 %52, label %83, label %53

53:                                               ; preds = %48, %53
  %54 = phi %"struct.std::__1::pair"* [ %81, %53 ], [ %50, %48 ]
  %55 = phi %"struct.std::__1::pair"* [ %80, %53 ], [ %51, %48 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 0, i32 0
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 0, i32 1
  store i32 %60, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 1, i32 0
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 1, i32 1
  store i32 %66, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 2, i32 0
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 2, i32 1
  store i32 %72, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 3, i32 0
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 3, i32 1
  store i32 %78, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 4
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 4
  %82 = icmp eq %"struct.std::__1::pair"* %80, %5
  br i1 %82, label %83, label %53

83:                                               ; preds = %53, %48
  %84 = phi %"struct.std::__1::pair"* [ %49, %48 ], [ %81, %53 ]
  %85 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  br label %86

86:                                               ; preds = %83, %18
  %87 = phi %"struct.std::__1::pair"* [ %5, %18 ], [ %85, %83 ]
  %88 = phi %"struct.std::__1::pair"* [ %24, %18 ], [ %84, %83 ]
  store %"struct.std::__1::pair"* %88, %"struct.std::__1::pair"** %4, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 %23
  store %"struct.std::__1::pair"* %89, %"struct.std::__1::pair"** %11, align 8
  br label %174

90:                                               ; preds = %10
  %91 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %92 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %93 = sub i64 %9, %17
  %94 = ashr exact i64 %93, 3
  %95 = icmp eq i64 %93, 0
  %96 = select i1 %95, i64 1, i64 %94
  %97 = icmp ugt i64 %96, 1152921504606846975
  br i1 %97, label %98, label %99

98:                                               ; preds = %90
  tail call void @abort() #11
  unreachable

99:                                               ; preds = %90
  %100 = lshr i64 %96, 2
  %101 = shl i64 %96, 4
  %102 = tail call i8* @_Znwm(i64 %101) #10
  %103 = bitcast i8* %102 to %"struct.std::__1::pair"*
  %104 = ptrtoint i8* %102 to i64
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 %100
  %106 = ptrtoint %"struct.std::__1::pair"* %105 to i64
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 %96
  %108 = ptrtoint %"struct.std::__1::pair"* %107 to i64
  %109 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  %110 = sub i64 %109, %13
  %111 = ashr exact i64 %110, 4
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 %111
  %113 = icmp eq i64 %110, 0
  br i1 %113, label %164, label %114

114:                                              ; preds = %99
  %115 = add i64 %110, -16
  %116 = lshr i64 %115, 4
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 3
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %134, label %120

120:                                              ; preds = %114, %120
  %121 = phi %"struct.std::__1::pair"* [ %127, %120 ], [ %105, %114 ]
  %122 = phi i64 [ %128, %120 ], [ %106, %114 ]
  %123 = phi %"struct.std::__1::pair"* [ %129, %120 ], [ %12, %114 ]
  %124 = phi i64 [ %130, %120 ], [ %118, %114 ]
  %125 = inttoptr i64 %122 to i8*
  %126 = bitcast %"struct.std::__1::pair"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 16, i1 false) #9
  %127 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %121, i64 1
  %128 = ptrtoint %"struct.std::__1::pair"* %127 to i64
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 1
  %130 = add i64 %124, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %120, !llvm.loop !7

132:                                              ; preds = %120
  %133 = ptrtoint %"struct.std::__1::pair"* %127 to i64
  br label %134

134:                                              ; preds = %114, %132
  %135 = phi %"struct.std::__1::pair"* [ %105, %114 ], [ %127, %132 ]
  %136 = phi i64 [ %106, %114 ], [ %133, %132 ]
  %137 = phi %"struct.std::__1::pair"* [ %12, %114 ], [ %129, %132 ]
  %138 = icmp ult i64 %115, 48
  br i1 %138, label %161, label %139

139:                                              ; preds = %134, %139
  %140 = phi %"struct.std::__1::pair"* [ %157, %139 ], [ %135, %134 ]
  %141 = phi i64 [ %158, %139 ], [ %136, %134 ]
  %142 = phi %"struct.std::__1::pair"* [ %159, %139 ], [ %137, %134 ]
  %143 = inttoptr i64 %141 to i8*
  %144 = bitcast %"struct.std::__1::pair"* %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %144, i64 16, i1 false) #9
  %145 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %140, i64 1
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %142, i64 1
  %147 = bitcast %"struct.std::__1::pair"* %145 to i8*
  %148 = bitcast %"struct.std::__1::pair"* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %148, i64 16, i1 false) #9
  %149 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %140, i64 2
  %150 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %142, i64 2
  %151 = bitcast %"struct.std::__1::pair"* %149 to i8*
  %152 = bitcast %"struct.std::__1::pair"* %150 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 16, i1 false) #9
  %153 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %140, i64 3
  %154 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %142, i64 3
  %155 = bitcast %"struct.std::__1::pair"* %153 to i8*
  %156 = bitcast %"struct.std::__1::pair"* %154 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 16, i1 false) #9
  %157 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %140, i64 4
  %158 = ptrtoint %"struct.std::__1::pair"* %157 to i64
  %159 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %142, i64 4
  %160 = icmp eq %"struct.std::__1::pair"* %112, %157
  br i1 %160, label %161, label %139

161:                                              ; preds = %139, %134
  %162 = ptrtoint %"struct.std::__1::pair"* %112 to i64
  %163 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  br label %164

164:                                              ; preds = %99, %161
  %165 = phi %"struct.std::__1::pair"* [ %163, %161 ], [ %15, %99 ]
  %166 = phi i64 [ %162, %161 ], [ %106, %99 ]
  store i64 %104, i64* %92, align 8
  %167 = bitcast %"struct.std::__1::pair"** %11 to i64*
  store i64 %106, i64* %167, align 8
  %168 = bitcast %"struct.std::__1::pair"** %4 to i64*
  store i64 %166, i64* %168, align 8
  store i64 %108, i64* %91, align 8
  %169 = icmp eq %"struct.std::__1::pair"* %165, null
  %170 = inttoptr i64 %166 to %"struct.std::__1::pair"*
  br i1 %169, label %174, label %171

171:                                              ; preds = %164
  %172 = bitcast %"struct.std::__1::pair"* %165 to i8*
  tail call void @_ZdlPv(i8* %172) #10
  %173 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %174

174:                                              ; preds = %171, %164, %86, %3
  %175 = phi %"struct.std::__1::pair"* [ %173, %171 ], [ %170, %164 ], [ %88, %86 ], [ %5, %3 ]
  %176 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %175, i64 0, i32 0
  %177 = load i64, i64* %1, align 8
  store i64 %177, i64* %176, align 8
  %178 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %175, i64 0, i32 1
  %179 = load i32, i32* %2, align 4
  store i32 %179, i32* %178, align 8
  %180 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %181 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %180, i64 1
  store %"struct.std::__1::pair"* %181, %"struct.std::__1::pair"** %4, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIN16password_manager11CSVPassword5LabelENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.7"*, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.35", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %8, %10
  %12 = ptrtoint i32* %8 to i64
  %13 = ptrtoint i32* %10 to i64
  br i1 %11, label %14, label %158

14:                                               ; preds = %3
  %15 = icmp eq i32* %8, %1
  %16 = load i32, i32* %2, align 4
  br i1 %15, label %17, label %21

17:                                               ; preds = %14
  store i32 %16, i32* %1, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = bitcast i32** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %301

21:                                               ; preds = %14
  %22 = getelementptr inbounds i32, i32* %1, i64 1
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = bitcast i32** %7 to i64*
  %28 = icmp ult i32* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i32, i32* %8, i64 %30
  %32 = bitcast i32* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 2
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i32* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i32* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %150

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i32, i32* %8, i64 %43
  %45 = bitcast i32* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 2
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i32, i32* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add i64 %52, 1
  %54 = getelementptr i32, i32* %1, i64 %53
  %55 = icmp ult i32* %8, %54
  %56 = icmp ult i32* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 9223372036854775800
  %60 = getelementptr i32, i32* %8, i64 %59
  %61 = getelementptr i32, i32* %26, i64 %59
  %62 = add nsw i64 %59, -8
  %63 = lshr exact i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 24
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i32, i32* %8, i64 %70
  %73 = getelementptr i32, i32* %26, i64 %70
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !alias.scope !8
  %76 = getelementptr i32, i32* %73, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !8
  %79 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %79, align 4, !alias.scope !11, !noalias !8
  %80 = getelementptr i32, i32* %72, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !11, !noalias !8
  %82 = or i64 %70, 8
  %83 = getelementptr i32, i32* %8, i64 %82
  %84 = getelementptr i32, i32* %26, i64 %82
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 4, !alias.scope !8
  %87 = getelementptr i32, i32* %84, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !8
  %90 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %90, align 4, !alias.scope !11, !noalias !8
  %91 = getelementptr i32, i32* %83, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %92, align 4, !alias.scope !11, !noalias !8
  %93 = or i64 %70, 16
  %94 = getelementptr i32, i32* %8, i64 %93
  %95 = getelementptr i32, i32* %26, i64 %93
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !8
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !8
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !11, !noalias !8
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !11, !noalias !8
  %104 = or i64 %70, 24
  %105 = getelementptr i32, i32* %8, i64 %104
  %106 = getelementptr i32, i32* %26, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !8
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !8
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !11, !noalias !8
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !11, !noalias !8
  %115 = add i64 %70, 32
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !13

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i32, i32* %8, i64 %122
  %125 = getelementptr i32, i32* %26, i64 %122
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !8
  %128 = getelementptr i32, i32* %125, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !8
  %131 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4, !alias.scope !11, !noalias !8
  %132 = getelementptr i32, i32* %124, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %133, align 4, !alias.scope !11, !noalias !8
  %134 = add i64 %122, 8
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !15

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %150, %137
  %140 = phi i32* [ %60, %137 ], [ %155, %150 ]
  %141 = ptrtoint i32* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i32, i32* %8, i64 %146
  %148 = bitcast i32* %147 to i8*
  %149 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 %24, i1 false) #9
  br label %157

150:                                              ; preds = %39, %150
  %151 = phi i32* [ %155, %150 ], [ %40, %39 ]
  %152 = phi i32* [ %154, %150 ], [ %41, %39 ]
  %153 = load i32, i32* %152, align 4
  store i32 %153, i32* %151, align 4
  %154 = getelementptr inbounds i32, i32* %152, i64 1
  %155 = getelementptr inbounds i32, i32* %151, i64 1
  %156 = icmp ult i32* %154, %8
  br i1 %156, label %150, label %139, !llvm.loop !16

157:                                              ; preds = %142, %145
  store i32 %16, i32* %1, align 4
  br label %301

158:                                              ; preds = %3
  %159 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 2
  %160 = bitcast %"struct.std::__1::__split_buffer.35"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %160) #9
  %161 = getelementptr inbounds %"struct.std::__1::__split_buffer.35", %"struct.std::__1::__split_buffer.35"* %5, i64 0, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer.35", %"struct.std::__1::__split_buffer.35"* %5, i64 0, i32 1
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer.35", %"struct.std::__1::__split_buffer.35"* %5, i64 0, i32 2
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer.35", %"struct.std::__1::__split_buffer.35"* %5, i64 0, i32 3, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer.35", %"struct.std::__1::__split_buffer.35"* %5, i64 0, i32 3, i32 1, i32 0
  %166 = bitcast i32** %7 to i64*
  %167 = bitcast %"class.std::__1::vector.7"* %0 to i64*
  %168 = bitcast %"struct.std::__1::__split_buffer.35"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 40, i1 false)
  %169 = load i64, i64* %167, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 2
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 4611686018427387903
  br i1 %173, label %174, label %176

174:                                              ; preds = %158
  %175 = bitcast %"class.std::__1::vector.7"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #11
  unreachable

176:                                              ; preds = %158
  %177 = bitcast i32** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 2
  %180 = icmp ult i64 %179, 2305843009213693951
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 2
  store i32* null, i32** %164, align 8
  %184 = bitcast %"class.std::__1::allocator.12"** %165 to %"class.std::__1::__compressed_pair.9"**
  store %"class.std::__1::__compressed_pair.9"* %159, %"class.std::__1::__compressed_pair.9"** %184, align 8
  br label %196

185:                                              ; preds = %176
  %186 = ashr exact i64 %178, 1
  %187 = icmp ult i64 %186, %172
  %188 = select i1 %187, i64 %172, i64 %186
  %189 = sub i64 %4, %169
  %190 = ashr exact i64 %189, 2
  store i32* null, i32** %164, align 8
  %191 = bitcast %"class.std::__1::allocator.12"** %165 to %"class.std::__1::__compressed_pair.9"**
  store %"class.std::__1::__compressed_pair.9"* %159, %"class.std::__1::__compressed_pair.9"** %191, align 8
  %192 = icmp eq i64 %188, 0
  br i1 %192, label %202, label %193

193:                                              ; preds = %185
  %194 = icmp ugt i64 %188, 4611686018427387903
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  tail call void @abort() #11
  unreachable

196:                                              ; preds = %181, %193
  %197 = phi i64 [ 4611686018427387903, %181 ], [ %188, %193 ]
  %198 = phi i64 [ %183, %181 ], [ %190, %193 ]
  %199 = shl i64 %197, 2
  %200 = tail call i8* @_Znwm(i64 %199) #10
  %201 = bitcast i8* %200 to i32*
  br label %202

202:                                              ; preds = %185, %196
  %203 = phi i64 [ %198, %196 ], [ %190, %185 ]
  %204 = phi i64 [ %197, %196 ], [ 0, %185 ]
  %205 = phi i32* [ %201, %196 ], [ null, %185 ]
  store i32* %205, i32** %161, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 %203
  store i32* %206, i32** %163, align 8
  store i32* %206, i32** %162, align 8
  %207 = getelementptr inbounds i32, i32* %205, i64 %204
  store i32* %207, i32** %164, align 8
  call void @_ZNSt3__114__split_bufferIN16password_manager11CSVPassword5LabelERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_(%"struct.std::__1::__split_buffer.35"* nonnull %5, i32* dereferenceable(4) %2)
  %208 = load i32*, i32** %162, align 8
  %209 = load i32*, i32** %6, align 8
  %210 = ptrtoint i32* %209 to i64
  %211 = sub i64 %4, %210
  %212 = ashr exact i64 %211, 2
  %213 = sub nsw i64 0, %212
  %214 = getelementptr inbounds i32, i32* %208, i64 %213
  store i32* %214, i32** %162, align 8
  %215 = icmp sgt i64 %211, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %202
  %217 = bitcast i32* %214 to i8*
  %218 = bitcast i32* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %211, i1 false) #9
  br label %219

219:                                              ; preds = %216, %202
  %220 = load i32*, i32** %7, align 8
  %221 = icmp eq i32* %220, %1
  br i1 %221, label %222, label %226

222:                                              ; preds = %219
  %223 = ptrtoint i32* %220 to i64
  %224 = bitcast i32** %163 to i64*
  %225 = load i64, i64* %224, align 8
  br label %275

226:                                              ; preds = %219
  %227 = load i32*, i32** %163, align 8
  %228 = getelementptr i32, i32* %220, i64 -1
  %229 = ptrtoint i32* %228 to i64
  %230 = sub i64 %229, %4
  %231 = lshr i64 %230, 2
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 3
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %245, label %235

235:                                              ; preds = %226, %235
  %236 = phi i32* [ %242, %235 ], [ %227, %226 ]
  %237 = phi i32* [ %240, %235 ], [ %1, %226 ]
  %238 = phi i64 [ %243, %235 ], [ %233, %226 ]
  %239 = load i32, i32* %237, align 4
  store i32 %239, i32* %236, align 4
  %240 = getelementptr inbounds i32, i32* %237, i64 1
  %241 = load i32*, i32** %163, align 8
  %242 = getelementptr inbounds i32, i32* %241, i64 1
  store i32* %242, i32** %163, align 8
  %243 = add i64 %238, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %235, !llvm.loop !17

245:                                              ; preds = %235, %226
  %246 = phi i32* [ undef, %226 ], [ %242, %235 ]
  %247 = phi i32* [ %227, %226 ], [ %242, %235 ]
  %248 = phi i32* [ %1, %226 ], [ %240, %235 ]
  %249 = icmp ult i64 %230, 12
  br i1 %249, label %270, label %250

250:                                              ; preds = %245, %250
  %251 = phi i32* [ %268, %250 ], [ %247, %245 ]
  %252 = phi i32* [ %266, %250 ], [ %248, %245 ]
  %253 = load i32, i32* %252, align 4
  store i32 %253, i32* %251, align 4
  %254 = getelementptr inbounds i32, i32* %252, i64 1
  %255 = load i32*, i32** %163, align 8
  %256 = getelementptr inbounds i32, i32* %255, i64 1
  store i32* %256, i32** %163, align 8
  %257 = load i32, i32* %254, align 4
  store i32 %257, i32* %256, align 4
  %258 = getelementptr inbounds i32, i32* %252, i64 2
  %259 = load i32*, i32** %163, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 1
  store i32* %260, i32** %163, align 8
  %261 = load i32, i32* %258, align 4
  store i32 %261, i32* %260, align 4
  %262 = getelementptr inbounds i32, i32* %252, i64 3
  %263 = load i32*, i32** %163, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 1
  store i32* %264, i32** %163, align 8
  %265 = load i32, i32* %262, align 4
  store i32 %265, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %252, i64 4
  %267 = load i32*, i32** %163, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 1
  store i32* %268, i32** %163, align 8
  %269 = icmp eq i32* %266, %220
  br i1 %269, label %270, label %250

270:                                              ; preds = %250, %245
  %271 = phi i32* [ %246, %245 ], [ %268, %250 ]
  %272 = ptrtoint i32* %271 to i64
  %273 = load i64, i64* %166, align 8
  %274 = bitcast i32** %163 to i64*
  br label %275

275:                                              ; preds = %222, %270
  %276 = phi i64* [ %224, %222 ], [ %274, %270 ]
  %277 = phi i64 [ %225, %222 ], [ %272, %270 ]
  %278 = phi i64 [ %223, %222 ], [ %273, %270 ]
  %279 = load i64, i64* %167, align 8
  %280 = bitcast i32** %162 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %167, align 8
  store i64 %279, i64* %280, align 8
  store i64 %277, i64* %166, align 8
  store i64 %278, i64* %276, align 8
  %282 = load i64, i64* %177, align 8
  %283 = bitcast i32** %164 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %177, align 8
  store i64 %282, i64* %283, align 8
  %285 = bitcast %"struct.std::__1::__split_buffer.35"* %5 to i64*
  store i64 %279, i64* %285, align 8
  %286 = inttoptr i64 %279 to i32*
  %287 = inttoptr i64 %278 to i32*
  %288 = icmp eq i32* %287, %286
  br i1 %288, label %296, label %289

289:                                              ; preds = %275
  %290 = getelementptr i32, i32* %287, i64 -1
  %291 = ptrtoint i32* %290 to i64
  %292 = sub i64 %291, %279
  %293 = lshr i64 %292, 2
  %294 = xor i64 %293, -1
  %295 = getelementptr i32, i32* %287, i64 %294
  store i32* %295, i32** %163, align 8
  br label %296

296:                                              ; preds = %289, %275
  %297 = icmp eq i64 %279, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %279 to i8*
  call void @_ZdlPv(i8* %299) #10
  br label %300

300:                                              ; preds = %296, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %160) #9
  br label %301

301:                                              ; preds = %17, %157, %300
  %302 = phi i32* [ %1, %17 ], [ %1, %157 ], [ %208, %300 ]
  ret i32* %302
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN16password_manager11CSVPassword5LabelERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_(%"struct.std::__1::__split_buffer.35"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.35", %"struct.std::__1::__split_buffer.35"* %0, i64 0, i32 2
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.35", %"struct.std::__1::__split_buffer.35"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  %8 = ptrtoint i32* %6 to i64
  br i1 %7, label %9, label %229

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.35", %"struct.std::__1::__split_buffer.35"* %0, i64 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.35", %"struct.std::__1::__split_buffer.35"* %0, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp ugt i32* %11, %14
  %16 = ptrtoint i32* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint i32* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 2
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32, i32* %11, i64 %22
  %24 = ptrtoint i32* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast i32* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %12, i64 %25, i1 false) #9
  %30 = load i32*, i32** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi i32* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds i32, i32* %23, i64 %26
  store i32* %33, i32** %3, align 8
  %34 = getelementptr inbounds i32, i32* %32, i64 %22
  store i32* %34, i32** %10, align 8
  br label %229

35:                                               ; preds = %9
  %36 = bitcast i32** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.35"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 1
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 4611686018427387903
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #11
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 2
  %47 = tail call i8* @_Znwm(i64 %46) #10
  %48 = bitcast i8* %47 to i32*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds i32, i32* %48, i64 %45
  %51 = ptrtoint i32* %50 to i64
  %52 = getelementptr inbounds i32, i32* %48, i64 %41
  %53 = ptrtoint i32* %52 to i64
  %54 = ptrtoint i32* %11 to i64
  %55 = ptrtoint i32* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds i32, i32* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %219, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -4
  %62 = lshr i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 8
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = and i64 %41, -4
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -4
  %69 = lshr i64 %68, 2
  %70 = and i64 %68, -4
  %71 = add i64 %66, %70
  %72 = add i64 %71, 4
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr i32, i32* %11, i64 %74
  %76 = bitcast i32* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 9223372036854775800
  %82 = getelementptr i32, i32* %50, i64 %81
  %83 = getelementptr i32, i32* %11, i64 %81
  %84 = add nsw i64 %81, -8
  %85 = lshr exact i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 24
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i32, i32* %50, i64 %92
  %95 = getelementptr i32, i32* %11, i64 %92
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !18
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !18
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !21, !noalias !18
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !21, !noalias !18
  %104 = or i64 %92, 8
  %105 = getelementptr i32, i32* %50, i64 %104
  %106 = getelementptr i32, i32* %11, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !18
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !18
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !21, !noalias !18
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !21, !noalias !18
  %115 = or i64 %92, 16
  %116 = getelementptr i32, i32* %50, i64 %115
  %117 = getelementptr i32, i32* %11, i64 %115
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !18
  %120 = getelementptr i32, i32* %117, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !18
  %123 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %123, align 4, !alias.scope !21, !noalias !18
  %124 = getelementptr i32, i32* %116, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %125, align 4, !alias.scope !21, !noalias !18
  %126 = or i64 %92, 24
  %127 = getelementptr i32, i32* %50, i64 %126
  %128 = getelementptr i32, i32* %11, i64 %126
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !18
  %131 = getelementptr i32, i32* %128, i64 4
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4, !alias.scope !18
  %134 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %134, align 4, !alias.scope !21, !noalias !18
  %135 = getelementptr i32, i32* %127, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %136, align 4, !alias.scope !21, !noalias !18
  %137 = add i64 %92, 32
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !23

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i32, i32* %50, i64 %144
  %147 = getelementptr i32, i32* %11, i64 %144
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4, !alias.scope !18
  %150 = getelementptr i32, i32* %147, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4, !alias.scope !18
  %153 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %153, align 4, !alias.scope !21, !noalias !18
  %154 = getelementptr i32, i32* %146, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %155, align 4, !alias.scope !21, !noalias !18
  %156 = add i64 %144, 8
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !24

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %216, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi i32* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi i32* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint i32* %162 to i64
  %165 = and i64 %41, -4
  %166 = add i64 %56, %165
  %167 = add i64 %166, -4
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 2
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %161, %175
  %176 = phi i32* [ %180, %175 ], [ %162, %161 ]
  %177 = phi i32* [ %181, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %182, %175 ], [ %173, %161 ]
  %179 = load i32, i32* %177, align 4
  store i32 %179, i32* %176, align 4
  %180 = getelementptr inbounds i32, i32* %176, i64 1
  %181 = getelementptr inbounds i32, i32* %177, i64 1
  %182 = add i64 %178, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !25

184:                                              ; preds = %175, %161
  %185 = phi i32* [ %162, %161 ], [ %180, %175 ]
  %186 = phi i32* [ %163, %161 ], [ %181, %175 ]
  %187 = icmp ult i8* %169, inttoptr (i64 28 to i8*)
  br i1 %187, label %216, label %188

188:                                              ; preds = %184, %188
  %189 = phi i32* [ %213, %188 ], [ %185, %184 ]
  %190 = phi i32* [ %214, %188 ], [ %186, %184 ]
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %189, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %190, i64 1
  %194 = load i32, i32* %193, align 4
  store i32 %194, i32* %192, align 4
  %195 = getelementptr inbounds i32, i32* %189, i64 2
  %196 = getelementptr inbounds i32, i32* %190, i64 2
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %195, align 4
  %198 = getelementptr inbounds i32, i32* %189, i64 3
  %199 = getelementptr inbounds i32, i32* %190, i64 3
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %198, align 4
  %201 = getelementptr inbounds i32, i32* %189, i64 4
  %202 = getelementptr inbounds i32, i32* %190, i64 4
  %203 = load i32, i32* %202, align 4
  store i32 %203, i32* %201, align 4
  %204 = getelementptr inbounds i32, i32* %189, i64 5
  %205 = getelementptr inbounds i32, i32* %190, i64 5
  %206 = load i32, i32* %205, align 4
  store i32 %206, i32* %204, align 4
  %207 = getelementptr inbounds i32, i32* %189, i64 6
  %208 = getelementptr inbounds i32, i32* %190, i64 6
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %207, align 4
  %210 = getelementptr inbounds i32, i32* %189, i64 7
  %211 = getelementptr inbounds i32, i32* %190, i64 7
  %212 = load i32, i32* %211, align 4
  store i32 %212, i32* %210, align 4
  %213 = getelementptr inbounds i32, i32* %189, i64 8
  %214 = getelementptr inbounds i32, i32* %190, i64 8
  %215 = icmp eq i32* %58, %213
  br i1 %215, label %216, label %188, !llvm.loop !26

216:                                              ; preds = %184, %188, %159
  %217 = ptrtoint i32* %58 to i64
  %218 = load i32*, i32** %13, align 8
  br label %219

219:                                              ; preds = %44, %216
  %220 = phi i32* [ %218, %216 ], [ %14, %44 ]
  %221 = phi i64 [ %217, %216 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %222 = bitcast i32** %10 to i64*
  store i64 %51, i64* %222, align 8
  %223 = bitcast i32** %3 to i64*
  store i64 %221, i64* %223, align 8
  store i64 %53, i64* %36, align 8
  %224 = icmp eq i32* %220, null
  %225 = inttoptr i64 %221 to i32*
  br i1 %224, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast i32* %220 to i8*
  tail call void @_ZdlPv(i8* %227) #10
  %228 = load i32*, i32** %3, align 8
  br label %229

229:                                              ; preds = %226, %219, %31, %2
  %230 = phi i32* [ %228, %226 ], [ %225, %219 ], [ %33, %31 ], [ %4, %2 ]
  %231 = load i32, i32* %1, align 4
  store i32 %231, i32* %230, align 4
  %232 = load i32*, i32** %3, align 8
  %233 = getelementptr inbounds i32, i32* %232, i64 1
  store i32* %233, i32** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = !{!9}
!9 = distinct !{!9, !10}
!10 = distinct !{!10, !"LVerDomain"}
!11 = !{!12}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = distinct !{!15, !3}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !3}
!18 = !{!19}
!19 = distinct !{!19, !20}
!20 = distinct !{!20, !"LVerDomain"}
!21 = !{!22}
!22 = distinct !{!22, !20}
!23 = distinct !{!23, !14}
!24 = distinct !{!24, !3}
!25 = distinct !{!25, !3}
!26 = distinct !{!26, !14}
