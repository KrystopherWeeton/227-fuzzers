; ModuleID = '../../extensions/common/manifest_handlers/requirements_info.cc'
source_filename = "../../extensions/common/manifest_handlers/requirements_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.extensions::RequirementsInfo" = type <{ %"struct.extensions::Extension::ManifestData", i8, i8, [6 x i8] }>
%"struct.extensions::Extension::ManifestData" = type { i32 (...)** }
%"class.extensions::RequirementsHandler" = type { %"class.extensions::ManifestHandler" }
%"class.extensions::ManifestHandler" = type { i32 (...)** }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.13", %"class.std::__1::vector", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.37", %"class.std::__1::map", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.19" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.extensions::InstallWarning"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.24" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.GURL* }
%"class.base::Version" = type { %"class.std::__1::vector.30" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { i32*, i32*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.43" }
%"union.absl::variant_internal::DestructibleUnionImpl.43" = type { %"union.absl::variant_internal::DestructibleUnionImpl.44" }
%"union.absl::variant_internal::DestructibleUnionImpl.44" = type { %"union.absl::variant_internal::DestructibleUnionImpl.45" }
%"union.absl::variant_internal::DestructibleUnionImpl.45" = type { %"union.absl::variant_internal::DestructibleUnionImpl.46" }
%"union.absl::variant_internal::DestructibleUnionImpl.46" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.78" }
%"class.std::__1::__tree.78" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_string.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.90 }
%union.anon.90 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.extensions::api::requirements::ManifestKeys" = type { %"class.std::__1::unique_ptr.96" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.extensions::api::requirements::ManifestKeys::Requirements"* }
%"struct.extensions::api::requirements::ManifestKeys::Requirements" = type { %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.124" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.extensions::api::requirements::ManifestKeys::Requirements::Plugins"* }
%"struct.extensions::api::requirements::ManifestKeys::Requirements::Plugins" = type { %"class.std::__1::unique_ptr.102" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { i8* }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.extensions::api::requirements::ManifestKeys::Requirements::_3D"* }
%"struct.extensions::api::requirements::ManifestKeys::Requirements::_3D" = type { %"class.std::__1::vector.114" }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { i32*, i32*, %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { i32* }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.extensions::api::requirements::ManifestKeys::Requirements::Window"* }
%"struct.extensions::api::requirements::ManifestKeys::Requirements::Window" = type { %"class.std::__1::unique_ptr.102" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.91 }
%struct.anon.91 = type { %"struct.std::__1::__padding.92", i8 }
%"struct.std::__1::__padding.92" = type { [1 x i8] }
%"class.extensions::ManifestPermission" = type opaque

@_ZTVN10extensions16RequirementsInfoE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.extensions::RequirementsInfo"*)* @_ZN10extensions16RequirementsInfoD2Ev to i8*), i8* bitcast (void (%"struct.extensions::RequirementsInfo"*)* @_ZN10extensions16RequirementsInfoD0Ev to i8*)] }, align 8
@_ZN10extensions3api12requirements12ManifestKeys13kRequirementsE = external constant [13 x i8], align 1
@.str = private unnamed_addr constant [63 x i8] c"../../extensions/common/manifest_handlers/requirements_info.cc\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@_ZTVN10extensions19RequirementsHandlerE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::RequirementsHandler"*)* @_ZN10extensions19RequirementsHandlerD2Ev to i8*), i8* bitcast (void (%"class.extensions::RequirementsHandler"*)* @_ZN10extensions19RequirementsHandlerD0Ev to i8*), i8* bitcast (i1 (%"class.extensions::RequirementsHandler"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.87"*)* @_ZN10extensions19RequirementsHandler5ParseEPNS_9ExtensionEPNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.extensions::ManifestHandler"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector"*)* @_ZNK10extensions15ManifestHandler8ValidateEPKNS_9ExtensionEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPNS4_6vectorINS_14InstallWarningENS8_ISD_EEEE to i8*), i8* bitcast (i1 (%"class.extensions::RequirementsHandler"*, i32)* @_ZNK10extensions19RequirementsHandler18AlwaysParseForTypeENS_8Manifest4TypeE to i8*), i8* bitcast (i1 (%"class.extensions::ManifestHandler"*, i32)* @_ZNK10extensions15ManifestHandler21AlwaysValidateForTypeENS_8Manifest4TypeE to i8*), i8* bitcast (void ()* @_ZNK10extensions15ManifestHandler16PrerequisiteKeysEv to i8*), i8* bitcast (%"class.extensions::ManifestPermission"* (%"class.extensions::ManifestHandler"*)* @_ZN10extensions15ManifestHandler16CreatePermissionEv to i8*), i8* bitcast (%"class.extensions::ManifestPermission"* (%"class.extensions::ManifestHandler"*, %"class.extensions::Extension"*)* @_ZN10extensions15ManifestHandler31CreateInitialRequiredPermissionEPKNS_9ExtensionE to i8*), i8* bitcast ({ i64, i8** } (%"class.extensions::RequirementsHandler"*)* @_ZNK10extensions19RequirementsHandler4KeysEv to i8*)] }, align 8
@_ZZNK10extensions19RequirementsHandler4KeysEvE5kKeys = internal constant [1 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN10extensions3api12requirements12ManifestKeys13kRequirementsE, i32 0, i32 0)], align 8
@_ZN10extensions15manifest_errors29kPluginsRequirementDeprecatedE = external constant [0 x i8], align 1
@_ZN10extensions15manifest_errors25kNPAPIPluginsNotSupportedE = external constant [0 x i8], align 1

@_ZN10extensions16RequirementsInfoC1Ev = hidden unnamed_addr alias void (%"struct.extensions::RequirementsInfo"*), void (%"struct.extensions::RequirementsInfo"*)* @_ZN10extensions16RequirementsInfoC2Ev
@_ZN10extensions16RequirementsInfoD1Ev = hidden unnamed_addr alias void (%"struct.extensions::RequirementsInfo"*), void (%"struct.extensions::RequirementsInfo"*)* @_ZN10extensions16RequirementsInfoD2Ev
@_ZN10extensions19RequirementsHandlerC1Ev = hidden unnamed_addr alias void (%"class.extensions::RequirementsHandler"*), void (%"class.extensions::RequirementsHandler"*)* @_ZN10extensions19RequirementsHandlerC2Ev
@_ZN10extensions19RequirementsHandlerD1Ev = hidden unnamed_addr alias void (%"class.extensions::RequirementsHandler"*), void (%"class.extensions::RequirementsHandler"*)* @_ZN10extensions19RequirementsHandlerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions16RequirementsInfoC2Ev(%"struct.extensions::RequirementsInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::RequirementsInfo", %"struct.extensions::RequirementsInfo"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN10extensions16RequirementsInfoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.extensions::RequirementsInfo", %"struct.extensions::RequirementsInfo"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.extensions::RequirementsInfo", %"struct.extensions::RequirementsInfo"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions16RequirementsInfoD2Ev(%"struct.extensions::RequirementsInfo"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16RequirementsInfoD0Ev(%"struct.extensions::RequirementsInfo"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"struct.extensions::RequirementsInfo"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"struct.extensions::RequirementsInfo"* @_ZN10extensions16RequirementsInfo15GetRequirementsEPKNS_9ExtensionE(%"class.extensions::Extension"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  store i8 12, i8* %6, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN10extensions3api12requirements12ManifestKeys13kRequirementsE, i64 0, i64 0), i64 12, i1 false) #11
  %7 = getelementptr inbounds i8, i8* %4, i64 12
  store i8 0, i8* %7, align 4
  %8 = call %"struct.extensions::Extension::ManifestData"* @_ZNK10extensions9Extension15GetManifestDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::Extension"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #11
  %9 = bitcast %"struct.extensions::Extension::ManifestData"* %8 to %"struct.extensions::RequirementsInfo"*
  %10 = load i8, i8* %6, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %1, %12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  %16 = icmp eq %"struct.extensions::Extension::ManifestData"* %8, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %15
  %18 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str, i64 0, i64 0), i32 33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #11
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %20

20:                                               ; preds = %15, %17
  ret %"struct.extensions::RequirementsInfo"* %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"struct.extensions::Extension::ManifestData"* @_ZNK10extensions9Extension15GetManifestDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::Extension"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions19RequirementsHandlerC2Ev(%"class.extensions::RequirementsHandler"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::RequirementsHandler", %"class.extensions::RequirementsHandler"* %0, i64 0, i32 0
  tail call void @_ZN10extensions15ManifestHandlerC2Ev(%"class.extensions::ManifestHandler"* %2) #11
  %3 = getelementptr inbounds %"class.extensions::RequirementsHandler", %"class.extensions::RequirementsHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN10extensions19RequirementsHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN10extensions15ManifestHandlerC2Ev(%"class.extensions::ManifestHandler"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN10extensions15ManifestHandlerD2Ev(%"class.extensions::ManifestHandler"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions19RequirementsHandlerD2Ev(%"class.extensions::RequirementsHandler"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::RequirementsHandler", %"class.extensions::RequirementsHandler"* %0, i64 0, i32 0
  tail call void @_ZN10extensions15ManifestHandlerD2Ev(%"class.extensions::ManifestHandler"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions19RequirementsHandlerD0Ev(%"class.extensions::RequirementsHandler"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::RequirementsHandler", %"class.extensions::RequirementsHandler"* %0, i64 0, i32 0
  tail call void @_ZN10extensions15ManifestHandlerD2Ev(%"class.extensions::ManifestHandler"* %2) #11
  %3 = bitcast %"class.extensions::RequirementsHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i64, i8** } @_ZNK10extensions19RequirementsHandler4KeysEv(%"class.extensions::RequirementsHandler"* nocapture readnone) unnamed_addr #1 align 2 {
  ret { i64, i8** } { i64 1, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @_ZZNK10extensions19RequirementsHandler4KeysEvE5kKeys, i64 0, i64 0) }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK10extensions19RequirementsHandler18AlwaysParseForTypeENS_8Manifest4TypeE(%"class.extensions::RequirementsHandler"* nocapture readnone, i32) unnamed_addr #1 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions19RequirementsHandler5ParseEPNS_9ExtensionEPNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.extensions::RequirementsHandler"* nocapture readnone, %"class.extensions::Extension"*, %"class.std::__1::basic_string.87"*) unnamed_addr #2 align 2 {
  %4 = alloca %"struct.extensions::api::requirements::ManifestKeys", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"struct.extensions::InstallWarning", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string.87", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"struct.extensions::api::requirements::ManifestKeys"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"struct.extensions::api::requirements::ManifestKeys", %"struct.extensions::api::requirements::ManifestKeys"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.extensions::api::requirements::ManifestKeys::Requirements"* inttoptr (i64 -6148914691236517206 to %"struct.extensions::api::requirements::ManifestKeys::Requirements"*), %"struct.extensions::api::requirements::ManifestKeys::Requirements"** %11, align 8
  call void @_ZN10extensions3api12requirements12ManifestKeysC1Ev(%"struct.extensions::api::requirements::ManifestKeys"* nonnull %4) #11
  %12 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %1, i64 0, i32 16, i32 0, i32 0, i32 0
  %13 = load %"class.extensions::Manifest"*, %"class.extensions::Manifest"** %12, align 8
  %14 = getelementptr inbounds %"class.extensions::Manifest", %"class.extensions::Manifest"* %13, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %14, align 8
  %16 = call zeroext i1 @_ZN10extensions3api12requirements12ManifestKeys19ParseFromDictionaryERKN4base15DictionaryValueEPS2_PNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE(%"class.base::DictionaryValue"* dereferenceable(32) %15, %"struct.extensions::api::requirements::ManifestKeys"* nonnull %4, %"class.std::__1::basic_string.87"* %2) #11
  br i1 %16, label %17, label %143

17:                                               ; preds = %3
  %18 = call i8* @_Znwm(i64 16) #10
  %19 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN10extensions16RequirementsInfoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds i8, i8* %18, i64 8
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds i8, i8* %18, i64 9
  store i8 0, i8* %21, align 1
  %22 = load %"struct.extensions::api::requirements::ManifestKeys::Requirements"*, %"struct.extensions::api::requirements::ManifestKeys::Requirements"** %11, align 8
  %23 = icmp eq %"struct.extensions::api::requirements::ManifestKeys::Requirements"* %22, null
  br i1 %23, label %24, label %36

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  %26 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 12, i8* %27, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN10extensions3api12requirements12ManifestKeys13kRequirementsE, i64 0, i64 0), i64 12, i1 false) #11
  %28 = getelementptr inbounds i8, i8* %25, i64 12
  store i8 0, i8* %28, align 4
  %29 = bitcast i8* %18 to %"struct.extensions::Extension::ManifestData"*
  call void @_ZN10extensions9Extension15SetManifestDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS0_12ManifestDataENS1_14default_deleteISB_EEEE(%"class.extensions::Extension"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"struct.extensions::Extension::ManifestData"* nonnull %29) #11
  %30 = load i8, i8* %27, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #10
  br label %35

35:                                               ; preds = %24, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  br label %143

36:                                               ; preds = %17
  %37 = getelementptr inbounds %"struct.extensions::api::requirements::ManifestKeys::Requirements", %"struct.extensions::api::requirements::ManifestKeys::Requirements"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.extensions::api::requirements::ManifestKeys::Requirements::Plugins"*, %"struct.extensions::api::requirements::ManifestKeys::Requirements::Plugins"** %37, align 8
  %39 = icmp eq %"struct.extensions::api::requirements::ManifestKeys::Requirements::Plugins"* %38, null
  br i1 %39, label %93, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #11
  %42 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors29kPluginsRequirementDeprecatedE, i64 0, i64 0)) #11
  %43 = icmp ugt i64 %42, -17
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %45) #12
  unreachable

46:                                               ; preds = %40
  %47 = icmp ult i64 %42, 23
  br i1 %47, label %57, label %48

48:                                               ; preds = %46
  %49 = add nuw i64 %42, 16
  %50 = and i64 %49, -16
  %51 = call i8* @_Znwm(i64 %50) #10
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %51, i8** %52, align 8
  %53 = or i64 %50, -9223372036854775808
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %42, i64* %55, align 8
  %56 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %62

57:                                               ; preds = %46
  %58 = trunc i64 %42 to i8
  %59 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  store i8 %58, i8* %60, align 1
  %61 = icmp eq i64 %42, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %57, %48
  %63 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %59, %57 ], [ %56, %48 ]
  %64 = phi i8* [ %41, %57 ], [ %51, %48 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %64, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors29kPluginsRequirementDeprecatedE, i64 0, i64 0), i64 %42, i1 false) #11
  br label %65

65:                                               ; preds = %57, %62
  %66 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %59, %57 ], [ %63, %62 ]
  %67 = phi i8* [ %41, %57 ], [ %64, %62 ]
  %68 = getelementptr inbounds i8, i8* %67, i64 %42
  store i8 0, i8* %68, align 1
  call void @_ZN10extensions14InstallWarningC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.extensions::InstallWarning"* nonnull %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #11
  call void @_ZN10extensions9Extension17AddInstallWarningENS_14InstallWarningE(%"class.extensions::Extension"* %1, %"struct.extensions::InstallWarning"* nonnull %6) #11
  call void @_ZN10extensions14InstallWarningD1Ev(%"struct.extensions::InstallWarning"* nonnull %6) #11
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #10
  br label %75

75:                                               ; preds = %65, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #11
  %76 = load %"struct.extensions::api::requirements::ManifestKeys::Requirements::Plugins"*, %"struct.extensions::api::requirements::ManifestKeys::Requirements::Plugins"** %37, align 8
  %77 = getelementptr inbounds %"struct.extensions::api::requirements::ManifestKeys::Requirements::Plugins", %"struct.extensions::api::requirements::ManifestKeys::Requirements::Plugins"* %76, i64 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = load i8, i8* %78, align 1, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %93, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.std::__1::basic_string.87"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #11
  %85 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors25kNPAPIPluginsNotSupportedE, i64 0, i64 0)) #11
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.87"* nonnull sret %8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors25kNPAPIPluginsNotSupportedE, i64 0, i64 0), i64 %85) #11
  %86 = bitcast %"class.std::__1::basic_string.87"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %86, i64 0, i32 1, i32 1
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %136

90:                                               ; preds = %83
  %91 = bitcast %"class.std::__1::basic_string.87"* %2 to i8**
  %92 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %92) #10
  br label %136

93:                                               ; preds = %75, %36, %80
  %94 = getelementptr inbounds %"struct.extensions::api::requirements::ManifestKeys::Requirements", %"struct.extensions::api::requirements::ManifestKeys::Requirements"* %22, i64 0, i32 1, i32 0, i32 0, i32 0
  %95 = load %"struct.extensions::api::requirements::ManifestKeys::Requirements::_3D"*, %"struct.extensions::api::requirements::ManifestKeys::Requirements::_3D"** %94, align 8
  %96 = icmp eq %"struct.extensions::api::requirements::ManifestKeys::Requirements::_3D"* %95, null
  br i1 %96, label %114, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"struct.extensions::api::requirements::ManifestKeys::Requirements::_3D", %"struct.extensions::api::requirements::ManifestKeys::Requirements::_3D"* %95, i64 0, i32 0, i32 0, i32 0
  %99 = load i32*, i32** %98, align 8
  %100 = getelementptr inbounds %"struct.extensions::api::requirements::ManifestKeys::Requirements::_3D", %"struct.extensions::api::requirements::ManifestKeys::Requirements::_3D"* %95, i64 0, i32 0, i32 0, i32 1
  %101 = load i32*, i32** %100, align 8
  %102 = icmp eq i32* %99, %101
  br i1 %102, label %110, label %103

103:                                              ; preds = %97, %107
  %104 = phi i32* [ %108, %107 ], [ %99, %97 ]
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %110, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds i32, i32* %104, i64 1
  %109 = icmp eq i32* %108, %101
  br i1 %109, label %110, label %103

110:                                              ; preds = %103, %107, %97
  %111 = phi i32* [ %99, %97 ], [ %101, %107 ], [ %104, %103 ]
  %112 = icmp ne i32* %111, %101
  %113 = zext i1 %112 to i8
  store i8 %113, i8* %20, align 8
  br label %114

114:                                              ; preds = %93, %110
  %115 = getelementptr inbounds %"struct.extensions::api::requirements::ManifestKeys::Requirements", %"struct.extensions::api::requirements::ManifestKeys::Requirements"* %22, i64 0, i32 2, i32 0, i32 0, i32 0
  %116 = load %"struct.extensions::api::requirements::ManifestKeys::Requirements::Window"*, %"struct.extensions::api::requirements::ManifestKeys::Requirements::Window"** %115, align 8
  %117 = icmp eq %"struct.extensions::api::requirements::ManifestKeys::Requirements::Window"* %116, null
  br i1 %117, label %124, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"struct.extensions::api::requirements::ManifestKeys::Requirements::Window", %"struct.extensions::api::requirements::ManifestKeys::Requirements::Window"* %116, i64 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = icmp eq i8* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = load i8, i8* %120, align 1, !range !2
  store i8 %123, i8* %21, align 1
  br label %124

124:                                              ; preds = %118, %114, %122
  %125 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #11
  %126 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  store i8 12, i8* %127, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %125, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN10extensions3api12requirements12ManifestKeys13kRequirementsE, i64 0, i64 0), i64 12, i1 false) #11
  %128 = getelementptr inbounds i8, i8* %125, i64 12
  store i8 0, i8* %128, align 4
  %129 = bitcast i8* %18 to %"struct.extensions::Extension::ManifestData"*
  call void @_ZN10extensions9Extension15SetManifestDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS0_12ManifestDataENS1_14default_deleteISB_EEEE(%"class.extensions::Extension"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, %"struct.extensions::Extension::ManifestData"* nonnull %129) #11
  %130 = load i8, i8* %127, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  call void @_ZdlPv(i8* %134) #10
  br label %135

135:                                              ; preds = %124, %132
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #11
  br label %143

136:                                              ; preds = %90, %83
  %137 = bitcast %"class.std::__1::basic_string.87"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* nonnull align 8 %84, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #11
  %138 = bitcast i8* %18 to %"struct.extensions::RequirementsInfo"*
  %139 = bitcast i8* %18 to void (%"struct.extensions::RequirementsInfo"*)***
  %140 = load void (%"struct.extensions::RequirementsInfo"*)**, void (%"struct.extensions::RequirementsInfo"*)*** %139, align 8
  %141 = getelementptr inbounds void (%"struct.extensions::RequirementsInfo"*)*, void (%"struct.extensions::RequirementsInfo"*)** %140, i64 1
  %142 = load void (%"struct.extensions::RequirementsInfo"*)*, void (%"struct.extensions::RequirementsInfo"*)** %141, align 8
  call void %142(%"struct.extensions::RequirementsInfo"* nonnull %138) #11
  br label %143

143:                                              ; preds = %35, %135, %136, %3
  %144 = phi i1 [ false, %3 ], [ false, %136 ], [ true, %135 ], [ true, %35 ]
  call void @_ZN10extensions3api12requirements12ManifestKeysD1Ev(%"struct.extensions::api::requirements::ManifestKeys"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  ret i1 %144
}

declare void @_ZN10extensions3api12requirements12ManifestKeysC1Ev(%"struct.extensions::api::requirements::ManifestKeys"*) unnamed_addr #5

declare zeroext i1 @_ZN10extensions3api12requirements12ManifestKeys19ParseFromDictionaryERKN4base15DictionaryValueEPS2_PNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE(%"class.base::DictionaryValue"* dereferenceable(32), %"struct.extensions::api::requirements::ManifestKeys"*, %"class.std::__1::basic_string.87"*) local_unnamed_addr #5

declare void @_ZN10extensions9Extension15SetManifestDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS0_12ManifestDataENS1_14default_deleteISB_EEEE(%"class.extensions::Extension"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.extensions::Extension::ManifestData"*) local_unnamed_addr #5

declare void @_ZN10extensions9Extension17AddInstallWarningENS_14InstallWarningE(%"class.extensions::Extension"*, %"struct.extensions::InstallWarning"*) local_unnamed_addr #5

declare void @_ZN10extensions14InstallWarningC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.extensions::InstallWarning"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN10extensions14InstallWarningD1Ev(%"struct.extensions::InstallWarning"*) unnamed_addr #6

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.87"* sret, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN10extensions3api12requirements12ManifestKeysD1Ev(%"struct.extensions::api::requirements::ManifestKeys"*) unnamed_addr #6

declare zeroext i1 @_ZNK10extensions15ManifestHandler8ValidateEPKNS_9ExtensionEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPNS4_6vectorINS_14InstallWarningENS8_ISD_EEEE(%"class.extensions::ManifestHandler"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector"*) unnamed_addr #5

declare zeroext i1 @_ZNK10extensions15ManifestHandler21AlwaysValidateForTypeENS_8Manifest4TypeE(%"class.extensions::ManifestHandler"*, i32) unnamed_addr #5

declare void @_ZNK10extensions15ManifestHandler16PrerequisiteKeysEv() unnamed_addr

declare %"class.extensions::ManifestPermission"* @_ZN10extensions15ManifestHandler16CreatePermissionEv(%"class.extensions::ManifestHandler"*) unnamed_addr #5

declare %"class.extensions::ManifestPermission"* @_ZN10extensions15ManifestHandler31CreateInitialRequiredPermissionEPKNS_9ExtensionE(%"class.extensions::ManifestHandler"*, %"class.extensions::Extension"*) unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
