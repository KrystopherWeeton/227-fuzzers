; ModuleID = '../../ui/platform_window/x11/x11_window.cc'
source_filename = "../../ui/platform_window/x11/x11_window.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%union.anon.516 = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%union.anon.521 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"struct.std::nothrow_t" = type { i8 }
%"class.ui::X11Window" = type { %"class.ui::PlatformWindow", %"class.ui::WmMoveResizeHandler", %"class.ui::PlatformEventDispatcher", %"class.x11::EventObserver", %"class.ui::WorkspaceExtension", %"class.ui::X11Extension", %"class.ui::WmDragHandler", %"class.ui::XDragDropClient::Delegate", %"class.ui::X11MoveLoopDelegate", %"class.ui::WmMoveLoopHandler", %"class.ui::X11DesktopWindowMoveClient::Delegate", i32, %"class.ui::PlatformWindowDelegate"*, %"class.ui::WorkspaceExtensionDelegate"*, %"class.ui::X11ExtensionDelegate"*, i8, i32, %"class.gfx::Rect", %"class.std::__1::unique_ptr", i8, i32, %"class.std::__1::unique_ptr.55", %"class.ui::WmDragHandler::Delegate"*, %"class.std::__1::unique_ptr.372", %"class.std::__1::unique_ptr.17", %"class.x11::Connection"*, i32, i32, i32, %"class.std::__1::unique_ptr.17", %"class.base::internal::flat_tree.378", i8, i8, %"class.std::__1::basic_string.379", i8, i8, %"class.gfx::Rect", i32, i8, %"class.absl::optional.388", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, %"class.gfx::Rect", i8, i8, %"class.gfx::Size", %"class.gfx::Size", %"class.std::__1::unique_ptr.393", i8, i8, %"class.gfx::Insets", i64, i64, i64, i8, i8, %"class.base::internal::CancelableCallbackImpl", i8, %"struct.std::__1::array.407", %class.scoped_refptr, %"class.base::internal::CancelableCallbackImpl.408", %"class.base::WeakPtrFactory.410" }
%"class.ui::PlatformWindow" = type { %"class.ui::PropertyHandler" }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.ui::WmMoveResizeHandler" = type { i32 (...)** }
%"class.ui::PlatformEventDispatcher" = type { i32 (...)** }
%"class.x11::EventObserver" = type { i32 (...)** }
%"class.ui::WorkspaceExtension" = type { i32 (...)** }
%"class.ui::X11Extension" = type { i32 (...)** }
%"class.ui::WmDragHandler" = type { i32 (...)** }
%"class.ui::XDragDropClient::Delegate" = type { i32 (...)** }
%"class.ui::X11MoveLoopDelegate" = type { i32 (...)** }
%"class.ui::WmMoveLoopHandler" = type { i32 (...)** }
%"class.ui::X11DesktopWindowMoveClient::Delegate" = type { i32 (...)** }
%"class.ui::WorkspaceExtensionDelegate" = type { i32 (...)** }
%"class.ui::X11ExtensionDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.ui::X11DesktopWindowMoveClient"* }
%"class.ui::X11DesktopWindowMoveClient" = type { %"class.ui::X11MoveLoopDelegate", %"class.ui::X11WholeScreenMoveLoop", %"class.ui::X11DesktopWindowMoveClient::Delegate"*, %"class.gfx::Vector2d" }
%"class.ui::X11WholeScreenMoveLoop" = type { %"class.ui::X11MoveLoop", %"class.ui::PlatformEventDispatcher", %"class.ui::X11MoveLoopDelegate"*, i8, %"class.std::__1::unique_ptr.6", %class.scoped_refptr, i32, %"class.std::__1::unique_ptr.17", i8, %"class.base::OnceCallback.30", i8, %"class.std::__1::unique_ptr.31", %"class.base::WeakPtrFactory" }
%"class.ui::X11MoveLoop" = type { i32 (...)** }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.ui::ScopedEventDispatcher"* }
%"class.ui::ScopedEventDispatcher" = type opaque
%"class.base::OnceCallback.30" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.ui::MouseEvent"* }
%"class.ui::MouseEvent" = type { %"class.ui::LocatedEvent", i32, %"class.gfx::Vector2dF", %"struct.ui::PointerDetails" }
%"class.ui::LocatedEvent" = type { %"class.ui::Event", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.41" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.34" }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.36" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::pair"* }
%"class.ui::EventTarget" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.base::flat_map.44"* }
%"class.base::flat_map.44" = type opaque
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Vector2dF" = type { float, float }
%"struct.ui::PointerDetails" = type { i32, float, float, float, float, float, float, float, i32, %"class.gfx::Vector2d" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.51 }
%class.scoped_refptr.51 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.21", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.21" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.22" }
%"struct.std::__1::atomic.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl.25" }
%"struct.std::__1::__cxx_atomic_impl.25" = type { %"struct.std::__1::__cxx_atomic_base_impl.26" }
%"struct.std::__1::__cxx_atomic_base_impl.26" = type { i8 }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.ui::XDragDropClient"* }
%"class.ui::XDragDropClient" = type <{ i32 (...)**, %"class.ui::XDragDropClient::Delegate"*, i32, i32, %"class.std::__1::unique_ptr.58", i32, [4 x i8], %"class.ui::XOSExchangeDataProvider"*, i32, i32, i32, i8, [3 x i8], %"class.std::__1::unique_ptr.362", %"class.base::OneShotTimer", %"class.base::OneShotTimer", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.ui::XDragContext"* }
%"class.ui::XDragContext" = type { i32, i32, %"class.ui::XDragDropClient"*, i8, %"class.gfx::Point", i32, %"class.ui::SelectionFormatMap", %"class.std::__1::vector.72", i32, %"class.std::__1::vector.72" }
%"class.ui::SelectionFormatMap" = type { %"class.std::__1::map.61" }
%"class.std::__1::map.61" = type { %"class.std::__1::__tree.62" }
%"class.std::__1::__tree.62" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.63", %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { i32*, i32*, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { i32* }
%"class.ui::XOSExchangeDataProvider" = type { %"class.ui::OSExchangeDataProvider", %"class.gfx::ImageSkia", %"class.gfx::Vector2d", %"class.x11::Connection"*, i32, i8, i32, %"class.ui::SelectionFormatMap", %"class.base::FilePath", %"class.ui::SelectionOwner" }
%"class.ui::OSExchangeDataProvider" = type { i32 (...)** }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.82 }
%class.scoped_refptr.82 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.ui::SelectionOwner" = type { i32, i32, i32, %"class.ui::SelectionFormatMap", %"class.std::__1::vector.351", %"class.base::RepeatingTimer" }
%"class.std::__1::vector.351" = type { %"class.std::__1::__vector_base.352" }
%"class.std::__1::__vector_base.352" = type { %"struct.ui::SelectionOwner::IncrementalTransfer"*, %"struct.ui::SelectionOwner::IncrementalTransfer"*, %"class.std::__1::__compressed_pair.353" }
%"struct.ui::SelectionOwner::IncrementalTransfer" = type { i32, i32, i32, %"class.std::__1::unique_ptr.17", %class.scoped_refptr.342, i64, %"class.base::TimeTicks" }
%class.scoped_refptr.342 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.343", [4 x i8] }>
%"class.base::RefCountedThreadSafe.343" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"struct.ui::SelectionOwner::IncrementalTransfer"* }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback.361" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.358, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.360" }
%class.scoped_refptr.358 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.359" }>
%"class.base::RefCountedThreadSafe.359" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.360" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback.361" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"struct.std::__1::pair.365"* }
%"struct.std::__1::pair.365" = type opaque
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.30" }
%"class.ui::WmDragHandler::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.ui::X11MoveLoop"* }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.263", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.280", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map.319", %"class.std::__1::unique_ptr.329", %"class.base::circular_deque", %"class.base::ObserverList.335", %"class.x11::Event"*, %"class.base::circular_deque.339", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.30" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.257" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.x11::Render"* }
%"class.x11::Render" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"struct.x11::QueryExtensionReply" = type { i16, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.x11::Input"* }
%"class.x11::Input" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.273" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.266", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.266" = type { %"class.std::__1::__vector_base.267" }
%"class.std::__1::__vector_base.267" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.268" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.273" = type <{ %"class.std::__1::vector.266", %"class.base::LinkedList.274", i64, i32, [4 x i8] }>
%"class.base::LinkedList.274" = type { %"class.base::LinkNode.275" }
%"class.base::LinkNode.275" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.291", %"class.std::__1::vector.298" }
%"class.std::__1::vector.291" = type { %"class.std::__1::__vector_base.292" }
%"class.std::__1::__vector_base.292" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.293" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.298" = type { %"class.std::__1::__vector_base.299" }
%"class.std::__1::__vector_base.299" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.300" }
%"class.std::__1::vector.300" = type { %"class.std::__1::__vector_base.301" }
%"class.std::__1::__vector_base.301" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.302" }
%"class.std::__1::vector.302" = type { %"class.std::__1::__vector_base.303" }
%"class.std::__1::__vector_base.303" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map.319" = type { %"class.base::internal::flat_tree.320" }
%"class.base::internal::flat_tree.320" = type { %"class.std::__1::vector.321" }
%"class.std::__1::vector.321" = type { %"class.std::__1::__vector_base.322" }
%"class.std::__1::__vector_base.322" = type { %"struct.std::__1::pair.323"*, %"struct.std::__1::pair.323"*, %"class.std::__1::__compressed_pair.324" }
%"struct.std::__1::pair.323" = type opaque
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"struct.std::__1::pair.323"* }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.335" = type <{ %"class.std::__1::vector.266", %"class.base::LinkedList.336", i64, i32, [4 x i8] }>
%"class.base::LinkedList.336" = type { %"class.base::LinkNode.337" }
%"class.base::LinkNode.337" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type { i16, i32, void (i8*)*, i8*, i32* }
%"class.base::circular_deque.339" = type { %"class.base::internal::VectorBuffer.340", i64, i64 }
%"class.base::internal::VectorBuffer.340" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback.341", i8, %class.scoped_refptr.342, %"class.std::__1::unique_ptr.344" }
%"class.base::OnceCallback.341" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.350 }
%union.anon.350 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.x11::XScopedEventSelector"* }
%"class.x11::XScopedEventSelector" = type { i32, i32, %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::flat_tree.378" = type { %"class.std::__1::vector.72" }
%"class.std::__1::basic_string.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.382 }
%union.anon.382 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.absl::optional.388" = type { %"class.absl::optional_internal::optional_data.389" }
%"class.absl::optional_internal::optional_data.389" = type { %"class.absl::optional_internal::optional_data_base.390" }
%"class.absl::optional_internal::optional_data_base.390" = type { %"class.absl::optional_internal::optional_data_dtor_base.391" }
%"class.absl::optional_internal::optional_data_dtor_base.391" = type { i8, %union.anon.392 }
%union.anon.392 = type { i32 }
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"class.std::__1::vector.396"* }
%"class.std::__1::vector.396" = type { %"class.std::__1::__vector_base.397" }
%"class.std::__1::__vector_base.397" = type { %"struct.x11::Rectangle"*, %"struct.x11::Rectangle"*, %"class.std::__1::__compressed_pair.398" }
%"struct.x11::Rectangle" = type { i16, i16, i16, i16 }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"struct.x11::Rectangle"* }
%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.30", %"class.base::WeakPtrFactory.406" }
%"class.base::WeakPtrFactory.406" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.std::__1::array.407" = type { [4 x i32] }
%class.scoped_refptr = type { %"class.ui::X11Cursor"* }
%"class.ui::X11Cursor" = type { %"class.ui::PlatformCursor.base", i8, i32, %"class.std::__1::vector" }
%"class.ui::PlatformCursor.base" = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.12" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.base::OnceCallback"* }
%"class.base::internal::CancelableCallbackImpl.408" = type { %"class.base::OnceCallback", %"class.base::WeakPtrFactory.409" }
%"class.base::WeakPtrFactory.409" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.410" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.ui::PlatformWindowDelegate" = type { i32 (...)** }
%"class.ui::X11EventSource" = type { %"class.ui::PlatformEventSource", %"class.x11::EventObserver", %"class.std::__1::unique_ptr.421", %"class.x11::Connection"*, i8, i32, i32, %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.427" }
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.ui::X11EventWatcher"* }
%"class.ui::X11EventWatcher" = type { i32 (...)** }
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.ui::X11HotplugEventHandler"* }
%"class.ui::X11HotplugEventHandler" = type opaque
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.383 }
%struct.anon.383 = type { %"struct.std::__1::__padding.384", i8 }
%"struct.std::__1::__padding.384" = type { [1 x i8] }
%"struct.ui::PlatformWindowInitProperties" = type <{ i32, %"class.gfx::Rect", i32, i32, i8, i8, i8, i8, i8, [7 x i8], %"class.std::__1::basic_string", %"class.ui::WorkspaceExtensionDelegate"*, i32, i8, [3 x i8], %"class.gfx::ImageSkia"*, %"class.absl::optional.388", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.ui::X11ExtensionDelegate"*, i8, [7 x i8] }>
%"class.std::__1::vector.727" = type { %"class.std::__1::__vector_base.728" }
%"class.std::__1::__vector_base.728" = type { i32*, i32*, %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { i32* }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { i32*, i32*, %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { i32* }
%"struct.x11::Sync::CreateCounterRequest" = type { i32, %"struct.x11::Sync::Int64" }
%"struct.x11::Sync::Int64" = type { i32, i32 }
%"class.std::__1::vector.493" = type { %"class.std::__1::__vector_base.494" }
%"class.std::__1::__vector_base.494" = type { i32*, i32*, %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { i32* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.ui::X11WindowManager" = type { %"class.ui::X11Window"*, %"class.ui::X11Window"*, %"class.base::flat_map.411" }
%"class.base::flat_map.411" = type { %"class.base::internal::flat_tree.412" }
%"class.base::internal::flat_tree.412" = type { %"class.std::__1::vector.413" }
%"class.std::__1::vector.413" = type { %"class.std::__1::__vector_base.414" }
%"class.std::__1::__vector_base.414" = type { %"struct.std::__1::pair.415"*, %"struct.std::__1::pair.415"*, %"class.std::__1::__compressed_pair.416" }
%"struct.std::__1::pair.415" = type opaque
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"struct.std::__1::pair.415"* }
%"class.ui::TouchFactory" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset", %"class.std::__1::map.433", %"class.std::__1::set", %"class.absl::optional.453", [4 x i8], %"class.ui::SequentialIDGenerator", %"class.std::__1::map.477", i8, [7 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [2 x i64] }
%"class.std::__1::map.433" = type { %"class.std::__1::__tree.434" }
%"class.std::__1::__tree.434" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.435", %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.444" }
%"class.std::__1::__tree.444" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.445", %"class.std::__1::__compressed_pair.449" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::optional.453" = type { %"class.absl::optional_internal::optional_data.454" }
%"class.absl::optional_internal::optional_data.454" = type { %"class.absl::optional_internal::optional_data_base.455" }
%"class.absl::optional_internal::optional_data_base.455" = type { %"class.absl::optional_internal::optional_data_dtor_base.456" }
%"class.absl::optional_internal::optional_data_dtor_base.456" = type { i8, %union.anon.457 }
%union.anon.457 = type { i16 }
%"class.ui::SequentialIDGenerator" = type { %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.458", %"class.std::__1::__compressed_pair.466", %"class.std::__1::__compressed_pair.471", %"class.std::__1::__compressed_pair.473", [4 x i8] }>
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460", %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { float }
%"class.std::__1::map.477" = type { %"class.std::__1::__tree.478" }
%"class.std::__1::__tree.478" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.479", %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.x11::Connection::FutureImpl" = type { %"class.x11::Connection"*, i32, i8, i8* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector.829" = type { %"class.std::__1::__vector_base.830" }
%"class.std::__1::__vector_base.830" = type { i32*, i32*, %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { i32* }
%"struct.x11::CreateWindowRequest" = type { i8, i32, i32, i16, i16, i16, i16, i16, i32, i32, %"class.absl::optional.602", %"class.absl::optional", %"class.absl::optional.602", %"class.absl::optional", %"class.absl::optional.607", %"class.absl::optional.607", %"class.absl::optional.612", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.617", %"class.absl::optional.617", %"class.absl::optional.622", %"class.absl::optional.622", %"class.absl::optional.627", %"class.absl::optional.632" }
%"class.absl::optional.602" = type { %"class.absl::optional_internal::optional_data.603" }
%"class.absl::optional_internal::optional_data.603" = type { %"class.absl::optional_internal::optional_data_base.604" }
%"class.absl::optional_internal::optional_data_base.604" = type { %"class.absl::optional_internal::optional_data_dtor_base.605" }
%"class.absl::optional_internal::optional_data_dtor_base.605" = type { i8, %union.anon.606 }
%union.anon.606 = type { i32 }
%"class.absl::optional.607" = type { %"class.absl::optional_internal::optional_data.608" }
%"class.absl::optional_internal::optional_data.608" = type { %"class.absl::optional_internal::optional_data_base.609" }
%"class.absl::optional_internal::optional_data_base.609" = type { %"class.absl::optional_internal::optional_data_dtor_base.610" }
%"class.absl::optional_internal::optional_data_dtor_base.610" = type { i8, %union.anon.611 }
%union.anon.611 = type { i32 }
%"class.absl::optional.612" = type { %"class.absl::optional_internal::optional_data.613" }
%"class.absl::optional_internal::optional_data.613" = type { %"class.absl::optional_internal::optional_data_base.614" }
%"class.absl::optional_internal::optional_data_base.614" = type { %"class.absl::optional_internal::optional_data_dtor_base.615" }
%"class.absl::optional_internal::optional_data_dtor_base.615" = type { i8, %union.anon.616 }
%union.anon.616 = type { i32 }
%"class.absl::optional.617" = type { %"class.absl::optional_internal::optional_data.618" }
%"class.absl::optional_internal::optional_data.618" = type { %"class.absl::optional_internal::optional_data_base.619" }
%"class.absl::optional_internal::optional_data_base.619" = type { %"class.absl::optional_internal::optional_data_dtor_base.620" }
%"class.absl::optional_internal::optional_data_dtor_base.620" = type { i8, %union.anon.621 }
%union.anon.621 = type { i32 }
%"class.absl::optional.622" = type { %"class.absl::optional_internal::optional_data.623" }
%"class.absl::optional_internal::optional_data.623" = type { %"class.absl::optional_internal::optional_data_base.624" }
%"class.absl::optional_internal::optional_data_base.624" = type { %"class.absl::optional_internal::optional_data_dtor_base.625" }
%"class.absl::optional_internal::optional_data_dtor_base.625" = type { i8, %union.anon.626 }
%union.anon.626 = type { i32 }
%"class.absl::optional.627" = type { %"class.absl::optional_internal::optional_data.628" }
%"class.absl::optional_internal::optional_data.628" = type { %"class.absl::optional_internal::optional_data_base.629" }
%"class.absl::optional_internal::optional_data_base.629" = type { %"class.absl::optional_internal::optional_data_dtor_base.630" }
%"class.absl::optional_internal::optional_data_dtor_base.630" = type { i8, %union.anon.631 }
%union.anon.631 = type { i32 }
%"class.absl::optional.632" = type { %"class.absl::optional_internal::optional_data.633" }
%"class.absl::optional_internal::optional_data.633" = type { %"class.absl::optional_internal::optional_data_base.634" }
%"class.absl::optional_internal::optional_data_base.634" = type { %"class.absl::optional_internal::optional_data_dtor_base.635" }
%"class.absl::optional_internal::optional_data_dtor_base.635" = type { i8, %union.anon.636 }
%union.anon.636 = type { i32 }
%"class.x11::Future.711" = type { %"class.std::__1::unique_ptr.486" }
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.x11::Connection::FutureImpl"* }
%"class.ui::X11MenuRegistrar" = type { %"class.x11::EventObserver", %"class.std::__1::unique_ptr.17" }
%"struct.x11::GetSelectionOwnerReply" = type { i16, i32 }
%"class.ui::XVisualManager" = type { %"class.std::__1::unordered_map.573", i32, i32 }
%"class.std::__1::unordered_map.573" = type { %"class.std::__1::__hash_table.574" }
%"class.std::__1::__hash_table.574" = type <{ %"class.std::__1::unique_ptr.575", %"class.std::__1::__compressed_pair.585", %"class.std::__1::__compressed_pair.590", %"class.std::__1::__compressed_pair.595", [4 x i8] }>
%"class.std::__1::unique_ptr.575" = type { %"class.std::__1::__compressed_pair.576" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.577", %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.577" = type { %"struct.std::__1::__hash_node_base.578"** }
%"struct.std::__1::__hash_node_base.578" = type { %"struct.std::__1::__hash_node_base.578"* }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"class.std::__1::__bucket_list_deallocator.580" }
%"class.std::__1::__bucket_list_deallocator.580" = type { %"class.std::__1::__compressed_pair.581" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"struct.std::__1::__hash_node_base.578" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.x11::ChangeWindowAttributesRequest" = type { i32, %"class.absl::optional.602", %"class.absl::optional", %"class.absl::optional.602", %"class.absl::optional", %"class.absl::optional.607", %"class.absl::optional.607", %"class.absl::optional.612", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.617", %"class.absl::optional.617", %"class.absl::optional.622", %"class.absl::optional.622", %"class.absl::optional.627", %"class.absl::optional.632" }
%"struct.std::__1::array.522" = type { [5 x i32] }
%"class.std::__1::vector.769" = type { %"class.std::__1::__vector_base.770" }
%"class.std::__1::__vector_base.770" = type { i8*, i8*, %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { i8* }
%"struct.x11::ChangePropertyRequest" = type { i32, i32, i32, i32, i8, i32, %class.scoped_refptr.342 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::RefCountedBytes" = type { %"class.base::RefCountedMemory.base", %"class.std::__1::vector.769" }
%"class.base::RefCountedMemory.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.343" }>
%"class.std::__1::vector.847" = type { %"class.std::__1::__vector_base.848" }
%"class.std::__1::__vector_base.848" = type { i32*, i32*, %"class.std::__1::__compressed_pair.849" }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.850" }
%"struct.std::__1::__compressed_pair_elem.850" = type { i32* }
%"struct.ui::SizeHints" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.ui::PlatformWindowDelegate::BoundsChange" = type { %"class.gfx::Rect" }
%"struct.x11::ConfigureWindowRequest" = type { i32, %"class.absl::optional.388", %"class.absl::optional.388", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.501", %"class.absl::optional.506" }
%"class.absl::optional.501" = type { %"class.absl::optional_internal::optional_data.502" }
%"class.absl::optional_internal::optional_data.502" = type { %"class.absl::optional_internal::optional_data_base.503" }
%"class.absl::optional_internal::optional_data_base.503" = type { %"class.absl::optional_internal::optional_data_dtor_base.504" }
%"class.absl::optional_internal::optional_data_dtor_base.504" = type { i8, %union.anon.505 }
%union.anon.505 = type { i32 }
%"class.absl::optional.506" = type { %"class.absl::optional_internal::optional_data.507" }
%"class.absl::optional_internal::optional_data.507" = type { %"class.absl::optional_internal::optional_data_base.508" }
%"class.absl::optional_internal::optional_data_base.508" = type { %"class.absl::optional_internal::optional_data_dtor_base.509" }
%"class.absl::optional_internal::optional_data_dtor_base.509" = type { i8, %union.anon.510 }
%union.anon.510 = type { i32 }
%"class.std::__1::vector.703" = type { %"class.std::__1::__vector_base.704" }
%"class.std::__1::__vector_base.704" = type { %"class.display::Display"*, %"class.display::Display"*, %"class.std::__1::__compressed_pair.705" }
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional.512", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, %union.anon.516 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.517" }
%"class.absl::optional.517" = type { %"class.absl::optional_internal::optional_data.518" }
%"class.absl::optional_internal::optional_data.518" = type { %"class.absl::optional_internal::optional_data_base.519" }
%"class.absl::optional_internal::optional_data_base.519" = type { %"class.absl::optional_internal::optional_data_dtor_base.520" }
%"class.absl::optional_internal::optional_data_dtor_base.520" = type { i8, %union.anon.521 }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.display::Display"* }
%"class.display::Screen" = type { i32 (...)**, i64, i64 }
%"class.absl::optional_internal::optional_data_dtor_base.655" = type { i8, %union.anon.656 }
%union.anon.656 = type { %"class.gfx::Size" }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.22", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.546, %class.SkTDArray.547, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.546 = type { i8*, i32, i32 }
%class.SkTDArray.547 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.548 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.22" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.548 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.549", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.549" = type { %"struct.std::__1::__atomic_base.550" }
%"struct.std::__1::__atomic_base.550" = type { %"struct.std::__1::__cxx_atomic_impl.551" }
%"struct.std::__1::__cxx_atomic_impl.551" = type { %"struct.std::__1::__cxx_atomic_base_impl.552" }
%"struct.std::__1::__cxx_atomic_base_impl.552" = type { i8 }
%"class.x11::Future" = type { %"class.std::__1::unique_ptr.486" }
%"struct.x11::SetInputFocusRequest" = type { i32, i32, i32 }
%"class.base::OnceCallback.786" = type { %"class.base::internal::CallbackBase" }
%"struct.ui::WmHints" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.x11::WarpPointerRequest" = type { i32, i32, i16, i16, i16, i16, i16, i16 }
%"struct.x11::XFixes::CreatePointerBarrierRequest" = type { i32, i32, i16, i16, i16, i16, i32, %"class.std::__1::vector.740" }
%"class.std::__1::vector.740" = type { %"class.std::__1::__vector_base.741" }
%"class.std::__1::__vector_base.741" = type { i16*, i16*, %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { i16* }
%"class.std::__1::vector.524" = type { %"class.std::__1::__vector_base.525" }
%"class.std::__1::__vector_base.525" = type { i32*, i32*, %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { i32* }
%"class.x11::Future.754" = type { %"class.std::__1::unique_ptr.486" }
%"struct.x11::QueryTreeReply" = type { i16, i32, i32, %"class.std::__1::vector.524" }
%"class.std::__1::vector.535" = type { %"class.std::__1::__vector_base.536" }
%"class.std::__1::__vector_base.536" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.gfx::Rect"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%class.SkMatrix = type { [9 x float], i32 }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ImageSkiaRep" = type <{ %"class.cc::PaintImage", %class.sk_sp.563, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.560, %class.sk_sp.563, %"class.gfx::Rect", i32, %class.sk_sp.568, %class.sk_sp.569, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.560, %class.scoped_refptr.570 }
%class.sk_sp.568 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.569 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.560 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.561, i32, i32 }
%class.sk_sp.561 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.562, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.562 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.scoped_refptr.570 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type opaque
%class.sk_sp.563 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.564", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { i8* }
%class.SkBitmap = type { %class.sk_sp.571, %class.SkPixmap, %class.sk_sp.572 }
%class.sk_sp.571 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.572 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"struct.x11::Sync::SetCounterRequest" = type { i32, %"struct.x11::Sync::Int64" }
%"struct.x11::KeyEvent" = type <{ i32, i8, i8, i16, i32, i32, i32, i32, i16, i16, i16, i16, i32, i8, [3 x i8] }>
%struct._AtkKeyEventStruct = type { i32, i32, i32, i32, i8*, i16, i32 }
%"struct.x11::PropertyNotifyEvent" = type { i8, i16, i32, i32, i32, i32 }
%"class.x11::WriteBuffer" = type { %"class.std::__1::vector.855", %"class.std::__1::vector.769", i64, %"class.std::__1::vector.727" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %class.scoped_refptr.342*, %class.scoped_refptr.342*, %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.858" }
%"struct.std::__1::__compressed_pair_elem.858" = type { %class.scoped_refptr.342* }
%"struct.x11::SendEventRequest" = type { i8, i32, i32, %"struct.std::__1::array.862" }
%"struct.std::__1::array.862" = type { [32 x i8] }
%"struct.x11::ClientMessageEvent" = type { i8, i8, i16, i32, i32, %"union.x11::ClientMessageData" }
%"union.x11::ClientMessageData" = type { %"struct.std::__1::array.522" }
%"struct.x11::CrossingEvent" = type <{ i32, i8, [3 x i8], i32, i16, [2 x i8], i32, i32, i32, i32, i16, i16, i16, i16, i32, i32, i8, [3 x i8] }>
%"struct.x11::ExposeEvent" = type <{ i8, i8, i16, i32, i16, i16, i16, i16, i16, [2 x i8] }>
%"struct.x11::FocusEvent" = type { i32, i8, i32, i16, i32, i32 }
%"struct.x11::ConfigureNotifyEvent" = type <{ i8, i8, i16, i32, i32, i32, i16, i16, i16, i16, i16, i8, i8 }>
%"struct.x11::Input::CrossingEvent" = type { i32, i8, i16, i16, i32, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"struct.x11::Input::ModifierInfo", %"struct.x11::Input::GroupInfo", %"class.std::__1::vector.553" }
%"struct.x11::Input::ModifierInfo" = type { i32, i32, i32, i32 }
%"struct.x11::Input::GroupInfo" = type { i8, i8, i8, i8 }
%"struct.x11::MapNotifyEvent" = type <{ i8, i8, i16, i32, i32, i8, [3 x i8] }>
%"struct.x11::UnmapNotifyEvent" = type <{ i8, i8, i16, i32, i32, i8, [3 x i8] }>
%"struct.x11::SelectionNotifyEvent" = type { i8, i16, i32, i32, i32, i32, i32 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.808", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.816" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.810", i64, i64 }
%"class.std::__1::unique_ptr.810" = type { %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.820" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::OnceCallback.649" = type { %"class.base::internal::CallbackBase" }
%"struct.x11::MotionNotifyEvent" = type <{ i8, [3 x i8], i32, i16, [2 x i8], i32, i32, i32, i32, i16, i16, i16, i16, i32, i8, [3 x i8] }>
%"struct.x11::Input::DeviceEvent" = type { i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i32, %"struct.x11::Input::ModifierInfo", %"struct.x11::Input::GroupInfo", %"class.std::__1::vector.553", %"class.std::__1::vector.553", %"class.std::__1::vector.762" }
%"class.std::__1::vector.762" = type { %"class.std::__1::__vector_base.763" }
%"class.std::__1::__vector_base.763" = type { %"struct.x11::Input::Fp3232"*, %"struct.x11::Input::Fp3232"*, %"class.std::__1::__compressed_pair.764" }
%"struct.x11::Input::Fp3232" = type { i32, i32 }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.x11::Input::Fp3232"* }
%"class.ui::OSExchangeData" = type { %"class.std::__1::unique_ptr.657" }
%"class.std::__1::unique_ptr.657" = type { %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.ui::OSExchangeDataProvider"* }
%"class.ui::Cursor" = type { i32, %class.scoped_refptr.523, float, %"class.gfx::Point", %class.SkBitmap }
%class.scoped_refptr.523 = type { %"class.ui::PlatformCursor"* }
%"class.base::WeakPtr.669" = type { %"class.base::internal::WeakPtrBase" }
%"class.ui::XTopmostWindowFinder" = type { i32 (...)** }
%"class.ui::X11TopmostWindowFinder" = type <{ %"class.ui::XTopmostWindowFinder", %"class.gfx::Point", %"class.std::__1::set.679", i32, [4 x i8] }>
%"class.std::__1::set.679" = type { %"class.std::__1::__tree.680" }
%"class.std::__1::__tree.680" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.681", %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.ui::WmDropHandler" = type { i32 (...)** }
%"struct.x11::ReadBuffer" = type { %class.scoped_refptr.342, i64, i32* }
%"struct.x11::Shape::RectanglesRequest" = type { i32, i32, i32, i32, i16, i16, %"class.std::__1::vector.396" }
%"struct.x11::Shape::MaskRequest" = type { i32, i32, i32, i16, i16, i32 }
%"class.x11::Future.718" = type { %"class.std::__1::unique_ptr.486" }
%"struct.x11::TranslateCoordinatesRequest" = type { i32, i32, i16, i16 }
%"struct.x11::TranslateCoordinatesReply" = type { i8, i16, i32, i16, i16 }
%"struct.base::internal::flat_tree<x11::Atom, base::identity, std::__1::less<void>, std::__1::vector<x11::Atom, std::__1::allocator<x11::Atom> > >::value_compare" = type { i8 }
%class.scoped_refptr.735 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.359", [4 x i8] }>
%"class.x11::Future.843" = type { %"class.std::__1::unique_ptr.486" }
%"struct.x11::GetPropertyRequest" = type { i8, i32, i32, i32, i32, i32 }
%"struct.x11::GetPropertyReply" = type { i8, i16, i32, i32, i32, %class.scoped_refptr.342 }
%"struct.std::__1::__split_buffer.782" = type { i32*, i32*, i32*, %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.75", %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.std::__1::allocator.77"* }
%"class.std::__1::allocator.77" = type { i8 }
%"struct.x11::Response.739" = type { %"class.std::__1::unique_ptr.344" }
%"class.base::WeakPtr.802" = type { %"class.base::internal::WeakPtrBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::WeakPtr.887" = type { %"class.base::internal::WeakPtrBase" }

$_ZN3x1116SetArrayPropertyINS_4AtomEEENS_6FutureIvEENS_6WindowES1_S1_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE = comdat any

$_ZN3x1116SetArrayPropertyINS_4Sync7CounterEEENS_6FutureIvEENS_6WindowENS_4AtomES6_RKNSt3__16vectorIT_NS7_9allocatorIS9_EEEEPNS_10ConnectionE = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZN3x116FutureIvE11IgnoreErrorEv = comdat any

$_ZN3x1116SetArrayPropertyIjEENS_6FutureIvEENS_6WindowENS_4AtomES4_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE = comdat any

$_ZN20trace_event_internal13AddTraceEventIN2ui9EventTypeEEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_ = comdat any

$_ZN3x116FutureINS_22GetSelectionOwnerReplyEE4SyncEv = comdat any

$_ZNK3gfx6InsetsngEv = comdat any

$_ZN3x116FutureINS_25TranslateCoordinatesReplyEE4SyncEv = comdat any

$_ZN3x1116GetArrayPropertyINS_4AtomEEEbNS_6WindowES1_PNSt3__16vectorIT_NS3_9allocatorIS5_EEEEPS1_mPNS_10ConnectionE = comdat any

$_ZN3x1116GetArrayPropertyIiEEbNS_6WindowENS_4AtomEPNSt3__16vectorIT_NS3_9allocatorIS5_EEEEPS2_mPNS_10ConnectionE = comdat any

$_ZN2ui15PropertyHandler19AfterPropertyChangeEPKvl = comdat any

$_ZN3x116FutureINS_14QueryTreeReplyEE4SyncEv = comdat any

$_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE7emplaceIJS2_EEENS_11__wrap_iterIPS2_EENS7_IPKS2_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIN3x114AtomERNS_9allocatorIS2_EEE12emplace_backIJS2_EEEvDpOT_ = comdat any

$_ZN3x1116SetArrayPropertyIiEENS_6FutureIvEENS_6WindowENS_4AtomES4_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIZN3x116FutureIvE10OnResponseENS_12OnceCallbackIFvNS3_8ResponseIvEEEEEEUlSA_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS3_5ErrorENSE_14default_deleteISG_EEEEE_JSA_EEEFvSD_SJ_EE7RunOnceEPNS0_13BindStateBaseEOSD_OSJ_ = comdat any

$_ZN4base8internal9BindStateIZN3x116FutureIvE10OnResponseENS_12OnceCallbackIFvNS2_8ResponseIvEEEEEEUlS9_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS2_5ErrorENSD_14default_deleteISF_EEEEE_JS9_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIZN3x116FutureIvE11IgnoreErrorEvEUlNS3_8ResponseIvEEE_JEEEFvS7_EE7RunOnceEPNS0_13BindStateBaseEOS7_ = comdat any

$_ZN4base8internal9BindStateIZN3x116FutureIvE11IgnoreErrorEvEUlNS2_8ResponseIvEEE_JEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvN3x116WindowENS3_6CursorEEJS4_EEEFvS5_EE7RunOnceEPNS0_13BindStateBaseES5_ = comdat any

$_ZN4base8internal9BindStateIPFvN3x116WindowENS2_6CursorEEJS3_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEE13MakeForwarderIJS4_EEEvPNS2_IFvDpT_EEE = comdat any

$_ZN4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEE11ForwardOnceIJS4_EEEvDpT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEEEFvS6_EJNS_7WeakPtrIS9_EEEEES7_E7RunOnceEPNS0_13BindStateBaseES6_ = comdat any

$_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEEEFvS5_EJNS_7WeakPtrIS8_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEEEFvS6_EJNS_7WeakPtrIS9_EEEEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN2ui22PlatformWindowDelegateEFvPNS3_5EventEEJNS0_17UnretainedWrapperIS4_EEEEEFvS6_EE7RunOnceEPNS0_13BindStateBaseES6_ = comdat any

$_ZN4base8internal9BindStateIMN2ui22PlatformWindowDelegateEFvPNS2_5EventEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3x1116GetArrayPropertyINS_8VisualIdEEEbNS_6WindowENS_4AtomEPNSt3__16vectorIT_NS4_9allocatorIS6_EEEEPS3_mPNS_10ConnectionE = comdat any

$_ZN3x116FutureINS_16GetPropertyReplyEE4SyncEv = comdat any

$_ZNSt3__16vectorIN3x118VisualIdENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZN3x1116SetArrayPropertyINS_4TimeEEENS_6FutureIvEENS_6WindowENS_4AtomES5_RKNSt3__16vectorIT_NS6_9allocatorIS8_EEEEPNS_10ConnectionE = comdat any

$_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIN3x114AtomERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3x114AtomENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN3x114AtomENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3x114AtomENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN2ui9X11WindowEFvRKN3gfx4RectEEJNS0_17UnretainedWrapperIS4_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN2ui9X11WindowEFvRKN3gfx4RectEEJNS0_17UnretainedWrapperIS3_EES5_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE = comdat any

$_ZN4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE11ForwardOnceIJEEEvDpT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEES5_E7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE = comdat any

@_ZTVN2ui9X11WindowE = hidden unnamed_addr constant { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] } { [81 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11WindowD2Ev to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11WindowD0Ev to i8*), i8* bitcast (void (%"class.ui::PropertyHandler"*, i8*, i64)* @_ZN2ui15PropertyHandler19AfterPropertyChangeEPKvl to i8*), i8* bitcast (void (%"class.ui::X11Window"*, i1)* @_ZN2ui9X11Window4ShowEb to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window4HideEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window5CloseEv to i8*), i8* bitcast (i1 (%"class.ui::X11Window"*)* @_ZNK2ui9X11Window9IsVisibleEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window18PrepareForShutdownEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)* @_ZN2ui9X11Window9SetBoundsERKN3gfx4RectE to i8*), i8* bitcast ({ i64, i64 } (%"class.ui::X11Window"*)* @_ZNK2ui9X11Window9GetBoundsEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*, %"class.std::__1::basic_string.379"*)* @_ZN2ui9X11Window8SetTitleERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window10SetCaptureEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window14ReleaseCaptureEv to i8*), i8* bitcast (i1 (%"class.ui::X11Window"*)* @_ZNK2ui9X11Window10HasCaptureEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window16ToggleFullscreenEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window8MaximizeEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window8MinimizeEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window7RestoreEv to i8*), i8* bitcast (i32 (%"class.ui::X11Window"*)* @_ZNK2ui9X11Window22GetPlatformWindowStateEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window8ActivateEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window10DeactivateEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*, i1)* @_ZN2ui9X11Window17SetUseNativeFrameEb to i8*), i8* bitcast (i1 (%"class.ui::X11Window"*)* @_ZNK2ui9X11Window20ShouldUseNativeFrameEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*, %"class.ui::PlatformCursor"*)* @_ZN2ui9X11Window9SetCursorE13scoped_refptrINS_14PlatformCursorEE to i8*), i8* bitcast (void (%"class.ui::X11Window"*, %"class.gfx::Point"*)* @_ZN2ui9X11Window12MoveCursorToERKN3gfx5PointE to i8*), i8* bitcast (void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)* @_ZN2ui9X11Window21ConfineCursorToBoundsERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)* @_ZN2ui9X11Window25SetRestoredBoundsInPixelsERKN3gfx4RectE to i8*), i8* bitcast ({ i64, i64 } (%"class.ui::X11Window"*)* @_ZNK2ui9X11Window25GetRestoredBoundsInPixelsEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*, %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"*)* @_ZN2ui9X11Window14SetWindowIconsERKN3gfx9ImageSkiaES4_ to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window22SizeConstraintsChangedEv to i8*), i8* bitcast (i1 (%"class.ui::X11Window"*)* @_ZNK2ui9X11Window33ShouldWindowContentsBeTransparentEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*, i32)* @_ZN2ui9X11Window14SetZOrderLevelENS_11ZOrderLevelE to i8*), i8* bitcast (i32 (%"class.ui::X11Window"*)* @_ZNK2ui9X11Window14GetZOrderLevelEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*, i32)* @_ZN2ui9X11Window10StackAboveEj to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window10StackAtTopEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*, i1)* @_ZN2ui9X11Window10FlashFrameEb to i8*), i8* bitcast (void (%"class.ui::X11Window"*, %"class.std::__1::vector.535"*, %"class.gfx::Transform"*)* @_ZN2ui9X11Window8SetShapeENSt3__110unique_ptrINS1_6vectorIN3gfx4RectENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEERKNS4_9TransformE to i8*), i8* bitcast (void (%"class.ui::X11Window"*, %"class.gfx::SizeF"*)* @_ZN2ui9X11Window14SetAspectRatioERKN3gfx5SizeFE to i8*), i8* bitcast (i1 (%"class.ui::PlatformWindow"*)* @_ZNK2ui14PlatformWindow17IsAnimatingClosedEv to i8*), i8* bitcast (i1 (%"class.ui::X11Window"*)* @_ZNK2ui9X11Window35IsTranslucentWindowOpacitySupportedEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*, float)* @_ZN2ui9X11Window10SetOpacityEf to i8*), i8* bitcast (void (%"class.ui::PlatformWindow"*, i1)* @_ZN2ui14PlatformWindow37SetVisibilityChangedAnimationsEnabledEb to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::PlatformWindow"*)* @_ZNK2ui14PlatformWindow17GetWindowUniqueIdEv to i8*), i8* bitcast (i1 (%"class.ui::PlatformWindow"*)* @_ZNK2ui14PlatformWindow23ShouldUpdateWindowShapeEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*, %"struct.ui::PlatformWindowInitProperties"*)* @_ZN2ui9X11Window10InitializeENS_28PlatformWindowInitPropertiesE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::X11Window"*)* @_ZNK2ui9X11Window12GetWorkspaceEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*, i1)* @_ZN2ui9X11Window25SetVisibleOnAllWorkspacesEb to i8*), i8* bitcast (i1 (%"class.ui::X11Window"*)* @_ZNK2ui9X11Window24IsVisibleOnAllWorkspacesEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*, %"class.ui::WorkspaceExtensionDelegate"*)* @_ZN2ui9X11Window29SetWorkspaceExtensionDelegateEPNS_26WorkspaceExtensionDelegateE to i8*), i8* bitcast (i1 (%"class.ui::X11Window"*)* @_ZNK2ui9X11Window24IsSyncExtensionAvailableEv to i8*), i8* bitcast (i1 (%"class.ui::X11Window"*)* @_ZNK2ui9X11Window10IsWmTilingEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window25OnCompleteSwapAfterResizeEv to i8*), i8* bitcast ({ i64, i64 } (%"class.ui::X11Window"*)* @_ZNK2ui9X11Window25GetXRootWindowOuterBoundsEv to i8*), i8* bitcast (i1 (%"class.ui::X11Window"*, %"class.gfx::Point"*)* @_ZNK2ui9X11Window22ContainsPointInXRegionERKN3gfx5PointE to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window12LowerXWindowEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*, i1)* @_ZN2ui9X11Window19SetOverrideRedirectEb to i8*), i8* bitcast (void (%"class.ui::X11Window"*, %"class.ui::X11ExtensionDelegate"*)* @_ZN2ui9X11Window23SetX11ExtensionDelegateEPNS_20X11ExtensionDelegateE to i8*), i8* bitcast (void (%"class.ui::X11Window"*, %"class.x11::Event"*)* @_ZN2ui9X11Window7OnEventERKN3x115EventE to i8*), i8* bitcast (i1 (%"class.ui::X11Window"*, %"class.ui::Event"**)* @_ZN2ui9X11Window16CanDispatchEventERKPNS_5EventE to i8*), i8* bitcast (i32 (%"class.ui::X11Window"*, %"class.ui::Event"**)* @_ZN2ui9X11Window13DispatchEventERKPNS_5EventE to i8*), i8* bitcast (void (%"class.ui::X11Window"*, i32, %"class.gfx::Point"*)* @_ZN2ui9X11Window30DispatchHostWindowDragMovementEiRKN3gfx5PointE to i8*), i8* bitcast (i1 (%"class.ui::X11Window"*, %"class.gfx::Vector2d"*)* @_ZN2ui9X11Window11RunMoveLoopERKN3gfx8Vector2dE to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window11EndMoveLoopEv to i8*), i8* bitcast (i1 (%"class.ui::X11Window"*, %"class.ui::OSExchangeData"*, i32, %"class.ui::Cursor"*, i1, %"class.ui::WmDragHandler::Delegate"*)* @_ZN2ui9X11Window9StartDragERKNS_14OSExchangeDataEiNS_6CursorEbPNS_13WmDragHandler8DelegateE to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window10CancelDragEv to i8*), i8* bitcast (%"class.ui::XTopmostWindowFinder"* (%"class.ui::X11Window"*)* @_ZN2ui9X11Window18CreateWindowFinderEv to i8*), i8* bitcast (i32 (%"class.ui::X11Window"*, %"class.gfx::Point"*)* @_ZN2ui9X11Window10UpdateDragERKN3gfx5PointE to i8*), i8* bitcast (void (%"class.ui::X11Window"*, i32)* @_ZN2ui9X11Window12UpdateCursorENS_5mojom13DragOperationE to i8*), i8* bitcast (void (%"class.ui::X11Window"*, i32)* @_ZN2ui9X11Window18OnBeginForeignDragEN3x116WindowE to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window16OnEndForeignDragEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window17OnBeforeDragLeaveEv to i8*), i8* bitcast (i32 (%"class.ui::X11Window"*)* @_ZN2ui9X11Window11PerformDropEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window11EndDragLoopEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*, %"class.gfx::Point"*, i32, i64)* @_ZN2ui9X11Window15OnMouseMovementERKN3gfx5PointEiN4base9TimeTicksE to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window15OnMouseReleasedEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZN2ui9X11Window15OnMoveLoopEndedEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)* @_ZN2ui9X11Window15SetBoundsOnMoveERKN3gfx4RectE to i8*), i8* bitcast (%"class.ui::X11Cursor"* (%"class.ui::X11Window"*)* @_ZN2ui9X11Window13GetLastCursorEv to i8*), i8* bitcast (i64 (%"class.ui::X11Window"*)* @_ZN2ui9X11Window7GetSizeEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%"class.ui::X11Window"*, i32, %"class.gfx::Point"*)* @_ZThn32_N2ui9X11Window30DispatchHostWindowDragMovementEiRKN3gfx5PointE to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn32_N2ui9X11WindowD1Ev to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn32_N2ui9X11WindowD0Ev to i8*)], [6 x i8*] [i8* inttoptr (i64 -40 to i8*), i8* null, i8* bitcast (i1 (%"class.ui::X11Window"*, %"class.ui::Event"**)* @_ZThn40_N2ui9X11Window16CanDispatchEventERKPNS_5EventE to i8*), i8* bitcast (i32 (%"class.ui::X11Window"*, %"class.ui::Event"**)* @_ZThn40_N2ui9X11Window13DispatchEventERKPNS_5EventE to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn40_N2ui9X11WindowD1Ev to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn40_N2ui9X11WindowD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -48 to i8*), i8* null, i8* bitcast (void (%"class.ui::X11Window"*, %"class.x11::Event"*)* @_ZThn48_N2ui9X11Window7OnEventERKN3x115EventE to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn48_N2ui9X11WindowD1Ev to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn48_N2ui9X11WindowD0Ev to i8*)], [8 x i8*] [i8* inttoptr (i64 -56 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::X11Window"*)* @_ZThn56_NK2ui9X11Window12GetWorkspaceEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*, i1)* @_ZThn56_N2ui9X11Window25SetVisibleOnAllWorkspacesEb to i8*), i8* bitcast (i1 (%"class.ui::X11Window"*)* @_ZThn56_NK2ui9X11Window24IsVisibleOnAllWorkspacesEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*, %"class.ui::WorkspaceExtensionDelegate"*)* @_ZThn56_N2ui9X11Window29SetWorkspaceExtensionDelegateEPNS_26WorkspaceExtensionDelegateE to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn56_N2ui9X11WindowD1Ev to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn56_N2ui9X11WindowD0Ev to i8*)], [12 x i8*] [i8* inttoptr (i64 -64 to i8*), i8* null, i8* bitcast (i1 (%"class.ui::X11Window"*)* @_ZThn64_NK2ui9X11Window24IsSyncExtensionAvailableEv to i8*), i8* bitcast (i1 (%"class.ui::X11Window"*)* @_ZThn64_NK2ui9X11Window10IsWmTilingEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn64_N2ui9X11Window25OnCompleteSwapAfterResizeEv to i8*), i8* bitcast ({ i64, i64 } (%"class.ui::X11Window"*)* @_ZThn64_NK2ui9X11Window25GetXRootWindowOuterBoundsEv to i8*), i8* bitcast (i1 (%"class.ui::X11Window"*, %"class.gfx::Point"*)* @_ZThn64_NK2ui9X11Window22ContainsPointInXRegionERKN3gfx5PointE to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn64_N2ui9X11Window12LowerXWindowEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*, i1)* @_ZThn64_N2ui9X11Window19SetOverrideRedirectEb to i8*), i8* bitcast (void (%"class.ui::X11Window"*, %"class.ui::X11ExtensionDelegate"*)* @_ZThn64_N2ui9X11Window23SetX11ExtensionDelegateEPNS_20X11ExtensionDelegateE to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn64_N2ui9X11WindowD1Ev to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn64_N2ui9X11WindowD0Ev to i8*)], [4 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (i1 (%"class.ui::X11Window"*, %"class.ui::OSExchangeData"*, i32, %"class.ui::Cursor"*, i1, %"class.ui::WmDragHandler::Delegate"*)* @_ZThn72_N2ui9X11Window9StartDragERKNS_14OSExchangeDataEiNS_6CursorEbPNS_13WmDragHandler8DelegateE to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn72_N2ui9X11Window10CancelDragEv to i8*)], [12 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.ui::XTopmostWindowFinder"* (%"class.ui::X11Window"*)* @_ZThn80_N2ui9X11Window18CreateWindowFinderEv to i8*), i8* bitcast (i32 (%"class.ui::X11Window"*, %"class.gfx::Point"*)* @_ZThn80_N2ui9X11Window10UpdateDragERKN3gfx5PointE to i8*), i8* bitcast (void (%"class.ui::X11Window"*, i32)* @_ZThn80_N2ui9X11Window12UpdateCursorENS_5mojom13DragOperationE to i8*), i8* bitcast (void (%"class.ui::X11Window"*, i32)* @_ZThn80_N2ui9X11Window18OnBeginForeignDragEN3x116WindowE to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn80_N2ui9X11Window16OnEndForeignDragEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn80_N2ui9X11Window17OnBeforeDragLeaveEv to i8*), i8* bitcast (i32 (%"class.ui::X11Window"*)* @_ZThn80_N2ui9X11Window11PerformDropEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn80_N2ui9X11Window11EndDragLoopEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn80_N2ui9X11WindowD1Ev to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn80_N2ui9X11WindowD0Ev to i8*)], [7 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn88_N2ui9X11WindowD1Ev to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn88_N2ui9X11WindowD0Ev to i8*), i8* bitcast (void (%"class.ui::X11Window"*, %"class.gfx::Point"*, i32, i64)* @_ZThn88_N2ui9X11Window15OnMouseMovementERKN3gfx5PointEiN4base9TimeTicksE to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn88_N2ui9X11Window15OnMouseReleasedEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn88_N2ui9X11Window15OnMoveLoopEndedEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -96 to i8*), i8* null, i8* bitcast (i1 (%"class.ui::X11Window"*, %"class.gfx::Vector2d"*)* @_ZThn96_N2ui9X11Window11RunMoveLoopERKN3gfx8Vector2dE to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn96_N2ui9X11Window11EndMoveLoopEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn96_N2ui9X11WindowD1Ev to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn96_N2ui9X11WindowD0Ev to i8*)], [7 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)* @_ZThn104_N2ui9X11Window15SetBoundsOnMoveERKN3gfx4RectE to i8*), i8* bitcast (%"class.ui::X11Cursor"* (%"class.ui::X11Window"*)* @_ZThn104_N2ui9X11Window13GetLastCursorEv to i8*), i8* bitcast (i64 (%"class.ui::X11Window"*)* @_ZThn104_N2ui9X11Window7GetSizeEv to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn104_N2ui9X11WindowD1Ev to i8*), i8* bitcast (void (%"class.ui::X11Window"*)* @_ZThn104_N2ui9X11WindowD0Ev to i8*)] }, align 8
@_ZN2ui21kStatusIconWmRoleNameE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [17 x i8] c"WM_DELETE_WINDOW\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"_NET_WM_PING\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"_NET_WM_SYNC_REQUEST\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"WM_PROTOCOLS\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"_NET_WM_PID\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"_NET_WM_WINDOW_TYPE_MENU\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"_NET_WM_WINDOW_TYPE_TOOLTIP\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"_NET_WM_WINDOW_TYPE_NOTIFICATION\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"_NET_WM_WINDOW_TYPE_DND\00", align 1
@.str.9 = private unnamed_addr constant [27 x i8] c"_NET_WM_WINDOW_TYPE_NORMAL\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"_NET_WM_WINDOW_TYPE\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"_NET_WM_STATE_SKIP_TASKBAR\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"_NET_WM_STATE_ABOVE\00", align 1
@.str.13 = private unnamed_addr constant [21 x i8] c"_NET_WM_STATE_STICKY\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"_NET_WM_DESKTOP\00", align 1
@_ZN2ui12_GLOBAL__N_119kX11WindowRolePopupE = internal constant [6 x i8] c"popup\00", align 1
@_ZN2ui12_GLOBAL__N_120kX11WindowRoleBubbleE = internal constant [7 x i8] c"bubble\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"_GTK_THEME_VARIANT\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"UTF8_STRING\00", align 1
@.str.17 = private unnamed_addr constant [29 x i8] c"_NET_WM_SYNC_REQUEST_COUNTER\00", align 1
@.str.18 = private unnamed_addr constant [26 x i8] c"_NET_WM_BYPASS_COMPOSITOR\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"_NET_WM_NAME\00", align 1
@.ref.tmp = private constant %"class.gfx::Rect" zeroinitializer, align 4
@.str.20 = private unnamed_addr constant [29 x i8] c"_NET_WM_STATE_MAXIMIZED_VERT\00", align 1
@.str.21 = private unnamed_addr constant [29 x i8] c"_NET_WM_STATE_MAXIMIZED_HORZ\00", align 1
@.str.22 = private unnamed_addr constant [16 x i8] c"WM_CHANGE_STATE\00", align 1
@constinit = private unnamed_addr constant [5 x i32] [i32 3, i32 0, i32 0, i32 0, i32 0], align 8
@.str.23 = private unnamed_addr constant [21 x i8] c"_NET_WM_STATE_HIDDEN\00", align 1
@_ZZN2ui9X11Window8ActivateEvE25wm_supports_active_window = internal unnamed_addr global i8 0, align 1
@_ZGVZN2ui9X11Window8ActivateEvE25wm_supports_active_window = internal global i64 0, align 8
@.str.24 = private unnamed_addr constant [19 x i8] c"_NET_ACTIVE_WINDOW\00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c"_NET_WM_ICON\00", align 1
@.str.26 = private unnamed_addr constant [23 x i8] c"_NET_WM_WINDOW_OPACITY\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.27 = private unnamed_addr constant [28 x i8] c"X11PlatformWindow::Dispatch\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"event->type()\00", align 1
@__const._ZN2ui9X11Window36ConvertEventLocationToTargetLocationERKN3gfx4RectES4_PNS_12LocatedEventE.display_window_current = private unnamed_addr constant { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon.516 } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.521 } } } } }, i32, i32, i8, [3 x i8], i32 } { i64 -6148914691236517206, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, float 0xFFFFFFFFE0000000, i32 -1431655766, { { { { i8, [3 x i8], %union.anon.516 } } } } { { { { i8, [3 x i8], %union.anon.516 } } } { { { i8, [3 x i8], %union.anon.516 } } { { i8, [3 x i8], %union.anon.516 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.516 { i32 -1431655766 } } } } }, i32 -1431655766, i32 -1431655766, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.521 } } } } } { [6 x %"class.gfx::ColorSpace"] [%"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }], [6 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.521 } } } } { { { { i8, [7 x i8], %union.anon.521 } } } { { { i8, [7 x i8], %union.anon.521 } } { { i8, [7 x i8], %union.anon.521 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.521 { %"struct.gfx::HDRStaticMetadata" { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF } } } } } } }, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766 }, align 8
@.str.29 = private unnamed_addr constant [19 x i8] c"_NET_SYSTEM_TRAY_S\00", align 1
@.str.30 = private unnamed_addr constant [24 x i8] c"_NET_SYSTEM_TRAY_VISUAL\00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"_NET_WM_USER_TIME\00", align 1
@.str.32 = private unnamed_addr constant [14 x i8] c"_NET_WM_STATE\00", align 1
@.str.33 = private unnamed_addr constant [25 x i8] c"_NET_WM_STATE_FULLSCREEN\00", align 1
@.str.34 = private unnamed_addr constant [19 x i8] c"_NET_FRAME_EXTENTS\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"DispatchResize\00", align 1
@.str.36 = private unnamed_addr constant [43 x i8] c"../../ui/platform_window/x11/x11_window.cc\00", align 1
@.str.37 = private unnamed_addr constant [13 x i8] c"_XEMBED_INFO\00", align 1
@.str.39 = private unnamed_addr constant [26 x i8] c"CHROMIUM_COMPOSITE_WINDOW\00", align 1
@.str.40 = private unnamed_addr constant [24 x i8] c"_NET_SYSTEM_TRAY_OPCODE\00", align 1
@.str.42 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@switch.table._ZN2ui9X11Window11HandleEventERKN3x115EventE = private unnamed_addr constant [5 x i32] [i32 1, i32 2, i32 3, i32 1, i32 2], align 4

@_ZN2ui9X11WindowC1EPNS_22PlatformWindowDelegateE = hidden unnamed_addr alias void (%"class.ui::X11Window"*, %"class.ui::PlatformWindowDelegate"*), void (%"class.ui::X11Window"*, %"class.ui::PlatformWindowDelegate"*)* @_ZN2ui9X11WindowC2EPNS_22PlatformWindowDelegateE
@_ZN2ui9X11WindowD1Ev = hidden unnamed_addr alias void (%"class.ui::X11Window"*), void (%"class.ui::X11Window"*)* @_ZN2ui9X11WindowD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11WindowC2EPNS_22PlatformWindowDelegateE(%"class.ui::X11Window"*, %"class.ui::PlatformWindowDelegate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 0
  tail call void @_ZN2ui14PlatformWindowC2Ev(%"class.ui::PlatformWindow"* %3) #17
  %4 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 3, i32 0
  %6 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 7, i32 0
  %9 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 9, i32 0
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = bitcast %"class.ui::WmMoveResizeHandler"* %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %11, align 8
  %12 = bitcast i32 (...)*** %5 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 4, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %12, align 8
  %13 = bitcast %"class.ui::X11Extension"* %7 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 5, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 6, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %13, align 8
  %14 = bitcast i32 (...)*** %8 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 7, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 8, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %14, align 8
  %15 = bitcast i32 (...)*** %9 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 9, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 10, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %15, align 8
  %16 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 11
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  store %"class.ui::PlatformWindowDelegate"* %1, %"class.ui::PlatformWindowDelegate"** %17, align 8
  %18 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 13
  %19 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 16
  %20 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 20
  %21 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %22 = bitcast %"class.ui::WorkspaceExtensionDelegate"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 17, i1 false)
  %23 = bitcast i32* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 29, i1 false)
  %24 = bitcast i32* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 36, i1 false)
  %25 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  store %"class.x11::Connection"* %25, %"class.x11::Connection"** %21, align 8
  %26 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 27
  %28 = tail call i32 @_ZN2ui16GetX11RootWindowEv() #17
  store i32 %28, i32* %27, align 4
  %29 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 28
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 29
  %31 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 31
  %32 = bitcast %"class.std::__1::unique_ptr.17"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 32, i1 false)
  store i8 1, i8* %31, align 8
  %33 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 32
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 33
  %35 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36
  %36 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 39, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %36, align 4
  %37 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 40
  %38 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 51
  %39 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 56, i32 0
  %40 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 58
  %41 = bitcast %"class.std::__1::unique_ptr.393"* %40 to i64*
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 59
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 60
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 61
  %45 = bitcast %"class.gfx::Insets"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %45, i8 0, i64 16, i1 false) #17
  %46 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 62
  %47 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 67
  %48 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %48, align 8
  %49 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 67, i32 1, i32 0
  %50 = ptrtoint %"class.base::internal::CancelableCallbackImpl"* %47 to i64
  %51 = bitcast %"class.std::__1::basic_string.379"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 26, i1 false)
  %52 = bitcast %"class.gfx::Rect"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %52, i8 0, i64 21, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %37, i8 0, i64 11, i1 false)
  %53 = bitcast i32* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 26, i1 false)
  %54 = bitcast i32* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 0, i64 16, i1 false)
  %55 = bitcast i64* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 26, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %49, i64 %50) #17
  %56 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 68
  store i8 0, i8* %56, align 8
  %57 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 70, i32 0
  %58 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 71
  %59 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 71, i32 1, i32 0
  %60 = ptrtoint %"class.base::internal::CancelableCallbackImpl.408"* %58 to i64
  %61 = bitcast %"class.ui::X11Cursor"** %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %59, i64 %60) #17
  %62 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 72, i32 0
  %63 = ptrtoint %"class.ui::X11Window"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %62, i64 %63) #17
  tail call void @_ZN2ui22SetWmMoveResizeHandlerEPNS_14PlatformWindowEPNS_19WmMoveResizeHandlerE(%"class.ui::PlatformWindow"* %3, %"class.ui::WmMoveResizeHandler"* %4) #17
  tail call void @_ZN2ui18WorkspaceExtension21SetWorkspaceExtensionEPNS_14PlatformWindowEPS0_(%"class.ui::WorkspaceExtension"* %6, %"class.ui::PlatformWindow"* %3, %"class.ui::WorkspaceExtension"* %6) #17
  tail call void @_ZN2ui12X11Extension15SetX11ExtensionEPNS_14PlatformWindowEPS0_(%"class.ui::X11Extension"* %7, %"class.ui::PlatformWindow"* %3, %"class.ui::X11Extension"* %7) #17
  ret void
}

declare void @_ZN2ui14PlatformWindowC2Ev(%"class.ui::PlatformWindow"*) unnamed_addr #1

declare %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() local_unnamed_addr #1

declare i32 @_ZN2ui16GetX11RootWindowEv() local_unnamed_addr #1

declare void @_ZN2ui22SetWmMoveResizeHandlerEPNS_14PlatformWindowEPNS_19WmMoveResizeHandlerE(%"class.ui::PlatformWindow"*, %"class.ui::WmMoveResizeHandler"*) local_unnamed_addr #1

declare void @_ZN2ui18WorkspaceExtension21SetWorkspaceExtensionEPNS_14PlatformWindowEPS0_(%"class.ui::WorkspaceExtension"*, %"class.ui::PlatformWindow"*, %"class.ui::WorkspaceExtension"*) local_unnamed_addr #1

declare void @_ZN2ui12X11Extension15SetX11ExtensionEPNS_14PlatformWindowEPS0_(%"class.ui::X11Extension"*, %"class.ui::PlatformWindow"*, %"class.ui::X11Extension"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 1, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 3, i32 0
  %6 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 4
  %7 = bitcast i32 (...)*** %5 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 4, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 5
  %9 = bitcast %"class.ui::X11Extension"* %8 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 5, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 6, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %9, align 8
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 7, i32 0
  %11 = bitcast i32 (...)*** %10 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 7, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 8, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %11, align 8
  %12 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 10
  %14 = bitcast i32 (...)*** %12 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 9, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }, { [81 x i8*], [5 x i8*], [6 x i8*], [5 x i8*], [8 x i8*], [12 x i8*], [4 x i8*], [12 x i8*], [7 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN2ui9X11WindowE, i64 0, inrange i32 10, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %14, align 8
  %15 = bitcast %"class.ui::X11Window"* %0 to void (%"class.ui::X11Window"*)***
  %16 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %17 = load %"class.x11::Connection"*, %"class.x11::Connection"** %16, align 8
  %18 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 3
  tail call void @_ZN3x1110Connection19RemoveEventObserverEPNS_13EventObserverE(%"class.x11::Connection"* %17, %"class.x11::EventObserver"* %18) #17
  %19 = tail call %"class.ui::X11EventSource"* @_ZN2ui14X11EventSource11GetInstanceEv() #17
  %20 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %19, i64 0, i32 0
  %21 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 2
  tail call void @_ZN2ui19PlatformEventSource29RemovePlatformEventDispatcherEPNS_23PlatformEventDispatcherE(%"class.ui::PlatformEventSource"* %20, %"class.ui::PlatformEventDispatcher"* %21) #17
  %22 = load void (%"class.ui::X11Window"*)**, void (%"class.ui::X11Window"*)*** %15, align 8
  %23 = getelementptr inbounds void (%"class.ui::X11Window"*)*, void (%"class.ui::X11Window"*)** %22, i64 5
  %24 = load void (%"class.ui::X11Window"*)*, void (%"class.ui::X11Window"*)** %23, align 8
  tail call void %24(%"class.ui::X11Window"* %0) #17
  %25 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 72, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %25) #17
  %26 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 71, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %26) #17
  %27 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 71, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %27) #17
  %28 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 70, i32 0
  %29 = load %"class.ui::X11Cursor"*, %"class.ui::X11Cursor"** %28, align 8
  %30 = icmp eq %"class.ui::X11Cursor"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %1
  %32 = getelementptr inbounds %"class.ui::X11Cursor", %"class.ui::X11Cursor"* %29, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %32, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %33) #17
  %34 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %32, i64 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %44

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %32, i64 -2
  %39 = bitcast %"class.base::RefCounted"* %38 to %"class.ui::PlatformCursor"*
  %40 = bitcast %"class.base::RefCounted"* %38 to void (%"class.ui::PlatformCursor"*)***
  %41 = load void (%"class.ui::PlatformCursor"*)**, void (%"class.ui::PlatformCursor"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %41, i64 1
  %43 = load void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %42, align 8
  tail call void %43(%"class.ui::PlatformCursor"* nonnull %39) #17
  br label %44

44:                                               ; preds = %1, %31, %37
  %45 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 67, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %45) #17
  %46 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 67, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %46) #17
  %47 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 58, i32 0, i32 0, i32 0
  %48 = load %"class.std::__1::vector.396"*, %"class.std::__1::vector.396"** %47, align 8
  store %"class.std::__1::vector.396"* null, %"class.std::__1::vector.396"** %47, align 8
  %49 = icmp eq %"class.std::__1::vector.396"* %48, null
  br i1 %49, label %61, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %48, i64 0, i32 0, i32 0
  %52 = load %"struct.x11::Rectangle"*, %"struct.x11::Rectangle"** %51, align 8
  %53 = icmp eq %"struct.x11::Rectangle"* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = ptrtoint %"struct.x11::Rectangle"* %52 to i64
  %56 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %48, i64 0, i32 0, i32 1
  %57 = bitcast %"struct.x11::Rectangle"** %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = bitcast %"struct.x11::Rectangle"* %52 to i8*
  tail call void @_ZdlPv(i8* %58) #18
  br label %59

59:                                               ; preds = %54, %50
  %60 = bitcast %"class.std::__1::vector.396"* %48 to i8*
  tail call void @_ZdlPv(i8* %60) #18
  br label %61

61:                                               ; preds = %44, %59
  %62 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 33
  %63 = bitcast %"class.std::__1::basic_string.379"* %62 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %61
  %68 = bitcast %"class.std::__1::basic_string.379"* %62 to i8**
  %69 = load i8*, i8** %68, align 8
  tail call void @_ZdlPv(i8* %69) #18
  br label %70

70:                                               ; preds = %61, %67
  %71 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30, i32 0, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8
  %73 = icmp eq i32* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %70
  %75 = ptrtoint i32* %72 to i64
  %76 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30, i32 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i64*
  store i64 %75, i64* %77, align 8
  %78 = bitcast i32* %72 to i8*
  tail call void @_ZdlPv(i8* %78) #18
  br label %79

79:                                               ; preds = %70, %74
  %80 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 29, i32 0, i32 0, i32 0
  %81 = load %"class.x11::XScopedEventSelector"*, %"class.x11::XScopedEventSelector"** %80, align 8
  store %"class.x11::XScopedEventSelector"* null, %"class.x11::XScopedEventSelector"** %80, align 8
  %82 = icmp eq %"class.x11::XScopedEventSelector"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %79
  tail call void @_ZN3x1120XScopedEventSelectorD1Ev(%"class.x11::XScopedEventSelector"* nonnull %81) #17
  %84 = bitcast %"class.x11::XScopedEventSelector"* %81 to i8*
  tail call void @_ZdlPv(i8* %84) #18
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %87 = load %"class.x11::XScopedEventSelector"*, %"class.x11::XScopedEventSelector"** %86, align 8
  store %"class.x11::XScopedEventSelector"* null, %"class.x11::XScopedEventSelector"** %86, align 8
  %88 = icmp eq %"class.x11::XScopedEventSelector"* %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %85
  tail call void @_ZN3x1120XScopedEventSelectorD1Ev(%"class.x11::XScopedEventSelector"* nonnull %87) #17
  %90 = bitcast %"class.x11::XScopedEventSelector"* %87 to i8*
  tail call void @_ZdlPv(i8* %90) #18
  br label %91

91:                                               ; preds = %85, %89
  %92 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %93 = load %"class.ui::X11MoveLoop"*, %"class.ui::X11MoveLoop"** %92, align 8
  store %"class.ui::X11MoveLoop"* null, %"class.ui::X11MoveLoop"** %92, align 8
  %94 = icmp eq %"class.ui::X11MoveLoop"* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %91
  %96 = bitcast %"class.ui::X11MoveLoop"* %93 to void (%"class.ui::X11MoveLoop"*)***
  %97 = load void (%"class.ui::X11MoveLoop"*)**, void (%"class.ui::X11MoveLoop"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.ui::X11MoveLoop"*)*, void (%"class.ui::X11MoveLoop"*)** %97, i64 1
  %99 = load void (%"class.ui::X11MoveLoop"*)*, void (%"class.ui::X11MoveLoop"*)** %98, align 8
  tail call void %99(%"class.ui::X11MoveLoop"* nonnull %93) #17
  br label %100

100:                                              ; preds = %91, %95
  %101 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %102 = load %"class.ui::XDragDropClient"*, %"class.ui::XDragDropClient"** %101, align 8
  store %"class.ui::XDragDropClient"* null, %"class.ui::XDragDropClient"** %101, align 8
  %103 = icmp eq %"class.ui::XDragDropClient"* %102, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %100
  %105 = bitcast %"class.ui::XDragDropClient"* %102 to void (%"class.ui::XDragDropClient"*)***
  %106 = load void (%"class.ui::XDragDropClient"*)**, void (%"class.ui::XDragDropClient"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.ui::XDragDropClient"*)*, void (%"class.ui::XDragDropClient"*)** %106, i64 1
  %108 = load void (%"class.ui::XDragDropClient"*)*, void (%"class.ui::XDragDropClient"*)** %107, align 8
  tail call void %108(%"class.ui::XDragDropClient"* nonnull %102) #17
  br label %109

109:                                              ; preds = %100, %104
  %110 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %111 = load %"class.ui::X11DesktopWindowMoveClient"*, %"class.ui::X11DesktopWindowMoveClient"** %110, align 8
  store %"class.ui::X11DesktopWindowMoveClient"* null, %"class.ui::X11DesktopWindowMoveClient"** %110, align 8
  %112 = icmp eq %"class.ui::X11DesktopWindowMoveClient"* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %109
  %114 = bitcast %"class.ui::X11DesktopWindowMoveClient"* %111 to void (%"class.ui::X11DesktopWindowMoveClient"*)***
  %115 = load void (%"class.ui::X11DesktopWindowMoveClient"*)**, void (%"class.ui::X11DesktopWindowMoveClient"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.ui::X11DesktopWindowMoveClient"*)*, void (%"class.ui::X11DesktopWindowMoveClient"*)** %115, i64 1
  %117 = load void (%"class.ui::X11DesktopWindowMoveClient"*)*, void (%"class.ui::X11DesktopWindowMoveClient"*)** %116, align 8
  tail call void %117(%"class.ui::X11DesktopWindowMoveClient"* nonnull %111) #17
  br label %118

118:                                              ; preds = %109, %113
  tail call void @_ZN2ui26X11DesktopWindowMoveClient8DelegateD2Ev(%"class.ui::X11DesktopWindowMoveClient::Delegate"* %13) #17
  tail call void @_ZN2ui12X11ExtensionD2Ev(%"class.ui::X11Extension"* %8) #17
  tail call void @_ZN2ui18WorkspaceExtensionD2Ev(%"class.ui::WorkspaceExtension"* %6) #17
  %119 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 0
  tail call void @_ZN2ui14PlatformWindowD2Ev(%"class.ui::PlatformWindow"* %119) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui26X11DesktopWindowMoveClient8DelegateD2Ev(%"class.ui::X11DesktopWindowMoveClient::Delegate"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui12X11ExtensionD2Ev(%"class.ui::X11Extension"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui18WorkspaceExtensionD2Ev(%"class.ui::WorkspaceExtension"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui14PlatformWindowD2Ev(%"class.ui::PlatformWindow"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N2ui9X11WindowD1Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 71, i32 1
  %3 = bitcast %"class.base::WeakPtrFactory.409"* %2 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N2ui9X11WindowD1Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 71
  %3 = bitcast %"class.base::internal::CancelableCallbackImpl.408"* %2 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N2ui9X11WindowD1Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 70
  %3 = bitcast %class.scoped_refptr* %2 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N2ui9X11WindowD1Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 69, i32 0, i64 3
  %3 = bitcast i32* %2 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N2ui9X11WindowD1Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 69, i32 0, i64 1
  %3 = bitcast i32* %2 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N2ui9X11WindowD1Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 67, i32 1, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N2ui9X11WindowD1Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 67, i32 1
  %3 = bitcast %"class.base::WeakPtrFactory.406"* %2 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn96_N2ui9X11WindowD1Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 67
  %3 = bitcast %"class.base::internal::CancelableCallbackImpl"* %2 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N2ui9X11WindowD1Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 65
  %3 = bitcast i8* %2 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11WindowD0Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"* %0) #17
  %2 = bitcast %"class.ui::X11Window"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N2ui9X11WindowD0Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 71, i32 1
  %3 = bitcast %"class.base::WeakPtrFactory.409"* %2 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"* %3) #17
  %4 = bitcast %"class.base::WeakPtrFactory.409"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N2ui9X11WindowD0Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 71
  %3 = bitcast %"class.base::internal::CancelableCallbackImpl.408"* %2 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"* %3) #17
  %4 = bitcast %"class.base::internal::CancelableCallbackImpl.408"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N2ui9X11WindowD0Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 70
  %3 = bitcast %class.scoped_refptr* %2 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"* %3) #17
  %4 = bitcast %class.scoped_refptr* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N2ui9X11WindowD0Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 69, i32 0, i64 3
  %3 = bitcast i32* %2 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"* %3) #17
  %4 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N2ui9X11WindowD0Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 69, i32 0, i64 1
  %3 = bitcast i32* %2 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"* %3) #17
  %4 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N2ui9X11WindowD0Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 67, i32 1, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"* %3) #17
  %4 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N2ui9X11WindowD0Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 67, i32 1
  %3 = bitcast %"class.base::WeakPtrFactory.406"* %2 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"* %3) #17
  %4 = bitcast %"class.base::WeakPtrFactory.406"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn96_N2ui9X11WindowD0Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 67
  %3 = bitcast %"class.base::internal::CancelableCallbackImpl"* %2 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"* %3) #17
  %4 = bitcast %"class.base::internal::CancelableCallbackImpl"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N2ui9X11WindowD0Ev(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 65
  %3 = bitcast i8* %2 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11WindowD2Ev(%"class.ui::X11Window"* %3) #17
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window10InitializeENS_28PlatformWindowInitPropertiesE(%"class.ui::X11Window"*, %"struct.ui::PlatformWindowInitProperties"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.727", align 8
  %4 = alloca %"class.std::__1::vector.727", align 8
  %5 = alloca %"class.std::__1::vector.72", align 8
  %6 = alloca %"class.std::__1::vector.553", align 8
  %7 = alloca %"class.std::__1::vector.553", align 8
  %8 = alloca %"class.std::__1::vector.72", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca i32, align 4
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca i32, align 4
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca i32, align 4
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca i32, align 4
  %29 = alloca %"class.std::__1::basic_string", align 8
  %30 = alloca %"class.std::__1::basic_string", align 8
  %31 = alloca %"class.std::__1::basic_string", align 8
  %32 = alloca %"class.std::__1::basic_string", align 8
  %33 = alloca %"class.std::__1::basic_string", align 8
  %34 = alloca %"struct.x11::Sync::CreateCounterRequest", align 4
  %35 = alloca %"struct.x11::Sync::CreateCounterRequest", align 4
  %36 = alloca %"class.std::__1::vector.493", align 8
  %37 = alloca %"class.std::__1::basic_string", align 8
  %38 = alloca %"class.std::__1::basic_string", align 8
  %39 = alloca %"class.gfx::ImageSkia", align 8
  tail call void @_ZN2ui9X11Window13CreateXWindowERKNS_28PlatformWindowInitPropertiesE(%"class.ui::X11Window"* %0, %"struct.ui::PlatformWindowInitProperties"* dereferenceable(184) %1)
  %40 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 17
  %41 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2ui21kStatusIconWmRoleNameE, i64 0, i64 0)) #17
  %42 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  %46 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = zext i8 %44 to i64
  %49 = select i1 %45, i64 %47, i64 %48
  %50 = icmp eq i64 %41, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %2
  %52 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %40, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2ui21kStatusIconWmRoleNameE, i64 0, i64 0), i64 %41) #17
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %51
  %55 = tail call zeroext i1 @_ZN2ui9X11Window22InitializeAsStatusIconEv(%"class.ui::X11Window"* %0)
  br i1 %55, label %57, label %56

56:                                               ; preds = %54
  tail call void @_ZN2ui9X11Window12CloseXWindowEv(%"class.ui::X11Window"* %0)
  br label %899

57:                                               ; preds = %2, %54, %51
  %58 = tail call %"class.ui::X11WindowManager"* @_ZN2ui16X11WindowManager11GetInstanceEv() #17
  tail call void @_ZN2ui16X11WindowManager9AddWindowEPNS_9X11WindowE(%"class.ui::X11WindowManager"* %58, %"class.ui::X11Window"* %0) #17
  %59 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %60 = load %"class.x11::Connection"*, %"class.x11::Connection"** %59, align 8
  %61 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 3
  tail call void @_ZN3x1110Connection16AddEventObserverEPNS_13EventObserverE(%"class.x11::Connection"* %60, %"class.x11::EventObserver"* %61) #17
  %62 = tail call %"class.ui::X11EventSource"* @_ZN2ui14X11EventSource11GetInstanceEv() #17
  %63 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %62, i64 0, i32 0
  %64 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 2
  tail call void @_ZN2ui19PlatformEventSource26AddPlatformEventDispatcherEPNS_23PlatformEventDispatcherE(%"class.ui::PlatformEventSource"* %63, %"class.ui::PlatformEventDispatcher"* %64) #17
  %65 = tail call i8* @_Znwm(i64 136) #18
  %66 = bitcast i8* %65 to %"class.ui::X11DesktopWindowMoveClient"*
  %67 = icmp eq %"class.ui::X11Window"* %0, null
  %68 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 10
  %69 = select i1 %67, %"class.ui::X11DesktopWindowMoveClient::Delegate"* null, %"class.ui::X11DesktopWindowMoveClient::Delegate"* %68
  tail call void @_ZN2ui26X11DesktopWindowMoveClientC1EPNS0_8DelegateE(%"class.ui::X11DesktopWindowMoveClient"* nonnull %66, %"class.ui::X11DesktopWindowMoveClient::Delegate"* %69) #17
  %70 = ptrtoint i8* %65 to i64
  %71 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 18
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %71, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.ui::X11DesktopWindowMoveClient"*, %"class.ui::X11DesktopWindowMoveClient"** %72, align 8
  %74 = bitcast %"class.std::__1::unique_ptr"* %71 to i64*
  store i64 %70, i64* %74, align 8
  %75 = icmp eq %"class.ui::X11DesktopWindowMoveClient"* %73, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %57
  %77 = bitcast %"class.ui::X11DesktopWindowMoveClient"* %73 to void (%"class.ui::X11DesktopWindowMoveClient"*)***
  %78 = load void (%"class.ui::X11DesktopWindowMoveClient"*)**, void (%"class.ui::X11DesktopWindowMoveClient"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.ui::X11DesktopWindowMoveClient"*)*, void (%"class.ui::X11DesktopWindowMoveClient"*)** %78, i64 1
  %80 = load void (%"class.ui::X11DesktopWindowMoveClient"*)*, void (%"class.ui::X11DesktopWindowMoveClient"*)** %79, align 8
  tail call void %80(%"class.ui::X11DesktopWindowMoveClient"* nonnull %73) #17
  br label %81

81:                                               ; preds = %76, %57
  %82 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 0
  %83 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 9
  tail call void @_ZN2ui20SetWmMoveLoopHandlerEPNS_14PlatformWindowEPNS_17WmMoveLoopHandlerE(%"class.ui::PlatformWindow"* %82, %"class.ui::WmMoveLoopHandler"* %83) #17
  %84 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %85 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %84, align 8
  %86 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %87 = load i32, i32* %86, align 8
  %88 = bitcast %"class.ui::PlatformWindowDelegate"* %85 to void (%"class.ui::PlatformWindowDelegate"*, i32)***
  %89 = load void (%"class.ui::PlatformWindowDelegate"*, i32)**, void (%"class.ui::PlatformWindowDelegate"*, i32)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*, i32)*, void (%"class.ui::PlatformWindowDelegate"*, i32)** %89, i64 9
  %91 = load void (%"class.ui::PlatformWindowDelegate"*, i32)*, void (%"class.ui::PlatformWindowDelegate"*, i32)** %90, align 8
  tail call void %91(%"class.ui::PlatformWindowDelegate"* %85, i32 %87) #17
  %92 = tail call i8* @_Znwm(i64 24) #18
  %93 = bitcast i8* %92 to %"class.x11::XScopedEventSelector"*
  %94 = load i32, i32* %86, align 4
  tail call void @_ZN3x1120XScopedEventSelectorC1ENS_6WindowENS_9EventMaskE(%"class.x11::XScopedEventSelector"* nonnull %93, i32 %94, i32 6520959) #17
  %95 = ptrtoint i8* %92 to i64
  %96 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 29
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.17"* %96, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.x11::XScopedEventSelector"*, %"class.x11::XScopedEventSelector"** %97, align 8
  %99 = bitcast %"class.std::__1::unique_ptr.17"* %96 to i64*
  store i64 %95, i64* %99, align 8
  %100 = icmp eq %"class.x11::XScopedEventSelector"* %98, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %81
  tail call void @_ZN3x1120XScopedEventSelectorD1Ev(%"class.x11::XScopedEventSelector"* nonnull %98) #17
  %102 = bitcast %"class.x11::XScopedEventSelector"* %98 to i8*
  tail call void @_ZdlPv(i8* %102) #18
  br label %103

103:                                              ; preds = %101, %81
  %104 = load %"class.x11::Connection"*, %"class.x11::Connection"** %59, align 8
  tail call void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"* %104) #17
  %105 = tail call zeroext i1 @_ZN2ui18IsXInput2AvailableEv() #17
  br i1 %105, label %106, label %109

106:                                              ; preds = %103
  %107 = tail call %"class.ui::TouchFactory"* @_ZN2ui12TouchFactory11GetInstanceEv() #17
  %108 = load i32, i32* %86, align 8
  tail call void @_ZN2ui12TouchFactory18SetupXI2ForXWindowEN3x116WindowE(%"class.ui::TouchFactory"* %107, i32 %108) #17
  br label %109

109:                                              ; preds = %106, %103
  %110 = bitcast %"class.std::__1::vector.72"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #17
  %111 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %8, i64 0, i32 0, i32 0
  %112 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %8, i64 0, i32 0, i32 1
  %113 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %114 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %115 = bitcast %"class.std::__1::vector.72"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #17
  %116 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  store i8 16, i8* %117, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %114, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 16, i1 false) #17
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %119 = bitcast i64* %118 to i8*
  store i8 0, i8* %119, align 8
  %120 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #17
  %121 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #17
  %122 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  store i8 12, i8* %123, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %121, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12, i1 false) #17
  %124 = getelementptr inbounds i8, i8* %121, i64 12
  store i8 0, i8* %124, align 4
  %125 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #17
  %126 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #17
  %127 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  store i8 20, i8* %128, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %126, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i64 20, i1 false) #17
  %129 = getelementptr inbounds i8, i8* %126, i64 20
  store i8 0, i8* %129, align 4
  %130 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #17
  %131 = call i8* @_Znwm(i64 12) #18
  %132 = bitcast i8* %131 to i32*
  %133 = bitcast %"class.std::__1::vector.72"* %8 to i8**
  store i8* %131, i8** %133, align 8
  %134 = getelementptr inbounds i8, i8* %131, i64 12
  %135 = bitcast i32** %113 to i8**
  store i8* %134, i8** %135, align 8
  %136 = bitcast i32** %112 to i64*
  store i32 %120, i32* %132, align 4
  %137 = getelementptr inbounds i8, i8* %131, i64 4
  %138 = bitcast i8* %137 to i32*
  store i32 %125, i32* %138, align 4
  %139 = getelementptr inbounds i8, i8* %131, i64 8
  %140 = bitcast i8* %139 to i32*
  store i32 %130, i32* %140, align 4
  %141 = ptrtoint i8* %134 to i64
  store i64 %141, i64* %136, align 8
  %142 = load i8, i8* %128, align 1
  %143 = icmp slt i8 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %109
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8
  call void @_ZdlPv(i8* %146) #18
  br label %147

147:                                              ; preds = %109, %144
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #17
  %148 = load i8, i8* %123, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8
  call void @_ZdlPv(i8* %152) #18
  br label %153

153:                                              ; preds = %147, %150
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #17
  %154 = load i8, i8* %117, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %153
  %157 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  call void @_ZdlPv(i8* %158) #18
  br label %159

159:                                              ; preds = %153, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #17
  %160 = load i32, i32* %86, align 8
  %161 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %161) #17
  %162 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  store i8 12, i8* %163, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %161, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i64 12, i1 false) #17
  %164 = getelementptr inbounds i8, i8* %161, i64 12
  store i8 0, i8* %164, align 4
  %165 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %12) #17
  %166 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  %167 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyINS_4AtomEEENS_6FutureIvEENS_6WindowES1_S1_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE(i32 %160, i32 %165, i32 4, %"class.std::__1::vector.72"* nonnull dereferenceable(24) %8, %"class.x11::Connection"* %166)
  %168 = icmp eq %"class.x11::Connection::FutureImpl"* %167, null
  br i1 %168, label %171, label %169

169:                                              ; preds = %159
  %170 = bitcast %"class.x11::Connection::FutureImpl"* %167 to i8*
  call void @_ZdlPv(i8* %170) #18
  br label %171

171:                                              ; preds = %159, %169
  %172 = load i8, i8* %163, align 1
  %173 = icmp slt i8 %172, 0
  br i1 %173, label %174, label %177

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load i8*, i8** %175, align 8
  call void @_ZdlPv(i8* %176) #18
  br label %177

177:                                              ; preds = %171, %174
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %161) #17
  %178 = load i32, i32* %86, align 8
  %179 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %179) #17
  call void @_ZN3net11GetHostNameEv(%"class.std::__1::basic_string"* nonnull sret %13) #17
  %180 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  call void @_ZN3x1117SetStringPropertyENS_6WindowENS_4AtomES1_RKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS_10ConnectionE(i32 %178, i32 36, i32 31, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13, %"class.x11::Connection"* %180) #17
  %181 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %177
  %186 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %187) #18
  br label %188

188:                                              ; preds = %177, %185
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #17
  %189 = call i32 @getpid() #17
  %190 = load i32, i32* %86, align 8
  %191 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %191) #17
  %192 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %192, i64 0, i32 1, i32 0
  store i8 11, i8* %193, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %191, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i64 11, i1 false) #17
  %194 = getelementptr inbounds i8, i8* %191, i64 11
  store i8 0, i8* %194, align 1
  %195 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %14) #17
  %196 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  %197 = bitcast %"class.std::__1::vector.553"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %197) #17
  %198 = call i8* @_Znwm(i64 4) #18
  %199 = bitcast i8* %198 to i32*
  %200 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %6, i64 0, i32 0, i32 1
  %201 = bitcast %"class.std::__1::vector.553"* %6 to i8**
  store i8* %198, i8** %201, align 8
  %202 = getelementptr inbounds i8, i8* %198, i64 4
  %203 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %204 = bitcast i32** %203 to i8**
  store i8* %202, i8** %204, align 8
  %205 = bitcast i32** %200 to i64*
  store i32 %189, i32* %199, align 4
  %206 = ptrtoint i8* %202 to i64
  store i64 %206, i64* %205, align 8
  %207 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyIjEENS_6FutureIvEENS_6WindowENS_4AtomES4_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE(i32 %190, i32 %195, i32 6, %"class.std::__1::vector.553"* nonnull dereferenceable(24) %6, %"class.x11::Connection"* %196) #17
  %208 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %6, i64 0, i32 0, i32 0
  %209 = load i32*, i32** %208, align 8
  %210 = icmp eq i32* %209, null
  br i1 %210, label %214, label %211

211:                                              ; preds = %188
  %212 = ptrtoint i32* %209 to i64
  store i64 %212, i64* %205, align 8
  %213 = bitcast i32* %209 to i8*
  call void @_ZdlPv(i8* %213) #18
  br label %214

214:                                              ; preds = %188, %211
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %197) #17
  %215 = icmp eq %"class.x11::Connection::FutureImpl"* %207, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %214
  %217 = bitcast %"class.x11::Connection::FutureImpl"* %207 to i8*
  call void @_ZdlPv(i8* %217) #18
  br label %218

218:                                              ; preds = %214, %216
  %219 = load i8, i8* %193, align 1
  %220 = icmp slt i8 %219, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %218
  %222 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load i8*, i8** %222, align 8
  call void @_ZdlPv(i8* %223) #18
  br label %224

224:                                              ; preds = %218, %221
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %191) #17
  %225 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 0
  %226 = load i32, i32* %225, align 8
  switch i32 %226, label %283 [
    i32 2, label %227
    i32 3, label %241
    i32 1, label %255
    i32 4, label %269
  ]

227:                                              ; preds = %224
  %228 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #17
  %229 = call i8* @_Znwm(i64 32) #18
  %230 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %229, i8** %230, align 8
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %232 = bitcast i64* %231 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %232, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %229, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i64 24, i1 false) #17
  %233 = getelementptr inbounds i8, i8* %229, i64 24
  store i8 0, i8* %233, align 1
  %234 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %15) #17
  %235 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %236 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %235, i64 0, i32 1, i32 0
  %237 = load i8, i8* %236, align 1
  %238 = icmp slt i8 %237, 0
  br i1 %238, label %239, label %297

239:                                              ; preds = %227
  %240 = load i8*, i8** %230, align 8
  call void @_ZdlPv(i8* %240) #18
  br label %297

241:                                              ; preds = %224
  %242 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %242) #17
  %243 = call i8* @_Znwm(i64 32) #18
  %244 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %243, i8** %244, align 8
  %245 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %246 = bitcast i64* %245 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %246, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %243, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i64 27, i1 false) #17
  %247 = getelementptr inbounds i8, i8* %243, i64 27
  store i8 0, i8* %247, align 1
  %248 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %16) #17
  %249 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %249, i64 0, i32 1, i32 0
  %251 = load i8, i8* %250, align 1
  %252 = icmp slt i8 %251, 0
  br i1 %252, label %253, label %297

253:                                              ; preds = %241
  %254 = load i8*, i8** %244, align 8
  call void @_ZdlPv(i8* %254) #18
  br label %297

255:                                              ; preds = %224
  %256 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %256) #17
  %257 = call i8* @_Znwm(i64 48) #18
  %258 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %257, i8** %258, align 8
  %259 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %260 = bitcast i64* %259 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %260, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %257, i8* align 1 getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0), i64 32, i1 false) #17
  %261 = getelementptr inbounds i8, i8* %257, i64 32
  store i8 0, i8* %261, align 1
  %262 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %17) #17
  %263 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %264 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %263, i64 0, i32 1, i32 0
  %265 = load i8, i8* %264, align 1
  %266 = icmp slt i8 %265, 0
  br i1 %266, label %267, label %297

267:                                              ; preds = %255
  %268 = load i8*, i8** %258, align 8
  call void @_ZdlPv(i8* %268) #18
  br label %297

269:                                              ; preds = %224
  %270 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %270) #17
  %271 = call i8* @_Znwm(i64 32) #18
  %272 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %271, i8** %272, align 8
  %273 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %274 = bitcast i64* %273 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %274, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %271, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i64 23, i1 false) #17
  %275 = getelementptr inbounds i8, i8* %271, i64 23
  store i8 0, i8* %275, align 1
  %276 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %18) #17
  %277 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %278 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %277, i64 0, i32 1, i32 0
  %279 = load i8, i8* %278, align 1
  %280 = icmp slt i8 %279, 0
  br i1 %280, label %281, label %297

281:                                              ; preds = %269
  %282 = load i8*, i8** %272, align 8
  call void @_ZdlPv(i8* %282) #18
  br label %297

283:                                              ; preds = %224
  %284 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %284) #17
  %285 = call i8* @_Znwm(i64 32) #18
  %286 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %285, i8** %286, align 8
  %287 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %288 = bitcast i64* %287 to <2 x i64>*
  store <2 x i64> <i64 26, i64 -9223372036854775776>, <2 x i64>* %288, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %285, i8* align 1 getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i64 26, i1 false) #17
  %289 = getelementptr inbounds i8, i8* %285, i64 26
  store i8 0, i8* %289, align 1
  %290 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %19) #17
  %291 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %292 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %291, i64 0, i32 1, i32 0
  %293 = load i8, i8* %292, align 1
  %294 = icmp slt i8 %293, 0
  br i1 %294, label %295, label %297

295:                                              ; preds = %283
  %296 = load i8*, i8** %286, align 8
  call void @_ZdlPv(i8* %296) #18
  br label %297

297:                                              ; preds = %295, %283, %281, %269, %267, %255, %253, %241, %239, %227
  %298 = phi i8* [ %228, %227 ], [ %228, %239 ], [ %242, %241 ], [ %242, %253 ], [ %256, %255 ], [ %256, %267 ], [ %270, %269 ], [ %270, %281 ], [ %284, %283 ], [ %284, %295 ]
  %299 = phi i32 [ %234, %227 ], [ %234, %239 ], [ %248, %241 ], [ %248, %253 ], [ %262, %255 ], [ %262, %267 ], [ %276, %269 ], [ %276, %281 ], [ %290, %283 ], [ %290, %295 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %298) #17
  %300 = load i32, i32* %86, align 8
  %301 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %301) #17
  %302 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %303 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %302, i64 0, i32 1, i32 0
  store i8 19, i8* %303, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %301, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0), i64 19, i1 false) #17
  %304 = getelementptr inbounds i8, i8* %301, i64 19
  store i8 0, i8* %304, align 1
  %305 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %20) #17
  %306 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  %307 = bitcast %"class.std::__1::vector.72"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %307) #17
  %308 = call i8* @_Znwm(i64 4) #18
  %309 = bitcast i8* %308 to i32*
  %310 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %5, i64 0, i32 0, i32 1
  %311 = bitcast %"class.std::__1::vector.72"* %5 to i8**
  store i8* %308, i8** %311, align 8
  %312 = getelementptr inbounds i8, i8* %308, i64 4
  %313 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %314 = bitcast i32** %313 to i8**
  store i8* %312, i8** %314, align 8
  %315 = bitcast i32** %310 to i64*
  store i32 %299, i32* %309, align 4
  %316 = ptrtoint i8* %312 to i64
  store i64 %316, i64* %315, align 8
  %317 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyINS_4AtomEEENS_6FutureIvEENS_6WindowES1_S1_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE(i32 %300, i32 %305, i32 4, %"class.std::__1::vector.72"* nonnull dereferenceable(24) %5, %"class.x11::Connection"* %306) #17
  %318 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %5, i64 0, i32 0, i32 0
  %319 = load i32*, i32** %318, align 8
  %320 = icmp eq i32* %319, null
  br i1 %320, label %324, label %321

321:                                              ; preds = %297
  %322 = ptrtoint i32* %319 to i64
  store i64 %322, i64* %315, align 8
  %323 = bitcast i32* %319 to i8*
  call void @_ZdlPv(i8* %323) #18
  br label %324

324:                                              ; preds = %297, %321
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %307) #17
  %325 = icmp eq %"class.x11::Connection::FutureImpl"* %317, null
  br i1 %325, label %328, label %326

326:                                              ; preds = %324
  %327 = bitcast %"class.x11::Connection::FutureImpl"* %317 to i8*
  call void @_ZdlPv(i8* %327) #18
  br label %328

328:                                              ; preds = %324, %326
  %329 = load i8, i8* %303, align 1
  %330 = icmp slt i8 %329, 0
  br i1 %330, label %331, label %334

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load i8*, i8** %332, align 8
  call void @_ZdlPv(i8* %333) #18
  br label %334

334:                                              ; preds = %328, %331
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %301) #17
  %335 = load i32, i32* %225, align 8
  switch i32 %335, label %391 [
    i32 1, label %336
    i32 5, label %336
  ]

336:                                              ; preds = %334, %334
  %337 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 5
  %338 = load i8, i8* %337, align 1, !range !2
  %339 = icmp eq i8 %338, 0
  br i1 %339, label %340, label %391

340:                                              ; preds = %336
  %341 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30
  %342 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %342) #17
  %343 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %343) #17
  %344 = call i8* @_Znwm(i64 32) #18
  %345 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %344, i8** %345, align 8
  %346 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %347 = bitcast i64* %346 to <2 x i64>*
  store <2 x i64> <i64 26, i64 -9223372036854775776>, <2 x i64>* %347, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %344, i8* align 1 getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0), i64 26, i1 false) #17
  %348 = getelementptr inbounds i8, i8* %344, i64 26
  store i8 0, i8* %348, align 1
  %349 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %22) #17
  store i32 %349, i32* %21, align 4
  %350 = getelementptr inbounds %"class.base::internal::flat_tree.378", %"class.base::internal::flat_tree.378"* %341, i64 0, i32 0, i32 0, i32 0
  %351 = load i32*, i32** %350, align 8
  %352 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30, i32 0, i32 0, i32 1
  %353 = bitcast i32** %352 to i64*
  %354 = load i64, i64* %353, align 8
  %355 = ptrtoint i32* %351 to i64
  %356 = sub i64 %354, %355
  %357 = icmp eq i64 %356, 0
  %358 = inttoptr i64 %354 to i32*
  br i1 %357, label %374, label %359

359:                                              ; preds = %340
  %360 = ashr exact i64 %356, 2
  br label %361

361:                                              ; preds = %361, %359
  %362 = phi i32* [ %351, %359 ], [ %372, %361 ]
  %363 = phi i64 [ %360, %359 ], [ %371, %361 ]
  %364 = lshr i64 %363, 1
  %365 = getelementptr inbounds i32, i32* %362, i64 %364
  %366 = load i32, i32* %365, align 4
  %367 = icmp ult i32 %366, %349
  %368 = getelementptr inbounds i32, i32* %365, i64 1
  %369 = xor i64 %364, -1
  %370 = add i64 %363, %369
  %371 = select i1 %367, i64 %370, i64 %364
  %372 = select i1 %367, i32* %368, i32* %362
  %373 = icmp eq i64 %371, 0
  br i1 %373, label %374, label %361

374:                                              ; preds = %361, %340
  %375 = phi i32* [ %351, %340 ], [ %372, %361 ]
  %376 = icmp eq i32* %375, %358
  br i1 %376, label %380, label %377

377:                                              ; preds = %374
  %378 = load i32, i32* %375, align 4
  %379 = icmp ult i32 %349, %378
  br i1 %379, label %380, label %383

380:                                              ; preds = %377, %374
  %381 = getelementptr inbounds %"class.base::internal::flat_tree.378", %"class.base::internal::flat_tree.378"* %341, i64 0, i32 0
  %382 = call i32* @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE7emplaceIJS2_EEENS_11__wrap_iterIPS2_EENS7_IPKS2_EEDpOT_(%"class.std::__1::vector.72"* %381, i32* %375, i32* nonnull dereferenceable(4) %21) #17
  br label %383

383:                                              ; preds = %377, %380
  %384 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %385 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %384, i64 0, i32 1, i32 0
  %386 = load i8, i8* %385, align 1
  %387 = icmp slt i8 %386, 0
  br i1 %387, label %388, label %390

388:                                              ; preds = %383
  %389 = load i8*, i8** %345, align 8
  call void @_ZdlPv(i8* %389) #18
  br label %390

390:                                              ; preds = %383, %388
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %343) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %342) #17
  br label %391

391:                                              ; preds = %334, %336, %390
  %392 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 6
  %393 = load i8, i8* %392, align 2, !range !2
  %394 = icmp eq i8 %393, 0
  %395 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 40
  store i8 %393, i8* %395, align 4
  br i1 %394, label %444, label %396

396:                                              ; preds = %391
  %397 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30
  %398 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %398) #17
  %399 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %399) #17
  %400 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %401 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %400, i64 0, i32 1, i32 0
  store i8 19, i8* %401, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %399, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0), i64 19, i1 false) #17
  %402 = getelementptr inbounds i8, i8* %399, i64 19
  store i8 0, i8* %402, align 1
  %403 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %24) #17
  store i32 %403, i32* %23, align 4
  %404 = getelementptr inbounds %"class.base::internal::flat_tree.378", %"class.base::internal::flat_tree.378"* %397, i64 0, i32 0, i32 0, i32 0
  %405 = load i32*, i32** %404, align 8
  %406 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30, i32 0, i32 0, i32 1
  %407 = bitcast i32** %406 to i64*
  %408 = load i64, i64* %407, align 8
  %409 = ptrtoint i32* %405 to i64
  %410 = sub i64 %408, %409
  %411 = icmp eq i64 %410, 0
  %412 = inttoptr i64 %408 to i32*
  br i1 %411, label %428, label %413

413:                                              ; preds = %396
  %414 = ashr exact i64 %410, 2
  br label %415

415:                                              ; preds = %415, %413
  %416 = phi i32* [ %405, %413 ], [ %426, %415 ]
  %417 = phi i64 [ %414, %413 ], [ %425, %415 ]
  %418 = lshr i64 %417, 1
  %419 = getelementptr inbounds i32, i32* %416, i64 %418
  %420 = load i32, i32* %419, align 4
  %421 = icmp ult i32 %420, %403
  %422 = getelementptr inbounds i32, i32* %419, i64 1
  %423 = xor i64 %418, -1
  %424 = add i64 %417, %423
  %425 = select i1 %421, i64 %424, i64 %418
  %426 = select i1 %421, i32* %422, i32* %416
  %427 = icmp eq i64 %425, 0
  br i1 %427, label %428, label %415

428:                                              ; preds = %415, %396
  %429 = phi i32* [ %405, %396 ], [ %426, %415 ]
  %430 = icmp eq i32* %429, %412
  br i1 %430, label %434, label %431

431:                                              ; preds = %428
  %432 = load i32, i32* %429, align 4
  %433 = icmp ult i32 %403, %432
  br i1 %433, label %434, label %437

434:                                              ; preds = %431, %428
  %435 = getelementptr inbounds %"class.base::internal::flat_tree.378", %"class.base::internal::flat_tree.378"* %397, i64 0, i32 0
  %436 = call i32* @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE7emplaceIJS2_EEENS_11__wrap_iterIPS2_EENS7_IPKS2_EEDpOT_(%"class.std::__1::vector.72"* %435, i32* %429, i32* nonnull dereferenceable(4) %23) #17
  br label %437

437:                                              ; preds = %431, %434
  %438 = load i8, i8* %401, align 1
  %439 = icmp slt i8 %438, 0
  br i1 %439, label %440, label %443

440:                                              ; preds = %437
  %441 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %442 = load i8*, i8** %441, align 8
  call void @_ZdlPv(i8* %442) #18
  br label %443

443:                                              ; preds = %437, %440
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %399) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %398) #17
  br label %444

444:                                              ; preds = %391, %443
  %445 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 39, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %445, align 4
  %446 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 7
  %447 = load i8, i8* %446, align 1, !range !2
  %448 = icmp eq i8 %447, 0
  br i1 %448, label %532, label %449

449:                                              ; preds = %444
  %450 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30
  %451 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %451) #17
  %452 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %452) #17
  %453 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %454 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %453, i64 0, i32 1, i32 0
  store i8 20, i8* %454, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %452, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i64 20, i1 false) #17
  %455 = getelementptr inbounds i8, i8* %452, i64 20
  store i8 0, i8* %455, align 4
  %456 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %26) #17
  store i32 %456, i32* %25, align 4
  %457 = getelementptr inbounds %"class.base::internal::flat_tree.378", %"class.base::internal::flat_tree.378"* %450, i64 0, i32 0, i32 0, i32 0
  %458 = load i32*, i32** %457, align 8
  %459 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30, i32 0, i32 0, i32 1
  %460 = bitcast i32** %459 to i64*
  %461 = load i64, i64* %460, align 8
  %462 = ptrtoint i32* %458 to i64
  %463 = sub i64 %461, %462
  %464 = icmp eq i64 %463, 0
  %465 = inttoptr i64 %461 to i32*
  br i1 %464, label %481, label %466

466:                                              ; preds = %449
  %467 = ashr exact i64 %463, 2
  br label %468

468:                                              ; preds = %468, %466
  %469 = phi i32* [ %458, %466 ], [ %479, %468 ]
  %470 = phi i64 [ %467, %466 ], [ %478, %468 ]
  %471 = lshr i64 %470, 1
  %472 = getelementptr inbounds i32, i32* %469, i64 %471
  %473 = load i32, i32* %472, align 4
  %474 = icmp ult i32 %473, %456
  %475 = getelementptr inbounds i32, i32* %472, i64 1
  %476 = xor i64 %471, -1
  %477 = add i64 %470, %476
  %478 = select i1 %474, i64 %477, i64 %471
  %479 = select i1 %474, i32* %475, i32* %469
  %480 = icmp eq i64 %478, 0
  br i1 %480, label %481, label %468

481:                                              ; preds = %468, %449
  %482 = phi i32* [ %458, %449 ], [ %479, %468 ]
  %483 = icmp eq i32* %482, %465
  br i1 %483, label %487, label %484

484:                                              ; preds = %481
  %485 = load i32, i32* %482, align 4
  %486 = icmp ult i32 %456, %485
  br i1 %486, label %487, label %490

487:                                              ; preds = %484, %481
  %488 = getelementptr inbounds %"class.base::internal::flat_tree.378", %"class.base::internal::flat_tree.378"* %450, i64 0, i32 0
  %489 = call i32* @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE7emplaceIJS2_EEENS_11__wrap_iterIPS2_EENS7_IPKS2_EEDpOT_(%"class.std::__1::vector.72"* %488, i32* %482, i32* nonnull dereferenceable(4) %25) #17
  br label %490

490:                                              ; preds = %484, %487
  %491 = load i8, i8* %454, align 1
  %492 = icmp slt i8 %491, 0
  br i1 %492, label %493, label %496

493:                                              ; preds = %490
  %494 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %495 = load i8*, i8** %494, align 8
  call void @_ZdlPv(i8* %495) #18
  br label %496

496:                                              ; preds = %490, %493
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %452) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %451) #17
  %497 = load i32, i32* %86, align 8
  %498 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %498) #17
  %499 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %500 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %499, i64 0, i32 1, i32 0
  store i8 15, i8* %500, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %498, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i64 15, i1 false) #17
  %501 = getelementptr inbounds i8, i8* %498, i64 15
  store i8 0, i8* %501, align 1
  %502 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %27) #17
  %503 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  %504 = bitcast %"class.std::__1::vector.727"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %504) #17
  %505 = call i8* @_Znwm(i64 4) #18
  %506 = bitcast i8* %505 to i32*
  %507 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %4, i64 0, i32 0, i32 1
  %508 = bitcast %"class.std::__1::vector.727"* %4 to i8**
  store i8* %505, i8** %508, align 8
  %509 = getelementptr inbounds i8, i8* %505, i64 4
  %510 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %511 = bitcast i32** %510 to i8**
  store i8* %509, i8** %511, align 8
  %512 = bitcast i32** %507 to i64*
  store i32 -1, i32* %506, align 4
  %513 = ptrtoint i8* %509 to i64
  store i64 %513, i64* %512, align 8
  %514 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyIiEENS_6FutureIvEENS_6WindowENS_4AtomES4_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE(i32 %497, i32 %502, i32 6, %"class.std::__1::vector.727"* nonnull dereferenceable(24) %4, %"class.x11::Connection"* %503) #17
  %515 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %4, i64 0, i32 0, i32 0
  %516 = load i32*, i32** %515, align 8
  %517 = icmp eq i32* %516, null
  br i1 %517, label %521, label %518

518:                                              ; preds = %496
  %519 = ptrtoint i32* %516 to i64
  store i64 %519, i64* %512, align 8
  %520 = bitcast i32* %516 to i8*
  call void @_ZdlPv(i8* %520) #18
  br label %521

521:                                              ; preds = %496, %518
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %504) #17
  %522 = icmp eq %"class.x11::Connection::FutureImpl"* %514, null
  br i1 %522, label %525, label %523

523:                                              ; preds = %521
  %524 = bitcast %"class.x11::Connection::FutureImpl"* %514 to i8*
  call void @_ZdlPv(i8* %524) #18
  br label %525

525:                                              ; preds = %521, %523
  %526 = load i8, i8* %500, align 1
  %527 = icmp slt i8 %526, 0
  br i1 %527, label %528, label %531

528:                                              ; preds = %525
  %529 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %530 = load i8*, i8** %529, align 8
  call void @_ZdlPv(i8* %530) #18
  br label %531

531:                                              ; preds = %525, %528
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %498) #17
  br label %595

532:                                              ; preds = %444
  %533 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 10
  %534 = bitcast %"class.std::__1::basic_string"* %533 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %535 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %534, i64 0, i32 1, i32 0
  %536 = load i8, i8* %535, align 1
  %537 = icmp slt i8 %536, 0
  br i1 %537, label %538, label %541

538:                                              ; preds = %532
  %539 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %540 = load i64, i64* %539, align 8
  br label %543

541:                                              ; preds = %532
  %542 = zext i8 %536 to i64
  br label %543

543:                                              ; preds = %538, %541
  %544 = phi i64 [ %540, %538 ], [ %542, %541 ]
  %545 = icmp eq i64 %544, 0
  br i1 %545, label %595, label %546

546:                                              ; preds = %543
  %547 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %547) #17
  store i32 -1431655766, i32* %28, align 4
  %548 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %533, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %549 = load i8*, i8** %548, align 8
  %550 = bitcast %"class.std::__1::basic_string"* %533 to i8*
  %551 = select i1 %537, i8* %549, i8* %550
  %552 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %553 = load i64, i64* %552, align 8
  %554 = zext i8 %536 to i64
  %555 = select i1 %537, i64 %553, i64 %554
  %556 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %551, i64 %555, i32* nonnull %28) #17
  br i1 %556, label %557, label %594

557:                                              ; preds = %546
  %558 = load i32, i32* %86, align 8
  %559 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %559) #17
  %560 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %561 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %560, i64 0, i32 1, i32 0
  store i8 15, i8* %561, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %559, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i64 15, i1 false) #17
  %562 = getelementptr inbounds i8, i8* %559, i64 15
  store i8 0, i8* %562, align 1
  %563 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %29) #17
  %564 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  %565 = bitcast %"class.std::__1::vector.727"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %565) #17
  %566 = load i32, i32* %28, align 4
  %567 = call i8* @_Znwm(i64 4) #18
  %568 = bitcast i8* %567 to i32*
  %569 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %3, i64 0, i32 0, i32 1
  %570 = bitcast %"class.std::__1::vector.727"* %3 to i8**
  store i8* %567, i8** %570, align 8
  %571 = getelementptr inbounds i8, i8* %567, i64 4
  %572 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %573 = bitcast i32** %572 to i8**
  store i8* %571, i8** %573, align 8
  %574 = bitcast i32** %569 to i64*
  store i32 %566, i32* %568, align 4
  %575 = ptrtoint i8* %571 to i64
  store i64 %575, i64* %574, align 8
  %576 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyIiEENS_6FutureIvEENS_6WindowENS_4AtomES4_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE(i32 %558, i32 %563, i32 6, %"class.std::__1::vector.727"* nonnull dereferenceable(24) %3, %"class.x11::Connection"* %564) #17
  %577 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %3, i64 0, i32 0, i32 0
  %578 = load i32*, i32** %577, align 8
  %579 = icmp eq i32* %578, null
  br i1 %579, label %583, label %580

580:                                              ; preds = %557
  %581 = ptrtoint i32* %578 to i64
  store i64 %581, i64* %574, align 8
  %582 = bitcast i32* %578 to i8*
  call void @_ZdlPv(i8* %582) #18
  br label %583

583:                                              ; preds = %557, %580
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %565) #17
  %584 = icmp eq %"class.x11::Connection::FutureImpl"* %576, null
  br i1 %584, label %587, label %585

585:                                              ; preds = %583
  %586 = bitcast %"class.x11::Connection::FutureImpl"* %576 to i8*
  call void @_ZdlPv(i8* %586) #18
  br label %587

587:                                              ; preds = %583, %585
  %588 = load i8, i8* %561, align 1
  %589 = icmp slt i8 %588, 0
  br i1 %589, label %590, label %593

590:                                              ; preds = %587
  %591 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %592 = load i8*, i8** %591, align 8
  call void @_ZdlPv(i8* %592) #18
  br label %593

593:                                              ; preds = %587, %590
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %559) #17
  br label %594

594:                                              ; preds = %593, %546
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %547) #17
  br label %595

595:                                              ; preds = %543, %594, %531
  %596 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 18
  %597 = bitcast %"class.std::__1::basic_string"* %596 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %598 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %597, i64 0, i32 1, i32 0
  %599 = load i8, i8* %598, align 1
  %600 = icmp slt i8 %599, 0
  br i1 %600, label %601, label %604

601:                                              ; preds = %595
  %602 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %603 = load i64, i64* %602, align 8
  br label %606

604:                                              ; preds = %595
  %605 = zext i8 %599 to i64
  br label %606

606:                                              ; preds = %601, %604
  %607 = phi i64 [ %603, %601 ], [ %605, %604 ]
  %608 = icmp eq i64 %607, 0
  br i1 %608, label %609, label %623

609:                                              ; preds = %606
  %610 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 19
  %611 = bitcast %"class.std::__1::basic_string"* %610 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %612 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %611, i64 0, i32 1, i32 0
  %613 = load i8, i8* %612, align 1
  %614 = icmp slt i8 %613, 0
  br i1 %614, label %615, label %618

615:                                              ; preds = %609
  %616 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %617 = load i64, i64* %616, align 8
  br label %620

618:                                              ; preds = %609
  %619 = zext i8 %613 to i64
  br label %620

620:                                              ; preds = %615, %618
  %621 = phi i64 [ %617, %615 ], [ %619, %618 ]
  %622 = icmp eq i64 %621, 0
  br i1 %622, label %627, label %623

623:                                              ; preds = %620, %606
  %624 = load %"class.x11::Connection"*, %"class.x11::Connection"** %59, align 8
  %625 = load i32, i32* %86, align 8
  %626 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 19
  call void @_ZN2ui18SetWindowClassHintEPN3x1110ConnectionENS0_6WindowERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_(%"class.x11::Connection"* %624, i32 %625, %"class.std::__1::basic_string"* dereferenceable(24) %596, %"class.std::__1::basic_string"* dereferenceable(24) %626) #17
  br label %627

627:                                              ; preds = %623, %620
  %628 = load i8, i8* %43, align 1
  %629 = icmp slt i8 %628, 0
  br i1 %629, label %630, label %632

630:                                              ; preds = %627
  %631 = load i64, i64* %46, align 8
  br label %634

632:                                              ; preds = %627
  %633 = zext i8 %628 to i64
  br label %634

634:                                              ; preds = %630, %632
  %635 = phi i64 [ %631, %630 ], [ %633, %632 ]
  %636 = icmp eq i64 %635, 0
  br i1 %636, label %643, label %637

637:                                              ; preds = %634
  br i1 %629, label %638, label %641

638:                                              ; preds = %637
  %639 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %640 = load i8*, i8** %639, align 8
  br label %648

641:                                              ; preds = %637
  %642 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  br label %648

643:                                              ; preds = %634
  %644 = load i32, i32* %225, align 8
  %645 = icmp eq i32 %644, 5
  %646 = select i1 %645, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN2ui12_GLOBAL__N_120kX11WindowRoleBubbleE, i64 0, i64 0), i8* null
  %647 = icmp eq i32 %644, 1
  br i1 %647, label %651, label %648

648:                                              ; preds = %643, %641, %638
  %649 = phi i8* [ %646, %643 ], [ %640, %638 ], [ %642, %641 ]
  %650 = icmp eq i8* %649, null
  br i1 %650, label %689, label %651

651:                                              ; preds = %643, %648
  %652 = phi i8* [ %649, %648 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN2ui12_GLOBAL__N_119kX11WindowRolePopupE, i64 0, i64 0), %643 ]
  %653 = load i32, i32* %86, align 8
  %654 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %654) #17
  %655 = call i64 @strlen(i8* nonnull %652) #17
  %656 = icmp ugt i64 %655, -17
  br i1 %656, label %657, label %659

657:                                              ; preds = %651
  %658 = bitcast %"class.std::__1::basic_string"* %30 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %658) #19
  unreachable

659:                                              ; preds = %651
  %660 = icmp ult i64 %655, 23
  br i1 %660, label %670, label %661

661:                                              ; preds = %659
  %662 = add nuw i64 %655, 16
  %663 = and i64 %662, -16
  %664 = call i8* @_Znwm(i64 %663) #18
  %665 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %664, i8** %665, align 8
  %666 = or i64 %663, -9223372036854775808
  %667 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %666, i64* %667, align 8
  %668 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %655, i64* %668, align 8
  %669 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %675

670:                                              ; preds = %659
  %671 = trunc i64 %655 to i8
  %672 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %673 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %672, i64 0, i32 1, i32 0
  store i8 %671, i8* %673, align 1
  %674 = icmp eq i64 %655, 0
  br i1 %674, label %678, label %675

675:                                              ; preds = %670, %661
  %676 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %672, %670 ], [ %669, %661 ]
  %677 = phi i8* [ %654, %670 ], [ %664, %661 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %677, i8* align 1 %652, i64 %655, i1 false) #17
  br label %678

678:                                              ; preds = %670, %675
  %679 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %672, %670 ], [ %676, %675 ]
  %680 = phi i8* [ %654, %670 ], [ %677, %675 ]
  %681 = getelementptr inbounds i8, i8* %680, i64 %655
  store i8 0, i8* %681, align 1
  call void @_ZN2ui13SetWindowRoleEN3x116WindowERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i32 %653, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %30) #17
  %682 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %679, i64 0, i32 1, i32 0
  %683 = load i8, i8* %682, align 1
  %684 = icmp slt i8 %683, 0
  br i1 %684, label %685, label %688

685:                                              ; preds = %678
  %686 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %687 = load i8*, i8** %686, align 8
  call void @_ZdlPv(i8* %687) #18
  br label %688

688:                                              ; preds = %678, %685
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %654) #17
  br label %689

689:                                              ; preds = %648, %688
  %690 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 8
  %691 = load i8, i8* %690, align 8, !range !2
  %692 = icmp eq i8 %691, 0
  br i1 %692, label %695, label %693

693:                                              ; preds = %689
  %694 = load i32, i32* %86, align 8
  call void @_ZN2ui36SetHideTitlebarWhenMaximizedPropertyEN3x116WindowENS_25HideTitlebarWhenMaximizedE(i32 %694, i32 1) #17
  br label %695

695:                                              ; preds = %689, %693
  %696 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 13
  %697 = load i8, i8* %696, align 4, !range !2
  %698 = icmp eq i8 %697, 0
  br i1 %698, label %735, label %699

699:                                              ; preds = %695
  %700 = load i32, i32* %86, align 8
  %701 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %701) #17
  %702 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %703 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %702, i64 0, i32 1, i32 0
  store i8 18, i8* %703, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %701, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i64 0, i64 0), i64 18, i1 false) #17
  %704 = getelementptr inbounds i8, i8* %701, i64 18
  store i8 0, i8* %704, align 2
  %705 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %31) #17
  %706 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %706) #17
  %707 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %708 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %707, i64 0, i32 1, i32 0
  store i8 11, i8* %708, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %706, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), i64 11, i1 false) #17
  %709 = getelementptr inbounds i8, i8* %706, i64 11
  store i8 0, i8* %709, align 1
  %710 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %32) #17
  %711 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %711) #17
  %712 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %713 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %712, i64 0, i32 1, i32 0
  store i8 4, i8* %713, align 1
  %714 = bitcast %"class.std::__1::basic_string"* %33 to i32*
  store i32 1802658148, i32* %714, align 8
  %715 = getelementptr inbounds i8, i8* %711, i64 4
  store i8 0, i8* %715, align 4
  %716 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  call void @_ZN3x1117SetStringPropertyENS_6WindowENS_4AtomES1_RKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS_10ConnectionE(i32 %700, i32 %705, i32 %710, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %33, %"class.x11::Connection"* %716) #17
  %717 = load i8, i8* %713, align 1
  %718 = icmp slt i8 %717, 0
  br i1 %718, label %719, label %722

719:                                              ; preds = %699
  %720 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %721 = load i8*, i8** %720, align 8
  call void @_ZdlPv(i8* %721) #18
  br label %722

722:                                              ; preds = %699, %719
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %711) #17
  %723 = load i8, i8* %708, align 1
  %724 = icmp slt i8 %723, 0
  br i1 %724, label %725, label %728

725:                                              ; preds = %722
  %726 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %727 = load i8*, i8** %726, align 8
  call void @_ZdlPv(i8* %727) #18
  br label %728

728:                                              ; preds = %722, %725
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %706) #17
  %729 = load i8, i8* %703, align 1
  %730 = icmp slt i8 %729, 0
  br i1 %730, label %731, label %734

731:                                              ; preds = %728
  %732 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %733 = load i8*, i8** %732, align 8
  call void @_ZdlPv(i8* %733) #18
  br label %734

734:                                              ; preds = %728, %731
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %701) #17
  br label %735

735:                                              ; preds = %695, %734
  %736 = bitcast %"class.ui::X11Window"* %0 to i1 (%"class.ui::X11Window"*)***
  %737 = load i1 (%"class.ui::X11Window"*)**, i1 (%"class.ui::X11Window"*)*** %736, align 8
  %738 = getelementptr inbounds i1 (%"class.ui::X11Window"*)*, i1 (%"class.ui::X11Window"*)** %737, i64 49
  %739 = load i1 (%"class.ui::X11Window"*)*, i1 (%"class.ui::X11Window"*)** %738, align 8
  %740 = call zeroext i1 %739(%"class.ui::X11Window"* %0) #17
  br i1 %740, label %741, label %817

741:                                              ; preds = %735
  %742 = load %"class.x11::Connection"*, %"class.x11::Connection"** %59, align 8
  %743 = call i32 @_ZN3x1110Connection14GenerateIdImplEv(%"class.x11::Connection"* %742) #17
  %744 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 51
  store i32 %743, i32* %744, align 8
  %745 = bitcast %"class.x11::Connection"** %59 to i8**
  %746 = load i8*, i8** %745, align 8
  %747 = getelementptr inbounds i8, i8* %746, i64 136
  %748 = bitcast i8* %747 to %"class.x11::Sync"**
  %749 = load %"class.x11::Sync"*, %"class.x11::Sync"** %748, align 8
  %750 = bitcast %"struct.x11::Sync::CreateCounterRequest"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %750) #17
  %751 = getelementptr inbounds %"struct.x11::Sync::CreateCounterRequest", %"struct.x11::Sync::CreateCounterRequest"* %34, i64 0, i32 0
  store i32 %743, i32* %751, align 4
  %752 = getelementptr inbounds %"struct.x11::Sync::CreateCounterRequest", %"struct.x11::Sync::CreateCounterRequest"* %34, i64 0, i32 1, i32 0
  store i32 0, i32* %752, align 4
  %753 = getelementptr inbounds %"struct.x11::Sync::CreateCounterRequest", %"struct.x11::Sync::CreateCounterRequest"* %34, i64 0, i32 1, i32 1
  store i32 0, i32* %753, align 4
  %754 = call %"class.x11::Connection::FutureImpl"* @_ZN3x114Sync13CreateCounterERKNS0_20CreateCounterRequestE(%"class.x11::Sync"* %749, %"struct.x11::Sync::CreateCounterRequest"* nonnull dereferenceable(12) %34) #17
  %755 = icmp eq %"class.x11::Connection::FutureImpl"* %754, null
  br i1 %755, label %758, label %756

756:                                              ; preds = %741
  %757 = bitcast %"class.x11::Connection::FutureImpl"* %754 to i8*
  call void @_ZdlPv(i8* %757) #18
  br label %758

758:                                              ; preds = %741, %756
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %750) #17
  %759 = load %"class.x11::Connection"*, %"class.x11::Connection"** %59, align 8
  %760 = call i32 @_ZN3x1110Connection14GenerateIdImplEv(%"class.x11::Connection"* %759) #17
  %761 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 52
  store i32 %760, i32* %761, align 4
  %762 = load i8*, i8** %745, align 8
  %763 = getelementptr inbounds i8, i8* %762, i64 136
  %764 = bitcast i8* %763 to %"class.x11::Sync"**
  %765 = load %"class.x11::Sync"*, %"class.x11::Sync"** %764, align 8
  %766 = bitcast %"struct.x11::Sync::CreateCounterRequest"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %766) #17
  %767 = getelementptr inbounds %"struct.x11::Sync::CreateCounterRequest", %"struct.x11::Sync::CreateCounterRequest"* %35, i64 0, i32 0
  store i32 %760, i32* %767, align 4
  %768 = getelementptr inbounds %"struct.x11::Sync::CreateCounterRequest", %"struct.x11::Sync::CreateCounterRequest"* %35, i64 0, i32 1, i32 0
  store i32 0, i32* %768, align 4
  %769 = getelementptr inbounds %"struct.x11::Sync::CreateCounterRequest", %"struct.x11::Sync::CreateCounterRequest"* %35, i64 0, i32 1, i32 1
  store i32 0, i32* %769, align 4
  %770 = call %"class.x11::Connection::FutureImpl"* @_ZN3x114Sync13CreateCounterERKNS0_20CreateCounterRequestE(%"class.x11::Sync"* %765, %"struct.x11::Sync::CreateCounterRequest"* nonnull dereferenceable(12) %35) #17
  %771 = icmp eq %"class.x11::Connection::FutureImpl"* %770, null
  br i1 %771, label %774, label %772

772:                                              ; preds = %758
  %773 = bitcast %"class.x11::Connection::FutureImpl"* %770 to i8*
  call void @_ZdlPv(i8* %773) #18
  br label %774

774:                                              ; preds = %758, %772
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %766) #17
  %775 = bitcast %"class.std::__1::vector.493"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %775) #17
  %776 = getelementptr inbounds %"class.std::__1::vector.493", %"class.std::__1::vector.493"* %36, i64 0, i32 0, i32 0
  %777 = getelementptr inbounds %"class.std::__1::vector.493", %"class.std::__1::vector.493"* %36, i64 0, i32 0, i32 1
  %778 = getelementptr inbounds %"class.std::__1::vector.493", %"class.std::__1::vector.493"* %36, i64 0, i32 0, i32 2, i32 0, i32 0
  %779 = load i32, i32* %744, align 8
  %780 = load i32, i32* %761, align 4
  %781 = call i8* @_Znwm(i64 8) #18
  %782 = bitcast i8* %781 to i32*
  %783 = bitcast %"class.std::__1::vector.493"* %36 to i8**
  store i8* %781, i8** %783, align 8
  %784 = getelementptr inbounds i8, i8* %781, i64 8
  %785 = bitcast i32** %778 to i8**
  store i8* %784, i8** %785, align 8
  %786 = bitcast i32** %777 to i64*
  store i32 %779, i32* %782, align 4
  %787 = getelementptr inbounds i8, i8* %781, i64 4
  %788 = bitcast i8* %787 to i32*
  store i32 %780, i32* %788, align 4
  %789 = ptrtoint i8* %784 to i64
  store i64 %789, i64* %786, align 8
  %790 = load i32, i32* %86, align 8
  %791 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %791) #17
  %792 = call i8* @_Znwm(i64 32) #18
  %793 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %792, i8** %793, align 8
  %794 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %795 = bitcast i64* %794 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %795, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %792, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i64 0, i64 0), i64 28, i1 false) #17
  %796 = getelementptr inbounds i8, i8* %792, i64 28
  store i8 0, i8* %796, align 1
  %797 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %37) #17
  %798 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  %799 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyINS_4Sync7CounterEEENS_6FutureIvEENS_6WindowENS_4AtomES6_RKNSt3__16vectorIT_NS7_9allocatorIS9_EEEEPNS_10ConnectionE(i32 %790, i32 %797, i32 6, %"class.std::__1::vector.493"* nonnull dereferenceable(24) %36, %"class.x11::Connection"* %798)
  %800 = icmp eq %"class.x11::Connection::FutureImpl"* %799, null
  br i1 %800, label %803, label %801

801:                                              ; preds = %774
  %802 = bitcast %"class.x11::Connection::FutureImpl"* %799 to i8*
  call void @_ZdlPv(i8* %802) #18
  br label %803

803:                                              ; preds = %774, %801
  %804 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %805 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %804, i64 0, i32 1, i32 0
  %806 = load i8, i8* %805, align 1
  %807 = icmp slt i8 %806, 0
  br i1 %807, label %808, label %810

808:                                              ; preds = %803
  %809 = load i8*, i8** %793, align 8
  call void @_ZdlPv(i8* %809) #18
  br label %810

810:                                              ; preds = %803, %808
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %791) #17
  %811 = load i32*, i32** %776, align 8
  %812 = icmp eq i32* %811, null
  br i1 %812, label %816, label %813

813:                                              ; preds = %810
  %814 = ptrtoint i32* %811 to i64
  store i64 %814, i64* %786, align 8
  %815 = bitcast i32* %811 to i8*
  call void @_ZdlPv(i8* %815) #18
  br label %816

816:                                              ; preds = %810, %813
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %775) #17
  br label %817

817:                                              ; preds = %816, %735
  %818 = load i32, i32* %86, align 8
  %819 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %819) #17
  %820 = call i8* @_Znwm(i64 32) #18
  %821 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %820, i8** %821, align 8
  %822 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %823 = bitcast i64* %822 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %823, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %820, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.18, i64 0, i64 0), i64 25, i1 false) #17
  %824 = getelementptr inbounds i8, i8* %820, i64 25
  store i8 0, i8* %824, align 1
  %825 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %38) #17
  %826 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  %827 = bitcast %"class.std::__1::vector.553"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %827) #17
  %828 = call i8* @_Znwm(i64 4) #18
  %829 = bitcast i8* %828 to i32*
  %830 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %7, i64 0, i32 0, i32 1
  %831 = bitcast %"class.std::__1::vector.553"* %7 to i8**
  store i8* %828, i8** %831, align 8
  %832 = getelementptr inbounds i8, i8* %828, i64 4
  %833 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %834 = bitcast i32** %833 to i8**
  store i8* %832, i8** %834, align 8
  %835 = bitcast i32** %830 to i64*
  store i32 2, i32* %829, align 4
  %836 = ptrtoint i8* %832 to i64
  store i64 %836, i64* %835, align 8
  %837 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyIjEENS_6FutureIvEENS_6WindowENS_4AtomES4_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE(i32 %818, i32 %825, i32 6, %"class.std::__1::vector.553"* nonnull dereferenceable(24) %7, %"class.x11::Connection"* %826) #17
  %838 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %7, i64 0, i32 0, i32 0
  %839 = load i32*, i32** %838, align 8
  %840 = icmp eq i32* %839, null
  br i1 %840, label %844, label %841

841:                                              ; preds = %817
  %842 = ptrtoint i32* %839 to i64
  store i64 %842, i64* %835, align 8
  %843 = bitcast i32* %839 to i8*
  call void @_ZdlPv(i8* %843) #18
  br label %844

844:                                              ; preds = %817, %841
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %827) #17
  %845 = icmp eq %"class.x11::Connection::FutureImpl"* %837, null
  br i1 %845, label %848, label %846

846:                                              ; preds = %844
  %847 = bitcast %"class.x11::Connection::FutureImpl"* %837 to i8*
  call void @_ZdlPv(i8* %847) #18
  br label %848

848:                                              ; preds = %844, %846
  %849 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %850 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %849, i64 0, i32 1, i32 0
  %851 = load i8, i8* %850, align 1
  %852 = icmp slt i8 %851, 0
  br i1 %852, label %853, label %855

853:                                              ; preds = %848
  %854 = load i8*, i8** %821, align 8
  call void @_ZdlPv(i8* %854) #18
  br label %855

855:                                              ; preds = %848, %853
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %819) #17
  %856 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 15
  %857 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %856, align 8
  %858 = icmp eq %"class.gfx::ImageSkia"* %857, null
  br i1 %858, label %866, label %859

859:                                              ; preds = %855
  %860 = bitcast %"class.gfx::ImageSkia"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %860) #17
  call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* nonnull %39) #17
  %861 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %856, align 8
  %862 = bitcast %"class.ui::X11Window"* %0 to void (%"class.ui::X11Window"*, %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"*)***
  %863 = load void (%"class.ui::X11Window"*, %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"*)**, void (%"class.ui::X11Window"*, %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"*)*** %862, align 8
  %864 = getelementptr inbounds void (%"class.ui::X11Window"*, %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"*)*, void (%"class.ui::X11Window"*, %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"*)** %863, i64 28
  %865 = load void (%"class.ui::X11Window"*, %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"*)*, void (%"class.ui::X11Window"*, %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"*)** %864, align 8
  call void %865(%"class.ui::X11Window"* %0, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %39, %"class.gfx::ImageSkia"* dereferenceable(8) %861) #17
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %39) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %860) #17
  br label %866

866:                                              ; preds = %855, %859
  %867 = load i32, i32* %225, align 8
  %868 = icmp eq i32 %867, 4
  br i1 %868, label %869, label %874

869:                                              ; preds = %866
  %870 = bitcast %"class.ui::X11Window"* %0 to void (%"class.ui::X11Window"*, float)***
  %871 = load void (%"class.ui::X11Window"*, float)**, void (%"class.ui::X11Window"*, float)*** %870, align 8
  %872 = getelementptr inbounds void (%"class.ui::X11Window"*, float)*, void (%"class.ui::X11Window"*, float)** %871, i64 40
  %873 = load void (%"class.ui::X11Window"*, float)*, void (%"class.ui::X11Window"*, float)** %872, align 8
  call void %873(%"class.ui::X11Window"* %0, float 7.500000e-01) #17
  br label %874

874:                                              ; preds = %869, %866
  %875 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 6
  call void @_ZN2ui16SetWmDragHandlerEPNS_14PlatformWindowEPNS_13WmDragHandlerE(%"class.ui::PlatformWindow"* %82, %"class.ui::WmDragHandler"* %875) #17
  %876 = load i32, i32* %86, align 8
  %877 = call i8* @_Znwm(i64 336) #18
  %878 = bitcast i8* %877 to %"class.ui::XDragDropClient"*
  %879 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 7
  %880 = select i1 %67, %"class.ui::XDragDropClient::Delegate"* null, %"class.ui::XDragDropClient::Delegate"* %879
  call void @_ZN2ui15XDragDropClientC1EPNS0_8DelegateEN3x116WindowE(%"class.ui::XDragDropClient"* nonnull %878, %"class.ui::XDragDropClient::Delegate"* %880, i32 %876) #17
  %881 = ptrtoint i8* %877 to i64
  %882 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 21
  %883 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %882, i64 0, i32 0, i32 0, i32 0
  %884 = load %"class.ui::XDragDropClient"*, %"class.ui::XDragDropClient"** %883, align 8
  %885 = bitcast %"class.std::__1::unique_ptr.55"* %882 to i64*
  store i64 %881, i64* %885, align 8
  %886 = icmp eq %"class.ui::XDragDropClient"* %884, null
  br i1 %886, label %892, label %887

887:                                              ; preds = %874
  %888 = bitcast %"class.ui::XDragDropClient"* %884 to void (%"class.ui::XDragDropClient"*)***
  %889 = load void (%"class.ui::XDragDropClient"*)**, void (%"class.ui::XDragDropClient"*)*** %888, align 8
  %890 = getelementptr inbounds void (%"class.ui::XDragDropClient"*)*, void (%"class.ui::XDragDropClient"*)** %889, i64 1
  %891 = load void (%"class.ui::XDragDropClient"*)*, void (%"class.ui::XDragDropClient"*)** %890, align 8
  call void %891(%"class.ui::XDragDropClient"* nonnull %884) #17
  br label %892

892:                                              ; preds = %887, %874
  %893 = load i32*, i32** %111, align 8
  %894 = icmp eq i32* %893, null
  br i1 %894, label %898, label %895

895:                                              ; preds = %892
  %896 = ptrtoint i32* %893 to i64
  store i64 %896, i64* %136, align 8
  %897 = bitcast i32* %893 to i8*
  call void @_ZdlPv(i8* %897) #18
  br label %898

898:                                              ; preds = %892, %895
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #17
  br label %899

899:                                              ; preds = %898, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window13CreateXWindowERKNS_28PlatformWindowInitPropertiesE(%"class.ui::X11Window"*, %"struct.ui::PlatformWindowInitProperties"* dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.829", align 8
  %4 = alloca %"class.gfx::Rect", align 8
  %5 = alloca %"struct.x11::CreateWindowRequest", align 4
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.x11::Future.711", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  %19 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 1
  %20 = bitcast %"class.gfx::Rect"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 4 %20, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1
  %22 = call i64 @_ZN2ui9X11Window20AdjustSizeForDisplayERKN3gfx4SizeE(%"class.ui::X11Window"* undef, %"class.gfx::Size"* dereferenceable(8) %21)
  %23 = trunc i64 %22 to i32
  %24 = lshr i64 %22, 32
  %25 = trunc i64 %24 to i32
  %26 = load i32, i32* %15, align 8
  %27 = icmp sgt i32 %26, 0
  %28 = icmp sgt i32 %23, 0
  %29 = and i1 %28, %27
  %30 = sub nuw nsw i32 2147483647, %26
  %31 = icmp ult i32 %30, %23
  %32 = and i1 %31, %29
  %33 = select i1 %32, i32 %30, i32 %23
  %34 = icmp sgt i32 %33, 0
  %35 = select i1 %34, i32 %33, i32 0
  store i32 %35, i32* %17, align 8
  %36 = load i32, i32* %16, align 4
  %37 = icmp sgt i32 %36, 0
  %38 = icmp sgt i32 %25, 0
  %39 = and i1 %38, %37
  %40 = sub nuw nsw i32 2147483647, %36
  %41 = icmp ult i32 %40, %25
  %42 = and i1 %41, %39
  %43 = select i1 %42, i32 %40, i32 %25
  %44 = icmp sgt i32 %43, 0
  %45 = select i1 %44, i32 %43, i32 0
  store i32 %45, i32* %18, align 4
  %46 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 20
  %47 = load %"class.ui::X11ExtensionDelegate"*, %"class.ui::X11ExtensionDelegate"** %46, align 8
  %48 = icmp eq %"class.ui::X11ExtensionDelegate"* %47, null
  br i1 %48, label %60, label %49

49:                                               ; preds = %2
  %50 = bitcast %"class.ui::X11Window"* %0 to i1 (%"class.ui::X11Window"*)***
  %51 = load i1 (%"class.ui::X11Window"*)**, i1 (%"class.ui::X11Window"*)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.ui::X11Window"*)*, i1 (%"class.ui::X11Window"*)** %51, i64 50
  %53 = load i1 (%"class.ui::X11Window"*)*, i1 (%"class.ui::X11Window"*)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.ui::X11Window"* %0) #17
  %55 = bitcast %"class.ui::X11ExtensionDelegate"* %47 to i1 (%"class.ui::X11ExtensionDelegate"*, i1)***
  %56 = load i1 (%"class.ui::X11ExtensionDelegate"*, i1)**, i1 (%"class.ui::X11ExtensionDelegate"*, i1)*** %55, align 8
  %57 = getelementptr inbounds i1 (%"class.ui::X11ExtensionDelegate"*, i1)*, i1 (%"class.ui::X11ExtensionDelegate"*, i1)** %56, i64 2
  %58 = load i1 (%"class.ui::X11ExtensionDelegate"*, i1)*, i1 (%"class.ui::X11ExtensionDelegate"*, i1)** %57, align 8
  %59 = tail call zeroext i1 %58(%"class.ui::X11ExtensionDelegate"* nonnull %47, i1 zeroext %54) #17
  br label %60

60:                                               ; preds = %2, %49
  %61 = phi i1 [ false, %2 ], [ %59, %49 ]
  %62 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 11
  %63 = bitcast %"class.ui::WorkspaceExtensionDelegate"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 13
  %66 = bitcast %"class.ui::WorkspaceExtensionDelegate"** %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = bitcast %"class.ui::X11ExtensionDelegate"** %46 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 14
  %70 = bitcast %"class.ui::X11ExtensionDelegate"** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = tail call %"class.ui::X11MenuRegistrar"* @_ZN2ui16X11MenuRegistrar3GetEv() #17
  %72 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 4
  %73 = load i8, i8* %72, align 4, !range !2
  %74 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 31
  store i8 %73, i8* %74, align 8
  %75 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %75) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %75, i8 -86, i64 152, i1 false)
  store i8 0, i8* %75, align 4
  %76 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 1
  %77 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 8
  %78 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %78, align 4
  %79 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %79, align 4
  %80 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %80, align 4
  %81 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %82, align 4
  %83 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %83, align 4
  %84 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %84, align 4
  %85 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %85, align 4
  %86 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %86, align 4
  %87 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %87, align 4
  %88 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %88, align 4
  %89 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %89, align 4
  %90 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %90, align 4
  %91 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %91, align 4
  %92 = bitcast i32* %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %92, i8 0, i64 18, i1 false) #17
  %93 = bitcast i32* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %93, i8 0, i64 9, i1 false) #17
  %94 = bitcast i8* %81 to i64*
  store i64 4294967297, i64* %94, align 4
  %95 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %96 = load i8, i8* %95, align 4, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %60
  %99 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %106

100:                                              ; preds = %60
  %101 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %102 = load %"class.x11::Connection"*, %"class.x11::Connection"** %101, align 8
  %103 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %102, i64 0, i32 11
  %104 = load %"struct.x11::Screen"*, %"struct.x11::Screen"** %103, align 8
  %105 = getelementptr inbounds %"struct.x11::Screen", %"struct.x11::Screen"* %104, i64 0, i32 2
  br label %106

106:                                              ; preds = %100, %98
  %107 = phi i32* [ %99, %98 ], [ %105, %100 ]
  %108 = load i32, i32* %107, align 4
  %109 = bitcast i8* %78 to i64*
  %110 = zext i32 %108 to i64
  %111 = shl nuw i64 %110, 32
  %112 = or i64 %111, 1
  store i64 %112, i64* %109, align 4
  %113 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = add i32 %114, -1
  %116 = icmp ult i32 %115, 4
  br i1 %116, label %117, label %119

117:                                              ; preds = %106
  %118 = bitcast i8* %86 to i64*
  store i64 4294967297, i64* %118, align 4
  br label %119

119:                                              ; preds = %106, %117
  %120 = phi i8 [ 0, %106 ], [ 1, %117 ]
  %121 = icmp eq i8 %73, 0
  %122 = or i1 %61, %121
  br i1 %122, label %123, label %125

123:                                              ; preds = %119
  %124 = bitcast i8* %86 to i64*
  store i64 4294967297, i64* %124, align 4
  br label %125

125:                                              ; preds = %119, %123
  %126 = phi i8 [ %120, %119 ], [ 1, %123 ]
  %127 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 32
  store i8 %126, i8* %127, align 1
  %128 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 3
  %129 = load i32, i32* %128, align 8
  switch i32 %129, label %134 [
    i32 0, label %131
    i32 2, label %130
  ]

130:                                              ; preds = %125
  br label %134

131:                                              ; preds = %125
  %132 = load i32, i32* %113, align 8
  %133 = icmp eq i32 %132, 4
  br label %134

134:                                              ; preds = %131, %125, %130
  %135 = phi i1 [ %133, %131 ], [ true, %130 ], [ false, %125 ]
  %136 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 17
  %137 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2ui21kStatusIconWmRoleNameE, i64 0, i64 0)) #17
  %138 = bitcast %"class.std::__1::basic_string"* %136 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  %140 = load i8, i8* %139, align 1
  %141 = icmp slt i8 %140, 0
  %142 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %143 = load i64, i64* %142, align 8
  %144 = zext i8 %140 to i64
  %145 = select i1 %141, i64 %143, i64 %144
  %146 = icmp eq i64 %137, %145
  br i1 %146, label %147, label %239

147:                                              ; preds = %134
  %148 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %136, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2ui21kStatusIconWmRoleNameE, i64 0, i64 0), i64 %137) #17
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %239

150:                                              ; preds = %147
  %151 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %151) #17
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %154 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %153) #17
  %155 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %156 = load %"class.x11::Connection"*, %"class.x11::Connection"** %155, align 8
  %157 = tail call i32 @_ZNK3x1110Connection15DefaultScreenIdEv(%"class.x11::Connection"* %156) #17
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* nonnull sret %7, i32 %157) #17
  %158 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %7, i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29, i64 0, i64 0)) #17, !noalias !3
  %159 = bitcast %"class.std::__1::basic_string"* %158 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %151, i8* align 8 %159, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %159, i8 0, i64 24, i1 false) #17, !noalias !3
  %160 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %150
  %165 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load i8*, i8** %165, align 8
  call void @_ZdlPv(i8* %166) #18
  br label %167

167:                                              ; preds = %150, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %153) #17
  %168 = bitcast %"class.x11::Future.711"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168) #17
  %169 = getelementptr inbounds %"class.x11::Future.711", %"class.x11::Future.711"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %170 = bitcast %"class.x11::Connection"** %155 to %"class.x11::XProto"**
  %171 = load %"class.x11::XProto"*, %"class.x11::XProto"** %170, align 8
  %172 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %172) #17
  %173 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #17
  store i32 %173, i32* %9, align 4
  %174 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto17GetSelectionOwnerERKNS_4AtomE(%"class.x11::XProto"* %171, i32* nonnull dereferenceable(4) %9) #17
  store %"class.x11::Connection::FutureImpl"* %174, %"class.x11::Connection::FutureImpl"** %169, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %172) #17
  %175 = call { %"struct.x11::GetSelectionOwnerReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_22GetSelectionOwnerReplyEE4SyncEv(%"class.x11::Future.711"* nonnull %8)
  %176 = extractvalue { %"struct.x11::GetSelectionOwnerReply"*, %"class.x11::Error"* } %175, 0
  %177 = extractvalue { %"struct.x11::GetSelectionOwnerReply"*, %"class.x11::Error"* } %175, 1
  %178 = icmp eq %"struct.x11::GetSelectionOwnerReply"* %176, null
  br i1 %178, label %216, label %179

179:                                              ; preds = %167
  %180 = getelementptr inbounds %"struct.x11::GetSelectionOwnerReply", %"struct.x11::GetSelectionOwnerReply"* %176, i64 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %182) #17
  %183 = call i8* @_Znwm(i64 32) #18
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %183, i8** %184, align 8
  %185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %186 = bitcast i64* %185 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %186, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %183, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30, i64 0, i64 0), i64 23, i1 false) #17
  %187 = getelementptr inbounds i8, i8* %183, i64 23
  store i8 0, i8* %187, align 1
  %188 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #17
  %189 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  %190 = bitcast %"class.std::__1::vector.829"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %190) #17
  %191 = getelementptr inbounds %"class.std::__1::vector.829", %"class.std::__1::vector.829"* %3, i64 0, i32 0, i32 0
  %192 = getelementptr inbounds %"class.std::__1::vector.829", %"class.std::__1::vector.829"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %190, i8 0, i64 24, i1 false) #17
  %193 = call zeroext i1 @_ZN3x1116GetArrayPropertyINS_8VisualIdEEEbNS_6WindowENS_4AtomEPNSt3__16vectorIT_NS4_9allocatorIS6_EEEEPS3_mPNS_10ConnectionE(i32 %181, i32 %188, %"class.std::__1::vector.829"* nonnull %3, i32* null, i64 1, %"class.x11::Connection"* %189) #17
  %194 = load i32*, i32** %191, align 8
  %195 = xor i1 %193, true
  %196 = load i32*, i32** %192, align 8
  %197 = icmp eq i32* %194, %196
  %198 = or i1 %197, %195
  br i1 %198, label %202, label %199

199:                                              ; preds = %179
  %200 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 37
  %201 = load i32, i32* %194, align 4
  store i32 %201, i32* %200, align 4
  br label %202

202:                                              ; preds = %199, %179
  %203 = icmp eq i32* %194, null
  br i1 %203, label %208, label %204

204:                                              ; preds = %202
  %205 = ptrtoint i32* %194 to i64
  %206 = bitcast i32** %192 to i64*
  store i64 %205, i64* %206, align 8
  %207 = bitcast i32* %194 to i8*
  call void @_ZdlPv(i8* %207) #18
  br label %208

208:                                              ; preds = %202, %204
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %190) #17
  %209 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %209, i64 0, i32 1, i32 0
  %211 = load i8, i8* %210, align 1
  %212 = icmp slt i8 %211, 0
  br i1 %212, label %213, label %215

213:                                              ; preds = %208
  %214 = load i8*, i8** %184, align 8
  call void @_ZdlPv(i8* %214) #18
  br label %215

215:                                              ; preds = %208, %213
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #17
  br label %216

216:                                              ; preds = %167, %215
  %217 = icmp eq %"class.x11::Error"* %177, null
  br i1 %217, label %223, label %218

218:                                              ; preds = %216
  %219 = bitcast %"class.x11::Error"* %177 to void (%"class.x11::Error"*)***
  %220 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %219, align 8
  %221 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %220, i64 1
  %222 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %221, align 8
  call void %222(%"class.x11::Error"* nonnull %177) #17
  br label %223

223:                                              ; preds = %218, %216
  br i1 %178, label %226, label %224

224:                                              ; preds = %223
  %225 = bitcast %"struct.x11::GetSelectionOwnerReply"* %176 to i8*
  call void @_ZdlPv(i8* %225) #18
  br label %226

226:                                              ; preds = %223, %224
  %227 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %169, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %169, align 8
  %228 = icmp eq %"class.x11::Connection::FutureImpl"* %227, null
  br i1 %228, label %231, label %229

229:                                              ; preds = %226
  %230 = bitcast %"class.x11::Connection::FutureImpl"* %227 to i8*
  call void @_ZdlPv(i8* %230) #18
  br label %231

231:                                              ; preds = %226, %229
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #17
  %232 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %233 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %232, i64 0, i32 1, i32 0
  %234 = load i8, i8* %233, align 1
  %235 = icmp slt i8 %234, 0
  br i1 %235, label %236, label %238

236:                                              ; preds = %231
  %237 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %237) #18
  br label %238

238:                                              ; preds = %231, %236
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %151) #17
  br label %239

239:                                              ; preds = %134, %238, %147
  %240 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %240) #17
  %241 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 37
  %242 = load i32, i32* %241, align 4
  store i32 %242, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #17
  store i8 0, i8* %12, align 1
  %243 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %243) #17
  store i32 0, i32* %13, align 4
  %244 = call %"class.ui::XVisualManager"* @_ZN2ui14XVisualManager11GetInstanceEv() #17
  %245 = load i32, i32* %241, align 4
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %250, label %247

247:                                              ; preds = %239
  %248 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 38
  %249 = call zeroext i1 @_ZN2ui14XVisualManager13GetVisualInfoEN3x118VisualIdEPhPNS1_8ColorMapEPb(%"class.ui::XVisualManager"* %244, i32 %245, i8* nonnull %12, i32* nonnull %13, i8* %248) #17
  br i1 %249, label %252, label %250

250:                                              ; preds = %247, %239
  %251 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 38
  call void @_ZN2ui14XVisualManager21ChooseVisualForWindowEbPN3x118VisualIdEPhPNS1_8ColorMapEPb(%"class.ui::XVisualManager"* %244, i1 zeroext %135, i32* nonnull %11, i8* nonnull %12, i32* nonnull %13, i8* %251) #17
  br label %252

252:                                              ; preds = %250, %247
  %253 = load i8, i8* %80, align 4, !range !2
  %254 = icmp eq i8 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %252
  store i8 1, i8* %80, align 4
  br label %256

256:                                              ; preds = %252, %255
  %257 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 0, i32* %257, align 4
  %258 = icmp sgt i32 %35, 1
  %259 = select i1 %258, i32 %33, i32 1
  %260 = icmp sgt i32 %45, 1
  %261 = select i1 %260, i32 %43, i32 1
  %262 = bitcast %"class.gfx::Rect"* %4 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = trunc i64 %263 to i32
  %265 = icmp sgt i32 %264, 0
  %266 = sub nuw nsw i32 2147483647, %264
  %267 = icmp ult i32 %266, %259
  %268 = and i1 %265, %267
  %269 = select i1 %268, i32 %266, i32 %259
  %270 = icmp ult i32 %40, %261
  %271 = and i1 %37, %270
  %272 = select i1 %271, i32 %40, i32 %261
  %273 = icmp sgt i32 %269, 0
  %274 = select i1 %273, i32 %269, i32 0
  %275 = icmp sgt i32 %272, 0
  %276 = select i1 %275, i32 %272, i32 0
  %277 = zext i32 %276 to i64
  %278 = shl nuw nsw i64 %277, 32
  %279 = zext i32 %274 to i64
  %280 = or i64 %278, %279
  %281 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36
  %282 = bitcast %"class.gfx::Rect"* %281 to i64*
  store i64 %263, i64* %282, align 4
  %283 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 1
  %284 = bitcast %"class.gfx::Size"* %283 to i64*
  store i64 %280, i64* %284, align 4
  %285 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 27
  %286 = load i32, i32* %285, align 4
  %287 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 2
  store i32 %286, i32* %287, align 4
  %288 = trunc i64 %263 to i16
  %289 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 3
  store i16 %288, i16* %289, align 4
  %290 = lshr i64 %263, 32
  %291 = trunc i64 %290 to i16
  %292 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 4
  store i16 %291, i16* %292, align 2
  %293 = trunc i32 %274 to i16
  %294 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 5
  store i16 %293, i16* %294, align 4
  %295 = trunc i32 %276 to i16
  %296 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 6
  store i16 %295, i16* %296, align 2
  %297 = load i8, i8* %12, align 1
  store i8 %297, i8* %75, align 4
  store i32 1, i32* %77, align 4
  %298 = load i32, i32* %11, align 4
  %299 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %5, i64 0, i32 9
  store i32 %298, i32* %299, align 4
  %300 = load i32, i32* %13, align 4
  %301 = bitcast i8* %90 to i64*
  %302 = zext i32 %300 to i64
  %303 = shl nuw i64 %302, 32
  %304 = or i64 %303, 1
  store i64 %304, i64* %301, align 4
  %305 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %306 = load %"class.x11::Connection"*, %"class.x11::Connection"** %305, align 8
  %307 = call i32 @_ZN3x1110Connection14GenerateIdImplEv(%"class.x11::Connection"* %306) #17
  %308 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  store i32 %307, i32* %308, align 8
  store i32 %307, i32* %76, align 4
  %309 = bitcast %"class.x11::Connection"** %305 to %"class.x11::XProto"**
  %310 = load %"class.x11::XProto"*, %"class.x11::XProto"** %309, align 8
  %311 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto12CreateWindowERKNS_19CreateWindowRequestE(%"class.x11::XProto"* %310, %"struct.x11::CreateWindowRequest"* nonnull dereferenceable(152) %5) #17
  %312 = icmp eq %"class.x11::Connection::FutureImpl"* %311, null
  br i1 %312, label %315, label %313

313:                                              ; preds = %256
  %314 = bitcast %"class.x11::Connection::FutureImpl"* %311 to i8*
  call void @_ZdlPv(i8* %314) #18
  br label %315

315:                                              ; preds = %256, %313
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %243) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %240) #17
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %75) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui9X11Window22InitializeAsStatusIconEv(%"class.ui::X11Window"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.553", align 8
  %3 = alloca %class.scoped_refptr.342, align 8
  %4 = alloca %"class.std::__1::unique_ptr.344", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.x11::Future.711", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::vector.553", align 8
  %11 = alloca %"struct.x11::ChangeWindowAttributesRequest", align 4
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"struct.std::__1::array.522", align 8
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #17
  %19 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %20 = load %"class.x11::Connection"*, %"class.x11::Connection"** %19, align 8
  %21 = tail call i32 @_ZNK3x1110Connection15DefaultScreenIdEv(%"class.x11::Connection"* %20) #17
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* nonnull sret %6, i32 %21) #17
  %22 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %6, i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29, i64 0, i64 0)) #17, !noalias !6
  %23 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %23, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #17, !noalias !6
  %24 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %1
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #18
  br label %31

31:                                               ; preds = %1, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #17
  %32 = bitcast %"class.x11::Future.711"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #17
  %33 = bitcast %"class.x11::Connection"** %19 to %"class.x11::XProto"**
  %34 = load %"class.x11::XProto"*, %"class.x11::XProto"** %33, align 8
  %35 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #17
  %36 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #17
  store i32 %36, i32* %8, align 4
  %37 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto17GetSelectionOwnerERKNS_4AtomE(%"class.x11::XProto"* %34, i32* nonnull dereferenceable(4) %8) #17
  %38 = getelementptr inbounds %"class.x11::Future.711", %"class.x11::Future.711"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.x11::Connection::FutureImpl"* %37, %"class.x11::Connection::FutureImpl"** %38, align 8
  %39 = call { %"struct.x11::GetSelectionOwnerReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_22GetSelectionOwnerReplyEE4SyncEv(%"class.x11::Future.711"* nonnull %7)
  %40 = extractvalue { %"struct.x11::GetSelectionOwnerReply"*, %"class.x11::Error"* } %39, 0
  %41 = extractvalue { %"struct.x11::GetSelectionOwnerReply"*, %"class.x11::Error"* } %39, 1
  %42 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %38, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %38, align 8
  %43 = icmp eq %"class.x11::Connection::FutureImpl"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %31
  %45 = bitcast %"class.x11::Connection::FutureImpl"* %42 to i8*
  call void @_ZdlPv(i8* %45) #18
  br label %46

46:                                               ; preds = %31, %44
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #17
  %47 = icmp eq %"struct.x11::GetSelectionOwnerReply"* %40, null
  br i1 %47, label %215, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"struct.x11::GetSelectionOwnerReply", %"struct.x11::GetSelectionOwnerReply"* %40, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %215, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %54 = load i32, i32* %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #17
  %56 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  store i8 12, i8* %57, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i64 0, i64 0), i64 12, i1 false) #17
  %58 = getelementptr inbounds i8, i8* %55, i64 12
  store i8 0, i8* %58, align 4
  %59 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #17
  %60 = bitcast %"class.std::__1::vector.553"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #17
  %61 = call i8* @_Znwm(i64 8) #18
  %62 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %10, i64 0, i32 0, i32 1
  %63 = bitcast %"class.std::__1::vector.553"* %10 to i8**
  store i8* %61, i8** %63, align 8
  %64 = getelementptr inbounds i8, i8* %61, i64 8
  %65 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %66 = bitcast i32** %65 to i8**
  store i8* %64, i8** %66, align 8
  %67 = bitcast i32** %62 to i64*
  %68 = bitcast i8* %61 to i64*
  store i64 4294967296, i64* %68, align 4
  %69 = ptrtoint i8* %64 to i64
  store i64 %69, i64* %67, align 8
  %70 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  %71 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyIjEENS_6FutureIvEENS_6WindowENS_4AtomES4_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE(i32 %54, i32 %59, i32 6, %"class.std::__1::vector.553"* nonnull dereferenceable(24) %10, %"class.x11::Connection"* %70)
  %72 = icmp eq %"class.x11::Connection::FutureImpl"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %52
  %74 = bitcast %"class.x11::Connection::FutureImpl"* %71 to i8*
  call void @_ZdlPv(i8* %74) #18
  br label %75

75:                                               ; preds = %52, %73
  %76 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %10, i64 0, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  %78 = icmp eq i32* %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %75
  %80 = ptrtoint i32* %77 to i64
  store i64 %80, i64* %67, align 8
  %81 = bitcast i32* %77 to i8*
  call void @_ZdlPv(i8* %81) #18
  br label %82

82:                                               ; preds = %75, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #17
  %83 = load i8, i8* %57, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #18
  br label %88

88:                                               ; preds = %82, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #17
  %89 = bitcast %"struct.x11::ChangeWindowAttributesRequest"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 124, i8* nonnull %89) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %89, i8 -86, i64 124, i1 false)
  %90 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %11, i64 0, i32 0
  %91 = load i32, i32* %53, align 8
  store i32 %91, i32* %90, align 4
  %92 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %11, i64 0, i32 1
  %93 = getelementptr inbounds %"class.absl::optional.602", %"class.absl::optional.602"* %92, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %93, align 4
  %94 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %94, align 4
  %95 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %95, align 4
  %96 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %11, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %96, align 4
  %97 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %11, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %97, align 4
  %98 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %11, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %98, align 4
  %99 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %11, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %99, align 4
  %100 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %11, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %100, align 4
  %101 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %11, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %101, align 4
  %102 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %11, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %102, align 4
  %103 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %11, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %103, align 4
  %104 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %11, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %104, align 4
  %105 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %11, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %105, align 4
  %106 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %11, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %106, align 4
  %107 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %11, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %107, align 4
  %108 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 38
  %109 = load i8, i8* %108, align 8, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %88
  store i8 1, i8* %94, align 4
  %112 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 0, i32* %112, align 4
  br label %152

113:                                              ; preds = %88
  %114 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #17
  %115 = call i8* @_Znwm(i64 32) #18
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %115, i8** %116, align 8
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = bitcast i64* %117 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %118, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %115, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.39, i64 0, i64 0), i64 25, i1 false) #17
  %119 = getelementptr inbounds i8, i8* %115, i64 25
  store i8 0, i8* %119, align 1
  %120 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %12) #17
  %121 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  %122 = bitcast %"class.std::__1::vector.553"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #17
  %123 = call i8* @_Znwm(i64 4) #18
  %124 = bitcast i8* %123 to i32*
  %125 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %2, i64 0, i32 0, i32 1
  %126 = bitcast %"class.std::__1::vector.553"* %2 to i8**
  store i8* %123, i8** %126, align 8
  %127 = getelementptr inbounds i8, i8* %123, i64 4
  %128 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %129 = bitcast i32** %128 to i8**
  store i8* %127, i8** %129, align 8
  %130 = bitcast i32** %125 to i64*
  store i32 1, i32* %124, align 4
  %131 = ptrtoint i8* %127 to i64
  store i64 %131, i64* %130, align 8
  %132 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyIjEENS_6FutureIvEENS_6WindowENS_4AtomES4_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE(i32 %91, i32 %120, i32 6, %"class.std::__1::vector.553"* nonnull dereferenceable(24) %2, %"class.x11::Connection"* %121) #17
  %133 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %2, i64 0, i32 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = icmp eq i32* %134, null
  br i1 %135, label %139, label %136

136:                                              ; preds = %113
  %137 = ptrtoint i32* %134 to i64
  store i64 %137, i64* %130, align 8
  %138 = bitcast i32* %134 to i8*
  call void @_ZdlPv(i8* %138) #18
  br label %139

139:                                              ; preds = %113, %136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #17
  %140 = icmp eq %"class.x11::Connection::FutureImpl"* %132, null
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = bitcast %"class.x11::Connection::FutureImpl"* %132 to i8*
  call void @_ZdlPv(i8* %142) #18
  br label %143

143:                                              ; preds = %139, %141
  %144 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %144, i64 0, i32 1, i32 0
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %148, label %150

148:                                              ; preds = %143
  %149 = load i8*, i8** %116, align 8
  call void @_ZdlPv(i8* %149) #18
  br label %150

150:                                              ; preds = %143, %148
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #17
  %151 = bitcast %"class.absl::optional.602"* %92 to i64*
  store i64 4294967297, i64* %151, align 4
  br label %152

152:                                              ; preds = %150, %111
  %153 = load %"class.x11::XProto"*, %"class.x11::XProto"** %33, align 8
  %154 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto22ChangeWindowAttributesERKNS_29ChangeWindowAttributesRequestE(%"class.x11::XProto"* %153, %"struct.x11::ChangeWindowAttributesRequest"* nonnull dereferenceable(124) %11) #17
  %155 = icmp eq %"class.x11::Connection::FutureImpl"* %154, null
  br i1 %155, label %158, label %156

156:                                              ; preds = %152
  %157 = bitcast %"class.x11::Connection::FutureImpl"* %154 to i8*
  call void @_ZdlPv(i8* %157) #18
  br label %158

158:                                              ; preds = %152, %156
  %159 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %159) #17
  %160 = call i8* @_Znwm(i64 32) #18
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %160, i8** %161, align 8
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %163 = bitcast i64* %162 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %163, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %160, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40, i64 0, i64 0), i64 23, i1 false) #17
  %164 = getelementptr inbounds i8, i8* %160, i64 23
  store i8 0, i8* %164, align 1
  %165 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #17
  %166 = getelementptr inbounds %"struct.std::__1::array.522", %"struct.std::__1::array.522"* %14, i64 0, i32 0, i64 0
  %167 = call %"class.ui::X11EventSource"* @_ZN2ui14X11EventSource11GetInstanceEv() #17
  %168 = call i32 @_ZN2ui14X11EventSource12GetTimestampEv(%"class.ui::X11EventSource"* %167) #17
  store i32 %168, i32* %166, align 8
  %169 = getelementptr inbounds %"struct.std::__1::array.522", %"struct.std::__1::array.522"* %14, i64 0, i32 0, i64 1
  store i32 0, i32* %169, align 4
  %170 = getelementptr inbounds %"struct.std::__1::array.522", %"struct.std::__1::array.522"* %14, i64 0, i32 0, i64 2
  %171 = load i32, i32* %53, align 8
  store i32 %171, i32* %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::array.522", %"struct.std::__1::array.522"* %14, i64 0, i32 0, i64 3
  store i32 0, i32* %172, align 4
  %173 = getelementptr inbounds %"struct.std::__1::array.522", %"struct.std::__1::array.522"* %14, i64 0, i32 0, i64 4
  store i32 0, i32* %173, align 8
  %174 = call %"class.x11::Connection::FutureImpl"* @_ZN2ui17SendClientMessageEN3x116WindowES1_NS0_4AtomENSt3__15arrayIjLm5EEENS0_9EventMaskE(i32 %50, i32 %50, i32 %165, %"struct.std::__1::array.522"* nonnull byval(%"struct.std::__1::array.522") align 8 %14, i32 0) #17
  %175 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %175, i64 0, i32 1, i32 0
  %177 = load i8, i8* %176, align 1
  %178 = icmp slt i8 %177, 0
  br i1 %178, label %179, label %181

179:                                              ; preds = %158
  %180 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %180) #18
  br label %181

181:                                              ; preds = %158, %179
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %159) #17
  %182 = icmp eq %"class.x11::Connection::FutureImpl"* %174, null
  br i1 %182, label %213, label %183

183:                                              ; preds = %181
  %184 = bitcast %class.scoped_refptr.342* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #17
  %185 = getelementptr inbounds %class.scoped_refptr.342, %class.scoped_refptr.342* %3, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %185, align 8
  %186 = bitcast %"class.std::__1::unique_ptr.344"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #17
  %187 = getelementptr inbounds %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.344"* %4, i64 0, i32 0, i32 0, i32 0
  %188 = bitcast %"class.std::__1::unique_ptr.344"* %4 to i64*
  store i64 0, i64* %188, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %174, %class.scoped_refptr.342* nonnull %3, %"class.std::__1::unique_ptr.344"* nonnull %4) #17
  %189 = load %"class.x11::Error"*, %"class.x11::Error"** %187, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #17
  %190 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %185, align 8
  %191 = icmp eq %"class.base::RefCountedMemory"* %190, null
  br i1 %191, label %204, label %192

192:                                              ; preds = %183
  %193 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %190, i64 0, i32 1
  %194 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %193, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = atomicrmw sub i32* %194, i32 1 acq_rel
  %196 = icmp eq i32 %195, 1
  br i1 %196, label %197, label %204

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %193, i64 -2
  %199 = bitcast %"class.base::RefCountedThreadSafe.343"* %198 to %"class.base::RefCountedMemory"*
  %200 = bitcast %"class.base::RefCountedThreadSafe.343"* %198 to void (%"class.base::RefCountedMemory"*)***
  %201 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %200, align 8
  %202 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %201, i64 3
  %203 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %202, align 8
  call void %203(%"class.base::RefCountedMemory"* nonnull %199) #17
  br label %204

204:                                              ; preds = %183, %192, %197
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #17
  %205 = icmp eq %"class.x11::Error"* %189, null
  br i1 %205, label %211, label %206

206:                                              ; preds = %204
  %207 = bitcast %"class.x11::Error"* %189 to void (%"class.x11::Error"*)***
  %208 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %207, align 8
  %209 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %208, i64 1
  %210 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %209, align 8
  call void %210(%"class.x11::Error"* nonnull %189) #17
  br label %211

211:                                              ; preds = %204, %206
  %212 = bitcast %"class.x11::Connection::FutureImpl"* %174 to i8*
  call void @_ZdlPv(i8* %212) #18
  br label %213

213:                                              ; preds = %181, %211
  %214 = phi i1 [ %205, %211 ], [ true, %181 ]
  call void @llvm.lifetime.end.p0i8(i64 124, i8* nonnull %89) #17
  br label %215

215:                                              ; preds = %46, %48, %213
  %216 = phi i1 [ %214, %213 ], [ false, %48 ], [ false, %46 ]
  %217 = icmp eq %"class.x11::Error"* %41, null
  br i1 %217, label %223, label %218

218:                                              ; preds = %215
  %219 = bitcast %"class.x11::Error"* %41 to void (%"class.x11::Error"*)***
  %220 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %219, align 8
  %221 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %220, i64 1
  %222 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %221, align 8
  call void %222(%"class.x11::Error"* nonnull %41) #17
  br label %223

223:                                              ; preds = %218, %215
  br i1 %47, label %226, label %224

224:                                              ; preds = %223
  %225 = bitcast %"struct.x11::GetSelectionOwnerReply"* %40 to i8*
  call void @_ZdlPv(i8* %225) #18
  br label %226

226:                                              ; preds = %223, %224
  %227 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %228 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %227, i64 0, i32 1, i32 0
  %229 = load i8, i8* %228, align 1
  %230 = icmp slt i8 %229, 0
  br i1 %230, label %231, label %233

231:                                              ; preds = %226
  %232 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %232) #18
  br label %233

233:                                              ; preds = %226, %231
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #17
  ret i1 %216
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window12CloseXWindowEv(%"class.ui::X11Window"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 67, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %6) #17
  %7 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 67, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %7) #17
  tail call void @_ZN2ui9X11Window15UnconfineCursorEv(%"class.ui::X11Window"* %0)
  %8 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %9 = bitcast %"class.x11::Connection"** %8 to %"class.x11::XProto"**
  %10 = load %"class.x11::XProto"*, %"class.x11::XProto"** %9, align 8
  %11 = tail call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto13DestroyWindowERKNS_6WindowE(%"class.x11::XProto"* %10, i32* dereferenceable(4) %2) #17
  %12 = icmp eq %"class.x11::Connection::FutureImpl"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %5
  %14 = bitcast %"class.x11::Connection::FutureImpl"* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #18
  br label %15

15:                                               ; preds = %5, %13
  store i32 0, i32* %2, align 8
  %16 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 51
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %40, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.x11::Connection"** %8 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 136
  %23 = bitcast i8* %22 to %"class.x11::Sync"**
  %24 = load %"class.x11::Sync"*, %"class.x11::Sync"** %23, align 8
  %25 = tail call %"class.x11::Connection::FutureImpl"* @_ZN3x114Sync14DestroyCounterERKNS0_7CounterE(%"class.x11::Sync"* %24, i32* dereferenceable(4) %16) #17
  %26 = icmp eq %"class.x11::Connection::FutureImpl"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %19
  %28 = bitcast %"class.x11::Connection::FutureImpl"* %25 to i8*
  tail call void @_ZdlPv(i8* %28) #18
  br label %29

29:                                               ; preds = %19, %27
  %30 = load i8*, i8** %20, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 136
  %32 = bitcast i8* %31 to %"class.x11::Sync"**
  %33 = load %"class.x11::Sync"*, %"class.x11::Sync"** %32, align 8
  %34 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 52
  %35 = tail call %"class.x11::Connection::FutureImpl"* @_ZN3x114Sync14DestroyCounterERKNS0_7CounterE(%"class.x11::Sync"* %33, i32* dereferenceable(4) %34) #17
  %36 = icmp eq %"class.x11::Connection::FutureImpl"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %29
  %38 = bitcast %"class.x11::Connection::FutureImpl"* %35 to i8*
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %29, %37
  store i32 0, i32* %16, align 8
  store i32 0, i32* %34, align 4
  br label %40

40:                                               ; preds = %15, %1, %39
  ret void
}

declare %"class.ui::X11WindowManager"* @_ZN2ui16X11WindowManager11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN2ui16X11WindowManager9AddWindowEPNS_9X11WindowE(%"class.ui::X11WindowManager"*, %"class.ui::X11Window"*) local_unnamed_addr #1

declare void @_ZN3x1110Connection16AddEventObserverEPNS_13EventObserverE(%"class.x11::Connection"*, %"class.x11::EventObserver"*) local_unnamed_addr #1

declare %"class.ui::X11EventSource"* @_ZN2ui14X11EventSource11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN2ui19PlatformEventSource26AddPlatformEventDispatcherEPNS_23PlatformEventDispatcherE(%"class.ui::PlatformEventSource"*, %"class.ui::PlatformEventDispatcher"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN2ui20SetWmMoveLoopHandlerEPNS_14PlatformWindowEPNS_17WmMoveLoopHandlerE(%"class.ui::PlatformWindow"*, %"class.ui::WmMoveLoopHandler"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2ui9X11Window9GetWidgetEv(%"class.ui::X11Window"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

declare void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"*) local_unnamed_addr #1

declare zeroext i1 @_ZN2ui18IsXInput2AvailableEv() local_unnamed_addr #1

declare %"class.ui::TouchFactory"* @_ZN2ui12TouchFactory11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN2ui12TouchFactory18SetupXI2ForXWindowEN3x116WindowE(%"class.ui::TouchFactory"*, i32) local_unnamed_addr #1

declare i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyINS_4AtomEEENS_6FutureIvEENS_6WindowES1_S1_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE(i32, i32, i32, %"class.std::__1::vector.72"* dereferenceable(24), %"class.x11::Connection"*) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.std::__1::vector.769", align 8
  %7 = alloca %"struct.x11::ChangePropertyRequest", align 8
  %8 = bitcast %"class.std::__1::vector.769"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #17
  %9 = getelementptr inbounds %"class.std::__1::vector.769", %"class.std::__1::vector.769"* %6, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.769", %"class.std::__1::vector.769"* %6, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.769", %"class.std::__1::vector.769"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %3, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.72"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #17
  %18 = icmp eq i64 %17, 0
  %19 = inttoptr i64 %16 to i8*
  br i1 %18, label %33, label %20

20:                                               ; preds = %5
  %21 = icmp slt i64 %17, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector.769"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %23) #19
  unreachable

24:                                               ; preds = %20
  %25 = tail call i8* @_Znwm(i64 %17) #18
  store i8* %25, i8** %9, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %17
  store i8* %26, i8** %11, align 8
  %27 = bitcast i8** %10 to i64*
  %28 = ptrtoint i8* %25 to i64
  %29 = sub i64 %17, %28
  %30 = getelementptr i8, i8* %25, i64 %29
  %31 = ptrtoint i8* %30 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %25, i8 0, i64 %31, i1 false) #17
  %32 = ptrtoint i8* %26 to i64
  store i64 %32, i64* %27, align 8
  br label %33

33:                                               ; preds = %5, %24
  %34 = phi i8* [ null, %5 ], [ %25, %24 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 4 %19, i64 %17, i1 false)
  %35 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %4, i64 0, i32 0
  %36 = bitcast %"struct.x11::ChangePropertyRequest"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #17
  %37 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 0
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 1
  store i32 %0, i32* %38, align 4
  %39 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 2
  store i32 %1, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 3
  store i32 %2, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 4
  store i8 32, i8* %41, align 8
  %42 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 5
  %43 = load i64, i64* %13, align 8
  %44 = load i64, i64* %15, align 8
  %45 = sub i64 %43, %44
  %46 = lshr exact i64 %45, 2
  %47 = trunc i64 %46 to i32
  store i32 %47, i32* %42, align 4
  %48 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 6
  %49 = call %"class.base::RefCountedBytes"* @_ZN4base15RefCountedBytes10TakeVectorEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::vector.769"* nonnull %6) #17
  %50 = ptrtoint %"class.base::RefCountedBytes"* %49 to i64
  %51 = bitcast %class.scoped_refptr.342* %48 to i64*
  store i64 %50, i64* %51, align 8
  %52 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto14ChangePropertyERKNS_21ChangePropertyRequestE(%"class.x11::XProto"* %35, %"struct.x11::ChangePropertyRequest"* nonnull dereferenceable(32) %7) #17
  %53 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 6, i32 0
  %54 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %55 = icmp eq %"class.base::RefCountedMemory"* %54, null
  br i1 %55, label %68, label %56

56:                                               ; preds = %33
  %57 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %54, i64 0, i32 1
  %58 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw sub i32* %58, i32 1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %68

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %57, i64 -2
  %63 = bitcast %"class.base::RefCountedThreadSafe.343"* %62 to %"class.base::RefCountedMemory"*
  %64 = bitcast %"class.base::RefCountedThreadSafe.343"* %62 to void (%"class.base::RefCountedMemory"*)***
  %65 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %65, i64 3
  %67 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %66, align 8
  call void %67(%"class.base::RefCountedMemory"* nonnull %63) #17
  br label %68

68:                                               ; preds = %61, %56, %33
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #17
  %69 = load i8*, i8** %9, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = ptrtoint i8* %69 to i64
  %73 = bitcast i8** %10 to i64*
  store i64 %72, i64* %73, align 8
  call void @_ZdlPv(i8* nonnull %69) #18
  br label %74

74:                                               ; preds = %68, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #17
  ret %"class.x11::Connection::FutureImpl"* %52
}

declare void @_ZN3x1117SetStringPropertyENS_6WindowENS_4AtomES1_RKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS_10ConnectionE(i32, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.x11::Connection"*) local_unnamed_addr #1

declare void @_ZN3net11GetHostNameEv(%"class.std::__1::basic_string"* sret) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @getpid() local_unnamed_addr #2

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #1

declare void @_ZN2ui18SetWindowClassHintEPN3x1110ConnectionENS0_6WindowERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_(%"class.x11::Connection"*, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN2ui13SetWindowRoleEN3x116WindowERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN2ui36SetHideTitlebarWhenMaximizedPropertyEN3x116WindowENS_25HideTitlebarWhenMaximizedE(i32, i32) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x114Sync13CreateCounterERKNS0_20CreateCounterRequestE(%"class.x11::Sync"*, %"struct.x11::Sync::CreateCounterRequest"* dereferenceable(12)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyINS_4Sync7CounterEEENS_6FutureIvEENS_6WindowENS_4AtomES6_RKNSt3__16vectorIT_NS7_9allocatorIS9_EEEEPNS_10ConnectionE(i32, i32, i32, %"class.std::__1::vector.493"* dereferenceable(24), %"class.x11::Connection"*) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.std::__1::vector.769", align 8
  %7 = alloca %"struct.x11::ChangePropertyRequest", align 8
  %8 = bitcast %"class.std::__1::vector.769"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #17
  %9 = getelementptr inbounds %"class.std::__1::vector.769", %"class.std::__1::vector.769"* %6, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.769", %"class.std::__1::vector.769"* %6, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.769", %"class.std::__1::vector.769"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.493", %"class.std::__1::vector.493"* %3, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.493"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #17
  %18 = icmp eq i64 %17, 0
  %19 = inttoptr i64 %16 to i8*
  br i1 %18, label %33, label %20

20:                                               ; preds = %5
  %21 = icmp slt i64 %17, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector.769"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %23) #19
  unreachable

24:                                               ; preds = %20
  %25 = tail call i8* @_Znwm(i64 %17) #18
  store i8* %25, i8** %9, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %17
  store i8* %26, i8** %11, align 8
  %27 = bitcast i8** %10 to i64*
  %28 = ptrtoint i8* %25 to i64
  %29 = sub i64 %17, %28
  %30 = getelementptr i8, i8* %25, i64 %29
  %31 = ptrtoint i8* %30 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %25, i8 0, i64 %31, i1 false) #17
  %32 = ptrtoint i8* %26 to i64
  store i64 %32, i64* %27, align 8
  br label %33

33:                                               ; preds = %5, %24
  %34 = phi i8* [ null, %5 ], [ %25, %24 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 4 %19, i64 %17, i1 false)
  %35 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %4, i64 0, i32 0
  %36 = bitcast %"struct.x11::ChangePropertyRequest"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #17
  %37 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 0
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 1
  store i32 %0, i32* %38, align 4
  %39 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 2
  store i32 %1, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 3
  store i32 %2, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 4
  store i8 32, i8* %41, align 8
  %42 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 5
  %43 = load i64, i64* %13, align 8
  %44 = load i64, i64* %15, align 8
  %45 = sub i64 %43, %44
  %46 = lshr exact i64 %45, 2
  %47 = trunc i64 %46 to i32
  store i32 %47, i32* %42, align 4
  %48 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 6
  %49 = call %"class.base::RefCountedBytes"* @_ZN4base15RefCountedBytes10TakeVectorEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::vector.769"* nonnull %6) #17
  %50 = ptrtoint %"class.base::RefCountedBytes"* %49 to i64
  %51 = bitcast %class.scoped_refptr.342* %48 to i64*
  store i64 %50, i64* %51, align 8
  %52 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto14ChangePropertyERKNS_21ChangePropertyRequestE(%"class.x11::XProto"* %35, %"struct.x11::ChangePropertyRequest"* nonnull dereferenceable(32) %7) #17
  %53 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 6, i32 0
  %54 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %55 = icmp eq %"class.base::RefCountedMemory"* %54, null
  br i1 %55, label %68, label %56

56:                                               ; preds = %33
  %57 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %54, i64 0, i32 1
  %58 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw sub i32* %58, i32 1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %68

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %57, i64 -2
  %63 = bitcast %"class.base::RefCountedThreadSafe.343"* %62 to %"class.base::RefCountedMemory"*
  %64 = bitcast %"class.base::RefCountedThreadSafe.343"* %62 to void (%"class.base::RefCountedMemory"*)***
  %65 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %65, i64 3
  %67 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %66, align 8
  call void %67(%"class.base::RefCountedMemory"* nonnull %63) #17
  br label %68

68:                                               ; preds = %61, %56, %33
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #17
  %69 = load i8*, i8** %9, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = ptrtoint i8* %69 to i64
  %73 = bitcast i8** %10 to i64*
  store i64 %72, i64* %73, align 8
  call void @_ZdlPv(i8* nonnull %69) #18
  br label %74

74:                                               ; preds = %68, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #17
  ret %"class.x11::Connection::FutureImpl"* %52
}

declare void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #2

declare void @_ZN2ui16SetWmDragHandlerEPNS_14PlatformWindowEPNS_13WmDragHandlerE(%"class.ui::PlatformWindow"*, %"class.ui::WmDragHandler"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window20OnXWindowLostCaptureEv(%"class.ui::X11Window"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %3 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %2, align 8
  %4 = bitcast %"class.ui::PlatformWindowDelegate"* %3 to void (%"class.ui::PlatformWindowDelegate"*)***
  %5 = load void (%"class.ui::PlatformWindowDelegate"*)**, void (%"class.ui::PlatformWindowDelegate"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*)*, void (%"class.ui::PlatformWindowDelegate"*)** %5, i64 8
  %7 = load void (%"class.ui::PlatformWindowDelegate"*)*, void (%"class.ui::PlatformWindowDelegate"*)** %6, align 8
  tail call void %7(%"class.ui::PlatformWindowDelegate"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window12OnMouseEnterEv(%"class.ui::X11Window"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %3 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %2, align 8
  %4 = bitcast %"class.ui::PlatformWindowDelegate"* %3 to void (%"class.ui::PlatformWindowDelegate"*)***
  %5 = load void (%"class.ui::PlatformWindowDelegate"*)**, void (%"class.ui::PlatformWindowDelegate"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*)*, void (%"class.ui::PlatformWindowDelegate"*)** %5, i64 18
  %7 = load void (%"class.ui::PlatformWindowDelegate"*)*, void (%"class.ui::PlatformWindowDelegate"*)** %6, align 8
  tail call void %7(%"class.ui::PlatformWindowDelegate"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window4ShowEb(%"class.ui::X11Window"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 34
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN2ui9X11Window3MapEb(%"class.ui::X11Window"* %0, i1 zeroext %1)
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window3MapEb(%"class.ui::X11Window"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.847", align 8
  %4 = alloca %"struct.ui::SizeHints", align 4
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::vector.72", align 8
  %9 = zext i1 %1 to i8
  %10 = bitcast %"struct.ui::SizeHints"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %10, i8 0, i64 72, i1 false)
  %11 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %12 = load i32, i32* %11, align 8
  %13 = call zeroext i1 @_ZN2ui16GetWmNormalHintsEN3x116WindowEPNS_9SizeHintsE(i32 %12, %"struct.ui::SizeHints"* nonnull %4) #17
  %14 = getelementptr inbounds %"struct.ui::SizeHints", %"struct.ui::SizeHints"* %4, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = or i32 %15, 4
  store i32 %16, i32* %14, align 4
  %17 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.ui::SizeHints", %"struct.ui::SizeHints"* %4, i64 0, i32 1
  store i32 %18, i32* %19, align 4
  %20 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.ui::SizeHints", %"struct.ui::SizeHints"* %4, i64 0, i32 2
  store i32 %21, i32* %22, align 4
  %23 = load i32, i32* %11, align 8
  call void @_ZN2ui16SetWmNormalHintsEN3x116WindowERKNS_9SizeHintsE(i32 %23, %"struct.ui::SizeHints"* nonnull dereferenceable(72) %4) #17
  %24 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  store i8 %9, i8* %24, align 1
  br i1 %1, label %29, label %25

25:                                               ; preds = %2
  %26 = call %"class.ui::X11EventSource"* @_ZN2ui14X11EventSource11GetInstanceEv() #17
  %27 = call i32 @_ZN2ui14X11EventSource12GetTimestampEv(%"class.ui::X11EventSource"* %26) #17
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %66, label %29

29:                                               ; preds = %25, %2
  %30 = phi i32 [ %27, %25 ], [ 0, %2 ]
  %31 = load i32, i32* %11, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #17
  %33 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 17, i8* %34, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i64 17, i1 false) #17
  %35 = getelementptr inbounds i8, i8* %32, i64 17
  store i8 0, i8* %35, align 1
  %36 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #17
  %37 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  %38 = bitcast %"class.std::__1::vector.847"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #17
  %39 = call i8* @_Znwm(i64 4) #18
  %40 = bitcast i8* %39 to i32*
  %41 = getelementptr inbounds %"class.std::__1::vector.847", %"class.std::__1::vector.847"* %3, i64 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::vector.847"* %3 to i8**
  store i8* %39, i8** %42, align 8
  %43 = getelementptr inbounds i8, i8* %39, i64 4
  %44 = getelementptr inbounds %"class.std::__1::vector.847", %"class.std::__1::vector.847"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast i32** %44 to i8**
  store i8* %43, i8** %45, align 8
  %46 = bitcast i32** %41 to i64*
  store i32 %30, i32* %40, align 4
  %47 = ptrtoint i8* %43 to i64
  store i64 %47, i64* %46, align 8
  %48 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyINS_4TimeEEENS_6FutureIvEENS_6WindowENS_4AtomES5_RKNSt3__16vectorIT_NS6_9allocatorIS8_EEEEPNS_10ConnectionE(i32 %31, i32 %36, i32 6, %"class.std::__1::vector.847"* nonnull dereferenceable(24) %3, %"class.x11::Connection"* %37) #17
  %49 = getelementptr inbounds %"class.std::__1::vector.847", %"class.std::__1::vector.847"* %3, i64 0, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = icmp eq i32* %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %29
  %53 = ptrtoint i32* %50 to i64
  store i64 %53, i64* %46, align 8
  %54 = bitcast i32* %50 to i8*
  call void @_ZdlPv(i8* %54) #18
  br label %55

55:                                               ; preds = %29, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #17
  %56 = icmp eq %"class.x11::Connection::FutureImpl"* %48, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = bitcast %"class.x11::Connection::FutureImpl"* %48 to i8*
  call void @_ZdlPv(i8* %58) #18
  br label %59

59:                                               ; preds = %55, %57
  %60 = load i8, i8* %34, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #18
  br label %65

65:                                               ; preds = %59, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  br label %66

66:                                               ; preds = %25, %65
  call void @_ZN2ui9X11Window19UpdateMinAndMaxSizeEv(%"class.ui::X11Window"* %0)
  %67 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30, i32 0, i32 0, i32 0
  %68 = load i32*, i32** %67, align 8
  %69 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30, i32 0, i32 0, i32 1
  %70 = load i32*, i32** %69, align 8
  %71 = icmp eq i32* %68, %70
  %72 = load i32, i32* %11, align 8
  br i1 %71, label %73, label %84

73:                                               ; preds = %66
  %74 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #17
  %75 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  store i8 13, i8* %76, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i64 0, i64 0), i64 13, i1 false) #17
  %77 = getelementptr inbounds i8, i8* %74, i64 13
  store i8 0, i8* %77, align 1
  %78 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #17
  call void @_ZN3x1114DeletePropertyENS_6WindowENS_4AtomE(i32 %72, i32 %78) #17
  %79 = load i8, i8* %76, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %295

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %83) #18
  br label %295

84:                                               ; preds = %66
  %85 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #17
  %86 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  store i8 13, i8* %87, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %85, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i64 0, i64 0), i64 13, i1 false) #17
  %88 = getelementptr inbounds i8, i8* %85, i64 13
  store i8 0, i8* %88, align 1
  %89 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #17
  %90 = bitcast %"class.std::__1::vector.72"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #17
  %91 = load i32*, i32** %67, align 8
  %92 = bitcast i32* %91 to i8*
  %93 = ptrtoint i32* %91 to i64
  %94 = load i32*, i32** %69, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 24, i1 false) #17
  %95 = ptrtoint i32* %94 to i64
  %96 = sub i64 %95, %93
  %97 = ashr exact i64 %96, 2
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %274, label %99

99:                                               ; preds = %84
  %100 = icmp ugt i64 %97, 4611686018427387903
  br i1 %100, label %101, label %103

101:                                              ; preds = %99
  %102 = bitcast %"class.std::__1::vector.72"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %102) #19
  unreachable

103:                                              ; preds = %99
  %104 = call i8* @_Znwm(i64 %96) #18
  %105 = bitcast i8* %104 to i32*
  %106 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %8, i64 0, i32 0, i32 1
  %107 = bitcast i32** %106 to i8**
  store i8* %104, i8** %107, align 8
  %108 = bitcast %"class.std::__1::vector.72"* %8 to i8**
  store i8* %104, i8** %108, align 8
  %109 = getelementptr inbounds i32, i32* %105, i64 %97
  %110 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %109, i32** %110, align 8
  %111 = bitcast i32** %106 to i64*
  %112 = ptrtoint i8* %104 to i64
  %113 = icmp eq i32* %91, %94
  br i1 %113, label %272, label %114

114:                                              ; preds = %103
  %115 = getelementptr i32, i32* %94, i64 -1
  %116 = ptrtoint i32* %115 to i64
  %117 = sub i64 %116, %93
  %118 = lshr i64 %117, 2
  %119 = add nuw nsw i64 %118, 1
  %120 = icmp ult i64 %119, 8
  br i1 %120, label %216, label %121

121:                                              ; preds = %114
  %122 = getelementptr i32, i32* %94, i64 -1
  %123 = ptrtoint i32* %122 to i64
  %124 = sub i64 %123, %93
  %125 = lshr i64 %124, 2
  %126 = add i64 %124, 4
  %127 = and i64 %126, -4
  %128 = getelementptr i8, i8* %104, i64 %127
  %129 = add nuw nsw i64 %125, 1
  %130 = getelementptr i32, i32* %91, i64 %129
  %131 = bitcast i32* %130 to i8*
  %132 = icmp ult i8* %104, %131
  %133 = icmp ugt i8* %128, %92
  %134 = and i1 %132, %133
  br i1 %134, label %216, label %135

135:                                              ; preds = %121
  %136 = and i64 %119, 9223372036854775800
  %137 = getelementptr i32, i32* %105, i64 %136
  %138 = getelementptr i32, i32* %91, i64 %136
  %139 = add nsw i64 %136, -8
  %140 = lshr exact i64 %139, 3
  %141 = add nuw nsw i64 %140, 1
  %142 = and i64 %141, 3
  %143 = icmp ult i64 %139, 24
  br i1 %143, label %195, label %144

144:                                              ; preds = %135
  %145 = sub nsw i64 %141, %142
  br label %146

146:                                              ; preds = %146, %144
  %147 = phi i64 [ 0, %144 ], [ %192, %146 ]
  %148 = phi i64 [ %145, %144 ], [ %193, %146 ]
  %149 = getelementptr i32, i32* %105, i64 %147
  %150 = getelementptr i32, i32* %91, i64 %147
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4, !alias.scope !9
  %153 = getelementptr i32, i32* %150, i64 4
  %154 = bitcast i32* %153 to <4 x i32>*
  %155 = load <4 x i32>, <4 x i32>* %154, align 4, !alias.scope !9
  %156 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %156, align 4, !alias.scope !12, !noalias !9
  %157 = getelementptr i32, i32* %149, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> %155, <4 x i32>* %158, align 4, !alias.scope !12, !noalias !9
  %159 = or i64 %147, 8
  %160 = getelementptr i32, i32* %105, i64 %159
  %161 = getelementptr i32, i32* %91, i64 %159
  %162 = bitcast i32* %161 to <4 x i32>*
  %163 = load <4 x i32>, <4 x i32>* %162, align 4, !alias.scope !9
  %164 = getelementptr i32, i32* %161, i64 4
  %165 = bitcast i32* %164 to <4 x i32>*
  %166 = load <4 x i32>, <4 x i32>* %165, align 4, !alias.scope !9
  %167 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> %163, <4 x i32>* %167, align 4, !alias.scope !12, !noalias !9
  %168 = getelementptr i32, i32* %160, i64 4
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> %166, <4 x i32>* %169, align 4, !alias.scope !12, !noalias !9
  %170 = or i64 %147, 16
  %171 = getelementptr i32, i32* %105, i64 %170
  %172 = getelementptr i32, i32* %91, i64 %170
  %173 = bitcast i32* %172 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4, !alias.scope !9
  %175 = getelementptr i32, i32* %172, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4, !alias.scope !9
  %178 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> %174, <4 x i32>* %178, align 4, !alias.scope !12, !noalias !9
  %179 = getelementptr i32, i32* %171, i64 4
  %180 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> %177, <4 x i32>* %180, align 4, !alias.scope !12, !noalias !9
  %181 = or i64 %147, 24
  %182 = getelementptr i32, i32* %105, i64 %181
  %183 = getelementptr i32, i32* %91, i64 %181
  %184 = bitcast i32* %183 to <4 x i32>*
  %185 = load <4 x i32>, <4 x i32>* %184, align 4, !alias.scope !9
  %186 = getelementptr i32, i32* %183, i64 4
  %187 = bitcast i32* %186 to <4 x i32>*
  %188 = load <4 x i32>, <4 x i32>* %187, align 4, !alias.scope !9
  %189 = bitcast i32* %182 to <4 x i32>*
  store <4 x i32> %185, <4 x i32>* %189, align 4, !alias.scope !12, !noalias !9
  %190 = getelementptr i32, i32* %182, i64 4
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> %188, <4 x i32>* %191, align 4, !alias.scope !12, !noalias !9
  %192 = add i64 %147, 32
  %193 = add i64 %148, -4
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %146, !llvm.loop !14

195:                                              ; preds = %146, %135
  %196 = phi i64 [ 0, %135 ], [ %192, %146 ]
  %197 = icmp eq i64 %142, 0
  br i1 %197, label %214, label %198

198:                                              ; preds = %195, %198
  %199 = phi i64 [ %211, %198 ], [ %196, %195 ]
  %200 = phi i64 [ %212, %198 ], [ %142, %195 ]
  %201 = getelementptr i32, i32* %105, i64 %199
  %202 = getelementptr i32, i32* %91, i64 %199
  %203 = bitcast i32* %202 to <4 x i32>*
  %204 = load <4 x i32>, <4 x i32>* %203, align 4, !alias.scope !9
  %205 = getelementptr i32, i32* %202, i64 4
  %206 = bitcast i32* %205 to <4 x i32>*
  %207 = load <4 x i32>, <4 x i32>* %206, align 4, !alias.scope !9
  %208 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> %204, <4 x i32>* %208, align 4, !alias.scope !12, !noalias !9
  %209 = getelementptr i32, i32* %201, i64 4
  %210 = bitcast i32* %209 to <4 x i32>*
  store <4 x i32> %207, <4 x i32>* %210, align 4, !alias.scope !12, !noalias !9
  %211 = add i64 %199, 8
  %212 = add i64 %200, -1
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %198, !llvm.loop !16

214:                                              ; preds = %198, %195
  %215 = icmp eq i64 %119, %136
  br i1 %215, label %269, label %216

216:                                              ; preds = %214, %121, %114
  %217 = phi i32* [ %105, %121 ], [ %105, %114 ], [ %137, %214 ]
  %218 = phi i32* [ %91, %121 ], [ %91, %114 ], [ %138, %214 ]
  %219 = ptrtoint i32* %218 to i64
  %220 = getelementptr i32, i32* %94, i64 -1
  %221 = ptrtoint i32* %220 to i64
  %222 = sub i64 %221, %219
  %223 = lshr i64 %222, 2
  %224 = add nuw nsw i64 %223, 1
  %225 = and i64 %224, 7
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %236, label %227

227:                                              ; preds = %216, %227
  %228 = phi i32* [ %233, %227 ], [ %217, %216 ]
  %229 = phi i32* [ %232, %227 ], [ %218, %216 ]
  %230 = phi i64 [ %234, %227 ], [ %225, %216 ]
  %231 = load i32, i32* %229, align 4
  store i32 %231, i32* %228, align 4
  %232 = getelementptr inbounds i32, i32* %229, i64 1
  %233 = getelementptr inbounds i32, i32* %228, i64 1
  %234 = add i64 %230, -1
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %236, label %227, !llvm.loop !18

236:                                              ; preds = %227, %216
  %237 = phi i32* [ undef, %216 ], [ %233, %227 ]
  %238 = phi i32* [ %217, %216 ], [ %233, %227 ]
  %239 = phi i32* [ %218, %216 ], [ %232, %227 ]
  %240 = icmp ult i64 %222, 28
  br i1 %240, label %269, label %241

241:                                              ; preds = %236, %241
  %242 = phi i32* [ %267, %241 ], [ %238, %236 ]
  %243 = phi i32* [ %266, %241 ], [ %239, %236 ]
  %244 = load i32, i32* %243, align 4
  store i32 %244, i32* %242, align 4
  %245 = getelementptr inbounds i32, i32* %243, i64 1
  %246 = getelementptr inbounds i32, i32* %242, i64 1
  %247 = load i32, i32* %245, align 4
  store i32 %247, i32* %246, align 4
  %248 = getelementptr inbounds i32, i32* %243, i64 2
  %249 = getelementptr inbounds i32, i32* %242, i64 2
  %250 = load i32, i32* %248, align 4
  store i32 %250, i32* %249, align 4
  %251 = getelementptr inbounds i32, i32* %243, i64 3
  %252 = getelementptr inbounds i32, i32* %242, i64 3
  %253 = load i32, i32* %251, align 4
  store i32 %253, i32* %252, align 4
  %254 = getelementptr inbounds i32, i32* %243, i64 4
  %255 = getelementptr inbounds i32, i32* %242, i64 4
  %256 = load i32, i32* %254, align 4
  store i32 %256, i32* %255, align 4
  %257 = getelementptr inbounds i32, i32* %243, i64 5
  %258 = getelementptr inbounds i32, i32* %242, i64 5
  %259 = load i32, i32* %257, align 4
  store i32 %259, i32* %258, align 4
  %260 = getelementptr inbounds i32, i32* %243, i64 6
  %261 = getelementptr inbounds i32, i32* %242, i64 6
  %262 = load i32, i32* %260, align 4
  store i32 %262, i32* %261, align 4
  %263 = getelementptr inbounds i32, i32* %243, i64 7
  %264 = getelementptr inbounds i32, i32* %242, i64 7
  %265 = load i32, i32* %263, align 4
  store i32 %265, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %243, i64 8
  %267 = getelementptr inbounds i32, i32* %242, i64 8
  %268 = icmp eq i32* %266, %94
  br i1 %268, label %269, label %241, !llvm.loop !19

269:                                              ; preds = %236, %241, %214
  %270 = phi i32* [ %137, %214 ], [ %237, %236 ], [ %267, %241 ]
  %271 = ptrtoint i32* %270 to i64
  br label %272

272:                                              ; preds = %269, %103
  %273 = phi i64 [ %112, %103 ], [ %271, %269 ]
  store i64 %273, i64* %111, align 8
  br label %274

274:                                              ; preds = %84, %272
  %275 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  %276 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyINS_4AtomEEENS_6FutureIvEENS_6WindowES1_S1_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE(i32 %72, i32 %89, i32 4, %"class.std::__1::vector.72"* nonnull dereferenceable(24) %8, %"class.x11::Connection"* %275)
  %277 = icmp eq %"class.x11::Connection::FutureImpl"* %276, null
  br i1 %277, label %280, label %278

278:                                              ; preds = %274
  %279 = bitcast %"class.x11::Connection::FutureImpl"* %276 to i8*
  call void @_ZdlPv(i8* %279) #18
  br label %280

280:                                              ; preds = %274, %278
  %281 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %8, i64 0, i32 0, i32 0
  %282 = load i32*, i32** %281, align 8
  %283 = icmp eq i32* %282, null
  br i1 %283, label %289, label %284

284:                                              ; preds = %280
  %285 = ptrtoint i32* %282 to i64
  %286 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %8, i64 0, i32 0, i32 1
  %287 = bitcast i32** %286 to i64*
  store i64 %285, i64* %287, align 8
  %288 = bitcast i32* %282 to i8*
  call void @_ZdlPv(i8* %288) #18
  br label %289

289:                                              ; preds = %280, %284
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #17
  %290 = load i8, i8* %87, align 1
  %291 = icmp slt i8 %290, 0
  br i1 %291, label %292, label %295

292:                                              ; preds = %289
  %293 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load i8*, i8** %293, align 8
  call void @_ZdlPv(i8* %294) #18
  br label %295

295:                                              ; preds = %292, %289, %81, %73
  %296 = phi i8* [ %74, %73 ], [ %74, %81 ], [ %85, %289 ], [ %85, %292 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %296) #17
  %297 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %298 = bitcast %"class.x11::Connection"** %297 to %"class.x11::XProto"**
  %299 = load %"class.x11::XProto"*, %"class.x11::XProto"** %298, align 8
  %300 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9MapWindowERKNS_6WindowE(%"class.x11::XProto"* %299, i32* dereferenceable(4) %11) #17
  %301 = icmp eq %"class.x11::Connection::FutureImpl"* %300, null
  br i1 %301, label %304, label %302

302:                                              ; preds = %295
  %303 = bitcast %"class.x11::Connection::FutureImpl"* %300 to i8*
  call void @_ZdlPv(i8* %303) #18
  br label %304

304:                                              ; preds = %295, %302
  %305 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 34
  store i8 1, i8* %305, align 8
  %306 = load %"class.x11::Connection"*, %"class.x11::Connection"** %297, align 8
  call void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"* %306) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window4HideEv(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 34
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 67, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %6) #17
  %7 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 67, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %7) #17
  %8 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %9 = load i32, i32* %8, align 8
  tail call void @_ZN2ui14WithdrawWindowEN3x116WindowE(i32 %9) #17
  store i8 0, i8* %2, align 8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window12CancelResizeEv(%"class.ui::X11Window"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 67, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %2) #17
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 67, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %3) #17
  ret void
}

declare void @_ZN2ui14WithdrawWindowEN3x116WindowE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window5CloseEv(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 15
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = tail call %"class.ui::X11WindowManager"* @_ZN2ui16X11WindowManager11GetInstanceEv() #17
  tail call void @_ZN2ui16X11WindowManager12RemoveWindowEPNS_9X11WindowE(%"class.ui::X11WindowManager"* %6, %"class.ui::X11Window"* %0) #17
  store i8 1, i8* %2, align 8
  tail call void @_ZN2ui9X11Window12CloseXWindowEv(%"class.ui::X11Window"* %0)
  %7 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %8 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %7, align 8
  %9 = bitcast %"class.ui::PlatformWindowDelegate"* %8 to void (%"class.ui::PlatformWindowDelegate"*)***
  %10 = load void (%"class.ui::PlatformWindowDelegate"*)**, void (%"class.ui::PlatformWindowDelegate"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*)*, void (%"class.ui::PlatformWindowDelegate"*)** %10, i64 6
  %12 = load void (%"class.ui::PlatformWindowDelegate"*)*, void (%"class.ui::PlatformWindowDelegate"*)** %11, align 8
  tail call void %12(%"class.ui::PlatformWindowDelegate"* %8) #17
  br label %13

13:                                               ; preds = %1, %5
  ret void
}

declare void @_ZN2ui16X11WindowManager12RemoveWindowEPNS_9X11WindowE(%"class.ui::X11WindowManager"*, %"class.ui::X11Window"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui9X11Window9IsVisibleEv(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 34
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %20

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30
  %8 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #17
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 20, i8* %10, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0), i64 20, i1 false) #17
  %11 = getelementptr inbounds i8, i8* %8, i64 20
  store i8 0, i8* %11, align 4
  %12 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #17
  %13 = call zeroext i1 @_ZN2ui17HasWMSpecPropertyERKN4base8internal9flat_treeIN3x114AtomENS0_8identityENSt3__14lessIvEENS6_6vectorIS4_NS6_9allocatorIS4_EEEEEES4_(%"class.base::internal::flat_tree.378"* dereferenceable(24) %7, i32 %12) #17
  %14 = load i8, i8* %10, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #18
  br label %19

19:                                               ; preds = %6, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #17
  br label %20

20:                                               ; preds = %1, %19
  %21 = phi i1 [ true, %1 ], [ %13, %19 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui9X11Window11IsMinimizedEv(%"class.ui::X11Window"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #17
  %5 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  store i8 20, i8* %6, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0), i64 20, i1 false) #17
  %7 = getelementptr inbounds i8, i8* %4, i64 20
  store i8 0, i8* %7, align 4
  %8 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #17
  %9 = call zeroext i1 @_ZN2ui17HasWMSpecPropertyERKN4base8internal9flat_treeIN3x114AtomENS0_8identityENSt3__14lessIvEENS6_6vectorIS4_NS6_9allocatorIS4_EEEEEES4_(%"class.base::internal::flat_tree.378"* dereferenceable(24) %3, i32 %8) #17
  %10 = load i8, i8* %6, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #18
  br label %15

15:                                               ; preds = %1, %12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #17
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window18PrepareForShutdownEv(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %3 = load %"class.x11::Connection"*, %"class.x11::Connection"** %2, align 8
  %4 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 3
  tail call void @_ZN3x1110Connection19RemoveEventObserverEPNS_13EventObserverE(%"class.x11::Connection"* %3, %"class.x11::EventObserver"* %4) #17
  %5 = tail call %"class.ui::X11EventSource"* @_ZN2ui14X11EventSource11GetInstanceEv() #17
  %6 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 2
  tail call void @_ZN2ui19PlatformEventSource29RemovePlatformEventDispatcherEPNS_23PlatformEventDispatcherE(%"class.ui::PlatformEventSource"* %6, %"class.ui::PlatformEventDispatcher"* %7) #17
  ret void
}

declare void @_ZN3x1110Connection19RemoveEventObserverEPNS_13EventObserverE(%"class.x11::Connection"*, %"class.x11::EventObserver"*) local_unnamed_addr #1

declare void @_ZN2ui19PlatformEventSource29RemovePlatformEventDispatcherEPNS_23PlatformEventDispatcherE(%"class.ui::PlatformEventSource"*, %"class.ui::PlatformEventDispatcher"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window9SetBoundsERKN3gfx4RectE(%"class.ui::X11Window"*, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::PlatformWindowDelegate::BoundsChange", align 4
  %4 = alloca %"class.gfx::Rect", align 8
  %5 = alloca %"struct.x11::ConfigureWindowRequest", align 4
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.gfx::Size"*
  %8 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #17
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1
  %14 = tail call i64 @_ZN2ui9X11Window20AdjustSizeForDisplayERKN3gfx4SizeE(%"class.ui::X11Window"* undef, %"class.gfx::Size"* dereferenceable(8) %13)
  %15 = trunc i64 %14 to i32
  %16 = lshr i64 %14, 32
  %17 = trunc i64 %16 to i32
  %18 = bitcast %"class.gfx::Rect"* %1 to i64*
  %19 = bitcast %"class.gfx::Rect"* %4 to i64*
  %20 = load i64, i64* %18, align 4
  store i64 %20, i64* %19, align 8
  %21 = trunc i64 %20 to i32
  %22 = icmp sgt i32 %21, 0
  %23 = icmp sgt i32 %15, 0
  %24 = and i1 %23, %22
  %25 = sub nuw nsw i32 2147483647, %21
  %26 = icmp ult i32 %25, %15
  %27 = and i1 %26, %24
  %28 = select i1 %27, i32 %25, i32 %15
  %29 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp sgt i32 %30, 0
  %32 = icmp sgt i32 %17, 0
  %33 = and i1 %32, %31
  %34 = sub nuw nsw i32 2147483647, %30
  %35 = icmp ult i32 %34, %17
  %36 = and i1 %35, %33
  %37 = select i1 %36, i32 %34, i32 %17
  %38 = icmp sgt i32 %28, 0
  %39 = select i1 %38, i32 %28, i32 0
  store i32 %39, i32* %11, align 8
  %40 = icmp sgt i32 %37, 0
  %41 = select i1 %40, i32 %37, i32 0
  store i32 %41, i32* %12, align 4
  %42 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36
  %43 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1
  %44 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 1, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, %39
  %47 = lshr i64 %20, 32
  %48 = trunc i64 %47 to i32
  br i1 %46, label %49, label %53

49:                                               ; preds = %2
  %50 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 1, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp ne i32 %51, %41
  br label %53

53:                                               ; preds = %2, %49
  %54 = phi i1 [ true, %2 ], [ %52, %49 ]
  %55 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %42, i64 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %21
  br i1 %57, label %58, label %62

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = icmp ne i32 %60, %48
  br label %62

62:                                               ; preds = %53, %58
  %63 = phi i1 [ true, %53 ], [ %61, %58 ]
  %64 = bitcast %"struct.x11::ConfigureWindowRequest"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %64) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %64, i8 -86, i64 60, i1 false)
  %65 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 0
  %66 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %67 = load i32, i32* %66, align 8
  store i32 %67, i32* %65, align 4
  %68 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 1
  %69 = getelementptr inbounds %"class.absl::optional.388", %"class.absl::optional.388"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %69, align 4
  %70 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 2
  %71 = getelementptr inbounds %"class.absl::optional.388", %"class.absl::optional.388"* %70, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %71, align 4
  %72 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %72, align 4
  %73 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %73, align 4
  %74 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %74, align 4
  %75 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %75, align 4
  %76 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %76, align 4
  br i1 %54, label %77, label %156

77:                                               ; preds = %62
  %78 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 67, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %78) #17
  %79 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 67, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %79) #17
  tail call void @_ZN2ui9X11Window19UpdateMinAndMaxSizeEv(%"class.ui::X11Window"* %0)
  %80 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 56
  %81 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %80, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp slt i32 %39, %82
  br i1 %83, label %100, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 56, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp slt i32 %41, %86
  br i1 %87, label %100, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 57, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %140, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 57, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %140, label %96

96:                                               ; preds = %92
  %97 = icmp sgt i32 %39, %90
  %98 = icmp sgt i32 %41, %94
  %99 = or i1 %97, %98
  br i1 %99, label %100, label %140

100:                                              ; preds = %96, %84, %77
  %101 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #17
  %102 = bitcast i64* %6 to i32*
  %103 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %7, i64 0, i32 1
  %104 = bitcast %"class.gfx::Size"* %43 to i64*
  %105 = load i64, i64* %104, align 8
  store i64 %105, i64* %6, align 8
  %106 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 57
  %107 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %115, label %110

110:                                              ; preds = %100
  %111 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 57, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %115, label %114

114:                                              ; preds = %110
  call void @_ZN3gfx4Size8SetToMinERKS0_(%"class.gfx::Size"* nonnull %7, %"class.gfx::Size"* dereferenceable(8) %106) #17
  br label %115

115:                                              ; preds = %110, %114, %100
  call void @_ZN3gfx4Size8SetToMaxERKS0_(%"class.gfx::Size"* nonnull %7, %"class.gfx::Size"* dereferenceable(8) %80) #17
  %116 = load i32, i32* %102, align 8
  %117 = load i32, i32* %9, align 8
  %118 = icmp sgt i32 %117, 0
  %119 = icmp sgt i32 %116, 0
  %120 = and i1 %119, %118
  %121 = sub nuw nsw i32 2147483647, %117
  %122 = icmp ult i32 %121, %116
  %123 = and i1 %122, %120
  %124 = select i1 %123, i32 %121, i32 %116
  %125 = icmp sgt i32 %124, 0
  %126 = select i1 %125, i32 %124, i32 0
  store i32 %126, i32* %11, align 8
  %127 = load i32, i32* %103, align 4
  %128 = load i32, i32* %10, align 4
  %129 = icmp sgt i32 %128, 0
  %130 = icmp sgt i32 %127, 0
  %131 = and i1 %130, %129
  %132 = sub nuw nsw i32 2147483647, %128
  %133 = icmp ult i32 %132, %127
  %134 = and i1 %133, %131
  %135 = select i1 %134, i32 %132, i32 %127
  %136 = icmp sgt i32 %135, 0
  %137 = select i1 %136, i32 %135, i32 0
  store i32 %137, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #17
  %138 = load i8, i8* %72, align 4, !range !2
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %140, label %145

140:                                              ; preds = %96, %92, %88, %115
  %141 = phi i32 [ %126, %115 ], [ %39, %88 ], [ %39, %92 ], [ %39, %96 ]
  %142 = phi i32 [ %137, %115 ], [ %41, %88 ], [ %41, %92 ], [ %41, %96 ]
  %143 = phi i32 [ %117, %115 ], [ %21, %88 ], [ %21, %92 ], [ %21, %96 ]
  %144 = phi i32 [ %128, %115 ], [ %48, %88 ], [ %48, %92 ], [ %48, %96 ]
  store i8 1, i8* %72, align 4
  br label %145

145:                                              ; preds = %115, %140
  %146 = phi i32 [ %126, %115 ], [ %141, %140 ]
  %147 = phi i32 [ %137, %115 ], [ %142, %140 ]
  %148 = phi i32 [ %117, %115 ], [ %143, %140 ]
  %149 = phi i32 [ %128, %115 ], [ %144, %140 ]
  %150 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %146, i32* %150, align 4
  %151 = load i8, i8* %73, align 4, !range !2
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %145
  store i8 1, i8* %73, align 4
  br label %154

154:                                              ; preds = %145, %153
  %155 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %147, i32* %155, align 4
  br label %156

156:                                              ; preds = %154, %62
  %157 = phi i32 [ %149, %154 ], [ %48, %62 ]
  %158 = phi i32 [ %148, %154 ], [ %21, %62 ]
  br i1 %63, label %159, label %168

159:                                              ; preds = %156
  %160 = bitcast %"class.absl::optional.388"* %68 to i64*
  %161 = zext i32 %158 to i64
  %162 = shl nuw i64 %161, 32
  %163 = or i64 %162, 1
  store i64 %163, i64* %160, align 4
  %164 = bitcast %"class.absl::optional.388"* %70 to i64*
  %165 = zext i32 %157 to i64
  %166 = shl nuw i64 %165, 32
  %167 = or i64 %166, 1
  store i64 %167, i64* %164, align 4
  br label %169

168:                                              ; preds = %156
  br i1 %54, label %169, label %177

169:                                              ; preds = %159, %168
  %170 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %171 = bitcast %"class.x11::Connection"** %170 to %"class.x11::XProto"**
  %172 = load %"class.x11::XProto"*, %"class.x11::XProto"** %171, align 8
  %173 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto15ConfigureWindowERKNS_22ConfigureWindowRequestE(%"class.x11::XProto"* %172, %"struct.x11::ConfigureWindowRequest"* nonnull dereferenceable(60) %5) #17
  %174 = icmp eq %"class.x11::Connection::FutureImpl"* %173, null
  br i1 %174, label %177, label %175

175:                                              ; preds = %169
  %176 = bitcast %"class.x11::Connection::FutureImpl"* %173 to i8*
  call void @_ZdlPv(i8* %176) #18
  br label %177

177:                                              ; preds = %175, %169, %168
  %178 = bitcast %"class.gfx::Rect"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %178, i8* nonnull align 8 %8, i64 16, i1 false)
  call void @_ZN2ui9X11Window17ResetWindowRegionEv(%"class.ui::X11Window"* %0)
  %179 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %180 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %179, align 8
  %181 = bitcast %"struct.ui::PlatformWindowDelegate::BoundsChange"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %181) #17
  call void @_ZN2ui22PlatformWindowDelegate12BoundsChangeC1ERKN3gfx4RectE(%"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull %3, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #17
  %182 = bitcast %"class.ui::PlatformWindowDelegate"* %180 to void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)***
  %183 = load void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)**, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*** %182, align 8
  %184 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)** %183, i64 2
  %185 = load void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)** %184, align 8
  call void %185(%"class.ui::PlatformWindowDelegate"* %180, %"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull dereferenceable(16) %3) #17
  call void @_ZN2ui22PlatformWindowDelegate12BoundsChangeD1Ev(%"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %181) #17
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %64) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui9X11Window20AdjustSizeForDisplayERKN3gfx4SizeE(%"class.ui::X11Window"* nocapture readnone, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.703", align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.gfx::Size"*
  %6 = alloca %"class.gfx::Size", align 4
  %7 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #17
  %8 = icmp eq %"class.display::Screen"* %7, null
  br i1 %8, label %95, label %9

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZN2ui31UseTestConfigForPlatformWindowsEv() #17
  br i1 %10, label %95, label %11

11:                                               ; preds = %9
  %12 = bitcast %"class.std::__1::vector.703"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.std::__1::vector.703", %"class.std::__1::vector.703"* %3, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector.703", %"class.std::__1::vector.703"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.display::Screen"* %7 to %"class.std::__1::vector.703"* (%"class.display::Screen"*)***
  %16 = bitcast %"class.std::__1::vector.703"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  %17 = load %"class.std::__1::vector.703"* (%"class.display::Screen"*)**, %"class.std::__1::vector.703"* (%"class.display::Screen"*)*** %15, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.703"* (%"class.display::Screen"*)*, %"class.std::__1::vector.703"* (%"class.display::Screen"*)** %17, i64 7
  %19 = load %"class.std::__1::vector.703"* (%"class.display::Screen"*)*, %"class.std::__1::vector.703"* (%"class.display::Screen"*)** %18, align 8
  %20 = tail call dereferenceable(24) %"class.std::__1::vector.703"* %19(%"class.display::Screen"* nonnull %7) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #17
  %21 = getelementptr inbounds %"class.std::__1::vector.703", %"class.std::__1::vector.703"* %20, i64 0, i32 0, i32 1
  %22 = bitcast %"class.display::Display"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.703"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = sdiv exact i64 %26, 568
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #17
  br label %95

30:                                               ; preds = %11
  %31 = icmp ugt i64 %27, 32476662101601323
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector.703"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %33) #19
  unreachable

34:                                               ; preds = %30
  %35 = tail call i8* @_Znwm(i64 %26) #18
  %36 = bitcast i8* %35 to %"class.display::Display"*
  %37 = bitcast %"class.display::Display"** %13 to i8**
  store i8* %35, i8** %37, align 8
  %38 = bitcast %"class.std::__1::vector.703"* %3 to i8**
  store i8* %35, i8** %38, align 8
  %39 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %36, i64 %27
  store %"class.display::Display"* %39, %"class.display::Display"** %14, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector.703", %"class.std::__1::vector.703"* %20, i64 0, i32 0, i32 0
  %41 = load %"class.display::Display"*, %"class.display::Display"** %40, align 8
  %42 = load %"class.display::Display"*, %"class.display::Display"** %21, align 8
  %43 = bitcast %"class.display::Display"** %13 to i64*
  %44 = ptrtoint i8* %35 to i64
  %45 = icmp eq %"class.display::Display"* %41, %42
  br i1 %45, label %54, label %46

46:                                               ; preds = %34, %46
  %47 = phi %"class.display::Display"* [ %50, %46 ], [ %36, %34 ]
  %48 = phi %"class.display::Display"* [ %49, %46 ], [ %41, %34 ]
  tail call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* %47, %"class.display::Display"* dereferenceable(568) %48) #17
  %49 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %48, i64 1
  %50 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %47, i64 1
  %51 = icmp eq %"class.display::Display"* %49, %42
  br i1 %51, label %52, label %46

52:                                               ; preds = %46
  %53 = ptrtoint %"class.display::Display"* %50 to i64
  br label %54

54:                                               ; preds = %34, %52
  %55 = phi i64 [ %44, %34 ], [ %53, %52 ]
  store i64 %55, i64* %43, align 8
  %56 = inttoptr i64 %55 to %"class.display::Display"*
  %57 = icmp eq %"class.display::Display"* %36, %56
  br i1 %57, label %84, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %60 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  br label %61

61:                                               ; preds = %58, %72
  %62 = phi %"class.display::Display"* [ %36, %58 ], [ %73, %72 ]
  %63 = tail call i64 @_ZNK7display7Display14GetSizeInPixelEv(%"class.display::Display"* %62) #17
  %64 = trunc i64 %63 to i32
  %65 = load i32, i32* %59, align 4
  %66 = icmp eq i32 %65, %64
  br i1 %66, label %67, label %72

67:                                               ; preds = %61
  %68 = lshr i64 %63, 32
  %69 = trunc i64 %68 to i32
  %70 = load i32, i32* %60, align 4
  %71 = icmp eq i32 %70, %69
  br i1 %71, label %75, label %72

72:                                               ; preds = %61, %67
  %73 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %62, i64 1
  %74 = icmp eq %"class.display::Display"* %73, %56
  br i1 %74, label %84, label %61

75:                                               ; preds = %67
  %76 = trunc i64 %63 to i32
  %77 = trunc i64 %68 to i32
  %78 = icmp sgt i32 %76, 1
  %79 = add i64 %63, 4294967295
  %80 = select i1 %78, i64 %79, i64 4294967296
  %81 = icmp sgt i32 %77, 1
  %82 = add nuw nsw i64 %68, 4294967295
  %83 = select i1 %81, i64 %82, i64 4294967296
  br label %84

84:                                               ; preds = %72, %75, %54
  %85 = phi i64 [ 0, %54 ], [ %83, %75 ], [ 0, %72 ]
  %86 = phi i64 [ 0, %54 ], [ %80, %75 ], [ 0, %72 ]
  %87 = phi i32 [ 0, %54 ], [ 1, %75 ], [ 0, %72 ]
  %88 = icmp eq %"class.display::Display"* %56, %36
  br i1 %88, label %93, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.display::Display"* [ %91, %89 ], [ %56, %84 ]
  %91 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %90, i64 -1
  tail call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* %91) #17
  %92 = icmp eq %"class.display::Display"* %91, %36
  br i1 %92, label %93, label %89

93:                                               ; preds = %89, %84
  tail call void @_ZdlPv(i8* nonnull %35) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #17
  %94 = icmp eq i32 %87, 0
  br i1 %94, label %95, label %104

95:                                               ; preds = %29, %2, %93, %9
  %96 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #17
  %97 = bitcast %"class.gfx::Size"* %1 to i64*
  %98 = load i64, i64* %97, align 4
  store i64 %98, i64* %4, align 8
  %99 = bitcast %"class.gfx::Size"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #17
  %100 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %6, i64 0, i32 0
  store i32 1, i32* %100, align 4
  %101 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %6, i64 0, i32 1
  store i32 1, i32* %101, align 4
  call void @_ZN3gfx4Size8SetToMaxERKS0_(%"class.gfx::Size"* nonnull %5, %"class.gfx::Size"* nonnull dereferenceable(8) %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #17
  %102 = load i64, i64* %4, align 8
  %103 = lshr i64 %102, 32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #17
  br label %104

104:                                              ; preds = %93, %95
  %105 = phi i64 [ %102, %95 ], [ %86, %93 ]
  %106 = phi i64 [ %103, %95 ], [ %85, %93 ]
  %107 = shl i64 %106, 32
  %108 = and i64 %105, 4294967295
  %109 = or i64 %107, %108
  ret i64 %109
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window19UpdateMinAndMaxSizeEv(%"class.ui::X11Window"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::optional_internal::optional_data_dtor_base.655", align 8
  %3 = alloca %"class.absl::optional_internal::optional_data_dtor_base.655", align 8
  %4 = alloca %"struct.ui::SizeHints", align 4
  %5 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.655", %"class.absl::optional_internal::optional_data_dtor_base.655"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5)
  %6 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %7 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %6, align 8
  %8 = bitcast %"class.ui::PlatformWindowDelegate"* %7 to { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)***
  %9 = load { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)**, { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)*** %8, align 8
  %10 = getelementptr inbounds { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)*, { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)** %9, i64 13
  %11 = load { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)*, { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)** %10, align 8
  %12 = tail call { i64, i32 } %11(%"class.ui::PlatformWindowDelegate"* %7) #17
  %13 = extractvalue { i64, i32 } %12, 0
  %14 = extractvalue { i64, i32 } %12, 1
  %15 = bitcast %"class.absl::optional_internal::optional_data_dtor_base.655"* %2 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.655", %"class.absl::optional_internal::optional_data_dtor_base.655"* %2, i64 0, i32 1, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.655", %"class.absl::optional_internal::optional_data_dtor_base.655"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17)
  %18 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %6, align 8
  %19 = bitcast %"class.ui::PlatformWindowDelegate"* %18 to { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)***
  %20 = load { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)**, { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)*** %19, align 8
  %21 = getelementptr inbounds { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)*, { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)** %20, i64 14
  %22 = load { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)*, { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)** %21, align 8
  %23 = tail call { i64, i32 } %22(%"class.ui::PlatformWindowDelegate"* %18) #17
  %24 = extractvalue { i64, i32 } %23, 0
  %25 = extractvalue { i64, i32 } %23, 1
  %26 = bitcast %"class.absl::optional_internal::optional_data_dtor_base.655"* %3 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.655", %"class.absl::optional_internal::optional_data_dtor_base.655"* %3, i64 0, i32 1, i32 0, i32 1
  store i32 %25, i32* %27, align 8
  %28 = trunc i64 %13 to i8
  %29 = icmp eq i8 %28, 0
  %30 = trunc i64 %24 to i8
  %31 = lshr i64 %24, 32
  %32 = trunc i64 %31 to i32
  br i1 %29, label %43, label %33

33:                                               ; preds = %1
  %34 = lshr i64 %13, 32
  %35 = trunc i64 %34 to i32
  %36 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 56, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, %35
  br i1 %38, label %39, label %61

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 56, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, %14
  br i1 %42, label %43, label %61

43:                                               ; preds = %1, %39
  %44 = icmp eq i8 %30, 0
  br i1 %44, label %117, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 57, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, %32
  br i1 %48, label %49, label %53

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 57, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %25
  br i1 %52, label %117, label %53

53:                                               ; preds = %45, %49
  br i1 %29, label %60, label %54

54:                                               ; preds = %53
  %55 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 56
  %56 = bitcast %"class.gfx::Size"* %55 to i64*
  %57 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.655", %"class.absl::optional_internal::optional_data_dtor_base.655"* %2, i64 0, i32 1
  %58 = bitcast %union.anon.656* %57 to i64*
  %59 = load i64, i64* %58, align 4
  store i64 %59, i64* %56, align 4
  br label %69

60:                                               ; preds = %53
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #19
  unreachable

61:                                               ; preds = %33, %39
  %62 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 56
  %63 = bitcast %"class.gfx::Size"* %62 to i64*
  %64 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.655", %"class.absl::optional_internal::optional_data_dtor_base.655"* %2, i64 0, i32 1
  %65 = bitcast %union.anon.656* %64 to i64*
  %66 = load i64, i64* %65, align 4
  store i64 %66, i64* %63, align 4
  %67 = icmp eq i8 %30, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %61
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #19
  unreachable

69:                                               ; preds = %54, %61
  %70 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 57
  %71 = bitcast %"class.gfx::Size"* %70 to i64*
  %72 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.655", %"class.absl::optional_internal::optional_data_dtor_base.655"* %3, i64 0, i32 1
  %73 = bitcast %union.anon.656* %72 to i64*
  %74 = load i64, i64* %73, align 4
  store i64 %74, i64* %71, align 4
  %75 = bitcast %"struct.ui::SizeHints"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %75) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %75, i8 0, i64 72, i1 false)
  %76 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %77 = load i32, i32* %76, align 8
  %78 = call zeroext i1 @_ZN2ui16GetWmNormalHintsEN3x116WindowEPNS_9SizeHintsE(i32 %77, %"struct.ui::SizeHints"* nonnull %4) #17
  %79 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 56, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %69
  %83 = getelementptr inbounds %"struct.ui::SizeHints", %"struct.ui::SizeHints"* %4, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br label %91

85:                                               ; preds = %69
  %86 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 56, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"struct.ui::SizeHints", %"struct.ui::SizeHints"* %4, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %95

91:                                               ; preds = %82, %85
  %92 = phi i32 [ %84, %82 ], [ %90, %85 ]
  %93 = phi i32* [ %83, %82 ], [ %89, %85 ]
  %94 = and i32 %92, -17
  store i32 %94, i32* %93, align 4
  br label %99

95:                                               ; preds = %85
  %96 = or i32 %90, 16
  store i32 %96, i32* %89, align 4
  %97 = getelementptr inbounds %"struct.ui::SizeHints", %"struct.ui::SizeHints"* %4, i64 0, i32 5
  store i32 %80, i32* %97, align 4
  %98 = getelementptr inbounds %"struct.ui::SizeHints", %"struct.ui::SizeHints"* %4, i64 0, i32 6
  store i32 %87, i32* %98, align 4
  br label %99

99:                                               ; preds = %95, %91
  %100 = phi i32 [ %96, %95 ], [ %94, %91 ]
  %101 = phi i32* [ %89, %95 ], [ %93, %91 ]
  %102 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %70, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %109, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 57, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %99, %105
  %110 = and i32 %100, -33
  store i32 %110, i32* %101, align 4
  br label %115

111:                                              ; preds = %105
  %112 = or i32 %100, 32
  store i32 %112, i32* %101, align 4
  %113 = getelementptr inbounds %"struct.ui::SizeHints", %"struct.ui::SizeHints"* %4, i64 0, i32 7
  store i32 %103, i32* %113, align 4
  %114 = getelementptr inbounds %"struct.ui::SizeHints", %"struct.ui::SizeHints"* %4, i64 0, i32 8
  store i32 %107, i32* %114, align 4
  br label %115

115:                                              ; preds = %111, %109
  %116 = load i32, i32* %76, align 8
  call void @_ZN2ui16SetWmNormalHintsEN3x116WindowERKNS_9SizeHintsE(i32 %116, %"struct.ui::SizeHints"* nonnull dereferenceable(72) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %75) #17
  br label %117

117:                                              ; preds = %43, %49, %115
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5)
  ret void
}

declare void @_ZN3gfx4Size8SetToMinERKS0_(%"class.gfx::Size"*, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3gfx4Size8SetToMaxERKS0_(%"class.gfx::Size"*, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto15ConfigureWindowERKNS_22ConfigureWindowRequestE(%"class.x11::XProto"*, %"struct.x11::ConfigureWindowRequest"* dereferenceable(60)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window17ResetWindowRegionEv(%"class.ui::X11Window"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %class.SkPath, align 8
  %4 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 59
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = tail call zeroext i1 @_ZNK2ui9X11Window11IsMaximizedEv(%"class.ui::X11Window"* %0)
  br i1 %8, label %42, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30
  %11 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #17
  %12 = tail call i8* @_Znwm(i64 32) #18
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast i64* %14 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %15, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.33, i64 0, i64 0), i64 24, i1 false) #17
  %16 = getelementptr inbounds i8, i8* %12, i64 24
  store i8 0, i8* %16, align 1
  %17 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #17
  %18 = call zeroext i1 @_ZN2ui17HasWMSpecPropertyERKN4base8internal9flat_treeIN3x114AtomENS0_8identityENSt3__14lessIvEENS6_6vectorIS4_NS6_9allocatorIS4_EEEEEES4_(%"class.base::internal::flat_tree.378"* dereferenceable(24) %10, i32 %17) #17
  %19 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %9
  %24 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %24) #18
  br label %25

25:                                               ; preds = %9, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #17
  br i1 %18, label %42, label %26

26:                                               ; preds = %25
  %27 = bitcast %class.SkPath* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #17
  %28 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %29 = bitcast %class.SkPath* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 16, i1 false)
  %30 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %28, align 8, !noalias !20
  %31 = bitcast %"class.ui::PlatformWindowDelegate"* %30 to void (%class.SkPath*, %"class.ui::PlatformWindowDelegate"*)***
  %32 = load void (%class.SkPath*, %"class.ui::PlatformWindowDelegate"*)**, void (%class.SkPath*, %"class.ui::PlatformWindowDelegate"*)*** %31, align 8, !noalias !20
  %33 = getelementptr inbounds void (%class.SkPath*, %"class.ui::PlatformWindowDelegate"*)*, void (%class.SkPath*, %"class.ui::PlatformWindowDelegate"*)** %32, i64 15
  %34 = load void (%class.SkPath*, %"class.ui::PlatformWindowDelegate"*)*, void (%class.SkPath*, %"class.ui::PlatformWindowDelegate"*)** %33, align 8, !noalias !20
  call void %34(%class.SkPath* nonnull sret %3, %"class.ui::PlatformWindowDelegate"* %30) #17
  %35 = call i32 @_ZNK6SkPath11countPointsEv(%class.SkPath* nonnull %3) #17
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %26
  %38 = call %"class.std::__1::vector.396"* @_ZN3x1122CreateRegionFromSkPathERK6SkPath(%class.SkPath* nonnull dereferenceable(16) %3) #17
  %39 = ptrtoint %"class.std::__1::vector.396"* %38 to i64
  br label %40

40:                                               ; preds = %37, %26
  %41 = phi i64 [ %39, %37 ], [ 0, %26 ]
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #17
  br label %42

42:                                               ; preds = %7, %25, %40, %1
  %43 = phi i64 [ 0, %7 ], [ 0, %25 ], [ %41, %40 ], [ 0, %1 ]
  %44 = inttoptr i64 %43 to %"class.std::__1::vector.396"*
  call void @_ZN2ui9X11Window18UpdateWindowRegionENSt3__110unique_ptrINS1_6vectorIN3x119RectangleENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.ui::X11Window"* %0, %"class.std::__1::vector.396"* %44)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window22OnXWindowBoundsChangedERKN3gfx4RectE(%"class.ui::X11Window"* nocapture readonly, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::PlatformWindowDelegate::BoundsChange", align 4
  %4 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %5 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %4, align 8
  %6 = bitcast %"struct.ui::PlatformWindowDelegate::BoundsChange"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #17
  call void @_ZN2ui22PlatformWindowDelegate12BoundsChangeC1ERKN3gfx4RectE(%"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull %3, %"class.gfx::Rect"* dereferenceable(16) %1) #17
  %7 = bitcast %"class.ui::PlatformWindowDelegate"* %5 to void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)***
  %8 = load void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)**, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)** %8, i64 2
  %10 = load void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)** %9, align 8
  call void %10(%"class.ui::PlatformWindowDelegate"* %5, %"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull dereferenceable(16) %3) #17
  call void @_ZN2ui22PlatformWindowDelegate12BoundsChangeD1Ev(%"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #17
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZNK2ui9X11Window9GetBoundsEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36
  %3 = bitcast %"class.gfx::Rect"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 1
  %6 = bitcast %"class.gfx::Size"* %5 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = insertvalue { i64, i64 } undef, i64 %4, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window8SetTitleERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.ui::X11Window"*, %"class.std::__1::basic_string.379"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 33
  %8 = bitcast %"class.std::__1::basic_string.379"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = bitcast %"class.std::__1::basic_string.379"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string.379", %"class.std::__1::basic_string.379"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = icmp eq i64 %15, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %2
  %26 = bitcast %"class.std::__1::basic_string.379"* %1 to i16*
  br label %50

27:                                               ; preds = %2
  %28 = icmp eq i64 %15, 0
  br i1 %28, label %109, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.std::__1::basic_string.379", %"class.std::__1::basic_string.379"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i16*, i16** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string.379"* %1 to i16*
  %33 = select i1 %19, i16* %31, i16* %32
  %34 = getelementptr inbounds %"class.std::__1::basic_string.379", %"class.std::__1::basic_string.379"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i16*, i16** %34, align 8
  %36 = bitcast %"class.std::__1::basic_string.379"* %7 to i16*
  %37 = select i1 %11, i16* %35, i16* %36
  br label %38

38:                                               ; preds = %45, %29
  %39 = phi i64 [ %46, %45 ], [ %15, %29 ]
  %40 = phi i16* [ %48, %45 ], [ %33, %29 ]
  %41 = phi i16* [ %47, %45 ], [ %37, %29 ]
  %42 = load i16, i16* %41, align 2
  %43 = load i16, i16* %40, align 2
  %44 = icmp eq i16 %43, %42
  br i1 %44, label %45, label %50

45:                                               ; preds = %38
  %46 = add i64 %39, -1
  %47 = getelementptr inbounds i16, i16* %41, i64 1
  %48 = getelementptr inbounds i16, i16* %40, i64 1
  %49 = icmp eq i64 %46, 0
  br i1 %49, label %109, label %38

50:                                               ; preds = %38, %25
  %51 = phi i16* [ %26, %25 ], [ %32, %38 ]
  %52 = tail call dereferenceable(24) %"class.std::__1::basic_string.379"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.379"* %7, %"class.std::__1::basic_string.379"* dereferenceable(24) %1)
  %53 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #17
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  %56 = load i8, i8* %17, align 1
  %57 = icmp slt i8 %56, 0
  %58 = getelementptr inbounds %"class.std::__1::basic_string.379", %"class.std::__1::basic_string.379"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i16*, i16** %58, align 8
  %60 = select i1 %57, i16* %59, i16* %51
  %61 = load i64, i64* %20, align 8
  %62 = zext i8 %56 to i64
  %63 = select i1 %57, i64 %61, i64 %62
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %3, i16* %60, i64 %63) #17
  %64 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %65 = load i32, i32* %64, align 8
  %66 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #17
  %67 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  store i8 12, i8* %68, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i64 12, i1 false) #17
  %69 = getelementptr inbounds i8, i8* %66, i64 12
  store i8 0, i8* %69, align 4
  %70 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #17
  %71 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #17
  %72 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  store i8 11, i8* %73, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), i64 11, i1 false) #17
  %74 = getelementptr inbounds i8, i8* %71, i64 11
  store i8 0, i8* %74, align 1
  %75 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #17
  %76 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  call void @_ZN3x1117SetStringPropertyENS_6WindowENS_4AtomES1_RKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS_10ConnectionE(i32 %65, i32 %70, i32 %75, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.x11::Connection"* %76) #17
  %77 = load i8, i8* %73, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %50
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %81) #18
  br label %82

82:                                               ; preds = %50, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #17
  %83 = load i8, i8* %68, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #18
  br label %88

88:                                               ; preds = %82, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #17
  %89 = load i32, i32* %64, align 8
  %90 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #17
  %91 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  store i8 11, i8* %92, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), i64 11, i1 false) #17
  %93 = getelementptr inbounds i8, i8* %90, i64 11
  store i8 0, i8* %93, align 1
  %94 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #17
  %95 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  call void @_ZN3x1117SetStringPropertyENS_6WindowENS_4AtomES1_RKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS_10ConnectionE(i32 %89, i32 39, i32 %94, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.x11::Connection"* %95) #17
  %96 = load i8, i8* %92, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  call void @_ZdlPv(i8* %100) #18
  br label %101

101:                                              ; preds = %88, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #17
  %102 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %101
  %107 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %107) #18
  br label %108

108:                                              ; preds = %101, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #17
  br label %109

109:                                              ; preds = %45, %27, %108
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.379"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.379"*, %"class.std::__1::basic_string.379"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.379"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.379"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.379"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.379"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.379"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.379", %"class.std::__1::basic_string.379"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.379", %"class.std::__1::basic_string.379"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.379"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.379"*
  %35 = icmp ugt %"class.std::__1::basic_string.379"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !23
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !23
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !26, !noalias !23
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !26, !noalias !23
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !23
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !23
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !26, !noalias !23
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !26, !noalias !23
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !23
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !23
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !26, !noalias !23
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !26, !noalias !23
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !23
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !23
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !26, !noalias !23
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !26, !noalias !23
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !28

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !23
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !23
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !26, !noalias !23
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !26, !noalias !23
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !29

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !30

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !31

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.379"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #19
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #19
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #18
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !32
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !32
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !35, !noalias !32
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !35, !noalias !32
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !32
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !32
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !35, !noalias !32
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !35, !noalias !32
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !32
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !32
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !35, !noalias !32
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !35, !noalias !32
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !32
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !32
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !35, !noalias !32
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !35, !noalias !32
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !37

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !32
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !32
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !35, !noalias !32
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !35, !noalias !32
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !38

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !39

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !40

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.379"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.379", %"class.std::__1::basic_string.379"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.379", %"class.std::__1::basic_string.379"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.379", %"class.std::__1::basic_string.379"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.379", %"class.std::__1::basic_string.379"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.379"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.379", %"class.std::__1::basic_string.379"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.379", %"class.std::__1::basic_string.379"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.379", %"class.std::__1::basic_string.379"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !41
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !41
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !44, !noalias !41
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !44, !noalias !41
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !41
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !41
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !44, !noalias !41
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !44, !noalias !41
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !41
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !41
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !44, !noalias !41
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !44, !noalias !41
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !41
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !41
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !44, !noalias !41
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !44, !noalias !41
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !46

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !41
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !41
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !44, !noalias !41
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !44, !noalias !41
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !47

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !48

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !49

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.379", %"class.std::__1::basic_string.379"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.379"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #17
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.379"* %0
}

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window10SetCaptureEv(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.ui::X11Window"* %0 to i1 (%"class.ui::X11Window"*)***
  %3 = load i1 (%"class.ui::X11Window"*)**, i1 (%"class.ui::X11Window"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.ui::X11Window"*)*, i1 (%"class.ui::X11Window"*)** %3, i64 13
  %5 = load i1 (%"class.ui::X11Window"*)*, i1 (%"class.ui::X11Window"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.ui::X11Window"* %0) #17
  br i1 %6, label %17, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.ui::X11WindowManager"* @_ZN2ui16X11WindowManager11GetInstanceEv() #17
  tail call void @_ZN2ui16X11WindowManager10GrabEventsEPNS_9X11WindowE(%"class.ui::X11WindowManager"* %8, %"class.ui::X11Window"* %0) #17
  %9 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %10 = load i32, i32* %9, align 8
  %11 = tail call i32 @_ZN2ui11GrabPointerEN3x116WindowEb13scoped_refptrINS_9X11CursorEE(i32 %10, i1 zeroext true, %"class.ui::X11Cursor"* null) #17
  %12 = icmp eq i32 %11, 0
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 41
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = or i8 %15, %13
  store i8 %16, i8* %14, align 1
  br label %17

17:                                               ; preds = %1, %7
  ret void
}

declare void @_ZN2ui16X11WindowManager10GrabEventsEPNS_9X11WindowE(%"class.ui::X11WindowManager"*, %"class.ui::X11Window"*) local_unnamed_addr #1

declare i32 @_ZN2ui11GrabPointerEN3x116WindowEb13scoped_refptrINS_9X11CursorEE(i32, i1 zeroext, %"class.ui::X11Cursor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window14ReleaseCaptureEv(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.ui::X11Window"* %0 to i1 (%"class.ui::X11Window"*)***
  %3 = load i1 (%"class.ui::X11Window"*)**, i1 (%"class.ui::X11Window"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.ui::X11Window"*)*, i1 (%"class.ui::X11Window"*)** %3, i64 13
  %5 = load i1 (%"class.ui::X11Window"*)*, i1 (%"class.ui::X11Window"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.ui::X11Window"* %0) #17
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  tail call void @_ZN2ui13UngrabPointerEv() #17
  %8 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 41
  store i8 0, i8* %8, align 1
  %9 = tail call %"class.ui::X11WindowManager"* @_ZN2ui16X11WindowManager11GetInstanceEv() #17
  tail call void @_ZN2ui16X11WindowManager12UngrabEventsEPNS_9X11WindowE(%"class.ui::X11WindowManager"* %9, %"class.ui::X11Window"* %0) #17
  br label %10

10:                                               ; preds = %1, %7
  ret void
}

declare void @_ZN2ui13UngrabPointerEv() local_unnamed_addr #1

declare void @_ZN2ui16X11WindowManager12UngrabEventsEPNS_9X11WindowE(%"class.ui::X11WindowManager"*, %"class.ui::X11Window"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui9X11Window10HasCaptureEv(%"class.ui::X11Window"* readnone) unnamed_addr #0 align 2 {
  %2 = tail call %"class.ui::X11WindowManager"* @_ZN2ui16X11WindowManager11GetInstanceEv() #17
  %3 = getelementptr inbounds %"class.ui::X11WindowManager", %"class.ui::X11WindowManager"* %2, i64 0, i32 0
  %4 = load %"class.ui::X11Window"*, %"class.ui::X11Window"** %3, align 8
  %5 = icmp eq %"class.ui::X11Window"* %4, %0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window16ToggleFullscreenEv(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.gfx::Rect"*
  %6 = alloca %"class.display::Display", align 8
  %7 = alloca %"struct.ui::PlatformWindowDelegate::BoundsChange", align 4
  %8 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = icmp ne i32 %9, 4
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 67, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %12) #17
  %13 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 67, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %13) #17
  br label %28

14:                                               ; preds = %1
  %15 = tail call zeroext i1 @_ZNK2ui9X11Window11IsMaximizedEv(%"class.ui::X11Window"* %0)
  br i1 %15, label %16, label %24

16:                                               ; preds = %14
  %17 = tail call i32 @_ZN2ui18GuessWindowManagerEv() #17
  %18 = icmp eq i32 %17, 12
  br i1 %18, label %19, label %24

19:                                               ; preds = %16
  %20 = bitcast %"class.ui::X11Window"* %0 to void (%"class.ui::X11Window"*)***
  %21 = load void (%"class.ui::X11Window"*)**, void (%"class.ui::X11Window"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.ui::X11Window"*)*, void (%"class.ui::X11Window"*)** %21, i64 17
  %23 = load void (%"class.ui::X11Window"*)*, void (%"class.ui::X11Window"*)** %22, align 8
  tail call void %23(%"class.ui::X11Window"* %0) #17
  br label %24

24:                                               ; preds = %16, %19, %14
  %25 = phi i1 [ false, %14 ], [ true, %19 ], [ false, %16 ]
  %26 = tail call zeroext i1 @_ZNK2ui9X11Window11IsMaximizedEv(%"class.ui::X11Window"* %0)
  %27 = select i1 %26, i32 1, i32 3
  br label %28

28:                                               ; preds = %11, %24
  %29 = phi i1 [ %25, %24 ], [ false, %11 ]
  %30 = phi i32 [ %27, %24 ], [ 4, %11 ]
  %31 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30
  %32 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #17
  %33 = tail call i8* @_Znwm(i64 32) #18
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %33, i8** %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast i64* %35 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %36, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %33, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.33, i64 0, i64 0), i64 24, i1 false) #17
  %37 = getelementptr inbounds i8, i8* %33, i64 24
  store i8 0, i8* %37, align 1
  %38 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #17
  %39 = call zeroext i1 @_ZN2ui17HasWMSpecPropertyERKN4base8internal9flat_treeIN3x114AtomENS0_8identityENSt3__14lessIvEENS6_6vectorIS4_NS6_9allocatorIS4_EEEEEES4_(%"class.base::internal::flat_tree.378"* dereferenceable(24) %31, i32 %38) #17
  %40 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %28
  %45 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %45) #18
  br label %46

46:                                               ; preds = %28, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  store i32 %30, i32* %8, align 8
  %47 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #17
  %48 = call i8* @_Znwm(i64 32) #18
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %48, i8** %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = bitcast i64* %50 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %51, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %48, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.33, i64 0, i64 0), i64 24, i1 false) #17
  %52 = getelementptr inbounds i8, i8* %48, i64 24
  store i8 0, i8* %52, align 1
  %53 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #17
  call void @_ZN2ui9X11Window14SetWMSpecStateEbN3x114AtomES2_(%"class.ui::X11Window"* %0, i1 zeroext %10, i32 %53, i32 0) #17
  %54 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %46
  %59 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %59) #18
  br label %60

60:                                               ; preds = %46, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #17
  br i1 %29, label %61, label %66

61:                                               ; preds = %60
  %62 = bitcast %"class.ui::X11Window"* %0 to void (%"class.ui::X11Window"*)***
  %63 = load void (%"class.ui::X11Window"*)**, void (%"class.ui::X11Window"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.ui::X11Window"*)*, void (%"class.ui::X11Window"*)** %63, i64 15
  %65 = load void (%"class.ui::X11Window"*)*, void (%"class.ui::X11Window"*)** %64, align 8
  call void %65(%"class.ui::X11Window"* %0) #17
  br label %66

66:                                               ; preds = %61, %60
  %67 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #17
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %69 = bitcast %"class.ui::X11Window"* %0 to { i64, i64 } (%"class.ui::X11Window"*)***
  %70 = load { i64, i64 } (%"class.ui::X11Window"*)**, { i64, i64 } (%"class.ui::X11Window"*)*** %69, align 8
  %71 = getelementptr inbounds { i64, i64 } (%"class.ui::X11Window"*)*, { i64, i64 } (%"class.ui::X11Window"*)** %70, i64 9
  %72 = load { i64, i64 } (%"class.ui::X11Window"*)*, { i64, i64 } (%"class.ui::X11Window"*)** %71, align 8
  %73 = call { i64, i64 } %72(%"class.ui::X11Window"* %0) #17
  %74 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %75 = extractvalue { i64, i64 } %73, 0
  store i64 %75, i64* %74, align 8
  %76 = extractvalue { i64, i64 } %73, 1
  store i64 %76, i64* %68, align 8
  br i1 %10, label %77, label %120

77:                                               ; preds = %66
  %78 = bitcast i64* %68 to i32*
  %79 = call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #17
  %80 = bitcast %"class.display::Display"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %80) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %80, i8* align 8 bitcast ({ i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon.516 } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.521 } } } } }, i32, i32, i8, [3 x i8], i32 }* @__const._ZN2ui9X11Window36ConvertEventLocationToTargetLocationERKN3gfx4RectES4_PNS_12LocatedEventE.display_window_current to i8*), i64 568, i1 false)
  %81 = bitcast %"class.display::Screen"* %79 to void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)***
  %82 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)** %82, i64 11
  %84 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)** %83, align 8
  call void %84(%"class.display::Display"* nonnull sret %6, %"class.display::Screen"* %79, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #17
  %85 = bitcast %"class.ui::X11Window"* %0 to void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)***
  %86 = load void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)**, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)** %86, i64 26
  %88 = load void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)** %87, align 8
  call void %88(%"class.ui::X11Window"* %0, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #17
  %89 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %6, i64 0, i32 1, i32 0
  %90 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %6, i64 0, i32 4
  %91 = load float, float* %90, align 8
  %92 = call i64 @_ZN3gfx19ScaleToFlooredPointERKNS_5PointEf(%"class.gfx::Point"* dereferenceable(8) %89, float %91) #17
  %93 = trunc i64 %92 to i32
  %94 = lshr i64 %92, 32
  %95 = trunc i64 %94 to i32
  %96 = call i64 @_ZNK7display7Display14GetSizeInPixelEv(%"class.display::Display"* nonnull %6) #17
  %97 = trunc i64 %96 to i32
  %98 = lshr i64 %96, 32
  %99 = trunc i64 %98 to i32
  %100 = icmp sgt i32 %93, 0
  %101 = icmp sgt i32 %97, 0
  %102 = and i1 %100, %101
  %103 = sub nuw nsw i32 2147483647, %93
  %104 = icmp ult i32 %103, %97
  %105 = and i1 %104, %102
  %106 = select i1 %105, i32 %103, i32 %97
  %107 = icmp sgt i32 %95, 0
  %108 = icmp sgt i32 %99, 0
  %109 = and i1 %107, %108
  %110 = sub nuw nsw i32 2147483647, %95
  %111 = icmp ult i32 %110, %99
  %112 = and i1 %111, %109
  %113 = select i1 %112, i32 %110, i32 %99
  %114 = icmp sgt i32 %106, 0
  %115 = select i1 %114, i32 %106, i32 0
  %116 = icmp sgt i32 %113, 0
  %117 = select i1 %116, i32 %113, i32 0
  store i64 %92, i64* %74, align 8
  store i32 %115, i32* %78, align 8
  %118 = getelementptr inbounds i8, i8* %67, i64 12
  %119 = bitcast i8* %118 to i32*
  store i32 %117, i32* %119, align 4
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %80) #17
  br label %133

120:                                              ; preds = %66
  br i1 %39, label %121, label %128

121:                                              ; preds = %120
  %122 = load { i64, i64 } (%"class.ui::X11Window"*)**, { i64, i64 } (%"class.ui::X11Window"*)*** %69, align 8
  %123 = getelementptr inbounds { i64, i64 } (%"class.ui::X11Window"*)*, { i64, i64 } (%"class.ui::X11Window"*)** %122, i64 27
  %124 = load { i64, i64 } (%"class.ui::X11Window"*)*, { i64, i64 } (%"class.ui::X11Window"*)** %123, align 8
  %125 = call { i64, i64 } %124(%"class.ui::X11Window"* %0) #17
  %126 = extractvalue { i64, i64 } %125, 0
  %127 = extractvalue { i64, i64 } %125, 1
  store i64 %126, i64* %74, align 8
  store i64 %127, i64* %68, align 8
  br label %133

128:                                              ; preds = %120
  %129 = bitcast %"class.ui::X11Window"* %0 to void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)***
  %130 = load void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)**, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)** %130, i64 26
  %132 = load void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)** %131, align 8
  call void %132(%"class.ui::X11Window"* %0, %"class.gfx::Rect"* nonnull dereferenceable(16) @.ref.tmp) #17
  br label %133

133:                                              ; preds = %121, %128, %77
  %134 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36
  %135 = bitcast %"class.gfx::Rect"* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %135, i8* nonnull align 8 %67, i64 16, i1 false)
  %136 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %137 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %136, align 8
  %138 = bitcast %"struct.ui::PlatformWindowDelegate::BoundsChange"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #17
  call void @_ZN2ui22PlatformWindowDelegate12BoundsChangeC1ERKN3gfx4RectE(%"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull %7, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #17
  %139 = bitcast %"class.ui::PlatformWindowDelegate"* %137 to void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)***
  %140 = load void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)**, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*** %139, align 8
  %141 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)** %140, i64 2
  %142 = load void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)** %141, align 8
  call void %142(%"class.ui::PlatformWindowDelegate"* %137, %"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull dereferenceable(16) %7) #17
  call void @_ZN2ui22PlatformWindowDelegate12BoundsChangeD1Ev(%"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui9X11Window11IsMaximizedEv(%"class.ui::X11Window"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = tail call i8* @_Znwm(i64 32) #18
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %6, i8** %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %9, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %6, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i64 28, i1 false) #17
  %10 = getelementptr inbounds i8, i8* %6, i64 28
  store i8 0, i8* %10, align 1
  %11 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #17
  %12 = call zeroext i1 @_ZN2ui17HasWMSpecPropertyERKN4base8internal9flat_treeIN3x114AtomENS0_8identityENSt3__14lessIvEENS6_6vectorIS4_NS6_9allocatorIS4_EEEEEES4_(%"class.base::internal::flat_tree.378"* dereferenceable(24) %4, i32 %11) #17
  br i1 %12, label %13, label %29

13:                                               ; preds = %1
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #17
  %15 = call i8* @_Znwm(i64 32) #18
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %18, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21, i64 0, i64 0), i64 28, i1 false) #17
  %19 = getelementptr inbounds i8, i8* %15, i64 28
  store i8 0, i8* %19, align 1
  %20 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #17
  %21 = call zeroext i1 @_ZN2ui17HasWMSpecPropertyERKN4base8internal9flat_treeIN3x114AtomENS0_8identityENSt3__14lessIvEENS6_6vectorIS4_NS6_9allocatorIS4_EEEEEES4_(%"class.base::internal::flat_tree.378"* dereferenceable(24) %4, i32 %20) #17
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %13
  %27 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %27) #18
  br label %28

28:                                               ; preds = %13, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #17
  br label %29

29:                                               ; preds = %1, %28
  %30 = phi i1 [ %21, %28 ], [ false, %1 ]
  %31 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %36) #18
  br label %37

37:                                               ; preds = %29, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret i1 %30
}

declare i32 @_ZN2ui18GuessWindowManagerEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui9X11Window12IsFullscreenEv(%"class.ui::X11Window"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #17
  %5 = tail call i8* @_Znwm(i64 32) #18
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast i64* %7 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %8, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %5, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.33, i64 0, i64 0), i64 24, i1 false) #17
  %9 = getelementptr inbounds i8, i8* %5, i64 24
  store i8 0, i8* %9, align 1
  %10 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #17
  %11 = call zeroext i1 @_ZN2ui17HasWMSpecPropertyERKN4base8internal9flat_treeIN3x114AtomENS0_8identityENSt3__14lessIvEENS6_6vectorIS4_NS6_9allocatorIS4_EEEEEES4_(%"class.base::internal::flat_tree.378"* dereferenceable(24) %3, i32 %10) #17
  %12 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %1
  %17 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %17) #18
  br label %18

18:                                               ; preds = %1, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #17
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window13SetFullscreenEb(%"class.ui::X11Window"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #17
  %5 = tail call i8* @_Znwm(i64 32) #18
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast i64* %7 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %8, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %5, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.33, i64 0, i64 0), i64 24, i1 false) #17
  %9 = getelementptr inbounds i8, i8* %5, i64 24
  store i8 0, i8* %9, align 1
  %10 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #17
  call void @_ZN2ui9X11Window14SetWMSpecStateEbN3x114AtomES2_(%"class.ui::X11Window"* %0, i1 zeroext %1, i32 %10, i32 0)
  %11 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %2, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #17
  ret void
}

declare %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() local_unnamed_addr #1

declare i64 @_ZN3gfx19ScaleToFlooredPointERKNS_5PointEf(%"class.gfx::Point"* dereferenceable(8), float) local_unnamed_addr #1

declare i64 @_ZNK7display7Display14GetSizeInPixelEv(%"class.display::Display"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7display7DisplayD1Ev(%"class.display::Display"*) unnamed_addr #2

declare void @_ZN2ui22PlatformWindowDelegate12BoundsChangeC1ERKN3gfx4RectE(%"struct.ui::PlatformWindowDelegate::BoundsChange"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui22PlatformWindowDelegate12BoundsChangeD1Ev(%"struct.ui::PlatformWindowDelegate::BoundsChange"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window8MaximizeEv(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = alloca %"class.gfx::Rect", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.gfx::Rect"*
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #17
  %12 = tail call i8* @_Znwm(i64 32) #18
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast i64* %14 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %15, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.33, i64 0, i64 0), i64 24, i1 false) #17
  %16 = getelementptr inbounds i8, i8* %12, i64 24
  store i8 0, i8* %16, align 1
  %17 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #17
  %18 = call zeroext i1 @_ZN2ui17HasWMSpecPropertyERKN4base8internal9flat_treeIN3x114AtomENS0_8identityENSt3__14lessIvEENS6_6vectorIS4_NS6_9allocatorIS4_EEEEEES4_(%"class.base::internal::flat_tree.378"* dereferenceable(24) %10, i32 %17) #17
  %19 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %1
  %24 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %24) #18
  br label %25

25:                                               ; preds = %1, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #17
  br i1 %18, label %28, label %26

26:                                               ; preds = %25
  %27 = bitcast %"class.ui::X11Window"* %0 to { i64, i64 } (%"class.ui::X11Window"*)***
  br label %95

28:                                               ; preds = %25
  %29 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #17
  %30 = call i8* @_Znwm(i64 32) #18
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %30, i8** %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast i64* %32 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %33, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %30, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.33, i64 0, i64 0), i64 24, i1 false) #17
  %34 = getelementptr inbounds i8, i8* %30, i64 24
  store i8 0, i8* %34, align 1
  %35 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #17
  call void @_ZN2ui9X11Window14SetWMSpecStateEbN3x114AtomES2_(%"class.ui::X11Window"* %0, i1 zeroext false, i32 %35, i32 0) #17
  %36 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %28
  %41 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %41) #18
  br label %42

42:                                               ; preds = %28, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #17
  %43 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #17
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %45 = bitcast %"class.ui::X11Window"* %0 to { i64, i64 } (%"class.ui::X11Window"*)***
  %46 = load { i64, i64 } (%"class.ui::X11Window"*)**, { i64, i64 } (%"class.ui::X11Window"*)*** %45, align 8
  %47 = getelementptr inbounds { i64, i64 } (%"class.ui::X11Window"*)*, { i64, i64 } (%"class.ui::X11Window"*)** %46, i64 9
  %48 = load { i64, i64 } (%"class.ui::X11Window"*)*, { i64, i64 } (%"class.ui::X11Window"*)** %47, align 8
  %49 = call { i64, i64 } %48(%"class.ui::X11Window"* %0) #17
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %51 = extractvalue { i64, i64 } %49, 0
  store i64 %51, i64* %50, align 8
  %52 = extractvalue { i64, i64 } %49, 1
  store i64 %52, i64* %44, align 8
  %53 = bitcast %"class.gfx::Rect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #17
  %54 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 0
  %55 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 1
  %56 = bitcast i64* %44 to %"class.gfx::Size"*
  %57 = call i64 @_ZN2ui9X11Window20AdjustSizeForDisplayERKN3gfx4SizeE(%"class.ui::X11Window"* undef, %"class.gfx::Size"* dereferenceable(8) %56)
  %58 = trunc i64 %57 to i32
  %59 = lshr i64 %57, 32
  %60 = trunc i64 %59 to i32
  %61 = bitcast %"class.gfx::Rect"* %5 to i64*
  store i64 %51, i64* %61, align 8
  %62 = trunc i64 %51 to i32
  %63 = icmp sgt i32 %62, 0
  %64 = icmp sgt i32 %58, 0
  %65 = and i1 %64, %63
  %66 = sub nuw nsw i32 2147483647, %62
  %67 = icmp ult i32 %66, %58
  %68 = and i1 %67, %65
  %69 = select i1 %68, i32 %66, i32 %58
  %70 = lshr i64 %51, 32
  %71 = trunc i64 %70 to i32
  %72 = icmp sgt i32 %71, 0
  %73 = icmp sgt i32 %60, 0
  %74 = and i1 %73, %72
  %75 = sub nuw nsw i32 2147483647, %71
  %76 = icmp ult i32 %75, %60
  %77 = and i1 %76, %74
  %78 = select i1 %77, i32 %75, i32 %60
  %79 = icmp sgt i32 %69, 0
  %80 = select i1 %79, i32 %69, i32 0
  store i32 %80, i32* %54, align 8
  %81 = icmp sgt i32 %78, 0
  %82 = select i1 %81, i32 %78, i32 0
  store i32 %82, i32* %55, align 4
  %83 = trunc i64 %52 to i32
  %84 = lshr i64 %52, 32
  %85 = trunc i64 %84 to i32
  %86 = icmp ne i32 %80, %83
  %87 = icmp ne i32 %82, %85
  %88 = or i1 %86, %87
  br i1 %88, label %89, label %94

89:                                               ; preds = %42
  %90 = bitcast %"class.ui::X11Window"* %0 to void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)***
  %91 = load void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)**, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)** %91, i64 8
  %93 = load void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)** %92, align 8
  call void %93(%"class.ui::X11Window"* %0, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #17
  br label %94

94:                                               ; preds = %42, %89
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #17
  br label %95

95:                                               ; preds = %26, %94
  %96 = phi { i64, i64 } (%"class.ui::X11Window"*)*** [ %27, %26 ], [ %45, %94 ]
  %97 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #17
  %98 = load { i64, i64 } (%"class.ui::X11Window"*)**, { i64, i64 } (%"class.ui::X11Window"*)*** %96, align 8
  %99 = getelementptr inbounds { i64, i64 } (%"class.ui::X11Window"*)*, { i64, i64 } (%"class.ui::X11Window"*)** %98, i64 9
  %100 = load { i64, i64 } (%"class.ui::X11Window"*)*, { i64, i64 } (%"class.ui::X11Window"*)** %99, align 8
  %101 = call { i64, i64 } %100(%"class.ui::X11Window"* %0) #17
  %102 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %103 = extractvalue { i64, i64 } %101, 0
  store i64 %103, i64* %102, align 8
  %104 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %105 = extractvalue { i64, i64 } %101, 1
  store i64 %105, i64* %104, align 8
  %106 = bitcast %"class.ui::X11Window"* %0 to void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)***
  %107 = load void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)**, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)** %107, i64 26
  %109 = load void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)** %108, align 8
  call void %109(%"class.ui::X11Window"* %0, %"class.gfx::Rect"* nonnull dereferenceable(16) %7) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #17
  %110 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 34
  %111 = load i8, i8* %110, align 8, !range !2
  %112 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 54
  %113 = xor i8 %111, 1
  store i8 %113, i8* %112, align 8
  %114 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #17
  %115 = call i8* @_Znwm(i64 32) #18
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %115, i8** %116, align 8
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = bitcast i64* %117 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %118, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %115, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i64 28, i1 false) #17
  %119 = getelementptr inbounds i8, i8* %115, i64 28
  store i8 0, i8* %119, align 1
  %120 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #17
  %121 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #17
  %122 = call i8* @_Znwm(i64 32) #18
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %122, i8** %123, align 8
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %125 = bitcast i64* %124 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %125, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %122, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21, i64 0, i64 0), i64 28, i1 false) #17
  %126 = getelementptr inbounds i8, i8* %122, i64 28
  store i8 0, i8* %126, align 1
  %127 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #17
  call void @_ZN2ui9X11Window14SetWMSpecStateEbN3x114AtomES2_(%"class.ui::X11Window"* %0, i1 zeroext true, i32 %120, i32 %127)
  %128 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %95
  %133 = load i8*, i8** %123, align 8
  call void @_ZdlPv(i8* %133) #18
  br label %134

134:                                              ; preds = %95, %132
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #17
  %135 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %134
  %140 = load i8*, i8** %116, align 8
  call void @_ZdlPv(i8* %140) #18
  br label %141

141:                                              ; preds = %134, %139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window14SetWMSpecStateEbN3x114AtomES2_(%"class.ui::X11Window"*, i1 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::internal::flat_tree.378", align 8
  %6 = alloca [2 x i32], align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 34
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %13 = load i32, i32* %12, align 8
  tail call void @_ZN2ui14SetWMSpecStateEN3x116WindowEbNS0_4AtomES2_(i32 %13, i1 zeroext %1, i32 %2, i32 %3) #17
  br label %145

14:                                               ; preds = %4
  %15 = bitcast %"class.base::internal::flat_tree.378"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.base::internal::flat_tree.378", %"class.base::internal::flat_tree.378"* %5, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.base::internal::flat_tree.378", %"class.base::internal::flat_tree.378"* %5, i64 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.base::internal::flat_tree.378", %"class.base::internal::flat_tree.378"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #17
  %20 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30, i32 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.base::internal::flat_tree.378"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %14
  %29 = bitcast i32** %17 to i64*
  br label %50

30:                                               ; preds = %14
  %31 = icmp ugt i64 %26, 4611686018427387903
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = bitcast %"class.base::internal::flat_tree.378"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %33) #19
  unreachable

34:                                               ; preds = %30
  %35 = tail call i8* @_Znwm(i64 %25) #18
  %36 = bitcast i8* %35 to i32*
  %37 = bitcast i32** %17 to i8**
  store i8* %35, i8** %37, align 8
  %38 = bitcast %"class.base::internal::flat_tree.378"* %5 to i8**
  store i8* %35, i8** %38, align 8
  %39 = getelementptr inbounds i32, i32* %36, i64 %26
  store i32* %39, i32** %18, align 8
  %40 = bitcast i32** %17 to i64*
  %41 = ptrtoint i8* %35 to i64
  %42 = icmp sgt i64 %25, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %34
  %44 = lshr exact i64 %25, 2
  %45 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %35, i8* align 4 %45, i64 %25, i1 false) #17
  %46 = getelementptr inbounds i32, i32* %36, i64 %44
  %47 = ptrtoint i32* %46 to i64
  br label %48

48:                                               ; preds = %43, %34
  %49 = phi i64 [ %47, %43 ], [ %41, %34 ]
  store i64 %49, i64* %40, align 8
  br label %50

50:                                               ; preds = %28, %48
  %51 = phi i64* [ %29, %28 ], [ %40, %48 ]
  %52 = phi i64 [ 0, %28 ], [ %49, %48 ]
  %53 = phi i32* [ null, %28 ], [ %36, %48 ]
  %54 = bitcast [2 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #17
  %55 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  store i32 %2, i32* %55, align 4
  %56 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 1
  store i32 %3, i32* %56, align 4
  %57 = bitcast i32* %7 to i8*
  %58 = getelementptr inbounds %"class.base::internal::flat_tree.378", %"class.base::internal::flat_tree.378"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #17
  store i32 %2, i32* %7, align 4
  %59 = ptrtoint i32* %53 to i64
  %60 = sub i64 %52, %59
  %61 = icmp eq i64 %60, 0
  %62 = inttoptr i64 %52 to i32*
  br i1 %1, label %67, label %92

63:                                               ; preds = %211
  %64 = ptrtoint i32* %212 to i64
  store i64 %64, i64* %51, align 8
  %65 = bitcast i32* %212 to i8*
  call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %211, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #17
  br label %145

67:                                               ; preds = %50
  br i1 %61, label %83, label %68

68:                                               ; preds = %67
  %69 = ashr exact i64 %60, 2
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi i32* [ %53, %68 ], [ %81, %70 ]
  %72 = phi i64 [ %69, %68 ], [ %80, %70 ]
  %73 = lshr i64 %72, 1
  %74 = getelementptr inbounds i32, i32* %71, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = icmp ult i32 %75, %2
  %77 = getelementptr inbounds i32, i32* %74, i64 1
  %78 = xor i64 %73, -1
  %79 = add i64 %72, %78
  %80 = select i1 %76, i64 %79, i64 %73
  %81 = select i1 %76, i32* %77, i32* %71
  %82 = icmp eq i64 %80, 0
  br i1 %82, label %83, label %70

83:                                               ; preds = %70, %67
  %84 = phi i32* [ %53, %67 ], [ %81, %70 ]
  %85 = icmp eq i32* %84, %62
  br i1 %85, label %89, label %86

86:                                               ; preds = %83
  %87 = load i32, i32* %84, align 4
  %88 = icmp ugt i32 %87, %2
  br i1 %88, label %89, label %137

89:                                               ; preds = %86, %83
  %90 = call i32* @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.72"* nonnull %58, i32* %84, i32* nonnull dereferenceable(4) %7) #17
  %91 = load i64, i64* %51, align 8
  br label %137

92:                                               ; preds = %50
  br i1 %61, label %110, label %93

93:                                               ; preds = %92
  %94 = ashr exact i64 %60, 2
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i32* [ %53, %93 ], [ %106, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %105, %95 ]
  %98 = lshr i64 %97, 1
  %99 = getelementptr inbounds i32, i32* %96, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = icmp ult i32 %100, %2
  %102 = getelementptr inbounds i32, i32* %99, i64 1
  %103 = xor i64 %98, -1
  %104 = add i64 %97, %103
  %105 = select i1 %101, i64 %104, i64 %98
  %106 = select i1 %101, i32* %102, i32* %96
  %107 = icmp eq i64 %105, 0
  br i1 %107, label %108, label %95

108:                                              ; preds = %95
  %109 = ptrtoint i32* %106 to i64
  br label %110

110:                                              ; preds = %108, %92
  %111 = phi i64 [ %109, %108 ], [ %59, %92 ]
  %112 = phi i32* [ %106, %108 ], [ %53, %92 ]
  %113 = icmp eq i32* %112, %62
  br i1 %113, label %120, label %114

114:                                              ; preds = %110
  %115 = load i32, i32* %112, align 4
  %116 = icmp ugt i32 %115, %2
  br i1 %116, label %120, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds i32, i32* %112, i64 1
  %119 = ptrtoint i32* %118 to i64
  br label %120

120:                                              ; preds = %117, %114, %110
  %121 = phi i64 [ %119, %117 ], [ %111, %110 ], [ %111, %114 ]
  %122 = inttoptr i64 %121 to i32*
  %123 = icmp eq i32* %112, %122
  br i1 %123, label %137, label %124

124:                                              ; preds = %120
  %125 = sub i64 %52, %121
  %126 = ashr exact i64 %125, 2
  %127 = icmp eq i64 %125, 0
  br i1 %127, label %133, label %128

128:                                              ; preds = %124
  %129 = bitcast i32* %112 to i8*
  %130 = inttoptr i64 %121 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %129, i8* align 4 %130, i64 %125, i1 false) #17
  %131 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 1
  %132 = load i32, i32* %131, align 4
  br label %133

133:                                              ; preds = %128, %124
  %134 = phi i32 [ %132, %128 ], [ %3, %124 ]
  %135 = getelementptr inbounds i32, i32* %112, i64 %126
  store i32* %135, i32** %17, align 8
  %136 = ptrtoint i32* %135 to i64
  br label %137

137:                                              ; preds = %89, %86, %133, %120
  %138 = phi i64 [ %91, %89 ], [ %52, %86 ], [ %136, %133 ], [ %52, %120 ]
  %139 = phi i32 [ %3, %89 ], [ %3, %86 ], [ %134, %133 ], [ %3, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #17
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #17
  store i32 %139, i32* %7, align 4
  %140 = load i32*, i32** %16, align 8
  %141 = ptrtoint i32* %140 to i64
  %142 = sub i64 %138, %141
  %143 = icmp eq i64 %142, 0
  %144 = inttoptr i64 %138 to i32*
  br i1 %1, label %187, label %146

145:                                              ; preds = %66, %11
  ret void

146:                                              ; preds = %137
  br i1 %143, label %164, label %147

147:                                              ; preds = %146
  %148 = ashr exact i64 %142, 2
  br label %149

149:                                              ; preds = %149, %147
  %150 = phi i32* [ %140, %147 ], [ %160, %149 ]
  %151 = phi i64 [ %148, %147 ], [ %159, %149 ]
  %152 = lshr i64 %151, 1
  %153 = getelementptr inbounds i32, i32* %150, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = icmp ult i32 %154, %139
  %156 = getelementptr inbounds i32, i32* %153, i64 1
  %157 = xor i64 %152, -1
  %158 = add i64 %151, %157
  %159 = select i1 %155, i64 %158, i64 %152
  %160 = select i1 %155, i32* %156, i32* %150
  %161 = icmp eq i64 %159, 0
  br i1 %161, label %162, label %149

162:                                              ; preds = %149
  %163 = ptrtoint i32* %160 to i64
  br label %164

164:                                              ; preds = %162, %146
  %165 = phi i64 [ %163, %162 ], [ %141, %146 ]
  %166 = phi i32* [ %160, %162 ], [ %140, %146 ]
  %167 = icmp eq i32* %166, %144
  br i1 %167, label %174, label %168

168:                                              ; preds = %164
  %169 = load i32, i32* %166, align 4
  %170 = icmp ult i32 %139, %169
  br i1 %170, label %174, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds i32, i32* %166, i64 1
  %173 = ptrtoint i32* %172 to i64
  br label %174

174:                                              ; preds = %171, %168, %164
  %175 = phi i64 [ %173, %171 ], [ %165, %164 ], [ %165, %168 ]
  %176 = inttoptr i64 %175 to i32*
  %177 = icmp eq i32* %166, %176
  br i1 %177, label %211, label %178

178:                                              ; preds = %174
  %179 = sub i64 %138, %175
  %180 = ashr exact i64 %179, 2
  %181 = icmp eq i64 %179, 0
  br i1 %181, label %185, label %182

182:                                              ; preds = %178
  %183 = bitcast i32* %166 to i8*
  %184 = inttoptr i64 %175 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %183, i8* align 4 %184, i64 %179, i1 false) #17
  br label %185

185:                                              ; preds = %182, %178
  %186 = getelementptr inbounds i32, i32* %166, i64 %180
  store i32* %186, i32** %17, align 8
  br label %211

187:                                              ; preds = %137
  br i1 %143, label %203, label %188

188:                                              ; preds = %187
  %189 = ashr exact i64 %142, 2
  br label %190

190:                                              ; preds = %190, %188
  %191 = phi i32* [ %140, %188 ], [ %201, %190 ]
  %192 = phi i64 [ %189, %188 ], [ %200, %190 ]
  %193 = lshr i64 %192, 1
  %194 = getelementptr inbounds i32, i32* %191, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = icmp ult i32 %195, %139
  %197 = getelementptr inbounds i32, i32* %194, i64 1
  %198 = xor i64 %193, -1
  %199 = add i64 %192, %198
  %200 = select i1 %196, i64 %199, i64 %193
  %201 = select i1 %196, i32* %197, i32* %191
  %202 = icmp eq i64 %200, 0
  br i1 %202, label %203, label %190

203:                                              ; preds = %190, %187
  %204 = phi i32* [ %140, %187 ], [ %201, %190 ]
  %205 = icmp eq i32* %204, %144
  br i1 %205, label %209, label %206

206:                                              ; preds = %203
  %207 = load i32, i32* %204, align 4
  %208 = icmp ult i32 %139, %207
  br i1 %208, label %209, label %211

209:                                              ; preds = %206, %203
  %210 = call i32* @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.72"* nonnull %58, i32* %204, i32* nonnull dereferenceable(4) %7) #17
  br label %211

211:                                              ; preds = %209, %206, %185, %174
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #17
  call void @_ZN2ui9X11Window22UpdateWindowPropertiesERKN4base8internal9flat_treeIN3x114AtomENS1_8identityENSt3__14lessIvEENS7_6vectorIS5_NS7_9allocatorIS5_EEEEEE(%"class.ui::X11Window"* %0, %"class.base::internal::flat_tree.378"* nonnull dereferenceable(24) %5)
  %212 = load i32*, i32** %16, align 8
  %213 = icmp eq i32* %212, null
  br i1 %213, label %66, label %63
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window8MinimizeEv(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 34
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 27
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #17
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  store i8 15, i8* %14, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i64 0, i64 0), i64 15, i1 false) #17
  %15 = getelementptr inbounds i8, i8* %12, i64 15
  store i8 0, i8* %15, align 1
  %16 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #17
  %17 = call %"class.x11::Connection::FutureImpl"* @_ZN2ui17SendClientMessageEN3x116WindowES1_NS0_4AtomENSt3__15arrayIjLm5EEENS0_9EventMaskE(i32 %9, i32 %11, i32 %16, %"struct.std::__1::array.522"* byval(%"struct.std::__1::array.522") align 8 bitcast ([5 x i32]* @constinit to %"struct.std::__1::array.522"*), i32 1572864) #17
  %18 = icmp eq %"class.x11::Connection::FutureImpl"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %7
  %20 = bitcast %"class.x11::Connection::FutureImpl"* %17 to i8*
  call void @_ZdlPv(i8* %20) #18
  br label %21

21:                                               ; preds = %7, %19
  %22 = load i8, i8* %14, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %38

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #18
  br label %38

27:                                               ; preds = %1
  %28 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #17
  %29 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 20, i8* %30, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0), i64 20, i1 false) #17
  %31 = getelementptr inbounds i8, i8* %28, i64 20
  store i8 0, i8* %31, align 4
  %32 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #17
  call void @_ZN2ui9X11Window14SetWMSpecStateEbN3x114AtomES2_(%"class.ui::X11Window"* %0, i1 zeroext true, i32 %32, i32 0)
  %33 = load i8, i8* %30, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #18
  br label %38

38:                                               ; preds = %35, %27, %24, %21
  %39 = phi i8* [ %12, %21 ], [ %12, %24 ], [ %28, %27 ], [ %28, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #17
  ret void
}

declare %"class.x11::Connection::FutureImpl"* @_ZN2ui17SendClientMessageEN3x116WindowES1_NS0_4AtomENSt3__15arrayIjLm5EEENS0_9EventMaskE(i32, i32, i32, %"struct.std::__1::array.522"* byval(%"struct.std::__1::array.522") align 8, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window7RestoreEv(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 54
  store i8 0, i8* %5, align 8
  %6 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = tail call i8* @_Znwm(i64 32) #18
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %10, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i64 28, i1 false) #17
  %11 = getelementptr inbounds i8, i8* %7, i64 28
  store i8 0, i8* %11, align 1
  %12 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #17
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #17
  %14 = call i8* @_Znwm(i64 32) #18
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast i64* %16 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %17, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %14, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21, i64 0, i64 0), i64 28, i1 false) #17
  %18 = getelementptr inbounds i8, i8* %14, i64 28
  store i8 0, i8* %18, align 1
  %19 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #17
  call void @_ZN2ui9X11Window14SetWMSpecStateEbN3x114AtomES2_(%"class.ui::X11Window"* %0, i1 zeroext false, i32 %12, i32 %19)
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %1
  %25 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %25) #18
  br label %26

26:                                               ; preds = %1, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #17
  %27 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  %32 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %32) #18
  br label %33

33:                                               ; preds = %26, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  %34 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #17
  %35 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 20, i8* %36, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0), i64 20, i1 false) #17
  %37 = getelementptr inbounds i8, i8* %34, i64 20
  store i8 0, i8* %37, align 4
  %38 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #17
  call void @_ZN2ui9X11Window14SetWMSpecStateEbN3x114AtomES2_(%"class.ui::X11Window"* %0, i1 zeroext false, i32 %38, i32 0)
  %39 = load i8, i8* %36, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #18
  br label %44

44:                                               ; preds = %33, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #17
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2ui9X11Window22GetPlatformWindowStateEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window8ActivateEv(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"struct.std::__1::array.522", align 8
  %5 = alloca %"class.x11::Future", align 8
  %6 = alloca %"struct.x11::SetInputFocusRequest", align 4
  %7 = bitcast %"class.ui::X11Window"* %0 to i1 (%"class.ui::X11Window"*)***
  %8 = load i1 (%"class.ui::X11Window"*)**, i1 (%"class.ui::X11Window"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.ui::X11Window"*)*, i1 (%"class.ui::X11Window"*)** %8, i64 6
  %10 = load i1 (%"class.ui::X11Window"*)*, i1 (%"class.ui::X11Window"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.ui::X11Window"* %0) #17
  br i1 %11, label %12, label %120

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 31
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %120, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 43
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %20, %16
  %25 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  %26 = load i8, i8* %25, align 1, !range !2
  %27 = xor i8 %26, 1
  br label %28

28:                                               ; preds = %20, %24
  %29 = phi i8 [ 0, %20 ], [ %27, %24 ]
  %30 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 46
  store i8 %29, i8* %30, align 2
  %31 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 42
  %32 = load i8, i8* %31, align 2, !range !2
  %33 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 47
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 41
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 48
  store i8 %35, i8* %36, align 4
  %37 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 49
  store i8 %18, i8* %37, align 1
  %38 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  store i8 0, i8* %38, align 1
  %39 = load atomic i8, i8* bitcast (i64* @_ZGVZN2ui9X11Window8ActivateEvE25wm_supports_active_window to i8*) acquire, align 8
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %63, !prof !50

41:                                               ; preds = %28
  %42 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2ui9X11Window8ActivateEvE25wm_supports_active_window) #17
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %63, label %44

44:                                               ; preds = %41
  %45 = tail call i32 @_ZN2ui18GuessWindowManagerEv() #17
  %46 = icmp eq i32 %45, 20
  br i1 %46, label %61, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #17
  %49 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  store i8 18, i8* %50, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i64 0, i64 0), i64 18, i1 false) #17
  %51 = getelementptr inbounds i8, i8* %48, i64 18
  store i8 0, i8* %51, align 2
  %52 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #17
  %53 = call zeroext i1 @_ZN2ui14WmSupportsHintEN3x114AtomE(i32 %52) #17
  %54 = zext i1 %53 to i8
  %55 = load i8, i8* %50, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #18
  br label %60

60:                                               ; preds = %47, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #17
  br label %61

61:                                               ; preds = %44, %60
  %62 = phi i8 [ %54, %60 ], [ 0, %44 ]
  store i8 %62, i8* @_ZZN2ui9X11Window8ActivateEvE25wm_supports_active_window, align 1
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2ui9X11Window8ActivateEvE25wm_supports_active_window) #17
  br label %63

63:                                               ; preds = %41, %61, %28
  %64 = call %"class.ui::X11EventSource"* @_ZN2ui14X11EventSource11GetInstanceEv() #17
  %65 = call i32 @_ZN2ui14X11EventSource12GetTimestampEv(%"class.ui::X11EventSource"* %64) #17
  %66 = load i8, i8* @_ZZN2ui9X11Window8ActivateEvE25wm_supports_active_window, align 1, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %98, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 32
  %70 = load i8, i8* %69, align 1, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %98

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 27
  %76 = load i32, i32* %75, align 4
  %77 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #17
  %78 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  store i8 18, i8* %79, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i64 0, i64 0), i64 18, i1 false) #17
  %80 = getelementptr inbounds i8, i8* %77, i64 18
  store i8 0, i8* %80, align 2
  %81 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #17
  %82 = getelementptr inbounds %"struct.std::__1::array.522", %"struct.std::__1::array.522"* %4, i64 0, i32 0, i64 0
  store i32 1, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.std::__1::array.522", %"struct.std::__1::array.522"* %4, i64 0, i32 0, i64 1
  store i32 %65, i32* %83, align 4
  %84 = getelementptr inbounds %"struct.std::__1::array.522", %"struct.std::__1::array.522"* %4, i64 0, i32 0, i64 2
  store i32 0, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.std::__1::array.522", %"struct.std::__1::array.522"* %4, i64 0, i32 0, i64 3
  store i32 0, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.std::__1::array.522", %"struct.std::__1::array.522"* %4, i64 0, i32 0, i64 4
  store i32 0, i32* %86, align 8
  %87 = call %"class.x11::Connection::FutureImpl"* @_ZN2ui17SendClientMessageEN3x116WindowES1_NS0_4AtomENSt3__15arrayIjLm5EEENS0_9EventMaskE(i32 %74, i32 %76, i32 %81, %"struct.std::__1::array.522"* nonnull byval(%"struct.std::__1::array.522") align 8 %4, i32 1572864) #17
  %88 = icmp eq %"class.x11::Connection::FutureImpl"* %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %72
  %90 = bitcast %"class.x11::Connection::FutureImpl"* %87 to i8*
  call void @_ZdlPv(i8* %90) #18
  br label %91

91:                                               ; preds = %72, %89
  %92 = load i8, i8* %79, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  call void @_ZdlPv(i8* %96) #18
  br label %97

97:                                               ; preds = %91, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #17
  br label %119

98:                                               ; preds = %68, %63
  %99 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %100 = load i32, i32* %99, align 8
  call void @_ZN2ui11RaiseWindowEN3x116WindowE(i32 %100) #17
  %101 = bitcast %"class.x11::Future"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #17
  %102 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %103 = bitcast %"class.x11::Connection"** %102 to %"class.x11::XProto"**
  %104 = load %"class.x11::XProto"*, %"class.x11::XProto"** %103, align 8
  %105 = bitcast %"struct.x11::SetInputFocusRequest"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %105) #17
  %106 = getelementptr inbounds %"struct.x11::SetInputFocusRequest", %"struct.x11::SetInputFocusRequest"* %6, i64 0, i32 0
  store i32 2, i32* %106, align 4
  %107 = getelementptr inbounds %"struct.x11::SetInputFocusRequest", %"struct.x11::SetInputFocusRequest"* %6, i64 0, i32 1
  %108 = load i32, i32* %99, align 8
  store i32 %108, i32* %107, align 4
  %109 = getelementptr inbounds %"struct.x11::SetInputFocusRequest", %"struct.x11::SetInputFocusRequest"* %6, i64 0, i32 2
  store i32 %65, i32* %109, align 4
  %110 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto13SetInputFocusERKNS_20SetInputFocusRequestE(%"class.x11::XProto"* %104, %"struct.x11::SetInputFocusRequest"* nonnull dereferenceable(12) %6) #17
  %111 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.x11::Connection::FutureImpl"* %110, %"class.x11::Connection::FutureImpl"** %111, align 8
  call void @_ZN3x116FutureIvE11IgnoreErrorEv(%"class.x11::Future"* nonnull %5)
  %112 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %111, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %111, align 8
  %113 = icmp eq %"class.x11::Connection::FutureImpl"* %112, null
  br i1 %113, label %116, label %114

114:                                              ; preds = %98
  %115 = bitcast %"class.x11::Connection::FutureImpl"* %112 to i8*
  call void @_ZdlPv(i8* %115) #18
  br label %116

116:                                              ; preds = %98, %114
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %105) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #17
  %117 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  store i8 0, i8* %117, align 8
  store i8 1, i8* %17, align 1
  %118 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 35
  store i8 1, i8* %118, align 1
  br label %119

119:                                              ; preds = %116, %97
  call void @_ZN2ui9X11Window27AfterActivationStateChangedEv(%"class.ui::X11Window"* %0)
  br label %120

120:                                              ; preds = %12, %1, %119
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window28BeforeActivationStateChangedEv(%"class.ui::X11Window"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 43
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5, %1
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = xor i8 %11, 1
  br label %13

13:                                               ; preds = %5, %9
  %14 = phi i8 [ 0, %5 ], [ %12, %9 ]
  %15 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 46
  store i8 %14, i8* %15, align 2
  %16 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 42
  %17 = load i8, i8* %16, align 2, !range !2
  %18 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 47
  store i8 %17, i8* %18, align 1
  %19 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 41
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 48
  store i8 %20, i8* %21, align 4
  %22 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 49
  store i8 %3, i8* %22, align 1
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

declare zeroext i1 @_ZN2ui14WmSupportsHintEN3x114AtomE(i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

declare i32 @_ZN2ui14X11EventSource12GetTimestampEv(%"class.ui::X11EventSource"*) local_unnamed_addr #1

declare void @_ZN2ui11RaiseWindowEN3x116WindowE(i32) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto13SetInputFocusERKNS_20SetInputFocusRequestE(%"class.x11::XProto"*, %"struct.x11::SetInputFocusRequest"* dereferenceable(12)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3x116FutureIvE11IgnoreErrorEv(%"class.x11::Future"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.341", align 8
  %3 = alloca %"class.base::OnceCallback.786", align 8
  %4 = tail call i8* @_Znwm(i64 40) #18, !noalias !51
  %5 = bitcast i8* %4 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %5, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"struct.x11::Response.739"*)* @_ZN4base8internal7InvokerINS0_9BindStateIZN3x116FutureIvE11IgnoreErrorEvEUlNS3_8ResponseIvEEE_JEEEFvS7_EE7RunOnceEPNS0_13BindStateBaseEOS7_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIZN3x116FutureIvE11IgnoreErrorEvEUlNS2_8ResponseIvEEE_JEE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !51
  %6 = bitcast %"class.base::OnceCallback.786"* %3 to i8**
  store i8* %4, i8** %6, align 8, !alias.scope !51
  %7 = bitcast %"class.base::OnceCallback.341"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %8, align 8
  %10 = icmp eq %"class.x11::Connection::FutureImpl"* %9, null
  br i1 %10, label %20, label %11

11:                                               ; preds = %1
  %12 = ptrtoint i8* %4 to i64
  %13 = tail call i8* @_Znwm(i64 48) #18, !noalias !56
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.scoped_refptr.342*, %"class.std::__1::unique_ptr.344"*)* @_ZN4base8internal7InvokerINS0_9BindStateIZN3x116FutureIvE10OnResponseENS_12OnceCallbackIFvNS3_8ResponseIvEEEEEEUlSA_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS3_5ErrorENSE_14default_deleteISG_EEEEE_JSA_EEEFvSD_SJ_EE7RunOnceEPNS0_13BindStateBaseEOSD_OSJ_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIZN3x116FutureIvE10OnResponseENS_12OnceCallbackIFvNS2_8ResponseIvEEEEEEUlS9_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS2_5ErrorENSD_14default_deleteISF_EEEEE_JS9_EE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !56
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = getelementptr inbounds %"class.base::OnceCallback.786", %"class.base::OnceCallback.786"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast i8* %15 to i64*
  store i64 %12, i64* %17, align 8, !noalias !56
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8, !noalias !56
  %18 = bitcast %"class.base::OnceCallback.341"* %2 to i8**
  store i8* %13, i8** %18, align 8, !alias.scope !56
  call void @_ZN3x1110Connection10FutureImpl10OnResponseEN4base12OnceCallbackIFv13scoped_refptrINS2_16RefCountedMemoryEENSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEEEEE(%"class.x11::Connection::FutureImpl"* nonnull %9, %"class.base::OnceCallback.341"* nonnull %2) #17
  %19 = getelementptr inbounds %"class.base::OnceCallback.341", %"class.base::OnceCallback.341"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #17
  br label %20

20:                                               ; preds = %1, %11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  %21 = getelementptr inbounds %"class.base::OnceCallback.786", %"class.base::OnceCallback.786"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window27AfterActivationStateChangedEv(%"class.ui::X11Window"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.ui::WmHints", align 4
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 48
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 41
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 14
  %12 = load %"class.ui::X11ExtensionDelegate"*, %"class.ui::X11ExtensionDelegate"** %11, align 8
  %13 = icmp eq %"class.ui::X11ExtensionDelegate"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.ui::X11ExtensionDelegate"* %12 to void (%"class.ui::X11ExtensionDelegate"*)***
  %16 = load void (%"class.ui::X11ExtensionDelegate"*)**, void (%"class.ui::X11ExtensionDelegate"*)*** %15, align 8
  %17 = load void (%"class.ui::X11ExtensionDelegate"*)*, void (%"class.ui::X11ExtensionDelegate"*)** %16, align 8
  tail call void %17(%"class.ui::X11ExtensionDelegate"* nonnull %12) #17
  br label %18

18:                                               ; preds = %14, %10, %6, %1
  %19 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 47
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  %23 = load i8, i8* %3, align 4, !range !2
  %24 = icmp eq i8 %23, 0
  br label %25

25:                                               ; preds = %18, %22
  %26 = phi i1 [ false, %18 ], [ %24, %22 ]
  %27 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 42
  %28 = load i8, i8* %27, align 2, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 41
  %32 = load i8, i8* %31, align 1, !range !2
  %33 = icmp ne i8 %32, 0
  %34 = or i1 %26, %33
  br i1 %34, label %42, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %37 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %36, align 8
  %38 = bitcast %"class.ui::PlatformWindowDelegate"* %37 to void (%"class.ui::PlatformWindowDelegate"*)***
  %39 = load void (%"class.ui::PlatformWindowDelegate"*)**, void (%"class.ui::PlatformWindowDelegate"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*)*, void (%"class.ui::PlatformWindowDelegate"*)** %39, i64 8
  %41 = load void (%"class.ui::PlatformWindowDelegate"*)*, void (%"class.ui::PlatformWindowDelegate"*)** %40, align 8
  tail call void %41(%"class.ui::PlatformWindowDelegate"* %37) #17
  br label %42

42:                                               ; preds = %25, %30, %35
  %43 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 43
  %44 = load i8, i8* %43, align 1, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 46
  br label %74

52:                                               ; preds = %42, %46
  %53 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  %56 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 46
  %57 = load i8, i8* %56, align 2, !range !2
  %58 = icmp ne i8 %57, 0
  %59 = xor i1 %55, true
  %60 = or i1 %58, %59
  br i1 %60, label %74, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 55
  %63 = load i8, i8* %62, align 1, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %74, label %65

65:                                               ; preds = %61
  %66 = bitcast %"struct.ui::WmHints"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %66) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %66, i8 0, i64 36, i1 false) #17
  %67 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %68 = load i32, i32* %67, align 8
  %69 = call zeroext i1 @_ZN2ui10GetWmHintsEN3x116WindowEPNS_7WmHintsE(i32 %68, %"struct.ui::WmHints"* nonnull %2) #17
  %70 = getelementptr inbounds %"struct.ui::WmHints", %"struct.ui::WmHints"* %2, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, -257
  store i32 %72, i32* %70, align 4
  %73 = load i32, i32* %67, align 8
  call void @_ZN2ui10SetWmHintsEN3x116WindowERKNS_7WmHintsE(i32 %73, %"struct.ui::WmHints"* nonnull dereferenceable(36) %2) #17
  store i8 0, i8* %62, align 1
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %66) #17
  br label %74

74:                                               ; preds = %65, %61, %50, %52
  %75 = phi i8* [ %51, %50 ], [ %56, %52 ], [ %56, %61 ], [ %56, %65 ]
  %76 = phi i1 [ false, %50 ], [ %55, %52 ], [ %55, %61 ], [ %55, %65 ]
  %77 = load i8, i8* %75, align 2, !range !2
  %78 = zext i8 %77 to i32
  %79 = zext i1 %76 to i32
  %80 = icmp eq i32 %78, %79
  br i1 %80, label %88, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %83 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %82, align 8
  %84 = bitcast %"class.ui::PlatformWindowDelegate"* %83 to void (%"class.ui::PlatformWindowDelegate"*, i1)***
  %85 = load void (%"class.ui::PlatformWindowDelegate"*, i1)**, void (%"class.ui::PlatformWindowDelegate"*, i1)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*, i1)*, void (%"class.ui::PlatformWindowDelegate"*, i1)** %85, i64 12
  %87 = load void (%"class.ui::PlatformWindowDelegate"*, i1)*, void (%"class.ui::PlatformWindowDelegate"*, i1)** %86, align 8
  call void %87(%"class.ui::PlatformWindowDelegate"* %83, i1 zeroext %76) #17
  br label %88

88:                                               ; preds = %74, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window10DeactivateEv(%"class.ui::X11Window"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 43
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5, %1
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = xor i8 %11, 1
  br label %13

13:                                               ; preds = %5, %9
  %14 = phi i8 [ 0, %5 ], [ %12, %9 ]
  %15 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 46
  store i8 %14, i8* %15, align 2
  %16 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 42
  %17 = load i8, i8* %16, align 2, !range !2
  %18 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 47
  store i8 %17, i8* %18, align 1
  %19 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 41
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 48
  store i8 %20, i8* %21, align 4
  %22 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 49
  store i8 %3, i8* %22, align 1
  %23 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  store i8 1, i8* %23, align 1
  %24 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %25 = load i32, i32* %24, align 8
  tail call void @_ZN2ui11LowerWindowEN3x116WindowE(i32 %25) #17
  tail call void @_ZN2ui9X11Window27AfterActivationStateChangedEv(%"class.ui::X11Window"* %0)
  ret void
}

declare void @_ZN2ui11LowerWindowEN3x116WindowE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window17SetUseNativeFrameEb(%"class.ui::X11Window"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 60
  store i8 %3, i8* %4, align 1
  %5 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %6 = load i32, i32* %5, align 8
  tail call void @_ZN2ui19SetUseOSWindowFrameEN3x116WindowEb(i32 %6, i1 zeroext %1) #17
  tail call void @_ZN2ui9X11Window17ResetWindowRegionEv(%"class.ui::X11Window"* %0)
  ret void
}

declare void @_ZN2ui19SetUseOSWindowFrameEN3x116WindowEb(i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui9X11Window20ShouldUseNativeFrameEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 60
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window9SetCursorE13scoped_refptrINS_14PlatformCursorEE(%"class.ui::X11Window"*, %"class.ui::PlatformCursor"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = icmp eq %"class.ui::PlatformCursor"* %1, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.ui::PlatformCursor", %"class.ui::PlatformCursor"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %8) #17
  br label %9

9:                                                ; preds = %2, %7
  %10 = tail call %"class.ui::X11Cursor"* @_ZN2ui9X11Cursor18FromPlatformCursorE13scoped_refptrINS_14PlatformCursorEE(%"class.ui::PlatformCursor"* %1) #17
  %11 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 70
  %12 = ptrtoint %"class.ui::X11Cursor"* %10 to i64
  %13 = bitcast %class.scoped_refptr* %11 to i64*
  %14 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 0, i32 0
  %15 = load %"class.ui::X11Cursor"*, %"class.ui::X11Cursor"** %14, align 8
  store i64 %12, i64* %13, align 8
  %16 = icmp eq %"class.ui::X11Cursor"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.ui::X11Cursor", %"class.ui::X11Cursor"* %15, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %18, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #17
  %20 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %18, i64 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %18, i64 -2
  %25 = bitcast %"class.base::RefCounted"* %24 to %"class.ui::PlatformCursor"*
  %26 = bitcast %"class.base::RefCounted"* %24 to void (%"class.ui::PlatformCursor"*)***
  %27 = load void (%"class.ui::PlatformCursor"*)**, void (%"class.ui::PlatformCursor"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %27, i64 1
  %29 = load void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %28, align 8
  tail call void %29(%"class.ui::PlatformCursor"* nonnull %25) #17
  br label %30

30:                                               ; preds = %9, %17, %23
  %31 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 71
  %32 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %33 = tail call i8* @_Znwm(i64 48) #18, !noalias !61
  %34 = bitcast i8* %33 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %34, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvN3x116WindowENS3_6CursorEEJS4_EEEFvS5_EE7RunOnceEPNS0_13BindStateBaseES5_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvN3x116WindowENS2_6CursorEEJS3_EE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !61
  %35 = getelementptr inbounds i8, i8* %33, i64 32
  %36 = bitcast i8* %35 to void (i32, i32)**
  store void (i32, i32)* @_ZN2ui12DefineCursorEN3x116WindowENS0_6CursorE, void (i32, i32)** %36, align 8, !noalias !61
  %37 = getelementptr inbounds i8, i8* %33, i64 40
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %32, align 4, !noalias !61
  store i32 %39, i32* %38, align 4, !noalias !61
  %40 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %33, i8** %40, align 8, !alias.scope !61
  %41 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 71, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %41) #17
  %42 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl.408", %"class.base::internal::CancelableCallbackImpl.408"* %31, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %42) #17
  %43 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %44 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %42, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %43) #17
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %43) #17
  %45 = load %"class.ui::X11Cursor"*, %"class.ui::X11Cursor"** %14, align 8
  %46 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl.408", %"class.base::internal::CancelableCallbackImpl.408"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %46, align 8, !noalias !66
  %48 = icmp eq %"class.base::internal::BindStateBase"* %47, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %30
  %50 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %50, align 8, !alias.scope !66
  br label %58

51:                                               ; preds = %30
  %52 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #17, !noalias !66
  %53 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %53, align 8, !noalias !66
  call void @_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEE13MakeForwarderIJS4_EEEvPNS2_IFvDpT_EEE(%"class.base::internal::CancelableCallbackImpl.408"* %31, %"class.base::OnceCallback"* nonnull %3) #17, !noalias !66
  %54 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %55 = load i64, i64* %54, align 8, !noalias !66
  %56 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %55, i64* %56, align 8, !alias.scope !66
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %53, align 8, !noalias !66
  %57 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %57) #17, !noalias !66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #17, !noalias !66
  br label %58

58:                                               ; preds = %49, %51
  call void @_ZN2ui9X11Cursor14OnCursorLoadedEN4base12OnceCallbackIFvN3x116CursorEEEE(%"class.ui::X11Cursor"* %45, %"class.base::OnceCallback"* nonnull %5) #17
  %59 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %59) #17
  br i1 %6, label %73, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.ui::PlatformCursor", %"class.ui::PlatformCursor"* %1, i64 0, i32 1
  %62 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %61, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %62) #17
  %63 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %61, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %73

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %61, i64 -2
  %68 = bitcast %"class.base::RefCounted"* %67 to %"class.ui::PlatformCursor"*
  %69 = bitcast %"class.base::RefCounted"* %67 to void (%"class.ui::PlatformCursor"*)***
  %70 = load void (%"class.ui::PlatformCursor"*)**, void (%"class.ui::PlatformCursor"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %70, i64 1
  %72 = load void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %71, align 8
  call void %72(%"class.ui::PlatformCursor"* nonnull %68) #17
  br label %73

73:                                               ; preds = %58, %60, %66
  ret void
}

declare %"class.ui::X11Cursor"* @_ZN2ui9X11Cursor18FromPlatformCursorE13scoped_refptrINS_14PlatformCursorEE(%"class.ui::PlatformCursor"*) local_unnamed_addr #1

declare void @_ZN2ui12DefineCursorEN3x116WindowENS0_6CursorE(i32, i32) #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

declare void @_ZN2ui9X11Cursor14OnCursorLoadedEN4base12OnceCallbackIFvN3x116CursorEEEE(%"class.ui::X11Cursor"*, %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window12MoveCursorToERKN3gfx5PointE(%"class.ui::X11Window"* nocapture readonly, %"class.gfx::Point"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::WarpPointerRequest", align 4
  %4 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %5 = bitcast %"class.x11::Connection"** %4 to %"class.x11::XProto"**
  %6 = load %"class.x11::XProto"*, %"class.x11::XProto"** %5, align 8
  %7 = bitcast %"struct.x11::WarpPointerRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"struct.x11::WarpPointerRequest", %"struct.x11::WarpPointerRequest"* %3, i64 0, i32 0
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.x11::WarpPointerRequest", %"struct.x11::WarpPointerRequest"* %3, i64 0, i32 1
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 27
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %9, align 4
  %12 = getelementptr inbounds %"struct.x11::WarpPointerRequest", %"struct.x11::WarpPointerRequest"* %3, i64 0, i32 2
  %13 = getelementptr inbounds %"struct.x11::WarpPointerRequest", %"struct.x11::WarpPointerRequest"* %3, i64 0, i32 6
  %14 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 0, i32 0
  %15 = bitcast i16* %12 to i64*
  store i64 0, i64* %15, align 4
  %16 = load i32, i32* %14, align 4
  %17 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = add nsw i32 %18, %16
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* %13, align 4
  %21 = getelementptr inbounds %"struct.x11::WarpPointerRequest", %"struct.x11::WarpPointerRequest"* %3, i64 0, i32 7
  %22 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %25, %23
  %27 = trunc i32 %26 to i16
  store i16 %27, i16* %21, align 2
  %28 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto11WarpPointerERKNS_18WarpPointerRequestE(%"class.x11::XProto"* %6, %"struct.x11::WarpPointerRequest"* nonnull dereferenceable(20) %3) #17
  %29 = icmp eq %"class.x11::Connection::FutureImpl"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %2
  %31 = bitcast %"class.x11::Connection::FutureImpl"* %28 to i8*
  call void @_ZdlPv(i8* %31) #18
  br label %32

32:                                               ; preds = %2, %30
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #17
  ret void
}

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto11WarpPointerERKNS_18WarpPointerRequestE(%"class.x11::XProto"*, %"struct.x11::WarpPointerRequest"* dereferenceable(20)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window21ConfineCursorToBoundsERKN3gfx4RectE(%"class.ui::X11Window"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::XFixes::CreatePointerBarrierRequest", align 8
  %4 = alloca %"struct.x11::XFixes::CreatePointerBarrierRequest", align 8
  %5 = alloca %"struct.x11::XFixes::CreatePointerBarrierRequest", align 8
  %6 = alloca %"struct.x11::XFixes::CreatePointerBarrierRequest", align 8
  %7 = alloca i64, align 8
  tail call void @_ZN2ui9X11Window15UnconfineCursorEv(%"class.ui::X11Window"* %0)
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %169, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %169, label %15

15:                                               ; preds = %11
  %16 = bitcast i64* %7 to %"class.gfx::Vector2d"*
  %17 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = shl nuw i64 %22, 32
  %24 = zext i32 %19 to i64
  %25 = or i64 %23, %24
  store i64 %25, i64* %7, align 8
  %26 = call { i64, i64 } @_ZN3gfxplERKNS_4RectERKNS_8Vector2dE(%"class.gfx::Rect"* dereferenceable(16) %1, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %16) #17
  %27 = extractvalue { i64, i64 } %26, 0
  %28 = trunc i64 %27 to i16
  %29 = lshr i64 %27, 32
  %30 = trunc i64 %29 to i16
  %31 = extractvalue { i64, i64 } %26, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  %32 = trunc i64 %31 to i16
  %33 = add i16 %32, %28
  %34 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %35 = load %"class.x11::Connection"*, %"class.x11::Connection"** %34, align 8
  %36 = call i32 @_ZN3x1110Connection14GenerateIdImplEv(%"class.x11::Connection"* %35) #17
  %37 = bitcast %"class.x11::Connection"** %34 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 176
  %40 = bitcast i8* %39 to %"class.x11::XFixes"**
  %41 = load %"class.x11::XFixes"*, %"class.x11::XFixes"** %40, align 8
  %42 = bitcast %"struct.x11::XFixes::CreatePointerBarrierRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %42) #17
  %43 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %4, i64 0, i32 0
  store i32 %36, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %4, i64 0, i32 1
  %45 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 27
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %44, align 4
  %47 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %4, i64 0, i32 2
  store i16 %28, i16* %47, align 8
  %48 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %4, i64 0, i32 3
  store i16 %30, i16* %48, align 2
  %49 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %4, i64 0, i32 4
  store i16 %33, i16* %49, align 4
  %50 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %4, i64 0, i32 5
  store i16 %30, i16* %50, align 2
  %51 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %4, i64 0, i32 6
  store i32 2, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %4, i64 0, i32 7
  %53 = bitcast %"class.std::__1::vector.740"* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #17
  %54 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XFixes20CreatePointerBarrierERKNS0_27CreatePointerBarrierRequestE(%"class.x11::XFixes"* %41, %"struct.x11::XFixes::CreatePointerBarrierRequest"* nonnull dereferenceable(48) %4) #17
  %55 = icmp eq %"class.x11::Connection::FutureImpl"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %15
  %57 = bitcast %"class.x11::Connection::FutureImpl"* %54 to i8*
  call void @_ZdlPv(i8* %57) #18
  br label %58

58:                                               ; preds = %56, %15
  %59 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %4, i64 0, i32 7, i32 0, i32 0
  %60 = load i16*, i16** %59, align 8
  %61 = icmp eq i16* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = ptrtoint i16* %60 to i64
  %64 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %4, i64 0, i32 7, i32 0, i32 1
  %65 = bitcast i16** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = bitcast i16* %60 to i8*
  call void @_ZdlPv(i8* %66) #18
  br label %67

67:                                               ; preds = %58, %62
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %42) #17
  %68 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 69, i32 0, i64 0
  store i32 %36, i32* %68, align 4
  %69 = lshr i64 %31, 32
  %70 = trunc i64 %69 to i16
  %71 = add i16 %70, %30
  %72 = load %"class.x11::Connection"*, %"class.x11::Connection"** %34, align 8
  %73 = call i32 @_ZN3x1110Connection14GenerateIdImplEv(%"class.x11::Connection"* %72) #17
  %74 = load i8*, i8** %37, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 176
  %76 = bitcast i8* %75 to %"class.x11::XFixes"**
  %77 = load %"class.x11::XFixes"*, %"class.x11::XFixes"** %76, align 8
  %78 = bitcast %"struct.x11::XFixes::CreatePointerBarrierRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %78) #17
  %79 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %3, i64 0, i32 0
  store i32 %73, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %3, i64 0, i32 1
  %81 = load i32, i32* %45, align 4
  store i32 %81, i32* %80, align 4
  %82 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %3, i64 0, i32 2
  store i16 %28, i16* %82, align 8
  %83 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %3, i64 0, i32 3
  store i16 %71, i16* %83, align 2
  %84 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %3, i64 0, i32 4
  store i16 %33, i16* %84, align 4
  %85 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %3, i64 0, i32 5
  store i16 %71, i16* %85, align 2
  %86 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %3, i64 0, i32 6
  store i32 8, i32* %86, align 8
  %87 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %3, i64 0, i32 7
  %88 = bitcast %"class.std::__1::vector.740"* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #17
  %89 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XFixes20CreatePointerBarrierERKNS0_27CreatePointerBarrierRequestE(%"class.x11::XFixes"* %77, %"struct.x11::XFixes::CreatePointerBarrierRequest"* nonnull dereferenceable(48) %3) #17
  %90 = icmp eq %"class.x11::Connection::FutureImpl"* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %67
  %92 = bitcast %"class.x11::Connection::FutureImpl"* %89 to i8*
  call void @_ZdlPv(i8* %92) #18
  br label %93

93:                                               ; preds = %91, %67
  %94 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %3, i64 0, i32 7, i32 0, i32 0
  %95 = load i16*, i16** %94, align 8
  %96 = icmp eq i16* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %93
  %98 = ptrtoint i16* %95 to i64
  %99 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %3, i64 0, i32 7, i32 0, i32 1
  %100 = bitcast i16** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast i16* %95 to i8*
  call void @_ZdlPv(i8* %101) #18
  br label %102

102:                                              ; preds = %93, %97
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %78) #17
  %103 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 69, i32 0, i64 1
  store i32 %73, i32* %103, align 4
  %104 = load %"class.x11::Connection"*, %"class.x11::Connection"** %34, align 8
  %105 = call i32 @_ZN3x1110Connection14GenerateIdImplEv(%"class.x11::Connection"* %104) #17
  %106 = load i8*, i8** %37, align 8
  %107 = getelementptr inbounds i8, i8* %106, i64 176
  %108 = bitcast i8* %107 to %"class.x11::XFixes"**
  %109 = load %"class.x11::XFixes"*, %"class.x11::XFixes"** %108, align 8
  %110 = bitcast %"struct.x11::XFixes::CreatePointerBarrierRequest"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %110) #17
  %111 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %5, i64 0, i32 0
  store i32 %105, i32* %111, align 8
  %112 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %5, i64 0, i32 1
  %113 = load i32, i32* %45, align 4
  store i32 %113, i32* %112, align 4
  %114 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %5, i64 0, i32 2
  store i16 %28, i16* %114, align 8
  %115 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %5, i64 0, i32 3
  store i16 %30, i16* %115, align 2
  %116 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %5, i64 0, i32 4
  store i16 %28, i16* %116, align 4
  %117 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %5, i64 0, i32 5
  store i16 %71, i16* %117, align 2
  %118 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %5, i64 0, i32 6
  store i32 1, i32* %118, align 8
  %119 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %5, i64 0, i32 7
  %120 = bitcast %"class.std::__1::vector.740"* %119 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 24, i1 false) #17
  %121 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XFixes20CreatePointerBarrierERKNS0_27CreatePointerBarrierRequestE(%"class.x11::XFixes"* %109, %"struct.x11::XFixes::CreatePointerBarrierRequest"* nonnull dereferenceable(48) %5) #17
  %122 = icmp eq %"class.x11::Connection::FutureImpl"* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %102
  %124 = bitcast %"class.x11::Connection::FutureImpl"* %121 to i8*
  call void @_ZdlPv(i8* %124) #18
  br label %125

125:                                              ; preds = %123, %102
  %126 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %5, i64 0, i32 7, i32 0, i32 0
  %127 = load i16*, i16** %126, align 8
  %128 = icmp eq i16* %127, null
  br i1 %128, label %134, label %129

129:                                              ; preds = %125
  %130 = ptrtoint i16* %127 to i64
  %131 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %5, i64 0, i32 7, i32 0, i32 1
  %132 = bitcast i16** %131 to i64*
  store i64 %130, i64* %132, align 8
  %133 = bitcast i16* %127 to i8*
  call void @_ZdlPv(i8* %133) #18
  br label %134

134:                                              ; preds = %125, %129
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %110) #17
  %135 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 69, i32 0, i64 2
  store i32 %105, i32* %135, align 4
  %136 = load %"class.x11::Connection"*, %"class.x11::Connection"** %34, align 8
  %137 = call i32 @_ZN3x1110Connection14GenerateIdImplEv(%"class.x11::Connection"* %136) #17
  %138 = load i8*, i8** %37, align 8
  %139 = getelementptr inbounds i8, i8* %138, i64 176
  %140 = bitcast i8* %139 to %"class.x11::XFixes"**
  %141 = load %"class.x11::XFixes"*, %"class.x11::XFixes"** %140, align 8
  %142 = bitcast %"struct.x11::XFixes::CreatePointerBarrierRequest"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %142) #17
  %143 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %6, i64 0, i32 0
  store i32 %137, i32* %143, align 8
  %144 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %6, i64 0, i32 1
  %145 = load i32, i32* %45, align 4
  store i32 %145, i32* %144, align 4
  %146 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %6, i64 0, i32 2
  store i16 %33, i16* %146, align 8
  %147 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %6, i64 0, i32 3
  store i16 %30, i16* %147, align 2
  %148 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %6, i64 0, i32 4
  store i16 %33, i16* %148, align 4
  %149 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %6, i64 0, i32 5
  store i16 %71, i16* %149, align 2
  %150 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %6, i64 0, i32 6
  store i32 4, i32* %150, align 8
  %151 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %6, i64 0, i32 7
  %152 = bitcast %"class.std::__1::vector.740"* %151 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 24, i1 false) #17
  %153 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XFixes20CreatePointerBarrierERKNS0_27CreatePointerBarrierRequestE(%"class.x11::XFixes"* %141, %"struct.x11::XFixes::CreatePointerBarrierRequest"* nonnull dereferenceable(48) %6) #17
  %154 = icmp eq %"class.x11::Connection::FutureImpl"* %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %134
  %156 = bitcast %"class.x11::Connection::FutureImpl"* %153 to i8*
  call void @_ZdlPv(i8* %156) #18
  br label %157

157:                                              ; preds = %155, %134
  %158 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %6, i64 0, i32 7, i32 0, i32 0
  %159 = load i16*, i16** %158, align 8
  %160 = icmp eq i16* %159, null
  br i1 %160, label %166, label %161

161:                                              ; preds = %157
  %162 = ptrtoint i16* %159 to i64
  %163 = getelementptr inbounds %"struct.x11::XFixes::CreatePointerBarrierRequest", %"struct.x11::XFixes::CreatePointerBarrierRequest"* %6, i64 0, i32 7, i32 0, i32 1
  %164 = bitcast i16** %163 to i64*
  store i64 %162, i64* %164, align 8
  %165 = bitcast i16* %159 to i8*
  call void @_ZdlPv(i8* %165) #18
  br label %166

166:                                              ; preds = %157, %161
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %142) #17
  %167 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 69, i32 0, i64 3
  store i32 %137, i32* %167, align 4
  %168 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 68
  store i8 1, i8* %168, align 8
  br label %169

169:                                              ; preds = %2, %11, %166
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window15UnconfineCursorEv(%"class.ui::X11Window"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 68
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 69, i32 0, i64 0
  %8 = bitcast i32* %2 to i8*
  %9 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %10 = bitcast %"class.x11::Connection"** %9 to i8**
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #17
  %11 = load i32, i32* %7, align 4
  store i32 %11, i32* %2, align 4
  %12 = load i8*, i8** %10, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 176
  %14 = bitcast i8* %13 to %"class.x11::XFixes"**
  %15 = load %"class.x11::XFixes"*, %"class.x11::XFixes"** %14, align 8
  %16 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XFixes20DeletePointerBarrierERKNS0_7BarrierE(%"class.x11::XFixes"* %15, i32* nonnull dereferenceable(4) %2) #17
  %17 = icmp eq %"class.x11::Connection::FutureImpl"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %6
  %19 = bitcast %"class.x11::Connection::FutureImpl"* %16 to i8*
  call void @_ZdlPv(i8* %19) #18
  br label %20

20:                                               ; preds = %6, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #17
  %21 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 69, i32 0, i64 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #17
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %2, align 4
  %23 = load i8*, i8** %10, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 176
  %25 = bitcast i8* %24 to %"class.x11::XFixes"**
  %26 = load %"class.x11::XFixes"*, %"class.x11::XFixes"** %25, align 8
  %27 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XFixes20DeletePointerBarrierERKNS0_7BarrierE(%"class.x11::XFixes"* %26, i32* nonnull dereferenceable(4) %2) #17
  %28 = icmp eq %"class.x11::Connection::FutureImpl"* %27, null
  br i1 %28, label %32, label %30

29:                                               ; preds = %1, %54
  ret void

30:                                               ; preds = %20
  %31 = bitcast %"class.x11::Connection::FutureImpl"* %27 to i8*
  call void @_ZdlPv(i8* %31) #18
  br label %32

32:                                               ; preds = %30, %20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #17
  %33 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 69, i32 0, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #17
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %2, align 4
  %35 = load i8*, i8** %10, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 176
  %37 = bitcast i8* %36 to %"class.x11::XFixes"**
  %38 = load %"class.x11::XFixes"*, %"class.x11::XFixes"** %37, align 8
  %39 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XFixes20DeletePointerBarrierERKNS0_7BarrierE(%"class.x11::XFixes"* %38, i32* nonnull dereferenceable(4) %2) #17
  %40 = icmp eq %"class.x11::Connection::FutureImpl"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %32
  %42 = bitcast %"class.x11::Connection::FutureImpl"* %39 to i8*
  call void @_ZdlPv(i8* %42) #18
  br label %43

43:                                               ; preds = %41, %32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #17
  %44 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 69, i32 0, i64 3
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #17
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %2, align 4
  %46 = load i8*, i8** %10, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 176
  %48 = bitcast i8* %47 to %"class.x11::XFixes"**
  %49 = load %"class.x11::XFixes"*, %"class.x11::XFixes"** %48, align 8
  %50 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XFixes20DeletePointerBarrierERKNS0_7BarrierE(%"class.x11::XFixes"* %49, i32* nonnull dereferenceable(4) %2) #17
  %51 = icmp eq %"class.x11::Connection::FutureImpl"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %43
  %53 = bitcast %"class.x11::Connection::FutureImpl"* %50 to i8*
  call void @_ZdlPv(i8* %53) #18
  br label %54

54:                                               ; preds = %52, %43
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #17
  store i8 0, i8* %3, align 8
  %55 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %55, i8 0, i64 16, i1 false)
  br label %29
}

declare { i64, i64 } @_ZN3gfxplERKNS_4RectERKNS_8Vector2dE(%"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Vector2d"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window25SetRestoredBoundsInPixelsERKN3gfx4RectE(%"class.ui::X11Window"* nocapture, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 17
  %4 = bitcast %"class.gfx::Rect"* %3 to i8*
  %5 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 4 %5, i64 16, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZNK2ui9X11Window25GetRestoredBoundsInPixelsEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 17
  %3 = bitcast %"class.gfx::Rect"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 17, i32 1
  %6 = bitcast %"class.gfx::Size"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %4, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui9X11Window33ShouldWindowContentsBeTransparentEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 38
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window14SetZOrderLevelENS_11ZOrderLevelE(%"class.ui::X11Window"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 16
  store i32 %1, i32* %4, align 4
  %5 = icmp ne i32 %1, 0
  %6 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 40
  %7 = zext i1 %5 to i8
  store i8 %7, i8* %6, align 4
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #17
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 19, i8* %10, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0), i64 19, i1 false) #17
  %11 = getelementptr inbounds i8, i8* %8, i64 19
  store i8 0, i8* %11, align 1
  %12 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #17
  call void @_ZN2ui9X11Window14SetWMSpecStateEbN3x114AtomES2_(%"class.ui::X11Window"* %0, i1 zeroext %5, i32 %12, i32 0)
  %13 = load i8, i8* %10, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %17) #18
  br label %18

18:                                               ; preds = %2, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #17
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2ui9X11Window14GetZOrderLevelEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 16
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  %5 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 40
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = zext i8 %6 to i32
  %8 = zext i1 %4 to i32
  %9 = icmp eq i32 %7, %8
  %10 = select i1 %9, i32 %3, i32 %7
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window10StackAboveEj(%"class.ui::X11Window"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.524", align 8
  %4 = alloca %"class.std::__1::vector.524", align 8
  %5 = alloca %"struct.x11::ConfigureWindowRequest", align 4
  %6 = bitcast %"class.std::__1::vector.524"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.std::__1::vector.524", %"class.std::__1::vector.524"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.524", %"class.std::__1::vector.524"* %3, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %10 = bitcast %"class.std::__1::vector.524"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load %"class.x11::Connection"*, %"class.x11::Connection"** %9, align 8
  call fastcc void @_ZN2ui12_GLOBAL__N_114GetParentsListEPN3x1110ConnectionENS1_6WindowE(%"class.std::__1::vector.524"* nonnull sret %3, %"class.x11::Connection"* %11, i32 %1)
  %12 = bitcast %"class.std::__1::vector.524"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.std::__1::vector.524", %"class.std::__1::vector.524"* %4, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.524", %"class.std::__1::vector.524"* %4, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::vector.524"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  %16 = load %"class.x11::Connection"*, %"class.x11::Connection"** %9, align 8
  %17 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %18 = load i32, i32* %17, align 8
  call fastcc void @_ZN2ui12_GLOBAL__N_114GetParentsListEPN3x1110ConnectionENS1_6WindowE(%"class.std::__1::vector.524"* nonnull sret %4, %"class.x11::Connection"* %16, i32 %18)
  %19 = load i32*, i32** %8, align 8
  %20 = load i32*, i32** %14, align 8
  %21 = load i32*, i32** %7, align 8
  %22 = load i32*, i32** %13, align 8
  br label %23

23:                                               ; preds = %29, %2
  %24 = phi i32* [ %20, %2 ], [ %32, %29 ]
  %25 = phi i32* [ %19, %2 ], [ %30, %29 ]
  %26 = icmp eq i32* %25, %21
  %27 = icmp eq i32* %24, %22
  %28 = or i1 %26, %27
  br i1 %28, label %61, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds i32, i32* %25, i64 -1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds i32, i32* %24, i64 -1
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %23, label %35

35:                                               ; preds = %29
  %36 = icmp eq i32* %24, %22
  br i1 %36, label %61, label %37

37:                                               ; preds = %35
  %38 = bitcast %"class.x11::Connection"** %9 to %"class.x11::XProto"**
  %39 = load %"class.x11::XProto"*, %"class.x11::XProto"** %38, align 8
  %40 = bitcast %"struct.x11::ConfigureWindowRequest"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %40) #17
  %41 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 0
  %42 = getelementptr inbounds i32, i32* %24, i64 -1
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %41, align 4
  %44 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %44, align 4
  %45 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %45, align 4
  %46 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %46, align 4
  %47 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %47, align 4
  %48 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %48, align 4
  %49 = getelementptr inbounds i32, i32* %25, i64 -1
  %50 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %50, align 4
  %51 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %52 = load i32, i32* %49, align 4
  store i32 %52, i32* %51, align 4
  %53 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %53, align 4
  %54 = getelementptr inbounds %"struct.x11::ConfigureWindowRequest", %"struct.x11::ConfigureWindowRequest"* %5, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 0, i32* %54, align 4
  %55 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto15ConfigureWindowERKNS_22ConfigureWindowRequestE(%"class.x11::XProto"* %39, %"struct.x11::ConfigureWindowRequest"* nonnull dereferenceable(60) %5) #17
  %56 = icmp eq %"class.x11::Connection::FutureImpl"* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %37
  %58 = bitcast %"class.x11::Connection::FutureImpl"* %55 to i8*
  call void @_ZdlPv(i8* %58) #18
  br label %59

59:                                               ; preds = %37, %57
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %40) #17
  %60 = load i32*, i32** %13, align 8
  br label %61

61:                                               ; preds = %23, %59, %35
  %62 = phi i32* [ %22, %35 ], [ %60, %59 ], [ %22, %23 ]
  %63 = icmp eq i32* %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %61
  %65 = ptrtoint i32* %62 to i64
  %66 = bitcast i32** %14 to i64*
  store i64 %65, i64* %66, align 8
  %67 = bitcast i32* %62 to i8*
  call void @_ZdlPv(i8* %67) #18
  br label %68

68:                                               ; preds = %61, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #17
  %69 = load i32*, i32** %7, align 8
  %70 = icmp eq i32* %69, null
  br i1 %70, label %75, label %71

71:                                               ; preds = %68
  %72 = ptrtoint i32* %69 to i64
  %73 = bitcast i32** %8 to i64*
  store i64 %72, i64* %73, align 8
  %74 = bitcast i32* %69 to i8*
  call void @_ZdlPv(i8* %74) #18
  br label %75

75:                                               ; preds = %68, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2ui12_GLOBAL__N_114GetParentsListEPN3x1110ConnectionENS1_6WindowE(%"class.std::__1::vector.524"* noalias sret, %"class.x11::Connection"*, i32) unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.x11::Future.754", align 8
  store i32 %2, i32* %4, align 4
  %6 = getelementptr inbounds %"class.std::__1::vector.524", %"class.std::__1::vector.524"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector.524", %"class.std::__1::vector.524"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast %"class.std::__1::vector.524"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #17
  %9 = icmp eq i32 %2, 0
  br i1 %9, label %115, label %10

10:                                               ; preds = %3
  %11 = bitcast i32** %6 to i64*
  %12 = bitcast %"class.std::__1::vector.524"* %0 to i64*
  %13 = bitcast i32** %7 to i64*
  %14 = bitcast %"class.x11::Future.754"* %5 to i8*
  %15 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %1, i64 0, i32 0
  %16 = getelementptr inbounds %"class.x11::Future.754", %"class.x11::Future.754"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %104, %10
  %18 = phi i64 [ 0, %10 ], [ %107, %104 ]
  %19 = phi i32* [ null, %10 ], [ %106, %104 ]
  %20 = phi i32* [ null, %10 ], [ %105, %104 ]
  %21 = phi i32 [ %2, %10 ], [ %102, %104 ]
  %22 = icmp eq i32* %20, %19
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  store i32 %21, i32* %20, align 4
  %24 = getelementptr inbounds i32, i32* %20, i64 1
  %25 = ptrtoint i32* %24 to i64
  store i64 %25, i64* %11, align 8
  br label %71

26:                                               ; preds = %17
  %27 = ptrtoint i32* %19 to i64
  %28 = load i64, i64* %12, align 8
  %29 = sub i64 %27, %28
  %30 = ashr exact i64 %29, 2
  %31 = add nsw i64 %30, 1
  %32 = icmp ugt i64 %31, 4611686018427387903
  br i1 %32, label %33, label %35

33:                                               ; preds = %26
  %34 = bitcast %"class.std::__1::vector.524"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #19
  unreachable

35:                                               ; preds = %26
  %36 = icmp ult i64 %30, 2305843009213693951
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = ashr exact i64 %29, 1
  %39 = icmp ult i64 %38, %31
  %40 = select i1 %39, i64 %31, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %37
  %43 = icmp ugt i64 %40, 4611686018427387903
  br i1 %43, label %44, label %45

44:                                               ; preds = %42
  call void @abort() #19
  unreachable

45:                                               ; preds = %42, %35
  %46 = phi i64 [ %40, %42 ], [ 4611686018427387903, %35 ]
  %47 = shl i64 %46, 2
  %48 = call i8* @_Znwm(i64 %47) #18
  %49 = bitcast i8* %48 to i32*
  br label %50

50:                                               ; preds = %45, %37
  %51 = phi i64 [ %46, %45 ], [ 0, %37 ]
  %52 = phi i32* [ %49, %45 ], [ null, %37 ]
  %53 = getelementptr inbounds i32, i32* %52, i64 %30
  %54 = getelementptr inbounds i32, i32* %52, i64 %51
  %55 = ptrtoint i32* %54 to i64
  store i32 %21, i32* %53, align 4
  %56 = getelementptr inbounds i32, i32* %53, i64 1
  %57 = ptrtoint i32* %56 to i64
  %58 = sub i64 %18, %28
  %59 = ashr exact i64 %58, 2
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds i32, i32* %53, i64 %60
  %62 = ptrtoint i32* %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %50
  %65 = bitcast i32* %61 to i8*
  %66 = inttoptr i64 %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %66, i64 %58, i1 false) #17
  br label %67

67:                                               ; preds = %64, %50
  store i64 %62, i64* %12, align 8
  store i64 %57, i64* %11, align 8
  store i64 %55, i64* %13, align 8
  %68 = icmp eq i64 %28, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = inttoptr i64 %28 to i8*
  call void @_ZdlPv(i8* %70) #18
  br label %71

71:                                               ; preds = %23, %67, %69
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  %72 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9QueryTreeERKNS_6WindowE(%"class.x11::XProto"* %15, i32* nonnull dereferenceable(4) %4) #17
  store %"class.x11::Connection::FutureImpl"* %72, %"class.x11::Connection::FutureImpl"** %16, align 8
  %73 = call { %"struct.x11::QueryTreeReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_14QueryTreeReplyEE4SyncEv(%"class.x11::Future.754"* nonnull %5)
  %74 = extractvalue { %"struct.x11::QueryTreeReply"*, %"class.x11::Error"* } %73, 0
  %75 = extractvalue { %"struct.x11::QueryTreeReply"*, %"class.x11::Error"* } %73, 1
  %76 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %16, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %16, align 8
  %77 = icmp eq %"class.x11::Connection::FutureImpl"* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.x11::Connection::FutureImpl"* %76 to i8*
  call void @_ZdlPv(i8* %79) #18
  br label %80

80:                                               ; preds = %71, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  %81 = icmp eq %"struct.x11::QueryTreeReply"* %74, null
  br i1 %81, label %108, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"struct.x11::QueryTreeReply", %"struct.x11::QueryTreeReply"* %74, i64 0, i32 2
  %84 = load i32, i32* %83, align 8
  store i32 %84, i32* %4, align 4
  %85 = icmp eq %"class.x11::Error"* %75, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = bitcast %"class.x11::Error"* %75 to void (%"class.x11::Error"*)***
  %88 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %88, i64 1
  %90 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %89, align 8
  call void %90(%"class.x11::Error"* nonnull %75) #17
  br label %91

91:                                               ; preds = %82, %86
  %92 = getelementptr inbounds %"struct.x11::QueryTreeReply", %"struct.x11::QueryTreeReply"* %74, i64 0, i32 3, i32 0, i32 0
  %93 = load i32*, i32** %92, align 8
  %94 = icmp eq i32* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %91
  %96 = ptrtoint i32* %93 to i64
  %97 = getelementptr inbounds %"struct.x11::QueryTreeReply", %"struct.x11::QueryTreeReply"* %74, i64 0, i32 3, i32 0, i32 1
  %98 = bitcast i32** %97 to i64*
  store i64 %96, i64* %98, align 8
  %99 = bitcast i32* %93 to i8*
  call void @_ZdlPv(i8* %99) #18
  br label %100

100:                                              ; preds = %91, %95
  %101 = bitcast %"struct.x11::QueryTreeReply"* %74 to i8*
  call void @_ZdlPv(i8* %101) #18
  %102 = load i32, i32* %4, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %115, label %104

104:                                              ; preds = %100
  %105 = load i32*, i32** %6, align 8
  %106 = load i32*, i32** %7, align 8
  %107 = ptrtoint i32* %105 to i64
  br label %17

108:                                              ; preds = %80
  %109 = icmp eq %"class.x11::Error"* %75, null
  br i1 %109, label %115, label %110

110:                                              ; preds = %108
  %111 = bitcast %"class.x11::Error"* %75 to void (%"class.x11::Error"*)***
  %112 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %112, i64 1
  %114 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %113, align 8
  call void %114(%"class.x11::Error"* nonnull %75) #17
  br label %115

115:                                              ; preds = %100, %3, %110, %108
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window10StackAtTopEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %3 = load i32, i32* %2, align 8
  tail call void @_ZN2ui11RaiseWindowEN3x116WindowE(i32 %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window10FlashFrameEb(%"class.ui::X11Window"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::WmHints", align 4
  %4 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 55
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = zext i8 %5 to i32
  %7 = zext i1 %1 to i32
  %8 = icmp eq i32 %6, %7
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = zext i1 %1 to i8
  %11 = bitcast %"struct.ui::WmHints"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %11) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 0, i64 36, i1 false) #17
  %12 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %13 = load i32, i32* %12, align 8
  %14 = call zeroext i1 @_ZN2ui10GetWmHintsEN3x116WindowEPNS_7WmHintsE(i32 %13, %"struct.ui::WmHints"* nonnull %3) #17
  %15 = getelementptr inbounds %"struct.ui::WmHints", %"struct.ui::WmHints"* %3, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, -257
  %18 = or i32 %16, 256
  %19 = select i1 %1, i32 %18, i32 %17
  store i32 %19, i32* %15, align 4
  %20 = load i32, i32* %12, align 8
  call void @_ZN2ui10SetWmHintsEN3x116WindowERKNS_7WmHintsE(i32 %20, %"struct.ui::WmHints"* nonnull dereferenceable(36) %3) #17
  store i8 %10, i8* %4, align 1
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %11) #17
  br label %21

21:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window17SetFlashFrameHintEb(%"class.ui::X11Window"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::WmHints", align 4
  %4 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 55
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = zext i8 %5 to i32
  %7 = zext i1 %1 to i32
  %8 = icmp eq i32 %6, %7
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = zext i1 %1 to i8
  %11 = bitcast %"struct.ui::WmHints"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %11) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 0, i64 36, i1 false)
  %12 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %13 = load i32, i32* %12, align 8
  %14 = call zeroext i1 @_ZN2ui10GetWmHintsEN3x116WindowEPNS_7WmHintsE(i32 %13, %"struct.ui::WmHints"* nonnull %3) #17
  %15 = getelementptr inbounds %"struct.ui::WmHints", %"struct.ui::WmHints"* %3, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, -257
  %18 = or i32 %16, 256
  %19 = select i1 %1, i32 %18, i32 %17
  store i32 %19, i32* %15, align 4
  %20 = load i32, i32* %12, align 8
  call void @_ZN2ui10SetWmHintsEN3x116WindowERKNS_7WmHintsE(i32 %20, %"struct.ui::WmHints"* nonnull dereferenceable(36) %3) #17
  store i8 %10, i8* %4, align 1
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %11) #17
  br label %21

21:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window8SetShapeENSt3__110unique_ptrINS1_6vectorIN3gfx4RectENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEERKNS4_9TransformE(%"class.ui::X11Window"*, %"class.std::__1::vector.535"*, %"class.gfx::Transform"* dereferenceable(68)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkRegion, align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %struct.SkIRect*
  %7 = alloca %class.SkPath, align 8
  %8 = alloca %class.SkPath, align 8
  %9 = alloca %class.SkMatrix, align 4
  %10 = icmp eq %"class.std::__1::vector.535"* %1, null
  br i1 %10, label %60, label %11

11:                                               ; preds = %3
  %12 = bitcast %class.SkRegion* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #17
  %13 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %4, i64 0, i32 1
  %14 = bitcast %class.SkRegion* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %4) #17
  %15 = getelementptr inbounds %"class.std::__1::vector.535", %"class.std::__1::vector.535"* %1, i64 0, i32 0, i32 0
  %16 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.535", %"class.std::__1::vector.535"* %1, i64 0, i32 0, i32 1
  %18 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %17, align 8
  %19 = icmp eq %"class.gfx::Rect"* %16, %18
  br i1 %19, label %24, label %20

20:                                               ; preds = %11
  %21 = bitcast { i64, i64 }* %5 to i8*
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  br label %31

24:                                               ; preds = %31, %11
  %25 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %2, i64 0, i32 0, i32 1
  %26 = load i8, i8* %25, align 4
  %27 = icmp eq i8 %26, 0
  %28 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %13, align 8
  %29 = icmp eq %"struct.SkRegion::RunHead"* %28, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  %30 = or i1 %27, %29
  br i1 %30, label %55, label %39

31:                                               ; preds = %20, %31
  %32 = phi %"class.gfx::Rect"* [ %16, %20 ], [ %37, %31 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #17
  %33 = call { i64, i64 } @_ZN3gfx13RectToSkIRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16) %32) #17
  %34 = extractvalue { i64, i64 } %33, 0
  store i64 %34, i64* %22, align 8
  %35 = extractvalue { i64, i64 } %33, 1
  store i64 %35, i64* %23, align 8
  %36 = call zeroext i1 @_ZN8SkRegion2opERKS_RK7SkIRectNS_2OpE(%class.SkRegion* nonnull %4, %class.SkRegion* nonnull dereferenceable(24) %4, %struct.SkIRect* nonnull dereferenceable(16) %6, i32 2) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #17
  %37 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %32, i64 1
  %38 = icmp eq %"class.gfx::Rect"* %37, %18
  br i1 %38, label %24, label %31

39:                                               ; preds = %24
  %40 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #17
  %41 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %7) #17
  %42 = call zeroext i1 @_ZNK8SkRegion15getBoundaryPathEP6SkPath(%class.SkRegion* nonnull %4, %class.SkPath* nonnull %7) #17
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = bitcast %class.SkPath* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #17
  %45 = bitcast %class.SkPath* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %8) #17
  %46 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %46) #17
  %47 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %2, i64 0, i32 0
  call void @_ZNK10SkMatrix44cv8SkMatrixEv(%class.SkMatrix* nonnull sret %9, %class.SkMatrix44* %47) #17
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* nonnull %7, %class.SkMatrix* nonnull dereferenceable(40) %9, %class.SkPath* nonnull %8, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %46) #17
  %48 = call %"class.std::__1::vector.396"* @_ZN3x1122CreateRegionFromSkPathERK6SkPath(%class.SkPath* nonnull dereferenceable(16) %8) #17
  %49 = ptrtoint %"class.std::__1::vector.396"* %48 to i64
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #17
  br label %53

50:                                               ; preds = %39
  %51 = call i8* @_Znwm(i64 24) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 24, i1 false) #17
  %52 = ptrtoint i8* %51 to i64
  br label %53

53:                                               ; preds = %50, %43
  %54 = phi i64 [ %49, %43 ], [ %52, %50 ]
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #17
  br label %58

55:                                               ; preds = %24
  %56 = call %"class.std::__1::vector.396"* @_ZN3x1124CreateRegionFromSkRegionERK8SkRegion(%class.SkRegion* nonnull dereferenceable(24) %4) #17
  %57 = ptrtoint %"class.std::__1::vector.396"* %56 to i64
  br label %58

58:                                               ; preds = %55, %53
  %59 = phi i64 [ %57, %55 ], [ %54, %53 ]
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #17
  br label %60

60:                                               ; preds = %3, %58
  %61 = phi i64 [ %59, %58 ], [ 0, %3 ]
  %62 = icmp ne i64 %61, 0
  %63 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 59
  %64 = zext i1 %62 to i8
  store i8 %64, i8* %63, align 8
  %65 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 58
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.393", %"class.std::__1::unique_ptr.393"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.std::__1::vector.396"*, %"class.std::__1::vector.396"** %66, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.393"* %65 to i64*
  store i64 %61, i64* %68, align 8
  %69 = icmp eq %"class.std::__1::vector.396"* %67, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %67, i64 0, i32 0, i32 0
  %72 = load %"struct.x11::Rectangle"*, %"struct.x11::Rectangle"** %71, align 8
  %73 = icmp eq %"struct.x11::Rectangle"* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %70
  %75 = ptrtoint %"struct.x11::Rectangle"* %72 to i64
  %76 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %67, i64 0, i32 0, i32 1
  %77 = bitcast %"struct.x11::Rectangle"** %76 to i64*
  store i64 %75, i64* %77, align 8
  %78 = bitcast %"struct.x11::Rectangle"* %72 to i8*
  call void @_ZdlPv(i8* %78) #18
  br label %79

79:                                               ; preds = %74, %70
  %80 = bitcast %"class.std::__1::vector.396"* %67 to i8*
  call void @_ZdlPv(i8* %80) #18
  br label %81

81:                                               ; preds = %79, %60
  call void @_ZN2ui9X11Window17ResetWindowRegionEv(%"class.ui::X11Window"* %0)
  br i1 %10, label %93, label %82

82:                                               ; preds = %81
  %83 = getelementptr inbounds %"class.std::__1::vector.535", %"class.std::__1::vector.535"* %1, i64 0, i32 0, i32 0
  %84 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %83, align 8
  %85 = icmp eq %"class.gfx::Rect"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = ptrtoint %"class.gfx::Rect"* %84 to i64
  %88 = getelementptr inbounds %"class.std::__1::vector.535", %"class.std::__1::vector.535"* %1, i64 0, i32 0, i32 1
  %89 = bitcast %"class.gfx::Rect"** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = bitcast %"class.gfx::Rect"* %84 to i8*
  call void @_ZdlPv(i8* %90) #18
  br label %91

91:                                               ; preds = %86, %82
  %92 = bitcast %"class.std::__1::vector.535"* %1 to i8*
  call void @_ZdlPv(i8* %92) #18
  br label %93

93:                                               ; preds = %81, %91
  ret void
}

declare void @_ZN8SkRegionC1Ev(%class.SkRegion*) unnamed_addr #1

declare { i64, i64 } @_ZN3gfx13RectToSkIRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #1

declare zeroext i1 @_ZNK8SkRegion15getBoundaryPathEP6SkPath(%class.SkRegion*, %class.SkPath*) local_unnamed_addr #1

declare void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath*, %class.SkMatrix* dereferenceable(40), %class.SkPath*, i32) local_unnamed_addr #1

declare void @_ZNK10SkMatrix44cv8SkMatrixEv(%class.SkMatrix* sret, %class.SkMatrix44*) local_unnamed_addr #1

declare %"class.std::__1::vector.396"* @_ZN3x1122CreateRegionFromSkPathERK6SkPath(%class.SkPath* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #2

declare %"class.std::__1::vector.396"* @_ZN3x1124CreateRegionFromSkRegionERK8SkRegion(%class.SkRegion* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkRegionD1Ev(%class.SkRegion*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window14SetAspectRatioERKN3gfx5SizeFE(%"class.ui::X11Window"* nocapture readonly, %"class.gfx::SizeF"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::SizeHints", align 4
  %4 = bitcast %"struct.ui::SizeHints"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %4) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %4, i8 0, i64 72, i1 false)
  %5 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %6 = load i32, i32* %5, align 8
  %7 = call zeroext i1 @_ZN2ui16GetWmNormalHintsEN3x116WindowEPNS_9SizeHintsE(i32 %6, %"struct.ui::SizeHints"* nonnull %3) #17
  %8 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %1, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fcmp une float %9, 0.000000e+00
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.ui::SizeHints", %"struct.ui::SizeHints"* %3, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br label %20

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %1, i64 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = fcmp oeq float %16, 0.000000e+00
  %18 = getelementptr inbounds %"struct.ui::SizeHints", %"struct.ui::SizeHints"* %3, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %24

20:                                               ; preds = %11, %14
  %21 = phi i32 [ %13, %11 ], [ %19, %14 ]
  %22 = phi i32* [ %12, %11 ], [ %18, %14 ]
  %23 = and i32 %21, -129
  store i32 %23, i32* %22, align 4
  br label %32

24:                                               ; preds = %14
  %25 = or i32 %19, 128
  store i32 %25, i32* %18, align 4
  %26 = fptosi float %9 to i32
  %27 = getelementptr inbounds %"struct.ui::SizeHints", %"struct.ui::SizeHints"* %3, i64 0, i32 13
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"struct.ui::SizeHints", %"struct.ui::SizeHints"* %3, i64 0, i32 11
  store i32 %26, i32* %28, align 4
  %29 = fptosi float %16 to i32
  %30 = getelementptr inbounds %"struct.ui::SizeHints", %"struct.ui::SizeHints"* %3, i64 0, i32 14
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %"struct.ui::SizeHints", %"struct.ui::SizeHints"* %3, i64 0, i32 12
  store i32 %29, i32* %31, align 4
  br label %32

32:                                               ; preds = %24, %20
  %33 = load i32, i32* %5, align 8
  call void @_ZN2ui16SetWmNormalHintsEN3x116WindowERKNS_9SizeHintsE(i32 %33, %"struct.ui::SizeHints"* nonnull dereferenceable(72) %3) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %4) #17
  ret void
}

declare zeroext i1 @_ZN2ui16GetWmNormalHintsEN3x116WindowEPNS_9SizeHintsE(i32, %"struct.ui::SizeHints"*) local_unnamed_addr #1

declare void @_ZN2ui16SetWmNormalHintsEN3x116WindowERKNS_9SizeHintsE(i32, %"struct.ui::SizeHints"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window14SetWindowIconsERKN3gfx9ImageSkiaES4_(%"class.ui::X11Window"* nocapture readonly, %"class.gfx::ImageSkia"* dereferenceable(8), %"class.gfx::ImageSkia"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.553", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::vector.553"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #17
  %9 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.gfx::internal::ImageSkiaStorage"*, %"class.gfx::internal::ImageSkiaStorage"** %9, align 8
  %11 = icmp eq %"class.gfx::internal::ImageSkiaStorage"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"* %1, float 1.000000e+00) #17
  call fastcc void @_ZN2ui12_GLOBAL__N_128SerializeImageRepresentationERKN3gfx12ImageSkiaRepEPNSt3__16vectorIjNS5_9allocatorIjEEEE(%"class.gfx::ImageSkiaRep"* dereferenceable(192) %13, %"class.std::__1::vector.553"* nonnull %4)
  br label %14

14:                                               ; preds = %12, %3
  %15 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %2, i64 0, i32 0, i32 0
  %16 = load %"class.gfx::internal::ImageSkiaStorage"*, %"class.gfx::internal::ImageSkiaStorage"** %15, align 8
  %17 = icmp eq %"class.gfx::internal::ImageSkiaStorage"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = call dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"* %2, float 1.000000e+00) #17
  call fastcc void @_ZN2ui12_GLOBAL__N_128SerializeImageRepresentationERKN3gfx12ImageSkiaRepEPNSt3__16vectorIjNS5_9allocatorIjEEEE(%"class.gfx::ImageSkiaRep"* dereferenceable(192) %19, %"class.std::__1::vector.553"* nonnull %4)
  br label %20

20:                                               ; preds = %18, %14
  %21 = load i32*, i32** %7, align 8
  %22 = load i32*, i32** %8, align 8
  %23 = icmp eq i32* %21, %22
  br i1 %23, label %45, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %26 = load i32, i32* %25, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #17
  %28 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 12, i8* %29, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i64 0, i64 0), i64 12, i1 false) #17
  %30 = getelementptr inbounds i8, i8* %27, i64 12
  store i8 0, i8* %30, align 4
  %31 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #17
  %32 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  %33 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyIjEENS_6FutureIvEENS_6WindowENS_4AtomES4_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE(i32 %26, i32 %31, i32 6, %"class.std::__1::vector.553"* nonnull dereferenceable(24) %4, %"class.x11::Connection"* %32)
  %34 = icmp eq %"class.x11::Connection::FutureImpl"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %24
  %36 = bitcast %"class.x11::Connection::FutureImpl"* %33 to i8*
  call void @_ZdlPv(i8* %36) #18
  br label %37

37:                                               ; preds = %24, %35
  %38 = load i8, i8* %29, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #18
  br label %43

43:                                               ; preds = %37, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #17
  %44 = load i32*, i32** %7, align 8
  br label %45

45:                                               ; preds = %43, %20
  %46 = phi i32* [ %44, %43 ], [ %21, %20 ]
  %47 = icmp eq i32* %46, null
  br i1 %47, label %52, label %48

48:                                               ; preds = %45
  %49 = ptrtoint i32* %46 to i64
  %50 = bitcast i32** %8 to i64*
  store i64 %49, i64* %50, align 8
  %51 = bitcast i32* %46 to i8*
  call void @_ZdlPv(i8* %51) #18
  br label %52

52:                                               ; preds = %45, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2ui12_GLOBAL__N_128SerializeImageRepresentationERKN3gfx12ImageSkiaRepEPNSt3__16vectorIjNS5_9allocatorIjEEEE(%"class.gfx::ImageSkiaRep"* dereferenceable(192), %"class.std::__1::vector.553"*) unnamed_addr #0 {
  %3 = tail call i32 @_ZNK3gfx12ImageSkiaRep8GetWidthEv(%"class.gfx::ImageSkiaRep"* %0) #17
  %4 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %1, i64 0, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %5, %7
  %9 = ptrtoint i32* %7 to i64
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  store i32 %3, i32* %5, align 4
  %11 = getelementptr inbounds i32, i32* %5, i64 1
  %12 = ptrtoint i32* %11 to i64
  %13 = bitcast i32** %4 to i64*
  store i64 %12, i64* %13, align 8
  br label %70

14:                                               ; preds = %2
  %15 = ptrtoint i32* %5 to i64
  %16 = bitcast i32** %4 to i64*
  %17 = bitcast %"class.std::__1::vector.553"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 2
  %21 = add nsw i64 %20, 1
  %22 = icmp ugt i64 %21, 4611686018427387903
  br i1 %22, label %23, label %25

23:                                               ; preds = %14
  %24 = bitcast %"class.std::__1::vector.553"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #19
  unreachable

25:                                               ; preds = %14
  %26 = bitcast i32** %6 to i64*
  %27 = sub i64 %9, %18
  %28 = ashr exact i64 %27, 2
  %29 = icmp ult i64 %28, 2305843009213693951
  br i1 %29, label %30, label %38

30:                                               ; preds = %25
  %31 = ashr exact i64 %27, 1
  %32 = icmp ult i64 %31, %21
  %33 = select i1 %32, i64 %21, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %30
  %36 = icmp ugt i64 %33, 4611686018427387903
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  tail call void @abort() #19
  unreachable

38:                                               ; preds = %35, %25
  %39 = phi i64 [ %33, %35 ], [ 4611686018427387903, %25 ]
  %40 = shl i64 %39, 2
  %41 = tail call i8* @_Znwm(i64 %40) #18
  %42 = bitcast i8* %41 to i32*
  br label %43

43:                                               ; preds = %38, %30
  %44 = phi i64 [ %39, %38 ], [ 0, %30 ]
  %45 = phi i32* [ %42, %38 ], [ null, %30 ]
  %46 = getelementptr inbounds i32, i32* %45, i64 %20
  %47 = getelementptr inbounds i32, i32* %45, i64 %44
  %48 = ptrtoint i32* %47 to i64
  store i32 %3, i32* %46, align 4
  %49 = getelementptr inbounds i32, i32* %46, i64 1
  %50 = ptrtoint i32* %49 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %1, i64 0, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = load i64, i64* %16, align 8
  %54 = ptrtoint i32* %52 to i64
  %55 = sub i64 %53, %54
  %56 = ashr exact i64 %55, 2
  %57 = sub nsw i64 0, %56
  %58 = getelementptr inbounds i32, i32* %46, i64 %57
  %59 = ptrtoint i32* %58 to i64
  %60 = icmp sgt i64 %55, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %43
  %62 = bitcast i32* %58 to i8*
  %63 = bitcast i32* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 %63, i64 %55, i1 false) #17
  %64 = load i32*, i32** %51, align 8
  br label %65

65:                                               ; preds = %61, %43
  %66 = phi i32* [ %52, %43 ], [ %64, %61 ]
  store i64 %59, i64* %17, align 8
  store i64 %50, i64* %16, align 8
  store i64 %48, i64* %26, align 8
  %67 = icmp eq i32* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %65
  %69 = bitcast i32* %66 to i8*
  tail call void @_ZdlPv(i8* %69) #18
  br label %70

70:                                               ; preds = %10, %65, %68
  %71 = tail call i32 @_ZNK3gfx12ImageSkiaRep9GetHeightEv(%"class.gfx::ImageSkiaRep"* %0) #17
  %72 = load i32*, i32** %4, align 8
  %73 = load i32*, i32** %6, align 8
  %74 = icmp eq i32* %72, %73
  %75 = ptrtoint i32* %73 to i64
  br i1 %74, label %80, label %76

76:                                               ; preds = %70
  store i32 %71, i32* %72, align 4
  %77 = getelementptr inbounds i32, i32* %72, i64 1
  %78 = ptrtoint i32* %77 to i64
  %79 = bitcast i32** %4 to i64*
  store i64 %78, i64* %79, align 8
  br label %136

80:                                               ; preds = %70
  %81 = ptrtoint i32* %72 to i64
  %82 = bitcast i32** %4 to i64*
  %83 = bitcast %"class.std::__1::vector.553"* %1 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 %81, %84
  %86 = ashr exact i64 %85, 2
  %87 = add nsw i64 %86, 1
  %88 = icmp ugt i64 %87, 4611686018427387903
  br i1 %88, label %89, label %91

89:                                               ; preds = %80
  %90 = bitcast %"class.std::__1::vector.553"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %90) #19
  unreachable

91:                                               ; preds = %80
  %92 = bitcast i32** %6 to i64*
  %93 = sub i64 %75, %84
  %94 = ashr exact i64 %93, 2
  %95 = icmp ult i64 %94, 2305843009213693951
  br i1 %95, label %96, label %104

96:                                               ; preds = %91
  %97 = ashr exact i64 %93, 1
  %98 = icmp ult i64 %97, %87
  %99 = select i1 %98, i64 %87, i64 %97
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %109, label %101

101:                                              ; preds = %96
  %102 = icmp ugt i64 %99, 4611686018427387903
  br i1 %102, label %103, label %104

103:                                              ; preds = %101
  tail call void @abort() #19
  unreachable

104:                                              ; preds = %101, %91
  %105 = phi i64 [ %99, %101 ], [ 4611686018427387903, %91 ]
  %106 = shl i64 %105, 2
  %107 = tail call i8* @_Znwm(i64 %106) #18
  %108 = bitcast i8* %107 to i32*
  br label %109

109:                                              ; preds = %104, %96
  %110 = phi i64 [ %105, %104 ], [ 0, %96 ]
  %111 = phi i32* [ %108, %104 ], [ null, %96 ]
  %112 = getelementptr inbounds i32, i32* %111, i64 %86
  %113 = getelementptr inbounds i32, i32* %111, i64 %110
  %114 = ptrtoint i32* %113 to i64
  store i32 %71, i32* %112, align 4
  %115 = getelementptr inbounds i32, i32* %112, i64 1
  %116 = ptrtoint i32* %115 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %1, i64 0, i32 0, i32 0
  %118 = load i32*, i32** %117, align 8
  %119 = load i64, i64* %82, align 8
  %120 = ptrtoint i32* %118 to i64
  %121 = sub i64 %119, %120
  %122 = ashr exact i64 %121, 2
  %123 = sub nsw i64 0, %122
  %124 = getelementptr inbounds i32, i32* %112, i64 %123
  %125 = ptrtoint i32* %124 to i64
  %126 = icmp sgt i64 %121, 0
  br i1 %126, label %127, label %131

127:                                              ; preds = %109
  %128 = bitcast i32* %124 to i8*
  %129 = bitcast i32* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %128, i8* align 4 %129, i64 %121, i1 false) #17
  %130 = load i32*, i32** %117, align 8
  br label %131

131:                                              ; preds = %127, %109
  %132 = phi i32* [ %118, %109 ], [ %130, %127 ]
  store i64 %125, i64* %83, align 8
  store i64 %116, i64* %82, align 8
  store i64 %114, i64* %92, align 8
  %133 = icmp eq i32* %132, null
  br i1 %133, label %136, label %134

134:                                              ; preds = %131
  %135 = bitcast i32* %132 to i8*
  tail call void @_ZdlPv(i8* %135) #18
  br label %136

136:                                              ; preds = %76, %131, %134
  %137 = tail call dereferenceable(56) %class.SkBitmap* @_ZNK3gfx12ImageSkiaRep9GetBitmapEv(%"class.gfx::ImageSkiaRep"* %0) #17
  %138 = icmp eq i32 %71, 0
  br i1 %138, label %148, label %139

139:                                              ; preds = %136
  %140 = icmp eq i32 %3, 0
  %141 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %137, i64 0, i32 1
  %142 = bitcast i32** %4 to i64*
  %143 = bitcast %"class.std::__1::vector.553"* %1 to i64*
  %144 = bitcast i32** %6 to i64*
  %145 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %1, i64 0, i32 0, i32 0
  br label %146

146:                                              ; preds = %149, %139
  %147 = phi i32 [ 0, %139 ], [ %150, %149 ]
  br i1 %140, label %149, label %152

148:                                              ; preds = %149, %136
  ret void

149:                                              ; preds = %214, %146
  %150 = add nuw i32 %147, 1
  %151 = icmp eq i32 %150, %71
  br i1 %151, label %148, label %146

152:                                              ; preds = %146, %214
  %153 = phi i32 [ %215, %214 ], [ 0, %146 ]
  %154 = tail call i32 @_ZNK8SkPixmap8getColorEii(%class.SkPixmap* %141, i32 %153, i32 %147) #17
  %155 = load i32*, i32** %4, align 8
  %156 = load i32*, i32** %6, align 8
  %157 = icmp ult i32* %155, %156
  %158 = ptrtoint i32* %156 to i64
  br i1 %157, label %159, label %162

159:                                              ; preds = %152
  store i32 %154, i32* %155, align 4
  %160 = getelementptr inbounds i32, i32* %155, i64 1
  %161 = ptrtoint i32* %160 to i64
  store i64 %161, i64* %142, align 8
  br label %214

162:                                              ; preds = %152
  %163 = ptrtoint i32* %155 to i64
  %164 = load i64, i64* %143, align 8
  %165 = sub i64 %163, %164
  %166 = ashr exact i64 %165, 2
  %167 = add nsw i64 %166, 1
  %168 = icmp ugt i64 %167, 4611686018427387903
  br i1 %168, label %169, label %171

169:                                              ; preds = %162
  %170 = bitcast %"class.std::__1::vector.553"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %170) #19
  unreachable

171:                                              ; preds = %162
  %172 = sub i64 %158, %164
  %173 = ashr exact i64 %172, 2
  %174 = icmp ult i64 %173, 2305843009213693951
  br i1 %174, label %175, label %183

175:                                              ; preds = %171
  %176 = ashr exact i64 %172, 1
  %177 = icmp ult i64 %176, %167
  %178 = select i1 %177, i64 %167, i64 %176
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %188, label %180

180:                                              ; preds = %175
  %181 = icmp ugt i64 %178, 4611686018427387903
  br i1 %181, label %182, label %183

182:                                              ; preds = %180
  tail call void @abort() #19
  unreachable

183:                                              ; preds = %180, %171
  %184 = phi i64 [ %178, %180 ], [ 4611686018427387903, %171 ]
  %185 = shl i64 %184, 2
  %186 = tail call i8* @_Znwm(i64 %185) #18
  %187 = bitcast i8* %186 to i32*
  br label %188

188:                                              ; preds = %183, %175
  %189 = phi i64 [ %184, %183 ], [ 0, %175 ]
  %190 = phi i32* [ %187, %183 ], [ null, %175 ]
  %191 = getelementptr inbounds i32, i32* %190, i64 %166
  %192 = getelementptr inbounds i32, i32* %190, i64 %189
  %193 = ptrtoint i32* %192 to i64
  store i32 %154, i32* %191, align 4
  %194 = getelementptr inbounds i32, i32* %191, i64 1
  %195 = ptrtoint i32* %194 to i64
  %196 = load i32*, i32** %145, align 8
  %197 = load i64, i64* %142, align 8
  %198 = ptrtoint i32* %196 to i64
  %199 = sub i64 %197, %198
  %200 = ashr exact i64 %199, 2
  %201 = sub nsw i64 0, %200
  %202 = getelementptr inbounds i32, i32* %191, i64 %201
  %203 = ptrtoint i32* %202 to i64
  %204 = icmp sgt i64 %199, 0
  br i1 %204, label %205, label %209

205:                                              ; preds = %188
  %206 = bitcast i32* %202 to i8*
  %207 = bitcast i32* %196 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %206, i8* align 4 %207, i64 %199, i1 false) #17
  %208 = load i32*, i32** %145, align 8
  br label %209

209:                                              ; preds = %205, %188
  %210 = phi i32* [ %196, %188 ], [ %208, %205 ]
  store i64 %203, i64* %143, align 8
  store i64 %195, i64* %142, align 8
  store i64 %193, i64* %144, align 8
  %211 = icmp eq i32* %210, null
  br i1 %211, label %214, label %212

212:                                              ; preds = %209
  %213 = bitcast i32* %210 to i8*
  tail call void @_ZdlPv(i8* %213) #18
  br label %214

214:                                              ; preds = %159, %209, %212
  %215 = add nuw i32 %153, 1
  %216 = icmp eq i32 %215, %3
  br i1 %216, label %149, label %152
}

declare dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"*, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyIjEENS_6FutureIvEENS_6WindowENS_4AtomES4_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE(i32, i32, i32, %"class.std::__1::vector.553"* dereferenceable(24), %"class.x11::Connection"*) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.std::__1::vector.769", align 8
  %7 = alloca %"struct.x11::ChangePropertyRequest", align 8
  %8 = bitcast %"class.std::__1::vector.769"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #17
  %9 = getelementptr inbounds %"class.std::__1::vector.769", %"class.std::__1::vector.769"* %6, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.769", %"class.std::__1::vector.769"* %6, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.769", %"class.std::__1::vector.769"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %3, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.553"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #17
  %18 = icmp eq i64 %17, 0
  %19 = inttoptr i64 %16 to i8*
  br i1 %18, label %33, label %20

20:                                               ; preds = %5
  %21 = icmp slt i64 %17, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector.769"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %23) #19
  unreachable

24:                                               ; preds = %20
  %25 = tail call i8* @_Znwm(i64 %17) #18
  store i8* %25, i8** %9, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %17
  store i8* %26, i8** %11, align 8
  %27 = bitcast i8** %10 to i64*
  %28 = ptrtoint i8* %25 to i64
  %29 = sub i64 %17, %28
  %30 = getelementptr i8, i8* %25, i64 %29
  %31 = ptrtoint i8* %30 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %25, i8 0, i64 %31, i1 false) #17
  %32 = ptrtoint i8* %26 to i64
  store i64 %32, i64* %27, align 8
  br label %33

33:                                               ; preds = %5, %24
  %34 = phi i8* [ null, %5 ], [ %25, %24 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 4 %19, i64 %17, i1 false)
  %35 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %4, i64 0, i32 0
  %36 = bitcast %"struct.x11::ChangePropertyRequest"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #17
  %37 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 0
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 1
  store i32 %0, i32* %38, align 4
  %39 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 2
  store i32 %1, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 3
  store i32 %2, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 4
  store i8 32, i8* %41, align 8
  %42 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 5
  %43 = load i64, i64* %13, align 8
  %44 = load i64, i64* %15, align 8
  %45 = sub i64 %43, %44
  %46 = lshr exact i64 %45, 2
  %47 = trunc i64 %46 to i32
  store i32 %47, i32* %42, align 4
  %48 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 6
  %49 = call %"class.base::RefCountedBytes"* @_ZN4base15RefCountedBytes10TakeVectorEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::vector.769"* nonnull %6) #17
  %50 = ptrtoint %"class.base::RefCountedBytes"* %49 to i64
  %51 = bitcast %class.scoped_refptr.342* %48 to i64*
  store i64 %50, i64* %51, align 8
  %52 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto14ChangePropertyERKNS_21ChangePropertyRequestE(%"class.x11::XProto"* %35, %"struct.x11::ChangePropertyRequest"* nonnull dereferenceable(32) %7) #17
  %53 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 6, i32 0
  %54 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %55 = icmp eq %"class.base::RefCountedMemory"* %54, null
  br i1 %55, label %68, label %56

56:                                               ; preds = %33
  %57 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %54, i64 0, i32 1
  %58 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw sub i32* %58, i32 1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %68

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %57, i64 -2
  %63 = bitcast %"class.base::RefCountedThreadSafe.343"* %62 to %"class.base::RefCountedMemory"*
  %64 = bitcast %"class.base::RefCountedThreadSafe.343"* %62 to void (%"class.base::RefCountedMemory"*)***
  %65 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %65, i64 3
  %67 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %66, align 8
  call void %67(%"class.base::RefCountedMemory"* nonnull %63) #17
  br label %68

68:                                               ; preds = %61, %56, %33
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #17
  %69 = load i8*, i8** %9, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = ptrtoint i8* %69 to i64
  %73 = bitcast i8** %10 to i64*
  store i64 %72, i64* %73, align 8
  call void @_ZdlPv(i8* nonnull %69) #18
  br label %74

74:                                               ; preds = %68, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #17
  ret %"class.x11::Connection::FutureImpl"* %52
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window22SizeConstraintsChangedEv(%"class.ui::X11Window"* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN2ui9X11Window19UpdateMinAndMaxSizeEv(%"class.ui::X11Window"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui9X11Window35IsTranslucentWindowOpacitySupportedEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = tail call %"class.ui::XVisualManager"* @_ZN2ui14XVisualManager11GetInstanceEv() #17
  %7 = tail call zeroext i1 @_ZNK2ui14XVisualManager19ArgbVisualAvailableEv(%"class.ui::XVisualManager"* %6) #17
  br label %8

8:                                                ; preds = %5, %1
  %9 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 38
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp ne i8 %10, 0
  ret i1 %11
}

declare %"class.ui::XVisualManager"* @_ZN2ui14XVisualManager11GetInstanceEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2ui14XVisualManager19ArgbVisualAvailableEv(%"class.ui::XVisualManager"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window10SetOpacityEf(%"class.ui::X11Window"* nocapture readonly, float) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.553", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = fmul float %1, 2.550000e+02
  %7 = fptoui float %6 to i32
  %8 = and i32 %7, 255
  %9 = mul nuw i32 %8, 16843009
  %10 = icmp eq i32 %9, -1
  %11 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %12 = load i32, i32* %11, align 8
  br i1 %10, label %13, label %24

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #17
  %15 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  store i8 22, i8* %16, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i64 0, i64 0), i64 22, i1 false) #17
  %17 = getelementptr inbounds i8, i8* %14, i64 22
  store i8 0, i8* %17, align 2
  %18 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #17
  call void @_ZN3x1114DeletePropertyENS_6WindowENS_4AtomE(i32 %12, i32 %18) #17
  %19 = load i8, i8* %16, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %58

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #18
  br label %58

24:                                               ; preds = %2
  %25 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #17
  %26 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 22, i8* %27, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i64 0, i64 0), i64 22, i1 false) #17
  %28 = getelementptr inbounds i8, i8* %25, i64 22
  store i8 0, i8* %28, align 2
  %29 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #17
  %30 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  %31 = bitcast %"class.std::__1::vector.553"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  %32 = call i8* @_Znwm(i64 4) #18
  %33 = bitcast i8* %32 to i32*
  %34 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %3, i64 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::vector.553"* %3 to i8**
  store i8* %32, i8** %35, align 8
  %36 = getelementptr inbounds i8, i8* %32, i64 4
  %37 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast i32** %37 to i8**
  store i8* %36, i8** %38, align 8
  %39 = bitcast i32** %34 to i64*
  store i32 %9, i32* %33, align 4
  %40 = ptrtoint i8* %36 to i64
  store i64 %40, i64* %39, align 8
  %41 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyIjEENS_6FutureIvEENS_6WindowENS_4AtomES4_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE(i32 %12, i32 %29, i32 6, %"class.std::__1::vector.553"* nonnull dereferenceable(24) %3, %"class.x11::Connection"* %30) #17
  %42 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %3, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %24
  %46 = ptrtoint i32* %43 to i64
  store i64 %46, i64* %39, align 8
  %47 = bitcast i32* %43 to i8*
  call void @_ZdlPv(i8* %47) #18
  br label %48

48:                                               ; preds = %24, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  %49 = icmp eq %"class.x11::Connection::FutureImpl"* %41, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %48
  %51 = bitcast %"class.x11::Connection::FutureImpl"* %41 to i8*
  call void @_ZdlPv(i8* %51) #18
  br label %52

52:                                               ; preds = %48, %50
  %53 = load i8, i8* %27, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #18
  br label %58

58:                                               ; preds = %55, %52, %21, %13
  %59 = phi i8* [ %14, %13 ], [ %14, %21 ], [ %25, %52 ], [ %25, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #17
  ret void
}

declare void @_ZN3x1114DeletePropertyENS_6WindowENS_4AtomE(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui9X11Window12GetWorkspaceEv(%"class.std::__1::basic_string"* noalias sret, %"class.ui::X11Window"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %1, i64 0, i32 39, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 4
  %6 = trunc i64 %5 to i8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = lshr i64 %5, 32
  %10 = trunc i64 %9 to i32
  tail call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* sret %0, i32 %10) #17
  br label %13

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #17
  br label %13

13:                                               ; preds = %11, %8
  ret void
}

declare void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_NK2ui9X11Window12GetWorkspaceEv(%"class.std::__1::basic_string"* noalias sret, %"class.ui::X11Window"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %1, i64 -1, i32 69, i32 0, i64 86
  %4 = bitcast i32* %3 to i64*
  %5 = load i64, i64* %4, align 4, !noalias !69
  %6 = trunc i64 %5 to i8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = lshr i64 %5, 32
  %10 = trunc i64 %9 to i32
  tail call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* sret %0, i32 %10) #17
  br label %13

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #17, !alias.scope !69
  br label %13

13:                                               ; preds = %8, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window25SetVisibleOnAllWorkspacesEb(%"class.ui::X11Window"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"struct.std::__1::array.522", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  store i8 20, i8* %9, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i64 20, i1 false) #17
  %10 = getelementptr inbounds i8, i8* %7, i64 20
  store i8 0, i8* %10, align 4
  %11 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #17
  call void @_ZN2ui9X11Window14SetWMSpecStateEbN3x114AtomES2_(%"class.ui::X11Window"* %0, i1 zeroext %1, i32 %11, i32 0)
  %12 = load i8, i8* %9, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %2, %14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  %18 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #17
  store i32 0, i32* %4, align 4
  br i1 %1, label %19, label %20

19:                                               ; preds = %17
  store i32 -1, i32* %4, align 4
  br label %22

20:                                               ; preds = %17
  %21 = call zeroext i1 @_ZN2ui17GetCurrentDesktopEPi(i32* nonnull %4) #17
  br i1 %21, label %22, label %49

22:                                               ; preds = %20, %19
  %23 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 39, i32 0, i32 0, i32 0, i32 0
  %24 = bitcast i8* %23 to i64*
  store i64 -4294967295, i64* %24, align 4
  %25 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 27
  %28 = load i32, i32* %27, align 4
  %29 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #17
  %30 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 15, i8* %31, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i64 15, i1 false) #17
  %32 = getelementptr inbounds i8, i8* %29, i64 15
  store i8 0, i8* %32, align 1
  %33 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #17
  %34 = getelementptr inbounds %"struct.std::__1::array.522", %"struct.std::__1::array.522"* %6, i64 0, i32 0, i64 0
  %35 = load i32, i32* %4, align 4
  store i32 %35, i32* %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::array.522", %"struct.std::__1::array.522"* %6, i64 0, i32 0, i64 1
  %37 = bitcast i32* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %37, i8 0, i64 16, i1 false)
  %38 = call %"class.x11::Connection::FutureImpl"* @_ZN2ui17SendClientMessageEN3x116WindowES1_NS0_4AtomENSt3__15arrayIjLm5EEENS0_9EventMaskE(i32 %26, i32 %28, i32 %33, %"struct.std::__1::array.522"* nonnull byval(%"struct.std::__1::array.522") align 8 %6, i32 1572864) #17
  %39 = icmp eq %"class.x11::Connection::FutureImpl"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %22
  %41 = bitcast %"class.x11::Connection::FutureImpl"* %38 to i8*
  call void @_ZdlPv(i8* %41) #18
  br label %42

42:                                               ; preds = %22, %40
  %43 = load i8, i8* %31, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #18
  br label %48

48:                                               ; preds = %42, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #17
  br label %49

49:                                               ; preds = %20, %48
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #17
  ret void
}

declare zeroext i1 @_ZN2ui17GetCurrentDesktopEPi(i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N2ui9X11Window25SetVisibleOnAllWorkspacesEb(%"class.ui::X11Window"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 69, i32 0, i64 3
  %4 = bitcast i32* %3 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11Window25SetVisibleOnAllWorkspacesEb(%"class.ui::X11Window"* %4, i1 zeroext %1)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui9X11Window24IsVisibleOnAllWorkspacesEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 39, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 39, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, -1
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ %8, %5 ], [ false, %1 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZThn56_NK2ui9X11Window24IsVisibleOnAllWorkspacesEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 69, i32 0, i64 86
  %3 = bitcast i32* %2 to i8*
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 69, i32 0, i64 87
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, -1
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i1 [ %9, %6 ], [ false, %1 ]
  ret i1 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui9X11Window29SetWorkspaceExtensionDelegateEPNS_26WorkspaceExtensionDelegateE(%"class.ui::X11Window"* nocapture, %"class.ui::WorkspaceExtensionDelegate"*) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 13
  store %"class.ui::WorkspaceExtensionDelegate"* %1, %"class.ui::WorkspaceExtensionDelegate"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZThn56_N2ui9X11Window29SetWorkspaceExtensionDelegateEPNS_26WorkspaceExtensionDelegateE(%"class.ui::X11Window"* nocapture, %"class.ui::WorkspaceExtensionDelegate"*) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 69, i32 0, i64 35
  %4 = bitcast i32* %3 to %"class.ui::WorkspaceExtensionDelegate"**
  store %"class.ui::WorkspaceExtensionDelegate"* %1, %"class.ui::WorkspaceExtensionDelegate"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui9X11Window24IsSyncExtensionAvailableEv(%"class.ui::X11Window"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN2ui24IsSyncExtensionAvailableEv() #17
  ret i1 %2
}

declare zeroext i1 @_ZN2ui24IsSyncExtensionAvailableEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn64_NK2ui9X11Window24IsSyncExtensionAvailableEv(%"class.ui::X11Window"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN2ui24IsSyncExtensionAvailableEv() #17
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui9X11Window10IsWmTilingEv(%"class.ui::X11Window"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZN2ui18GuessWindowManagerEv() #17
  %3 = tail call zeroext i1 @_ZN2ui10IsWmTilingENS_17WindowManagerNameE(i32 %2) #17
  ret i1 %3
}

declare zeroext i1 @_ZN2ui10IsWmTilingENS_17WindowManagerNameE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn64_NK2ui9X11Window10IsWmTilingEv(%"class.ui::X11Window"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZN2ui18GuessWindowManagerEv() #17
  %3 = tail call zeroext i1 @_ZN2ui10IsWmTilingENS_17WindowManagerNameE(i32 %2) #17
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window25OnCompleteSwapAfterResizeEv(%"class.ui::X11Window"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.x11::Sync::SetCounterRequest", align 4
  %3 = alloca %"struct.x11::Sync::SetCounterRequest", align 4
  %4 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 66
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %32, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 64
  %9 = load i64, i64* %8, align 8
  %10 = srem i64 %9, 2
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %55

12:                                               ; preds = %7
  %13 = add nsw i64 %9, 3
  store i64 %13, i64* %8, align 8
  %14 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %15 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %16 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 52
  %17 = load i32, i32* %16, align 4
  %18 = lshr i64 %13, 32
  %19 = trunc i64 %18 to i32
  %20 = trunc i64 %13 to i32
  %21 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %15, i64 0, i32 1, i32 16, i32 0, i32 0, i32 0
  %22 = load %"class.x11::Sync"*, %"class.x11::Sync"** %21, align 8
  %23 = bitcast %"struct.x11::Sync::SetCounterRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %23) #17
  %24 = getelementptr inbounds %"struct.x11::Sync::SetCounterRequest", %"struct.x11::Sync::SetCounterRequest"* %3, i64 0, i32 0
  store i32 %17, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.x11::Sync::SetCounterRequest", %"struct.x11::Sync::SetCounterRequest"* %3, i64 0, i32 1, i32 0
  store i32 %19, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.x11::Sync::SetCounterRequest", %"struct.x11::Sync::SetCounterRequest"* %3, i64 0, i32 1, i32 1
  store i32 %20, i32* %26, align 4
  %27 = call %"class.x11::Connection::FutureImpl"* @_ZN3x114Sync10SetCounterERKNS0_17SetCounterRequestE(%"class.x11::Sync"* %22, %"struct.x11::Sync::SetCounterRequest"* nonnull dereferenceable(12) %3) #17
  %28 = icmp eq %"class.x11::Connection::FutureImpl"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %12
  %30 = bitcast %"class.x11::Connection::FutureImpl"* %27 to i8*
  call void @_ZdlPv(i8* %30) #18
  br label %31

31:                                               ; preds = %12, %29
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %23) #17
  br label %55

32:                                               ; preds = %1
  %33 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 63
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %55, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %38 = load %"class.x11::Connection"*, %"class.x11::Connection"** %37, align 8
  %39 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 51
  %40 = load i32, i32* %39, align 8
  %41 = lshr i64 %34, 32
  %42 = trunc i64 %41 to i32
  %43 = trunc i64 %34 to i32
  %44 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %38, i64 0, i32 1, i32 16, i32 0, i32 0, i32 0
  %45 = load %"class.x11::Sync"*, %"class.x11::Sync"** %44, align 8
  %46 = bitcast %"struct.x11::Sync::SetCounterRequest"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %46) #17
  %47 = getelementptr inbounds %"struct.x11::Sync::SetCounterRequest", %"struct.x11::Sync::SetCounterRequest"* %2, i64 0, i32 0
  store i32 %40, i32* %47, align 4
  %48 = getelementptr inbounds %"struct.x11::Sync::SetCounterRequest", %"struct.x11::Sync::SetCounterRequest"* %2, i64 0, i32 1, i32 0
  store i32 %42, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.x11::Sync::SetCounterRequest", %"struct.x11::Sync::SetCounterRequest"* %2, i64 0, i32 1, i32 1
  store i32 %43, i32* %49, align 4
  %50 = call %"class.x11::Connection::FutureImpl"* @_ZN3x114Sync10SetCounterERKNS0_17SetCounterRequestE(%"class.x11::Sync"* %45, %"struct.x11::Sync::SetCounterRequest"* nonnull dereferenceable(12) %2) #17
  %51 = icmp eq %"class.x11::Connection::FutureImpl"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %36
  %53 = bitcast %"class.x11::Connection::FutureImpl"* %50 to i8*
  call void @_ZdlPv(i8* %53) #18
  br label %54

54:                                               ; preds = %36, %52
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %46) #17
  store i64 0, i64* %33, align 8
  br label %55

55:                                               ; preds = %32, %7, %31, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N2ui9X11Window25OnCompleteSwapAfterResizeEv(%"class.ui::X11Window"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 69, i32 0, i64 1
  %3 = bitcast i32* %2 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11Window25OnCompleteSwapAfterResizeEv(%"class.ui::X11Window"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2ui9X11Window25GetXRootWindowOuterBoundsEv(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4)
  %5 = bitcast { i64, i64 }* %2 to %"class.gfx::Rect"*
  %6 = bitcast { i64, i64 }* %3 to %"class.gfx::Insets"*
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %8 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36
  %9 = bitcast %"class.gfx::Rect"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 4 %9, i64 16, i1 false) #17
  %10 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 61
  %12 = tail call { i64, i64 } @_ZNK3gfx6InsetsngEv(%"class.gfx::Insets"* %11) #17
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %14 = extractvalue { i64, i64 } %12, 0
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %16 = extractvalue { i64, i64 } %12, 1
  store i64 %16, i64* %15, align 8
  call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* nonnull %5, %"class.gfx::Insets"* nonnull dereferenceable(16) %6) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #17
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %18, 0
  %20 = load i64, i64* %7, align 8
  %21 = insertvalue { i64, i64 } %19, i64 %20, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4)
  ret { i64, i64 } %21
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2ui9X11Window14GetOuterBoundsEv(%"class.ui::X11Window"*) local_unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"class.gfx::Rect"*
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.gfx::Insets"*
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %7 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36
  %8 = bitcast { i64, i64 }* %2 to i8*
  %9 = bitcast %"class.gfx::Rect"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 4 %9, i64 16, i1 false)
  %10 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 61
  %12 = tail call { i64, i64 } @_ZNK3gfx6InsetsngEv(%"class.gfx::Insets"* %11)
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %14 = extractvalue { i64, i64 } %12, 0
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %16 = extractvalue { i64, i64 } %12, 1
  store i64 %16, i64* %15, align 8
  call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* nonnull %3, %"class.gfx::Insets"* nonnull dereferenceable(16) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #17
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %18, 0
  %20 = load i64, i64* %6, align 8
  %21 = insertvalue { i64, i64 } %19, i64 %20, 1
  ret { i64, i64 } %21
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZThn64_NK2ui9X11Window25GetXRootWindowOuterBoundsEv(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #17
  %5 = bitcast { i64, i64 }* %2 to %"class.gfx::Rect"*
  %6 = bitcast { i64, i64 }* %3 to %"class.gfx::Insets"*
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %8 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 69, i32 0, i64 78
  %9 = bitcast i32* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 4 %9, i64 16, i1 false) #17
  %10 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 69, i32 0, i64 104
  %12 = bitcast i32* %11 to %"class.gfx::Insets"*
  %13 = tail call { i64, i64 } @_ZNK3gfx6InsetsngEv(%"class.gfx::Insets"* %12) #17
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %15 = extractvalue { i64, i64 } %13, 0
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %17 = extractvalue { i64, i64 } %13, 1
  store i64 %17, i64* %16, align 8
  call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* nonnull %5, %"class.gfx::Insets"* nonnull dereferenceable(16) %6) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #17
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = insertvalue { i64, i64 } undef, i64 %19, 0
  %21 = load i64, i64* %7, align 8
  %22 = insertvalue { i64, i64 } %20, i64 %21, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #17
  ret { i64, i64 } %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui9X11Window22ContainsPointInXRegionERKN3gfx5PointE(%"class.ui::X11Window"* nocapture readonly, %"class.gfx::Point"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Rect", align 4
  %4 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 58, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector.396"*, %"class.std::__1::vector.396"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.396"* %5, null
  br i1 %6, label %59, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %5, i64 0, i32 0, i32 0
  %9 = load %"struct.x11::Rectangle"*, %"struct.x11::Rectangle"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %5, i64 0, i32 0, i32 1
  %11 = load %"struct.x11::Rectangle"*, %"struct.x11::Rectangle"** %10, align 8
  %12 = icmp eq %"struct.x11::Rectangle"* %9, %11
  br i1 %12, label %59, label %13

13:                                               ; preds = %7
  %14 = bitcast %"class.gfx::Rect"* %3 to i8*
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 1
  %19 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %20 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  br label %23

21:                                               ; preds = %23
  %22 = icmp eq %"struct.x11::Rectangle"* %58, %11
  br i1 %22, label %59, label %23

23:                                               ; preds = %13, %21
  %24 = phi %"struct.x11::Rectangle"* [ %9, %13 ], [ %58, %21 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #17
  %25 = getelementptr inbounds %"struct.x11::Rectangle", %"struct.x11::Rectangle"* %24, i64 0, i32 0
  %26 = load i16, i16* %25, align 2
  %27 = sext i16 %26 to i32
  %28 = getelementptr inbounds %"struct.x11::Rectangle", %"struct.x11::Rectangle"* %24, i64 0, i32 1
  %29 = load i16, i16* %28, align 2
  %30 = sext i16 %29 to i32
  %31 = getelementptr inbounds %"struct.x11::Rectangle", %"struct.x11::Rectangle"* %24, i64 0, i32 2
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %32 to i32
  %34 = getelementptr inbounds %"struct.x11::Rectangle", %"struct.x11::Rectangle"* %24, i64 0, i32 3
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  store i32 %27, i32* %15, align 4
  store i32 %30, i32* %16, align 4
  %37 = icmp sgt i16 %26, 0
  %38 = icmp ne i16 %32, 0
  %39 = and i1 %37, %38
  %40 = sub nuw nsw i32 2147483647, %27
  %41 = icmp ult i32 %40, %33
  %42 = and i1 %41, %39
  %43 = select i1 %42, i32 %40, i32 %33
  %44 = icmp sgt i16 %29, 0
  %45 = icmp ne i16 %35, 0
  %46 = and i1 %44, %45
  %47 = sub nuw nsw i32 2147483647, %30
  %48 = icmp ult i32 %47, %36
  %49 = and i1 %48, %46
  %50 = select i1 %49, i32 %47, i32 %36
  %51 = icmp sgt i32 %43, 0
  %52 = select i1 %51, i32 %43, i32 0
  store i32 %52, i32* %17, align 4
  %53 = icmp sgt i32 %50, 0
  %54 = select i1 %53, i32 %50, i32 0
  store i32 %54, i32* %18, align 4
  %55 = load i32, i32* %19, align 4
  %56 = load i32, i32* %20, align 4
  %57 = call zeroext i1 @_ZNK3gfx4Rect8ContainsEii(%"class.gfx::Rect"* nonnull %3, i32 %55, i32 %56) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #17
  %58 = getelementptr inbounds %"struct.x11::Rectangle", %"struct.x11::Rectangle"* %24, i64 1
  br i1 %57, label %59, label %21

59:                                               ; preds = %21, %23, %7, %2
  %60 = phi i1 [ true, %2 ], [ false, %7 ], [ false, %21 ], [ true, %23 ]
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn64_NK2ui9X11Window22ContainsPointInXRegionERKN3gfx5PointE(%"class.ui::X11Window"* nocapture readonly, %"class.gfx::Point"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Rect", align 4
  %4 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 69, i32 0, i64 101
  %5 = bitcast i32* %4 to %"class.std::__1::vector.396"**
  %6 = load %"class.std::__1::vector.396"*, %"class.std::__1::vector.396"** %5, align 8
  %7 = icmp eq %"class.std::__1::vector.396"* %6, null
  br i1 %7, label %60, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %6, i64 0, i32 0, i32 0
  %10 = load %"struct.x11::Rectangle"*, %"struct.x11::Rectangle"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %6, i64 0, i32 0, i32 1
  %12 = load %"struct.x11::Rectangle"*, %"struct.x11::Rectangle"** %11, align 8
  %13 = icmp eq %"struct.x11::Rectangle"* %10, %12
  br i1 %13, label %60, label %14

14:                                               ; preds = %8
  %15 = bitcast %"class.gfx::Rect"* %3 to i8*
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 1
  %20 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %21 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  br label %24

22:                                               ; preds = %24
  %23 = icmp eq %"struct.x11::Rectangle"* %59, %12
  br i1 %23, label %60, label %24

24:                                               ; preds = %22, %14
  %25 = phi %"struct.x11::Rectangle"* [ %10, %14 ], [ %59, %22 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #17
  %26 = getelementptr inbounds %"struct.x11::Rectangle", %"struct.x11::Rectangle"* %25, i64 0, i32 0
  %27 = load i16, i16* %26, align 2
  %28 = sext i16 %27 to i32
  %29 = getelementptr inbounds %"struct.x11::Rectangle", %"struct.x11::Rectangle"* %25, i64 0, i32 1
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i32
  %32 = getelementptr inbounds %"struct.x11::Rectangle", %"struct.x11::Rectangle"* %25, i64 0, i32 2
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = getelementptr inbounds %"struct.x11::Rectangle", %"struct.x11::Rectangle"* %25, i64 0, i32 3
  %36 = load i16, i16* %35, align 2
  %37 = zext i16 %36 to i32
  store i32 %28, i32* %16, align 4
  store i32 %31, i32* %17, align 4
  %38 = icmp sgt i16 %27, 0
  %39 = icmp ne i16 %33, 0
  %40 = and i1 %38, %39
  %41 = sub nuw nsw i32 2147483647, %28
  %42 = icmp ult i32 %41, %34
  %43 = and i1 %42, %40
  %44 = select i1 %43, i32 %41, i32 %34
  %45 = icmp sgt i16 %30, 0
  %46 = icmp ne i16 %36, 0
  %47 = and i1 %45, %46
  %48 = sub nuw nsw i32 2147483647, %31
  %49 = icmp ult i32 %48, %37
  %50 = and i1 %49, %47
  %51 = select i1 %50, i32 %48, i32 %37
  %52 = icmp sgt i32 %44, 0
  %53 = select i1 %52, i32 %44, i32 0
  store i32 %53, i32* %18, align 4
  %54 = icmp sgt i32 %51, 0
  %55 = select i1 %54, i32 %51, i32 0
  store i32 %55, i32* %19, align 4
  %56 = load i32, i32* %20, align 4
  %57 = load i32, i32* %21, align 4
  %58 = call zeroext i1 @_ZNK3gfx4Rect8ContainsEii(%"class.gfx::Rect"* nonnull %3, i32 %56, i32 %57) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #17
  %59 = getelementptr inbounds %"struct.x11::Rectangle", %"struct.x11::Rectangle"* %25, i64 1
  br i1 %58, label %60, label %22

60:                                               ; preds = %22, %24, %2, %8
  %61 = phi i1 [ true, %2 ], [ false, %8 ], [ true, %24 ], [ false, %22 ]
  ret i1 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window12LowerXWindowEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %3 = load i32, i32* %2, align 8
  tail call void @_ZN2ui11LowerWindowEN3x116WindowE(i32 %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N2ui9X11Window12LowerXWindowEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 69, i32 0, i64 57
  %3 = load i32, i32* %2, align 8
  tail call void @_ZN2ui11LowerWindowEN3x116WindowE(i32 %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window19SetOverrideRedirectEb(%"class.ui::X11Window"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::ChangeWindowAttributesRequest", align 4
  %4 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 34
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp ne i8 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = bitcast %"class.ui::X11Window"* %0 to void (%"class.ui::X11Window"*)***
  %9 = load void (%"class.ui::X11Window"*)**, void (%"class.ui::X11Window"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.ui::X11Window"*)*, void (%"class.ui::X11Window"*)** %9, i64 4
  %11 = load void (%"class.ui::X11Window"*)*, void (%"class.ui::X11Window"*)** %10, align 8
  tail call void %11(%"class.ui::X11Window"* %0) #17
  br label %12

12:                                               ; preds = %7, %2
  %13 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %14 = bitcast %"class.x11::Connection"** %13 to %"class.x11::XProto"**
  %15 = load %"class.x11::XProto"*, %"class.x11::XProto"** %14, align 8
  %16 = bitcast %"struct.x11::ChangeWindowAttributesRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 124, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %3, i64 0, i32 0
  %18 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 4
  %20 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %20, align 4
  %21 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %22, align 4
  %23 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %23, align 4
  %24 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %3, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %24, align 4
  %25 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %3, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %3, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %27, align 4
  %28 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %3, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %28, align 4
  %29 = zext i1 %1 to i32
  %30 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %3, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %30, align 4
  %31 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %3, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %29, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %3, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %32, align 4
  %33 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %3, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %33, align 4
  %34 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %3, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %34, align 4
  %35 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %3, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %3, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %36, align 4
  %37 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto22ChangeWindowAttributesERKNS_29ChangeWindowAttributesRequestE(%"class.x11::XProto"* %15, %"struct.x11::ChangeWindowAttributesRequest"* nonnull dereferenceable(124) %3) #17
  %38 = icmp eq %"class.x11::Connection::FutureImpl"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %12
  %40 = bitcast %"class.x11::Connection::FutureImpl"* %37 to i8*
  call void @_ZdlPv(i8* %40) #18
  br label %41

41:                                               ; preds = %12, %39
  call void @llvm.lifetime.end.p0i8(i64 124, i8* nonnull %16) #17
  br i1 %6, label %42, label %47

42:                                               ; preds = %41
  call void @_ZN2ui9X11Window3MapEb(%"class.ui::X11Window"* %0, i1 zeroext false)
  %43 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 41
  %44 = load i8, i8* %43, align 1, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  call void @_ZN2ui29ChangeActivePointerGrabCursorE13scoped_refptrINS_9X11CursorEE(%"class.ui::X11Cursor"* null) #17
  br label %47

47:                                               ; preds = %42, %46, %41
  ret void
}

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto22ChangeWindowAttributesERKNS_29ChangeWindowAttributesRequestE(%"class.x11::XProto"*, %"struct.x11::ChangeWindowAttributesRequest"* dereferenceable(124)) local_unnamed_addr #1

declare void @_ZN2ui29ChangeActivePointerGrabCursorE13scoped_refptrINS_9X11CursorEE(%"class.ui::X11Cursor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N2ui9X11Window19SetOverrideRedirectEb(%"class.ui::X11Window"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 69, i32 0, i64 1
  %4 = bitcast i32* %3 to %"class.ui::X11Window"*
  tail call void @_ZN2ui9X11Window19SetOverrideRedirectEb(%"class.ui::X11Window"* %4, i1 zeroext %1)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui9X11Window23SetX11ExtensionDelegateEPNS_20X11ExtensionDelegateE(%"class.ui::X11Window"* nocapture, %"class.ui::X11ExtensionDelegate"*) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 14
  store %"class.ui::X11ExtensionDelegate"* %1, %"class.ui::X11ExtensionDelegate"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZThn64_N2ui9X11Window23SetX11ExtensionDelegateEPNS_20X11ExtensionDelegateE(%"class.ui::X11Window"* nocapture, %"class.ui::X11ExtensionDelegate"*) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 69, i32 0, i64 35
  %4 = bitcast i32* %3 to %"class.ui::X11ExtensionDelegate"**
  store %"class.ui::X11ExtensionDelegate"* %1, %"class.ui::X11ExtensionDelegate"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui9X11Window16HandleAsAtkEventERKN3x115EventEb(%"class.ui::X11Window"* nocapture readonly, %"class.x11::Event"* dereferenceable(32), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 14
  %5 = load %"class.ui::X11ExtensionDelegate"*, %"class.ui::X11ExtensionDelegate"** %4, align 8
  %6 = icmp eq %"class.ui::X11ExtensionDelegate"* %5, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 52
  br i1 %10, label %11, label %27

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %13 = bitcast i8** %12 to %"struct.x11::KeyEvent"**
  %14 = load %"struct.x11::KeyEvent"*, %"struct.x11::KeyEvent"** %13, align 8
  %15 = icmp eq %"struct.x11::KeyEvent"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %11
  %17 = tail call %struct._AtkKeyEventStruct* @_ZN2ui21AtkKeyEventFromXEventERKN3x115EventE(%"class.x11::Event"* dereferenceable(32) %1) #17
  %18 = load %"class.ui::X11ExtensionDelegate"*, %"class.ui::X11ExtensionDelegate"** %4, align 8
  %19 = bitcast %"class.ui::X11ExtensionDelegate"* %18 to i1 (%"class.ui::X11ExtensionDelegate"*, %struct._AtkKeyEventStruct*, i1)***
  %20 = load i1 (%"class.ui::X11ExtensionDelegate"*, %struct._AtkKeyEventStruct*, i1)**, i1 (%"class.ui::X11ExtensionDelegate"*, %struct._AtkKeyEventStruct*, i1)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.ui::X11ExtensionDelegate"*, %struct._AtkKeyEventStruct*, i1)*, i1 (%"class.ui::X11ExtensionDelegate"*, %struct._AtkKeyEventStruct*, i1)** %20, i64 1
  %22 = load i1 (%"class.ui::X11ExtensionDelegate"*, %struct._AtkKeyEventStruct*, i1)*, i1 (%"class.ui::X11ExtensionDelegate"*, %struct._AtkKeyEventStruct*, i1)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.ui::X11ExtensionDelegate"* %18, %struct._AtkKeyEventStruct* %17, i1 zeroext %2) #17
  %24 = icmp eq %struct._AtkKeyEventStruct* %17, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %16
  %26 = bitcast %struct._AtkKeyEventStruct* %17 to i8*
  tail call void @_ZdlPv(i8* %26) #18
  br label %27

27:                                               ; preds = %7, %25, %16, %3, %11
  %28 = phi i1 [ false, %11 ], [ false, %3 ], [ %23, %16 ], [ %23, %25 ], [ false, %7 ]
  ret i1 %28
}

declare %struct._AtkKeyEventStruct* @_ZN2ui21AtkKeyEventFromXEventERKN3x115EventE(%"class.x11::Event"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window7OnEventERKN3x115EventE(%"class.ui::X11Window"*, %"class.x11::Event"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 73
  %6 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %7 = bitcast i8** %6 to %"struct.x11::PropertyNotifyEvent"**
  %8 = load %"struct.x11::PropertyNotifyEvent"*, %"struct.x11::PropertyNotifyEvent"** %7, align 8
  %9 = select i1 %5, %"struct.x11::PropertyNotifyEvent"* %8, %"struct.x11::PropertyNotifyEvent"* null
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %11 = load %"class.ui::XDragDropClient"*, %"class.ui::XDragDropClient"** %10, align 8
  %12 = getelementptr inbounds %"class.ui::XDragDropClient", %"class.ui::XDragDropClient"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.ui::XDragContext"*, %"class.ui::XDragContext"** %12, align 8
  %14 = icmp ne %"struct.x11::PropertyNotifyEvent"* %9, null
  %15 = icmp ne %"class.ui::XDragContext"* %13, null
  %16 = and i1 %14, %15
  br i1 %16, label %17, label %25

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"struct.x11::PropertyNotifyEvent", %"struct.x11::PropertyNotifyEvent"* %9, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.ui::XDragContext", %"class.ui::XDragContext"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  %24 = tail call zeroext i1 @_ZN2ui12XDragContext27DispatchPropertyNotifyEventERKN3x1119PropertyNotifyEventE(%"class.ui::XDragContext"* nonnull %13, %"struct.x11::PropertyNotifyEvent"* nonnull dereferenceable(20) %9) #17
  br label %25

25:                                               ; preds = %23, %17, %2
  tail call void @_ZN2ui9X11Window11HandleEventERKN3x115EventE(%"class.ui::X11Window"* %0, %"class.x11::Event"* dereferenceable(32) %1)
  ret void
}

declare zeroext i1 @_ZN2ui12XDragContext27DispatchPropertyNotifyEventERKN3x1119PropertyNotifyEventE(%"class.ui::XDragContext"*, %"struct.x11::PropertyNotifyEvent"* dereferenceable(20)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window11HandleEventERKN3x115EventE(%"class.ui::X11Window"*, %"class.x11::Event"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.x11::WriteBuffer", align 8
  %4 = alloca %"struct.x11::SendEventRequest", align 4
  %5 = alloca %"struct.ui::PlatformWindowDelegate::BoundsChange", align 4
  %6 = alloca i32, align 4
  %7 = alloca <4 x i32>, align 16
  %8 = bitcast <4 x i32>* %7 to %"class.gfx::Rect"*
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"struct.x11::ClientMessageEvent", align 4
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 4
  %18 = load i32*, i32** %17, align 8
  %19 = icmp eq i32* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %2
  %21 = load i32, i32* %18, align 4
  br label %22

22:                                               ; preds = %2, %20
  %23 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %24 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %27, label %647

27:                                               ; preds = %22
  %28 = tail call i64 @_ZN2ui23EventLocationFromXEventERKN3x115EventE(%"class.x11::Event"* dereferenceable(32) %1) #17
  %29 = trunc i64 %28 to i32
  %30 = lshr i64 %28, 32
  %31 = trunc i64 %30 to i32
  %32 = tail call i64 @_ZN2ui29EventSystemLocationFromXEventERKN3x115EventE(%"class.x11::Event"* dereferenceable(32) %1) #17
  %33 = trunc i64 %32 to i32
  %34 = lshr i64 %32, 32
  %35 = trunc i64 %34 to i32
  %36 = or i64 %30, %28
  %37 = trunc i64 %36 to i32
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %99, label %39

39:                                               ; preds = %27
  %40 = or i64 %34, %32
  %41 = trunc i64 %40 to i32
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %99, label %43

43:                                               ; preds = %39
  %44 = icmp sgt i32 %29, -1
  %45 = select i1 %44, i32 -2147483648, i32 2147483647
  %46 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %33, i32 %29) #17
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 %45, i32 %48, !prof !72
  %50 = icmp sgt i32 %31, -1
  %51 = select i1 %50, i32 -2147483648, i32 2147483647
  %52 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %35, i32 %31) #17
  %53 = extractvalue { i32, i1 } %52, 1
  %54 = extractvalue { i32, i1 } %52, 0
  %55 = select i1 %53, i32 %51, i32 %54, !prof !72
  %56 = zext i32 %55 to i64
  %57 = shl nuw i64 %56, 32
  %58 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36
  %59 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %58, i64 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %49
  br i1 %61, label %62, label %66

62:                                               ; preds = %43
  %63 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, %55
  br i1 %65, label %99, label %66

66:                                               ; preds = %62, %43
  %67 = bitcast %"class.gfx::Rect"* %58 to i64*
  %68 = zext i32 %49 to i64
  %69 = or i64 %57, %68
  store i64 %69, i64* %67, align 4
  %70 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 1, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp sgt i32 %49, 0
  %73 = icmp sgt i32 %71, 0
  %74 = and i1 %72, %73
  %75 = sub nuw nsw i32 2147483647, %49
  %76 = icmp ult i32 %75, %71
  %77 = and i1 %76, %74
  %78 = select i1 %77, i32 %75, i32 %71
  %79 = icmp sgt i32 %78, 0
  %80 = select i1 %79, i32 %78, i32 0
  store i32 %80, i32* %70, align 4
  %81 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 1, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp sgt i32 %55, 0
  %84 = icmp sgt i32 %82, 0
  %85 = and i1 %83, %84
  %86 = sub nuw nsw i32 2147483647, %55
  %87 = icmp ult i32 %86, %82
  %88 = and i1 %87, %85
  %89 = select i1 %88, i32 %86, i32 %82
  %90 = icmp sgt i32 %89, 0
  %91 = select i1 %90, i32 %89, i32 0
  store i32 %91, i32* %81, align 4
  tail call void @_ZN2ui9X11Window17ResetWindowRegionEv(%"class.ui::X11Window"* %0) #17
  %92 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %93 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %92, align 8
  %94 = bitcast %"struct.ui::PlatformWindowDelegate::BoundsChange"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #17
  call void @_ZN2ui22PlatformWindowDelegate12BoundsChangeC1ERKN3gfx4RectE(%"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull %5, %"class.gfx::Rect"* dereferenceable(16) %58) #17
  %95 = bitcast %"class.ui::PlatformWindowDelegate"* %93 to void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)***
  %96 = load void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)**, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)** %96, i64 2
  %98 = load void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)** %97, align 8
  call void %98(%"class.ui::PlatformWindowDelegate"* %93, %"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull dereferenceable(16) %5) #17
  call void @_ZN2ui22PlatformWindowDelegate12BoundsChangeD1Ev(%"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #17
  br label %99

99:                                               ; preds = %62, %39, %27, %66
  %100 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  switch i32 %101, label %647 [
    i32 55, label %102
    i32 58, label %151
    i32 56, label %170
    i32 68, label %227
    i32 32, label %233
    i32 65, label %410
    i32 64, label %425
    i32 78, label %434
    i32 73, label %561
    i32 76, label %639
  ]

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %104 = bitcast i8** %103 to %"struct.x11::CrossingEvent"**
  %105 = load %"struct.x11::CrossingEvent"*, %"struct.x11::CrossingEvent"** %104, align 8
  %106 = icmp eq %"struct.x11::CrossingEvent"* %105, null
  br i1 %106, label %647, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"struct.x11::CrossingEvent", %"struct.x11::CrossingEvent"* %105, i64 0, i32 16
  %109 = load i8, i8* %108, align 4
  %110 = and i8 %109, 1
  %111 = icmp ne i8 %110, 0
  %112 = getelementptr inbounds %"struct.x11::CrossingEvent", %"struct.x11::CrossingEvent"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 7
  %115 = getelementptr inbounds %"struct.x11::CrossingEvent", %"struct.x11::CrossingEvent"* %105, i64 0, i32 15
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds %"struct.x11::CrossingEvent", %"struct.x11::CrossingEvent"* %105, i64 0, i32 3
  %118 = load i32, i32* %117, align 4
  %119 = zext i1 %114 to i8
  %120 = icmp eq i32 %118, 2
  br i1 %120, label %647, label %121

121:                                              ; preds = %107
  %122 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 43
  %123 = load i8, i8* %122, align 1, !range !2
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %129

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  %127 = load i8, i8* %126, align 8, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %133, label %129

129:                                              ; preds = %125, %121
  %130 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  %131 = load i8, i8* %130, align 1, !range !2
  %132 = xor i8 %131, 1
  br label %133

133:                                              ; preds = %129, %125
  %134 = phi i8 [ 0, %125 ], [ %132, %129 ]
  %135 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 46
  store i8 %134, i8* %135, align 2
  %136 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 42
  %137 = load i8, i8* %136, align 2, !range !2
  %138 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 47
  store i8 %137, i8* %138, align 1
  %139 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 41
  %140 = load i8, i8* %139, align 1, !range !2
  %141 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 48
  store i8 %140, i8* %141, align 4
  %142 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 49
  store i8 %123, i8* %142, align 1
  switch i32 %116, label %146 [
    i32 1, label %144
    i32 2, label %143
  ]

143:                                              ; preds = %133
  br label %144

144:                                              ; preds = %133, %143
  %145 = phi i8 [ 0, %143 ], [ %119, %133 ]
  store i8 %145, i8* %139, align 1
  br label %146

146:                                              ; preds = %144, %133
  store i8 %119, i8* %136, align 2
  %147 = and i1 %111, %124
  br i1 %147, label %148, label %150

148:                                              ; preds = %146
  %149 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  store i8 %119, i8* %149, align 8
  br label %150

150:                                              ; preds = %148, %146
  call void @_ZN2ui9X11Window27AfterActivationStateChangedEv(%"class.ui::X11Window"* %0) #17
  br label %647

151:                                              ; preds = %99
  %152 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %153 = bitcast i8** %152 to %"struct.x11::ExposeEvent"**
  %154 = load %"struct.x11::ExposeEvent"*, %"struct.x11::ExposeEvent"** %153, align 8
  %155 = icmp eq %"struct.x11::ExposeEvent"* %154, null
  br i1 %155, label %647, label %156

156:                                              ; preds = %151
  %157 = bitcast <4 x i32>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %157) #17
  %158 = getelementptr inbounds %"struct.x11::ExposeEvent", %"struct.x11::ExposeEvent"* %154, i64 0, i32 4
  %159 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1
  %160 = bitcast %"class.gfx::Size"* %159 to i64*
  store i64 -6148914691236517206, i64* %160, align 8
  %161 = bitcast i16* %158 to <4 x i16>*
  %162 = load <4 x i16>, <4 x i16>* %161, align 4
  %163 = zext <4 x i16> %162 to <4 x i32>
  store <4 x i32> %163, <4 x i32>* %7, align 16
  %164 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %165 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %164, align 8
  %166 = bitcast %"class.ui::PlatformWindowDelegate"* %165 to void (%"class.ui::PlatformWindowDelegate"*, %"class.gfx::Rect"*)***
  %167 = load void (%"class.ui::PlatformWindowDelegate"*, %"class.gfx::Rect"*)**, void (%"class.ui::PlatformWindowDelegate"*, %"class.gfx::Rect"*)*** %166, align 8
  %168 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*, %"class.gfx::Rect"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"class.gfx::Rect"*)** %167, i64 3
  %169 = load void (%"class.ui::PlatformWindowDelegate"*, %"class.gfx::Rect"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"class.gfx::Rect"*)** %168, align 8
  call void %169(%"class.ui::PlatformWindowDelegate"* %165, %"class.gfx::Rect"* nonnull dereferenceable(16) %8) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %157) #17
  br label %647

170:                                              ; preds = %99
  %171 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %172 = bitcast i8** %171 to %"struct.x11::FocusEvent"**
  %173 = load %"struct.x11::FocusEvent"*, %"struct.x11::FocusEvent"** %172, align 8
  %174 = icmp eq %"struct.x11::FocusEvent"* %173, null
  br i1 %174, label %647, label %175

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"struct.x11::FocusEvent", %"struct.x11::FocusEvent"* %173, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, 9
  %179 = getelementptr inbounds %"struct.x11::FocusEvent", %"struct.x11::FocusEvent"* %173, i64 0, i32 2
  %180 = load i32, i32* %179, align 4
  %181 = zext i1 %178 to i8
  %182 = icmp eq i32 %180, 2
  br i1 %182, label %647, label %183

183:                                              ; preds = %175
  %184 = getelementptr inbounds %"struct.x11::FocusEvent", %"struct.x11::FocusEvent"* %173, i64 0, i32 5
  %185 = load i32, i32* %184, align 4
  %186 = add i32 %185, -1
  %187 = icmp ult i32 %186, 2
  %188 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 43
  %189 = load i8, i8* %188, align 1, !range !2
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %195

191:                                              ; preds = %183
  %192 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  %193 = load i8, i8* %192, align 8, !range !2
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %199, label %195

195:                                              ; preds = %191, %183
  %196 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  %197 = load i8, i8* %196, align 1, !range !2
  %198 = xor i8 %197, 1
  br label %199

199:                                              ; preds = %195, %191
  %200 = phi i8 [ 0, %191 ], [ %198, %195 ]
  %201 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 46
  store i8 %200, i8* %201, align 2
  %202 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 42
  %203 = load i8, i8* %202, align 2, !range !2
  %204 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 47
  store i8 %203, i8* %204, align 1
  %205 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 41
  %206 = load i8, i8* %205, align 1, !range !2
  %207 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 48
  store i8 %206, i8* %207, align 4
  %208 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 49
  store i8 %189, i8* %208, align 1
  %209 = xor i1 %187, true
  %210 = icmp ne i32 %180, 5
  %211 = and i1 %210, %209
  br i1 %211, label %212, label %213

212:                                              ; preds = %199
  store i8 %181, i8* %188, align 1
  br label %213

213:                                              ; preds = %212, %199
  %214 = icmp eq i8 %203, 0
  %215 = or i1 %187, %214
  br i1 %215, label %225, label %216

216:                                              ; preds = %213
  switch i32 %180, label %225 [
    i32 0, label %217
    i32 1, label %217
    i32 5, label %221
    i32 3, label %223
    i32 4, label %223
  ]

217:                                              ; preds = %216, %216
  %218 = xor i1 %178, true
  %219 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  %220 = zext i1 %218 to i8
  store i8 %220, i8* %219, align 8
  br label %225

221:                                              ; preds = %216
  %222 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  store i8 %181, i8* %222, align 8
  br label %225

223:                                              ; preds = %216, %216
  %224 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  store i8 0, i8* %224, align 8
  br label %225

225:                                              ; preds = %223, %221, %217, %216, %213
  %226 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  store i8 0, i8* %226, align 1
  call void @_ZN2ui9X11Window27AfterActivationStateChangedEv(%"class.ui::X11Window"* %0) #17
  br label %647

227:                                              ; preds = %99
  %228 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %229 = bitcast i8** %228 to %"struct.x11::ConfigureNotifyEvent"**
  %230 = load %"struct.x11::ConfigureNotifyEvent"*, %"struct.x11::ConfigureNotifyEvent"** %229, align 8
  %231 = icmp eq %"struct.x11::ConfigureNotifyEvent"* %230, null
  br i1 %231, label %647, label %232

232:                                              ; preds = %227
  call void @_ZN2ui9X11Window16OnConfigureEventERKN3x1120ConfigureNotifyEventE(%"class.ui::X11Window"* %0, %"struct.x11::ConfigureNotifyEvent"* nonnull dereferenceable(28) %230)
  br label %647

233:                                              ; preds = %99
  %234 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %235 = bitcast i8** %234 to %"struct.x11::Input::CrossingEvent"**
  %236 = load %"struct.x11::Input::CrossingEvent"*, %"struct.x11::Input::CrossingEvent"** %235, align 8
  %237 = icmp eq %"struct.x11::Input::CrossingEvent"* %236, null
  br i1 %237, label %647, label %238

238:                                              ; preds = %233
  %239 = call %"class.ui::TouchFactory"* @_ZN2ui12TouchFactory11GetInstanceEv() #17
  %240 = call zeroext i1 @_ZN2ui12TouchFactory26ShouldProcessCrossingEventERKN3x115Input13CrossingEventE(%"class.ui::TouchFactory"* %239, %"struct.x11::Input::CrossingEvent"* nonnull dereferenceable(104) %236) #17
  br i1 %240, label %241, label %647

241:                                              ; preds = %238
  %242 = getelementptr inbounds %"struct.x11::Input::CrossingEvent", %"struct.x11::Input::CrossingEvent"* %236, i64 0, i32 6
  %243 = load i32, i32* %242, align 4
  %244 = add i32 %243, -1
  %245 = icmp ult i32 %244, 5
  br i1 %245, label %246, label %250

246:                                              ; preds = %241
  %247 = sext i32 %244 to i64
  %248 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN2ui9X11Window11HandleEventERKN3x115EventE, i64 0, i64 %247
  %249 = load i32, i32* %248, align 4
  br label %250

250:                                              ; preds = %246, %241
  %251 = phi i32 [ 0, %241 ], [ %249, %246 ]
  %252 = getelementptr inbounds %"struct.x11::Input::CrossingEvent", %"struct.x11::Input::CrossingEvent"* %236, i64 0, i32 7
  %253 = load i32, i32* %252, align 8
  %254 = getelementptr inbounds %"struct.x11::Input::CrossingEvent", %"struct.x11::Input::CrossingEvent"* %236, i64 0, i32 0
  %255 = load i32, i32* %254, align 8
  switch i32 %255, label %647 [
    i32 7, label %256
    i32 8, label %291
    i32 9, label %326
    i32 10, label %368
  ]

256:                                              ; preds = %250
  %257 = getelementptr inbounds %"struct.x11::Input::CrossingEvent", %"struct.x11::Input::CrossingEvent"* %236, i64 0, i32 16
  %258 = load i8, i8* %257, align 1
  %259 = icmp ne i8 %258, 0
  %260 = icmp eq i32 %253, 2
  br i1 %260, label %647, label %261

261:                                              ; preds = %256
  %262 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 43
  %263 = load i8, i8* %262, align 1, !range !2
  %264 = icmp eq i8 %263, 0
  br i1 %264, label %265, label %269

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  %267 = load i8, i8* %266, align 8, !range !2
  %268 = icmp eq i8 %267, 0
  br i1 %268, label %273, label %269

269:                                              ; preds = %265, %261
  %270 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  %271 = load i8, i8* %270, align 1, !range !2
  %272 = xor i8 %271, 1
  br label %273

273:                                              ; preds = %269, %265
  %274 = phi i8 [ 0, %265 ], [ %272, %269 ]
  %275 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 46
  store i8 %274, i8* %275, align 2
  %276 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 42
  %277 = load i8, i8* %276, align 2, !range !2
  %278 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 47
  store i8 %277, i8* %278, align 1
  %279 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 41
  %280 = load i8, i8* %279, align 1, !range !2
  %281 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 48
  store i8 %280, i8* %281, align 4
  %282 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 49
  store i8 %263, i8* %282, align 1
  switch i32 %251, label %286 [
    i32 1, label %284
    i32 2, label %283
  ]

283:                                              ; preds = %273
  br label %284

284:                                              ; preds = %273, %283
  %285 = phi i8 [ 0, %283 ], [ 1, %273 ]
  store i8 %285, i8* %279, align 1
  br label %286

286:                                              ; preds = %284, %273
  store i8 1, i8* %276, align 2
  %287 = and i1 %259, %264
  br i1 %287, label %288, label %290

288:                                              ; preds = %286
  %289 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  store i8 1, i8* %289, align 8
  br label %290

290:                                              ; preds = %288, %286
  call void @_ZN2ui9X11Window27AfterActivationStateChangedEv(%"class.ui::X11Window"* %0) #17
  br label %647

291:                                              ; preds = %250
  %292 = getelementptr inbounds %"struct.x11::Input::CrossingEvent", %"struct.x11::Input::CrossingEvent"* %236, i64 0, i32 16
  %293 = load i8, i8* %292, align 1
  %294 = icmp ne i8 %293, 0
  %295 = icmp eq i32 %253, 2
  br i1 %295, label %647, label %296

296:                                              ; preds = %291
  %297 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 43
  %298 = load i8, i8* %297, align 1, !range !2
  %299 = icmp eq i8 %298, 0
  br i1 %299, label %300, label %304

300:                                              ; preds = %296
  %301 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  %302 = load i8, i8* %301, align 8, !range !2
  %303 = icmp eq i8 %302, 0
  br i1 %303, label %308, label %304

304:                                              ; preds = %300, %296
  %305 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  %306 = load i8, i8* %305, align 1, !range !2
  %307 = xor i8 %306, 1
  br label %308

308:                                              ; preds = %304, %300
  %309 = phi i8 [ 0, %300 ], [ %307, %304 ]
  %310 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 46
  store i8 %309, i8* %310, align 2
  %311 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 42
  %312 = load i8, i8* %311, align 2, !range !2
  %313 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 47
  store i8 %312, i8* %313, align 1
  %314 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 41
  %315 = load i8, i8* %314, align 1, !range !2
  %316 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 48
  store i8 %315, i8* %316, align 4
  %317 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 49
  store i8 %298, i8* %317, align 1
  %318 = add i32 %251, -1
  %319 = icmp ult i32 %318, 2
  br i1 %319, label %320, label %321

320:                                              ; preds = %308
  store i8 0, i8* %314, align 1
  br label %321

321:                                              ; preds = %308, %320
  store i8 0, i8* %311, align 2
  %322 = and i1 %294, %299
  br i1 %322, label %323, label %325

323:                                              ; preds = %321
  %324 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  store i8 0, i8* %324, align 8
  br label %325

325:                                              ; preds = %323, %321
  call void @_ZN2ui9X11Window27AfterActivationStateChangedEv(%"class.ui::X11Window"* %0) #17
  br label %647

326:                                              ; preds = %250
  %327 = icmp eq i32 %253, 2
  br i1 %327, label %647, label %328

328:                                              ; preds = %326
  %329 = add nsw i32 %251, -1
  %330 = icmp ult i32 %329, 2
  %331 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 43
  %332 = load i8, i8* %331, align 1, !range !2
  %333 = icmp eq i8 %332, 0
  br i1 %333, label %334, label %338

334:                                              ; preds = %328
  %335 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  %336 = load i8, i8* %335, align 8, !range !2
  %337 = icmp eq i8 %336, 0
  br i1 %337, label %342, label %338

338:                                              ; preds = %334, %328
  %339 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  %340 = load i8, i8* %339, align 1, !range !2
  %341 = xor i8 %340, 1
  br label %342

342:                                              ; preds = %338, %334
  %343 = phi i8 [ 0, %334 ], [ %341, %338 ]
  %344 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 46
  store i8 %343, i8* %344, align 2
  %345 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 42
  %346 = load i8, i8* %345, align 2, !range !2
  %347 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 47
  store i8 %346, i8* %347, align 1
  %348 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 41
  %349 = load i8, i8* %348, align 1, !range !2
  %350 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 48
  store i8 %349, i8* %350, align 4
  %351 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 49
  store i8 %332, i8* %351, align 1
  %352 = xor i1 %330, true
  %353 = icmp ne i32 %253, 5
  %354 = and i1 %353, %352
  br i1 %354, label %355, label %356

355:                                              ; preds = %342
  store i8 1, i8* %331, align 1
  br label %356

356:                                              ; preds = %355, %342
  %357 = icmp eq i8 %346, 0
  %358 = or i1 %330, %357
  br i1 %358, label %366, label %359

359:                                              ; preds = %356
  switch i32 %253, label %366 [
    i32 0, label %360
    i32 1, label %360
    i32 5, label %362
    i32 3, label %364
    i32 4, label %364
  ]

360:                                              ; preds = %359, %359
  %361 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  store i8 0, i8* %361, align 8
  br label %366

362:                                              ; preds = %359
  %363 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  store i8 1, i8* %363, align 8
  br label %366

364:                                              ; preds = %359, %359
  %365 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  store i8 0, i8* %365, align 8
  br label %366

366:                                              ; preds = %364, %362, %360, %359, %356
  %367 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  store i8 0, i8* %367, align 1
  call void @_ZN2ui9X11Window27AfterActivationStateChangedEv(%"class.ui::X11Window"* %0) #17
  br label %647

368:                                              ; preds = %250
  %369 = icmp eq i32 %253, 2
  br i1 %369, label %647, label %370

370:                                              ; preds = %368
  %371 = add nsw i32 %251, -1
  %372 = icmp ult i32 %371, 2
  %373 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 43
  %374 = load i8, i8* %373, align 1, !range !2
  %375 = icmp eq i8 %374, 0
  br i1 %375, label %376, label %380

376:                                              ; preds = %370
  %377 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  %378 = load i8, i8* %377, align 8, !range !2
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %384, label %380

380:                                              ; preds = %376, %370
  %381 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  %382 = load i8, i8* %381, align 1, !range !2
  %383 = xor i8 %382, 1
  br label %384

384:                                              ; preds = %380, %376
  %385 = phi i8 [ 0, %376 ], [ %383, %380 ]
  %386 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 46
  store i8 %385, i8* %386, align 2
  %387 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 42
  %388 = load i8, i8* %387, align 2, !range !2
  %389 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 47
  store i8 %388, i8* %389, align 1
  %390 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 41
  %391 = load i8, i8* %390, align 1, !range !2
  %392 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 48
  store i8 %391, i8* %392, align 4
  %393 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 49
  store i8 %374, i8* %393, align 1
  %394 = xor i1 %372, true
  %395 = icmp ne i32 %253, 5
  %396 = and i1 %395, %394
  br i1 %396, label %397, label %398

397:                                              ; preds = %384
  store i8 0, i8* %373, align 1
  br label %398

398:                                              ; preds = %397, %384
  %399 = icmp eq i8 %388, 0
  %400 = or i1 %372, %399
  br i1 %400, label %408, label %401

401:                                              ; preds = %398
  switch i32 %253, label %408 [
    i32 0, label %402
    i32 1, label %402
    i32 5, label %404
    i32 3, label %406
    i32 4, label %406
  ]

402:                                              ; preds = %401, %401
  %403 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  store i8 1, i8* %403, align 8
  br label %408

404:                                              ; preds = %401
  %405 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  store i8 0, i8* %405, align 8
  br label %408

406:                                              ; preds = %401, %401
  %407 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  store i8 0, i8* %407, align 8
  br label %408

408:                                              ; preds = %406, %404, %402, %401, %398
  %409 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  store i8 0, i8* %409, align 1
  call void @_ZN2ui9X11Window27AfterActivationStateChangedEv(%"class.ui::X11Window"* %0) #17
  br label %647

410:                                              ; preds = %99
  %411 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %412 = bitcast i8** %411 to %"struct.x11::MapNotifyEvent"**
  %413 = load %"struct.x11::MapNotifyEvent"*, %"struct.x11::MapNotifyEvent"** %412, align 8
  %414 = icmp eq %"struct.x11::MapNotifyEvent"* %413, null
  br i1 %414, label %647, label %415

415:                                              ; preds = %410
  %416 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 35
  store i8 1, i8* %416, align 1
  %417 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 54
  %418 = load i8, i8* %417, align 8, !range !2
  %419 = icmp eq i8 %418, 0
  br i1 %419, label %647, label %420

420:                                              ; preds = %415
  %421 = bitcast %"class.ui::X11Window"* %0 to void (%"class.ui::X11Window"*)***
  %422 = load void (%"class.ui::X11Window"*)**, void (%"class.ui::X11Window"*)*** %421, align 8
  %423 = getelementptr inbounds void (%"class.ui::X11Window"*)*, void (%"class.ui::X11Window"*)** %422, i64 15
  %424 = load void (%"class.ui::X11Window"*)*, void (%"class.ui::X11Window"*)** %423, align 8
  call void %424(%"class.ui::X11Window"* %0) #17
  store i8 0, i8* %417, align 8
  br label %647

425:                                              ; preds = %99
  %426 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %427 = bitcast i8** %426 to %"struct.x11::UnmapNotifyEvent"**
  %428 = load %"struct.x11::UnmapNotifyEvent"*, %"struct.x11::UnmapNotifyEvent"** %427, align 8
  %429 = icmp eq %"struct.x11::UnmapNotifyEvent"* %428, null
  br i1 %429, label %647, label %430

430:                                              ; preds = %425
  %431 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 35
  store i8 0, i8* %431, align 1
  %432 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 41
  %433 = bitcast i8* %432 to i32*
  store i32 0, i32* %433, align 1
  br label %647

434:                                              ; preds = %99
  %435 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %436 = bitcast i8** %435 to %"struct.x11::ClientMessageEvent"**
  %437 = load %"struct.x11::ClientMessageEvent"*, %"struct.x11::ClientMessageEvent"** %436, align 8
  %438 = icmp eq %"struct.x11::ClientMessageEvent"* %437, null
  br i1 %438, label %647, label %439

439:                                              ; preds = %434
  %440 = getelementptr inbounds %"struct.x11::ClientMessageEvent", %"struct.x11::ClientMessageEvent"* %437, i64 0, i32 4
  %441 = load i32, i32* %440, align 4
  %442 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %442) #17
  %443 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %444 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %443, i64 0, i32 1, i32 0
  store i8 12, i8* %444, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %442, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i64 12, i1 false) #17
  %445 = getelementptr inbounds i8, i8* %442, i64 12
  store i8 0, i8* %445, align 4
  %446 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #17
  %447 = icmp eq i32 %441, %446
  %448 = load i8, i8* %444, align 1
  %449 = icmp slt i8 %448, 0
  br i1 %449, label %450, label %453

450:                                              ; preds = %439
  %451 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %452 = load i8*, i8** %451, align 8
  call void @_ZdlPv(i8* %452) #18
  br label %453

453:                                              ; preds = %439, %450
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %442) #17
  br i1 %447, label %454, label %557

454:                                              ; preds = %453
  %455 = getelementptr inbounds %"struct.x11::ClientMessageEvent", %"struct.x11::ClientMessageEvent"* %437, i64 0, i32 5, i32 0, i32 0, i64 0
  %456 = load i32, i32* %455, align 4
  %457 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %457) #17
  %458 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %459 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %458, i64 0, i32 1, i32 0
  store i8 16, i8* %459, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %457, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 16, i1 false) #17
  %460 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %461 = bitcast i64* %460 to i8*
  store i8 0, i8* %461, align 8
  %462 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #17
  %463 = icmp eq i32 %456, %462
  %464 = load i8, i8* %459, align 1
  %465 = icmp slt i8 %464, 0
  br i1 %465, label %466, label %469

466:                                              ; preds = %454
  %467 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %468 = load i8*, i8** %467, align 8
  call void @_ZdlPv(i8* %468) #18
  br label %469

469:                                              ; preds = %454, %466
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %457) #17
  br i1 %463, label %470, label %477

470:                                              ; preds = %469
  %471 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %472 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %471, align 8
  %473 = bitcast %"class.ui::PlatformWindowDelegate"* %472 to void (%"class.ui::PlatformWindowDelegate"*)***
  %474 = load void (%"class.ui::PlatformWindowDelegate"*)**, void (%"class.ui::PlatformWindowDelegate"*)*** %473, align 8
  %475 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*)*, void (%"class.ui::PlatformWindowDelegate"*)** %474, i64 5
  %476 = load void (%"class.ui::PlatformWindowDelegate"*)*, void (%"class.ui::PlatformWindowDelegate"*)** %475, align 8
  call void %476(%"class.ui::PlatformWindowDelegate"* %472) #17
  br label %647

477:                                              ; preds = %469
  %478 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %478) #17
  %479 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %480 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %479, i64 0, i32 1, i32 0
  store i8 12, i8* %480, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %478, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12, i1 false) #17
  %481 = getelementptr inbounds i8, i8* %478, i64 12
  store i8 0, i8* %481, align 4
  %482 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #17
  %483 = icmp eq i32 %456, %482
  %484 = load i8, i8* %480, align 1
  %485 = icmp slt i8 %484, 0
  br i1 %485, label %486, label %489

486:                                              ; preds = %477
  %487 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %488 = load i8*, i8** %487, align 8
  call void @_ZdlPv(i8* %488) #18
  br label %489

489:                                              ; preds = %477, %486
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %478) #17
  br i1 %483, label %490, label %529

490:                                              ; preds = %489
  %491 = getelementptr inbounds %"struct.x11::ClientMessageEvent", %"struct.x11::ClientMessageEvent"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %491) #17
  %492 = getelementptr inbounds %"struct.x11::ClientMessageEvent", %"struct.x11::ClientMessageEvent"* %12, i64 0, i32 3
  %493 = getelementptr inbounds %"struct.x11::ClientMessageEvent", %"struct.x11::ClientMessageEvent"* %437, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %491, i8* align 4 %493, i64 32, i1 false)
  %494 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 27
  %495 = load i32, i32* %494, align 4
  store i32 %495, i32* %492, align 4
  %496 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  %497 = bitcast %"class.x11::WriteBuffer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %497) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %497, i8 -86, i64 80, i1 false) #17
  call void @_ZN3x115WriteINS_18ClientMessageEventEEENS_11WriteBufferERKT_(%"class.x11::WriteBuffer"* nonnull sret %3, %"struct.x11::ClientMessageEvent"* nonnull dereferenceable(32) %12) #17
  %498 = call dereferenceable(24) %"class.std::__1::vector.855"* @_ZN3x1111WriteBuffer10GetBuffersEv(%"class.x11::WriteBuffer"* nonnull %3) #17
  %499 = getelementptr inbounds %"class.std::__1::vector.855", %"class.std::__1::vector.855"* %498, i64 0, i32 0, i32 0
  %500 = load %class.scoped_refptr.342*, %class.scoped_refptr.342** %499, align 8
  %501 = call i8* @_Znwm(i64 32) #18
  %502 = ptrtoint i8* %501 to i64
  %503 = sub i64 32, %502
  %504 = getelementptr i8, i8* %501, i64 %503
  %505 = ptrtoint i8* %504 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %501, i8 0, i64 %505, i1 false) #17
  %506 = getelementptr inbounds %class.scoped_refptr.342, %class.scoped_refptr.342* %500, i64 0, i32 0
  %507 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %506, align 8
  %508 = bitcast %"class.base::RefCountedMemory"* %507 to i8* (%"class.base::RefCountedMemory"*)***
  %509 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %508, align 8
  %510 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %509, align 8
  %511 = call i8* %510(%"class.base::RefCountedMemory"* %507) #17
  %512 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %506, align 8
  %513 = bitcast %"class.base::RefCountedMemory"* %512 to i64 (%"class.base::RefCountedMemory"*)***
  %514 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %513, align 8
  %515 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %514, i64 1
  %516 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %515, align 8
  %517 = call i64 %516(%"class.base::RefCountedMemory"* %512) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %501, i8* align 1 %511, i64 %517, i1 false) #17
  %518 = getelementptr inbounds %"struct.x11::SendEventRequest", %"struct.x11::SendEventRequest"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %518) #17
  %519 = bitcast %"struct.x11::SendEventRequest"* %4 to i32*
  store i32 -1431655936, i32* %519, align 4
  %520 = getelementptr inbounds %"struct.x11::SendEventRequest", %"struct.x11::SendEventRequest"* %4, i64 0, i32 1
  store i32 %495, i32* %520, align 4
  %521 = getelementptr inbounds %"struct.x11::SendEventRequest", %"struct.x11::SendEventRequest"* %4, i64 0, i32 2
  store i32 1572864, i32* %521, align 4
  %522 = getelementptr inbounds %"struct.x11::SendEventRequest", %"struct.x11::SendEventRequest"* %4, i64 0, i32 3, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %522, i8* nonnull align 1 %501, i64 32, i1 false) #17
  %523 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %496, i64 0, i32 0
  %524 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9SendEventERKNS_16SendEventRequestE(%"class.x11::XProto"* %523, %"struct.x11::SendEventRequest"* nonnull dereferenceable(44) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %518) #17
  call void @_ZdlPv(i8* nonnull %501) #18
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %497) #17
  %525 = icmp eq %"class.x11::Connection::FutureImpl"* %524, null
  br i1 %525, label %528, label %526

526:                                              ; preds = %490
  %527 = bitcast %"class.x11::Connection::FutureImpl"* %524 to i8*
  call void @_ZdlPv(i8* %527) #18
  br label %528

528:                                              ; preds = %490, %526
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %491) #17
  br label %647

529:                                              ; preds = %489
  %530 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %530) #17
  %531 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %532 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %531, i64 0, i32 1, i32 0
  store i8 20, i8* %532, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %530, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i64 20, i1 false) #17
  %533 = getelementptr inbounds i8, i8* %530, i64 20
  store i8 0, i8* %533, align 4
  %534 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #17
  %535 = icmp eq i32 %456, %534
  %536 = load i8, i8* %532, align 1
  %537 = icmp slt i8 %536, 0
  br i1 %537, label %538, label %541

538:                                              ; preds = %529
  %539 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %540 = load i8*, i8** %539, align 8
  call void @_ZdlPv(i8* %540) #18
  br label %541

541:                                              ; preds = %529, %538
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %530) #17
  br i1 %535, label %542, label %647

542:                                              ; preds = %541
  %543 = getelementptr inbounds %"struct.x11::ClientMessageEvent", %"struct.x11::ClientMessageEvent"* %437, i64 0, i32 5, i32 0, i32 0, i64 2
  %544 = load i32, i32* %543, align 4
  %545 = zext i32 %544 to i64
  %546 = getelementptr inbounds %"struct.x11::ClientMessageEvent", %"struct.x11::ClientMessageEvent"* %437, i64 0, i32 5, i32 0, i32 0, i64 3
  %547 = load i32, i32* %546, align 4
  %548 = zext i32 %547 to i64
  %549 = shl nuw i64 %548, 32
  %550 = or i64 %549, %545
  %551 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 62
  store i64 %550, i64* %551, align 8
  %552 = getelementptr inbounds %"struct.x11::ClientMessageEvent", %"struct.x11::ClientMessageEvent"* %437, i64 0, i32 5, i32 0, i32 0, i64 4
  %553 = load i32, i32* %552, align 4
  %554 = icmp ne i32 %553, 0
  %555 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 65
  %556 = zext i1 %554 to i8
  store i8 %556, i8* %555, align 8
  br label %647

557:                                              ; preds = %453
  %558 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %559 = load %"class.ui::XDragDropClient"*, %"class.ui::XDragDropClient"** %558, align 8
  %560 = call zeroext i1 @_ZN2ui15XDragDropClient15HandleXdndEventERKN3x1118ClientMessageEventE(%"class.ui::XDragDropClient"* %559, %"struct.x11::ClientMessageEvent"* nonnull dereferenceable(32) %437) #17
  br label %647

561:                                              ; preds = %99
  %562 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %563 = bitcast i8** %562 to %"struct.x11::PropertyNotifyEvent"**
  %564 = load %"struct.x11::PropertyNotifyEvent"*, %"struct.x11::PropertyNotifyEvent"** %563, align 8
  %565 = icmp eq %"struct.x11::PropertyNotifyEvent"* %564, null
  br i1 %565, label %647, label %566

566:                                              ; preds = %561
  %567 = getelementptr inbounds %"struct.x11::PropertyNotifyEvent", %"struct.x11::PropertyNotifyEvent"* %564, i64 0, i32 3
  %568 = load i32, i32* %567, align 4
  %569 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %569) #17
  %570 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %571 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %570, i64 0, i32 1, i32 0
  store i8 13, i8* %571, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %569, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i64 0, i64 0), i64 13, i1 false) #17
  %572 = getelementptr inbounds i8, i8* %569, i64 13
  store i8 0, i8* %572, align 1
  %573 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %14) #17
  %574 = icmp eq i32 %568, %573
  %575 = load i8, i8* %571, align 1
  %576 = icmp slt i8 %575, 0
  br i1 %576, label %577, label %580

577:                                              ; preds = %566
  %578 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %579 = load i8*, i8** %578, align 8
  call void @_ZdlPv(i8* %579) #18
  br label %580

580:                                              ; preds = %566, %577
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %569) #17
  br i1 %574, label %581, label %582

581:                                              ; preds = %580
  call void @_ZN2ui9X11Window16OnWMStateUpdatedEv(%"class.ui::X11Window"* %0)
  br label %647

582:                                              ; preds = %580
  %583 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %583) #17
  %584 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %585 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %584, i64 0, i32 1, i32 0
  store i8 18, i8* %585, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %583, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i64 0, i64 0), i64 18, i1 false) #17
  %586 = getelementptr inbounds i8, i8* %583, i64 18
  store i8 0, i8* %586, align 2
  %587 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %15) #17
  %588 = icmp eq i32 %568, %587
  %589 = load i8, i8* %585, align 1
  %590 = icmp slt i8 %589, 0
  br i1 %590, label %591, label %594

591:                                              ; preds = %582
  %592 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %593 = load i8*, i8** %592, align 8
  call void @_ZdlPv(i8* %593) #18
  br label %594

594:                                              ; preds = %582, %591
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %583) #17
  br i1 %588, label %595, label %596

595:                                              ; preds = %594
  call void @_ZN2ui9X11Window21OnFrameExtentsUpdatedEv(%"class.ui::X11Window"* %0)
  br label %647

596:                                              ; preds = %594
  %597 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %597) #17
  %598 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %599 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %598, i64 0, i32 1, i32 0
  store i8 15, i8* %599, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %597, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i64 15, i1 false) #17
  %600 = getelementptr inbounds i8, i8* %597, i64 15
  store i8 0, i8* %600, align 1
  %601 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %16) #17
  %602 = icmp eq i32 %568, %601
  %603 = load i8, i8* %599, align 1
  %604 = icmp slt i8 %603, 0
  br i1 %604, label %605, label %608

605:                                              ; preds = %596
  %606 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %607 = load i8*, i8** %606, align 8
  call void @_ZdlPv(i8* %607) #18
  br label %608

608:                                              ; preds = %596, %605
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %597) #17
  br i1 %602, label %609, label %647

609:                                              ; preds = %608
  %610 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 39
  %611 = bitcast %"class.absl::optional.388"* %610 to i64*
  %612 = load i64, i64* %611, align 4
  %613 = trunc i64 %612 to i8
  %614 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %614) #17
  store i32 -1431655766, i32* %6, align 4
  %615 = load i32, i32* %24, align 8
  %616 = call zeroext i1 @_ZN2ui16GetWindowDesktopEN3x116WindowEPi(i32 %615, i32* nonnull %6) #17
  br i1 %616, label %620, label %617

617:                                              ; preds = %609
  %618 = getelementptr inbounds %"class.absl::optional.388", %"class.absl::optional.388"* %610, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %618, align 4
  %619 = icmp eq i8 %613, 0
  br i1 %619, label %638, label %630

620:                                              ; preds = %609
  %621 = lshr i64 %612, 32
  %622 = trunc i64 %621 to i32
  %623 = load i32, i32* %6, align 4
  %624 = zext i32 %623 to i64
  %625 = shl nuw i64 %624, 32
  %626 = or i64 %625, 1
  store i64 %626, i64* %611, align 4
  %627 = icmp ne i8 %613, 0
  %628 = icmp eq i32 %623, %622
  %629 = and i1 %627, %628
  br i1 %629, label %638, label %630

630:                                              ; preds = %620, %617
  %631 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 13
  %632 = load %"class.ui::WorkspaceExtensionDelegate"*, %"class.ui::WorkspaceExtensionDelegate"** %631, align 8
  %633 = icmp eq %"class.ui::WorkspaceExtensionDelegate"* %632, null
  br i1 %633, label %638, label %634

634:                                              ; preds = %630
  %635 = bitcast %"class.ui::WorkspaceExtensionDelegate"* %632 to void (%"class.ui::WorkspaceExtensionDelegate"*)***
  %636 = load void (%"class.ui::WorkspaceExtensionDelegate"*)**, void (%"class.ui::WorkspaceExtensionDelegate"*)*** %635, align 8
  %637 = load void (%"class.ui::WorkspaceExtensionDelegate"*)*, void (%"class.ui::WorkspaceExtensionDelegate"*)** %636, align 8
  call void %637(%"class.ui::WorkspaceExtensionDelegate"* nonnull %632) #17
  br label %638

638:                                              ; preds = %620, %617, %630, %634
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %614) #17
  br label %647

639:                                              ; preds = %99
  %640 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %641 = bitcast i8** %640 to %"struct.x11::SelectionNotifyEvent"**
  %642 = load %"struct.x11::SelectionNotifyEvent"*, %"struct.x11::SelectionNotifyEvent"** %641, align 8
  %643 = icmp eq %"struct.x11::SelectionNotifyEvent"* %642, null
  br i1 %643, label %647, label %644

644:                                              ; preds = %639
  %645 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %646 = load %"class.ui::XDragDropClient"*, %"class.ui::XDragDropClient"** %645, align 8
  call void @_ZN2ui15XDragDropClient17OnSelectionNotifyERKN3x1120SelectionNotifyEventE(%"class.ui::XDragDropClient"* %646, %"struct.x11::SelectionNotifyEvent"* nonnull dereferenceable(24) %642) #17
  br label %647

647:                                              ; preds = %99, %151, %102, %170, %227, %410, %233, %425, %434, %561, %430, %250, %238, %595, %638, %608, %581, %639, %644, %557, %528, %542, %541, %470, %232, %156, %107, %150, %175, %225, %256, %290, %291, %325, %326, %366, %368, %408, %415, %420, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N2ui9X11Window7OnEventERKN3x115EventE(%"class.ui::X11Window"*, %"class.x11::Event"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 70
  %4 = bitcast %class.scoped_refptr* %3 to %"class.ui::X11Window"*
  %5 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 73
  %8 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %9 = bitcast i8** %8 to %"struct.x11::PropertyNotifyEvent"**
  %10 = load %"struct.x11::PropertyNotifyEvent"*, %"struct.x11::PropertyNotifyEvent"** %9, align 8
  %11 = select i1 %7, %"struct.x11::PropertyNotifyEvent"* %10, %"struct.x11::PropertyNotifyEvent"* null
  %12 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 23
  %13 = bitcast %class.scoped_refptr* %12 to %"class.ui::XDragDropClient"**
  %14 = load %"class.ui::XDragDropClient"*, %"class.ui::XDragDropClient"** %13, align 8
  %15 = getelementptr inbounds %"class.ui::XDragDropClient", %"class.ui::XDragDropClient"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.ui::XDragContext"*, %"class.ui::XDragContext"** %15, align 8
  %17 = icmp ne %"struct.x11::PropertyNotifyEvent"* %11, null
  %18 = icmp ne %"class.ui::XDragContext"* %16, null
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %28

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"struct.x11::PropertyNotifyEvent", %"struct.x11::PropertyNotifyEvent"* %11, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.ui::XDragContext", %"class.ui::XDragContext"* %16, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %28

26:                                               ; preds = %20
  %27 = tail call zeroext i1 @_ZN2ui12XDragContext27DispatchPropertyNotifyEventERKN3x1119PropertyNotifyEventE(%"class.ui::XDragContext"* nonnull %16, %"struct.x11::PropertyNotifyEvent"* nonnull dereferenceable(20) %11) #17
  br label %28

28:                                               ; preds = %2, %20, %26
  tail call void @_ZN2ui9X11Window11HandleEventERKN3x115EventE(%"class.ui::X11Window"* %4, %"class.x11::Event"* dereferenceable(32) %1) #17
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2ui9X11Window16CanDispatchEventERKPNS_5EventE(%"class.ui::X11Window"* nocapture readonly, %"class.ui::Event"** nocapture readnone dereferenceable(8)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 15
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %23

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %8 = load %"class.x11::Connection"*, %"class.x11::Connection"** %7, align 8
  %9 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %8, i64 0, i32 18
  %10 = load %"class.x11::Event"*, %"class.x11::Event"** %9, align 8
  %11 = icmp eq %"class.x11::Event"* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %10, i64 0, i32 4
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = load i32, i32* %14, align 4
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi i32 [ %17, %16 ], [ 0, %12 ]
  %20 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br label %23

23:                                               ; preds = %18, %6, %2
  %24 = phi i1 [ false, %2 ], [ false, %6 ], [ %22, %18 ]
  ret i1 %24
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui9X11Window12IsTargetedByERKN3x115EventE(%"class.ui::X11Window"* nocapture readonly, %"class.x11::Event"* nocapture readonly dereferenceable(32)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 4
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = load i32, i32* %4, align 4
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %2 ]
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %9, %11
  ret i1 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZThn40_N2ui9X11Window16CanDispatchEventERKPNS_5EventE(%"class.ui::X11Window"* nocapture readonly, %"class.ui::Event"** nocapture readnone dereferenceable(8)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 71
  %4 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl.408", %"class.base::internal::CancelableCallbackImpl.408"* %3, i64 6
  %5 = bitcast %"class.base::internal::CancelableCallbackImpl.408"* %4 to i8*
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %27

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl.408", %"class.base::internal::CancelableCallbackImpl.408"* %3, i64 9
  %10 = bitcast %"class.base::internal::CancelableCallbackImpl.408"* %9 to %"class.x11::Connection"**
  %11 = load %"class.x11::Connection"*, %"class.x11::Connection"** %10, align 8
  %12 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %11, i64 0, i32 18
  %13 = load %"class.x11::Event"*, %"class.x11::Event"** %12, align 8
  %14 = icmp eq %"class.x11::Event"* %13, null
  br i1 %14, label %27, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %13, i64 0, i32 4
  %17 = load i32*, i32** %16, align 8
  %18 = icmp eq i32* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = load i32, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %15
  %22 = phi i32 [ %20, %19 ], [ 0, %15 ]
  %23 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl.408", %"class.base::internal::CancelableCallbackImpl.408"* %3, i64 9, i32 1
  %24 = bitcast %"class.base::WeakPtrFactory.409"* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %22, %25
  br label %27

27:                                               ; preds = %2, %8, %21
  %28 = phi i1 [ false, %2 ], [ false, %8 ], [ %26, %21 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui9X11Window13DispatchEventERKPNS_5EventE(%"class.ui::X11Window"*, %"class.ui::Event"** nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 134, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !73

7:                                                ; preds = %2
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #17
  %9 = load %"class.ui::Event"*, %"class.ui::Event"** %1, align 8
  %10 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %3, align 4
  %12 = call i64 @_ZN20trace_event_internal13AddTraceEventIN2ui9EventTypeEEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 134, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.27, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0), i32* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #17
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi i64 [ -6148914691236517206, %2 ], [ %12, %7 ]
  %15 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.27, i64 0, i64 0), %7 ]
  %16 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 134, i32 0), %7 ]
  %17 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %18 = load %"class.x11::Connection"*, %"class.x11::Connection"** %17, align 8
  %19 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %18, i64 0, i32 18
  %20 = load %"class.x11::Event"*, %"class.x11::Event"** %19, align 8
  %21 = load %"class.ui::Event"*, %"class.ui::Event"** %1, align 8
  %22 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  switch i32 %23, label %26 [
    i32 1, label %24
    i32 2, label %24
    i32 3, label %24
    i32 4, label %24
    i32 5, label %24
    i32 6, label %24
    i32 9, label %24
    i32 10, label %24
  ]

24:                                               ; preds = %13, %13, %13, %13, %13, %13, %13, %13
  %25 = call %"class.ui::X11WindowManager"* @_ZN2ui16X11WindowManager11GetInstanceEv() #17
  call void @_ZN2ui16X11WindowManager13MouseOnWindowEPNS_9X11WindowE(%"class.ui::X11WindowManager"* %25, %"class.ui::X11Window"* %0) #17
  br label %26

26:                                               ; preds = %13, %24
  %27 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %20, i64 0, i32 4
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = load i32, i32* %28, align 4
  br label %32

32:                                               ; preds = %26, %30
  %33 = phi i32 [ %31, %30 ], [ 0, %26 ]
  %34 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 28
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %33, %35
  %37 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 14
  %38 = load %"class.ui::X11ExtensionDelegate"*, %"class.ui::X11ExtensionDelegate"** %37, align 8
  %39 = icmp eq %"class.ui::X11ExtensionDelegate"* %38, null
  br i1 %39, label %61, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %20, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 52
  br i1 %43, label %44, label %61

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %20, i64 0, i32 3
  %46 = bitcast i8** %45 to %"struct.x11::KeyEvent"**
  %47 = load %"struct.x11::KeyEvent"*, %"struct.x11::KeyEvent"** %46, align 8
  %48 = icmp eq %"struct.x11::KeyEvent"* %47, null
  br i1 %48, label %61, label %49

49:                                               ; preds = %44
  %50 = call %struct._AtkKeyEventStruct* @_ZN2ui21AtkKeyEventFromXEventERKN3x115EventE(%"class.x11::Event"* dereferenceable(32) %20) #17
  %51 = load %"class.ui::X11ExtensionDelegate"*, %"class.ui::X11ExtensionDelegate"** %37, align 8
  %52 = bitcast %"class.ui::X11ExtensionDelegate"* %51 to i1 (%"class.ui::X11ExtensionDelegate"*, %struct._AtkKeyEventStruct*, i1)***
  %53 = load i1 (%"class.ui::X11ExtensionDelegate"*, %struct._AtkKeyEventStruct*, i1)**, i1 (%"class.ui::X11ExtensionDelegate"*, %struct._AtkKeyEventStruct*, i1)*** %52, align 8
  %54 = getelementptr inbounds i1 (%"class.ui::X11ExtensionDelegate"*, %struct._AtkKeyEventStruct*, i1)*, i1 (%"class.ui::X11ExtensionDelegate"*, %struct._AtkKeyEventStruct*, i1)** %53, i64 1
  %55 = load i1 (%"class.ui::X11ExtensionDelegate"*, %struct._AtkKeyEventStruct*, i1)*, i1 (%"class.ui::X11ExtensionDelegate"*, %struct._AtkKeyEventStruct*, i1)** %54, align 8
  %56 = call zeroext i1 %55(%"class.ui::X11ExtensionDelegate"* %51, %struct._AtkKeyEventStruct* %50, i1 zeroext %36) #17
  %57 = icmp eq %struct._AtkKeyEventStruct* %50, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %49
  %59 = bitcast %struct._AtkKeyEventStruct* %50 to i8*
  call void @_ZdlPv(i8* %59) #18
  br i1 %56, label %63, label %61

60:                                               ; preds = %49
  br i1 %56, label %63, label %61

61:                                               ; preds = %40, %32, %44, %58, %60
  %62 = load %"class.ui::Event"*, %"class.ui::Event"** %1, align 8
  call void @_ZN2ui9X11Window15DispatchUiEventEPNS_5EventERKN3x115EventE(%"class.ui::X11Window"* %0, %"class.ui::Event"* %62, %"class.x11::Event"* dereferenceable(32) %20)
  br label %63

63:                                               ; preds = %58, %60, %61
  %64 = icmp eq i8* %16, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %63
  %66 = load i8, i8* %16, align 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %69, label %68

68:                                               ; preds = %65
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %16, i8* %15, i64 %14) #17
  br label %69

69:                                               ; preds = %63, %65, %68
  ret i32 2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIN2ui9EventTypeEEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4)) local_unnamed_addr #9 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #17
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #17
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 2, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i32, i32* %8, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #17
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #17
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #17
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #17
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #17
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #18
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  ret i64 %22
}

declare void @_ZN2ui16X11WindowManager13MouseOnWindowEPNS_9X11WindowE(%"class.ui::X11WindowManager"*, %"class.ui::X11Window"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window15DispatchUiEventEPNS_5EventERKN3x115EventE(%"class.ui::X11Window"*, %"class.ui::Event"*, %"class.x11::Event"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.ui::Event"*, align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"class.gfx::Rect"*
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %"class.gfx::Rect"*
  %9 = alloca %"class.x11::Event", align 8
  %10 = alloca %"class.base::OnceCallback.649", align 8
  store %"class.ui::Event"* %1, %"class.ui::Event"** %4, align 8
  %11 = tail call %"class.ui::X11WindowManager"* @_ZN2ui16X11WindowManager11GetInstanceEv() #17
  tail call void @_ZN2ui9X11Window11HandleEventERKN3x115EventE(%"class.ui::X11Window"* %0, %"class.x11::Event"* dereferenceable(32) %2)
  %12 = getelementptr inbounds %"class.ui::X11WindowManager", %"class.ui::X11WindowManager"* %11, i64 0, i32 0
  %13 = load %"class.ui::X11Window"*, %"class.ui::X11Window"** %12, align 8
  %14 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  switch i32 %15, label %21 [
    i32 1, label %30
    i32 2, label %30
    i32 3, label %30
    i32 4, label %30
    i32 5, label %30
    i32 6, label %30
    i32 9, label %30
    i32 10, label %30
    i32 34, label %30
    i32 35, label %16
    i32 36, label %16
  ]

16:                                               ; preds = %3, %3
  %17 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %1, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 262144
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %24

21:                                               ; preds = %3
  %22 = add i32 %15, -11
  %23 = icmp ult i32 %22, 4
  br i1 %23, label %30, label %24

24:                                               ; preds = %21, %16
  switch i32 %15, label %67 [
    i32 16, label %30
    i32 17, label %30
    i32 18, label %30
    i32 19, label %30
    i32 23, label %30
    i32 21, label %30
    i32 20, label %30
    i32 22, label %30
    i32 24, label %30
    i32 25, label %30
    i32 26, label %30
    i32 27, label %30
    i32 28, label %30
    i32 29, label %30
    i32 30, label %30
    i32 31, label %30
    i32 32, label %30
    i32 33, label %30
    i32 36, label %25
    i32 35, label %25
  ]

25:                                               ; preds = %24, %24
  %26 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %1, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 262144
  %29 = icmp ne i32 %28, 0
  br label %30

30:                                               ; preds = %3, %3, %3, %3, %3, %3, %3, %3, %3, %16, %21, %24, %24, %24, %24, %24, %24, %24, %24, %24, %24, %24, %24, %24, %24, %24, %24, %24, %24, %25
  %31 = phi i1 [ true, %21 ], [ true, %16 ], [ %29, %25 ], [ true, %24 ], [ true, %24 ], [ true, %24 ], [ true, %24 ], [ true, %24 ], [ true, %24 ], [ true, %24 ], [ true, %24 ], [ true, %24 ], [ true, %24 ], [ true, %24 ], [ true, %24 ], [ true, %24 ], [ true, %24 ], [ true, %24 ], [ true, %24 ], [ true, %24 ], [ true, %24 ], [ true, %3 ], [ true, %3 ], [ true, %3 ], [ true, %3 ], [ true, %3 ], [ true, %3 ], [ true, %3 ], [ true, %3 ], [ true, %3 ]
  %32 = icmp ne %"class.ui::X11Window"* %13, null
  %33 = and i1 %32, %31
  %34 = icmp ne %"class.ui::X11Window"* %13, %0
  %35 = and i1 %34, %33
  br i1 %35, label %36, label %67

36:                                               ; preds = %30
  switch i32 %15, label %37 [
    i32 1, label %42
    i32 2, label %42
    i32 3, label %42
    i32 4, label %42
    i32 5, label %42
    i32 6, label %42
    i32 9, label %42
    i32 10, label %42
  ]

37:                                               ; preds = %36
  %38 = add nsw i32 %15, -11
  %39 = icmp ult i32 %38, 4
  %40 = icmp eq i32 %15, 12
  %41 = and i1 %40, %39
  br i1 %41, label %42, label %65

42:                                               ; preds = %37, %36, %36, %36, %36, %36, %36, %36, %36
  %43 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #17
  %44 = bitcast %"class.ui::X11Window"* %13 to { i64, i64 } (%"class.ui::X11Window"*)***
  %45 = load { i64, i64 } (%"class.ui::X11Window"*)**, { i64, i64 } (%"class.ui::X11Window"*)*** %44, align 8
  %46 = getelementptr inbounds { i64, i64 } (%"class.ui::X11Window"*)*, { i64, i64 } (%"class.ui::X11Window"*)** %45, i64 9
  %47 = load { i64, i64 } (%"class.ui::X11Window"*)*, { i64, i64 } (%"class.ui::X11Window"*)** %46, align 8
  %48 = tail call { i64, i64 } %47(%"class.ui::X11Window"* nonnull %13) #17
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %50 = extractvalue { i64, i64 } %48, 0
  store i64 %50, i64* %49, align 8
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %52 = extractvalue { i64, i64 } %48, 1
  store i64 %52, i64* %51, align 8
  %53 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #17
  %54 = bitcast %"class.ui::X11Window"* %0 to { i64, i64 } (%"class.ui::X11Window"*)***
  %55 = load { i64, i64 } (%"class.ui::X11Window"*)**, { i64, i64 } (%"class.ui::X11Window"*)*** %54, align 8
  %56 = getelementptr inbounds { i64, i64 } (%"class.ui::X11Window"*)*, { i64, i64 } (%"class.ui::X11Window"*)** %55, i64 9
  %57 = load { i64, i64 } (%"class.ui::X11Window"*)*, { i64, i64 } (%"class.ui::X11Window"*)** %56, align 8
  %58 = tail call { i64, i64 } %57(%"class.ui::X11Window"* %0) #17
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %60 = extractvalue { i64, i64 } %58, 0
  store i64 %60, i64* %59, align 8
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %62 = extractvalue { i64, i64 } %58, 1
  store i64 %62, i64* %61, align 8
  %63 = tail call %"class.ui::LocatedEvent"* @_ZN2ui5Event14AsLocatedEventEv(%"class.ui::Event"* %1) #17
  call void @_ZN2ui9X11Window36ConvertEventLocationToTargetLocationERKN3gfx4RectES4_PNS_12LocatedEventE(%"class.ui::X11Window"* undef, %"class.gfx::Rect"* nonnull dereferenceable(16) %6, %"class.gfx::Rect"* nonnull dereferenceable(16) %8, %"class.ui::LocatedEvent"* %63)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #17
  %64 = load %"class.ui::Event"*, %"class.ui::Event"** %4, align 8
  br label %65

65:                                               ; preds = %42, %37
  %66 = phi %"class.ui::Event"* [ %64, %42 ], [ %1, %37 ]
  call void @_ZN2ui9X11Window15DispatchUiEventEPNS_5EventERKN3x115EventE(%"class.ui::X11Window"* nonnull %13, %"class.ui::Event"* %66, %"class.x11::Event"* dereferenceable(32) %2)
  br label %122

67:                                               ; preds = %24, %30
  %68 = bitcast %"class.x11::Event"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 32, i1 false)
  call void @_ZN3x115EventC1Ev(%"class.x11::Event"* nonnull %9) #17
  %69 = load i32, i32* %14, align 8
  %70 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %2, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  switch i32 %71, label %90 [
    i32 54, label %72
    i32 31, label %77
  ]

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %2, i64 0, i32 3
  %74 = bitcast i8** %73 to %"struct.x11::MotionNotifyEvent"**
  %75 = load %"struct.x11::MotionNotifyEvent"*, %"struct.x11::MotionNotifyEvent"** %74, align 8
  %76 = icmp eq %"struct.x11::MotionNotifyEvent"* %75, null
  br i1 %76, label %90, label %83

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %2, i64 0, i32 3
  %79 = bitcast i8** %78 to %"struct.x11::Input::DeviceEvent"**
  %80 = load %"struct.x11::Input::DeviceEvent"*, %"struct.x11::Input::DeviceEvent"** %79, align 8
  %81 = icmp eq %"struct.x11::Input::DeviceEvent"* %80, null
  br i1 %81, label %90, label %82

82:                                               ; preds = %77
  switch i32 %69, label %90 [
    i32 13, label %83
    i32 4, label %83
    i32 2, label %83
  ]

83:                                               ; preds = %72, %82, %82, %82
  %84 = call i32 @_ZN2ui27CoalescePendingMotionEventsERKN3x115EventEPS1_(%"class.x11::Event"* dereferenceable(32) %2, %"class.x11::Event"* nonnull %9) #17
  %85 = icmp sgt i32 %84, 0
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = load %"class.ui::Event"*, %"class.ui::Event"** %4, align 8
  br label %90

88:                                               ; preds = %83
  %89 = call %"class.ui::Event"* @_ZN2ui20BuildEventFromXEventERKN3x115EventE(%"class.x11::Event"* nonnull dereferenceable(32) %9) #17
  store %"class.ui::Event"* %89, %"class.ui::Event"** %4, align 8
  br label %90

90:                                               ; preds = %82, %77, %72, %67, %86, %88
  %91 = phi %"class.ui::Event"* [ %89, %88 ], [ %87, %86 ], [ %1, %67 ], [ %1, %72 ], [ %1, %77 ], [ %1, %82 ]
  %92 = phi %"class.ui::Event"* [ %89, %88 ], [ null, %86 ], [ null, %67 ], [ null, %72 ], [ null, %77 ], [ null, %82 ]
  %93 = icmp eq %"class.ui::Event"* %91, null
  br i1 %93, label %114, label %94

94:                                               ; preds = %90
  call void @_ZN2ui9X11Window16UpdateWMUserTimeEPNS_5EventE(%"class.ui::X11Window"* %0, %"class.ui::Event"* nonnull %91)
  %95 = call zeroext i1 @_ZN8features20IsUsingOzonePlatformEv() #17
  %96 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %97 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %96, align 8
  br i1 %95, label %98, label %109

98:                                               ; preds = %94
  %99 = ptrtoint %"class.ui::PlatformWindowDelegate"* %97 to i64
  %100 = call i8* @_Znwm(i64 56) #18, !noalias !74
  %101 = bitcast i8* %100 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %101, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.ui::Event"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN2ui22PlatformWindowDelegateEFvPNS3_5EventEEJNS0_17UnretainedWrapperIS4_EEEEEFvS6_EE7RunOnceEPNS0_13BindStateBaseES6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN2ui22PlatformWindowDelegateEFvPNS2_5EventEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !74
  %102 = getelementptr inbounds i8, i8* %100, i64 32
  %103 = bitcast i8* %102 to <2 x i64>*
  store <2 x i64> <i64 33, i64 0>, <2 x i64>* %103, align 8, !noalias !74
  %104 = getelementptr inbounds i8, i8* %100, i64 48
  %105 = bitcast i8* %104 to i64*
  store i64 %99, i64* %105, align 8, !noalias !74
  %106 = bitcast %"class.base::OnceCallback.649"* %10 to i8**
  store i8* %100, i8** %106, align 8, !alias.scope !74
  %107 = call zeroext i1 @_ZN2ui30DispatchEventFromNativeUiEventERKPNS_5EventEN4base12OnceCallbackIFvS1_EEE(%"class.ui::Event"** nonnull dereferenceable(8) %4, %"class.base::OnceCallback.649"* nonnull %10) #17
  %108 = getelementptr inbounds %"class.base::OnceCallback.649", %"class.base::OnceCallback.649"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %108) #17
  br label %114

109:                                              ; preds = %94
  %110 = bitcast %"class.ui::PlatformWindowDelegate"* %97 to void (%"class.ui::PlatformWindowDelegate"*, %"class.ui::Event"*)***
  %111 = load void (%"class.ui::PlatformWindowDelegate"*, %"class.ui::Event"*)**, void (%"class.ui::PlatformWindowDelegate"*, %"class.ui::Event"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*, %"class.ui::Event"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"class.ui::Event"*)** %111, i64 4
  %113 = load void (%"class.ui::PlatformWindowDelegate"*, %"class.ui::Event"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"class.ui::Event"*)** %112, align 8
  call void %113(%"class.ui::PlatformWindowDelegate"* %97, %"class.ui::Event"* nonnull %91) #17
  br label %114

114:                                              ; preds = %109, %98, %90
  %115 = icmp eq %"class.ui::Event"* %92, null
  br i1 %115, label %121, label %116

116:                                              ; preds = %114
  %117 = bitcast %"class.ui::Event"* %92 to void (%"class.ui::Event"*)***
  %118 = load void (%"class.ui::Event"*)**, void (%"class.ui::Event"*)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.ui::Event"*)*, void (%"class.ui::Event"*)** %118, i64 1
  %120 = load void (%"class.ui::Event"*)*, void (%"class.ui::Event"*)** %119, align 8
  call void %120(%"class.ui::Event"* nonnull %92) #17
  br label %121

121:                                              ; preds = %114, %116
  call void @_ZN3x115EventD1Ev(%"class.x11::Event"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #17
  br label %122

122:                                              ; preds = %121, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn40_N2ui9X11Window13DispatchEventERKPNS_5EventE(%"class.ui::X11Window"*, %"class.ui::Event"** nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 71
  %4 = bitcast %"class.base::internal::CancelableCallbackImpl.408"* %3 to %"class.ui::X11Window"*
  %5 = tail call i32 @_ZN2ui9X11Window13DispatchEventERKPNS_5EventE(%"class.ui::X11Window"* %4, %"class.ui::Event"** dereferenceable(8) %1)
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window36ConvertEventLocationToTargetLocationERKN3gfx4RectES4_PNS_12LocatedEventE(%"class.ui::X11Window"* nocapture readnone, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), %"class.ui::LocatedEvent"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.display::Display", align 8
  %6 = alloca %"class.display::Display", align 8
  %7 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #17
  %8 = bitcast %"class.display::Display"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %8) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast ({ i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon.516 } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.521 } } } } }, i32, i32, i8, [3 x i8], i32 }* @__const._ZN2ui9X11Window36ConvertEventLocationToTargetLocationERKN3gfx4RectES4_PNS_12LocatedEventE.display_window_current to i8*), i64 568, i1 false)
  %9 = bitcast %"class.display::Screen"* %7 to void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)***
  %10 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)** %10, i64 11
  %12 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)** %11, align 8
  call void %12(%"class.display::Display"* nonnull sret %5, %"class.display::Screen"* %7, %"class.gfx::Rect"* dereferenceable(16) %1) #17
  %13 = bitcast %"class.display::Display"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %13) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast ({ i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon.516 } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.521 } } } } }, i32, i32, i8, [3 x i8], i32 }* @__const._ZN2ui9X11Window36ConvertEventLocationToTargetLocationERKN3gfx4RectES4_PNS_12LocatedEventE.display_window_current to i8*), i64 568, i1 false)
  %14 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)*** %9, align 8
  %15 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)** %14, i64 11
  %16 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.gfx::Rect"*)** %15, align 8
  call void %16(%"class.display::Display"* nonnull sret %6, %"class.display::Screen"* %7, %"class.gfx::Rect"* dereferenceable(16) %2) #17
  %17 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0
  %18 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0
  call void @_ZN2ui42ConvertEventLocationToTargetWindowLocationERKN3gfx5PointES3_PNS_12LocatedEventE(%"class.gfx::Point"* dereferenceable(8) %17, %"class.gfx::Point"* dereferenceable(8) %18, %"class.ui::LocatedEvent"* %3) #17
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %13) #17
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %8) #17
  ret void
}

declare %"class.ui::LocatedEvent"* @_ZN2ui5Event14AsLocatedEventEv(%"class.ui::Event"*) local_unnamed_addr #1

declare void @_ZN3x115EventC1Ev(%"class.x11::Event"*) unnamed_addr #1

declare %"class.ui::Event"* @_ZN2ui20BuildEventFromXEventERKN3x115EventE(%"class.x11::Event"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window16UpdateWMUserTimeEPNS_5EventE(%"class.ui::X11Window"* nocapture readonly, %"class.ui::Event"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.553", align 8
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 43
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %63, label %13

13:                                               ; preds = %2, %9
  %14 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %63

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  switch i32 %19, label %63 [
    i32 12, label %20
    i32 7, label %20
    i32 1, label %20
  ]

20:                                               ; preds = %17, %17, %17
  %21 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #17
  %22 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %1, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %4) #17
  %26 = trunc i64 %25 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #17
  %27 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %28 = load i32, i32* %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #17
  %30 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 17, i8* %31, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i64 17, i1 false) #17
  %32 = getelementptr inbounds i8, i8* %29, i64 17
  store i8 0, i8* %32, align 1
  %33 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #17
  %34 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  %35 = bitcast %"class.std::__1::vector.553"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #17
  %36 = call i8* @_Znwm(i64 4) #18
  %37 = bitcast i8* %36 to i32*
  %38 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %3, i64 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::vector.553"* %3 to i8**
  store i8* %36, i8** %39, align 8
  %40 = getelementptr inbounds i8, i8* %36, i64 4
  %41 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast i32** %41 to i8**
  store i8* %40, i8** %42, align 8
  %43 = bitcast i32** %38 to i64*
  store i32 %26, i32* %37, align 4
  %44 = ptrtoint i8* %40 to i64
  store i64 %44, i64* %43, align 8
  %45 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyIjEENS_6FutureIvEENS_6WindowENS_4AtomES4_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE(i32 %28, i32 %33, i32 6, %"class.std::__1::vector.553"* nonnull dereferenceable(24) %3, %"class.x11::Connection"* %34) #17
  %46 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %3, i64 0, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = icmp eq i32* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %20
  %50 = ptrtoint i32* %47 to i64
  store i64 %50, i64* %43, align 8
  %51 = bitcast i32* %47 to i8*
  call void @_ZdlPv(i8* %51) #18
  br label %52

52:                                               ; preds = %20, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #17
  %53 = icmp eq %"class.x11::Connection::FutureImpl"* %45, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = bitcast %"class.x11::Connection::FutureImpl"* %45 to i8*
  call void @_ZdlPv(i8* %55) #18
  br label %56

56:                                               ; preds = %52, %54
  %57 = load i8, i8* %31, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #18
  br label %62

62:                                               ; preds = %56, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #17
  br label %63

63:                                               ; preds = %9, %62, %17, %13
  ret void
}

declare zeroext i1 @_ZN8features20IsUsingOzonePlatformEv() local_unnamed_addr #1

declare zeroext i1 @_ZN2ui30DispatchEventFromNativeUiEventERKPNS_5EventEN4base12OnceCallbackIFvS1_EEE(%"class.ui::Event"** dereferenceable(8), %"class.base::OnceCallback.649"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3x115EventD1Ev(%"class.x11::Event"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window21OnXWindowStateChangedEv(%"class.ui::X11Window"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.gfx::Rect", align 4
  %6 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  store i8 20, i8* %9, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0), i64 20, i1 false) #17
  %10 = getelementptr inbounds i8, i8* %7, i64 20
  store i8 0, i8* %10, align 4
  %11 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #17
  %12 = call zeroext i1 @_ZN2ui17HasWMSpecPropertyERKN4base8internal9flat_treeIN3x114AtomENS0_8identityENSt3__14lessIvEENS6_6vectorIS4_NS6_9allocatorIS4_EEEEEES4_(%"class.base::internal::flat_tree.378"* dereferenceable(24) %6, i32 %11) #17
  %13 = load i8, i8* %9, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %17) #18
  br label %18

18:                                               ; preds = %1, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  br i1 %12, label %38, label %19

19:                                               ; preds = %18
  %20 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #17
  %21 = call i8* @_Znwm(i64 32) #18
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %21, i8** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast i64* %23 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %24, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.33, i64 0, i64 0), i64 24, i1 false) #17
  %25 = getelementptr inbounds i8, i8* %21, i64 24
  store i8 0, i8* %25, align 1
  %26 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #17
  %27 = call zeroext i1 @_ZN2ui17HasWMSpecPropertyERKN4base8internal9flat_treeIN3x114AtomENS0_8identityENSt3__14lessIvEENS6_6vectorIS4_NS6_9allocatorIS4_EEEEEES4_(%"class.base::internal::flat_tree.378"* dereferenceable(24) %6, i32 %26) #17
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %19
  %33 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %33) #18
  br label %34

34:                                               ; preds = %19, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #17
  br i1 %27, label %43, label %35

35:                                               ; preds = %34
  %36 = call zeroext i1 @_ZNK2ui9X11Window11IsMaximizedEv(%"class.ui::X11Window"* %0)
  %37 = select i1 %36, i32 1, i32 3
  br label %38

38:                                               ; preds = %35, %18
  %39 = phi i32 [ %37, %35 ], [ 2, %18 ]
  %40 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 11
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 4
  br i1 %42, label %104, label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 11
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 4
  br i1 %46, label %47, label %104

47:                                               ; preds = %43, %38
  %48 = phi i32* [ %40, %38 ], [ %44, %43 ]
  %49 = phi i32 [ %39, %38 ], [ 4, %43 ]
  %50 = bitcast %"class.ui::X11Window"* %0 to { i64, i64 } (%"class.ui::X11Window"*)***
  %51 = load { i64, i64 } (%"class.ui::X11Window"*)**, { i64, i64 } (%"class.ui::X11Window"*)*** %50, align 8
  %52 = getelementptr inbounds { i64, i64 } (%"class.ui::X11Window"*)*, { i64, i64 } (%"class.ui::X11Window"*)** %51, i64 27
  %53 = load { i64, i64 } (%"class.ui::X11Window"*)*, { i64, i64 } (%"class.ui::X11Window"*)** %52, align 8
  %54 = call { i64, i64 } %53(%"class.ui::X11Window"* %0) #17
  %55 = extractvalue { i64, i64 } %54, 1
  %56 = trunc i64 %55 to i32
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %47
  %59 = call zeroext i1 @_ZNK2ui9X11Window11IsMaximizedEv(%"class.ui::X11Window"* %0)
  br i1 %59, label %64, label %94

60:                                               ; preds = %47
  %61 = icmp ult i64 %55, 4294967296
  %62 = call zeroext i1 @_ZNK2ui9X11Window11IsMaximizedEv(%"class.ui::X11Window"* %0)
  br i1 %61, label %63, label %70

63:                                               ; preds = %60
  br i1 %62, label %64, label %94

64:                                               ; preds = %58, %63
  %65 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 53
  %66 = bitcast %"class.ui::X11Window"* %0 to void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)***
  %67 = load void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)**, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)** %67, i64 26
  %69 = load void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)** %68, align 8
  call void %69(%"class.ui::X11Window"* %0, %"class.gfx::Rect"* dereferenceable(16) %65) #17
  br label %94

70:                                               ; preds = %60
  br i1 %62, label %94, label %71

71:                                               ; preds = %70
  %72 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #17
  %73 = call i8* @_Znwm(i64 32) #18
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %73, i8** %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = bitcast i64* %75 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %76, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %73, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.33, i64 0, i64 0), i64 24, i1 false) #17
  %77 = getelementptr inbounds i8, i8* %73, i64 24
  store i8 0, i8* %77, align 1
  %78 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #17
  %79 = call zeroext i1 @_ZN2ui17HasWMSpecPropertyERKN4base8internal9flat_treeIN3x114AtomENS0_8identityENSt3__14lessIvEENS6_6vectorIS4_NS6_9allocatorIS4_EEEEEES4_(%"class.base::internal::flat_tree.378"* dereferenceable(24) %6, i32 %78) #17
  %80 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %71
  %85 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %85) #18
  br label %86

86:                                               ; preds = %71, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #17
  br i1 %79, label %94, label %87

87:                                               ; preds = %86
  %88 = bitcast %"class.gfx::Rect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #17
  %89 = bitcast %"class.ui::X11Window"* %0 to void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)***
  %90 = bitcast %"class.gfx::Rect"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %90, i8 0, i64 16, i1 false)
  %91 = load void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)**, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*** %89, align 8
  %92 = getelementptr inbounds void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)** %91, i64 26
  %93 = load void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)** %92, align 8
  call void %93(%"class.ui::X11Window"* %0, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #17
  br label %94

94:                                               ; preds = %58, %70, %86, %87, %63, %64
  %95 = load i32, i32* %48, align 8
  %96 = icmp eq i32 %49, %95
  br i1 %96, label %104, label %97

97:                                               ; preds = %94
  store i32 %49, i32* %48, align 8
  %98 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %99 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %98, align 8
  %100 = bitcast %"class.ui::PlatformWindowDelegate"* %99 to void (%"class.ui::PlatformWindowDelegate"*, i32)***
  %101 = load void (%"class.ui::PlatformWindowDelegate"*, i32)**, void (%"class.ui::PlatformWindowDelegate"*, i32)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*, i32)*, void (%"class.ui::PlatformWindowDelegate"*, i32)** %101, i64 7
  %103 = load void (%"class.ui::PlatformWindowDelegate"*, i32)*, void (%"class.ui::PlatformWindowDelegate"*, i32)** %102, align 8
  call void %103(%"class.ui::PlatformWindowDelegate"* %99, i32 %49) #17
  br label %104

104:                                              ; preds = %43, %38, %97, %94
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window20OnXWindowDamageEventERKN3gfx4RectE(%"class.ui::X11Window"* nocapture readonly, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %4 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %3, align 8
  %5 = bitcast %"class.ui::PlatformWindowDelegate"* %4 to void (%"class.ui::PlatformWindowDelegate"*, %"class.gfx::Rect"*)***
  %6 = load void (%"class.ui::PlatformWindowDelegate"*, %"class.gfx::Rect"*)**, void (%"class.ui::PlatformWindowDelegate"*, %"class.gfx::Rect"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*, %"class.gfx::Rect"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"class.gfx::Rect"*)** %6, i64 3
  %8 = load void (%"class.ui::PlatformWindowDelegate"*, %"class.gfx::Rect"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"class.gfx::Rect"*)** %7, align 8
  tail call void %8(%"class.ui::PlatformWindowDelegate"* %4, %"class.gfx::Rect"* dereferenceable(16) %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window23OnXWindowCloseRequestedEv(%"class.ui::X11Window"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %3 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %2, align 8
  %4 = bitcast %"class.ui::PlatformWindowDelegate"* %3 to void (%"class.ui::PlatformWindowDelegate"*)***
  %5 = load void (%"class.ui::PlatformWindowDelegate"*)**, void (%"class.ui::PlatformWindowDelegate"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*)*, void (%"class.ui::PlatformWindowDelegate"*)** %5, i64 5
  %7 = load void (%"class.ui::PlatformWindowDelegate"*)*, void (%"class.ui::PlatformWindowDelegate"*)** %6, align 8
  tail call void %7(%"class.ui::PlatformWindowDelegate"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window24OnXWindowIsActiveChangedEb(%"class.ui::X11Window"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %4 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %3, align 8
  %5 = bitcast %"class.ui::PlatformWindowDelegate"* %4 to void (%"class.ui::PlatformWindowDelegate"*, i1)***
  %6 = load void (%"class.ui::PlatformWindowDelegate"*, i1)**, void (%"class.ui::PlatformWindowDelegate"*, i1)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*, i1)*, void (%"class.ui::PlatformWindowDelegate"*, i1)** %6, i64 12
  %8 = load void (%"class.ui::PlatformWindowDelegate"*, i1)*, void (%"class.ui::PlatformWindowDelegate"*, i1)** %7, align 8
  tail call void %8(%"class.ui::PlatformWindowDelegate"* %4, i1 zeroext %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window25OnXWindowWorkspaceChangedEv(%"class.ui::X11Window"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 13
  %3 = load %"class.ui::WorkspaceExtensionDelegate"*, %"class.ui::WorkspaceExtensionDelegate"** %2, align 8
  %4 = icmp eq %"class.ui::WorkspaceExtensionDelegate"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.ui::WorkspaceExtensionDelegate"* %3 to void (%"class.ui::WorkspaceExtensionDelegate"*)***
  %7 = load void (%"class.ui::WorkspaceExtensionDelegate"*)**, void (%"class.ui::WorkspaceExtensionDelegate"*)*** %6, align 8
  %8 = load void (%"class.ui::WorkspaceExtensionDelegate"*)*, void (%"class.ui::WorkspaceExtensionDelegate"*)** %7, align 8
  tail call void %8(%"class.ui::WorkspaceExtensionDelegate"* nonnull %3) #17
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window24OnXWindowLostPointerGrabEv(%"class.ui::X11Window"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 14
  %3 = load %"class.ui::X11ExtensionDelegate"*, %"class.ui::X11ExtensionDelegate"** %2, align 8
  %4 = icmp eq %"class.ui::X11ExtensionDelegate"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.ui::X11ExtensionDelegate"* %3 to void (%"class.ui::X11ExtensionDelegate"*)***
  %7 = load void (%"class.ui::X11ExtensionDelegate"*)**, void (%"class.ui::X11ExtensionDelegate"*)*** %6, align 8
  %8 = load void (%"class.ui::X11ExtensionDelegate"*)*, void (%"class.ui::X11ExtensionDelegate"*)** %7, align 8
  tail call void %8(%"class.ui::X11ExtensionDelegate"* nonnull %3) #17
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window23OnXWindowSelectionEventERKN3x1120SelectionNotifyEventE(%"class.ui::X11Window"* nocapture readonly, %"struct.x11::SelectionNotifyEvent"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %4 = load %"class.ui::XDragDropClient"*, %"class.ui::XDragDropClient"** %3, align 8
  tail call void @_ZN2ui15XDragDropClient17OnSelectionNotifyERKN3x1120SelectionNotifyEventE(%"class.ui::XDragDropClient"* %4, %"struct.x11::SelectionNotifyEvent"* dereferenceable(24) %1) #17
  ret void
}

declare void @_ZN2ui15XDragDropClient17OnSelectionNotifyERKN3x1120SelectionNotifyEventE(%"class.ui::XDragDropClient"*, %"struct.x11::SelectionNotifyEvent"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window22OnXWindowDragDropEventERKN3x1118ClientMessageEventE(%"class.ui::X11Window"* nocapture readonly, %"struct.x11::ClientMessageEvent"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %4 = load %"class.ui::XDragDropClient"*, %"class.ui::XDragDropClient"** %3, align 8
  %5 = tail call zeroext i1 @_ZN2ui15XDragDropClient15HandleXdndEventERKN3x1118ClientMessageEventE(%"class.ui::XDragDropClient"* %4, %"struct.x11::ClientMessageEvent"* dereferenceable(32) %1) #17
  ret void
}

declare zeroext i1 @_ZN2ui15XDragDropClient15HandleXdndEventERKN3x1118ClientMessageEventE(%"class.ui::XDragDropClient"*, %"struct.x11::ClientMessageEvent"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN2ui9X11Window24GetMinimumSizeForXWindowEv(%"class.ui::X11Window"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %3 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %2, align 8
  %4 = bitcast %"class.ui::PlatformWindowDelegate"* %3 to { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)***
  %5 = load { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)**, { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)*** %4, align 8
  %6 = getelementptr inbounds { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)*, { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)** %5, i64 13
  %7 = load { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)*, { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)** %6, align 8
  %8 = tail call { i64, i32 } %7(%"class.ui::PlatformWindowDelegate"* %3) #17
  ret { i64, i32 } %8
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN2ui9X11Window24GetMaximumSizeForXWindowEv(%"class.ui::X11Window"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %3 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %2, align 8
  %4 = bitcast %"class.ui::PlatformWindowDelegate"* %3 to { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)***
  %5 = load { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)**, { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)*** %4, align 8
  %6 = getelementptr inbounds { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)*, { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)** %5, i64 14
  %7 = load { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)*, { i64, i32 } (%"class.ui::PlatformWindowDelegate"*)** %6, align 8
  %8 = tail call { i64, i32 } %7(%"class.ui::PlatformWindowDelegate"* %3) #17
  ret { i64, i32 } %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window23GetWindowMaskForXWindowEv(%class.SkPath* noalias sret, %"class.ui::X11Window"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %1, i64 0, i32 12
  %4 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %3, align 8
  %5 = bitcast %"class.ui::PlatformWindowDelegate"* %4 to void (%class.SkPath*, %"class.ui::PlatformWindowDelegate"*)***
  %6 = load void (%class.SkPath*, %"class.ui::PlatformWindowDelegate"*)**, void (%class.SkPath*, %"class.ui::PlatformWindowDelegate"*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkPath*, %"class.ui::PlatformWindowDelegate"*)*, void (%class.SkPath*, %"class.ui::PlatformWindowDelegate"*)** %6, i64 15
  %8 = load void (%class.SkPath*, %"class.ui::PlatformWindowDelegate"*)*, void (%class.SkPath*, %"class.ui::PlatformWindowDelegate"*)** %7, align 8
  tail call void %8(%class.SkPath* sret %0, %"class.ui::PlatformWindowDelegate"* %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window30DispatchHostWindowDragMovementEiRKN3gfx5PointE(%"class.ui::X11Window"* nocapture readonly, i32, %"class.gfx::Point"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZN2ui30HitTestToWmMoveResizeDirectionEi(i32 %1) #17
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %13, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %8 = load %"class.x11::Connection"*, %"class.x11::Connection"** %7, align 8
  %9 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 27
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %12 = load i32, i32* %11, align 8
  tail call void @_ZN2ui14DoWMMoveResizeEPN3x1110ConnectionENS0_6WindowES3_RKN3gfx5PointEi(%"class.x11::Connection"* %8, i32 %10, i32 %12, %"class.gfx::Point"* dereferenceable(8) %2, i32 %4) #17
  br label %13

13:                                               ; preds = %3, %6
  ret void
}

declare i32 @_ZN2ui30HitTestToWmMoveResizeDirectionEi(i32) local_unnamed_addr #1

declare void @_ZN2ui14DoWMMoveResizeEPN3x1110ConnectionENS0_6WindowES3_RKN3gfx5PointEi(%"class.x11::Connection"*, i32, i32, %"class.gfx::Point"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N2ui9X11Window30DispatchHostWindowDragMovementEiRKN3gfx5PointE(%"class.ui::X11Window"* nocapture readonly, i32, %"class.gfx::Point"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 71, i32 1
  %5 = tail call i32 @_ZN2ui30HitTestToWmMoveResizeDirectionEi(i32 %1) #17
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %17, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.base::WeakPtrFactory.409"* %4 to %"class.ui::X11Window"*
  %9 = getelementptr inbounds %"class.base::WeakPtrFactory.409", %"class.base::WeakPtrFactory.409"* %4, i64 13, i32 0, i32 1
  %10 = bitcast i64* %9 to %"class.x11::Connection"**
  %11 = load %"class.x11::Connection"*, %"class.x11::Connection"** %10, align 8
  %12 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %8, i64 0, i32 27
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.base::WeakPtrFactory.409", %"class.base::WeakPtrFactory.409"* %4, i64 14
  %15 = bitcast %"class.base::WeakPtrFactory.409"* %14 to i32*
  %16 = load i32, i32* %15, align 8
  tail call void @_ZN2ui14DoWMMoveResizeEPN3x1110ConnectionENS0_6WindowES3_RKN3gfx5PointEi(%"class.x11::Connection"* %11, i32 %13, i32 %16, %"class.gfx::Point"* dereferenceable(8) %2, i32 %5) #17
  br label %17

17:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui9X11Window11RunMoveLoopERKN3gfx8Vector2dE(%"class.ui::X11Window"*, %"class.gfx::Vector2d"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %4 = load %"class.ui::X11DesktopWindowMoveClient"*, %"class.ui::X11DesktopWindowMoveClient"** %3, align 8
  %5 = bitcast %"class.ui::X11Window"* %0 to i1 (%"class.ui::X11Window"*)***
  %6 = load i1 (%"class.ui::X11Window"*)**, i1 (%"class.ui::X11Window"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.ui::X11Window"*)*, i1 (%"class.ui::X11Window"*)** %6, i64 13
  %8 = load i1 (%"class.ui::X11Window"*)*, i1 (%"class.ui::X11Window"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.ui::X11Window"* %0) #17
  %10 = xor i1 %9, true
  %11 = tail call zeroext i1 @_ZN2ui26X11DesktopWindowMoveClient11RunMoveLoopEbRKN3gfx8Vector2dE(%"class.ui::X11DesktopWindowMoveClient"* %4, i1 zeroext %10, %"class.gfx::Vector2d"* dereferenceable(8) %1) #17
  ret i1 %11
}

declare zeroext i1 @_ZN2ui26X11DesktopWindowMoveClient11RunMoveLoopEbRKN3gfx8Vector2dE(%"class.ui::X11DesktopWindowMoveClient"*, i1 zeroext, %"class.gfx::Vector2d"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn96_N2ui9X11Window11RunMoveLoopERKN3gfx8Vector2dE(%"class.ui::X11Window"*, %"class.gfx::Vector2d"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 67
  %4 = bitcast %"class.base::internal::CancelableCallbackImpl"* %3 to %"class.ui::X11Window"*
  %5 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %3, i64 7
  %6 = bitcast %"class.base::internal::CancelableCallbackImpl"* %5 to %"class.ui::X11DesktopWindowMoveClient"**
  %7 = load %"class.ui::X11DesktopWindowMoveClient"*, %"class.ui::X11DesktopWindowMoveClient"** %6, align 8
  %8 = bitcast %"class.base::internal::CancelableCallbackImpl"* %3 to i1 (%"class.ui::X11Window"*)***
  %9 = load i1 (%"class.ui::X11Window"*)**, i1 (%"class.ui::X11Window"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.ui::X11Window"*)*, i1 (%"class.ui::X11Window"*)** %9, i64 13
  %11 = load i1 (%"class.ui::X11Window"*)*, i1 (%"class.ui::X11Window"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.ui::X11Window"* %4) #17
  %13 = xor i1 %12, true
  %14 = tail call zeroext i1 @_ZN2ui26X11DesktopWindowMoveClient11RunMoveLoopEbRKN3gfx8Vector2dE(%"class.ui::X11DesktopWindowMoveClient"* %7, i1 zeroext %13, %"class.gfx::Vector2d"* dereferenceable(8) %1) #17
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window11EndMoveLoopEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %3 = load %"class.ui::X11DesktopWindowMoveClient"*, %"class.ui::X11DesktopWindowMoveClient"** %2, align 8
  tail call void @_ZN2ui26X11DesktopWindowMoveClient11EndMoveLoopEv(%"class.ui::X11DesktopWindowMoveClient"* %3) #17
  ret void
}

declare void @_ZN2ui26X11DesktopWindowMoveClient11EndMoveLoopEv(%"class.ui::X11DesktopWindowMoveClient"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn96_N2ui9X11Window11EndMoveLoopEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 67
  %3 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %2, i64 7
  %4 = bitcast %"class.base::internal::CancelableCallbackImpl"* %3 to %"class.ui::X11DesktopWindowMoveClient"**
  %5 = load %"class.ui::X11DesktopWindowMoveClient"*, %"class.ui::X11DesktopWindowMoveClient"** %4, align 8
  tail call void @_ZN2ui26X11DesktopWindowMoveClient11EndMoveLoopEv(%"class.ui::X11DesktopWindowMoveClient"* %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui9X11Window9StartDragERKNS_14OSExchangeDataEiNS_6CursorEbPNS_13WmDragHandler8DelegateE(%"class.ui::X11Window"*, %"class.ui::OSExchangeData"* dereferenceable(8), i32, %"class.ui::Cursor"* nocapture readnone, i1 zeroext, %"class.ui::WmDragHandler::Delegate"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::internal::WeakReference", align 8
  %8 = alloca %"class.base::WeakPtr.669", align 8
  %9 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 22
  store %"class.ui::WmDragHandler::Delegate"* %5, %"class.ui::WmDragHandler::Delegate"** %9, align 8
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %11 = load %"class.ui::XDragDropClient"*, %"class.ui::XDragDropClient"** %10, align 8
  tail call void @_ZN2ui15XDragDropClient8InitDragEiPKNS_14OSExchangeDataE(%"class.ui::XDragDropClient"* %11, i32 %2, %"class.ui::OSExchangeData"* %1) #17
  %12 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 20
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 19
  store i8 0, i8* %13, align 8
  %14 = tail call i8* @_Znwm(i64 112) #18
  %15 = bitcast i8* %14 to %"class.ui::X11WholeScreenMoveLoop"*
  %16 = icmp eq %"class.ui::X11Window"* %0, null
  %17 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 8
  %18 = select i1 %16, %"class.ui::X11MoveLoopDelegate"* null, %"class.ui::X11MoveLoopDelegate"* %17
  tail call void @_ZN2ui22X11WholeScreenMoveLoopC1EPNS_19X11MoveLoopDelegateE(%"class.ui::X11WholeScreenMoveLoop"* nonnull %15, %"class.ui::X11MoveLoopDelegate"* %18) #17
  %19 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %20 = load %"class.ui::X11MoveLoop"*, %"class.ui::X11MoveLoop"** %19, align 8
  %21 = bitcast %"class.ui::X11MoveLoop"** %19 to i8**
  store i8* %14, i8** %21, align 8
  %22 = icmp eq %"class.ui::X11MoveLoop"* %20, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %6
  %24 = bitcast %"class.ui::X11MoveLoop"* %20 to void (%"class.ui::X11MoveLoop"*)***
  %25 = load void (%"class.ui::X11MoveLoop"*)**, void (%"class.ui::X11MoveLoop"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.ui::X11MoveLoop"*)*, void (%"class.ui::X11MoveLoop"*)** %25, i64 1
  %27 = load void (%"class.ui::X11MoveLoop"*)*, void (%"class.ui::X11MoveLoop"*)** %26, align 8
  tail call void %27(%"class.ui::X11MoveLoop"* nonnull %20) #17
  br label %28

28:                                               ; preds = %23, %6
  %29 = bitcast %"class.base::WeakPtr.669"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #17
  %30 = getelementptr inbounds %"class.base::WeakPtr.669", %"class.base::WeakPtr.669"* %8, i64 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::WeakReference"* %7 to i8*
  %32 = bitcast %"class.base::WeakPtr.669"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #17, !noalias !79
  %33 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 72, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %7, %"class.base::internal::WeakReferenceOwner"* %33) #17, !noalias !79
  %34 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 72, i32 0, i32 1
  %35 = load i64, i64* %34, align 8, !noalias !79
  %36 = getelementptr inbounds %"class.base::WeakPtr.669", %"class.base::WeakPtr.669"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %36, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %7, i64 %35) #17
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #17, !noalias !79
  %37 = load %"class.ui::X11MoveLoop"*, %"class.ui::X11MoveLoop"** %19, align 8
  %38 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 70, i32 0
  %39 = load %"class.ui::X11Cursor"*, %"class.ui::X11Cursor"** %38, align 8
  %40 = icmp eq %"class.ui::X11Cursor"* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %28
  %42 = getelementptr inbounds %"class.ui::X11Cursor", %"class.ui::X11Cursor"* %39, i64 0, i32 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %42) #17
  %43 = load %"class.ui::X11Cursor"*, %"class.ui::X11Cursor"** %38, align 8
  %44 = icmp eq %"class.ui::X11Cursor"* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.ui::X11Cursor", %"class.ui::X11Cursor"* %43, i64 0, i32 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %46) #17
  br label %47

47:                                               ; preds = %28, %41, %45
  %48 = phi %"class.ui::X11Cursor"* [ null, %41 ], [ %43, %45 ], [ null, %28 ]
  %49 = bitcast %"class.ui::X11MoveLoop"* %37 to i1 (%"class.ui::X11MoveLoop"*, i1, %"class.ui::X11Cursor"*, %"class.ui::X11Cursor"*)***
  %50 = load i1 (%"class.ui::X11MoveLoop"*, i1, %"class.ui::X11Cursor"*, %"class.ui::X11Cursor"*)**, i1 (%"class.ui::X11MoveLoop"*, i1, %"class.ui::X11Cursor"*, %"class.ui::X11Cursor"*)*** %49, align 8
  %51 = getelementptr inbounds i1 (%"class.ui::X11MoveLoop"*, i1, %"class.ui::X11Cursor"*, %"class.ui::X11Cursor"*)*, i1 (%"class.ui::X11MoveLoop"*, i1, %"class.ui::X11Cursor"*, %"class.ui::X11Cursor"*)** %50, i64 2
  %52 = load i1 (%"class.ui::X11MoveLoop"*, i1, %"class.ui::X11Cursor"*, %"class.ui::X11Cursor"*)*, i1 (%"class.ui::X11MoveLoop"*, i1, %"class.ui::X11Cursor"*, %"class.ui::X11Cursor"*)** %51, align 8
  %53 = call zeroext i1 %52(%"class.ui::X11MoveLoop"* %37, i1 zeroext %4, %"class.ui::X11Cursor"* %39, %"class.ui::X11Cursor"* %48) #17
  %54 = getelementptr inbounds %"class.base::WeakPtr.669", %"class.base::WeakPtr.669"* %8, i64 0, i32 0, i32 0
  %55 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %54) #17
  br i1 %55, label %56, label %69

56:                                               ; preds = %47
  %57 = bitcast i64* %30 to %"class.ui::X11Window"**
  %58 = load %"class.ui::X11Window"*, %"class.ui::X11Window"** %57, align 8
  %59 = icmp eq %"class.ui::X11Window"* %58, null
  br i1 %59, label %69, label %60

60:                                               ; preds = %56
  %61 = load %"class.ui::X11MoveLoop"*, %"class.ui::X11MoveLoop"** %19, align 8
  store %"class.ui::X11MoveLoop"* null, %"class.ui::X11MoveLoop"** %19, align 8
  %62 = icmp eq %"class.ui::X11MoveLoop"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %60
  %64 = bitcast %"class.ui::X11MoveLoop"* %61 to void (%"class.ui::X11MoveLoop"*)***
  %65 = load void (%"class.ui::X11MoveLoop"*)**, void (%"class.ui::X11MoveLoop"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.ui::X11MoveLoop"*)*, void (%"class.ui::X11MoveLoop"*)** %65, i64 1
  %67 = load void (%"class.ui::X11MoveLoop"*)*, void (%"class.ui::X11MoveLoop"*)** %66, align 8
  call void %67(%"class.ui::X11MoveLoop"* nonnull %61) #17
  br label %68

68:                                               ; preds = %60, %63
  store %"class.ui::WmDragHandler::Delegate"* null, %"class.ui::WmDragHandler::Delegate"** %9, align 8
  br label %69

69:                                               ; preds = %56, %47, %68
  %70 = phi i1 [ %53, %68 ], [ false, %56 ], [ false, %47 ]
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %36) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #17
  ret i1 %70
}

declare void @_ZN2ui15XDragDropClient8InitDragEiPKNS_14OSExchangeDataE(%"class.ui::XDragDropClient"*, i32, %"class.ui::OSExchangeData"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn72_N2ui9X11Window9StartDragERKNS_14OSExchangeDataEiNS_6CursorEbPNS_13WmDragHandler8DelegateE(%"class.ui::X11Window"*, %"class.ui::OSExchangeData"* dereferenceable(8), i32, %"class.ui::Cursor"* nocapture readnone, i1 zeroext, %"class.ui::WmDragHandler::Delegate"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 68
  %8 = bitcast i8* %7 to %"class.ui::X11Window"*
  %9 = tail call zeroext i1 @_ZN2ui9X11Window9StartDragERKNS_14OSExchangeDataEiNS_6CursorEbPNS_13WmDragHandler8DelegateE(%"class.ui::X11Window"* %8, %"class.ui::OSExchangeData"* dereferenceable(8) %1, i32 %2, %"class.ui::Cursor"* undef, i1 zeroext %4, %"class.ui::WmDragHandler::Delegate"* %5)
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window10CancelDragEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %3 = load %"class.ui::X11MoveLoop"*, %"class.ui::X11MoveLoop"** %2, align 8
  %4 = bitcast %"class.ui::X11MoveLoop"* %3 to void (%"class.ui::X11MoveLoop"*)***
  %5 = load void (%"class.ui::X11MoveLoop"*)**, void (%"class.ui::X11MoveLoop"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.ui::X11MoveLoop"*)*, void (%"class.ui::X11MoveLoop"*)** %5, i64 4
  %7 = load void (%"class.ui::X11MoveLoop"*)*, void (%"class.ui::X11MoveLoop"*)** %6, align 8
  tail call void %7(%"class.ui::X11MoveLoop"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window12QuitDragLoopEv(%"class.ui::X11Window"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %3 = load %"class.ui::X11MoveLoop"*, %"class.ui::X11MoveLoop"** %2, align 8
  %4 = bitcast %"class.ui::X11MoveLoop"* %3 to void (%"class.ui::X11MoveLoop"*)***
  %5 = load void (%"class.ui::X11MoveLoop"*)**, void (%"class.ui::X11MoveLoop"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.ui::X11MoveLoop"*)*, void (%"class.ui::X11MoveLoop"*)** %5, i64 4
  %7 = load void (%"class.ui::X11MoveLoop"*)*, void (%"class.ui::X11MoveLoop"*)** %6, align 8
  tail call void %7(%"class.ui::X11MoveLoop"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N2ui9X11Window10CancelDragEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 68
  %3 = getelementptr inbounds i8, i8* %2, i64 200
  %4 = bitcast i8* %3 to %"class.ui::X11MoveLoop"**
  %5 = load %"class.ui::X11MoveLoop"*, %"class.ui::X11MoveLoop"** %4, align 8
  %6 = bitcast %"class.ui::X11MoveLoop"* %5 to void (%"class.ui::X11MoveLoop"*)***
  %7 = load void (%"class.ui::X11MoveLoop"*)**, void (%"class.ui::X11MoveLoop"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ui::X11MoveLoop"*)*, void (%"class.ui::X11MoveLoop"*)** %7, i64 4
  %9 = load void (%"class.ui::X11MoveLoop"*)*, void (%"class.ui::X11MoveLoop"*)** %8, align 8
  tail call void %9(%"class.ui::X11MoveLoop"* %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::XTopmostWindowFinder"* @_ZN2ui9X11Window18CreateWindowFinderEv(%"class.ui::X11Window"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 48) #18
  %3 = bitcast i8* %2 to %"class.ui::X11TopmostWindowFinder"*
  tail call void @_ZN2ui22X11TopmostWindowFinderC1Ev(%"class.ui::X11TopmostWindowFinder"* nonnull %3) #17
  %4 = bitcast i8* %2 to %"class.ui::XTopmostWindowFinder"*
  ret %"class.ui::XTopmostWindowFinder"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.ui::XTopmostWindowFinder"* @_ZThn80_N2ui9X11Window18CreateWindowFinderEv(%"class.ui::X11Window"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 48) #18
  %3 = bitcast i8* %2 to %"class.ui::X11TopmostWindowFinder"*
  tail call void @_ZN2ui22X11TopmostWindowFinderC1Ev(%"class.ui::X11TopmostWindowFinder"* nonnull %3) #17
  %4 = bitcast i8* %2 to %"class.ui::XTopmostWindowFinder"*
  ret %"class.ui::XTopmostWindowFinder"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui9X11Window10UpdateDragERKN3gfx5PointE(%"class.ui::X11Window"*, %"class.gfx::Point"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::PointF", align 4
  %4 = alloca %"class.gfx::PointF", align 4
  %5 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 0
  %6 = tail call %"class.ui::WmDropHandler"* @_ZN2ui16GetWmDropHandlerERKNS_14PlatformWindowE(%"class.ui::PlatformWindow"* dereferenceable(32) %5) #17
  %7 = icmp eq %"class.ui::WmDropHandler"* %6, null
  br i1 %7, label %85, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %10 = load %"class.ui::XDragDropClient"*, %"class.ui::XDragDropClient"** %9, align 8
  %11 = getelementptr inbounds %"class.ui::XDragDropClient", %"class.ui::XDragDropClient"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.ui::XDragContext"*, %"class.ui::XDragContext"** %11, align 8
  %13 = getelementptr inbounds %"class.ui::XDragDropClient", %"class.ui::XDragDropClient"* %10, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.ui::XDragContext", %"class.ui::XDragContext"* %12, i64 0, i32 6
  %16 = tail call i8* @_Znwm(i64 288) #18
  %17 = bitcast i8* %16 to %"class.ui::XOSExchangeDataProvider"*
  tail call void @_ZN2ui23XOSExchangeDataProviderC1EN3x116WindowERKNS_18SelectionFormatMapE(%"class.ui::XOSExchangeDataProvider"* nonnull %17, i32 %14, %"class.ui::SelectionFormatMap"* dereferenceable(24) %15) #17
  %18 = tail call i8* @_Znwm(i64 8) #18
  %19 = bitcast i8* %18 to %"class.ui::OSExchangeData"*
  %20 = bitcast i8* %16 to %"class.ui::OSExchangeDataProvider"*
  tail call void @_ZN2ui14OSExchangeDataC1ENSt3__110unique_ptrINS_22OSExchangeDataProviderENS1_14default_deleteIS3_EEEE(%"class.ui::OSExchangeData"* nonnull %19, %"class.ui::OSExchangeDataProvider"* nonnull %20) #17
  %21 = ptrtoint i8* %18 to i64
  %22 = tail call i32 @_ZNK2ui12XDragContext16GetDragOperationEv(%"class.ui::XDragContext"* %12) #17
  %23 = tail call zeroext i1 @_ZNK2ui14OSExchangeData7HasFileEv(%"class.ui::OSExchangeData"* nonnull %19) #17
  %24 = and i32 %22, 18
  %25 = icmp ne i32 %24, 0
  %26 = and i1 %23, %25
  %27 = zext i1 %26 to i32
  %28 = or i32 %22, %27
  %29 = getelementptr inbounds %"class.ui::XDragContext", %"class.ui::XDragContext"* %12, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = tail call %"class.ui::XDragDropClient"* @_ZN2ui15XDragDropClient12GetForWindowEN3x116WindowE(i32 %30) #17
  %32 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 19
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %56

35:                                               ; preds = %8
  %36 = bitcast %"class.gfx::PointF"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #17
  %37 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = sitofp i32 %38 to float
  %40 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = sitofp i32 %41 to float
  %43 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %3, i64 0, i32 0
  store float %39, float* %43, align 4
  %44 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %3, i64 0, i32 1
  store float %42, float* %44, align 4
  %45 = icmp eq %"class.ui::XDragDropClient"* %31, null
  br i1 %45, label %46, label %48

46:                                               ; preds = %35
  %47 = tail call i32 @_ZN2ui20XGetMaskAsEventFlagsEv() #17
  br label %51

48:                                               ; preds = %35
  %49 = getelementptr inbounds %"class.ui::XDragDropClient", %"class.ui::XDragDropClient"* %31, i64 0, i32 9
  %50 = load i32, i32* %49, align 4
  br label %51

51:                                               ; preds = %46, %48
  %52 = phi i32 [ %50, %48 ], [ %47, %46 ]
  %53 = bitcast %"class.ui::WmDropHandler"* %6 to void (%"class.ui::WmDropHandler"*, %"class.gfx::PointF"*, %"class.ui::OSExchangeData"*, i32, i32)***
  %54 = load void (%"class.ui::WmDropHandler"*, %"class.gfx::PointF"*, %"class.ui::OSExchangeData"*, i32, i32)**, void (%"class.ui::WmDropHandler"*, %"class.gfx::PointF"*, %"class.ui::OSExchangeData"*, i32, i32)*** %53, align 8
  %55 = load void (%"class.ui::WmDropHandler"*, %"class.gfx::PointF"*, %"class.ui::OSExchangeData"*, i32, i32)*, void (%"class.ui::WmDropHandler"*, %"class.gfx::PointF"*, %"class.ui::OSExchangeData"*, i32, i32)** %54, align 8
  call void %55(%"class.ui::WmDropHandler"* nonnull %6, %"class.gfx::PointF"* nonnull dereferenceable(8) %3, %"class.ui::OSExchangeData"* nonnull %19, i32 %28, i32 %52) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #17
  store i8 1, i8* %32, align 8
  br label %56

56:                                               ; preds = %8, %51
  %57 = phi i64 [ 0, %51 ], [ %21, %8 ]
  %58 = bitcast %"class.gfx::PointF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #17
  %59 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = sitofp i32 %60 to float
  %62 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = sitofp i32 %63 to float
  %65 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %4, i64 0, i32 0
  store float %61, float* %65, align 4
  %66 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %4, i64 0, i32 1
  store float %64, float* %66, align 4
  %67 = icmp eq %"class.ui::XDragDropClient"* %31, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %56
  %69 = call i32 @_ZN2ui20XGetMaskAsEventFlagsEv() #17
  br label %73

70:                                               ; preds = %56
  %71 = getelementptr inbounds %"class.ui::XDragDropClient", %"class.ui::XDragDropClient"* %31, i64 0, i32 9
  %72 = load i32, i32* %71, align 4
  br label %73

73:                                               ; preds = %68, %70
  %74 = phi i32 [ %72, %70 ], [ %69, %68 ]
  %75 = bitcast %"class.ui::WmDropHandler"* %6 to i32 (%"class.ui::WmDropHandler"*, %"class.gfx::PointF"*, i32, i32)***
  %76 = load i32 (%"class.ui::WmDropHandler"*, %"class.gfx::PointF"*, i32, i32)**, i32 (%"class.ui::WmDropHandler"*, %"class.gfx::PointF"*, i32, i32)*** %75, align 8
  %77 = getelementptr inbounds i32 (%"class.ui::WmDropHandler"*, %"class.gfx::PointF"*, i32, i32)*, i32 (%"class.ui::WmDropHandler"*, %"class.gfx::PointF"*, i32, i32)** %76, i64 1
  %78 = load i32 (%"class.ui::WmDropHandler"*, %"class.gfx::PointF"*, i32, i32)*, i32 (%"class.ui::WmDropHandler"*, %"class.gfx::PointF"*, i32, i32)** %77, align 8
  %79 = call i32 %78(%"class.ui::WmDropHandler"* nonnull %6, %"class.gfx::PointF"* nonnull dereferenceable(8) %4, i32 %28, i32 %74) #17
  %80 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 20
  store i32 %79, i32* %80, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #17
  %81 = icmp eq i64 %57, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %73
  %83 = inttoptr i64 %57 to %"class.ui::OSExchangeData"*
  call void @_ZN2ui14OSExchangeDataD1Ev(%"class.ui::OSExchangeData"* nonnull %83) #17
  %84 = inttoptr i64 %57 to i8*
  call void @_ZdlPv(i8* %84) #18
  br label %85

85:                                               ; preds = %82, %73, %2
  %86 = phi i32 [ 0, %2 ], [ %79, %73 ], [ %79, %82 ]
  ret i32 %86
}

declare %"class.ui::WmDropHandler"* @_ZN2ui16GetWmDropHandlerERKNS_14PlatformWindowE(%"class.ui::PlatformWindow"* dereferenceable(32)) local_unnamed_addr #1

declare i32 @_ZNK2ui12XDragContext16GetDragOperationEv(%"class.ui::XDragContext"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2ui14OSExchangeData7HasFileEv(%"class.ui::OSExchangeData"*) local_unnamed_addr #1

declare %"class.ui::XDragDropClient"* @_ZN2ui15XDragDropClient12GetForWindowEN3x116WindowE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn80_N2ui9X11Window10UpdateDragERKN3gfx5PointE(%"class.ui::X11Window"*, %"class.gfx::Point"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 67, i32 1, i32 0, i32 1
  %4 = bitcast i64* %3 to %"class.ui::X11Window"*
  %5 = tail call i32 @_ZN2ui9X11Window10UpdateDragERKN3gfx5PointE(%"class.ui::X11Window"* %4, %"class.gfx::Point"* dereferenceable(8) %1)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window12UpdateCursorENS_5mojom13DragOperationE(%"class.ui::X11Window"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 22
  %4 = load %"class.ui::WmDragHandler::Delegate"*, %"class.ui::WmDragHandler::Delegate"** %3, align 8
  %5 = bitcast %"class.ui::WmDragHandler::Delegate"* %4 to void (%"class.ui::WmDragHandler::Delegate"*, i32)***
  %6 = load void (%"class.ui::WmDragHandler::Delegate"*, i32)**, void (%"class.ui::WmDragHandler::Delegate"*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.ui::WmDragHandler::Delegate"*, i32)*, void (%"class.ui::WmDragHandler::Delegate"*, i32)** %6, i64 1
  %8 = load void (%"class.ui::WmDragHandler::Delegate"*, i32)*, void (%"class.ui::WmDragHandler::Delegate"*, i32)** %7, align 8
  tail call void %8(%"class.ui::WmDragHandler::Delegate"* %4, i32 %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N2ui9X11Window12UpdateCursorENS_5mojom13DragOperationE(%"class.ui::X11Window"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 67, i32 1, i32 0, i32 1
  %4 = getelementptr inbounds i64, i64* %3, i64 24
  %5 = bitcast i64* %4 to %"class.ui::WmDragHandler::Delegate"**
  %6 = load %"class.ui::WmDragHandler::Delegate"*, %"class.ui::WmDragHandler::Delegate"** %5, align 8
  %7 = bitcast %"class.ui::WmDragHandler::Delegate"* %6 to void (%"class.ui::WmDragHandler::Delegate"*, i32)***
  %8 = load void (%"class.ui::WmDragHandler::Delegate"*, i32)**, void (%"class.ui::WmDragHandler::Delegate"*, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::WmDragHandler::Delegate"*, i32)*, void (%"class.ui::WmDragHandler::Delegate"*, i32)** %8, i64 1
  %10 = load void (%"class.ui::WmDragHandler::Delegate"*, i32)*, void (%"class.ui::WmDragHandler::Delegate"*, i32)** %9, align 8
  tail call void %10(%"class.ui::WmDragHandler::Delegate"* %6, i32 %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window18OnBeginForeignDragEN3x116WindowE(%"class.ui::X11Window"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 19
  store i8 0, i8* %3, align 8
  %4 = tail call i8* @_Znwm(i64 24) #18
  %5 = bitcast i8* %4 to %"class.x11::XScopedEventSelector"*
  tail call void @_ZN3x1120XScopedEventSelectorC1ENS_6WindowENS_9EventMaskE(%"class.x11::XScopedEventSelector"* nonnull %5, i32 %1, i32 4194304) #17
  %6 = ptrtoint i8* %4 to i64
  %7 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 24
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.17"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.x11::XScopedEventSelector"*, %"class.x11::XScopedEventSelector"** %8, align 8
  %10 = bitcast %"class.std::__1::unique_ptr.17"* %7 to i64*
  store i64 %6, i64* %10, align 8
  %11 = icmp eq %"class.x11::XScopedEventSelector"* %9, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  tail call void @_ZN3x1120XScopedEventSelectorD1Ev(%"class.x11::XScopedEventSelector"* nonnull %9) #17
  %13 = bitcast %"class.x11::XScopedEventSelector"* %9 to i8*
  tail call void @_ZdlPv(i8* %13) #18
  br label %14

14:                                               ; preds = %12, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N2ui9X11Window18OnBeginForeignDragEN3x116WindowE(%"class.ui::X11Window"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 67, i32 1, i32 0, i32 1
  %4 = getelementptr inbounds i64, i64* %3, i64 22
  %5 = bitcast i64* %4 to i8*
  store i8 0, i8* %5, align 8
  %6 = tail call i8* @_Znwm(i64 24) #18
  %7 = bitcast i8* %6 to %"class.x11::XScopedEventSelector"*
  tail call void @_ZN3x1120XScopedEventSelectorC1ENS_6WindowENS_9EventMaskE(%"class.x11::XScopedEventSelector"* nonnull %7, i32 %1, i32 4194304) #17
  %8 = ptrtoint i8* %6 to i64
  %9 = getelementptr inbounds i64, i64* %3, i64 26
  %10 = bitcast i64* %9 to %"class.x11::XScopedEventSelector"**
  %11 = load %"class.x11::XScopedEventSelector"*, %"class.x11::XScopedEventSelector"** %10, align 8
  store i64 %8, i64* %9, align 8
  %12 = icmp eq %"class.x11::XScopedEventSelector"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  tail call void @_ZN3x1120XScopedEventSelectorD1Ev(%"class.x11::XScopedEventSelector"* nonnull %11) #17
  %14 = bitcast %"class.x11::XScopedEventSelector"* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #18
  br label %15

15:                                               ; preds = %2, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window16OnEndForeignDragEv(%"class.ui::X11Window"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %3 = load %"class.x11::XScopedEventSelector"*, %"class.x11::XScopedEventSelector"** %2, align 8
  store %"class.x11::XScopedEventSelector"* null, %"class.x11::XScopedEventSelector"** %2, align 8
  %4 = icmp eq %"class.x11::XScopedEventSelector"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN3x1120XScopedEventSelectorD1Ev(%"class.x11::XScopedEventSelector"* nonnull %3) #17
  %6 = bitcast %"class.x11::XScopedEventSelector"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #18
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N2ui9X11Window16OnEndForeignDragEv(%"class.ui::X11Window"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 67, i32 1, i32 0, i32 1
  %3 = getelementptr inbounds i64, i64* %2, i64 26
  %4 = bitcast i64* %3 to %"class.x11::XScopedEventSelector"**
  %5 = load %"class.x11::XScopedEventSelector"*, %"class.x11::XScopedEventSelector"** %4, align 8
  store %"class.x11::XScopedEventSelector"* null, %"class.x11::XScopedEventSelector"** %4, align 8
  %6 = icmp eq %"class.x11::XScopedEventSelector"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN3x1120XScopedEventSelectorD1Ev(%"class.x11::XScopedEventSelector"* nonnull %5) #17
  %8 = bitcast %"class.x11::XScopedEventSelector"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #18
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window17OnBeforeDragLeaveEv(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 0
  %3 = tail call %"class.ui::WmDropHandler"* @_ZN2ui16GetWmDropHandlerERKNS_14PlatformWindowE(%"class.ui::PlatformWindow"* dereferenceable(32) %2) #17
  %4 = icmp eq %"class.ui::WmDropHandler"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.ui::WmDropHandler"* %3 to void (%"class.ui::WmDropHandler"*)***
  %7 = load void (%"class.ui::WmDropHandler"*)**, void (%"class.ui::WmDropHandler"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ui::WmDropHandler"*)*, void (%"class.ui::WmDropHandler"*)** %7, i64 3
  %9 = load void (%"class.ui::WmDropHandler"*)*, void (%"class.ui::WmDropHandler"*)** %8, align 8
  tail call void %9(%"class.ui::WmDropHandler"* nonnull %3) #17
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 19
  store i8 0, i8* %10, align 8
  br label %11

11:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N2ui9X11Window17OnBeforeDragLeaveEv(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 67, i32 1, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.ui::PlatformWindow"*
  %4 = tail call %"class.ui::WmDropHandler"* @_ZN2ui16GetWmDropHandlerERKNS_14PlatformWindowE(%"class.ui::PlatformWindow"* dereferenceable(32) %3) #17
  %5 = icmp eq %"class.ui::WmDropHandler"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::WmDropHandler"* %4 to void (%"class.ui::WmDropHandler"*)***
  %8 = load void (%"class.ui::WmDropHandler"*)**, void (%"class.ui::WmDropHandler"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::WmDropHandler"*)*, void (%"class.ui::WmDropHandler"*)** %8, i64 3
  %10 = load void (%"class.ui::WmDropHandler"*)*, void (%"class.ui::WmDropHandler"*)** %9, align 8
  tail call void %10(%"class.ui::WmDropHandler"* nonnull %4) #17
  %11 = getelementptr inbounds i64, i64* %2, i64 22
  %12 = bitcast i64* %11 to i8*
  store i8 0, i8* %12, align 8
  br label %13

13:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui9X11Window11PerformDropEv(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 0
  %3 = tail call %"class.ui::WmDropHandler"* @_ZN2ui16GetWmDropHandlerERKNS_14PlatformWindowE(%"class.ui::PlatformWindow"* dereferenceable(32) %2) #17
  %4 = icmp eq %"class.ui::WmDropHandler"* %3, null
  br i1 %4, label %32, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 19
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %32, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %11 = load %"class.ui::XDragDropClient"*, %"class.ui::XDragDropClient"** %10, align 8
  %12 = getelementptr inbounds %"class.ui::XDragDropClient", %"class.ui::XDragDropClient"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.ui::XDragContext"*, %"class.ui::XDragContext"** %12, align 8
  %14 = getelementptr inbounds %"class.ui::XDragContext", %"class.ui::XDragContext"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = tail call %"class.ui::XDragDropClient"* @_ZN2ui15XDragDropClient12GetForWindowEN3x116WindowE(i32 %15) #17
  %17 = icmp eq %"class.ui::XDragDropClient"* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %9
  %19 = tail call i32 @_ZN2ui20XGetMaskAsEventFlagsEv() #17
  br label %23

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.ui::XDragDropClient", %"class.ui::XDragDropClient"* %16, i64 0, i32 9
  %22 = load i32, i32* %21, align 4
  br label %23

23:                                               ; preds = %18, %20
  %24 = phi i32 [ %22, %20 ], [ %19, %18 ]
  %25 = bitcast %"class.ui::WmDropHandler"* %3 to void (%"class.ui::WmDropHandler"*, %"class.ui::OSExchangeData"*, i32)***
  %26 = load void (%"class.ui::WmDropHandler"*, %"class.ui::OSExchangeData"*, i32)**, void (%"class.ui::WmDropHandler"*, %"class.ui::OSExchangeData"*, i32)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.ui::WmDropHandler"*, %"class.ui::OSExchangeData"*, i32)*, void (%"class.ui::WmDropHandler"*, %"class.ui::OSExchangeData"*, i32)** %26, i64 2
  %28 = load void (%"class.ui::WmDropHandler"*, %"class.ui::OSExchangeData"*, i32)*, void (%"class.ui::WmDropHandler"*, %"class.ui::OSExchangeData"*, i32)** %27, align 8
  tail call void %28(%"class.ui::WmDropHandler"* nonnull %3, %"class.ui::OSExchangeData"* null, i32 %24) #17
  store i8 0, i8* %6, align 8
  %29 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 20
  %30 = load i32, i32* %29, align 4
  %31 = tail call i32 @_ZN2ui22PreferredDragOperationEi(i32 %30) #17
  br label %32

32:                                               ; preds = %1, %5, %23
  %33 = phi i32 [ %31, %23 ], [ 0, %5 ], [ 0, %1 ]
  ret i32 %33
}

declare i32 @_ZN2ui22PreferredDragOperationEi(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn80_N2ui9X11Window11PerformDropEv(%"class.ui::X11Window"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 67, i32 1, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.ui::X11Window"*
  %4 = bitcast i64* %2 to %"class.ui::PlatformWindow"*
  %5 = tail call %"class.ui::WmDropHandler"* @_ZN2ui16GetWmDropHandlerERKNS_14PlatformWindowE(%"class.ui::PlatformWindow"* dereferenceable(32) %4) #17
  %6 = icmp eq %"class.ui::WmDropHandler"* %5, null
  br i1 %6, label %36, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds i64, i64* %2, i64 22
  %9 = bitcast i64* %8 to i8*
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %36, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds i64, i64* %2, i64 23
  %14 = bitcast i64* %13 to %"class.ui::XDragDropClient"**
  %15 = load %"class.ui::XDragDropClient"*, %"class.ui::XDragDropClient"** %14, align 8
  %16 = getelementptr inbounds %"class.ui::XDragDropClient", %"class.ui::XDragDropClient"* %15, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.ui::XDragContext"*, %"class.ui::XDragContext"** %16, align 8
  %18 = getelementptr inbounds %"class.ui::XDragContext", %"class.ui::XDragContext"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = tail call %"class.ui::XDragDropClient"* @_ZN2ui15XDragDropClient12GetForWindowEN3x116WindowE(i32 %19) #17
  %21 = icmp eq %"class.ui::XDragDropClient"* %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %12
  %23 = tail call i32 @_ZN2ui20XGetMaskAsEventFlagsEv() #17
  br label %27

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.ui::XDragDropClient", %"class.ui::XDragDropClient"* %20, i64 0, i32 9
  %26 = load i32, i32* %25, align 4
  br label %27

27:                                               ; preds = %24, %22
  %28 = phi i32 [ %26, %24 ], [ %23, %22 ]
  %29 = bitcast %"class.ui::WmDropHandler"* %5 to void (%"class.ui::WmDropHandler"*, %"class.ui::OSExchangeData"*, i32)***
  %30 = load void (%"class.ui::WmDropHandler"*, %"class.ui::OSExchangeData"*, i32)**, void (%"class.ui::WmDropHandler"*, %"class.ui::OSExchangeData"*, i32)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.ui::WmDropHandler"*, %"class.ui::OSExchangeData"*, i32)*, void (%"class.ui::WmDropHandler"*, %"class.ui::OSExchangeData"*, i32)** %30, i64 2
  %32 = load void (%"class.ui::WmDropHandler"*, %"class.ui::OSExchangeData"*, i32)*, void (%"class.ui::WmDropHandler"*, %"class.ui::OSExchangeData"*, i32)** %31, align 8
  tail call void %32(%"class.ui::WmDropHandler"* nonnull %5, %"class.ui::OSExchangeData"* null, i32 %28) #17
  store i8 0, i8* %9, align 8
  %33 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %3, i64 0, i32 20
  %34 = load i32, i32* %33, align 4
  %35 = tail call i32 @_ZN2ui22PreferredDragOperationEi(i32 %34) #17
  br label %36

36:                                               ; preds = %1, %7, %27
  %37 = phi i32 [ %35, %27 ], [ 0, %7 ], [ 0, %1 ]
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window11EndDragLoopEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 22
  %3 = load %"class.ui::WmDragHandler::Delegate"*, %"class.ui::WmDragHandler::Delegate"** %2, align 8
  %4 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 20
  %5 = load i32, i32* %4, align 4
  %6 = tail call i32 @_ZN2ui22PreferredDragOperationEi(i32 %5) #17
  %7 = bitcast %"class.ui::WmDragHandler::Delegate"* %3 to void (%"class.ui::WmDragHandler::Delegate"*, i32)***
  %8 = load void (%"class.ui::WmDragHandler::Delegate"*, i32)**, void (%"class.ui::WmDragHandler::Delegate"*, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::WmDragHandler::Delegate"*, i32)*, void (%"class.ui::WmDragHandler::Delegate"*, i32)** %8, i64 2
  %10 = load void (%"class.ui::WmDragHandler::Delegate"*, i32)*, void (%"class.ui::WmDragHandler::Delegate"*, i32)** %9, align 8
  tail call void %10(%"class.ui::WmDragHandler::Delegate"* %3, i32 %6) #17
  %11 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %12 = load %"class.ui::X11MoveLoop"*, %"class.ui::X11MoveLoop"** %11, align 8
  %13 = bitcast %"class.ui::X11MoveLoop"* %12 to void (%"class.ui::X11MoveLoop"*)***
  %14 = load void (%"class.ui::X11MoveLoop"*)**, void (%"class.ui::X11MoveLoop"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.ui::X11MoveLoop"*)*, void (%"class.ui::X11MoveLoop"*)** %14, i64 4
  %16 = load void (%"class.ui::X11MoveLoop"*)*, void (%"class.ui::X11MoveLoop"*)** %15, align 8
  tail call void %16(%"class.ui::X11MoveLoop"* %12) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N2ui9X11Window11EndDragLoopEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 67, i32 1, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.ui::X11Window"*
  %4 = getelementptr inbounds i64, i64* %2, i64 24
  %5 = bitcast i64* %4 to %"class.ui::WmDragHandler::Delegate"**
  %6 = load %"class.ui::WmDragHandler::Delegate"*, %"class.ui::WmDragHandler::Delegate"** %5, align 8
  %7 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %3, i64 0, i32 20
  %8 = load i32, i32* %7, align 4
  %9 = tail call i32 @_ZN2ui22PreferredDragOperationEi(i32 %8) #17
  %10 = bitcast %"class.ui::WmDragHandler::Delegate"* %6 to void (%"class.ui::WmDragHandler::Delegate"*, i32)***
  %11 = load void (%"class.ui::WmDragHandler::Delegate"*, i32)**, void (%"class.ui::WmDragHandler::Delegate"*, i32)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.ui::WmDragHandler::Delegate"*, i32)*, void (%"class.ui::WmDragHandler::Delegate"*, i32)** %11, i64 2
  %13 = load void (%"class.ui::WmDragHandler::Delegate"*, i32)*, void (%"class.ui::WmDragHandler::Delegate"*, i32)** %12, align 8
  tail call void %13(%"class.ui::WmDragHandler::Delegate"* %6, i32 %9) #17
  %14 = getelementptr inbounds i64, i64* %2, i64 25
  %15 = bitcast i64* %14 to %"class.ui::X11MoveLoop"**
  %16 = load %"class.ui::X11MoveLoop"*, %"class.ui::X11MoveLoop"** %15, align 8
  %17 = bitcast %"class.ui::X11MoveLoop"* %16 to void (%"class.ui::X11MoveLoop"*)***
  %18 = load void (%"class.ui::X11MoveLoop"*)**, void (%"class.ui::X11MoveLoop"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.ui::X11MoveLoop"*)*, void (%"class.ui::X11MoveLoop"*)** %18, i64 4
  %20 = load void (%"class.ui::X11MoveLoop"*)*, void (%"class.ui::X11MoveLoop"*)** %19, align 8
  tail call void %20(%"class.ui::X11MoveLoop"* %16) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window15OnMouseMovementERKN3gfx5PointEiN4base9TimeTicksE(%"class.ui::X11Window"* nocapture readonly, %"class.gfx::Point"* dereferenceable(8), i32, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 22
  %6 = load %"class.ui::WmDragHandler::Delegate"*, %"class.ui::WmDragHandler::Delegate"** %5, align 8
  %7 = bitcast %"class.ui::WmDragHandler::Delegate"* %6 to void (%"class.ui::WmDragHandler::Delegate"*, %"class.gfx::Point"*)***
  %8 = load void (%"class.ui::WmDragHandler::Delegate"*, %"class.gfx::Point"*)**, void (%"class.ui::WmDragHandler::Delegate"*, %"class.gfx::Point"*)*** %7, align 8
  %9 = load void (%"class.ui::WmDragHandler::Delegate"*, %"class.gfx::Point"*)*, void (%"class.ui::WmDragHandler::Delegate"*, %"class.gfx::Point"*)** %8, align 8
  tail call void %9(%"class.ui::WmDragHandler::Delegate"* %6, %"class.gfx::Point"* dereferenceable(8) %1) #17
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %11 = load %"class.ui::XDragDropClient"*, %"class.ui::XDragDropClient"** %10, align 8
  tail call void @_ZN2ui15XDragDropClient19HandleMouseMovementERKN3gfx5PointEiN4base9TimeTicksE(%"class.ui::XDragDropClient"* %11, %"class.gfx::Point"* dereferenceable(8) %1, i32 %2, i64 %3) #17
  ret void
}

declare void @_ZN2ui15XDragDropClient19HandleMouseMovementERKN3gfx5PointEiN4base9TimeTicksE(%"class.ui::XDragDropClient"*, %"class.gfx::Point"* dereferenceable(8), i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N2ui9X11Window15OnMouseMovementERKN3gfx5PointEiN4base9TimeTicksE(%"class.ui::X11Window"* nocapture readonly, %"class.gfx::Point"* dereferenceable(8), i32, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 67, i32 1
  %6 = getelementptr inbounds %"class.base::WeakPtrFactory.406", %"class.base::WeakPtrFactory.406"* %5, i64 12
  %7 = bitcast %"class.base::WeakPtrFactory.406"* %6 to %"class.ui::WmDragHandler::Delegate"**
  %8 = load %"class.ui::WmDragHandler::Delegate"*, %"class.ui::WmDragHandler::Delegate"** %7, align 8
  %9 = bitcast %"class.ui::WmDragHandler::Delegate"* %8 to void (%"class.ui::WmDragHandler::Delegate"*, %"class.gfx::Point"*)***
  %10 = load void (%"class.ui::WmDragHandler::Delegate"*, %"class.gfx::Point"*)**, void (%"class.ui::WmDragHandler::Delegate"*, %"class.gfx::Point"*)*** %9, align 8
  %11 = load void (%"class.ui::WmDragHandler::Delegate"*, %"class.gfx::Point"*)*, void (%"class.ui::WmDragHandler::Delegate"*, %"class.gfx::Point"*)** %10, align 8
  tail call void %11(%"class.ui::WmDragHandler::Delegate"* %8, %"class.gfx::Point"* dereferenceable(8) %1) #17
  %12 = getelementptr inbounds %"class.base::WeakPtrFactory.406", %"class.base::WeakPtrFactory.406"* %5, i64 11, i32 0, i32 1
  %13 = bitcast i64* %12 to %"class.ui::XDragDropClient"**
  %14 = load %"class.ui::XDragDropClient"*, %"class.ui::XDragDropClient"** %13, align 8
  tail call void @_ZN2ui15XDragDropClient19HandleMouseMovementERKN3gfx5PointEiN4base9TimeTicksE(%"class.ui::XDragDropClient"* %14, %"class.gfx::Point"* dereferenceable(8) %1, i32 %2, i64 %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window15OnMouseReleasedEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %3 = load %"class.ui::XDragDropClient"*, %"class.ui::XDragDropClient"** %2, align 8
  tail call void @_ZN2ui15XDragDropClient19HandleMouseReleasedEv(%"class.ui::XDragDropClient"* %3) #17
  ret void
}

declare void @_ZN2ui15XDragDropClient19HandleMouseReleasedEv(%"class.ui::XDragDropClient"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N2ui9X11Window15OnMouseReleasedEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 67, i32 1
  %3 = getelementptr inbounds %"class.base::WeakPtrFactory.406", %"class.base::WeakPtrFactory.406"* %2, i64 11, i32 0, i32 1
  %4 = bitcast i64* %3 to %"class.ui::XDragDropClient"**
  %5 = load %"class.ui::XDragDropClient"*, %"class.ui::XDragDropClient"** %4, align 8
  tail call void @_ZN2ui15XDragDropClient19HandleMouseReleasedEv(%"class.ui::XDragDropClient"* %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window15OnMoveLoopEndedEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %3 = load %"class.ui::XDragDropClient"*, %"class.ui::XDragDropClient"** %2, align 8
  tail call void @_ZN2ui15XDragDropClient19HandleMoveLoopEndedEv(%"class.ui::XDragDropClient"* %3) #17
  ret void
}

declare void @_ZN2ui15XDragDropClient19HandleMoveLoopEndedEv(%"class.ui::XDragDropClient"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N2ui9X11Window15OnMoveLoopEndedEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 67, i32 1
  %3 = getelementptr inbounds %"class.base::WeakPtrFactory.406", %"class.base::WeakPtrFactory.406"* %2, i64 11, i32 0, i32 1
  %4 = bitcast i64* %3 to %"class.ui::XDragDropClient"**
  %5 = load %"class.ui::XDragDropClient"*, %"class.ui::XDragDropClient"** %4, align 8
  tail call void @_ZN2ui15XDragDropClient19HandleMoveLoopEndedEv(%"class.ui::XDragDropClient"* %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window15SetBoundsOnMoveERKN3gfx4RectE(%"class.ui::X11Window"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.ui::X11Window"* %0 to void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)***
  %4 = load void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)**, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)** %4, i64 8
  %6 = load void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)** %5, align 8
  tail call void %6(%"class.ui::X11Window"* %0, %"class.gfx::Rect"* dereferenceable(16) %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N2ui9X11Window15SetBoundsOnMoveERKN3gfx4RectE(%"class.ui::X11Window"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 65
  %4 = bitcast i8* %3 to %"class.ui::X11Window"*
  %5 = bitcast i8* %3 to void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)***
  %6 = load void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)**, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)** %6, i64 8
  %8 = load void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)** %7, align 8
  tail call void %8(%"class.ui::X11Window"* %4, %"class.gfx::Rect"* dereferenceable(16) %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::X11Cursor"* @_ZN2ui9X11Window13GetLastCursorEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 70, i32 0
  %3 = load %"class.ui::X11Cursor"*, %"class.ui::X11Cursor"** %2, align 8
  %4 = icmp eq %"class.ui::X11Cursor"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::X11Cursor", %"class.ui::X11Cursor"* %3, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %6) #17
  br label %7

7:                                                ; preds = %1, %5
  ret %"class.ui::X11Cursor"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::X11Cursor"* @_ZThn104_N2ui9X11Window13GetLastCursorEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 65
  %3 = getelementptr inbounds i8, i8* %2, i64 512
  %4 = bitcast i8* %3 to %"class.ui::X11Cursor"**
  %5 = load %"class.ui::X11Cursor"*, %"class.ui::X11Cursor"** %4, align 8
  %6 = icmp eq %"class.ui::X11Cursor"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.ui::X11Cursor", %"class.ui::X11Cursor"* %5, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %8) #17
  br label %9

9:                                                ; preds = %1, %7
  ret %"class.ui::X11Cursor"* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2ui9X11Window7GetSizeEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 1
  %3 = bitcast %"class.gfx::Size"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  ret i64 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZThn104_N2ui9X11Window7GetSizeEv(%"class.ui::X11Window"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 -1, i32 65
  %3 = getelementptr inbounds i8, i8* %2, i64 316
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 4
  ret i64 %5
}

declare zeroext i1 @_ZN2ui31UseTestConfigForPlatformWindowsEv() local_unnamed_addr #1

declare void @_ZN2ui42ConvertEventLocationToTargetWindowLocationERKN3gfx5PointES3_PNS_12LocatedEventE(%"class.gfx::Point"* dereferenceable(8), %"class.gfx::Point"* dereferenceable(8), %"class.ui::LocatedEvent"*) local_unnamed_addr #1

declare %"class.ui::X11MenuRegistrar"* @_ZN2ui16X11MenuRegistrar3GetEv() local_unnamed_addr #1

declare i32 @_ZNK3x1110Connection15DefaultScreenIdEv(%"class.x11::Connection"*) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto17GetSelectionOwnerERKNS_4AtomE(%"class.x11::XProto"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::GetSelectionOwnerReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_22GetSelectionOwnerReplyEE4SyncEv(%"class.x11::Future.711"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.scoped_refptr.342, align 8
  %3 = alloca %"class.std::__1::unique_ptr.344", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future.711", %"class.x11::Future.711"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.342* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = getelementptr inbounds %class.scoped_refptr.342, %class.scoped_refptr.342* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.344"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.344"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.344"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.342* nonnull %2, %"class.std::__1::unique_ptr.344"* nonnull %3) #17
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #17
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #17
  %23 = call %"struct.x11::GetSelectionOwnerReply"* @_ZN3x116detail9ReadReplyINS_22GetSelectionOwnerReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #17
  %24 = ptrtoint %"struct.x11::GetSelectionOwnerReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #17
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.343"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.343"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #17
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::GetSelectionOwnerReply"*
  %47 = insertvalue { %"struct.x11::GetSelectionOwnerReply"*, %"class.x11::Error"* } undef, %"struct.x11::GetSelectionOwnerReply"* %46, 0
  %48 = insertvalue { %"struct.x11::GetSelectionOwnerReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::GetSelectionOwnerReply"*, %"class.x11::Error"* } %48
}

declare zeroext i1 @_ZN2ui14XVisualManager13GetVisualInfoEN3x118VisualIdEPhPNS1_8ColorMapEPb(%"class.ui::XVisualManager"*, i32, i8*, i32*, i8*) local_unnamed_addr #1

declare void @_ZN2ui14XVisualManager21ChooseVisualForWindowEbPN3x118VisualIdEPhPNS1_8ColorMapEPb(%"class.ui::XVisualManager"*, i1 zeroext, i32*, i8*, i32*, i8*) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto12CreateWindowERKNS_19CreateWindowRequestE(%"class.x11::XProto"*, %"struct.x11::CreateWindowRequest"* dereferenceable(152)) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto13DestroyWindowERKNS_6WindowE(%"class.x11::XProto"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x114Sync14DestroyCounterERKNS0_7CounterE(%"class.x11::Sync"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9MapWindowERKNS_6WindowE(%"class.x11::XProto"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui9X11Window8IsActiveEv(%"class.ui::X11Window"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 43
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5, %1
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br label %13

13:                                               ; preds = %5, %9
  %14 = phi i1 [ false, %5 ], [ %12, %9 ]
  ret i1 %14
}

declare zeroext i1 @_ZN2ui17HasWMSpecPropertyERKN4base8internal9flat_treeIN3x114AtomENS0_8identityENSt3__14lessIvEENS6_6vectorIS4_NS6_9allocatorIS4_EEEEEES4_(%"class.base::internal::flat_tree.378"* dereferenceable(24), i32) local_unnamed_addr #1

declare void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"*, %"class.gfx::Insets"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK3gfx6InsetsngEv(%"class.gfx::Insets"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = tail call i1 @llvm.is.constant.i32(i32 %3) #17
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = sub i32 0, %3
  %7 = icmp eq i32 %6, -2147483648
  %8 = select i1 %7, i32 2147483647, i32 %6
  br label %14

9:                                                ; preds = %1
  %10 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %3) #17
  %11 = extractvalue { i32, i1 } %10, 1
  %12 = extractvalue { i32, i1 } %10, 0
  %13 = select i1 %11, i32 2147483647, i32 %12
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi i32 [ %8, %5 ], [ %13, %9 ]
  %16 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = tail call i1 @llvm.is.constant.i32(i32 %17) #17
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = sub i32 0, %17
  %21 = icmp eq i32 %20, -2147483648
  %22 = select i1 %21, i32 2147483647, i32 %20
  br label %28

23:                                               ; preds = %14
  %24 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %17) #17
  %25 = extractvalue { i32, i1 } %24, 1
  %26 = extractvalue { i32, i1 } %24, 0
  %27 = select i1 %25, i32 2147483647, i32 %26
  br label %28

28:                                               ; preds = %19, %23
  %29 = phi i32 [ %22, %19 ], [ %27, %23 ]
  %30 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = tail call i1 @llvm.is.constant.i32(i32 %31) #17
  br i1 %32, label %33, label %37

33:                                               ; preds = %28
  %34 = sub i32 0, %31
  %35 = icmp eq i32 %34, -2147483648
  %36 = select i1 %35, i32 2147483647, i32 %34
  br label %42

37:                                               ; preds = %28
  %38 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %31) #17
  %39 = extractvalue { i32, i1 } %38, 1
  %40 = extractvalue { i32, i1 } %38, 0
  %41 = select i1 %39, i32 2147483647, i32 %40
  br label %42

42:                                               ; preds = %33, %37
  %43 = phi i32 [ %36, %33 ], [ %41, %37 ]
  %44 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = tail call i1 @llvm.is.constant.i32(i32 %45) #17
  br i1 %46, label %47, label %51

47:                                               ; preds = %42
  %48 = sub i32 0, %45
  %49 = icmp eq i32 %48, -2147483648
  %50 = select i1 %49, i32 2147483647, i32 %48
  br label %56

51:                                               ; preds = %42
  %52 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %45) #17
  %53 = extractvalue { i32, i1 } %52, 1
  %54 = extractvalue { i32, i1 } %52, 0
  %55 = select i1 %53, i32 2147483647, i32 %54
  br label %56

56:                                               ; preds = %47, %51
  %57 = phi i32 [ %50, %47 ], [ %55, %51 ]
  %58 = icmp sgt i32 %15, 0
  %59 = icmp sgt i32 %43, 0
  %60 = and i1 %58, %59
  %61 = sub nuw nsw i32 2147483647, %15
  %62 = icmp ult i32 %61, %43
  %63 = and i1 %62, %60
  br i1 %63, label %71, label %64

64:                                               ; preds = %56
  %65 = and i32 %43, %15
  %66 = icmp slt i32 %65, 0
  %67 = sub nsw i32 -2147483648, %15
  %68 = icmp sgt i32 %67, %43
  %69 = and i1 %68, %66
  %70 = select i1 %69, i32 %67, i32 %43
  br label %71

71:                                               ; preds = %64, %56
  %72 = phi i32 [ %70, %64 ], [ %61, %56 ]
  %73 = icmp sgt i32 %29, 0
  %74 = icmp sgt i32 %57, 0
  %75 = and i1 %73, %74
  %76 = sub nuw nsw i32 2147483647, %29
  %77 = icmp ult i32 %76, %57
  %78 = and i1 %77, %75
  br i1 %78, label %86, label %79

79:                                               ; preds = %71
  %80 = and i32 %57, %29
  %81 = icmp slt i32 %80, 0
  %82 = sub nsw i32 -2147483648, %29
  %83 = icmp sgt i32 %82, %57
  %84 = and i1 %83, %81
  %85 = select i1 %84, i32 %82, i32 %57
  br label %86

86:                                               ; preds = %71, %79
  %87 = phi i32 [ %85, %79 ], [ %76, %71 ]
  %88 = zext i32 %29 to i64
  %89 = shl nuw i64 %88, 32
  %90 = zext i32 %15 to i64
  %91 = or i64 %89, %90
  %92 = insertvalue { i64, i64 } undef, i64 %91, 0
  %93 = zext i32 %87 to i64
  %94 = shl nuw i64 %93, 32
  %95 = zext i32 %72 to i64
  %96 = or i64 %94, %95
  %97 = insertvalue { i64, i64 } %92, i64 %96, 1
  ret { i64, i64 } %97
}

declare i32 @_ZNK6SkPath11countPointsEv(%class.SkPath*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window18UpdateWindowRegionENSt3__110unique_ptrINS1_6vectorIN3x119RectangleENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.ui::X11Window"*, %"class.std::__1::vector.396"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::Shape::RectanglesRequest", align 8
  %4 = alloca %"struct.x11::Shape::RectanglesRequest", align 8
  %5 = alloca %"struct.x11::Shape::RectanglesRequest", align 8
  %6 = alloca %"struct.x11::Shape::MaskRequest", align 4
  %7 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 59
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 58
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.393", %"class.std::__1::unique_ptr.393"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.std::__1::vector.396"*, %"class.std::__1::vector.396"** %11, align 8
  br i1 %9, label %75, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %15 = bitcast %"class.x11::Connection"** %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 120
  %18 = bitcast i8* %17 to %"class.x11::Shape"**
  %19 = load %"class.x11::Shape"*, %"class.x11::Shape"** %18, align 8
  %20 = bitcast %"struct.x11::Shape::RectanglesRequest"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %20) #17
  %21 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %5, i64 0, i32 0
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %5, i64 0, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %5, i64 0, i32 2
  store i32 3, i32* %23, align 8
  %24 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %5, i64 0, i32 3
  %25 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %26 = load i32, i32* %25, align 8
  store i32 %26, i32* %24, align 4
  %27 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %5, i64 0, i32 4
  store i16 0, i16* %27, align 8
  %28 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %5, i64 0, i32 5
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %5, i64 0, i32 6
  %30 = bitcast %"class.std::__1::vector.396"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #17
  %31 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %12, i64 0, i32 0, i32 1
  %32 = bitcast %"struct.x11::Rectangle"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector.396"* %12 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = ashr exact i64 %36, 3
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %61, label %39

39:                                               ; preds = %13
  %40 = icmp ugt i64 %37, 2305843009213693951
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = bitcast %"class.std::__1::vector.396"* %29 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #19
  unreachable

43:                                               ; preds = %39
  %44 = tail call i8* @_Znwm(i64 %36) #18
  %45 = bitcast i8* %44 to %"struct.x11::Rectangle"*
  %46 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %5, i64 0, i32 6, i32 0, i32 1
  %47 = bitcast %"struct.x11::Rectangle"** %46 to i8**
  store i8* %44, i8** %47, align 8
  %48 = bitcast %"class.std::__1::vector.396"* %29 to i8**
  store i8* %44, i8** %48, align 8
  %49 = getelementptr inbounds %"struct.x11::Rectangle", %"struct.x11::Rectangle"* %45, i64 %37
  %50 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %5, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store %"struct.x11::Rectangle"* %49, %"struct.x11::Rectangle"** %50, align 8
  %51 = bitcast %"struct.x11::Rectangle"** %46 to i64*
  %52 = ptrtoint i8* %44 to i64
  %53 = icmp sgt i64 %36, 0
  br i1 %53, label %54, label %59

54:                                               ; preds = %43
  %55 = lshr exact i64 %36, 3
  %56 = inttoptr i64 %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %44, i8* align 2 %56, i64 %36, i1 false) #17
  %57 = getelementptr inbounds %"struct.x11::Rectangle", %"struct.x11::Rectangle"* %45, i64 %55
  %58 = ptrtoint %"struct.x11::Rectangle"* %57 to i64
  br label %59

59:                                               ; preds = %54, %43
  %60 = phi i64 [ %58, %54 ], [ %52, %43 ]
  store i64 %60, i64* %51, align 8
  br label %61

61:                                               ; preds = %59, %13
  %62 = call %"class.x11::Connection::FutureImpl"* @_ZN3x115Shape10RectanglesERKNS0_17RectanglesRequestE(%"class.x11::Shape"* %19, %"struct.x11::Shape::RectanglesRequest"* nonnull dereferenceable(48) %5) #17
  %63 = icmp eq %"class.x11::Connection::FutureImpl"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  %65 = bitcast %"class.x11::Connection::FutureImpl"* %62 to i8*
  call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %61, %64
  %67 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %5, i64 0, i32 6, i32 0, i32 0
  %68 = load %"struct.x11::Rectangle"*, %"struct.x11::Rectangle"** %67, align 8
  %69 = icmp eq %"struct.x11::Rectangle"* %68, null
  br i1 %69, label %235, label %70

70:                                               ; preds = %66
  %71 = ptrtoint %"struct.x11::Rectangle"* %68 to i64
  %72 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %5, i64 0, i32 6, i32 0, i32 1
  %73 = bitcast %"struct.x11::Rectangle"** %72 to i64*
  store i64 %71, i64* %73, align 8
  %74 = bitcast %"struct.x11::Rectangle"* %68 to i8*
  call void @_ZdlPv(i8* %74) #18
  br label %235

75:                                               ; preds = %2
  %76 = ptrtoint %"class.std::__1::vector.396"* %1 to i64
  %77 = bitcast %"class.std::__1::unique_ptr.393"* %10 to i64*
  store i64 %76, i64* %77, align 8
  %78 = icmp eq %"class.std::__1::vector.396"* %12, null
  br i1 %78, label %91, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %12, i64 0, i32 0, i32 0
  %81 = load %"struct.x11::Rectangle"*, %"struct.x11::Rectangle"** %80, align 8
  %82 = icmp eq %"struct.x11::Rectangle"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = ptrtoint %"struct.x11::Rectangle"* %81 to i64
  %85 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %12, i64 0, i32 0, i32 1
  %86 = bitcast %"struct.x11::Rectangle"** %85 to i64*
  store i64 %84, i64* %86, align 8
  %87 = bitcast %"struct.x11::Rectangle"* %81 to i8*
  tail call void @_ZdlPv(i8* %87) #18
  br label %88

88:                                               ; preds = %83, %79
  %89 = bitcast %"class.std::__1::vector.396"* %12 to i8*
  tail call void @_ZdlPv(i8* %89) #18
  %90 = load %"class.std::__1::vector.396"*, %"class.std::__1::vector.396"** %11, align 8
  br label %91

91:                                               ; preds = %75, %88
  %92 = phi %"class.std::__1::vector.396"* [ %1, %75 ], [ %90, %88 ]
  %93 = icmp eq %"class.std::__1::vector.396"* %92, null
  br i1 %93, label %157, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %96 = bitcast %"class.x11::Connection"** %95 to i8**
  %97 = load i8*, i8** %96, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 120
  %99 = bitcast i8* %98 to %"class.x11::Shape"**
  %100 = load %"class.x11::Shape"*, %"class.x11::Shape"** %99, align 8
  %101 = bitcast %"struct.x11::Shape::RectanglesRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %101) #17
  %102 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %4, i64 0, i32 0
  store i32 0, i32* %102, align 8
  %103 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %4, i64 0, i32 1
  store i32 0, i32* %103, align 4
  %104 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %4, i64 0, i32 2
  store i32 3, i32* %104, align 8
  %105 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %4, i64 0, i32 3
  %106 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %107 = load i32, i32* %106, align 8
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %4, i64 0, i32 4
  store i16 0, i16* %108, align 8
  %109 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %4, i64 0, i32 5
  store i16 0, i16* %109, align 2
  %110 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %4, i64 0, i32 6
  %111 = bitcast %"class.std::__1::vector.396"* %110 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 24, i1 false) #17
  %112 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %92, i64 0, i32 0, i32 1
  %113 = bitcast %"struct.x11::Rectangle"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::vector.396"* %92 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %114, %116
  %118 = ashr exact i64 %117, 3
  %119 = icmp eq i64 %117, 0
  br i1 %119, label %142, label %120

120:                                              ; preds = %94
  %121 = icmp ugt i64 %118, 2305843009213693951
  br i1 %121, label %122, label %124

122:                                              ; preds = %120
  %123 = bitcast %"class.std::__1::vector.396"* %110 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %123) #19
  unreachable

124:                                              ; preds = %120
  %125 = tail call i8* @_Znwm(i64 %117) #18
  %126 = bitcast i8* %125 to %"struct.x11::Rectangle"*
  %127 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %4, i64 0, i32 6, i32 0, i32 1
  %128 = bitcast %"struct.x11::Rectangle"** %127 to i8**
  store i8* %125, i8** %128, align 8
  %129 = bitcast %"class.std::__1::vector.396"* %110 to i8**
  store i8* %125, i8** %129, align 8
  %130 = getelementptr inbounds %"struct.x11::Rectangle", %"struct.x11::Rectangle"* %126, i64 %118
  %131 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %4, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store %"struct.x11::Rectangle"* %130, %"struct.x11::Rectangle"** %131, align 8
  %132 = bitcast %"struct.x11::Rectangle"** %127 to i64*
  %133 = ptrtoint i8* %125 to i64
  %134 = icmp sgt i64 %117, 0
  br i1 %134, label %135, label %140

135:                                              ; preds = %124
  %136 = lshr exact i64 %117, 3
  %137 = inttoptr i64 %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %125, i8* align 2 %137, i64 %117, i1 false) #17
  %138 = getelementptr inbounds %"struct.x11::Rectangle", %"struct.x11::Rectangle"* %126, i64 %136
  %139 = ptrtoint %"struct.x11::Rectangle"* %138 to i64
  br label %140

140:                                              ; preds = %135, %124
  %141 = phi i64 [ %139, %135 ], [ %133, %124 ]
  store i64 %141, i64* %132, align 8
  br label %142

142:                                              ; preds = %140, %94
  %143 = call %"class.x11::Connection::FutureImpl"* @_ZN3x115Shape10RectanglesERKNS0_17RectanglesRequestE(%"class.x11::Shape"* %100, %"struct.x11::Shape::RectanglesRequest"* nonnull dereferenceable(48) %4) #17
  %144 = icmp eq %"class.x11::Connection::FutureImpl"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %142
  %146 = bitcast %"class.x11::Connection::FutureImpl"* %143 to i8*
  call void @_ZdlPv(i8* %146) #18
  br label %147

147:                                              ; preds = %142, %145
  %148 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %4, i64 0, i32 6, i32 0, i32 0
  %149 = load %"struct.x11::Rectangle"*, %"struct.x11::Rectangle"** %148, align 8
  %150 = icmp eq %"struct.x11::Rectangle"* %149, null
  br i1 %150, label %156, label %151

151:                                              ; preds = %147
  %152 = ptrtoint %"struct.x11::Rectangle"* %149 to i64
  %153 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %4, i64 0, i32 6, i32 0, i32 1
  %154 = bitcast %"struct.x11::Rectangle"** %153 to i64*
  store i64 %152, i64* %154, align 8
  %155 = bitcast %"struct.x11::Rectangle"* %149 to i8*
  call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %147, %151
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %101) #17
  br label %248

157:                                              ; preds = %91
  %158 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 60
  %159 = load i8, i8* %158, align 1, !range !2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %181, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %163 = bitcast %"class.x11::Connection"** %162 to i8**
  %164 = load i8*, i8** %163, align 8
  %165 = getelementptr inbounds i8, i8* %164, i64 120
  %166 = bitcast i8* %165 to %"class.x11::Shape"**
  %167 = load %"class.x11::Shape"*, %"class.x11::Shape"** %166, align 8
  %168 = bitcast %"struct.x11::Shape::MaskRequest"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %168) #17
  %169 = getelementptr inbounds %"struct.x11::Shape::MaskRequest", %"struct.x11::Shape::MaskRequest"* %6, i64 0, i32 0
  store i32 0, i32* %169, align 4
  %170 = getelementptr inbounds %"struct.x11::Shape::MaskRequest", %"struct.x11::Shape::MaskRequest"* %6, i64 0, i32 1
  store i32 0, i32* %170, align 4
  %171 = getelementptr inbounds %"struct.x11::Shape::MaskRequest", %"struct.x11::Shape::MaskRequest"* %6, i64 0, i32 2
  %172 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %173 = load i32, i32* %172, align 8
  store i32 %173, i32* %171, align 4
  %174 = getelementptr inbounds %"struct.x11::Shape::MaskRequest", %"struct.x11::Shape::MaskRequest"* %6, i64 0, i32 3
  %175 = bitcast i16* %174 to i64*
  store i64 0, i64* %175, align 4
  %176 = call %"class.x11::Connection::FutureImpl"* @_ZN3x115Shape4MaskERKNS0_11MaskRequestE(%"class.x11::Shape"* %167, %"struct.x11::Shape::MaskRequest"* nonnull dereferenceable(20) %6) #17
  %177 = icmp eq %"class.x11::Connection::FutureImpl"* %176, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %161
  %179 = bitcast %"class.x11::Connection::FutureImpl"* %176 to i8*
  call void @_ZdlPv(i8* %179) #18
  br label %180

180:                                              ; preds = %161, %178
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %168) #17
  br label %248

181:                                              ; preds = %157
  %182 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 1, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = trunc i32 %183 to i16
  %185 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 1, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = trunc i32 %186 to i16
  %188 = tail call i8* @_Znwm(i64 8) #18
  %189 = bitcast i8* %188 to i16*
  store i16 0, i16* %189, align 2
  %190 = getelementptr inbounds i8, i8* %188, i64 2
  %191 = bitcast i8* %190 to i16*
  store i16 0, i16* %191, align 2
  %192 = getelementptr inbounds i8, i8* %188, i64 4
  %193 = bitcast i8* %192 to i16*
  store i16 %184, i16* %193, align 2
  %194 = getelementptr inbounds i8, i8* %188, i64 6
  %195 = bitcast i8* %194 to i16*
  store i16 %187, i16* %195, align 2
  %196 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %197 = bitcast %"class.x11::Connection"** %196 to i8**
  %198 = load i8*, i8** %197, align 8
  %199 = getelementptr inbounds i8, i8* %198, i64 120
  %200 = bitcast i8* %199 to %"class.x11::Shape"**
  %201 = load %"class.x11::Shape"*, %"class.x11::Shape"** %200, align 8
  %202 = bitcast %"struct.x11::Shape::RectanglesRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %202) #17
  %203 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %3, i64 0, i32 0
  store i32 0, i32* %203, align 8
  %204 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %3, i64 0, i32 1
  store i32 0, i32* %204, align 4
  %205 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %3, i64 0, i32 2
  store i32 3, i32* %205, align 8
  %206 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %3, i64 0, i32 3
  %207 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %208 = load i32, i32* %207, align 8
  store i32 %208, i32* %206, align 4
  %209 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %3, i64 0, i32 4
  store i16 0, i16* %209, align 8
  %210 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %3, i64 0, i32 5
  store i16 0, i16* %210, align 2
  %211 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %3, i64 0, i32 6
  %212 = tail call i8* @_Znwm(i64 8) #18
  %213 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %3, i64 0, i32 6, i32 0, i32 1
  %214 = bitcast %"class.std::__1::vector.396"* %211 to i8**
  store i8* %212, i8** %214, align 8
  %215 = getelementptr inbounds i8, i8* %212, i64 8
  %216 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %3, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %217 = bitcast %"struct.x11::Rectangle"** %216 to i8**
  store i8* %215, i8** %217, align 8
  %218 = bitcast %"struct.x11::Rectangle"** %213 to i64*
  %219 = bitcast i8* %188 to i64*
  %220 = bitcast i8* %212 to i64*
  %221 = load i64, i64* %219, align 2
  store i64 %221, i64* %220, align 2
  %222 = ptrtoint i8* %215 to i64
  store i64 %222, i64* %218, align 8
  %223 = call %"class.x11::Connection::FutureImpl"* @_ZN3x115Shape10RectanglesERKNS0_17RectanglesRequestE(%"class.x11::Shape"* %201, %"struct.x11::Shape::RectanglesRequest"* nonnull dereferenceable(48) %3) #17
  %224 = icmp eq %"class.x11::Connection::FutureImpl"* %223, null
  br i1 %224, label %227, label %225

225:                                              ; preds = %181
  %226 = bitcast %"class.x11::Connection::FutureImpl"* %223 to i8*
  call void @_ZdlPv(i8* %226) #18
  br label %227

227:                                              ; preds = %181, %225
  %228 = getelementptr inbounds %"struct.x11::Shape::RectanglesRequest", %"struct.x11::Shape::RectanglesRequest"* %3, i64 0, i32 6, i32 0, i32 0
  %229 = load %"struct.x11::Rectangle"*, %"struct.x11::Rectangle"** %228, align 8
  %230 = icmp eq %"struct.x11::Rectangle"* %229, null
  br i1 %230, label %234, label %231

231:                                              ; preds = %227
  %232 = ptrtoint %"struct.x11::Rectangle"* %229 to i64
  store i64 %232, i64* %218, align 8
  %233 = bitcast %"struct.x11::Rectangle"* %229 to i8*
  call void @_ZdlPv(i8* %233) #18
  br label %234

234:                                              ; preds = %227, %231
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %202) #17
  call void @_ZdlPv(i8* nonnull %188) #18
  br label %248

235:                                              ; preds = %70, %66
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %20) #17
  %236 = icmp eq %"class.std::__1::vector.396"* %1, null
  br i1 %236, label %248, label %237

237:                                              ; preds = %235
  %238 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %1, i64 0, i32 0, i32 0
  %239 = load %"struct.x11::Rectangle"*, %"struct.x11::Rectangle"** %238, align 8
  %240 = icmp eq %"struct.x11::Rectangle"* %239, null
  br i1 %240, label %246, label %241

241:                                              ; preds = %237
  %242 = ptrtoint %"struct.x11::Rectangle"* %239 to i64
  %243 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %1, i64 0, i32 0, i32 1
  %244 = bitcast %"struct.x11::Rectangle"** %243 to i64*
  store i64 %242, i64* %244, align 8
  %245 = bitcast %"struct.x11::Rectangle"* %239 to i8*
  call void @_ZdlPv(i8* %245) #18
  br label %246

246:                                              ; preds = %241, %237
  %247 = bitcast %"class.std::__1::vector.396"* %1 to i8*
  call void @_ZdlPv(i8* %247) #18
  br label %248

248:                                              ; preds = %180, %234, %156, %235, %246
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window18OnWorkspaceUpdatedEv(%"class.ui::X11Window"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 39
  %4 = bitcast %"class.absl::optional.388"* %3 to i64*
  %5 = load i64, i64* %4, align 4
  %6 = trunc i64 %5 to i8
  %7 = lshr i64 %5, 32
  %8 = trunc i64 %7 to i32
  %9 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #17
  store i32 -1431655766, i32* %2, align 4
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %11 = load i32, i32* %10, align 8
  %12 = call zeroext i1 @_ZN2ui16GetWindowDesktopEN3x116WindowEPi(i32 %11, i32* nonnull %2) #17
  br i1 %12, label %16, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.absl::optional.388", %"class.absl::optional.388"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 4
  %15 = icmp eq i8 %6, 0
  br i1 %15, label %34, label %26

16:                                               ; preds = %1
  %17 = load i32, i32* %2, align 4
  %18 = zext i32 %17 to i64
  %19 = shl nuw i64 %18, 32
  %20 = or i64 %19, 1
  store i64 %20, i64* %4, align 4
  %21 = icmp eq i8 %6, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 39, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, %8
  br i1 %25, label %34, label %26

26:                                               ; preds = %16, %13, %22
  %27 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 13
  %28 = load %"class.ui::WorkspaceExtensionDelegate"*, %"class.ui::WorkspaceExtensionDelegate"** %27, align 8
  %29 = icmp eq %"class.ui::WorkspaceExtensionDelegate"* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.ui::WorkspaceExtensionDelegate"* %28 to void (%"class.ui::WorkspaceExtensionDelegate"*)***
  %32 = load void (%"class.ui::WorkspaceExtensionDelegate"*)**, void (%"class.ui::WorkspaceExtensionDelegate"*)*** %31, align 8
  %33 = load void (%"class.ui::WorkspaceExtensionDelegate"*)*, void (%"class.ui::WorkspaceExtensionDelegate"*)** %32, align 8
  call void %33(%"class.ui::WorkspaceExtensionDelegate"* nonnull %28) #17
  br label %34

34:                                               ; preds = %13, %22, %30, %26
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #17
  ret void
}

declare zeroext i1 @_ZN2ui16GetWindowDesktopEN3x116WindowEPi(i32, i32*) local_unnamed_addr #1

declare zeroext i1 @_ZN2ui10GetWmHintsEN3x116WindowEPNS_7WmHintsE(i32, %"struct.ui::WmHints"*) local_unnamed_addr #1

declare void @_ZN2ui10SetWmHintsEN3x116WindowERKNS_7WmHintsE(i32, %"struct.ui::WmHints"* dereferenceable(36)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window15OnCrossingEventEbbN3x1110NotifyModeENS1_12NotifyDetailE(%"class.ui::X11Window"* nocapture, i1 zeroext, i1 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = zext i1 %1 to i8
  %7 = icmp eq i32 %4, 2
  br i1 %7, label %38, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 43
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %12, %8
  %17 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = xor i8 %18, 1
  br label %20

20:                                               ; preds = %12, %16
  %21 = phi i8 [ 0, %12 ], [ %19, %16 ]
  %22 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 46
  store i8 %21, i8* %22, align 2
  %23 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 42
  %24 = load i8, i8* %23, align 2, !range !2
  %25 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 47
  store i8 %24, i8* %25, align 1
  %26 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 41
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 48
  store i8 %27, i8* %28, align 4
  %29 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 49
  store i8 %10, i8* %29, align 1
  switch i32 %3, label %33 [
    i32 1, label %31
    i32 2, label %30
  ]

30:                                               ; preds = %20
  br label %31

31:                                               ; preds = %20, %30
  %32 = phi i8 [ 0, %30 ], [ %6, %20 ]
  store i8 %32, i8* %26, align 1
  br label %33

33:                                               ; preds = %31, %20
  store i8 %6, i8* %23, align 2
  %34 = and i1 %11, %2
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  store i8 %6, i8* %36, align 8
  br label %37

37:                                               ; preds = %33, %35
  tail call void @_ZN2ui9X11Window27AfterActivationStateChangedEv(%"class.ui::X11Window"* %0)
  br label %38

38:                                               ; preds = %5, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window12OnFocusEventEbN3x1110NotifyModeENS1_12NotifyDetailE(%"class.ui::X11Window"* nocapture, i1 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = zext i1 %1 to i8
  %6 = icmp eq i32 %3, 2
  br i1 %6, label %49, label %7

7:                                                ; preds = %4
  %8 = add i32 %2, -1
  %9 = icmp ult i32 %8, 2
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 43
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %13, %7
  %18 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = xor i8 %19, 1
  br label %21

21:                                               ; preds = %13, %17
  %22 = phi i8 [ 0, %13 ], [ %20, %17 ]
  %23 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 46
  store i8 %22, i8* %23, align 2
  %24 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 42
  %25 = load i8, i8* %24, align 2, !range !2
  %26 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 47
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 41
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 48
  store i8 %28, i8* %29, align 4
  %30 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 49
  store i8 %11, i8* %30, align 1
  %31 = xor i1 %9, true
  %32 = icmp ne i32 %3, 5
  %33 = and i1 %32, %31
  br i1 %33, label %34, label %35

34:                                               ; preds = %21
  store i8 %5, i8* %10, align 1
  br label %35

35:                                               ; preds = %21, %34
  %36 = icmp eq i8 %25, 0
  %37 = or i1 %9, %36
  br i1 %37, label %47, label %38

38:                                               ; preds = %35
  switch i32 %3, label %47 [
    i32 0, label %39
    i32 1, label %39
    i32 5, label %43
    i32 3, label %45
    i32 4, label %45
  ]

39:                                               ; preds = %38, %38
  %40 = xor i1 %1, true
  %41 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  %42 = zext i1 %40 to i8
  store i8 %42, i8* %41, align 8
  br label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  store i8 %5, i8* %44, align 8
  br label %47

45:                                               ; preds = %38, %38
  %46 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 44
  store i8 0, i8* %46, align 8
  br label %47

47:                                               ; preds = %39, %43, %45, %38, %35
  %48 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 45
  store i8 0, i8* %48, align 1
  tail call void @_ZN2ui9X11Window27AfterActivationStateChangedEv(%"class.ui::X11Window"* %0)
  br label %49

49:                                               ; preds = %4, %47
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui9X11Window18SetTransientWindowEN3x116WindowE(%"class.ui::X11Window"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 28
  store i32 %1, i32* %3, align 8
  ret void
}

declare i64 @_ZN2ui23EventLocationFromXEventERKN3x115EventE(%"class.x11::Event"* dereferenceable(32)) local_unnamed_addr #1

declare i64 @_ZN2ui29EventSystemLocationFromXEventERKN3x115EventE(%"class.x11::Event"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window19NotifyBoundsChangedERKN3gfx4RectE(%"class.ui::X11Window"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::PlatformWindowDelegate::BoundsChange", align 4
  tail call void @_ZN2ui9X11Window17ResetWindowRegionEv(%"class.ui::X11Window"* %0)
  %4 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %5 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %4, align 8
  %6 = bitcast %"struct.ui::PlatformWindowDelegate::BoundsChange"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #17
  call void @_ZN2ui22PlatformWindowDelegate12BoundsChangeC1ERKN3gfx4RectE(%"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull %3, %"class.gfx::Rect"* dereferenceable(16) %1) #17
  %7 = bitcast %"class.ui::PlatformWindowDelegate"* %5 to void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)***
  %8 = load void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)**, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)** %8, i64 2
  %10 = load void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)** %9, align 8
  call void %10(%"class.ui::PlatformWindowDelegate"* %5, %"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull dereferenceable(16) %3) #17
  call void @_ZN2ui22PlatformWindowDelegate12BoundsChangeD1Ev(%"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window16OnConfigureEventERKN3x1120ConfigureNotifyEventE(%"class.ui::X11Window"*, %"struct.x11::ConfigureNotifyEvent"* nocapture readonly dereferenceable(28)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::PlatformWindowDelegate::BoundsChange", align 4
  %4 = alloca %"class.x11::Future.718", align 8
  %5 = alloca %"struct.x11::TranslateCoordinatesRequest", align 4
  %6 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 62
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 63
  store i64 %7, i64* %10, align 8
  %11 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 65
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 66
  store i8 %12, i8* %13, align 1
  store i8 0, i8* %11, align 8
  store i64 0, i64* %6, align 8
  br label %14

14:                                               ; preds = %2, %9
  %15 = getelementptr inbounds %"struct.x11::ConfigureNotifyEvent", %"struct.x11::ConfigureNotifyEvent"* %1, i64 0, i32 6
  %16 = load i16, i16* %15, align 4
  %17 = sext i16 %16 to i32
  %18 = getelementptr inbounds %"struct.x11::ConfigureNotifyEvent", %"struct.x11::ConfigureNotifyEvent"* %1, i64 0, i32 7
  %19 = load i16, i16* %18, align 2
  %20 = sext i16 %19 to i32
  %21 = getelementptr inbounds %"struct.x11::ConfigureNotifyEvent", %"struct.x11::ConfigureNotifyEvent"* %1, i64 0, i32 0
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %73

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"struct.x11::ConfigureNotifyEvent", %"struct.x11::ConfigureNotifyEvent"* %1, i64 0, i32 11
  %26 = load i8, i8* %25, align 2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %73

28:                                               ; preds = %24
  %29 = bitcast %"class.x11::Future.718"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  %30 = getelementptr inbounds %"class.x11::Future.718", %"class.x11::Future.718"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %32 = bitcast %"class.x11::Connection"** %31 to %"class.x11::XProto"**
  %33 = load %"class.x11::XProto"*, %"class.x11::XProto"** %32, align 8
  %34 = bitcast %"struct.x11::TranslateCoordinatesRequest"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %34) #17
  %35 = getelementptr inbounds %"struct.x11::TranslateCoordinatesRequest", %"struct.x11::TranslateCoordinatesRequest"* %5, i64 0, i32 0
  %36 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %37 = load i32, i32* %36, align 8
  store i32 %37, i32* %35, align 4
  %38 = getelementptr inbounds %"struct.x11::TranslateCoordinatesRequest", %"struct.x11::TranslateCoordinatesRequest"* %5, i64 0, i32 1
  %39 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 27
  %40 = load i32, i32* %39, align 4
  store i32 %40, i32* %38, align 4
  %41 = getelementptr inbounds %"struct.x11::TranslateCoordinatesRequest", %"struct.x11::TranslateCoordinatesRequest"* %5, i64 0, i32 2
  store i16 0, i16* %41, align 4
  %42 = getelementptr inbounds %"struct.x11::TranslateCoordinatesRequest", %"struct.x11::TranslateCoordinatesRequest"* %5, i64 0, i32 3
  store i16 0, i16* %42, align 2
  %43 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto20TranslateCoordinatesERKNS_27TranslateCoordinatesRequestE(%"class.x11::XProto"* %33, %"struct.x11::TranslateCoordinatesRequest"* nonnull dereferenceable(12) %5) #17
  store %"class.x11::Connection::FutureImpl"* %43, %"class.x11::Connection::FutureImpl"** %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %34) #17
  %44 = call { %"struct.x11::TranslateCoordinatesReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_25TranslateCoordinatesReplyEE4SyncEv(%"class.x11::Future.718"* nonnull %4)
  %45 = extractvalue { %"struct.x11::TranslateCoordinatesReply"*, %"class.x11::Error"* } %44, 0
  %46 = extractvalue { %"struct.x11::TranslateCoordinatesReply"*, %"class.x11::Error"* } %44, 1
  %47 = icmp eq %"struct.x11::TranslateCoordinatesReply"* %45, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %28
  %49 = getelementptr inbounds %"struct.x11::TranslateCoordinatesReply", %"struct.x11::TranslateCoordinatesReply"* %45, i64 0, i32 3
  %50 = load i16, i16* %49, align 4
  %51 = sext i16 %50 to i32
  %52 = getelementptr inbounds %"struct.x11::TranslateCoordinatesReply", %"struct.x11::TranslateCoordinatesReply"* %45, i64 0, i32 4
  %53 = load i16, i16* %52, align 2
  %54 = sext i16 %53 to i32
  br label %55

55:                                               ; preds = %28, %48
  %56 = phi i32 [ %54, %48 ], [ %20, %28 ]
  %57 = phi i32 [ %51, %48 ], [ %17, %28 ]
  %58 = icmp eq %"class.x11::Error"* %46, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.x11::Error"* %46 to void (%"class.x11::Error"*)***
  %61 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %61, i64 1
  %63 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %62, align 8
  call void %63(%"class.x11::Error"* nonnull %46) #17
  br label %64

64:                                               ; preds = %59, %55
  br i1 %47, label %67, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"struct.x11::TranslateCoordinatesReply", %"struct.x11::TranslateCoordinatesReply"* %45, i64 0, i32 0
  call void @_ZdlPv(i8* %66) #18
  br label %67

67:                                               ; preds = %64, %65
  %68 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %30, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %30, align 8
  %69 = icmp eq %"class.x11::Connection::FutureImpl"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = bitcast %"class.x11::Connection::FutureImpl"* %68 to i8*
  call void @_ZdlPv(i8* %71) #18
  br label %72

72:                                               ; preds = %67, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  br label %73

73:                                               ; preds = %24, %14, %72
  %74 = phi i32 [ %20, %14 ], [ %20, %24 ], [ %56, %72 ]
  %75 = phi i32 [ %17, %14 ], [ %17, %24 ], [ %57, %72 ]
  %76 = getelementptr inbounds %"struct.x11::ConfigureNotifyEvent", %"struct.x11::ConfigureNotifyEvent"* %1, i64 0, i32 8
  %77 = load i16, i16* %76, align 4
  %78 = zext i16 %77 to i32
  %79 = getelementptr inbounds %"struct.x11::ConfigureNotifyEvent", %"struct.x11::ConfigureNotifyEvent"* %1, i64 0, i32 9
  %80 = load i16, i16* %79, align 2
  %81 = zext i16 %80 to i32
  %82 = icmp sgt i32 %75, 0
  %83 = icmp ne i16 %77, 0
  %84 = and i1 %82, %83
  %85 = sub nuw nsw i32 2147483647, %75
  %86 = icmp ult i32 %85, %78
  %87 = and i1 %86, %84
  %88 = select i1 %87, i32 %85, i32 %78
  %89 = icmp sgt i32 %74, 0
  %90 = icmp ne i16 %80, 0
  %91 = and i1 %89, %90
  %92 = sub nuw nsw i32 2147483647, %74
  %93 = icmp ult i32 %92, %81
  %94 = and i1 %93, %91
  %95 = select i1 %94, i32 %92, i32 %81
  %96 = icmp sgt i32 %88, 0
  %97 = select i1 %96, i32 %88, i32 0
  %98 = icmp sgt i32 %95, 0
  %99 = select i1 %98, i32 %95, i32 0
  %100 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36
  %101 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 1, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, %97
  br i1 %103, label %104, label %108

104:                                              ; preds = %73
  %105 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 1, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = icmp ne i32 %106, %99
  br label %108

108:                                              ; preds = %73, %104
  %109 = phi i1 [ true, %73 ], [ %107, %104 ]
  %110 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %100, i64 0, i32 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, %75
  br i1 %112, label %113, label %117

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = icmp ne i32 %115, %74
  br label %117

117:                                              ; preds = %108, %113
  %118 = phi i1 [ true, %108 ], [ %116, %113 ]
  %119 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 53
  %120 = bitcast %"class.gfx::Rect"* %119 to i8*
  %121 = bitcast %"class.gfx::Rect"* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 4 %121, i64 16, i1 false)
  %122 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 0, i32 0
  store i32 %75, i32* %122, align 4
  %123 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 0, i32 1
  store i32 %74, i32* %123, align 4
  store i32 %97, i32* %101, align 4
  %124 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36, i32 1, i32 1
  store i32 %99, i32* %124, align 4
  br i1 %109, label %125, label %126

125:                                              ; preds = %117
  call void @_ZN2ui9X11Window14DispatchResizeEv(%"class.ui::X11Window"* %0)
  br label %135

126:                                              ; preds = %117
  br i1 %118, label %127, label %135

127:                                              ; preds = %126
  call void @_ZN2ui9X11Window17ResetWindowRegionEv(%"class.ui::X11Window"* %0) #17
  %128 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %129 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %128, align 8
  %130 = bitcast %"struct.ui::PlatformWindowDelegate::BoundsChange"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %130) #17
  call void @_ZN2ui22PlatformWindowDelegate12BoundsChangeC1ERKN3gfx4RectE(%"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull %3, %"class.gfx::Rect"* dereferenceable(16) %100) #17
  %131 = bitcast %"class.ui::PlatformWindowDelegate"* %129 to void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)***
  %132 = load void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)**, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)** %132, i64 2
  %134 = load void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)** %133, align 8
  call void %134(%"class.ui::PlatformWindowDelegate"* %129, %"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull dereferenceable(16) %3) #17
  call void @_ZN2ui22PlatformWindowDelegate12BoundsChangeD1Ev(%"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %130) #17
  br label %135

135:                                              ; preds = %126, %127, %125
  ret void
}

declare zeroext i1 @_ZN2ui12TouchFactory26ShouldProcessCrossingEventERKN3x115Input13CrossingEventE(%"class.ui::TouchFactory"*, %"struct.x11::Input::CrossingEvent"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window14OnWindowMappedEv(%"class.ui::X11Window"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 35
  store i8 1, i8* %2, align 1
  %3 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 54
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::X11Window"* %0 to void (%"class.ui::X11Window"*)***
  %8 = load void (%"class.ui::X11Window"*)**, void (%"class.ui::X11Window"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::X11Window"*)*, void (%"class.ui::X11Window"*)** %8, i64 15
  %10 = load void (%"class.ui::X11Window"*)*, void (%"class.ui::X11Window"*)** %9, align 8
  tail call void %10(%"class.ui::X11Window"* %0) #17
  store i8 0, i8* %3, align 8
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window16OnWMStateUpdatedEv(%"class.ui::X11Window"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.base::internal::flat_tree<x11::Atom, base::identity, std::__1::less<void>, std::__1::vector<x11::Atom, std::__1::allocator<x11::Atom> > >::value_compare", align 1
  %3 = alloca %"class.std::__1::vector.72", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::internal::flat_tree.378", align 8
  %6 = bitcast %"class.std::__1::vector.72"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #17
  %9 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %10 = load i32, i32* %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #17
  %12 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  store i8 13, i8* %13, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i64 0, i64 0), i64 13, i1 false) #17
  %14 = getelementptr inbounds i8, i8* %11, i64 13
  store i8 0, i8* %14, align 1
  %15 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #17
  %16 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  %17 = call zeroext i1 @_ZN3x1116GetArrayPropertyINS_4AtomEEEbNS_6WindowES1_PNSt3__16vectorIT_NS3_9allocatorIS5_EEEEPS1_mPNS_10ConnectionE(i32 %10, i32 %15, %"class.std::__1::vector.72"* nonnull %3, i32* null, i64 0, %"class.x11::Connection"* %16)
  br i1 %17, label %28, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 34
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = load i8, i8* %13, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #18
  br label %27

27:                                               ; preds = %18, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #17
  br i1 %21, label %308, label %35

28:                                               ; preds = %1
  %29 = load i8, i8* %13, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #18
  br label %34

34:                                               ; preds = %28, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #17
  br label %35

35:                                               ; preds = %27, %34
  %36 = bitcast %"class.base::internal::flat_tree.378"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #17
  %37 = load i32*, i32** %7, align 8
  %38 = bitcast i32* %37 to i8*
  %39 = ptrtoint i32* %37 to i64
  %40 = load i32*, i32** %8, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 24, i1 false) #17
  %41 = ptrtoint i32* %40 to i64
  %42 = sub i64 %41, %39
  %43 = ashr exact i64 %42, 2
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %224, label %45

45:                                               ; preds = %35
  %46 = icmp ugt i64 %43, 4611686018427387903
  br i1 %46, label %47, label %49

47:                                               ; preds = %45
  %48 = bitcast %"class.base::internal::flat_tree.378"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %48) #19
  unreachable

49:                                               ; preds = %45
  %50 = call i8* @_Znwm(i64 %42) #18
  %51 = bitcast i8* %50 to i32*
  %52 = getelementptr inbounds %"class.base::internal::flat_tree.378", %"class.base::internal::flat_tree.378"* %5, i64 0, i32 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i8**
  store i8* %50, i8** %53, align 8
  %54 = bitcast %"class.base::internal::flat_tree.378"* %5 to i8**
  store i8* %50, i8** %54, align 8
  %55 = getelementptr inbounds i32, i32* %51, i64 %43
  %56 = getelementptr inbounds %"class.base::internal::flat_tree.378", %"class.base::internal::flat_tree.378"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %55, i32** %56, align 8
  %57 = bitcast i32** %52 to i64*
  %58 = ptrtoint i8* %50 to i64
  %59 = icmp eq i32* %37, %40
  br i1 %59, label %220, label %60

60:                                               ; preds = %49
  %61 = getelementptr i32, i32* %40, i64 -1
  %62 = ptrtoint i32* %61 to i64
  %63 = sub i64 %62, %39
  %64 = lshr i64 %63, 2
  %65 = add nuw nsw i64 %64, 1
  %66 = icmp ult i64 %65, 8
  br i1 %66, label %162, label %67

67:                                               ; preds = %60
  %68 = getelementptr i32, i32* %40, i64 -1
  %69 = ptrtoint i32* %68 to i64
  %70 = sub i64 %69, %39
  %71 = lshr i64 %70, 2
  %72 = add i64 %70, 4
  %73 = and i64 %72, -4
  %74 = getelementptr i8, i8* %50, i64 %73
  %75 = add nuw nsw i64 %71, 1
  %76 = getelementptr i32, i32* %37, i64 %75
  %77 = bitcast i32* %76 to i8*
  %78 = icmp ult i8* %50, %77
  %79 = icmp ugt i8* %74, %38
  %80 = and i1 %78, %79
  br i1 %80, label %162, label %81

81:                                               ; preds = %67
  %82 = and i64 %65, 9223372036854775800
  %83 = getelementptr i32, i32* %51, i64 %82
  %84 = getelementptr i32, i32* %37, i64 %82
  %85 = add nsw i64 %82, -8
  %86 = lshr exact i64 %85, 3
  %87 = add nuw nsw i64 %86, 1
  %88 = and i64 %87, 3
  %89 = icmp ult i64 %85, 24
  br i1 %89, label %141, label %90

90:                                               ; preds = %81
  %91 = sub nsw i64 %87, %88
  br label %92

92:                                               ; preds = %92, %90
  %93 = phi i64 [ 0, %90 ], [ %138, %92 ]
  %94 = phi i64 [ %91, %90 ], [ %139, %92 ]
  %95 = getelementptr i32, i32* %51, i64 %93
  %96 = getelementptr i32, i32* %37, i64 %93
  %97 = bitcast i32* %96 to <4 x i32>*
  %98 = load <4 x i32>, <4 x i32>* %97, align 4, !alias.scope !82
  %99 = getelementptr i32, i32* %96, i64 4
  %100 = bitcast i32* %99 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 4, !alias.scope !82
  %102 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> %98, <4 x i32>* %102, align 4, !alias.scope !85, !noalias !82
  %103 = getelementptr i32, i32* %95, i64 4
  %104 = bitcast i32* %103 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %104, align 4, !alias.scope !85, !noalias !82
  %105 = or i64 %93, 8
  %106 = getelementptr i32, i32* %51, i64 %105
  %107 = getelementptr i32, i32* %37, i64 %105
  %108 = bitcast i32* %107 to <4 x i32>*
  %109 = load <4 x i32>, <4 x i32>* %108, align 4, !alias.scope !82
  %110 = getelementptr i32, i32* %107, i64 4
  %111 = bitcast i32* %110 to <4 x i32>*
  %112 = load <4 x i32>, <4 x i32>* %111, align 4, !alias.scope !82
  %113 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %109, <4 x i32>* %113, align 4, !alias.scope !85, !noalias !82
  %114 = getelementptr i32, i32* %106, i64 4
  %115 = bitcast i32* %114 to <4 x i32>*
  store <4 x i32> %112, <4 x i32>* %115, align 4, !alias.scope !85, !noalias !82
  %116 = or i64 %93, 16
  %117 = getelementptr i32, i32* %51, i64 %116
  %118 = getelementptr i32, i32* %37, i64 %116
  %119 = bitcast i32* %118 to <4 x i32>*
  %120 = load <4 x i32>, <4 x i32>* %119, align 4, !alias.scope !82
  %121 = getelementptr i32, i32* %118, i64 4
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !82
  %124 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %120, <4 x i32>* %124, align 4, !alias.scope !85, !noalias !82
  %125 = getelementptr i32, i32* %117, i64 4
  %126 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %126, align 4, !alias.scope !85, !noalias !82
  %127 = or i64 %93, 24
  %128 = getelementptr i32, i32* %51, i64 %127
  %129 = getelementptr i32, i32* %37, i64 %127
  %130 = bitcast i32* %129 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4, !alias.scope !82
  %132 = getelementptr i32, i32* %129, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !82
  %135 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %131, <4 x i32>* %135, align 4, !alias.scope !85, !noalias !82
  %136 = getelementptr i32, i32* %128, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %137, align 4, !alias.scope !85, !noalias !82
  %138 = add i64 %93, 32
  %139 = add i64 %94, -4
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %92, !llvm.loop !87

141:                                              ; preds = %92, %81
  %142 = phi i64 [ 0, %81 ], [ %138, %92 ]
  %143 = icmp eq i64 %88, 0
  br i1 %143, label %160, label %144

144:                                              ; preds = %141, %144
  %145 = phi i64 [ %157, %144 ], [ %142, %141 ]
  %146 = phi i64 [ %158, %144 ], [ %88, %141 ]
  %147 = getelementptr i32, i32* %51, i64 %145
  %148 = getelementptr i32, i32* %37, i64 %145
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4, !alias.scope !82
  %151 = getelementptr i32, i32* %148, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !82
  %154 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %150, <4 x i32>* %154, align 4, !alias.scope !85, !noalias !82
  %155 = getelementptr i32, i32* %147, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %156, align 4, !alias.scope !85, !noalias !82
  %157 = add i64 %145, 8
  %158 = add i64 %146, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %144, !llvm.loop !88

160:                                              ; preds = %144, %141
  %161 = icmp eq i64 %65, %82
  br i1 %161, label %215, label %162

162:                                              ; preds = %160, %67, %60
  %163 = phi i32* [ %51, %67 ], [ %51, %60 ], [ %83, %160 ]
  %164 = phi i32* [ %37, %67 ], [ %37, %60 ], [ %84, %160 ]
  %165 = ptrtoint i32* %164 to i64
  %166 = getelementptr i32, i32* %40, i64 -1
  %167 = ptrtoint i32* %166 to i64
  %168 = sub i64 %167, %165
  %169 = lshr i64 %168, 2
  %170 = add nuw nsw i64 %169, 1
  %171 = and i64 %170, 7
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %182, label %173

173:                                              ; preds = %162, %173
  %174 = phi i32* [ %179, %173 ], [ %163, %162 ]
  %175 = phi i32* [ %178, %173 ], [ %164, %162 ]
  %176 = phi i64 [ %180, %173 ], [ %171, %162 ]
  %177 = load i32, i32* %175, align 4
  store i32 %177, i32* %174, align 4
  %178 = getelementptr inbounds i32, i32* %175, i64 1
  %179 = getelementptr inbounds i32, i32* %174, i64 1
  %180 = add i64 %176, -1
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %173, !llvm.loop !89

182:                                              ; preds = %173, %162
  %183 = phi i32* [ undef, %162 ], [ %179, %173 ]
  %184 = phi i32* [ %163, %162 ], [ %179, %173 ]
  %185 = phi i32* [ %164, %162 ], [ %178, %173 ]
  %186 = icmp ult i64 %168, 28
  br i1 %186, label %215, label %187

187:                                              ; preds = %182, %187
  %188 = phi i32* [ %213, %187 ], [ %184, %182 ]
  %189 = phi i32* [ %212, %187 ], [ %185, %182 ]
  %190 = load i32, i32* %189, align 4
  store i32 %190, i32* %188, align 4
  %191 = getelementptr inbounds i32, i32* %189, i64 1
  %192 = getelementptr inbounds i32, i32* %188, i64 1
  %193 = load i32, i32* %191, align 4
  store i32 %193, i32* %192, align 4
  %194 = getelementptr inbounds i32, i32* %189, i64 2
  %195 = getelementptr inbounds i32, i32* %188, i64 2
  %196 = load i32, i32* %194, align 4
  store i32 %196, i32* %195, align 4
  %197 = getelementptr inbounds i32, i32* %189, i64 3
  %198 = getelementptr inbounds i32, i32* %188, i64 3
  %199 = load i32, i32* %197, align 4
  store i32 %199, i32* %198, align 4
  %200 = getelementptr inbounds i32, i32* %189, i64 4
  %201 = getelementptr inbounds i32, i32* %188, i64 4
  %202 = load i32, i32* %200, align 4
  store i32 %202, i32* %201, align 4
  %203 = getelementptr inbounds i32, i32* %189, i64 5
  %204 = getelementptr inbounds i32, i32* %188, i64 5
  %205 = load i32, i32* %203, align 4
  store i32 %205, i32* %204, align 4
  %206 = getelementptr inbounds i32, i32* %189, i64 6
  %207 = getelementptr inbounds i32, i32* %188, i64 6
  %208 = load i32, i32* %206, align 4
  store i32 %208, i32* %207, align 4
  %209 = getelementptr inbounds i32, i32* %189, i64 7
  %210 = getelementptr inbounds i32, i32* %188, i64 7
  %211 = load i32, i32* %209, align 4
  store i32 %211, i32* %210, align 4
  %212 = getelementptr inbounds i32, i32* %189, i64 8
  %213 = getelementptr inbounds i32, i32* %188, i64 8
  %214 = icmp eq i32* %212, %40
  br i1 %214, label %215, label %187, !llvm.loop !90

215:                                              ; preds = %182, %187, %160
  %216 = phi i32* [ %83, %160 ], [ %183, %182 ], [ %213, %187 ]
  %217 = ptrtoint i32* %216 to i64
  %218 = getelementptr inbounds %"class.base::internal::flat_tree.378", %"class.base::internal::flat_tree.378"* %5, i64 0, i32 0, i32 0, i32 0
  %219 = load i32*, i32** %218, align 8
  br label %220

220:                                              ; preds = %215, %49
  %221 = phi i32* [ %51, %49 ], [ %219, %215 ]
  %222 = phi i64 [ %58, %49 ], [ %217, %215 ]
  store i64 %222, i64* %57, align 8
  %223 = inttoptr i64 %222 to i32*
  br label %224

224:                                              ; preds = %35, %220
  %225 = phi i32* [ null, %35 ], [ %223, %220 ]
  %226 = phi i32* [ null, %35 ], [ %221, %220 ]
  %227 = getelementptr inbounds %"class.base::internal::flat_tree.378", %"class.base::internal::flat_tree.378"* %5, i64 0, i32 0, i32 0, i32 0
  %228 = getelementptr inbounds %"class.base::internal::flat_tree.378", %"class.base::internal::flat_tree.378"* %5, i64 0, i32 0, i32 0, i32 1
  %229 = ptrtoint i32* %225 to i64
  %230 = getelementptr inbounds %"struct.base::internal::flat_tree<x11::Atom, base::identity, std::__1::less<void>, std::__1::vector<x11::Atom, std::__1::allocator<x11::Atom> > >::value_compare", %"struct.base::internal::flat_tree<x11::Atom, base::identity, std::__1::less<void>, std::__1::vector<x11::Atom, std::__1::allocator<x11::Atom> > >::value_compare"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %230)
  %231 = ptrtoint i32* %226 to i64
  %232 = sub i64 %229, %231
  %233 = ashr exact i64 %232, 2
  %234 = icmp sgt i64 %232, 512
  br i1 %234, label %235, label %246

235:                                              ; preds = %224
  %236 = icmp slt i64 %233, 2305843009213693951
  %237 = select i1 %236, i64 %233, i64 2305843009213693951
  br label %238

238:                                              ; preds = %243, %235
  %239 = phi i64 [ %244, %243 ], [ %237, %235 ]
  %240 = shl i64 %239, 2
  %241 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %240, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #17
  %242 = icmp eq i8* %241, null
  br i1 %242, label %243, label %247

243:                                              ; preds = %238
  %244 = lshr i64 %239, 1
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %246, label %238

246:                                              ; preds = %243, %224
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3x114AtomENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32* %226, i32* %225, %"struct.base::internal::flat_tree<x11::Atom, base::identity, std::__1::less<void>, std::__1::vector<x11::Atom, std::__1::allocator<x11::Atom> > >::value_compare"* nonnull dereferenceable(1) %2, i64 %233, i32* null, i64 0) #17
  br label %249

247:                                              ; preds = %238
  %248 = bitcast i8* %241 to i32*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3x114AtomENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32* %226, i32* %225, %"struct.base::internal::flat_tree<x11::Atom, base::identity, std::__1::less<void>, std::__1::vector<x11::Atom, std::__1::allocator<x11::Atom> > >::value_compare"* nonnull dereferenceable(1) %2, i64 %233, i32* nonnull %248, i64 %239) #17
  call void @_ZdlPv(i8* nonnull %241) #18
  br label %249

249:                                              ; preds = %246, %247
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %230)
  %250 = icmp eq i32* %226, %225
  br i1 %250, label %300, label %251

251:                                              ; preds = %249, %255
  %252 = phi i32* [ %253, %255 ], [ %226, %249 ]
  %253 = getelementptr inbounds i32, i32* %252, i64 1
  %254 = icmp eq i32* %253, %225
  br i1 %254, label %300, label %255

255:                                              ; preds = %251
  %256 = load i32, i32* %252, align 4
  %257 = load i32, i32* %253, align 4
  %258 = icmp ult i32 %256, %257
  br i1 %258, label %251, label %259

259:                                              ; preds = %255
  %260 = icmp eq i32* %252, %225
  br i1 %260, label %300, label %261

261:                                              ; preds = %259
  %262 = getelementptr inbounds i32, i32* %252, i64 2
  %263 = icmp eq i32* %262, %225
  br i1 %263, label %285, label %264

264:                                              ; preds = %261
  %265 = ptrtoint i32* %252 to i64
  br label %266

266:                                              ; preds = %281, %264
  %267 = phi i32 [ %282, %281 ], [ %256, %264 ]
  %268 = phi i32* [ %280, %281 ], [ %252, %264 ]
  %269 = phi i32* [ %278, %281 ], [ %262, %264 ]
  %270 = phi i64 [ %277, %281 ], [ %265, %264 ]
  %271 = load i32, i32* %269, align 4
  %272 = icmp ult i32 %267, %271
  br i1 %272, label %273, label %276

273:                                              ; preds = %266
  %274 = getelementptr inbounds i32, i32* %268, i64 1
  %275 = ptrtoint i32* %274 to i64
  store i32 %271, i32* %274, align 4
  br label %276

276:                                              ; preds = %273, %266
  %277 = phi i64 [ %270, %266 ], [ %275, %273 ]
  %278 = getelementptr inbounds i32, i32* %269, i64 1
  %279 = icmp eq i32* %278, %225
  %280 = inttoptr i64 %277 to i32*
  br i1 %279, label %283, label %281

281:                                              ; preds = %276
  %282 = load i32, i32* %280, align 4
  br label %266

283:                                              ; preds = %276
  %284 = inttoptr i64 %277 to i32*
  br label %285

285:                                              ; preds = %283, %261
  %286 = phi i32* [ %252, %261 ], [ %284, %283 ]
  %287 = getelementptr inbounds i32, i32* %286, i64 1
  %288 = icmp eq i32* %287, %225
  br i1 %288, label %300, label %289

289:                                              ; preds = %285
  %290 = bitcast i32** %228 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = sub i64 %291, %229
  %293 = ashr exact i64 %292, 2
  %294 = icmp eq i64 %292, 0
  br i1 %294, label %298, label %295

295:                                              ; preds = %289
  %296 = bitcast i32* %287 to i8*
  %297 = bitcast i32* %225 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %296, i8* align 4 %297, i64 %292, i1 false) #17
  br label %298

298:                                              ; preds = %295, %289
  %299 = getelementptr inbounds i32, i32* %287, i64 %293
  store i32* %299, i32** %228, align 8
  br label %300

300:                                              ; preds = %251, %249, %259, %285, %298
  call void @_ZN2ui9X11Window22UpdateWindowPropertiesERKN4base8internal9flat_treeIN3x114AtomENS1_8identityENSt3__14lessIvEENS7_6vectorIS5_NS7_9allocatorIS5_EEEEEE(%"class.ui::X11Window"* %0, %"class.base::internal::flat_tree.378"* nonnull dereferenceable(24) %5)
  %301 = load i32*, i32** %227, align 8
  %302 = icmp eq i32* %301, null
  br i1 %302, label %307, label %303

303:                                              ; preds = %300
  %304 = ptrtoint i32* %301 to i64
  %305 = bitcast i32** %228 to i64*
  store i64 %304, i64* %305, align 8
  %306 = bitcast i32* %301 to i8*
  call void @_ZdlPv(i8* %306) #18
  br label %307

307:                                              ; preds = %300, %303
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #17
  br label %308

308:                                              ; preds = %27, %307
  %309 = load i32*, i32** %7, align 8
  %310 = icmp eq i32* %309, null
  br i1 %310, label %315, label %311

311:                                              ; preds = %308
  %312 = ptrtoint i32* %309 to i64
  %313 = bitcast i32** %8 to i64*
  store i64 %312, i64* %313, align 8
  %314 = bitcast i32* %309 to i8*
  call void @_ZdlPv(i8* %314) #18
  br label %315

315:                                              ; preds = %308, %311
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window21OnFrameExtentsUpdatedEv(%"class.ui::X11Window"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.727", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::vector.727"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %2, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %2, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #17
  %7 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 26
  %8 = load i32, i32* %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #17
  %10 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  store i8 18, i8* %11, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i64 0, i64 0), i64 18, i1 false) #17
  %12 = getelementptr inbounds i8, i8* %9, i64 18
  store i8 0, i8* %12, align 2
  %13 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #17
  %14 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #17
  %15 = call zeroext i1 @_ZN3x1116GetArrayPropertyIiEEbNS_6WindowENS_4AtomEPNSt3__16vectorIT_NS3_9allocatorIS5_EEEEPS2_mPNS_10ConnectionE(i32 %8, i32 %13, %"class.std::__1::vector.727"* nonnull %2, i32* null, i64 0, %"class.x11::Connection"* %14)
  br i1 %15, label %16, label %72

16:                                               ; preds = %1
  %17 = bitcast i32** %6 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.727"* %2 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = icmp eq i64 %21, 16
  %23 = load i8, i8* %11, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #18
  br label %28

28:                                               ; preds = %16, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #17
  br i1 %22, label %29, label %79

29:                                               ; preds = %28
  %30 = load i32*, i32** %5, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 2
  %32 = load i32, i32* %31, align 4
  %33 = load i32, i32* %30, align 4
  %34 = getelementptr inbounds i32, i32* %30, i64 3
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds i32, i32* %30, i64 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %32, 0
  %39 = icmp sgt i32 %35, 0
  %40 = and i1 %38, %39
  %41 = sub nuw nsw i32 2147483647, %32
  %42 = icmp ult i32 %41, %35
  %43 = and i1 %42, %40
  br i1 %43, label %51, label %44

44:                                               ; preds = %29
  %45 = and i32 %35, %32
  %46 = icmp slt i32 %45, 0
  %47 = sub nsw i32 -2147483648, %32
  %48 = icmp sgt i32 %47, %35
  %49 = and i1 %48, %46
  %50 = select i1 %49, i32 %47, i32 %35
  br label %51

51:                                               ; preds = %44, %29
  %52 = phi i32 [ %50, %44 ], [ %41, %29 ]
  %53 = icmp sgt i32 %33, 0
  %54 = icmp sgt i32 %37, 0
  %55 = and i1 %53, %54
  %56 = sub nuw nsw i32 2147483647, %33
  %57 = icmp ult i32 %56, %37
  %58 = and i1 %57, %55
  br i1 %58, label %66, label %59

59:                                               ; preds = %51
  %60 = and i32 %37, %33
  %61 = icmp slt i32 %60, 0
  %62 = sub nsw i32 -2147483648, %33
  %63 = icmp sgt i32 %62, %37
  %64 = and i1 %63, %61
  %65 = select i1 %64, i32 %62, i32 %37
  br label %66

66:                                               ; preds = %51, %59
  %67 = phi i32 [ %65, %59 ], [ %56, %51 ]
  %68 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 61, i32 0
  store i32 %32, i32* %68, align 4
  %69 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 61, i32 1
  store i32 %33, i32* %69, align 4
  %70 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 61, i32 2
  store i32 %52, i32* %70, align 4
  %71 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 61, i32 3
  store i32 %67, i32* %71, align 4
  br label %83

72:                                               ; preds = %1
  %73 = load i8, i8* %11, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #18
  br label %78

78:                                               ; preds = %72, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #17
  br label %79

79:                                               ; preds = %78, %28
  %80 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 61
  %81 = bitcast %"class.gfx::Insets"* %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %81, i8 0, i64 16, i1 false)
  %82 = load i32*, i32** %5, align 8
  br label %83

83:                                               ; preds = %79, %66
  %84 = phi i32* [ %82, %79 ], [ %30, %66 ]
  %85 = icmp eq i32* %84, null
  br i1 %85, label %90, label %86

86:                                               ; preds = %83
  %87 = ptrtoint i32* %84 to i64
  %88 = bitcast i32** %6 to i64*
  store i64 %87, i64* %88, align 8
  %89 = bitcast i32* %84 to i8*
  call void @_ZdlPv(i8* %89) #18
  br label %90

90:                                               ; preds = %83, %86
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #17
  ret void
}

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto20TranslateCoordinatesERKNS_27TranslateCoordinatesRequestE(%"class.x11::XProto"*, %"struct.x11::TranslateCoordinatesRequest"* dereferenceable(12)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::TranslateCoordinatesReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_25TranslateCoordinatesReplyEE4SyncEv(%"class.x11::Future.718"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.scoped_refptr.342, align 8
  %3 = alloca %"class.std::__1::unique_ptr.344", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future.718", %"class.x11::Future.718"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.342* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = getelementptr inbounds %class.scoped_refptr.342, %class.scoped_refptr.342* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.344"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.344"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.344"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.342* nonnull %2, %"class.std::__1::unique_ptr.344"* nonnull %3) #17
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #17
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #17
  %23 = call %"struct.x11::TranslateCoordinatesReply"* @_ZN3x116detail9ReadReplyINS_25TranslateCoordinatesReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #17
  %24 = ptrtoint %"struct.x11::TranslateCoordinatesReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #17
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.343"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.343"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #17
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::TranslateCoordinatesReply"*
  %47 = insertvalue { %"struct.x11::TranslateCoordinatesReply"*, %"class.x11::Error"* } undef, %"struct.x11::TranslateCoordinatesReply"* %46, 0
  %48 = insertvalue { %"struct.x11::TranslateCoordinatesReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::TranslateCoordinatesReply"*, %"class.x11::Error"* } %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window14DispatchResizeEv(%"class.ui::X11Window"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.30", align 8
  %3 = alloca %"class.base::OnceCallback.30", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback.30", align 8
  %6 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 51
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 63
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %49

13:                                               ; preds = %9, %1
  %14 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 67
  %15 = ptrtoint %"class.ui::X11Window"* %0 to i64
  %16 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36
  %17 = tail call i8* @_Znwm(i64 72) #18, !noalias !91
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN2ui9X11WindowEFvRKN3gfx4RectEEJNS0_17UnretainedWrapperIS4_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN2ui9X11WindowEFvRKN3gfx4RectEEJNS0_17UnretainedWrapperIS3_EES5_EE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !91
  %19 = getelementptr inbounds i8, i8* %17, i64 32
  %20 = bitcast i8* %19 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)* @_ZN2ui9X11Window13DelayedResizeERKN3gfx4RectE to i64), i64 0>, <2 x i64>* %20, align 8, !noalias !91
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = bitcast i8* %21 to i64*
  store i64 %15, i64* %22, align 8, !noalias !91
  %23 = getelementptr inbounds i8, i8* %17, i64 56
  %24 = bitcast %"class.gfx::Rect"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %24, i64 16, i1 false) #17, !noalias !91
  %25 = bitcast %"class.base::OnceCallback.30"* %3 to i8**
  store i8* %17, i8** %25, align 8, !alias.scope !91
  %26 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 67, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %26) #17
  %27 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %14, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %27) #17
  %28 = getelementptr inbounds %"class.base::OnceCallback.30", %"class.base::OnceCallback.30"* %3, i64 0, i32 0
  %29 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %27, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %28) #17
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #17
  %30 = call dereferenceable(8) %class.scoped_refptr.735* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #17
  %31 = bitcast %class.scoped_refptr.735* %30 to %"class.base::TaskRunner"**
  %32 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %31, align 8
  %33 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #17
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.36, i64 0, i64 0), i32 2171) #17
  %34 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %34, align 8, !noalias !96
  %36 = icmp eq %"class.base::internal::BindStateBase"* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %13
  %38 = getelementptr inbounds %"class.base::OnceCallback.30", %"class.base::OnceCallback.30"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %38, align 8, !alias.scope !96
  br label %46

39:                                               ; preds = %13
  %40 = bitcast %"class.base::OnceCallback.30"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #17, !noalias !96
  %41 = getelementptr inbounds %"class.base::OnceCallback.30", %"class.base::OnceCallback.30"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %41, align 8, !noalias !96
  call void @_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE(%"class.base::internal::CancelableCallbackImpl"* %14, %"class.base::OnceCallback.30"* nonnull %2) #17, !noalias !96
  %42 = bitcast %"class.base::OnceCallback.30"* %2 to i64*
  %43 = load i64, i64* %42, align 8, !noalias !96
  %44 = bitcast %"class.base::OnceCallback.30"* %5 to i64*
  store i64 %43, i64* %44, align 8, !alias.scope !96
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %41, align 8, !noalias !96
  %45 = getelementptr inbounds %"class.base::OnceCallback.30", %"class.base::OnceCallback.30"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #17, !noalias !96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #17, !noalias !96
  br label %46

46:                                               ; preds = %37, %39
  %47 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %32, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback.30"* nonnull %5) #17
  %48 = getelementptr inbounds %"class.base::OnceCallback.30", %"class.base::OnceCallback.30"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %48) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #17
  br label %61

49:                                               ; preds = %9
  %50 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 66
  %51 = load i8, i8* %50, align 1, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 64
  store i64 %11, i64* %54, align 8
  store i64 0, i64* %10, align 8
  %55 = srem i64 %11, 2
  %56 = icmp eq i64 %55, 1
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = add nsw i64 %11, 1
  store i64 %58, i64* %54, align 8
  br label %59

59:                                               ; preds = %49, %53, %57
  %60 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 36
  tail call void @_ZN2ui9X11Window13DelayedResizeERKN3gfx4RectE(%"class.ui::X11Window"* %0, %"class.gfx::Rect"* dereferenceable(16) %60)
  br label %61

61:                                               ; preds = %59, %46
  ret void
}

declare void @_ZN2ui14SetWMSpecStateEN3x116WindowEbNS0_4AtomES2_(i32, i1 zeroext, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window22UpdateWindowPropertiesERKN4base8internal9flat_treeIN3x114AtomENS1_8identityENSt3__14lessIvEENS7_6vectorIS5_NS7_9allocatorIS5_EEEEEE(%"class.ui::X11Window"*, %"class.base::internal::flat_tree.378"* readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 30
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 20, i8* %8, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0), i64 20, i1 false) #17
  %9 = getelementptr inbounds i8, i8* %6, i64 20
  store i8 0, i8* %9, align 4
  %10 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #17
  %11 = call zeroext i1 @_ZN2ui17HasWMSpecPropertyERKN4base8internal9flat_treeIN3x114AtomENS0_8identityENSt3__14lessIvEENS6_6vectorIS4_NS6_9allocatorIS4_EEEEEES4_(%"class.base::internal::flat_tree.378"* dereferenceable(24) %5, i32 %10) #17
  %12 = load i8, i8* %8, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %2, %14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  %18 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 50
  %19 = zext i1 %11 to i8
  store i8 %19, i8* %18, align 2
  %20 = icmp eq %"class.base::internal::flat_tree.378"* %5, %1
  br i1 %20, label %27, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.base::internal::flat_tree.378", %"class.base::internal::flat_tree.378"* %5, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::flat_tree.378", %"class.base::internal::flat_tree.378"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = getelementptr inbounds %"class.base::internal::flat_tree.378", %"class.base::internal::flat_tree.378"* %1, i64 0, i32 0, i32 0, i32 1
  %26 = load i32*, i32** %25, align 8
  call void @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.72"* %22, i32* %24, i32* %26) #17
  br label %27

27:                                               ; preds = %17, %21
  %28 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #17
  %29 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 19, i8* %30, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0), i64 19, i1 false) #17
  %31 = getelementptr inbounds i8, i8* %28, i64 19
  store i8 0, i8* %31, align 1
  %32 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #17
  %33 = call zeroext i1 @_ZN2ui17HasWMSpecPropertyERKN4base8internal9flat_treeIN3x114AtomENS0_8identityENSt3__14lessIvEENS6_6vectorIS4_NS6_9allocatorIS4_EEEEEES4_(%"class.base::internal::flat_tree.378"* dereferenceable(24) %5, i32 %32) #17
  %34 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 40
  %35 = zext i1 %33 to i8
  store i8 %35, i8* %34, align 4
  %36 = load i8, i8* %30, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %27
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #18
  br label %41

41:                                               ; preds = %27, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #17
  call void @_ZN2ui9X11Window21OnXWindowStateChangedEv(%"class.ui::X11Window"* %0)
  call void @_ZN2ui9X11Window17ResetWindowRegionEv(%"class.ui::X11Window"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3x1116GetArrayPropertyINS_4AtomEEEbNS_6WindowES1_PNSt3__16vectorIT_NS3_9allocatorIS5_EEEEPS1_mPNS_10ConnectionE(i32, i32, %"class.std::__1::vector.72"*, i32*, i64, %"class.x11::Connection"*) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.x11::Future.843", align 8
  %8 = alloca %"struct.x11::GetPropertyRequest", align 4
  %9 = bitcast %"class.x11::Future.843"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %5, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #17
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 1
  store i32 %0, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 2
  store i32 %1, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 3
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 4
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 5
  %17 = icmp eq i64 %4, 0
  %18 = select i1 %17, i64 4294967295, i64 %4
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %16, align 4
  %20 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto11GetPropertyERKNS_18GetPropertyRequestE(%"class.x11::XProto"* %10, %"struct.x11::GetPropertyRequest"* nonnull dereferenceable(24) %8) #17
  %21 = getelementptr inbounds %"class.x11::Future.843", %"class.x11::Future.843"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.x11::Connection::FutureImpl"* %20, %"class.x11::Connection::FutureImpl"** %21, align 8
  %22 = call { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_16GetPropertyReplyEE4SyncEv(%"class.x11::Future.843"* nonnull %7)
  %23 = extractvalue { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } %22, 0
  %24 = extractvalue { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } %22, 1
  %25 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %21, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %21, align 8
  %26 = icmp eq %"class.x11::Connection::FutureImpl"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %6
  %28 = bitcast %"class.x11::Connection::FutureImpl"* %25 to i8*
  call void @_ZdlPv(i8* %28) #18
  br label %29

29:                                               ; preds = %6, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  %30 = icmp eq %"struct.x11::GetPropertyReply"* %23, null
  br i1 %30, label %75, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 0
  %33 = load i8, i8* %32, align 8
  %34 = icmp eq i8 %33, 32
  br i1 %34, label %35, label %75

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 4
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %2, i64 0, i32 0, i32 1
  %40 = bitcast i32** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector.72"* %2 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = ashr exact i64 %44, 2
  %46 = icmp ult i64 %45, %38
  %47 = inttoptr i64 %43 to i32*
  %48 = inttoptr i64 %43 to i8*
  br i1 %46, label %49, label %53

49:                                               ; preds = %35
  %50 = sub nsw i64 %38, %45
  call void @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.72"* %2, i64 %50) #17
  %51 = bitcast %"class.std::__1::vector.72"* %2 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %57

53:                                               ; preds = %35
  %54 = icmp ugt i64 %45, %38
  br i1 %54, label %55, label %57

55:                                               ; preds = %53
  %56 = getelementptr inbounds i32, i32* %47, i64 %38
  store i32* %56, i32** %39, align 8
  br label %57

57:                                               ; preds = %49, %53, %55
  %58 = phi i8* [ %52, %49 ], [ %48, %53 ], [ %48, %55 ]
  %59 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 5, i32 0
  %60 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %59, align 8
  %61 = bitcast %"class.base::RefCountedMemory"* %60 to i8* (%"class.base::RefCountedMemory"*)***
  %62 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %61, align 8
  %63 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %62, align 8
  %64 = call i8* %63(%"class.base::RefCountedMemory"* %60) #17
  %65 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %59, align 8
  %66 = bitcast %"class.base::RefCountedMemory"* %65 to i64 (%"class.base::RefCountedMemory"*)***
  %67 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %66, align 8
  %68 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %67, i64 1
  %69 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %68, align 8
  %70 = call i64 %69(%"class.base::RefCountedMemory"* %65) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 1 %64, i64 %70, i1 false)
  %71 = icmp eq i32* %3, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %57
  %73 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  store i32 %74, i32* %3, align 4
  br label %75

75:                                               ; preds = %29, %72, %57, %31
  %76 = phi i1 [ false, %31 ], [ false, %29 ], [ true, %57 ], [ true, %72 ]
  %77 = icmp eq %"class.x11::Error"* %24, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.x11::Error"* %24 to void (%"class.x11::Error"*)***
  %80 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %80, i64 1
  %82 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %81, align 8
  call void %82(%"class.x11::Error"* nonnull %24) #17
  br label %83

83:                                               ; preds = %78, %75
  br i1 %30, label %102, label %84

84:                                               ; preds = %83
  %85 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 5, i32 0
  %86 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %85, align 8
  %87 = icmp eq %"class.base::RefCountedMemory"* %86, null
  br i1 %87, label %100, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %86, i64 0, i32 1
  %90 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw sub i32* %90, i32 1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %100

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %89, i64 -2
  %95 = bitcast %"class.base::RefCountedThreadSafe.343"* %94 to %"class.base::RefCountedMemory"*
  %96 = bitcast %"class.base::RefCountedThreadSafe.343"* %94 to void (%"class.base::RefCountedMemory"*)***
  %97 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %97, i64 3
  %99 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %98, align 8
  call void %99(%"class.base::RefCountedMemory"* nonnull %95) #17
  br label %100

100:                                              ; preds = %93, %88, %84
  %101 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 0
  call void @_ZdlPv(i8* %101) #18
  br label %102

102:                                              ; preds = %83, %100
  ret i1 %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3x1116GetArrayPropertyIiEEbNS_6WindowENS_4AtomEPNSt3__16vectorIT_NS3_9allocatorIS5_EEEEPS2_mPNS_10ConnectionE(i32, i32, %"class.std::__1::vector.727"*, i32*, i64, %"class.x11::Connection"*) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.x11::Future.843", align 8
  %8 = alloca %"struct.x11::GetPropertyRequest", align 4
  %9 = bitcast %"class.x11::Future.843"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %5, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #17
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 1
  store i32 %0, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 2
  store i32 %1, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 3
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 4
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 5
  %17 = icmp eq i64 %4, 0
  %18 = select i1 %17, i64 4294967295, i64 %4
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %16, align 4
  %20 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto11GetPropertyERKNS_18GetPropertyRequestE(%"class.x11::XProto"* %10, %"struct.x11::GetPropertyRequest"* nonnull dereferenceable(24) %8) #17
  %21 = getelementptr inbounds %"class.x11::Future.843", %"class.x11::Future.843"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.x11::Connection::FutureImpl"* %20, %"class.x11::Connection::FutureImpl"** %21, align 8
  %22 = call { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_16GetPropertyReplyEE4SyncEv(%"class.x11::Future.843"* nonnull %7)
  %23 = extractvalue { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } %22, 0
  %24 = extractvalue { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } %22, 1
  %25 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %21, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %21, align 8
  %26 = icmp eq %"class.x11::Connection::FutureImpl"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %6
  %28 = bitcast %"class.x11::Connection::FutureImpl"* %25 to i8*
  call void @_ZdlPv(i8* %28) #18
  br label %29

29:                                               ; preds = %6, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  %30 = icmp eq %"struct.x11::GetPropertyReply"* %23, null
  br i1 %30, label %75, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 0
  %33 = load i8, i8* %32, align 8
  %34 = icmp eq i8 %33, 32
  br i1 %34, label %35, label %75

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 4
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %2, i64 0, i32 0, i32 1
  %40 = bitcast i32** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector.727"* %2 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = ashr exact i64 %44, 2
  %46 = icmp ult i64 %45, %38
  %47 = inttoptr i64 %43 to i32*
  %48 = inttoptr i64 %43 to i8*
  br i1 %46, label %49, label %53

49:                                               ; preds = %35
  %50 = sub nsw i64 %38, %45
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector.727"* %2, i64 %50) #17
  %51 = bitcast %"class.std::__1::vector.727"* %2 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %57

53:                                               ; preds = %35
  %54 = icmp ugt i64 %45, %38
  br i1 %54, label %55, label %57

55:                                               ; preds = %53
  %56 = getelementptr inbounds i32, i32* %47, i64 %38
  store i32* %56, i32** %39, align 8
  br label %57

57:                                               ; preds = %49, %53, %55
  %58 = phi i8* [ %52, %49 ], [ %48, %53 ], [ %48, %55 ]
  %59 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 5, i32 0
  %60 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %59, align 8
  %61 = bitcast %"class.base::RefCountedMemory"* %60 to i8* (%"class.base::RefCountedMemory"*)***
  %62 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %61, align 8
  %63 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %62, align 8
  %64 = call i8* %63(%"class.base::RefCountedMemory"* %60) #17
  %65 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %59, align 8
  %66 = bitcast %"class.base::RefCountedMemory"* %65 to i64 (%"class.base::RefCountedMemory"*)***
  %67 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %66, align 8
  %68 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %67, i64 1
  %69 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %68, align 8
  %70 = call i64 %69(%"class.base::RefCountedMemory"* %65) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 1 %64, i64 %70, i1 false)
  %71 = icmp eq i32* %3, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %57
  %73 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  store i32 %74, i32* %3, align 4
  br label %75

75:                                               ; preds = %29, %72, %57, %31
  %76 = phi i1 [ false, %31 ], [ false, %29 ], [ true, %57 ], [ true, %72 ]
  %77 = icmp eq %"class.x11::Error"* %24, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.x11::Error"* %24 to void (%"class.x11::Error"*)***
  %80 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %80, i64 1
  %82 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %81, align 8
  call void %82(%"class.x11::Error"* nonnull %24) #17
  br label %83

83:                                               ; preds = %78, %75
  br i1 %30, label %102, label %84

84:                                               ; preds = %83
  %85 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 5, i32 0
  %86 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %85, align 8
  %87 = icmp eq %"class.base::RefCountedMemory"* %86, null
  br i1 %87, label %100, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %86, i64 0, i32 1
  %90 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw sub i32* %90, i32 1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %100

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %89, i64 -2
  %95 = bitcast %"class.base::RefCountedThreadSafe.343"* %94 to %"class.base::RefCountedMemory"*
  %96 = bitcast %"class.base::RefCountedThreadSafe.343"* %94 to void (%"class.base::RefCountedMemory"*)***
  %97 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %97, i64 3
  %99 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %98, align 8
  call void %99(%"class.base::RefCountedMemory"* nonnull %95) #17
  br label %100

100:                                              ; preds = %93, %88, %84
  %101 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 0
  call void @_ZdlPv(i8* %101) #18
  br label %102

102:                                              ; preds = %83, %100
  ret i1 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9X11Window13DelayedResizeERKN3gfx4RectE(%"class.ui::X11Window"*, %"class.gfx::Rect"* dereferenceable(16)) #0 align 2 {
  %3 = alloca %"struct.ui::PlatformWindowDelegate::BoundsChange", align 4
  %4 = alloca %"struct.x11::Sync::SetCounterRequest", align 4
  %5 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 66
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 64
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %33

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 25
  %15 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %16 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 52
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i64 %10, 1
  store i64 %18, i64* %9, align 8
  %19 = lshr i64 %18, 32
  %20 = trunc i64 %19 to i32
  %21 = trunc i64 %18 to i32
  %22 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %15, i64 0, i32 1, i32 16, i32 0, i32 0, i32 0
  %23 = load %"class.x11::Sync"*, %"class.x11::Sync"** %22, align 8
  %24 = bitcast %"struct.x11::Sync::SetCounterRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %24) #17
  %25 = getelementptr inbounds %"struct.x11::Sync::SetCounterRequest", %"struct.x11::Sync::SetCounterRequest"* %4, i64 0, i32 0
  store i32 %17, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.x11::Sync::SetCounterRequest", %"struct.x11::Sync::SetCounterRequest"* %4, i64 0, i32 1, i32 0
  store i32 %20, i32* %26, align 4
  %27 = getelementptr inbounds %"struct.x11::Sync::SetCounterRequest", %"struct.x11::Sync::SetCounterRequest"* %4, i64 0, i32 1, i32 1
  store i32 %21, i32* %27, align 4
  %28 = call %"class.x11::Connection::FutureImpl"* @_ZN3x114Sync10SetCounterERKNS0_17SetCounterRequestE(%"class.x11::Sync"* %23, %"struct.x11::Sync::SetCounterRequest"* nonnull dereferenceable(12) %4) #17
  %29 = icmp eq %"class.x11::Connection::FutureImpl"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %13
  %31 = bitcast %"class.x11::Connection::FutureImpl"* %28 to i8*
  call void @_ZdlPv(i8* %31) #18
  br label %32

32:                                               ; preds = %13, %30
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %24) #17
  br label %33

33:                                               ; preds = %2, %32, %8
  %34 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 67, i32 1, i32 0, i32 0
  call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %34) #17
  %35 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 67, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %35) #17
  call void @_ZN2ui9X11Window17ResetWindowRegionEv(%"class.ui::X11Window"* %0) #17
  %36 = getelementptr inbounds %"class.ui::X11Window", %"class.ui::X11Window"* %0, i64 0, i32 12
  %37 = load %"class.ui::PlatformWindowDelegate"*, %"class.ui::PlatformWindowDelegate"** %36, align 8
  %38 = bitcast %"struct.ui::PlatformWindowDelegate::BoundsChange"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #17
  call void @_ZN2ui22PlatformWindowDelegate12BoundsChangeC1ERKN3gfx4RectE(%"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull %3, %"class.gfx::Rect"* dereferenceable(16) %1) #17
  %39 = bitcast %"class.ui::PlatformWindowDelegate"* %37 to void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)***
  %40 = load void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)**, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)** %40, i64 2
  %42 = load void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"struct.ui::PlatformWindowDelegate::BoundsChange"*)** %41, align 8
  call void %42(%"class.ui::PlatformWindowDelegate"* %37, %"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull dereferenceable(16) %3) #17
  call void @_ZN2ui22PlatformWindowDelegate12BoundsChangeD1Ev(%"struct.ui::PlatformWindowDelegate::BoundsChange"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #17
  ret void
}

declare dereferenceable(8) %class.scoped_refptr.735* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #1

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.30"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XFixes20DeletePointerBarrierERKNS0_7BarrierE(%"class.x11::XFixes"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x115Shape4MaskERKNS0_11MaskRequestE(%"class.x11::Shape"*, %"struct.x11::Shape::MaskRequest"* dereferenceable(20)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui15PropertyHandler19AfterPropertyChangeEPKvl(%"class.ui::PropertyHandler"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK2ui14PlatformWindow17IsAnimatingClosedEv(%"class.ui::PlatformWindow"*) unnamed_addr #1

declare void @_ZN2ui14PlatformWindow37SetVisibilityChangedAnimationsEnabledEb(%"class.ui::PlatformWindow"*, i1 zeroext) unnamed_addr #1

declare void @_ZNK2ui14PlatformWindow17GetWindowUniqueIdEv(%"class.std::__1::basic_string"* sret, %"class.ui::PlatformWindow"*) unnamed_addr #1

declare zeroext i1 @_ZNK2ui14PlatformWindow23ShouldUpdateWindowShapeEv(%"class.ui::PlatformWindow"*) unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XFixes20CreatePointerBarrierERKNS0_27CreatePointerBarrierRequestE(%"class.x11::XFixes"*, %"struct.x11::XFixes::CreatePointerBarrierRequest"* dereferenceable(48)) local_unnamed_addr #1

declare i32 @_ZN3x1110Connection14GenerateIdImplEv(%"class.x11::Connection"*) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9QueryTreeERKNS_6WindowE(%"class.x11::XProto"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::QueryTreeReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_14QueryTreeReplyEE4SyncEv(%"class.x11::Future.754"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.scoped_refptr.342, align 8
  %3 = alloca %"class.std::__1::unique_ptr.344", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future.754", %"class.x11::Future.754"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.342* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = getelementptr inbounds %class.scoped_refptr.342, %class.scoped_refptr.342* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.344"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.344"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.344"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.342* nonnull %2, %"class.std::__1::unique_ptr.344"* nonnull %3) #17
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #17
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #17
  %23 = call %"struct.x11::QueryTreeReply"* @_ZN3x116detail9ReadReplyINS_14QueryTreeReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #17
  %24 = ptrtoint %"struct.x11::QueryTreeReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #17
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.343"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.343"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #17
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::QueryTreeReply"*
  %47 = insertvalue { %"struct.x11::QueryTreeReply"*, %"class.x11::Error"* } undef, %"struct.x11::QueryTreeReply"* %46, 0
  %48 = insertvalue { %"struct.x11::QueryTreeReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::QueryTreeReply"*, %"class.x11::Error"* } %48
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"*, %class.scoped_refptr.342*, %"class.std::__1::unique_ptr.344"*) local_unnamed_addr #1

declare void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"*, %"class.base::RefCountedMemory"*, i1 zeroext) unnamed_addr #1

declare %"struct.x11::QueryTreeReply"* @_ZN3x116detail9ReadReplyINS_14QueryTreeReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"*) unnamed_addr #2

declare zeroext i1 @_ZN8SkRegion2opERKS_RK7SkIRectNS_2OpE(%class.SkRegion*, %class.SkRegion* dereferenceable(24), %struct.SkIRect* dereferenceable(16), i32) local_unnamed_addr #1

declare i32 @_ZNK3gfx12ImageSkiaRep8GetWidthEv(%"class.gfx::ImageSkiaRep"*) local_unnamed_addr #1

declare i32 @_ZNK3gfx12ImageSkiaRep9GetHeightEv(%"class.gfx::ImageSkiaRep"*) local_unnamed_addr #1

declare dereferenceable(56) %class.SkBitmap* @_ZNK3gfx12ImageSkiaRep9GetBitmapEv(%"class.gfx::ImageSkiaRep"*) local_unnamed_addr #1

declare i32 @_ZNK8SkPixmap8getColorEii(%class.SkPixmap*, i32, i32) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x114Sync10SetCounterERKNS0_17SetCounterRequestE(%"class.x11::Sync"*, %"struct.x11::Sync::SetCounterRequest"* dereferenceable(12)) local_unnamed_addr #1

declare zeroext i1 @_ZNK3gfx4Rect8ContainsEii(%"class.gfx::Rect"*, i32, i32) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

declare i32 @_ZN2ui27CoalescePendingMotionEventsERKN3x115EventEPS1_(%"class.x11::Event"* dereferenceable(32), %"class.x11::Event"*) local_unnamed_addr #1

declare i32 @_ZN2ui20XGetMaskAsEventFlagsEv() local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #10

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #13

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.72"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.72"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #17
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #17
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #18
  %55 = bitcast %"class.std::__1::vector.72"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #17
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.72"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #19
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.72"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #19
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #18
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.72"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #17
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

declare %"class.x11::Connection::FutureImpl"* @_ZN3x115Shape10RectanglesERKNS0_17RectanglesRequestE(%"class.x11::Shape"*, %"struct.x11::Shape::RectanglesRequest"* dereferenceable(48)) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #15

declare void @_ZN2ui26X11DesktopWindowMoveClientC1EPNS0_8DelegateE(%"class.ui::X11DesktopWindowMoveClient"*, %"class.ui::X11DesktopWindowMoveClient::Delegate"*) unnamed_addr #1

declare void @_ZN3x1120XScopedEventSelectorC1ENS_6WindowENS_9EventMaskE(%"class.x11::XScopedEventSelector"*, i32, i32) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto14ChangePropertyERKNS_21ChangePropertyRequestE(%"class.x11::XProto"*, %"struct.x11::ChangePropertyRequest"* dereferenceable(32)) local_unnamed_addr #1

declare %"class.base::RefCountedBytes"* @_ZN4base15RefCountedBytes10TakeVectorEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::vector.769"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE7emplaceIJS2_EEENS_11__wrap_iterIPS2_EENS7_IPKS2_EEDpOT_(%"class.std::__1::vector.72"*, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.782", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %8, %10
  %12 = ptrtoint i32* %8 to i64
  %13 = ptrtoint i32* %10 to i64
  br i1 %11, label %14, label %158

14:                                               ; preds = %3
  %15 = icmp eq i32* %8, %1
  %16 = load i32, i32* %2, align 4
  br i1 %15, label %17, label %21

17:                                               ; preds = %14
  store i32 %16, i32* %1, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = bitcast i32** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %301

21:                                               ; preds = %14
  %22 = getelementptr inbounds i32, i32* %1, i64 1
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = bitcast i32** %7 to i64*
  %28 = icmp ult i32* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i32, i32* %8, i64 %30
  %32 = bitcast i32* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 2
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i32* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i32* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %150

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i32, i32* %8, i64 %43
  %45 = bitcast i32* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 2
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i32, i32* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add i64 %52, 1
  %54 = getelementptr i32, i32* %1, i64 %53
  %55 = icmp ult i32* %8, %54
  %56 = icmp ult i32* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 9223372036854775800
  %60 = getelementptr i32, i32* %8, i64 %59
  %61 = getelementptr i32, i32* %26, i64 %59
  %62 = add nsw i64 %59, -8
  %63 = lshr exact i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 24
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i32, i32* %8, i64 %70
  %73 = getelementptr i32, i32* %26, i64 %70
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !alias.scope !99
  %76 = getelementptr i32, i32* %73, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !99
  %79 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %79, align 4, !alias.scope !102, !noalias !99
  %80 = getelementptr i32, i32* %72, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !102, !noalias !99
  %82 = or i64 %70, 8
  %83 = getelementptr i32, i32* %8, i64 %82
  %84 = getelementptr i32, i32* %26, i64 %82
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 4, !alias.scope !99
  %87 = getelementptr i32, i32* %84, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !99
  %90 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %90, align 4, !alias.scope !102, !noalias !99
  %91 = getelementptr i32, i32* %83, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %92, align 4, !alias.scope !102, !noalias !99
  %93 = or i64 %70, 16
  %94 = getelementptr i32, i32* %8, i64 %93
  %95 = getelementptr i32, i32* %26, i64 %93
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !99
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !99
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !102, !noalias !99
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !102, !noalias !99
  %104 = or i64 %70, 24
  %105 = getelementptr i32, i32* %8, i64 %104
  %106 = getelementptr i32, i32* %26, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !99
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !99
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !102, !noalias !99
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !102, !noalias !99
  %115 = add i64 %70, 32
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !104

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i32, i32* %8, i64 %122
  %125 = getelementptr i32, i32* %26, i64 %122
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !99
  %128 = getelementptr i32, i32* %125, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !99
  %131 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4, !alias.scope !102, !noalias !99
  %132 = getelementptr i32, i32* %124, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %133, align 4, !alias.scope !102, !noalias !99
  %134 = add i64 %122, 8
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !105

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %150, %137
  %140 = phi i32* [ %60, %137 ], [ %155, %150 ]
  %141 = ptrtoint i32* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i32, i32* %8, i64 %146
  %148 = bitcast i32* %147 to i8*
  %149 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 %24, i1 false) #17
  br label %157

150:                                              ; preds = %39, %150
  %151 = phi i32* [ %155, %150 ], [ %40, %39 ]
  %152 = phi i32* [ %154, %150 ], [ %41, %39 ]
  %153 = load i32, i32* %152, align 4
  store i32 %153, i32* %151, align 4
  %154 = getelementptr inbounds i32, i32* %152, i64 1
  %155 = getelementptr inbounds i32, i32* %151, i64 1
  %156 = icmp ult i32* %154, %8
  br i1 %156, label %150, label %139, !llvm.loop !106

157:                                              ; preds = %142, %145
  store i32 %16, i32* %1, align 4
  br label %301

158:                                              ; preds = %3
  %159 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 2
  %160 = bitcast %"struct.std::__1::__split_buffer.782"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %160) #17
  %161 = getelementptr inbounds %"struct.std::__1::__split_buffer.782", %"struct.std::__1::__split_buffer.782"* %5, i64 0, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer.782", %"struct.std::__1::__split_buffer.782"* %5, i64 0, i32 1
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer.782", %"struct.std::__1::__split_buffer.782"* %5, i64 0, i32 2
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer.782", %"struct.std::__1::__split_buffer.782"* %5, i64 0, i32 3, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer.782", %"struct.std::__1::__split_buffer.782"* %5, i64 0, i32 3, i32 1, i32 0
  %166 = bitcast i32** %7 to i64*
  %167 = bitcast %"class.std::__1::vector.72"* %0 to i64*
  %168 = bitcast %"struct.std::__1::__split_buffer.782"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 40, i1 false)
  %169 = load i64, i64* %167, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 2
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 4611686018427387903
  br i1 %173, label %174, label %176

174:                                              ; preds = %158
  %175 = bitcast %"class.std::__1::vector.72"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #19
  unreachable

176:                                              ; preds = %158
  %177 = bitcast i32** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 2
  %180 = icmp ult i64 %179, 2305843009213693951
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 2
  store i32* null, i32** %164, align 8
  %184 = bitcast %"class.std::__1::allocator.77"** %165 to %"class.std::__1::__compressed_pair.74"**
  store %"class.std::__1::__compressed_pair.74"* %159, %"class.std::__1::__compressed_pair.74"** %184, align 8
  br label %196

185:                                              ; preds = %176
  %186 = ashr exact i64 %178, 1
  %187 = icmp ult i64 %186, %172
  %188 = select i1 %187, i64 %172, i64 %186
  %189 = sub i64 %4, %169
  %190 = ashr exact i64 %189, 2
  store i32* null, i32** %164, align 8
  %191 = bitcast %"class.std::__1::allocator.77"** %165 to %"class.std::__1::__compressed_pair.74"**
  store %"class.std::__1::__compressed_pair.74"* %159, %"class.std::__1::__compressed_pair.74"** %191, align 8
  %192 = icmp eq i64 %188, 0
  br i1 %192, label %202, label %193

193:                                              ; preds = %185
  %194 = icmp ugt i64 %188, 4611686018427387903
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  tail call void @abort() #19
  unreachable

196:                                              ; preds = %181, %193
  %197 = phi i64 [ 4611686018427387903, %181 ], [ %188, %193 ]
  %198 = phi i64 [ %183, %181 ], [ %190, %193 ]
  %199 = shl i64 %197, 2
  %200 = tail call i8* @_Znwm(i64 %199) #18
  %201 = bitcast i8* %200 to i32*
  br label %202

202:                                              ; preds = %185, %196
  %203 = phi i64 [ %198, %196 ], [ %190, %185 ]
  %204 = phi i64 [ %197, %196 ], [ 0, %185 ]
  %205 = phi i32* [ %201, %196 ], [ null, %185 ]
  store i32* %205, i32** %161, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 %203
  store i32* %206, i32** %163, align 8
  store i32* %206, i32** %162, align 8
  %207 = getelementptr inbounds i32, i32* %205, i64 %204
  store i32* %207, i32** %164, align 8
  call void @_ZNSt3__114__split_bufferIN3x114AtomERNS_9allocatorIS2_EEE12emplace_backIJS2_EEEvDpOT_(%"struct.std::__1::__split_buffer.782"* nonnull %5, i32* dereferenceable(4) %2)
  %208 = load i32*, i32** %162, align 8
  %209 = load i32*, i32** %6, align 8
  %210 = ptrtoint i32* %209 to i64
  %211 = sub i64 %4, %210
  %212 = ashr exact i64 %211, 2
  %213 = sub nsw i64 0, %212
  %214 = getelementptr inbounds i32, i32* %208, i64 %213
  store i32* %214, i32** %162, align 8
  %215 = icmp sgt i64 %211, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %202
  %217 = bitcast i32* %214 to i8*
  %218 = bitcast i32* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %211, i1 false) #17
  br label %219

219:                                              ; preds = %216, %202
  %220 = load i32*, i32** %7, align 8
  %221 = icmp eq i32* %220, %1
  br i1 %221, label %222, label %226

222:                                              ; preds = %219
  %223 = ptrtoint i32* %220 to i64
  %224 = bitcast i32** %163 to i64*
  %225 = load i64, i64* %224, align 8
  br label %275

226:                                              ; preds = %219
  %227 = load i32*, i32** %163, align 8
  %228 = getelementptr i32, i32* %220, i64 -1
  %229 = ptrtoint i32* %228 to i64
  %230 = sub i64 %229, %4
  %231 = lshr i64 %230, 2
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 3
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %245, label %235

235:                                              ; preds = %226, %235
  %236 = phi i32* [ %242, %235 ], [ %227, %226 ]
  %237 = phi i32* [ %240, %235 ], [ %1, %226 ]
  %238 = phi i64 [ %243, %235 ], [ %233, %226 ]
  %239 = load i32, i32* %237, align 4
  store i32 %239, i32* %236, align 4
  %240 = getelementptr inbounds i32, i32* %237, i64 1
  %241 = load i32*, i32** %163, align 8
  %242 = getelementptr inbounds i32, i32* %241, i64 1
  store i32* %242, i32** %163, align 8
  %243 = add i64 %238, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %235, !llvm.loop !107

245:                                              ; preds = %235, %226
  %246 = phi i32* [ undef, %226 ], [ %242, %235 ]
  %247 = phi i32* [ %227, %226 ], [ %242, %235 ]
  %248 = phi i32* [ %1, %226 ], [ %240, %235 ]
  %249 = icmp ult i64 %230, 12
  br i1 %249, label %270, label %250

250:                                              ; preds = %245, %250
  %251 = phi i32* [ %268, %250 ], [ %247, %245 ]
  %252 = phi i32* [ %266, %250 ], [ %248, %245 ]
  %253 = load i32, i32* %252, align 4
  store i32 %253, i32* %251, align 4
  %254 = getelementptr inbounds i32, i32* %252, i64 1
  %255 = load i32*, i32** %163, align 8
  %256 = getelementptr inbounds i32, i32* %255, i64 1
  store i32* %256, i32** %163, align 8
  %257 = load i32, i32* %254, align 4
  store i32 %257, i32* %256, align 4
  %258 = getelementptr inbounds i32, i32* %252, i64 2
  %259 = load i32*, i32** %163, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 1
  store i32* %260, i32** %163, align 8
  %261 = load i32, i32* %258, align 4
  store i32 %261, i32* %260, align 4
  %262 = getelementptr inbounds i32, i32* %252, i64 3
  %263 = load i32*, i32** %163, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 1
  store i32* %264, i32** %163, align 8
  %265 = load i32, i32* %262, align 4
  store i32 %265, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %252, i64 4
  %267 = load i32*, i32** %163, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 1
  store i32* %268, i32** %163, align 8
  %269 = icmp eq i32* %266, %220
  br i1 %269, label %270, label %250

270:                                              ; preds = %250, %245
  %271 = phi i32* [ %246, %245 ], [ %268, %250 ]
  %272 = ptrtoint i32* %271 to i64
  %273 = load i64, i64* %166, align 8
  %274 = bitcast i32** %163 to i64*
  br label %275

275:                                              ; preds = %222, %270
  %276 = phi i64* [ %224, %222 ], [ %274, %270 ]
  %277 = phi i64 [ %225, %222 ], [ %272, %270 ]
  %278 = phi i64 [ %223, %222 ], [ %273, %270 ]
  %279 = load i64, i64* %167, align 8
  %280 = bitcast i32** %162 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %167, align 8
  store i64 %279, i64* %280, align 8
  store i64 %277, i64* %166, align 8
  store i64 %278, i64* %276, align 8
  %282 = load i64, i64* %177, align 8
  %283 = bitcast i32** %164 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %177, align 8
  store i64 %282, i64* %283, align 8
  %285 = bitcast %"struct.std::__1::__split_buffer.782"* %5 to i64*
  store i64 %279, i64* %285, align 8
  %286 = inttoptr i64 %279 to i32*
  %287 = inttoptr i64 %278 to i32*
  %288 = icmp eq i32* %287, %286
  br i1 %288, label %296, label %289

289:                                              ; preds = %275
  %290 = getelementptr i32, i32* %287, i64 -1
  %291 = ptrtoint i32* %290 to i64
  %292 = sub i64 %291, %279
  %293 = lshr i64 %292, 2
  %294 = xor i64 %293, -1
  %295 = getelementptr i32, i32* %287, i64 %294
  store i32* %295, i32** %163, align 8
  br label %296

296:                                              ; preds = %289, %275
  %297 = icmp eq i64 %279, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %279 to i8*
  call void @_ZdlPv(i8* %299) #18
  br label %300

300:                                              ; preds = %296, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %160) #17
  br label %301

301:                                              ; preds = %17, %157, %300
  %302 = phi i32* [ %1, %17 ], [ %1, %157 ], [ %208, %300 ]
  ret i32* %302
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN3x114AtomERNS_9allocatorIS2_EEE12emplace_backIJS2_EEEvDpOT_(%"struct.std::__1::__split_buffer.782"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.782", %"struct.std::__1::__split_buffer.782"* %0, i64 0, i32 2
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.782", %"struct.std::__1::__split_buffer.782"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  %8 = ptrtoint i32* %6 to i64
  br i1 %7, label %9, label %229

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.782", %"struct.std::__1::__split_buffer.782"* %0, i64 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.782", %"struct.std::__1::__split_buffer.782"* %0, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp ugt i32* %11, %14
  %16 = ptrtoint i32* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint i32* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 2
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32, i32* %11, i64 %22
  %24 = ptrtoint i32* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast i32* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %12, i64 %25, i1 false) #17
  %30 = load i32*, i32** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi i32* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds i32, i32* %23, i64 %26
  store i32* %33, i32** %3, align 8
  %34 = getelementptr inbounds i32, i32* %32, i64 %22
  store i32* %34, i32** %10, align 8
  br label %229

35:                                               ; preds = %9
  %36 = bitcast i32** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.782"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 1
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 4611686018427387903
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #19
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 2
  %47 = tail call i8* @_Znwm(i64 %46) #18
  %48 = bitcast i8* %47 to i32*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds i32, i32* %48, i64 %45
  %51 = ptrtoint i32* %50 to i64
  %52 = getelementptr inbounds i32, i32* %48, i64 %41
  %53 = ptrtoint i32* %52 to i64
  %54 = ptrtoint i32* %11 to i64
  %55 = ptrtoint i32* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds i32, i32* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %219, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -4
  %62 = lshr i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 8
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = and i64 %41, -4
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -4
  %69 = lshr i64 %68, 2
  %70 = and i64 %68, -4
  %71 = add i64 %66, %70
  %72 = add i64 %71, 4
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr i32, i32* %11, i64 %74
  %76 = bitcast i32* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 9223372036854775800
  %82 = getelementptr i32, i32* %50, i64 %81
  %83 = getelementptr i32, i32* %11, i64 %81
  %84 = add nsw i64 %81, -8
  %85 = lshr exact i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 24
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i32, i32* %50, i64 %92
  %95 = getelementptr i32, i32* %11, i64 %92
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !108
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !108
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !111, !noalias !108
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !111, !noalias !108
  %104 = or i64 %92, 8
  %105 = getelementptr i32, i32* %50, i64 %104
  %106 = getelementptr i32, i32* %11, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !108
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !108
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !111, !noalias !108
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !111, !noalias !108
  %115 = or i64 %92, 16
  %116 = getelementptr i32, i32* %50, i64 %115
  %117 = getelementptr i32, i32* %11, i64 %115
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !108
  %120 = getelementptr i32, i32* %117, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !108
  %123 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %123, align 4, !alias.scope !111, !noalias !108
  %124 = getelementptr i32, i32* %116, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %125, align 4, !alias.scope !111, !noalias !108
  %126 = or i64 %92, 24
  %127 = getelementptr i32, i32* %50, i64 %126
  %128 = getelementptr i32, i32* %11, i64 %126
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !108
  %131 = getelementptr i32, i32* %128, i64 4
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4, !alias.scope !108
  %134 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %134, align 4, !alias.scope !111, !noalias !108
  %135 = getelementptr i32, i32* %127, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %136, align 4, !alias.scope !111, !noalias !108
  %137 = add i64 %92, 32
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !113

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i32, i32* %50, i64 %144
  %147 = getelementptr i32, i32* %11, i64 %144
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4, !alias.scope !108
  %150 = getelementptr i32, i32* %147, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4, !alias.scope !108
  %153 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %153, align 4, !alias.scope !111, !noalias !108
  %154 = getelementptr i32, i32* %146, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %155, align 4, !alias.scope !111, !noalias !108
  %156 = add i64 %144, 8
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !114

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %216, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi i32* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi i32* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint i32* %162 to i64
  %165 = and i64 %41, -4
  %166 = add i64 %56, %165
  %167 = add i64 %166, -4
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 2
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %161, %175
  %176 = phi i32* [ %180, %175 ], [ %162, %161 ]
  %177 = phi i32* [ %181, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %182, %175 ], [ %173, %161 ]
  %179 = load i32, i32* %177, align 4
  store i32 %179, i32* %176, align 4
  %180 = getelementptr inbounds i32, i32* %176, i64 1
  %181 = getelementptr inbounds i32, i32* %177, i64 1
  %182 = add i64 %178, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !115

184:                                              ; preds = %175, %161
  %185 = phi i32* [ %162, %161 ], [ %180, %175 ]
  %186 = phi i32* [ %163, %161 ], [ %181, %175 ]
  %187 = icmp ult i8* %169, inttoptr (i64 28 to i8*)
  br i1 %187, label %216, label %188

188:                                              ; preds = %184, %188
  %189 = phi i32* [ %213, %188 ], [ %185, %184 ]
  %190 = phi i32* [ %214, %188 ], [ %186, %184 ]
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %189, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %190, i64 1
  %194 = load i32, i32* %193, align 4
  store i32 %194, i32* %192, align 4
  %195 = getelementptr inbounds i32, i32* %189, i64 2
  %196 = getelementptr inbounds i32, i32* %190, i64 2
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %195, align 4
  %198 = getelementptr inbounds i32, i32* %189, i64 3
  %199 = getelementptr inbounds i32, i32* %190, i64 3
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %198, align 4
  %201 = getelementptr inbounds i32, i32* %189, i64 4
  %202 = getelementptr inbounds i32, i32* %190, i64 4
  %203 = load i32, i32* %202, align 4
  store i32 %203, i32* %201, align 4
  %204 = getelementptr inbounds i32, i32* %189, i64 5
  %205 = getelementptr inbounds i32, i32* %190, i64 5
  %206 = load i32, i32* %205, align 4
  store i32 %206, i32* %204, align 4
  %207 = getelementptr inbounds i32, i32* %189, i64 6
  %208 = getelementptr inbounds i32, i32* %190, i64 6
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %207, align 4
  %210 = getelementptr inbounds i32, i32* %189, i64 7
  %211 = getelementptr inbounds i32, i32* %190, i64 7
  %212 = load i32, i32* %211, align 4
  store i32 %212, i32* %210, align 4
  %213 = getelementptr inbounds i32, i32* %189, i64 8
  %214 = getelementptr inbounds i32, i32* %190, i64 8
  %215 = icmp eq i32* %58, %213
  br i1 %215, label %216, label %188, !llvm.loop !116

216:                                              ; preds = %184, %188, %159
  %217 = ptrtoint i32* %58 to i64
  %218 = load i32*, i32** %13, align 8
  br label %219

219:                                              ; preds = %44, %216
  %220 = phi i32* [ %218, %216 ], [ %14, %44 ]
  %221 = phi i64 [ %217, %216 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %222 = bitcast i32** %10 to i64*
  store i64 %51, i64* %222, align 8
  %223 = bitcast i32** %3 to i64*
  store i64 %221, i64* %223, align 8
  store i64 %53, i64* %36, align 8
  %224 = icmp eq i32* %220, null
  %225 = inttoptr i64 %221 to i32*
  br i1 %224, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast i32* %220 to i8*
  tail call void @_ZdlPv(i8* %227) #18
  %228 = load i32*, i32** %3, align 8
  br label %229

229:                                              ; preds = %226, %219, %31, %2
  %230 = phi i32* [ %228, %226 ], [ %225, %219 ], [ %33, %31 ], [ %4, %2 ]
  %231 = load i32, i32* %1, align 4
  store i32 %231, i32* %230, align 4
  %232 = load i32*, i32** %3, align 8
  %233 = getelementptr inbounds i32, i32* %232, i64 1
  store i32* %233, i32** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyIiEENS_6FutureIvEENS_6WindowENS_4AtomES4_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE(i32, i32, i32, %"class.std::__1::vector.727"* dereferenceable(24), %"class.x11::Connection"*) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.std::__1::vector.769", align 8
  %7 = alloca %"struct.x11::ChangePropertyRequest", align 8
  %8 = bitcast %"class.std::__1::vector.769"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #17
  %9 = getelementptr inbounds %"class.std::__1::vector.769", %"class.std::__1::vector.769"* %6, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.769", %"class.std::__1::vector.769"* %6, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.769", %"class.std::__1::vector.769"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %3, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.727"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #17
  %18 = icmp eq i64 %17, 0
  %19 = inttoptr i64 %16 to i8*
  br i1 %18, label %33, label %20

20:                                               ; preds = %5
  %21 = icmp slt i64 %17, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector.769"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %23) #19
  unreachable

24:                                               ; preds = %20
  %25 = tail call i8* @_Znwm(i64 %17) #18
  store i8* %25, i8** %9, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %17
  store i8* %26, i8** %11, align 8
  %27 = bitcast i8** %10 to i64*
  %28 = ptrtoint i8* %25 to i64
  %29 = sub i64 %17, %28
  %30 = getelementptr i8, i8* %25, i64 %29
  %31 = ptrtoint i8* %30 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %25, i8 0, i64 %31, i1 false) #17
  %32 = ptrtoint i8* %26 to i64
  store i64 %32, i64* %27, align 8
  br label %33

33:                                               ; preds = %5, %24
  %34 = phi i8* [ null, %5 ], [ %25, %24 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 4 %19, i64 %17, i1 false)
  %35 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %4, i64 0, i32 0
  %36 = bitcast %"struct.x11::ChangePropertyRequest"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #17
  %37 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 0
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 1
  store i32 %0, i32* %38, align 4
  %39 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 2
  store i32 %1, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 3
  store i32 %2, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 4
  store i8 32, i8* %41, align 8
  %42 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 5
  %43 = load i64, i64* %13, align 8
  %44 = load i64, i64* %15, align 8
  %45 = sub i64 %43, %44
  %46 = lshr exact i64 %45, 2
  %47 = trunc i64 %46 to i32
  store i32 %47, i32* %42, align 4
  %48 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 6
  %49 = call %"class.base::RefCountedBytes"* @_ZN4base15RefCountedBytes10TakeVectorEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::vector.769"* nonnull %6) #17
  %50 = ptrtoint %"class.base::RefCountedBytes"* %49 to i64
  %51 = bitcast %class.scoped_refptr.342* %48 to i64*
  store i64 %50, i64* %51, align 8
  %52 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto14ChangePropertyERKNS_21ChangePropertyRequestE(%"class.x11::XProto"* %35, %"struct.x11::ChangePropertyRequest"* nonnull dereferenceable(32) %7) #17
  %53 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 6, i32 0
  %54 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %55 = icmp eq %"class.base::RefCountedMemory"* %54, null
  br i1 %55, label %68, label %56

56:                                               ; preds = %33
  %57 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %54, i64 0, i32 1
  %58 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw sub i32* %58, i32 1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %68

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %57, i64 -2
  %63 = bitcast %"class.base::RefCountedThreadSafe.343"* %62 to %"class.base::RefCountedMemory"*
  %64 = bitcast %"class.base::RefCountedThreadSafe.343"* %62 to void (%"class.base::RefCountedMemory"*)***
  %65 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %65, i64 3
  %67 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %66, align 8
  call void %67(%"class.base::RefCountedMemory"* nonnull %63) #17
  br label %68

68:                                               ; preds = %61, %56, %33
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #17
  %69 = load i8*, i8** %9, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = ptrtoint i8* %69 to i64
  %73 = bitcast i8** %10 to i64*
  store i64 %72, i64* %73, align 8
  call void @_ZdlPv(i8* nonnull %69) #18
  br label %74

74:                                               ; preds = %68, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #17
  ret %"class.x11::Connection::FutureImpl"* %52
}

declare void @_ZN2ui15XDragDropClientC1EPNS0_8DelegateEN3x116WindowE(%"class.ui::XDragDropClient"*, %"class.ui::XDragDropClient::Delegate"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.379"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.379"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #19
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.379"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.379", %"class.std::__1::basic_string.379"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.379"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #19
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #18
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !117
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !117
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !120, !noalias !117
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !120, !noalias !117
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !117
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !117
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !120, !noalias !117
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !120, !noalias !117
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !117
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !117
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !120, !noalias !117
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !120, !noalias !117
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !117
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !117
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !120, !noalias !117
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !120, !noalias !117
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !122

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !117
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !117
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !120, !noalias !117
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !120, !noalias !117
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !123

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !124

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !125

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !126

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !127

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !128

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !130
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !130
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !133, !noalias !130
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !133, !noalias !130
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !130
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !130
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !133, !noalias !130
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !133, !noalias !130
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !130
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !130
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !133, !noalias !130
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !133, !noalias !130
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !130
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !130
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !133, !noalias !130
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !133, !noalias !130
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !135

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !130
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !130
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !133, !noalias !130
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !133, !noalias !130
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !136

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !137

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !138

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #18
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.379"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.379", %"class.std::__1::basic_string.379"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.379", %"class.std::__1::basic_string.379"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

declare void @_ZN3x1110Connection10FutureImpl10OnResponseEN4base12OnceCallbackIFv13scoped_refptrINS2_16RefCountedMemoryEENSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEEEEE(%"class.x11::Connection::FutureImpl"*, %"class.base::OnceCallback.341"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIZN3x116FutureIvE10OnResponseENS_12OnceCallbackIFvNS3_8ResponseIvEEEEEEUlSA_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS3_5ErrorENSE_14default_deleteISG_EEEEE_JSA_EEEFvSD_SJ_EE7RunOnceEPNS0_13BindStateBaseEOSD_OSJ_(%"class.base::internal::BindStateBase"*, %class.scoped_refptr.342* dereferenceable(8), %"class.std::__1::unique_ptr.344"* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"struct.x11::Response.739", align 8
  %5 = alloca %"class.base::OnceCallback.786", align 8
  %6 = alloca %"class.base::OnceCallback.786", align 8
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %8 = bitcast %"class.base::OnceCallback.786"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17
  %9 = bitcast void ()** %7 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %7 to i64*
  %11 = load i64, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %12 = getelementptr inbounds %class.scoped_refptr.342, %class.scoped_refptr.342* %1, i64 0, i32 0
  %13 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.344"* %2, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::unique_ptr.344"* %2 to i64*
  %16 = load i64, i64* %15, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %14, align 8
  %17 = bitcast %"struct.x11::Response.739"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"struct.x11::Response.739", %"struct.x11::Response.739"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"struct.x11::Response.739"* %4 to i64*
  store i64 %16, i64* %19, align 8
  %20 = bitcast %"class.base::OnceCallback.786"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  %21 = getelementptr inbounds %"class.base::OnceCallback.786", %"class.base::OnceCallback.786"* %6, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.base::OnceCallback.786"* %5 to i64*
  store i64 %11, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %21, align 8
  %23 = getelementptr inbounds %"class.base::OnceCallback.786", %"class.base::OnceCallback.786"* %5, i64 0, i32 0
  %24 = inttoptr i64 %11 to %"class.base::internal::BindStateBase"*
  %25 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %24, i64 0, i32 1
  %26 = bitcast void ()** %25 to void (%"class.base::internal::BindStateBase"*, %"struct.x11::Response.739"*)**
  %27 = load void (%"class.base::internal::BindStateBase"*, %"struct.x11::Response.739"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.x11::Response.739"*)** %26, align 8
  call void %27(%"class.base::internal::BindStateBase"* %24, %"struct.x11::Response.739"* nonnull dereferenceable(8) %4) #17
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  %28 = load %"class.x11::Error"*, %"class.x11::Error"** %18, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %18, align 8
  %29 = icmp eq %"class.x11::Error"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %3
  %31 = bitcast %"class.x11::Error"* %28 to void (%"class.x11::Error"*)***
  %32 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %32, i64 1
  %34 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %33, align 8
  call void %34(%"class.x11::Error"* nonnull %28) #17
  br label %35

35:                                               ; preds = %30, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  %36 = icmp eq %"class.base::RefCountedMemory"* %13, null
  br i1 %36, label %49, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %13, i64 0, i32 1
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %49

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %38, i64 -2
  %44 = bitcast %"class.base::RefCountedThreadSafe.343"* %43 to %"class.base::RefCountedMemory"*
  %45 = bitcast %"class.base::RefCountedThreadSafe.343"* %43 to void (%"class.base::RefCountedMemory"*)***
  %46 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %46, i64 3
  %48 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %47, align 8
  call void %48(%"class.base::RefCountedMemory"* nonnull %44) #17
  br label %49

49:                                               ; preds = %35, %37, %42
  %50 = getelementptr inbounds %"class.base::OnceCallback.786", %"class.base::OnceCallback.786"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIZN3x116FutureIvE10OnResponseENS_12OnceCallbackIFvNS2_8ResponseIvEEEEEEUlS9_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS2_5ErrorENSD_14default_deleteISF_EEEEE_JS9_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #17
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #18
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIZN3x116FutureIvE11IgnoreErrorEvEUlNS3_8ResponseIvEEE_JEEEFvS7_EE7RunOnceEPNS0_13BindStateBaseEOS7_(%"class.base::internal::BindStateBase"*, %"struct.x11::Response.739"* dereferenceable(8)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.x11::Response.739", %"struct.x11::Response.739"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.x11::Error"*, %"class.x11::Error"** %3, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %3, align 8
  %5 = icmp eq %"class.x11::Error"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.x11::Error"* %4 to void (%"class.x11::Error"*)***
  %8 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %8, i64 1
  %10 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %9, align 8
  tail call void %10(%"class.x11::Error"* nonnull %4) #17
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIZN3x116FutureIvE11IgnoreErrorEvEUlNS2_8ResponseIvEEE_JEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvN3x116WindowENS3_6CursorEEJS4_EEEFvS5_EE7RunOnceEPNS0_13BindStateBaseES5_(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (i32, i32)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to i32*
  %7 = load void (i32, i32)*, void (i32, i32)** %4, align 8
  %8 = load i32, i32* %6, align 4
  tail call void %7(i32 %8, i32 %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvN3x116WindowENS2_6CursorEEJS3_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEE13MakeForwarderIJS4_EEEvPNS2_IFvDpT_EEE(%"class.base::internal::CancelableCallbackImpl.408"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::WeakPtr.802", align 8
  %6 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = bitcast %"class.base::WeakPtr.802"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #17
  %8 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17, !noalias !139
  %9 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl.408", %"class.base::internal::CancelableCallbackImpl.408"* %0, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %9) #17, !noalias !139
  %10 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl.408", %"class.base::internal::CancelableCallbackImpl.408"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load i64, i64* %10, align 8, !noalias !139
  %12 = getelementptr inbounds %"class.base::WeakPtr.802", %"class.base::WeakPtr.802"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %12, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %11) #17
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17, !noalias !139
  %13 = call i8* @_Znwm(i64 64) #18, !noalias !142
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEEEFvS6_EJNS_7WeakPtrIS9_EEEEES7_E7RunOnceEPNS0_13BindStateBaseES6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEEEFvS5_EJNS_7WeakPtrIS8_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEEEFvS6_EJNS_7WeakPtrIS9_EEEEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE) #17, !noalias !142
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.base::internal::CancelableCallbackImpl.408"*, i32)* @_ZN4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEE11ForwardOnceIJS4_EEEvDpT_ to i64), i64 0>, <2 x i64>* %16, align 8, !noalias !142
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to %"class.base::internal::WeakReference"*
  %19 = getelementptr inbounds %"class.base::WeakPtr.802", %"class.base::WeakPtr.802"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %18, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %19) #17, !noalias !142
  %20 = getelementptr inbounds i8, i8* %13, i64 56
  %21 = bitcast i8* %20 to i64*
  %22 = getelementptr inbounds %"class.base::WeakPtr.802", %"class.base::WeakPtr.802"* %5, i64 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8, !noalias !142
  store i64 %23, i64* %21, align 8, !noalias !142
  %24 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %13, i8** %24, align 8, !alias.scope !142
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %27 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %25, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %26) #17
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #17
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEE11ForwardOnceIJS4_EEEvDpT_(%"class.base::internal::CancelableCallbackImpl.408"*, i32) #0 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl.408", %"class.base::internal::CancelableCallbackImpl.408"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %4) #17
  %5 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl.408", %"class.base::internal::CancelableCallbackImpl.408"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::internal::CancelableCallbackImpl.408"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %11 = inttoptr i64 %8 to %"class.base::internal::BindStateBase"*
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %11, i64 0, i32 1
  %13 = bitcast void ()** %12 to void (%"class.base::internal::BindStateBase"*, i32)**
  %14 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %13, align 8
  tail call void %14(%"class.base::internal::BindStateBase"* %11, i32 %1) #17
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %10) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEEEFvS6_EJNS_7WeakPtrIS9_EEEEES7_E7RunOnceEPNS0_13BindStateBaseES6_(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #17
  br i1 %7, label %8, label %43

8:                                                ; preds = %2
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.base::internal::CancelableCallbackImpl.408"**
  %11 = load %"class.base::internal::CancelableCallbackImpl.408"*, %"class.base::internal::CancelableCallbackImpl.408"** %10, align 8
  %12 = icmp eq %"class.base::internal::CancelableCallbackImpl.408"* %11, null
  br i1 %12, label %43, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #17
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i64 0, i64 0)) #17
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #17
  br label %23

23:                                               ; preds = %20, %13
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #17
  %25 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* null
  %28 = getelementptr inbounds i8, i8* %27, i64 %18
  %29 = bitcast i8* %28 to %"class.base::internal::CancelableCallbackImpl.408"*
  %30 = and i64 %15, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %23
  %33 = bitcast i8* %28 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = add i64 %15, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to void (%"class.base::internal::CancelableCallbackImpl.408"*, i32)**
  %38 = load void (%"class.base::internal::CancelableCallbackImpl.408"*, i32)*, void (%"class.base::internal::CancelableCallbackImpl.408"*, i32)** %37, align 8
  br label %41

39:                                               ; preds = %23
  %40 = inttoptr i64 %15 to void (%"class.base::internal::CancelableCallbackImpl.408"*, i32)*
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi void (%"class.base::internal::CancelableCallbackImpl.408"*, i32)* [ %38, %32 ], [ %40, %39 ]
  call void %42(%"class.base::internal::CancelableCallbackImpl.408"* %29, i32 %1) #17
  br label %43

43:                                               ; preds = %2, %8, %41
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEEEFvS5_EJNS_7WeakPtrIS8_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #17
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #18
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEEEFvS6_EJNS_7WeakPtrIS9_EEEEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.base::internal::CancelableCallbackImpl.408"**
  %9 = load %"class.base::internal::CancelableCallbackImpl.408"*, %"class.base::internal::CancelableCallbackImpl.408"** %8, align 8
  %10 = icmp ne %"class.base::internal::CancelableCallbackImpl.408"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #17
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN2ui22PlatformWindowDelegateEFvPNS3_5EventEEJNS0_17UnretainedWrapperIS4_EEEEEFvS6_EE7RunOnceEPNS0_13BindStateBaseES6_(%"class.base::internal::BindStateBase"*, %"class.ui::Event"*) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.ui::PlatformWindowDelegate"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.ui::PlatformWindowDelegate"*, %"class.ui::Event"*)**
  %22 = load void (%"class.ui::PlatformWindowDelegate"*, %"class.ui::Event"*)*, void (%"class.ui::PlatformWindowDelegate"*, %"class.ui::Event"*)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.ui::PlatformWindowDelegate"*, %"class.ui::Event"*)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.ui::PlatformWindowDelegate"*, %"class.ui::Event"*)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.ui::PlatformWindowDelegate"* %13, %"class.ui::Event"* %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN2ui22PlatformWindowDelegateEFvPNS2_5EventEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN2ui22X11WholeScreenMoveLoopC1EPNS_19X11MoveLoopDelegateE(%"class.ui::X11WholeScreenMoveLoop"*, %"class.ui::X11MoveLoopDelegate"*) unnamed_addr #1

declare void @_ZN2ui22X11TopmostWindowFinderC1Ev(%"class.ui::X11TopmostWindowFinder"*) unnamed_addr #1

declare void @_ZN2ui23XOSExchangeDataProviderC1EN3x116WindowERKNS_18SelectionFormatMapE(%"class.ui::XOSExchangeDataProvider"*, i32, %"class.ui::SelectionFormatMap"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN2ui14OSExchangeDataC1ENSt3__110unique_ptrINS_22OSExchangeDataProviderENS1_14default_deleteIS3_EEEE(%"class.ui::OSExchangeData"*, %"class.ui::OSExchangeDataProvider"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui14OSExchangeDataD1Ev(%"class.ui::OSExchangeData"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3x1120XScopedEventSelectorD1Ev(%"class.x11::XScopedEventSelector"*) unnamed_addr #2

declare void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"*, %"class.display::Display"* dereferenceable(568)) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #1

declare %"struct.x11::GetSelectionOwnerReply"* @_ZN3x116detail9ReadReplyINS_22GetSelectionOwnerReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3x1116GetArrayPropertyINS_8VisualIdEEEbNS_6WindowENS_4AtomEPNSt3__16vectorIT_NS4_9allocatorIS6_EEEEPS3_mPNS_10ConnectionE(i32, i32, %"class.std::__1::vector.829"*, i32*, i64, %"class.x11::Connection"*) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.x11::Future.843", align 8
  %8 = alloca %"struct.x11::GetPropertyRequest", align 4
  %9 = bitcast %"class.x11::Future.843"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %5, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #17
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 1
  store i32 %0, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 2
  store i32 %1, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 3
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 4
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 5
  %17 = icmp eq i64 %4, 0
  %18 = select i1 %17, i64 4294967295, i64 %4
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %16, align 4
  %20 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto11GetPropertyERKNS_18GetPropertyRequestE(%"class.x11::XProto"* %10, %"struct.x11::GetPropertyRequest"* nonnull dereferenceable(24) %8) #17
  %21 = getelementptr inbounds %"class.x11::Future.843", %"class.x11::Future.843"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.x11::Connection::FutureImpl"* %20, %"class.x11::Connection::FutureImpl"** %21, align 8
  %22 = call { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_16GetPropertyReplyEE4SyncEv(%"class.x11::Future.843"* nonnull %7)
  %23 = extractvalue { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } %22, 0
  %24 = extractvalue { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } %22, 1
  %25 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %21, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %21, align 8
  %26 = icmp eq %"class.x11::Connection::FutureImpl"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %6
  %28 = bitcast %"class.x11::Connection::FutureImpl"* %25 to i8*
  call void @_ZdlPv(i8* %28) #18
  br label %29

29:                                               ; preds = %6, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  %30 = icmp eq %"struct.x11::GetPropertyReply"* %23, null
  br i1 %30, label %75, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 0
  %33 = load i8, i8* %32, align 8
  %34 = icmp eq i8 %33, 32
  br i1 %34, label %35, label %75

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 4
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.829", %"class.std::__1::vector.829"* %2, i64 0, i32 0, i32 1
  %40 = bitcast i32** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector.829"* %2 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = ashr exact i64 %44, 2
  %46 = icmp ult i64 %45, %38
  %47 = inttoptr i64 %43 to i32*
  %48 = inttoptr i64 %43 to i8*
  br i1 %46, label %49, label %53

49:                                               ; preds = %35
  %50 = sub nsw i64 %38, %45
  call void @_ZNSt3__16vectorIN3x118VisualIdENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.829"* %2, i64 %50) #17
  %51 = bitcast %"class.std::__1::vector.829"* %2 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %57

53:                                               ; preds = %35
  %54 = icmp ugt i64 %45, %38
  br i1 %54, label %55, label %57

55:                                               ; preds = %53
  %56 = getelementptr inbounds i32, i32* %47, i64 %38
  store i32* %56, i32** %39, align 8
  br label %57

57:                                               ; preds = %49, %53, %55
  %58 = phi i8* [ %52, %49 ], [ %48, %53 ], [ %48, %55 ]
  %59 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 5, i32 0
  %60 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %59, align 8
  %61 = bitcast %"class.base::RefCountedMemory"* %60 to i8* (%"class.base::RefCountedMemory"*)***
  %62 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %61, align 8
  %63 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %62, align 8
  %64 = call i8* %63(%"class.base::RefCountedMemory"* %60) #17
  %65 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %59, align 8
  %66 = bitcast %"class.base::RefCountedMemory"* %65 to i64 (%"class.base::RefCountedMemory"*)***
  %67 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %66, align 8
  %68 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %67, i64 1
  %69 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %68, align 8
  %70 = call i64 %69(%"class.base::RefCountedMemory"* %65) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 1 %64, i64 %70, i1 false)
  %71 = icmp eq i32* %3, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %57
  %73 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  store i32 %74, i32* %3, align 4
  br label %75

75:                                               ; preds = %29, %72, %57, %31
  %76 = phi i1 [ false, %31 ], [ false, %29 ], [ true, %57 ], [ true, %72 ]
  %77 = icmp eq %"class.x11::Error"* %24, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.x11::Error"* %24 to void (%"class.x11::Error"*)***
  %80 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %80, i64 1
  %82 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %81, align 8
  call void %82(%"class.x11::Error"* nonnull %24) #17
  br label %83

83:                                               ; preds = %78, %75
  br i1 %30, label %102, label %84

84:                                               ; preds = %83
  %85 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 5, i32 0
  %86 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %85, align 8
  %87 = icmp eq %"class.base::RefCountedMemory"* %86, null
  br i1 %87, label %100, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %86, i64 0, i32 1
  %90 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw sub i32* %90, i32 1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %100

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %89, i64 -2
  %95 = bitcast %"class.base::RefCountedThreadSafe.343"* %94 to %"class.base::RefCountedMemory"*
  %96 = bitcast %"class.base::RefCountedThreadSafe.343"* %94 to void (%"class.base::RefCountedMemory"*)***
  %97 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %97, i64 3
  %99 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %98, align 8
  call void %99(%"class.base::RefCountedMemory"* nonnull %95) #17
  br label %100

100:                                              ; preds = %93, %88, %84
  %101 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 0
  call void @_ZdlPv(i8* %101) #18
  br label %102

102:                                              ; preds = %83, %100
  ret i1 %76
}

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto11GetPropertyERKNS_18GetPropertyRequestE(%"class.x11::XProto"*, %"struct.x11::GetPropertyRequest"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_16GetPropertyReplyEE4SyncEv(%"class.x11::Future.843"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.scoped_refptr.342, align 8
  %3 = alloca %"class.std::__1::unique_ptr.344", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future.843", %"class.x11::Future.843"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.342* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = getelementptr inbounds %class.scoped_refptr.342, %class.scoped_refptr.342* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.344"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.344"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.344"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.342* nonnull %2, %"class.std::__1::unique_ptr.344"* nonnull %3) #17
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #17
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #17
  %23 = call %"struct.x11::GetPropertyReply"* @_ZN3x116detail9ReadReplyINS_16GetPropertyReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #17
  %24 = ptrtoint %"struct.x11::GetPropertyReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #17
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.343"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.343"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #17
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::GetPropertyReply"*
  %47 = insertvalue { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } undef, %"struct.x11::GetPropertyReply"* %46, 0
  %48 = insertvalue { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } %48
}

declare %"struct.x11::GetPropertyReply"* @_ZN3x116detail9ReadReplyINS_16GetPropertyReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x118VisualIdENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.829"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.829", %"class.std::__1::vector.829"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.829", %"class.std::__1::vector.829"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #17
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.829"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.829"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #19
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #19
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #18
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #17
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.829", %"class.std::__1::vector.829"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #17
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #18
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyINS_4TimeEEENS_6FutureIvEENS_6WindowENS_4AtomES5_RKNSt3__16vectorIT_NS6_9allocatorIS8_EEEEPNS_10ConnectionE(i32, i32, i32, %"class.std::__1::vector.847"* dereferenceable(24), %"class.x11::Connection"*) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.std::__1::vector.769", align 8
  %7 = alloca %"struct.x11::ChangePropertyRequest", align 8
  %8 = bitcast %"class.std::__1::vector.769"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #17
  %9 = getelementptr inbounds %"class.std::__1::vector.769", %"class.std::__1::vector.769"* %6, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.769", %"class.std::__1::vector.769"* %6, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.769", %"class.std::__1::vector.769"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.847", %"class.std::__1::vector.847"* %3, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.847"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #17
  %18 = icmp eq i64 %17, 0
  %19 = inttoptr i64 %16 to i8*
  br i1 %18, label %33, label %20

20:                                               ; preds = %5
  %21 = icmp slt i64 %17, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector.769"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %23) #19
  unreachable

24:                                               ; preds = %20
  %25 = tail call i8* @_Znwm(i64 %17) #18
  store i8* %25, i8** %9, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %17
  store i8* %26, i8** %11, align 8
  %27 = bitcast i8** %10 to i64*
  %28 = ptrtoint i8* %25 to i64
  %29 = sub i64 %17, %28
  %30 = getelementptr i8, i8* %25, i64 %29
  %31 = ptrtoint i8* %30 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %25, i8 0, i64 %31, i1 false) #17
  %32 = ptrtoint i8* %26 to i64
  store i64 %32, i64* %27, align 8
  br label %33

33:                                               ; preds = %5, %24
  %34 = phi i8* [ null, %5 ], [ %25, %24 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 4 %19, i64 %17, i1 false)
  %35 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %4, i64 0, i32 0
  %36 = bitcast %"struct.x11::ChangePropertyRequest"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #17
  %37 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 0
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 1
  store i32 %0, i32* %38, align 4
  %39 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 2
  store i32 %1, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 3
  store i32 %2, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 4
  store i8 32, i8* %41, align 8
  %42 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 5
  %43 = load i64, i64* %13, align 8
  %44 = load i64, i64* %15, align 8
  %45 = sub i64 %43, %44
  %46 = lshr exact i64 %45, 2
  %47 = trunc i64 %46 to i32
  store i32 %47, i32* %42, align 4
  %48 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 6
  %49 = call %"class.base::RefCountedBytes"* @_ZN4base15RefCountedBytes10TakeVectorEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::vector.769"* nonnull %6) #17
  %50 = ptrtoint %"class.base::RefCountedBytes"* %49 to i64
  %51 = bitcast %class.scoped_refptr.342* %48 to i64*
  store i64 %50, i64* %51, align 8
  %52 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto14ChangePropertyERKNS_21ChangePropertyRequestE(%"class.x11::XProto"* %35, %"struct.x11::ChangePropertyRequest"* nonnull dereferenceable(32) %7) #17
  %53 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 6, i32 0
  %54 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %55 = icmp eq %"class.base::RefCountedMemory"* %54, null
  br i1 %55, label %68, label %56

56:                                               ; preds = %33
  %57 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %54, i64 0, i32 1
  %58 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw sub i32* %58, i32 1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %68

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe.343", %"class.base::RefCountedThreadSafe.343"* %57, i64 -2
  %63 = bitcast %"class.base::RefCountedThreadSafe.343"* %62 to %"class.base::RefCountedMemory"*
  %64 = bitcast %"class.base::RefCountedThreadSafe.343"* %62 to void (%"class.base::RefCountedMemory"*)***
  %65 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %65, i64 3
  %67 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %66, align 8
  call void %67(%"class.base::RefCountedMemory"* nonnull %63) #17
  br label %68

68:                                               ; preds = %61, %56, %33
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #17
  %69 = load i8*, i8** %9, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = ptrtoint i8* %69 to i64
  %73 = bitcast i8** %10 to i64*
  store i64 %72, i64* %73, align 8
  call void @_ZdlPv(i8* nonnull %69) #18
  br label %74

74:                                               ; preds = %68, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #17
  ret %"class.x11::Connection::FutureImpl"* %52
}

declare void @_ZN3x115WriteINS_18ClientMessageEventEEENS_11WriteBufferERKT_(%"class.x11::WriteBuffer"* sret, %"struct.x11::ClientMessageEvent"* dereferenceable(32)) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::vector.855"* @_ZN3x1111WriteBuffer10GetBuffersEv(%"class.x11::WriteBuffer"*) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9SendEventERKNS_16SendEventRequestE(%"class.x11::XProto"*, %"struct.x11::SendEventRequest"* dereferenceable(44)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"*) unnamed_addr #2

declare %"struct.x11::TranslateCoordinatesReply"* @_ZN3x116detail9ReadReplyINS_25TranslateCoordinatesReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.72"*, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.782", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %8, %10
  %12 = ptrtoint i32* %8 to i64
  %13 = ptrtoint i32* %10 to i64
  br i1 %11, label %14, label %158

14:                                               ; preds = %3
  %15 = icmp eq i32* %8, %1
  %16 = load i32, i32* %2, align 4
  br i1 %15, label %17, label %21

17:                                               ; preds = %14
  store i32 %16, i32* %1, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = bitcast i32** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %301

21:                                               ; preds = %14
  %22 = getelementptr inbounds i32, i32* %1, i64 1
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = bitcast i32** %7 to i64*
  %28 = icmp ult i32* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i32, i32* %8, i64 %30
  %32 = bitcast i32* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 2
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i32* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i32* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %150

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i32, i32* %8, i64 %43
  %45 = bitcast i32* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 2
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i32, i32* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add i64 %52, 1
  %54 = getelementptr i32, i32* %1, i64 %53
  %55 = icmp ult i32* %8, %54
  %56 = icmp ult i32* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 9223372036854775800
  %60 = getelementptr i32, i32* %8, i64 %59
  %61 = getelementptr i32, i32* %26, i64 %59
  %62 = add nsw i64 %59, -8
  %63 = lshr exact i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 24
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i32, i32* %8, i64 %70
  %73 = getelementptr i32, i32* %26, i64 %70
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !alias.scope !147
  %76 = getelementptr i32, i32* %73, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !147
  %79 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %79, align 4, !alias.scope !150, !noalias !147
  %80 = getelementptr i32, i32* %72, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !150, !noalias !147
  %82 = or i64 %70, 8
  %83 = getelementptr i32, i32* %8, i64 %82
  %84 = getelementptr i32, i32* %26, i64 %82
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 4, !alias.scope !147
  %87 = getelementptr i32, i32* %84, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !147
  %90 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %90, align 4, !alias.scope !150, !noalias !147
  %91 = getelementptr i32, i32* %83, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %92, align 4, !alias.scope !150, !noalias !147
  %93 = or i64 %70, 16
  %94 = getelementptr i32, i32* %8, i64 %93
  %95 = getelementptr i32, i32* %26, i64 %93
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !147
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !147
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !150, !noalias !147
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !150, !noalias !147
  %104 = or i64 %70, 24
  %105 = getelementptr i32, i32* %8, i64 %104
  %106 = getelementptr i32, i32* %26, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !147
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !147
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !150, !noalias !147
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !150, !noalias !147
  %115 = add i64 %70, 32
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !152

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i32, i32* %8, i64 %122
  %125 = getelementptr i32, i32* %26, i64 %122
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !147
  %128 = getelementptr i32, i32* %125, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !147
  %131 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4, !alias.scope !150, !noalias !147
  %132 = getelementptr i32, i32* %124, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %133, align 4, !alias.scope !150, !noalias !147
  %134 = add i64 %122, 8
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !153

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %150, %137
  %140 = phi i32* [ %60, %137 ], [ %155, %150 ]
  %141 = ptrtoint i32* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i32, i32* %8, i64 %146
  %148 = bitcast i32* %147 to i8*
  %149 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 %24, i1 false) #17
  br label %157

150:                                              ; preds = %39, %150
  %151 = phi i32* [ %155, %150 ], [ %40, %39 ]
  %152 = phi i32* [ %154, %150 ], [ %41, %39 ]
  %153 = load i32, i32* %152, align 4
  store i32 %153, i32* %151, align 4
  %154 = getelementptr inbounds i32, i32* %152, i64 1
  %155 = getelementptr inbounds i32, i32* %151, i64 1
  %156 = icmp ult i32* %154, %8
  br i1 %156, label %150, label %139, !llvm.loop !154

157:                                              ; preds = %142, %145
  store i32 %16, i32* %1, align 4
  br label %301

158:                                              ; preds = %3
  %159 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 2
  %160 = bitcast %"struct.std::__1::__split_buffer.782"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %160) #17
  %161 = getelementptr inbounds %"struct.std::__1::__split_buffer.782", %"struct.std::__1::__split_buffer.782"* %5, i64 0, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer.782", %"struct.std::__1::__split_buffer.782"* %5, i64 0, i32 1
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer.782", %"struct.std::__1::__split_buffer.782"* %5, i64 0, i32 2
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer.782", %"struct.std::__1::__split_buffer.782"* %5, i64 0, i32 3, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer.782", %"struct.std::__1::__split_buffer.782"* %5, i64 0, i32 3, i32 1, i32 0
  %166 = bitcast i32** %7 to i64*
  %167 = bitcast %"class.std::__1::vector.72"* %0 to i64*
  %168 = bitcast %"struct.std::__1::__split_buffer.782"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 40, i1 false)
  %169 = load i64, i64* %167, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 2
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 4611686018427387903
  br i1 %173, label %174, label %176

174:                                              ; preds = %158
  %175 = bitcast %"class.std::__1::vector.72"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #19
  unreachable

176:                                              ; preds = %158
  %177 = bitcast i32** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 2
  %180 = icmp ult i64 %179, 2305843009213693951
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 2
  store i32* null, i32** %164, align 8
  %184 = bitcast %"class.std::__1::allocator.77"** %165 to %"class.std::__1::__compressed_pair.74"**
  store %"class.std::__1::__compressed_pair.74"* %159, %"class.std::__1::__compressed_pair.74"** %184, align 8
  br label %196

185:                                              ; preds = %176
  %186 = ashr exact i64 %178, 1
  %187 = icmp ult i64 %186, %172
  %188 = select i1 %187, i64 %172, i64 %186
  %189 = sub i64 %4, %169
  %190 = ashr exact i64 %189, 2
  store i32* null, i32** %164, align 8
  %191 = bitcast %"class.std::__1::allocator.77"** %165 to %"class.std::__1::__compressed_pair.74"**
  store %"class.std::__1::__compressed_pair.74"* %159, %"class.std::__1::__compressed_pair.74"** %191, align 8
  %192 = icmp eq i64 %188, 0
  br i1 %192, label %202, label %193

193:                                              ; preds = %185
  %194 = icmp ugt i64 %188, 4611686018427387903
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  tail call void @abort() #19
  unreachable

196:                                              ; preds = %181, %193
  %197 = phi i64 [ 4611686018427387903, %181 ], [ %188, %193 ]
  %198 = phi i64 [ %183, %181 ], [ %190, %193 ]
  %199 = shl i64 %197, 2
  %200 = tail call i8* @_Znwm(i64 %199) #18
  %201 = bitcast i8* %200 to i32*
  br label %202

202:                                              ; preds = %185, %196
  %203 = phi i64 [ %198, %196 ], [ %190, %185 ]
  %204 = phi i64 [ %197, %196 ], [ 0, %185 ]
  %205 = phi i32* [ %201, %196 ], [ null, %185 ]
  store i32* %205, i32** %161, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 %203
  store i32* %206, i32** %163, align 8
  store i32* %206, i32** %162, align 8
  %207 = getelementptr inbounds i32, i32* %205, i64 %204
  store i32* %207, i32** %164, align 8
  call void @_ZNSt3__114__split_bufferIN3x114AtomERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer.782"* nonnull %5, i32* dereferenceable(4) %2)
  %208 = load i32*, i32** %162, align 8
  %209 = load i32*, i32** %6, align 8
  %210 = ptrtoint i32* %209 to i64
  %211 = sub i64 %4, %210
  %212 = ashr exact i64 %211, 2
  %213 = sub nsw i64 0, %212
  %214 = getelementptr inbounds i32, i32* %208, i64 %213
  store i32* %214, i32** %162, align 8
  %215 = icmp sgt i64 %211, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %202
  %217 = bitcast i32* %214 to i8*
  %218 = bitcast i32* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %211, i1 false) #17
  br label %219

219:                                              ; preds = %216, %202
  %220 = load i32*, i32** %7, align 8
  %221 = icmp eq i32* %220, %1
  br i1 %221, label %222, label %226

222:                                              ; preds = %219
  %223 = ptrtoint i32* %220 to i64
  %224 = bitcast i32** %163 to i64*
  %225 = load i64, i64* %224, align 8
  br label %275

226:                                              ; preds = %219
  %227 = load i32*, i32** %163, align 8
  %228 = getelementptr i32, i32* %220, i64 -1
  %229 = ptrtoint i32* %228 to i64
  %230 = sub i64 %229, %4
  %231 = lshr i64 %230, 2
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 3
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %245, label %235

235:                                              ; preds = %226, %235
  %236 = phi i32* [ %242, %235 ], [ %227, %226 ]
  %237 = phi i32* [ %240, %235 ], [ %1, %226 ]
  %238 = phi i64 [ %243, %235 ], [ %233, %226 ]
  %239 = load i32, i32* %237, align 4
  store i32 %239, i32* %236, align 4
  %240 = getelementptr inbounds i32, i32* %237, i64 1
  %241 = load i32*, i32** %163, align 8
  %242 = getelementptr inbounds i32, i32* %241, i64 1
  store i32* %242, i32** %163, align 8
  %243 = add i64 %238, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %235, !llvm.loop !155

245:                                              ; preds = %235, %226
  %246 = phi i32* [ undef, %226 ], [ %242, %235 ]
  %247 = phi i32* [ %227, %226 ], [ %242, %235 ]
  %248 = phi i32* [ %1, %226 ], [ %240, %235 ]
  %249 = icmp ult i64 %230, 12
  br i1 %249, label %270, label %250

250:                                              ; preds = %245, %250
  %251 = phi i32* [ %268, %250 ], [ %247, %245 ]
  %252 = phi i32* [ %266, %250 ], [ %248, %245 ]
  %253 = load i32, i32* %252, align 4
  store i32 %253, i32* %251, align 4
  %254 = getelementptr inbounds i32, i32* %252, i64 1
  %255 = load i32*, i32** %163, align 8
  %256 = getelementptr inbounds i32, i32* %255, i64 1
  store i32* %256, i32** %163, align 8
  %257 = load i32, i32* %254, align 4
  store i32 %257, i32* %256, align 4
  %258 = getelementptr inbounds i32, i32* %252, i64 2
  %259 = load i32*, i32** %163, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 1
  store i32* %260, i32** %163, align 8
  %261 = load i32, i32* %258, align 4
  store i32 %261, i32* %260, align 4
  %262 = getelementptr inbounds i32, i32* %252, i64 3
  %263 = load i32*, i32** %163, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 1
  store i32* %264, i32** %163, align 8
  %265 = load i32, i32* %262, align 4
  store i32 %265, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %252, i64 4
  %267 = load i32*, i32** %163, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 1
  store i32* %268, i32** %163, align 8
  %269 = icmp eq i32* %266, %220
  br i1 %269, label %270, label %250

270:                                              ; preds = %250, %245
  %271 = phi i32* [ %246, %245 ], [ %268, %250 ]
  %272 = ptrtoint i32* %271 to i64
  %273 = load i64, i64* %166, align 8
  %274 = bitcast i32** %163 to i64*
  br label %275

275:                                              ; preds = %222, %270
  %276 = phi i64* [ %224, %222 ], [ %274, %270 ]
  %277 = phi i64 [ %225, %222 ], [ %272, %270 ]
  %278 = phi i64 [ %223, %222 ], [ %273, %270 ]
  %279 = load i64, i64* %167, align 8
  %280 = bitcast i32** %162 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %167, align 8
  store i64 %279, i64* %280, align 8
  store i64 %277, i64* %166, align 8
  store i64 %278, i64* %276, align 8
  %282 = load i64, i64* %177, align 8
  %283 = bitcast i32** %164 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %177, align 8
  store i64 %282, i64* %283, align 8
  %285 = bitcast %"struct.std::__1::__split_buffer.782"* %5 to i64*
  store i64 %279, i64* %285, align 8
  %286 = inttoptr i64 %279 to i32*
  %287 = inttoptr i64 %278 to i32*
  %288 = icmp eq i32* %287, %286
  br i1 %288, label %296, label %289

289:                                              ; preds = %275
  %290 = getelementptr i32, i32* %287, i64 -1
  %291 = ptrtoint i32* %290 to i64
  %292 = sub i64 %291, %279
  %293 = lshr i64 %292, 2
  %294 = xor i64 %293, -1
  %295 = getelementptr i32, i32* %287, i64 %294
  store i32* %295, i32** %163, align 8
  br label %296

296:                                              ; preds = %289, %275
  %297 = icmp eq i64 %279, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %279 to i8*
  call void @_ZdlPv(i8* %299) #18
  br label %300

300:                                              ; preds = %296, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %160) #17
  br label %301

301:                                              ; preds = %17, %157, %300
  %302 = phi i32* [ %1, %17 ], [ %1, %157 ], [ %208, %300 ]
  ret i32* %302
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN3x114AtomERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer.782"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.782", %"struct.std::__1::__split_buffer.782"* %0, i64 0, i32 2
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.782", %"struct.std::__1::__split_buffer.782"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  %8 = ptrtoint i32* %6 to i64
  br i1 %7, label %9, label %229

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.782", %"struct.std::__1::__split_buffer.782"* %0, i64 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.782", %"struct.std::__1::__split_buffer.782"* %0, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp ugt i32* %11, %14
  %16 = ptrtoint i32* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint i32* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 2
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32, i32* %11, i64 %22
  %24 = ptrtoint i32* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast i32* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %12, i64 %25, i1 false) #17
  %30 = load i32*, i32** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi i32* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds i32, i32* %23, i64 %26
  store i32* %33, i32** %3, align 8
  %34 = getelementptr inbounds i32, i32* %32, i64 %22
  store i32* %34, i32** %10, align 8
  br label %229

35:                                               ; preds = %9
  %36 = bitcast i32** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.782"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 1
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 4611686018427387903
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #19
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 2
  %47 = tail call i8* @_Znwm(i64 %46) #18
  %48 = bitcast i8* %47 to i32*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds i32, i32* %48, i64 %45
  %51 = ptrtoint i32* %50 to i64
  %52 = getelementptr inbounds i32, i32* %48, i64 %41
  %53 = ptrtoint i32* %52 to i64
  %54 = ptrtoint i32* %11 to i64
  %55 = ptrtoint i32* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds i32, i32* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %219, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -4
  %62 = lshr i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 8
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = and i64 %41, -4
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -4
  %69 = lshr i64 %68, 2
  %70 = and i64 %68, -4
  %71 = add i64 %66, %70
  %72 = add i64 %71, 4
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr i32, i32* %11, i64 %74
  %76 = bitcast i32* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 9223372036854775800
  %82 = getelementptr i32, i32* %50, i64 %81
  %83 = getelementptr i32, i32* %11, i64 %81
  %84 = add nsw i64 %81, -8
  %85 = lshr exact i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 24
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i32, i32* %50, i64 %92
  %95 = getelementptr i32, i32* %11, i64 %92
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !156
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !156
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !159, !noalias !156
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !159, !noalias !156
  %104 = or i64 %92, 8
  %105 = getelementptr i32, i32* %50, i64 %104
  %106 = getelementptr i32, i32* %11, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !156
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !156
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !159, !noalias !156
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !159, !noalias !156
  %115 = or i64 %92, 16
  %116 = getelementptr i32, i32* %50, i64 %115
  %117 = getelementptr i32, i32* %11, i64 %115
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !156
  %120 = getelementptr i32, i32* %117, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !156
  %123 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %123, align 4, !alias.scope !159, !noalias !156
  %124 = getelementptr i32, i32* %116, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %125, align 4, !alias.scope !159, !noalias !156
  %126 = or i64 %92, 24
  %127 = getelementptr i32, i32* %50, i64 %126
  %128 = getelementptr i32, i32* %11, i64 %126
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !156
  %131 = getelementptr i32, i32* %128, i64 4
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4, !alias.scope !156
  %134 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %134, align 4, !alias.scope !159, !noalias !156
  %135 = getelementptr i32, i32* %127, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %136, align 4, !alias.scope !159, !noalias !156
  %137 = add i64 %92, 32
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !161

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i32, i32* %50, i64 %144
  %147 = getelementptr i32, i32* %11, i64 %144
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4, !alias.scope !156
  %150 = getelementptr i32, i32* %147, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4, !alias.scope !156
  %153 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %153, align 4, !alias.scope !159, !noalias !156
  %154 = getelementptr i32, i32* %146, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %155, align 4, !alias.scope !159, !noalias !156
  %156 = add i64 %144, 8
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !162

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %216, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi i32* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi i32* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint i32* %162 to i64
  %165 = and i64 %41, -4
  %166 = add i64 %56, %165
  %167 = add i64 %166, -4
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 2
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %161, %175
  %176 = phi i32* [ %180, %175 ], [ %162, %161 ]
  %177 = phi i32* [ %181, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %182, %175 ], [ %173, %161 ]
  %179 = load i32, i32* %177, align 4
  store i32 %179, i32* %176, align 4
  %180 = getelementptr inbounds i32, i32* %176, i64 1
  %181 = getelementptr inbounds i32, i32* %177, i64 1
  %182 = add i64 %178, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !163

184:                                              ; preds = %175, %161
  %185 = phi i32* [ %162, %161 ], [ %180, %175 ]
  %186 = phi i32* [ %163, %161 ], [ %181, %175 ]
  %187 = icmp ult i8* %169, inttoptr (i64 28 to i8*)
  br i1 %187, label %216, label %188

188:                                              ; preds = %184, %188
  %189 = phi i32* [ %213, %188 ], [ %185, %184 ]
  %190 = phi i32* [ %214, %188 ], [ %186, %184 ]
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %189, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %190, i64 1
  %194 = load i32, i32* %193, align 4
  store i32 %194, i32* %192, align 4
  %195 = getelementptr inbounds i32, i32* %189, i64 2
  %196 = getelementptr inbounds i32, i32* %190, i64 2
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %195, align 4
  %198 = getelementptr inbounds i32, i32* %189, i64 3
  %199 = getelementptr inbounds i32, i32* %190, i64 3
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %198, align 4
  %201 = getelementptr inbounds i32, i32* %189, i64 4
  %202 = getelementptr inbounds i32, i32* %190, i64 4
  %203 = load i32, i32* %202, align 4
  store i32 %203, i32* %201, align 4
  %204 = getelementptr inbounds i32, i32* %189, i64 5
  %205 = getelementptr inbounds i32, i32* %190, i64 5
  %206 = load i32, i32* %205, align 4
  store i32 %206, i32* %204, align 4
  %207 = getelementptr inbounds i32, i32* %189, i64 6
  %208 = getelementptr inbounds i32, i32* %190, i64 6
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %207, align 4
  %210 = getelementptr inbounds i32, i32* %189, i64 7
  %211 = getelementptr inbounds i32, i32* %190, i64 7
  %212 = load i32, i32* %211, align 4
  store i32 %212, i32* %210, align 4
  %213 = getelementptr inbounds i32, i32* %189, i64 8
  %214 = getelementptr inbounds i32, i32* %190, i64 8
  %215 = icmp eq i32* %58, %213
  br i1 %215, label %216, label %188, !llvm.loop !164

216:                                              ; preds = %184, %188, %159
  %217 = ptrtoint i32* %58 to i64
  %218 = load i32*, i32** %13, align 8
  br label %219

219:                                              ; preds = %44, %216
  %220 = phi i32* [ %218, %216 ], [ %14, %44 ]
  %221 = phi i64 [ %217, %216 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %222 = bitcast i32** %10 to i64*
  store i64 %51, i64* %222, align 8
  %223 = bitcast i32** %3 to i64*
  store i64 %221, i64* %223, align 8
  store i64 %53, i64* %36, align 8
  %224 = icmp eq i32* %220, null
  %225 = inttoptr i64 %221 to i32*
  br i1 %224, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast i32* %220 to i8*
  tail call void @_ZdlPv(i8* %227) #18
  %228 = load i32*, i32** %3, align 8
  br label %229

229:                                              ; preds = %226, %219, %31, %2
  %230 = phi i32* [ %228, %226 ], [ %225, %219 ], [ %33, %31 ], [ %4, %2 ]
  %231 = load i32, i32* %1, align 4
  store i32 %231, i32* %230, align 4
  %232 = load i32*, i32** %3, align 8
  %233 = getelementptr inbounds i32, i32* %232, i64 1
  store i32* %233, i32** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.72"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #17
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.72"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.72"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #19
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #19
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #18
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #17
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #17
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #18
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3x114AtomENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32*, i32*, %"struct.base::internal::flat_tree<x11::Atom, base::identity, std::__1::less<void>, std::__1::vector<x11::Atom, std::__1::allocator<x11::Atom> > >::value_compare"* dereferenceable(1), i64, i32*, i64) local_unnamed_addr #0 comdat {
  %7 = ptrtoint i32* %0 to i64
  switch i64 %3, label %14 [
    i64 0, label %400
    i64 1, label %400
    i64 2, label %8
  ]

8:                                                ; preds = %6
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = icmp ult i32 %10, %11
  br i1 %12, label %13, label %400

13:                                               ; preds = %8
  store i32 %10, i32* %0, align 4
  store i32 %11, i32* %9, align 4
  br label %400

14:                                               ; preds = %6
  %15 = icmp slt i64 %3, 129
  br i1 %15, label %16, label %58

16:                                               ; preds = %14
  %17 = icmp eq i32* %0, %1
  br i1 %17, label %400, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds i32, i32* %0, i64 1
  %20 = icmp eq i32* %19, %1
  br i1 %20, label %400, label %21

21:                                               ; preds = %18
  %22 = getelementptr i32, i32* %1, i64 -2
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %23, %7
  %25 = and i64 %24, 4
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %21
  %28 = load i32, i32* %19, align 4
  br label %29

29:                                               ; preds = %34, %27
  %30 = phi i32* [ %31, %34 ], [ %19, %27 ]
  %31 = getelementptr inbounds i32, i32* %30, i64 -1
  %32 = load i32, i32* %31, align 4
  %33 = icmp ult i32 %28, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  store i32 %32, i32* %30, align 4
  %35 = icmp eq i32* %31, %0
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %34
  %37 = phi i32* [ %30, %29 ], [ %0, %34 ]
  store i32 %28, i32* %37, align 4
  %38 = getelementptr inbounds i32, i32* %0, i64 2
  br label %39

39:                                               ; preds = %36, %21
  %40 = phi i32* [ %19, %21 ], [ %38, %36 ]
  %41 = icmp ult i64 %24, 4
  br i1 %41, label %400, label %42

42:                                               ; preds = %39, %408
  %43 = phi i32* [ %410, %408 ], [ %40, %39 ]
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32* %43, %0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42, %56
  %47 = phi i32* [ %48, %56 ], [ %43, %42 ]
  %48 = getelementptr inbounds i32, i32* %47, i64 -1
  %49 = load i32, i32* %48, align 4
  %50 = icmp ult i32 %44, %49
  br i1 %50, label %56, label %51

51:                                               ; preds = %56, %46, %42
  %52 = phi i32* [ %0, %42 ], [ %47, %46 ], [ %0, %56 ]
  store i32 %44, i32* %52, align 4
  %53 = getelementptr inbounds i32, i32* %43, i64 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32* %53, %0
  br i1 %55, label %408, label %401

56:                                               ; preds = %46
  store i32 %49, i32* %47, align 4
  %57 = icmp eq i32* %48, %0
  br i1 %57, label %51, label %46

58:                                               ; preds = %14
  %59 = lshr i64 %3, 1
  %60 = getelementptr inbounds i32, i32* %0, i64 %59
  %61 = icmp sgt i64 %3, %5
  br i1 %61, label %398, label %62

62:                                               ; preds = %58
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN3x114AtomENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE(i32* %0, i32* %60, %"struct.base::internal::flat_tree<x11::Atom, base::identity, std::__1::less<void>, std::__1::vector<x11::Atom, std::__1::allocator<x11::Atom> > >::value_compare"* dereferenceable(1) %2, i64 %59, i32* %4)
  %63 = sub nsw i64 %3, %59
  %64 = getelementptr inbounds i32, i32* %4, i64 %59
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN3x114AtomENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE(i32* %60, i32* %1, %"struct.base::internal::flat_tree<x11::Atom, base::identity, std::__1::less<void>, std::__1::vector<x11::Atom, std::__1::allocator<x11::Atom> > >::value_compare"* dereferenceable(1) %2, i64 %63, i32* %64)
  %65 = getelementptr inbounds i32, i32* %4, i64 %3
  br label %195

66:                                               ; preds = %365
  %67 = ptrtoint i32* %366 to i64
  %68 = icmp eq i32* %366, %65
  br i1 %68, label %400, label %69

69:                                               ; preds = %66
  %70 = add i64 %3, -1
  %71 = getelementptr i32, i32* %4, i64 %70
  %72 = ptrtoint i32* %71 to i64
  %73 = sub i64 %72, %67
  %74 = lshr i64 %73, 2
  %75 = add nuw nsw i64 %74, 1
  %76 = icmp ult i64 %75, 8
  br i1 %76, label %77, label %102

77:                                               ; preds = %193, %102, %69
  %78 = phi i32* [ %366, %102 ], [ %366, %69 ], [ %116, %193 ]
  %79 = phi i32* [ %368, %102 ], [ %368, %69 ], [ %117, %193 ]
  %80 = ptrtoint i32* %78 to i64
  %81 = add i64 %3, -1
  %82 = getelementptr i32, i32* %4, i64 %81
  %83 = ptrtoint i32* %82 to i64
  %84 = sub i64 %83, %80
  %85 = lshr i64 %84, 2
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 7
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %98, label %89

89:                                               ; preds = %77, %89
  %90 = phi i32* [ %94, %89 ], [ %78, %77 ]
  %91 = phi i32* [ %95, %89 ], [ %79, %77 ]
  %92 = phi i64 [ %96, %89 ], [ %87, %77 ]
  %93 = load i32, i32* %90, align 4
  store i32 %93, i32* %91, align 4
  %94 = getelementptr inbounds i32, i32* %90, i64 1
  %95 = getelementptr inbounds i32, i32* %91, i64 1
  %96 = add i64 %92, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %89, !llvm.loop !165

98:                                               ; preds = %89, %77
  %99 = phi i32* [ %78, %77 ], [ %94, %89 ]
  %100 = phi i32* [ %79, %77 ], [ %95, %89 ]
  %101 = icmp ult i64 %84, 28
  br i1 %101, label %400, label %370

102:                                              ; preds = %69
  %103 = add i64 %3, -1
  %104 = getelementptr i32, i32* %4, i64 %103
  %105 = ptrtoint i32* %104 to i64
  %106 = sub i64 %105, %67
  %107 = lshr i64 %106, 2
  %108 = add nuw nsw i64 %107, 1
  %109 = getelementptr i32, i32* %368, i64 %108
  %110 = getelementptr i32, i32* %366, i64 %108
  %111 = icmp ult i32* %368, %110
  %112 = icmp ult i32* %366, %109
  %113 = and i1 %111, %112
  br i1 %113, label %77, label %114

114:                                              ; preds = %102
  %115 = and i64 %75, 9223372036854775800
  %116 = getelementptr i32, i32* %366, i64 %115
  %117 = getelementptr i32, i32* %368, i64 %115
  %118 = add nsw i64 %115, -8
  %119 = lshr exact i64 %118, 3
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 3
  %122 = icmp ult i64 %118, 24
  br i1 %122, label %174, label %123

123:                                              ; preds = %114
  %124 = sub nsw i64 %120, %121
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi i64 [ 0, %123 ], [ %171, %125 ]
  %127 = phi i64 [ %124, %123 ], [ %172, %125 ]
  %128 = getelementptr i32, i32* %366, i64 %126
  %129 = getelementptr i32, i32* %368, i64 %126
  %130 = bitcast i32* %128 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4, !alias.scope !166
  %132 = getelementptr i32, i32* %128, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !166
  %135 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %131, <4 x i32>* %135, align 4, !alias.scope !169, !noalias !166
  %136 = getelementptr i32, i32* %129, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %137, align 4, !alias.scope !169, !noalias !166
  %138 = or i64 %126, 8
  %139 = getelementptr i32, i32* %366, i64 %138
  %140 = getelementptr i32, i32* %368, i64 %138
  %141 = bitcast i32* %139 to <4 x i32>*
  %142 = load <4 x i32>, <4 x i32>* %141, align 4, !alias.scope !166
  %143 = getelementptr i32, i32* %139, i64 4
  %144 = bitcast i32* %143 to <4 x i32>*
  %145 = load <4 x i32>, <4 x i32>* %144, align 4, !alias.scope !166
  %146 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %146, align 4, !alias.scope !169, !noalias !166
  %147 = getelementptr i32, i32* %140, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %145, <4 x i32>* %148, align 4, !alias.scope !169, !noalias !166
  %149 = or i64 %126, 16
  %150 = getelementptr i32, i32* %366, i64 %149
  %151 = getelementptr i32, i32* %368, i64 %149
  %152 = bitcast i32* %150 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !166
  %154 = getelementptr i32, i32* %150, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !166
  %157 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %157, align 4, !alias.scope !169, !noalias !166
  %158 = getelementptr i32, i32* %151, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %159, align 4, !alias.scope !169, !noalias !166
  %160 = or i64 %126, 24
  %161 = getelementptr i32, i32* %366, i64 %160
  %162 = getelementptr i32, i32* %368, i64 %160
  %163 = bitcast i32* %161 to <4 x i32>*
  %164 = load <4 x i32>, <4 x i32>* %163, align 4, !alias.scope !166
  %165 = getelementptr i32, i32* %161, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  %167 = load <4 x i32>, <4 x i32>* %166, align 4, !alias.scope !166
  %168 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %164, <4 x i32>* %168, align 4, !alias.scope !169, !noalias !166
  %169 = getelementptr i32, i32* %162, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %167, <4 x i32>* %170, align 4, !alias.scope !169, !noalias !166
  %171 = add i64 %126, 32
  %172 = add i64 %127, -4
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %125, !llvm.loop !171

174:                                              ; preds = %125, %114
  %175 = phi i64 [ 0, %114 ], [ %171, %125 ]
  %176 = icmp eq i64 %121, 0
  br i1 %176, label %193, label %177

177:                                              ; preds = %174, %177
  %178 = phi i64 [ %190, %177 ], [ %175, %174 ]
  %179 = phi i64 [ %191, %177 ], [ %121, %174 ]
  %180 = getelementptr i32, i32* %366, i64 %178
  %181 = getelementptr i32, i32* %368, i64 %178
  %182 = bitcast i32* %180 to <4 x i32>*
  %183 = load <4 x i32>, <4 x i32>* %182, align 4, !alias.scope !166
  %184 = getelementptr i32, i32* %180, i64 4
  %185 = bitcast i32* %184 to <4 x i32>*
  %186 = load <4 x i32>, <4 x i32>* %185, align 4, !alias.scope !166
  %187 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> %183, <4 x i32>* %187, align 4, !alias.scope !169, !noalias !166
  %188 = getelementptr i32, i32* %181, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> %186, <4 x i32>* %189, align 4, !alias.scope !169, !noalias !166
  %190 = add i64 %178, 8
  %191 = add i64 %179, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %177, !llvm.loop !172

193:                                              ; preds = %177, %174
  %194 = icmp eq i64 %75, %115
  br i1 %194, label %400, label %77

195:                                              ; preds = %62, %365
  %196 = phi i32* [ %367, %365 ], [ %4, %62 ]
  %197 = phi i32* [ %366, %365 ], [ %64, %62 ]
  %198 = phi i32* [ %368, %365 ], [ %0, %62 ]
  %199 = icmp eq i32* %197, %65
  br i1 %199, label %200, label %357

200:                                              ; preds = %195
  %201 = ptrtoint i32* %196 to i64
  %202 = icmp eq i32* %196, %64
  br i1 %202, label %400, label %203

203:                                              ; preds = %200
  %204 = add nsw i64 %59, -1
  %205 = getelementptr i32, i32* %4, i64 %204
  %206 = ptrtoint i32* %205 to i64
  %207 = sub i64 %206, %201
  %208 = lshr i64 %207, 2
  %209 = add nuw nsw i64 %208, 1
  %210 = icmp ult i64 %209, 8
  br i1 %210, label %304, label %211

211:                                              ; preds = %203
  %212 = add nsw i64 %59, -1
  %213 = getelementptr i32, i32* %4, i64 %212
  %214 = ptrtoint i32* %213 to i64
  %215 = sub i64 %214, %201
  %216 = lshr i64 %215, 2
  %217 = add nuw nsw i64 %216, 1
  %218 = getelementptr i32, i32* %198, i64 %217
  %219 = getelementptr i32, i32* %196, i64 %217
  %220 = icmp ult i32* %198, %219
  %221 = icmp ult i32* %196, %218
  %222 = and i1 %220, %221
  br i1 %222, label %304, label %223

223:                                              ; preds = %211
  %224 = and i64 %209, 9223372036854775800
  %225 = getelementptr i32, i32* %196, i64 %224
  %226 = getelementptr i32, i32* %198, i64 %224
  %227 = add nsw i64 %224, -8
  %228 = lshr exact i64 %227, 3
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 3
  %231 = icmp ult i64 %227, 24
  br i1 %231, label %283, label %232

232:                                              ; preds = %223
  %233 = sub nsw i64 %229, %230
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %280, %234 ]
  %236 = phi i64 [ %233, %232 ], [ %281, %234 ]
  %237 = getelementptr i32, i32* %196, i64 %235
  %238 = getelementptr i32, i32* %198, i64 %235
  %239 = bitcast i32* %237 to <4 x i32>*
  %240 = load <4 x i32>, <4 x i32>* %239, align 4, !alias.scope !173
  %241 = getelementptr i32, i32* %237, i64 4
  %242 = bitcast i32* %241 to <4 x i32>*
  %243 = load <4 x i32>, <4 x i32>* %242, align 4, !alias.scope !173
  %244 = bitcast i32* %238 to <4 x i32>*
  store <4 x i32> %240, <4 x i32>* %244, align 4, !alias.scope !176, !noalias !173
  %245 = getelementptr i32, i32* %238, i64 4
  %246 = bitcast i32* %245 to <4 x i32>*
  store <4 x i32> %243, <4 x i32>* %246, align 4, !alias.scope !176, !noalias !173
  %247 = or i64 %235, 8
  %248 = getelementptr i32, i32* %196, i64 %247
  %249 = getelementptr i32, i32* %198, i64 %247
  %250 = bitcast i32* %248 to <4 x i32>*
  %251 = load <4 x i32>, <4 x i32>* %250, align 4, !alias.scope !173
  %252 = getelementptr i32, i32* %248, i64 4
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4, !alias.scope !173
  %255 = bitcast i32* %249 to <4 x i32>*
  store <4 x i32> %251, <4 x i32>* %255, align 4, !alias.scope !176, !noalias !173
  %256 = getelementptr i32, i32* %249, i64 4
  %257 = bitcast i32* %256 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %257, align 4, !alias.scope !176, !noalias !173
  %258 = or i64 %235, 16
  %259 = getelementptr i32, i32* %196, i64 %258
  %260 = getelementptr i32, i32* %198, i64 %258
  %261 = bitcast i32* %259 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4, !alias.scope !173
  %263 = getelementptr i32, i32* %259, i64 4
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4, !alias.scope !173
  %266 = bitcast i32* %260 to <4 x i32>*
  store <4 x i32> %262, <4 x i32>* %266, align 4, !alias.scope !176, !noalias !173
  %267 = getelementptr i32, i32* %260, i64 4
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> %265, <4 x i32>* %268, align 4, !alias.scope !176, !noalias !173
  %269 = or i64 %235, 24
  %270 = getelementptr i32, i32* %196, i64 %269
  %271 = getelementptr i32, i32* %198, i64 %269
  %272 = bitcast i32* %270 to <4 x i32>*
  %273 = load <4 x i32>, <4 x i32>* %272, align 4, !alias.scope !173
  %274 = getelementptr i32, i32* %270, i64 4
  %275 = bitcast i32* %274 to <4 x i32>*
  %276 = load <4 x i32>, <4 x i32>* %275, align 4, !alias.scope !173
  %277 = bitcast i32* %271 to <4 x i32>*
  store <4 x i32> %273, <4 x i32>* %277, align 4, !alias.scope !176, !noalias !173
  %278 = getelementptr i32, i32* %271, i64 4
  %279 = bitcast i32* %278 to <4 x i32>*
  store <4 x i32> %276, <4 x i32>* %279, align 4, !alias.scope !176, !noalias !173
  %280 = add i64 %235, 32
  %281 = add i64 %236, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %234, !llvm.loop !178

283:                                              ; preds = %234, %223
  %284 = phi i64 [ 0, %223 ], [ %280, %234 ]
  %285 = icmp eq i64 %230, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %299, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %300, %286 ], [ %230, %283 ]
  %289 = getelementptr i32, i32* %196, i64 %287
  %290 = getelementptr i32, i32* %198, i64 %287
  %291 = bitcast i32* %289 to <4 x i32>*
  %292 = load <4 x i32>, <4 x i32>* %291, align 4, !alias.scope !173
  %293 = getelementptr i32, i32* %289, i64 4
  %294 = bitcast i32* %293 to <4 x i32>*
  %295 = load <4 x i32>, <4 x i32>* %294, align 4, !alias.scope !173
  %296 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %292, <4 x i32>* %296, align 4, !alias.scope !176, !noalias !173
  %297 = getelementptr i32, i32* %290, i64 4
  %298 = bitcast i32* %297 to <4 x i32>*
  store <4 x i32> %295, <4 x i32>* %298, align 4, !alias.scope !176, !noalias !173
  %299 = add i64 %287, 8
  %300 = add i64 %288, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %286, !llvm.loop !179

302:                                              ; preds = %286, %283
  %303 = icmp eq i64 %209, %224
  br i1 %303, label %400, label %304

304:                                              ; preds = %302, %211, %203
  %305 = phi i32* [ %196, %211 ], [ %196, %203 ], [ %225, %302 ]
  %306 = phi i32* [ %198, %211 ], [ %198, %203 ], [ %226, %302 ]
  %307 = ptrtoint i32* %305 to i64
  %308 = add nsw i64 %59, -1
  %309 = getelementptr i32, i32* %4, i64 %308
  %310 = ptrtoint i32* %309 to i64
  %311 = sub i64 %310, %307
  %312 = lshr i64 %311, 2
  %313 = add nuw nsw i64 %312, 1
  %314 = and i64 %313, 7
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %325, label %316

316:                                              ; preds = %304, %316
  %317 = phi i32* [ %321, %316 ], [ %305, %304 ]
  %318 = phi i32* [ %322, %316 ], [ %306, %304 ]
  %319 = phi i64 [ %323, %316 ], [ %314, %304 ]
  %320 = load i32, i32* %317, align 4
  store i32 %320, i32* %318, align 4
  %321 = getelementptr inbounds i32, i32* %317, i64 1
  %322 = getelementptr inbounds i32, i32* %318, i64 1
  %323 = add i64 %319, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %316, !llvm.loop !180

325:                                              ; preds = %316, %304
  %326 = phi i32* [ %305, %304 ], [ %321, %316 ]
  %327 = phi i32* [ %306, %304 ], [ %322, %316 ]
  %328 = icmp ult i64 %311, 28
  br i1 %328, label %400, label %329

329:                                              ; preds = %325, %329
  %330 = phi i32* [ %354, %329 ], [ %326, %325 ]
  %331 = phi i32* [ %355, %329 ], [ %327, %325 ]
  %332 = load i32, i32* %330, align 4
  store i32 %332, i32* %331, align 4
  %333 = getelementptr inbounds i32, i32* %330, i64 1
  %334 = getelementptr inbounds i32, i32* %331, i64 1
  %335 = load i32, i32* %333, align 4
  store i32 %335, i32* %334, align 4
  %336 = getelementptr inbounds i32, i32* %330, i64 2
  %337 = getelementptr inbounds i32, i32* %331, i64 2
  %338 = load i32, i32* %336, align 4
  store i32 %338, i32* %337, align 4
  %339 = getelementptr inbounds i32, i32* %330, i64 3
  %340 = getelementptr inbounds i32, i32* %331, i64 3
  %341 = load i32, i32* %339, align 4
  store i32 %341, i32* %340, align 4
  %342 = getelementptr inbounds i32, i32* %330, i64 4
  %343 = getelementptr inbounds i32, i32* %331, i64 4
  %344 = load i32, i32* %342, align 4
  store i32 %344, i32* %343, align 4
  %345 = getelementptr inbounds i32, i32* %330, i64 5
  %346 = getelementptr inbounds i32, i32* %331, i64 5
  %347 = load i32, i32* %345, align 4
  store i32 %347, i32* %346, align 4
  %348 = getelementptr inbounds i32, i32* %330, i64 6
  %349 = getelementptr inbounds i32, i32* %331, i64 6
  %350 = load i32, i32* %348, align 4
  store i32 %350, i32* %349, align 4
  %351 = getelementptr inbounds i32, i32* %330, i64 7
  %352 = getelementptr inbounds i32, i32* %331, i64 7
  %353 = load i32, i32* %351, align 4
  store i32 %353, i32* %352, align 4
  %354 = getelementptr inbounds i32, i32* %330, i64 8
  %355 = getelementptr inbounds i32, i32* %331, i64 8
  %356 = icmp eq i32* %354, %64
  br i1 %356, label %400, label %329, !llvm.loop !181

357:                                              ; preds = %195
  %358 = load i32, i32* %197, align 4
  %359 = load i32, i32* %196, align 4
  %360 = icmp ult i32 %358, %359
  br i1 %360, label %361, label %363

361:                                              ; preds = %357
  store i32 %358, i32* %198, align 4
  %362 = getelementptr inbounds i32, i32* %197, i64 1
  br label %365

363:                                              ; preds = %357
  store i32 %359, i32* %198, align 4
  %364 = getelementptr inbounds i32, i32* %196, i64 1
  br label %365

365:                                              ; preds = %363, %361
  %366 = phi i32* [ %362, %361 ], [ %197, %363 ]
  %367 = phi i32* [ %196, %361 ], [ %364, %363 ]
  %368 = getelementptr inbounds i32, i32* %198, i64 1
  %369 = icmp eq i32* %367, %64
  br i1 %369, label %66, label %195

370:                                              ; preds = %98, %370
  %371 = phi i32* [ %395, %370 ], [ %99, %98 ]
  %372 = phi i32* [ %396, %370 ], [ %100, %98 ]
  %373 = load i32, i32* %371, align 4
  store i32 %373, i32* %372, align 4
  %374 = getelementptr inbounds i32, i32* %371, i64 1
  %375 = getelementptr inbounds i32, i32* %372, i64 1
  %376 = load i32, i32* %374, align 4
  store i32 %376, i32* %375, align 4
  %377 = getelementptr inbounds i32, i32* %371, i64 2
  %378 = getelementptr inbounds i32, i32* %372, i64 2
  %379 = load i32, i32* %377, align 4
  store i32 %379, i32* %378, align 4
  %380 = getelementptr inbounds i32, i32* %371, i64 3
  %381 = getelementptr inbounds i32, i32* %372, i64 3
  %382 = load i32, i32* %380, align 4
  store i32 %382, i32* %381, align 4
  %383 = getelementptr inbounds i32, i32* %371, i64 4
  %384 = getelementptr inbounds i32, i32* %372, i64 4
  %385 = load i32, i32* %383, align 4
  store i32 %385, i32* %384, align 4
  %386 = getelementptr inbounds i32, i32* %371, i64 5
  %387 = getelementptr inbounds i32, i32* %372, i64 5
  %388 = load i32, i32* %386, align 4
  store i32 %388, i32* %387, align 4
  %389 = getelementptr inbounds i32, i32* %371, i64 6
  %390 = getelementptr inbounds i32, i32* %372, i64 6
  %391 = load i32, i32* %389, align 4
  store i32 %391, i32* %390, align 4
  %392 = getelementptr inbounds i32, i32* %371, i64 7
  %393 = getelementptr inbounds i32, i32* %372, i64 7
  %394 = load i32, i32* %392, align 4
  store i32 %394, i32* %393, align 4
  %395 = getelementptr inbounds i32, i32* %371, i64 8
  %396 = getelementptr inbounds i32, i32* %372, i64 8
  %397 = icmp eq i32* %395, %65
  br i1 %397, label %400, label %370, !llvm.loop !182

398:                                              ; preds = %58
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3x114AtomENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32* %0, i32* %60, %"struct.base::internal::flat_tree<x11::Atom, base::identity, std::__1::less<void>, std::__1::vector<x11::Atom, std::__1::allocator<x11::Atom> > >::value_compare"* dereferenceable(1) %2, i64 %59, i32* %4, i64 %5)
  %399 = sub nsw i64 %3, %59
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3x114AtomENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32* %60, i32* %1, %"struct.base::internal::flat_tree<x11::Atom, base::identity, std::__1::less<void>, std::__1::vector<x11::Atom, std::__1::allocator<x11::Atom> > >::value_compare"* dereferenceable(1) %2, i64 %399, i32* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3x114AtomENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(i32* %0, i32* %60, i32* %1, %"struct.base::internal::flat_tree<x11::Atom, base::identity, std::__1::less<void>, std::__1::vector<x11::Atom, std::__1::allocator<x11::Atom> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64 %399, i32* %4, i64 %5)
  ret void

400:                                              ; preds = %98, %370, %325, %329, %39, %408, %193, %302, %200, %66, %18, %16, %8, %13, %6, %6
  ret void

401:                                              ; preds = %51, %406
  %402 = phi i32* [ %403, %406 ], [ %53, %51 ]
  %403 = getelementptr inbounds i32, i32* %402, i64 -1
  %404 = load i32, i32* %403, align 4
  %405 = icmp ult i32 %54, %404
  br i1 %405, label %406, label %408

406:                                              ; preds = %401
  store i32 %404, i32* %402, align 4
  %407 = icmp eq i32* %403, %0
  br i1 %407, label %408, label %401

408:                                              ; preds = %401, %406, %51
  %409 = phi i32* [ %0, %51 ], [ %402, %401 ], [ %0, %406 ]
  store i32 %54, i32* %409, align 4
  %410 = getelementptr inbounds i32, i32* %43, i64 2
  %411 = icmp eq i32* %410, %1
  br i1 %411, label %400, label %42
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN3x114AtomENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE(i32*, i32*, %"struct.base::internal::flat_tree<x11::Atom, base::identity, std::__1::less<void>, std::__1::vector<x11::Atom, std::__1::allocator<x11::Atom> > >::value_compare"* dereferenceable(1), i64, i32*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %19 [
    i64 0, label %390
    i64 1, label %6
    i64 2, label %8
  ]

6:                                                ; preds = %5
  %7 = load i32, i32* %0, align 4
  store i32 %7, i32* %4, align 4
  br label %390

8:                                                ; preds = %5
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = icmp ult i32 %10, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  store i32 %10, i32* %4, align 4
  %14 = getelementptr inbounds i32, i32* %4, i64 1
  %15 = load i32, i32* %0, align 4
  store i32 %15, i32* %14, align 4
  br label %390

16:                                               ; preds = %8
  store i32 %11, i32* %4, align 4
  %17 = getelementptr inbounds i32, i32* %4, i64 1
  %18 = load i32, i32* %9, align 4
  store i32 %18, i32* %17, align 4
  br label %390

19:                                               ; preds = %5
  %20 = icmp slt i64 %3, 9
  br i1 %20, label %21, label %53

21:                                               ; preds = %19
  %22 = icmp eq i32* %0, %1
  br i1 %22, label %390, label %23

23:                                               ; preds = %21
  %24 = load i32, i32* %0, align 4
  store i32 %24, i32* %4, align 4
  %25 = getelementptr inbounds i32, i32* %0, i64 1
  %26 = icmp eq i32* %25, %1
  br i1 %26, label %390, label %27

27:                                               ; preds = %23, %51
  %28 = phi i32 [ %52, %51 ], [ %24, %23 ]
  %29 = phi i32* [ %49, %51 ], [ %25, %23 ]
  %30 = phi i32* [ %31, %51 ], [ %4, %23 ]
  %31 = getelementptr inbounds i32, i32* %30, i64 1
  %32 = load i32, i32* %29, align 4
  %33 = icmp ult i32 %32, %28
  br i1 %33, label %34, label %47

34:                                               ; preds = %27
  store i32 %28, i32* %31, align 4
  %35 = icmp eq i32* %30, %4
  br i1 %35, label %44, label %36

36:                                               ; preds = %34, %42
  %37 = phi i32* [ %38, %42 ], [ %30, %34 ]
  %38 = getelementptr inbounds i32, i32* %37, i64 -1
  %39 = load i32, i32* %29, align 4
  %40 = load i32, i32* %38, align 4
  %41 = icmp ult i32 %39, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  store i32 %40, i32* %37, align 4
  %43 = icmp eq i32* %38, %4
  br i1 %43, label %44, label %36

44:                                               ; preds = %42, %36, %34
  %45 = phi i32* [ %4, %34 ], [ %37, %36 ], [ %4, %42 ]
  %46 = load i32, i32* %29, align 4
  store i32 %46, i32* %45, align 4
  br label %48

47:                                               ; preds = %27
  store i32 %32, i32* %31, align 4
  br label %48

48:                                               ; preds = %47, %44
  %49 = getelementptr inbounds i32, i32* %29, i64 1
  %50 = icmp eq i32* %49, %1
  br i1 %50, label %390, label %51

51:                                               ; preds = %48
  %52 = load i32, i32* %31, align 4
  br label %27

53:                                               ; preds = %19
  %54 = lshr i64 %3, 1
  %55 = getelementptr inbounds i32, i32* %0, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3x114AtomENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32* %0, i32* %55, %"struct.base::internal::flat_tree<x11::Atom, base::identity, std::__1::less<void>, std::__1::vector<x11::Atom, std::__1::allocator<x11::Atom> > >::value_compare"* dereferenceable(1) %2, i64 %54, i32* %4, i64 %54)
  %56 = sub nsw i64 %3, %54
  %57 = getelementptr inbounds i32, i32* %4, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3x114AtomENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32* %55, i32* %1, %"struct.base::internal::flat_tree<x11::Atom, base::identity, std::__1::less<void>, std::__1::vector<x11::Atom, std::__1::allocator<x11::Atom> > >::value_compare"* dereferenceable(1) %2, i64 %56, i32* %57, i64 %56)
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %59, label %215

59:                                               ; preds = %385, %53
  %60 = phi i32* [ %55, %53 ], [ %386, %385 ]
  %61 = phi i32* [ %4, %53 ], [ %388, %385 ]
  %62 = ptrtoint i32* %60 to i64
  %63 = icmp eq i32* %60, %1
  br i1 %63, label %390, label %64

64:                                               ; preds = %59
  %65 = getelementptr i32, i32* %1, i64 -1
  %66 = ptrtoint i32* %65 to i64
  %67 = sub i64 %66, %62
  %68 = lshr i64 %67, 2
  %69 = add nuw nsw i64 %68, 1
  %70 = icmp ult i64 %69, 8
  br i1 %70, label %163, label %71

71:                                               ; preds = %64
  %72 = getelementptr i32, i32* %1, i64 -1
  %73 = ptrtoint i32* %72 to i64
  %74 = sub i64 %73, %62
  %75 = lshr i64 %74, 2
  %76 = add nuw nsw i64 %75, 1
  %77 = getelementptr i32, i32* %61, i64 %76
  %78 = getelementptr i32, i32* %60, i64 %76
  %79 = icmp ult i32* %61, %78
  %80 = icmp ult i32* %60, %77
  %81 = and i1 %79, %80
  br i1 %81, label %163, label %82

82:                                               ; preds = %71
  %83 = and i64 %69, 9223372036854775800
  %84 = getelementptr i32, i32* %61, i64 %83
  %85 = getelementptr i32, i32* %60, i64 %83
  %86 = add nsw i64 %83, -8
  %87 = lshr exact i64 %86, 3
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 3
  %90 = icmp ult i64 %86, 24
  br i1 %90, label %142, label %91

91:                                               ; preds = %82
  %92 = sub nsw i64 %88, %89
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i64 [ 0, %91 ], [ %139, %93 ]
  %95 = phi i64 [ %92, %91 ], [ %140, %93 ]
  %96 = getelementptr i32, i32* %61, i64 %94
  %97 = getelementptr i32, i32* %60, i64 %94
  %98 = bitcast i32* %97 to <4 x i32>*
  %99 = load <4 x i32>, <4 x i32>* %98, align 4, !alias.scope !183
  %100 = getelementptr i32, i32* %97, i64 4
  %101 = bitcast i32* %100 to <4 x i32>*
  %102 = load <4 x i32>, <4 x i32>* %101, align 4, !alias.scope !183
  %103 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %103, align 4, !alias.scope !186, !noalias !183
  %104 = getelementptr i32, i32* %96, i64 4
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %105, align 4, !alias.scope !186, !noalias !183
  %106 = or i64 %94, 8
  %107 = getelementptr i32, i32* %61, i64 %106
  %108 = getelementptr i32, i32* %60, i64 %106
  %109 = bitcast i32* %108 to <4 x i32>*
  %110 = load <4 x i32>, <4 x i32>* %109, align 4, !alias.scope !183
  %111 = getelementptr i32, i32* %108, i64 4
  %112 = bitcast i32* %111 to <4 x i32>*
  %113 = load <4 x i32>, <4 x i32>* %112, align 4, !alias.scope !183
  %114 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> %110, <4 x i32>* %114, align 4, !alias.scope !186, !noalias !183
  %115 = getelementptr i32, i32* %107, i64 4
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %113, <4 x i32>* %116, align 4, !alias.scope !186, !noalias !183
  %117 = or i64 %94, 16
  %118 = getelementptr i32, i32* %61, i64 %117
  %119 = getelementptr i32, i32* %60, i64 %117
  %120 = bitcast i32* %119 to <4 x i32>*
  %121 = load <4 x i32>, <4 x i32>* %120, align 4, !alias.scope !183
  %122 = getelementptr i32, i32* %119, i64 4
  %123 = bitcast i32* %122 to <4 x i32>*
  %124 = load <4 x i32>, <4 x i32>* %123, align 4, !alias.scope !183
  %125 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %121, <4 x i32>* %125, align 4, !alias.scope !186, !noalias !183
  %126 = getelementptr i32, i32* %118, i64 4
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %124, <4 x i32>* %127, align 4, !alias.scope !186, !noalias !183
  %128 = or i64 %94, 24
  %129 = getelementptr i32, i32* %61, i64 %128
  %130 = getelementptr i32, i32* %60, i64 %128
  %131 = bitcast i32* %130 to <4 x i32>*
  %132 = load <4 x i32>, <4 x i32>* %131, align 4, !alias.scope !183
  %133 = getelementptr i32, i32* %130, i64 4
  %134 = bitcast i32* %133 to <4 x i32>*
  %135 = load <4 x i32>, <4 x i32>* %134, align 4, !alias.scope !183
  %136 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %132, <4 x i32>* %136, align 4, !alias.scope !186, !noalias !183
  %137 = getelementptr i32, i32* %129, i64 4
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> %135, <4 x i32>* %138, align 4, !alias.scope !186, !noalias !183
  %139 = add i64 %94, 32
  %140 = add i64 %95, -4
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %93, !llvm.loop !188

142:                                              ; preds = %93, %82
  %143 = phi i64 [ 0, %82 ], [ %139, %93 ]
  %144 = icmp eq i64 %89, 0
  br i1 %144, label %161, label %145

145:                                              ; preds = %142, %145
  %146 = phi i64 [ %158, %145 ], [ %143, %142 ]
  %147 = phi i64 [ %159, %145 ], [ %89, %142 ]
  %148 = getelementptr i32, i32* %61, i64 %146
  %149 = getelementptr i32, i32* %60, i64 %146
  %150 = bitcast i32* %149 to <4 x i32>*
  %151 = load <4 x i32>, <4 x i32>* %150, align 4, !alias.scope !183
  %152 = getelementptr i32, i32* %149, i64 4
  %153 = bitcast i32* %152 to <4 x i32>*
  %154 = load <4 x i32>, <4 x i32>* %153, align 4, !alias.scope !183
  %155 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %151, <4 x i32>* %155, align 4, !alias.scope !186, !noalias !183
  %156 = getelementptr i32, i32* %148, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %157, align 4, !alias.scope !186, !noalias !183
  %158 = add i64 %146, 8
  %159 = add i64 %147, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %145, !llvm.loop !189

161:                                              ; preds = %145, %142
  %162 = icmp eq i64 %69, %83
  br i1 %162, label %390, label %163

163:                                              ; preds = %161, %71, %64
  %164 = phi i32* [ %61, %71 ], [ %61, %64 ], [ %84, %161 ]
  %165 = phi i32* [ %60, %71 ], [ %60, %64 ], [ %85, %161 ]
  %166 = ptrtoint i32* %165 to i64
  %167 = getelementptr i32, i32* %1, i64 -1
  %168 = ptrtoint i32* %167 to i64
  %169 = sub i64 %168, %166
  %170 = lshr i64 %169, 2
  %171 = add nuw nsw i64 %170, 1
  %172 = and i64 %171, 7
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %183, label %174

174:                                              ; preds = %163, %174
  %175 = phi i32* [ %180, %174 ], [ %164, %163 ]
  %176 = phi i32* [ %179, %174 ], [ %165, %163 ]
  %177 = phi i64 [ %181, %174 ], [ %172, %163 ]
  %178 = load i32, i32* %176, align 4
  store i32 %178, i32* %175, align 4
  %179 = getelementptr inbounds i32, i32* %176, i64 1
  %180 = getelementptr inbounds i32, i32* %175, i64 1
  %181 = add i64 %177, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %174, !llvm.loop !190

183:                                              ; preds = %174, %163
  %184 = phi i32* [ %164, %163 ], [ %180, %174 ]
  %185 = phi i32* [ %165, %163 ], [ %179, %174 ]
  %186 = icmp ult i64 %169, 28
  br i1 %186, label %390, label %187

187:                                              ; preds = %183, %187
  %188 = phi i32* [ %213, %187 ], [ %184, %183 ]
  %189 = phi i32* [ %212, %187 ], [ %185, %183 ]
  %190 = load i32, i32* %189, align 4
  store i32 %190, i32* %188, align 4
  %191 = getelementptr inbounds i32, i32* %189, i64 1
  %192 = getelementptr inbounds i32, i32* %188, i64 1
  %193 = load i32, i32* %191, align 4
  store i32 %193, i32* %192, align 4
  %194 = getelementptr inbounds i32, i32* %189, i64 2
  %195 = getelementptr inbounds i32, i32* %188, i64 2
  %196 = load i32, i32* %194, align 4
  store i32 %196, i32* %195, align 4
  %197 = getelementptr inbounds i32, i32* %189, i64 3
  %198 = getelementptr inbounds i32, i32* %188, i64 3
  %199 = load i32, i32* %197, align 4
  store i32 %199, i32* %198, align 4
  %200 = getelementptr inbounds i32, i32* %189, i64 4
  %201 = getelementptr inbounds i32, i32* %188, i64 4
  %202 = load i32, i32* %200, align 4
  store i32 %202, i32* %201, align 4
  %203 = getelementptr inbounds i32, i32* %189, i64 5
  %204 = getelementptr inbounds i32, i32* %188, i64 5
  %205 = load i32, i32* %203, align 4
  store i32 %205, i32* %204, align 4
  %206 = getelementptr inbounds i32, i32* %189, i64 6
  %207 = getelementptr inbounds i32, i32* %188, i64 6
  %208 = load i32, i32* %206, align 4
  store i32 %208, i32* %207, align 4
  %209 = getelementptr inbounds i32, i32* %189, i64 7
  %210 = getelementptr inbounds i32, i32* %188, i64 7
  %211 = load i32, i32* %209, align 4
  store i32 %211, i32* %210, align 4
  %212 = getelementptr inbounds i32, i32* %189, i64 8
  %213 = getelementptr inbounds i32, i32* %188, i64 8
  %214 = icmp eq i32* %212, %1
  br i1 %214, label %390, label %187, !llvm.loop !191

215:                                              ; preds = %53, %385
  %216 = phi i32* [ %388, %385 ], [ %4, %53 ]
  %217 = phi i32* [ %387, %385 ], [ %0, %53 ]
  %218 = phi i32* [ %386, %385 ], [ %55, %53 ]
  %219 = icmp eq i32* %218, %1
  br i1 %219, label %220, label %377

220:                                              ; preds = %215
  %221 = ptrtoint i32* %217 to i64
  %222 = icmp eq i32* %217, %55
  br i1 %222, label %390, label %223

223:                                              ; preds = %220
  %224 = add nsw i64 %54, -1
  %225 = getelementptr i32, i32* %0, i64 %224
  %226 = ptrtoint i32* %225 to i64
  %227 = sub i64 %226, %221
  %228 = lshr i64 %227, 2
  %229 = add nuw nsw i64 %228, 1
  %230 = icmp ult i64 %229, 8
  br i1 %230, label %324, label %231

231:                                              ; preds = %223
  %232 = add nsw i64 %54, -1
  %233 = getelementptr i32, i32* %0, i64 %232
  %234 = ptrtoint i32* %233 to i64
  %235 = sub i64 %234, %221
  %236 = lshr i64 %235, 2
  %237 = add nuw nsw i64 %236, 1
  %238 = getelementptr i32, i32* %216, i64 %237
  %239 = getelementptr i32, i32* %217, i64 %237
  %240 = icmp ult i32* %216, %239
  %241 = icmp ult i32* %217, %238
  %242 = and i1 %240, %241
  br i1 %242, label %324, label %243

243:                                              ; preds = %231
  %244 = and i64 %229, 9223372036854775800
  %245 = getelementptr i32, i32* %216, i64 %244
  %246 = getelementptr i32, i32* %217, i64 %244
  %247 = add nsw i64 %244, -8
  %248 = lshr exact i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp ult i64 %247, 24
  br i1 %251, label %303, label %252

252:                                              ; preds = %243
  %253 = sub nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %300, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %301, %254 ]
  %257 = getelementptr i32, i32* %216, i64 %255
  %258 = getelementptr i32, i32* %217, i64 %255
  %259 = bitcast i32* %258 to <4 x i32>*
  %260 = load <4 x i32>, <4 x i32>* %259, align 4, !alias.scope !192
  %261 = getelementptr i32, i32* %258, i64 4
  %262 = bitcast i32* %261 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !192
  %264 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %260, <4 x i32>* %264, align 4, !alias.scope !195, !noalias !192
  %265 = getelementptr i32, i32* %257, i64 4
  %266 = bitcast i32* %265 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %266, align 4, !alias.scope !195, !noalias !192
  %267 = or i64 %255, 8
  %268 = getelementptr i32, i32* %216, i64 %267
  %269 = getelementptr i32, i32* %217, i64 %267
  %270 = bitcast i32* %269 to <4 x i32>*
  %271 = load <4 x i32>, <4 x i32>* %270, align 4, !alias.scope !192
  %272 = getelementptr i32, i32* %269, i64 4
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4, !alias.scope !192
  %275 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %271, <4 x i32>* %275, align 4, !alias.scope !195, !noalias !192
  %276 = getelementptr i32, i32* %268, i64 4
  %277 = bitcast i32* %276 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %277, align 4, !alias.scope !195, !noalias !192
  %278 = or i64 %255, 16
  %279 = getelementptr i32, i32* %216, i64 %278
  %280 = getelementptr i32, i32* %217, i64 %278
  %281 = bitcast i32* %280 to <4 x i32>*
  %282 = load <4 x i32>, <4 x i32>* %281, align 4, !alias.scope !192
  %283 = getelementptr i32, i32* %280, i64 4
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !192
  %286 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> %282, <4 x i32>* %286, align 4, !alias.scope !195, !noalias !192
  %287 = getelementptr i32, i32* %279, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %288, align 4, !alias.scope !195, !noalias !192
  %289 = or i64 %255, 24
  %290 = getelementptr i32, i32* %216, i64 %289
  %291 = getelementptr i32, i32* %217, i64 %289
  %292 = bitcast i32* %291 to <4 x i32>*
  %293 = load <4 x i32>, <4 x i32>* %292, align 4, !alias.scope !192
  %294 = getelementptr i32, i32* %291, i64 4
  %295 = bitcast i32* %294 to <4 x i32>*
  %296 = load <4 x i32>, <4 x i32>* %295, align 4, !alias.scope !192
  %297 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %293, <4 x i32>* %297, align 4, !alias.scope !195, !noalias !192
  %298 = getelementptr i32, i32* %290, i64 4
  %299 = bitcast i32* %298 to <4 x i32>*
  store <4 x i32> %296, <4 x i32>* %299, align 4, !alias.scope !195, !noalias !192
  %300 = add i64 %255, 32
  %301 = add i64 %256, -4
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %254, !llvm.loop !197

303:                                              ; preds = %254, %243
  %304 = phi i64 [ 0, %243 ], [ %300, %254 ]
  %305 = icmp eq i64 %250, 0
  br i1 %305, label %322, label %306

306:                                              ; preds = %303, %306
  %307 = phi i64 [ %319, %306 ], [ %304, %303 ]
  %308 = phi i64 [ %320, %306 ], [ %250, %303 ]
  %309 = getelementptr i32, i32* %216, i64 %307
  %310 = getelementptr i32, i32* %217, i64 %307
  %311 = bitcast i32* %310 to <4 x i32>*
  %312 = load <4 x i32>, <4 x i32>* %311, align 4, !alias.scope !192
  %313 = getelementptr i32, i32* %310, i64 4
  %314 = bitcast i32* %313 to <4 x i32>*
  %315 = load <4 x i32>, <4 x i32>* %314, align 4, !alias.scope !192
  %316 = bitcast i32* %309 to <4 x i32>*
  store <4 x i32> %312, <4 x i32>* %316, align 4, !alias.scope !195, !noalias !192
  %317 = getelementptr i32, i32* %309, i64 4
  %318 = bitcast i32* %317 to <4 x i32>*
  store <4 x i32> %315, <4 x i32>* %318, align 4, !alias.scope !195, !noalias !192
  %319 = add i64 %307, 8
  %320 = add i64 %308, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %306, !llvm.loop !198

322:                                              ; preds = %306, %303
  %323 = icmp eq i64 %229, %244
  br i1 %323, label %390, label %324

324:                                              ; preds = %322, %231, %223
  %325 = phi i32* [ %216, %231 ], [ %216, %223 ], [ %245, %322 ]
  %326 = phi i32* [ %217, %231 ], [ %217, %223 ], [ %246, %322 ]
  %327 = ptrtoint i32* %326 to i64
  %328 = add nsw i64 %54, -1
  %329 = getelementptr i32, i32* %0, i64 %328
  %330 = ptrtoint i32* %329 to i64
  %331 = sub i64 %330, %327
  %332 = lshr i64 %331, 2
  %333 = add nuw nsw i64 %332, 1
  %334 = and i64 %333, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %345, label %336

336:                                              ; preds = %324, %336
  %337 = phi i32* [ %342, %336 ], [ %325, %324 ]
  %338 = phi i32* [ %341, %336 ], [ %326, %324 ]
  %339 = phi i64 [ %343, %336 ], [ %334, %324 ]
  %340 = load i32, i32* %338, align 4
  store i32 %340, i32* %337, align 4
  %341 = getelementptr inbounds i32, i32* %338, i64 1
  %342 = getelementptr inbounds i32, i32* %337, i64 1
  %343 = add i64 %339, -1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %336, !llvm.loop !199

345:                                              ; preds = %336, %324
  %346 = phi i32* [ %325, %324 ], [ %342, %336 ]
  %347 = phi i32* [ %326, %324 ], [ %341, %336 ]
  %348 = icmp ult i64 %331, 28
  br i1 %348, label %390, label %349

349:                                              ; preds = %345, %349
  %350 = phi i32* [ %375, %349 ], [ %346, %345 ]
  %351 = phi i32* [ %374, %349 ], [ %347, %345 ]
  %352 = load i32, i32* %351, align 4
  store i32 %352, i32* %350, align 4
  %353 = getelementptr inbounds i32, i32* %351, i64 1
  %354 = getelementptr inbounds i32, i32* %350, i64 1
  %355 = load i32, i32* %353, align 4
  store i32 %355, i32* %354, align 4
  %356 = getelementptr inbounds i32, i32* %351, i64 2
  %357 = getelementptr inbounds i32, i32* %350, i64 2
  %358 = load i32, i32* %356, align 4
  store i32 %358, i32* %357, align 4
  %359 = getelementptr inbounds i32, i32* %351, i64 3
  %360 = getelementptr inbounds i32, i32* %350, i64 3
  %361 = load i32, i32* %359, align 4
  store i32 %361, i32* %360, align 4
  %362 = getelementptr inbounds i32, i32* %351, i64 4
  %363 = getelementptr inbounds i32, i32* %350, i64 4
  %364 = load i32, i32* %362, align 4
  store i32 %364, i32* %363, align 4
  %365 = getelementptr inbounds i32, i32* %351, i64 5
  %366 = getelementptr inbounds i32, i32* %350, i64 5
  %367 = load i32, i32* %365, align 4
  store i32 %367, i32* %366, align 4
  %368 = getelementptr inbounds i32, i32* %351, i64 6
  %369 = getelementptr inbounds i32, i32* %350, i64 6
  %370 = load i32, i32* %368, align 4
  store i32 %370, i32* %369, align 4
  %371 = getelementptr inbounds i32, i32* %351, i64 7
  %372 = getelementptr inbounds i32, i32* %350, i64 7
  %373 = load i32, i32* %371, align 4
  store i32 %373, i32* %372, align 4
  %374 = getelementptr inbounds i32, i32* %351, i64 8
  %375 = getelementptr inbounds i32, i32* %350, i64 8
  %376 = icmp eq i32* %374, %55
  br i1 %376, label %390, label %349, !llvm.loop !200

377:                                              ; preds = %215
  %378 = load i32, i32* %218, align 4
  %379 = load i32, i32* %217, align 4
  %380 = icmp ult i32 %378, %379
  br i1 %380, label %381, label %383

381:                                              ; preds = %377
  store i32 %378, i32* %216, align 4
  %382 = getelementptr inbounds i32, i32* %218, i64 1
  br label %385

383:                                              ; preds = %377
  store i32 %379, i32* %216, align 4
  %384 = getelementptr inbounds i32, i32* %217, i64 1
  br label %385

385:                                              ; preds = %383, %381
  %386 = phi i32* [ %382, %381 ], [ %218, %383 ]
  %387 = phi i32* [ %217, %381 ], [ %384, %383 ]
  %388 = getelementptr inbounds i32, i32* %216, i64 1
  %389 = icmp eq i32* %387, %55
  br i1 %389, label %59, label %215

390:                                              ; preds = %345, %349, %183, %187, %48, %322, %161, %220, %59, %23, %21, %13, %16, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3x114AtomENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(i32*, i32*, i32*, %"struct.base::internal::flat_tree<x11::Atom, base::identity, std::__1::less<void>, std::__1::vector<x11::Atom, std::__1::allocator<x11::Atom> > >::value_compare"* dereferenceable(1), i64, i64, i32*, i64) local_unnamed_addr #0 comdat {
  %9 = ptrtoint i32* %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %887, label %11

11:                                               ; preds = %8
  %12 = ptrtoint i32* %1 to i64
  %13 = ptrtoint i32* %0 to i64
  br label %14

14:                                               ; preds = %11, %880
  %15 = phi i32* [ %885, %880 ], [ %2, %11 ]
  %16 = phi i64 [ %884, %880 ], [ %4, %11 ]
  %17 = phi i64 [ %883, %880 ], [ %5, %11 ]
  %18 = phi i64 [ %882, %880 ], [ %12, %11 ]
  %19 = phi i64 [ %881, %880 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %887, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to i32*
  %27 = load i32, i32* %26, align 4
  br label %548

28:                                               ; preds = %14
  %29 = inttoptr i64 %19 to i32*
  %30 = inttoptr i64 %19 to i8*
  %31 = inttoptr i64 %18 to i32*
  %32 = inttoptr i64 %18 to i8*
  %33 = icmp sgt i64 %16, %17
  br i1 %33, label %165, label %34

34:                                               ; preds = %28
  %35 = icmp eq i32* %29, %31
  br i1 %35, label %887, label %36

36:                                               ; preds = %34
  %37 = getelementptr i32, i32* %31, i64 -1
  %38 = bitcast i32* %37 to i8*
  %39 = sub i64 0, %19
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 2
  %43 = add nuw nsw i64 %42, 1
  %44 = icmp ult i64 %43, 8
  br i1 %44, label %45, label %70

45:                                               ; preds = %163, %70, %36
  %46 = phi i32* [ %6, %70 ], [ %6, %36 ], [ %86, %163 ]
  %47 = phi i32* [ %29, %70 ], [ %29, %36 ], [ %87, %163 ]
  %48 = ptrtoint i32* %47 to i64
  %49 = getelementptr i32, i32* %31, i64 -1
  %50 = ptrtoint i32* %49 to i64
  %51 = sub i64 %50, %48
  %52 = lshr i64 %51, 2
  %53 = add nuw nsw i64 %52, 1
  %54 = and i64 %53, 7
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %45, %56
  %57 = phi i32* [ %62, %56 ], [ %46, %45 ]
  %58 = phi i32* [ %61, %56 ], [ %47, %45 ]
  %59 = phi i64 [ %63, %56 ], [ %54, %45 ]
  %60 = load i32, i32* %58, align 4
  store i32 %60, i32* %57, align 4
  %61 = getelementptr inbounds i32, i32* %58, i64 1
  %62 = getelementptr inbounds i32, i32* %57, i64 1
  %63 = add i64 %59, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %56, !llvm.loop !201

65:                                               ; preds = %56, %45
  %66 = phi i32* [ undef, %45 ], [ %62, %56 ]
  %67 = phi i32* [ %46, %45 ], [ %62, %56 ]
  %68 = phi i32* [ %47, %45 ], [ %61, %56 ]
  %69 = icmp ult i64 %51, 28
  br i1 %69, label %296, label %325

70:                                               ; preds = %36
  %71 = getelementptr i32, i32* %31, i64 -1
  %72 = bitcast i32* %71 to i8*
  %73 = sub i64 0, %19
  %74 = getelementptr i8, i8* %72, i64 %73
  %75 = ptrtoint i8* %74 to i64
  %76 = lshr i64 %75, 2
  %77 = add nuw nsw i64 %76, 1
  %78 = getelementptr i32, i32* %6, i64 %77
  %79 = bitcast i32* %78 to i8*
  %80 = getelementptr i32, i32* %29, i64 %77
  %81 = icmp ugt i32* %80, %6
  %82 = icmp ult i8* %30, %79
  %83 = and i1 %81, %82
  br i1 %83, label %45, label %84

84:                                               ; preds = %70
  %85 = and i64 %43, 9223372036854775800
  %86 = getelementptr i32, i32* %6, i64 %85
  %87 = getelementptr i32, i32* %29, i64 %85
  %88 = add nsw i64 %85, -8
  %89 = lshr exact i64 %88, 3
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 24
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i32, i32* %6, i64 %96
  %99 = getelementptr i32, i32* %29, i64 %96
  %100 = bitcast i32* %99 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 4, !alias.scope !202
  %102 = getelementptr i32, i32* %99, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !202
  %105 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %105, align 4, !alias.scope !205, !noalias !202
  %106 = getelementptr i32, i32* %98, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %107, align 4, !alias.scope !205, !noalias !202
  %108 = or i64 %96, 8
  %109 = getelementptr i32, i32* %6, i64 %108
  %110 = getelementptr i32, i32* %29, i64 %108
  %111 = bitcast i32* %110 to <4 x i32>*
  %112 = load <4 x i32>, <4 x i32>* %111, align 4, !alias.scope !202
  %113 = getelementptr i32, i32* %110, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  %115 = load <4 x i32>, <4 x i32>* %114, align 4, !alias.scope !202
  %116 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %112, <4 x i32>* %116, align 4, !alias.scope !205, !noalias !202
  %117 = getelementptr i32, i32* %109, i64 4
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %115, <4 x i32>* %118, align 4, !alias.scope !205, !noalias !202
  %119 = or i64 %96, 16
  %120 = getelementptr i32, i32* %6, i64 %119
  %121 = getelementptr i32, i32* %29, i64 %119
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !202
  %124 = getelementptr i32, i32* %121, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !202
  %127 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !205, !noalias !202
  %128 = getelementptr i32, i32* %120, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %129, align 4, !alias.scope !205, !noalias !202
  %130 = or i64 %96, 24
  %131 = getelementptr i32, i32* %6, i64 %130
  %132 = getelementptr i32, i32* %29, i64 %130
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !202
  %135 = getelementptr i32, i32* %132, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  %137 = load <4 x i32>, <4 x i32>* %136, align 4, !alias.scope !202
  %138 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %138, align 4, !alias.scope !205, !noalias !202
  %139 = getelementptr i32, i32* %131, i64 4
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %137, <4 x i32>* %140, align 4, !alias.scope !205, !noalias !202
  %141 = add i64 %96, 32
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !207

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i32, i32* %6, i64 %148
  %151 = getelementptr i32, i32* %29, i64 %148
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !202
  %154 = getelementptr i32, i32* %151, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !202
  %157 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %157, align 4, !alias.scope !205, !noalias !202
  %158 = getelementptr i32, i32* %150, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %159, align 4, !alias.scope !205, !noalias !202
  %160 = add i64 %148, 8
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !208

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %43, %85
  br i1 %164, label %296, label %45

165:                                              ; preds = %28
  %166 = icmp eq i32* %15, %31
  br i1 %166, label %887, label %167

167:                                              ; preds = %165
  %168 = getelementptr i32, i32* %15, i64 -1
  %169 = bitcast i32* %168 to i8*
  %170 = sub i64 0, %18
  %171 = getelementptr i8, i8* %169, i64 %170
  %172 = ptrtoint i8* %171 to i64
  %173 = lshr i64 %172, 2
  %174 = add nuw nsw i64 %173, 1
  %175 = icmp ult i64 %174, 8
  br i1 %175, label %176, label %201

176:                                              ; preds = %294, %201, %167
  %177 = phi i32* [ %6, %201 ], [ %6, %167 ], [ %217, %294 ]
  %178 = phi i32* [ %31, %201 ], [ %31, %167 ], [ %218, %294 ]
  %179 = ptrtoint i32* %178 to i64
  %180 = getelementptr i32, i32* %15, i64 -1
  %181 = ptrtoint i32* %180 to i64
  %182 = sub i64 %181, %179
  %183 = lshr i64 %182, 2
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 7
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %196, label %187

187:                                              ; preds = %176, %187
  %188 = phi i32* [ %193, %187 ], [ %177, %176 ]
  %189 = phi i32* [ %192, %187 ], [ %178, %176 ]
  %190 = phi i64 [ %194, %187 ], [ %185, %176 ]
  %191 = load i32, i32* %189, align 4
  store i32 %191, i32* %188, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %188, i64 1
  %194 = add i64 %190, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %187, !llvm.loop !209

196:                                              ; preds = %187, %176
  %197 = phi i32* [ undef, %176 ], [ %193, %187 ]
  %198 = phi i32* [ %177, %176 ], [ %193, %187 ]
  %199 = phi i32* [ %178, %176 ], [ %192, %187 ]
  %200 = icmp ult i64 %182, 28
  br i1 %200, label %353, label %520

201:                                              ; preds = %167
  %202 = getelementptr i32, i32* %15, i64 -1
  %203 = bitcast i32* %202 to i8*
  %204 = sub i64 0, %18
  %205 = getelementptr i8, i8* %203, i64 %204
  %206 = ptrtoint i8* %205 to i64
  %207 = lshr i64 %206, 2
  %208 = add nuw nsw i64 %207, 1
  %209 = getelementptr i32, i32* %6, i64 %208
  %210 = bitcast i32* %209 to i8*
  %211 = getelementptr i32, i32* %31, i64 %208
  %212 = icmp ugt i32* %211, %6
  %213 = icmp ult i8* %32, %210
  %214 = and i1 %212, %213
  br i1 %214, label %176, label %215

215:                                              ; preds = %201
  %216 = and i64 %174, 9223372036854775800
  %217 = getelementptr i32, i32* %6, i64 %216
  %218 = getelementptr i32, i32* %31, i64 %216
  %219 = add nsw i64 %216, -8
  %220 = lshr exact i64 %219, 3
  %221 = add nuw nsw i64 %220, 1
  %222 = and i64 %221, 3
  %223 = icmp ult i64 %219, 24
  br i1 %223, label %275, label %224

224:                                              ; preds = %215
  %225 = sub nsw i64 %221, %222
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %272, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %273, %226 ]
  %229 = getelementptr i32, i32* %6, i64 %227
  %230 = getelementptr i32, i32* %31, i64 %227
  %231 = bitcast i32* %230 to <4 x i32>*
  %232 = load <4 x i32>, <4 x i32>* %231, align 4, !alias.scope !210
  %233 = getelementptr i32, i32* %230, i64 4
  %234 = bitcast i32* %233 to <4 x i32>*
  %235 = load <4 x i32>, <4 x i32>* %234, align 4, !alias.scope !210
  %236 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> %232, <4 x i32>* %236, align 4, !alias.scope !213, !noalias !210
  %237 = getelementptr i32, i32* %229, i64 4
  %238 = bitcast i32* %237 to <4 x i32>*
  store <4 x i32> %235, <4 x i32>* %238, align 4, !alias.scope !213, !noalias !210
  %239 = or i64 %227, 8
  %240 = getelementptr i32, i32* %6, i64 %239
  %241 = getelementptr i32, i32* %31, i64 %239
  %242 = bitcast i32* %241 to <4 x i32>*
  %243 = load <4 x i32>, <4 x i32>* %242, align 4, !alias.scope !210
  %244 = getelementptr i32, i32* %241, i64 4
  %245 = bitcast i32* %244 to <4 x i32>*
  %246 = load <4 x i32>, <4 x i32>* %245, align 4, !alias.scope !210
  %247 = bitcast i32* %240 to <4 x i32>*
  store <4 x i32> %243, <4 x i32>* %247, align 4, !alias.scope !213, !noalias !210
  %248 = getelementptr i32, i32* %240, i64 4
  %249 = bitcast i32* %248 to <4 x i32>*
  store <4 x i32> %246, <4 x i32>* %249, align 4, !alias.scope !213, !noalias !210
  %250 = or i64 %227, 16
  %251 = getelementptr i32, i32* %6, i64 %250
  %252 = getelementptr i32, i32* %31, i64 %250
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4, !alias.scope !210
  %255 = getelementptr i32, i32* %252, i64 4
  %256 = bitcast i32* %255 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4, !alias.scope !210
  %258 = bitcast i32* %251 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %258, align 4, !alias.scope !213, !noalias !210
  %259 = getelementptr i32, i32* %251, i64 4
  %260 = bitcast i32* %259 to <4 x i32>*
  store <4 x i32> %257, <4 x i32>* %260, align 4, !alias.scope !213, !noalias !210
  %261 = or i64 %227, 24
  %262 = getelementptr i32, i32* %6, i64 %261
  %263 = getelementptr i32, i32* %31, i64 %261
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4, !alias.scope !210
  %266 = getelementptr i32, i32* %263, i64 4
  %267 = bitcast i32* %266 to <4 x i32>*
  %268 = load <4 x i32>, <4 x i32>* %267, align 4, !alias.scope !210
  %269 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> %265, <4 x i32>* %269, align 4, !alias.scope !213, !noalias !210
  %270 = getelementptr i32, i32* %262, i64 4
  %271 = bitcast i32* %270 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %271, align 4, !alias.scope !213, !noalias !210
  %272 = add i64 %227, 32
  %273 = add i64 %228, -4
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %226, !llvm.loop !215

275:                                              ; preds = %226, %215
  %276 = phi i64 [ 0, %215 ], [ %272, %226 ]
  %277 = icmp eq i64 %222, 0
  br i1 %277, label %294, label %278

278:                                              ; preds = %275, %278
  %279 = phi i64 [ %291, %278 ], [ %276, %275 ]
  %280 = phi i64 [ %292, %278 ], [ %222, %275 ]
  %281 = getelementptr i32, i32* %6, i64 %279
  %282 = getelementptr i32, i32* %31, i64 %279
  %283 = bitcast i32* %282 to <4 x i32>*
  %284 = load <4 x i32>, <4 x i32>* %283, align 4, !alias.scope !210
  %285 = getelementptr i32, i32* %282, i64 4
  %286 = bitcast i32* %285 to <4 x i32>*
  %287 = load <4 x i32>, <4 x i32>* %286, align 4, !alias.scope !210
  %288 = bitcast i32* %281 to <4 x i32>*
  store <4 x i32> %284, <4 x i32>* %288, align 4, !alias.scope !213, !noalias !210
  %289 = getelementptr i32, i32* %281, i64 4
  %290 = bitcast i32* %289 to <4 x i32>*
  store <4 x i32> %287, <4 x i32>* %290, align 4, !alias.scope !213, !noalias !210
  %291 = add i64 %279, 8
  %292 = add i64 %280, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %278, !llvm.loop !216

294:                                              ; preds = %278, %275
  %295 = icmp eq i64 %174, %216
  br i1 %295, label %353, label %176

296:                                              ; preds = %65, %325, %163
  %297 = phi i32* [ %86, %163 ], [ %66, %65 ], [ %351, %325 ]
  %298 = icmp eq i32* %297, %6
  br i1 %298, label %887, label %299

299:                                              ; preds = %296, %320
  %300 = phi i32* [ %322, %320 ], [ %6, %296 ]
  %301 = phi i32* [ %323, %320 ], [ %29, %296 ]
  %302 = phi i32* [ %321, %320 ], [ %31, %296 ]
  %303 = icmp eq i32* %302, %15
  br i1 %303, label %304, label %312

304:                                              ; preds = %299
  %305 = ptrtoint i32* %297 to i64
  %306 = ptrtoint i32* %300 to i64
  %307 = sub i64 %305, %306
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %887, label %309

309:                                              ; preds = %304
  %310 = bitcast i32* %301 to i8*
  %311 = bitcast i32* %300 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %310, i8* align 4 %311, i64 %307, i1 false) #17
  br label %887

312:                                              ; preds = %299
  %313 = load i32, i32* %302, align 4
  %314 = load i32, i32* %300, align 4
  %315 = icmp ult i32 %313, %314
  br i1 %315, label %316, label %318

316:                                              ; preds = %312
  store i32 %313, i32* %301, align 4
  %317 = getelementptr inbounds i32, i32* %302, i64 1
  br label %320

318:                                              ; preds = %312
  store i32 %314, i32* %301, align 4
  %319 = getelementptr inbounds i32, i32* %300, i64 1
  br label %320

320:                                              ; preds = %318, %316
  %321 = phi i32* [ %317, %316 ], [ %302, %318 ]
  %322 = phi i32* [ %300, %316 ], [ %319, %318 ]
  %323 = getelementptr inbounds i32, i32* %301, i64 1
  %324 = icmp eq i32* %322, %297
  br i1 %324, label %887, label %299

325:                                              ; preds = %65, %325
  %326 = phi i32* [ %351, %325 ], [ %67, %65 ]
  %327 = phi i32* [ %350, %325 ], [ %68, %65 ]
  %328 = load i32, i32* %327, align 4
  store i32 %328, i32* %326, align 4
  %329 = getelementptr inbounds i32, i32* %327, i64 1
  %330 = getelementptr inbounds i32, i32* %326, i64 1
  %331 = load i32, i32* %329, align 4
  store i32 %331, i32* %330, align 4
  %332 = getelementptr inbounds i32, i32* %327, i64 2
  %333 = getelementptr inbounds i32, i32* %326, i64 2
  %334 = load i32, i32* %332, align 4
  store i32 %334, i32* %333, align 4
  %335 = getelementptr inbounds i32, i32* %327, i64 3
  %336 = getelementptr inbounds i32, i32* %326, i64 3
  %337 = load i32, i32* %335, align 4
  store i32 %337, i32* %336, align 4
  %338 = getelementptr inbounds i32, i32* %327, i64 4
  %339 = getelementptr inbounds i32, i32* %326, i64 4
  %340 = load i32, i32* %338, align 4
  store i32 %340, i32* %339, align 4
  %341 = getelementptr inbounds i32, i32* %327, i64 5
  %342 = getelementptr inbounds i32, i32* %326, i64 5
  %343 = load i32, i32* %341, align 4
  store i32 %343, i32* %342, align 4
  %344 = getelementptr inbounds i32, i32* %327, i64 6
  %345 = getelementptr inbounds i32, i32* %326, i64 6
  %346 = load i32, i32* %344, align 4
  store i32 %346, i32* %345, align 4
  %347 = getelementptr inbounds i32, i32* %327, i64 7
  %348 = getelementptr inbounds i32, i32* %326, i64 7
  %349 = load i32, i32* %347, align 4
  store i32 %349, i32* %348, align 4
  %350 = getelementptr inbounds i32, i32* %327, i64 8
  %351 = getelementptr inbounds i32, i32* %326, i64 8
  %352 = icmp eq i32* %350, %31
  br i1 %352, label %296, label %325, !llvm.loop !217

353:                                              ; preds = %196, %520, %294
  %354 = phi i32* [ %217, %294 ], [ %197, %196 ], [ %546, %520 ]
  %355 = icmp eq i32* %354, %6
  br i1 %355, label %887, label %356

356:                                              ; preds = %353, %509
  %357 = phi i32* [ %515, %509 ], [ %15, %353 ]
  %358 = phi i32* [ %518, %509 ], [ %354, %353 ]
  %359 = phi i32* [ %517, %509 ], [ %31, %353 ]
  %360 = icmp eq i32* %359, %29
  br i1 %360, label %361, label %509

361:                                              ; preds = %356
  %362 = getelementptr i32, i32* %358, i64 -1
  %363 = ptrtoint i32* %362 to i64
  %364 = sub i64 %363, %9
  %365 = lshr i64 %364, 2
  %366 = add nuw nsw i64 %365, 1
  %367 = icmp ult i64 %366, 8
  br i1 %367, label %458, label %368

368:                                              ; preds = %361
  %369 = getelementptr i32, i32* %358, i64 -1
  %370 = ptrtoint i32* %369 to i64
  %371 = sub i64 %370, %9
  %372 = lshr i64 %371, 2
  %373 = xor i64 %372, -1
  %374 = getelementptr i32, i32* %357, i64 %373
  %375 = getelementptr i32, i32* %358, i64 %373
  %376 = icmp ult i32* %374, %358
  %377 = icmp ult i32* %375, %357
  %378 = and i1 %376, %377
  br i1 %378, label %458, label %379

379:                                              ; preds = %368
  %380 = and i64 %366, 9223372036854775800
  %381 = sub nsw i64 0, %380
  %382 = getelementptr i32, i32* %358, i64 %381
  %383 = sub nsw i64 0, %380
  %384 = getelementptr i32, i32* %357, i64 %383
  %385 = add nsw i64 %380, -8
  %386 = lshr exact i64 %385, 3
  %387 = add nuw nsw i64 %386, 1
  %388 = and i64 %387, 1
  %389 = icmp eq i64 %385, 0
  br i1 %389, label %436, label %390

390:                                              ; preds = %379
  %391 = sub nuw nsw i64 %387, %388
  %392 = getelementptr i32, i32* %358, i64 -1
  %393 = getelementptr i32, i32* %357, i64 -1
  %394 = getelementptr i32, i32* %358, i64 -1
  %395 = getelementptr i32, i32* %357, i64 -1
  br label %396

396:                                              ; preds = %396, %390
  %397 = phi i64 [ 0, %390 ], [ %431, %396 ]
  %398 = phi i64 [ %391, %390 ], [ %432, %396 ]
  %399 = sub i64 0, %397
  %400 = sub i64 0, %397
  %401 = getelementptr inbounds i32, i32* %392, i64 %399
  %402 = getelementptr inbounds i32, i32* %401, i64 -3
  %403 = bitcast i32* %402 to <4 x i32>*
  %404 = load <4 x i32>, <4 x i32>* %403, align 4, !alias.scope !218
  %405 = getelementptr inbounds i32, i32* %401, i64 -4
  %406 = getelementptr inbounds i32, i32* %405, i64 -3
  %407 = bitcast i32* %406 to <4 x i32>*
  %408 = load <4 x i32>, <4 x i32>* %407, align 4, !alias.scope !218
  %409 = getelementptr inbounds i32, i32* %393, i64 %400
  %410 = getelementptr inbounds i32, i32* %409, i64 -3
  %411 = bitcast i32* %410 to <4 x i32>*
  store <4 x i32> %404, <4 x i32>* %411, align 4, !alias.scope !221, !noalias !218
  %412 = getelementptr inbounds i32, i32* %409, i64 -4
  %413 = getelementptr inbounds i32, i32* %412, i64 -3
  %414 = bitcast i32* %413 to <4 x i32>*
  store <4 x i32> %408, <4 x i32>* %414, align 4, !alias.scope !221, !noalias !218
  %415 = sub nuw nsw i64 -8, %397
  %416 = sub nuw nsw i64 -8, %397
  %417 = getelementptr inbounds i32, i32* %394, i64 %415
  %418 = getelementptr inbounds i32, i32* %417, i64 -3
  %419 = bitcast i32* %418 to <4 x i32>*
  %420 = load <4 x i32>, <4 x i32>* %419, align 4, !alias.scope !218
  %421 = getelementptr inbounds i32, i32* %417, i64 -4
  %422 = getelementptr inbounds i32, i32* %421, i64 -3
  %423 = bitcast i32* %422 to <4 x i32>*
  %424 = load <4 x i32>, <4 x i32>* %423, align 4, !alias.scope !218
  %425 = getelementptr inbounds i32, i32* %395, i64 %416
  %426 = getelementptr inbounds i32, i32* %425, i64 -3
  %427 = bitcast i32* %426 to <4 x i32>*
  store <4 x i32> %420, <4 x i32>* %427, align 4, !alias.scope !221, !noalias !218
  %428 = getelementptr inbounds i32, i32* %425, i64 -4
  %429 = getelementptr inbounds i32, i32* %428, i64 -3
  %430 = bitcast i32* %429 to <4 x i32>*
  store <4 x i32> %424, <4 x i32>* %430, align 4, !alias.scope !221, !noalias !218
  %431 = add i64 %397, 16
  %432 = add i64 %398, -2
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %396, !llvm.loop !223

434:                                              ; preds = %396
  %435 = sub nuw nsw i64 -16, %397
  br label %436

436:                                              ; preds = %434, %379
  %437 = phi i64 [ 0, %379 ], [ %435, %434 ]
  %438 = icmp eq i64 %388, 0
  br i1 %438, label %456, label %439

439:                                              ; preds = %436
  %440 = getelementptr i32, i32* %358, i64 -1
  %441 = getelementptr i32, i32* %357, i64 -1
  %442 = getelementptr inbounds i32, i32* %440, i64 %437
  %443 = getelementptr inbounds i32, i32* %442, i64 -3
  %444 = bitcast i32* %443 to <4 x i32>*
  %445 = load <4 x i32>, <4 x i32>* %444, align 4, !alias.scope !218
  %446 = getelementptr inbounds i32, i32* %442, i64 -4
  %447 = getelementptr inbounds i32, i32* %446, i64 -3
  %448 = bitcast i32* %447 to <4 x i32>*
  %449 = load <4 x i32>, <4 x i32>* %448, align 4, !alias.scope !218
  %450 = getelementptr inbounds i32, i32* %441, i64 %437
  %451 = getelementptr inbounds i32, i32* %450, i64 -3
  %452 = bitcast i32* %451 to <4 x i32>*
  store <4 x i32> %445, <4 x i32>* %452, align 4, !alias.scope !221, !noalias !218
  %453 = getelementptr inbounds i32, i32* %450, i64 -4
  %454 = getelementptr inbounds i32, i32* %453, i64 -3
  %455 = bitcast i32* %454 to <4 x i32>*
  store <4 x i32> %449, <4 x i32>* %455, align 4, !alias.scope !221, !noalias !218
  br label %456

456:                                              ; preds = %436, %439
  %457 = icmp eq i64 %366, %380
  br i1 %457, label %887, label %458

458:                                              ; preds = %456, %368, %361
  %459 = phi i32* [ %358, %368 ], [ %358, %361 ], [ %382, %456 ]
  %460 = phi i32* [ %357, %368 ], [ %357, %361 ], [ %384, %456 ]
  %461 = getelementptr i32, i32* %459, i64 -1
  %462 = ptrtoint i32* %461 to i64
  %463 = sub i64 %462, %9
  %464 = lshr i64 %463, 2
  %465 = add nuw nsw i64 %464, 1
  %466 = and i64 %465, 7
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %477, label %468

468:                                              ; preds = %458, %468
  %469 = phi i32* [ %472, %468 ], [ %459, %458 ]
  %470 = phi i32* [ %474, %468 ], [ %460, %458 ]
  %471 = phi i64 [ %475, %468 ], [ %466, %458 ]
  %472 = getelementptr inbounds i32, i32* %469, i64 -1
  %473 = load i32, i32* %472, align 4
  %474 = getelementptr inbounds i32, i32* %470, i64 -1
  store i32 %473, i32* %474, align 4
  %475 = add i64 %471, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %468, !llvm.loop !224

477:                                              ; preds = %468, %458
  %478 = phi i32* [ %459, %458 ], [ %472, %468 ]
  %479 = phi i32* [ %460, %458 ], [ %474, %468 ]
  %480 = icmp ult i64 %463, 28
  br i1 %480, label %887, label %481

481:                                              ; preds = %477, %481
  %482 = phi i32* [ %505, %481 ], [ %478, %477 ]
  %483 = phi i32* [ %507, %481 ], [ %479, %477 ]
  %484 = getelementptr inbounds i32, i32* %482, i64 -1
  %485 = load i32, i32* %484, align 4
  %486 = getelementptr inbounds i32, i32* %483, i64 -1
  store i32 %485, i32* %486, align 4
  %487 = getelementptr inbounds i32, i32* %482, i64 -2
  %488 = load i32, i32* %487, align 4
  %489 = getelementptr inbounds i32, i32* %483, i64 -2
  store i32 %488, i32* %489, align 4
  %490 = getelementptr inbounds i32, i32* %482, i64 -3
  %491 = load i32, i32* %490, align 4
  %492 = getelementptr inbounds i32, i32* %483, i64 -3
  store i32 %491, i32* %492, align 4
  %493 = getelementptr inbounds i32, i32* %482, i64 -4
  %494 = load i32, i32* %493, align 4
  %495 = getelementptr inbounds i32, i32* %483, i64 -4
  store i32 %494, i32* %495, align 4
  %496 = getelementptr inbounds i32, i32* %482, i64 -5
  %497 = load i32, i32* %496, align 4
  %498 = getelementptr inbounds i32, i32* %483, i64 -5
  store i32 %497, i32* %498, align 4
  %499 = getelementptr inbounds i32, i32* %482, i64 -6
  %500 = load i32, i32* %499, align 4
  %501 = getelementptr inbounds i32, i32* %483, i64 -6
  store i32 %500, i32* %501, align 4
  %502 = getelementptr inbounds i32, i32* %482, i64 -7
  %503 = load i32, i32* %502, align 4
  %504 = getelementptr inbounds i32, i32* %483, i64 -7
  store i32 %503, i32* %504, align 4
  %505 = getelementptr inbounds i32, i32* %482, i64 -8
  %506 = load i32, i32* %505, align 4
  %507 = getelementptr inbounds i32, i32* %483, i64 -8
  store i32 %506, i32* %507, align 4
  %508 = icmp eq i32* %505, %6
  br i1 %508, label %887, label %481, !llvm.loop !225

509:                                              ; preds = %356
  %510 = getelementptr inbounds i32, i32* %359, i64 -1
  %511 = getelementptr inbounds i32, i32* %358, i64 -1
  %512 = load i32, i32* %511, align 4
  %513 = load i32, i32* %510, align 4
  %514 = icmp ult i32 %512, %513
  %515 = getelementptr inbounds i32, i32* %357, i64 -1
  %516 = select i1 %514, i32 %513, i32 %512
  %517 = select i1 %514, i32* %510, i32* %359
  %518 = select i1 %514, i32* %358, i32* %511
  store i32 %516, i32* %515, align 4
  %519 = icmp eq i32* %518, %6
  br i1 %519, label %887, label %356

520:                                              ; preds = %196, %520
  %521 = phi i32* [ %546, %520 ], [ %198, %196 ]
  %522 = phi i32* [ %545, %520 ], [ %199, %196 ]
  %523 = load i32, i32* %522, align 4
  store i32 %523, i32* %521, align 4
  %524 = getelementptr inbounds i32, i32* %522, i64 1
  %525 = getelementptr inbounds i32, i32* %521, i64 1
  %526 = load i32, i32* %524, align 4
  store i32 %526, i32* %525, align 4
  %527 = getelementptr inbounds i32, i32* %522, i64 2
  %528 = getelementptr inbounds i32, i32* %521, i64 2
  %529 = load i32, i32* %527, align 4
  store i32 %529, i32* %528, align 4
  %530 = getelementptr inbounds i32, i32* %522, i64 3
  %531 = getelementptr inbounds i32, i32* %521, i64 3
  %532 = load i32, i32* %530, align 4
  store i32 %532, i32* %531, align 4
  %533 = getelementptr inbounds i32, i32* %522, i64 4
  %534 = getelementptr inbounds i32, i32* %521, i64 4
  %535 = load i32, i32* %533, align 4
  store i32 %535, i32* %534, align 4
  %536 = getelementptr inbounds i32, i32* %522, i64 5
  %537 = getelementptr inbounds i32, i32* %521, i64 5
  %538 = load i32, i32* %536, align 4
  store i32 %538, i32* %537, align 4
  %539 = getelementptr inbounds i32, i32* %522, i64 6
  %540 = getelementptr inbounds i32, i32* %521, i64 6
  %541 = load i32, i32* %539, align 4
  store i32 %541, i32* %540, align 4
  %542 = getelementptr inbounds i32, i32* %522, i64 7
  %543 = getelementptr inbounds i32, i32* %521, i64 7
  %544 = load i32, i32* %542, align 4
  store i32 %544, i32* %543, align 4
  %545 = getelementptr inbounds i32, i32* %522, i64 8
  %546 = getelementptr inbounds i32, i32* %521, i64 8
  %547 = icmp eq i32* %545, %15
  br i1 %547, label %353, label %520, !llvm.loop !226

548:                                              ; preds = %25, %554
  %549 = phi i64 [ %16, %25 ], [ %557, %554 ]
  %550 = phi i64 [ %19, %25 ], [ %556, %554 ]
  %551 = inttoptr i64 %550 to i32*
  %552 = load i32, i32* %551, align 4
  %553 = icmp ult i32 %27, %552
  br i1 %553, label %559, label %554

554:                                              ; preds = %548
  %555 = getelementptr inbounds i32, i32* %551, i64 1
  %556 = ptrtoint i32* %555 to i64
  %557 = add nsw i64 %549, -1
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %887, label %548

559:                                              ; preds = %548
  %560 = inttoptr i64 %550 to i32*
  %561 = icmp slt i64 %549, %17
  br i1 %561, label %562, label %589

562:                                              ; preds = %559
  %563 = sdiv i64 %17, 2
  %564 = getelementptr inbounds i32, i32* %26, i64 %563
  %565 = ptrtoint i32* %564 to i64
  %566 = sub i64 %18, %550
  %567 = icmp eq i64 %566, 0
  br i1 %567, label %584, label %568

568:                                              ; preds = %562
  %569 = ashr exact i64 %566, 2
  %570 = load i32, i32* %564, align 4
  br label %571

571:                                              ; preds = %571, %568
  %572 = phi i32* [ %560, %568 ], [ %582, %571 ]
  %573 = phi i64 [ %569, %568 ], [ %581, %571 ]
  %574 = lshr i64 %573, 1
  %575 = getelementptr inbounds i32, i32* %572, i64 %574
  %576 = load i32, i32* %575, align 4
  %577 = icmp ult i32 %570, %576
  %578 = getelementptr inbounds i32, i32* %575, i64 1
  %579 = xor i64 %574, -1
  %580 = add i64 %573, %579
  %581 = select i1 %577, i64 %574, i64 %580
  %582 = select i1 %577, i32* %572, i32* %578
  %583 = icmp eq i64 %581, 0
  br i1 %583, label %584, label %571

584:                                              ; preds = %571, %562
  %585 = phi i32* [ %560, %562 ], [ %582, %571 ]
  %586 = ptrtoint i32* %585 to i64
  %587 = sub i64 %586, %550
  %588 = ashr exact i64 %587, 2
  br label %622

589:                                              ; preds = %559
  %590 = icmp eq i64 %549, 1
  br i1 %590, label %591, label %594

591:                                              ; preds = %589
  %592 = inttoptr i64 %18 to i32*
  %593 = inttoptr i64 %550 to i32*
  store i32 %27, i32* %593, align 4
  store i32 %552, i32* %592, align 4
  br label %887

594:                                              ; preds = %589
  %595 = sdiv i64 %549, 2
  %596 = getelementptr inbounds i32, i32* %560, i64 %595
  %597 = ptrtoint i32* %596 to i64
  %598 = ptrtoint i32* %15 to i64
  %599 = sub i64 %598, %18
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %617, label %601

601:                                              ; preds = %594
  %602 = ashr exact i64 %599, 2
  %603 = load i32, i32* %596, align 4
  br label %604

604:                                              ; preds = %604, %601
  %605 = phi i32* [ %26, %601 ], [ %615, %604 ]
  %606 = phi i64 [ %602, %601 ], [ %614, %604 ]
  %607 = lshr i64 %606, 1
  %608 = getelementptr inbounds i32, i32* %605, i64 %607
  %609 = load i32, i32* %608, align 4
  %610 = icmp ult i32 %609, %603
  %611 = getelementptr inbounds i32, i32* %608, i64 1
  %612 = xor i64 %607, -1
  %613 = add i64 %606, %612
  %614 = select i1 %610, i64 %613, i64 %607
  %615 = select i1 %610, i32* %611, i32* %605
  %616 = icmp eq i64 %614, 0
  br i1 %616, label %617, label %604

617:                                              ; preds = %604, %594
  %618 = phi i32* [ %26, %594 ], [ %615, %604 ]
  %619 = ptrtoint i32* %618 to i64
  %620 = sub i64 %619, %18
  %621 = ashr exact i64 %620, 2
  br label %622

622:                                              ; preds = %617, %584
  %623 = phi i64 [ %586, %584 ], [ %597, %617 ]
  %624 = phi i64 [ %565, %584 ], [ %619, %617 ]
  %625 = phi i64 [ %563, %584 ], [ %621, %617 ]
  %626 = phi i64 [ %588, %584 ], [ %595, %617 ]
  %627 = sub nsw i64 %549, %626
  %628 = sub nsw i64 %17, %625
  %629 = inttoptr i64 %623 to i32*
  %630 = inttoptr i64 %624 to i32*
  %631 = inttoptr i64 %623 to i8*
  %632 = inttoptr i64 %18 to i8*
  %633 = icmp eq i32* %629, %26
  br i1 %633, label %872, label %634

634:                                              ; preds = %622
  %635 = icmp eq i32* %26, %630
  br i1 %635, label %872, label %636

636:                                              ; preds = %634
  %637 = getelementptr inbounds i32, i32* %629, i64 1
  %638 = icmp eq i32* %637, %26
  br i1 %638, label %639, label %647

639:                                              ; preds = %636
  %640 = load i32, i32* %629, align 4
  %641 = sub i64 %624, %18
  %642 = ashr exact i64 %641, 2
  %643 = icmp eq i64 %641, 0
  br i1 %643, label %645, label %644

644:                                              ; preds = %639
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %631, i8* align 4 %632, i64 %641, i1 false) #17
  br label %645

645:                                              ; preds = %644, %639
  %646 = getelementptr inbounds i32, i32* %629, i64 %642
  store i32 %640, i32* %646, align 4
  br label %872

647:                                              ; preds = %636
  %648 = getelementptr inbounds i32, i32* %26, i64 1
  %649 = icmp eq i32* %648, %630
  br i1 %649, label %650, label %663

650:                                              ; preds = %647
  %651 = getelementptr inbounds i32, i32* %630, i64 -1
  %652 = load i32, i32* %651, align 4
  %653 = ptrtoint i32* %651 to i64
  %654 = sub i64 %653, %623
  %655 = icmp eq i64 %654, 0
  br i1 %655, label %661, label %656

656:                                              ; preds = %650
  %657 = ashr exact i64 %654, 2
  %658 = sub nsw i64 0, %657
  %659 = getelementptr inbounds i32, i32* %630, i64 %658
  %660 = bitcast i32* %659 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %660, i8* align 4 %631, i64 %654, i1 false) #17
  br label %661

661:                                              ; preds = %656, %650
  %662 = phi i32* [ %659, %656 ], [ %630, %650 ]
  store i32 %652, i32* %629, align 4
  br label %872

663:                                              ; preds = %647
  %664 = sub i64 %18, %623
  %665 = ashr exact i64 %664, 2
  %666 = sub i64 %624, %18
  %667 = ashr exact i64 %666, 2
  %668 = icmp eq i64 %665, %667
  br i1 %668, label %669, label %814

669:                                              ; preds = %663
  %670 = load i32, i32* %629, align 4
  store i32 %27, i32* %629, align 4
  store i32 %670, i32* %26, align 4
  %671 = getelementptr inbounds i32, i32* %629, i64 1
  %672 = getelementptr inbounds i32, i32* %26, i64 1
  %673 = icmp eq i32* %671, %26
  br i1 %673, label %872, label %674

674:                                              ; preds = %669
  %675 = getelementptr i32, i32* %26, i64 -2
  %676 = bitcast i32* %675 to i8*
  %677 = sub i64 0, %623
  %678 = getelementptr i8, i8* %676, i64 %677
  %679 = ptrtoint i8* %678 to i64
  %680 = lshr i64 %679, 2
  %681 = add nuw nsw i64 %680, 1
  %682 = icmp ult i64 %681, 8
  br i1 %682, label %769, label %683

683:                                              ; preds = %674
  %684 = getelementptr i32, i32* %629, i64 2
  %685 = getelementptr i32, i32* %26, i64 -2
  %686 = bitcast i32* %685 to i8*
  %687 = sub i64 0, %623
  %688 = getelementptr i8, i8* %686, i64 %687
  %689 = ptrtoint i8* %688 to i64
  %690 = lshr i64 %689, 2
  %691 = getelementptr i32, i32* %684, i64 %690
  %692 = getelementptr i32, i32* %26, i64 2
  %693 = getelementptr i32, i32* %692, i64 %690
  %694 = icmp ult i32* %671, %693
  %695 = icmp ult i32* %672, %691
  %696 = and i1 %694, %695
  br i1 %696, label %769, label %697

697:                                              ; preds = %683
  %698 = and i64 %681, 9223372036854775800
  %699 = getelementptr i32, i32* %672, i64 %698
  %700 = getelementptr i32, i32* %671, i64 %698
  %701 = add nsw i64 %698, -8
  %702 = lshr exact i64 %701, 3
  %703 = add nuw nsw i64 %702, 1
  %704 = and i64 %703, 1
  %705 = icmp eq i64 %701, 0
  br i1 %705, label %747, label %706

706:                                              ; preds = %697
  %707 = sub nuw nsw i64 %703, %704
  br label %708

708:                                              ; preds = %708, %706
  %709 = phi i64 [ 0, %706 ], [ %744, %708 ]
  %710 = phi i64 [ %707, %706 ], [ %745, %708 ]
  %711 = getelementptr i32, i32* %672, i64 %709
  %712 = getelementptr i32, i32* %671, i64 %709
  %713 = bitcast i32* %711 to <4 x i32>*
  %714 = load <4 x i32>, <4 x i32>* %713, align 4, !alias.scope !227
  %715 = getelementptr i32, i32* %711, i64 4
  %716 = bitcast i32* %715 to <4 x i32>*
  %717 = load <4 x i32>, <4 x i32>* %716, align 4, !alias.scope !227
  %718 = bitcast i32* %712 to <4 x i32>*
  %719 = load <4 x i32>, <4 x i32>* %718, align 4, !alias.scope !230, !noalias !227
  %720 = getelementptr i32, i32* %712, i64 4
  %721 = bitcast i32* %720 to <4 x i32>*
  %722 = load <4 x i32>, <4 x i32>* %721, align 4, !alias.scope !230, !noalias !227
  %723 = bitcast i32* %712 to <4 x i32>*
  store <4 x i32> %714, <4 x i32>* %723, align 4, !alias.scope !230, !noalias !227
  %724 = bitcast i32* %720 to <4 x i32>*
  store <4 x i32> %717, <4 x i32>* %724, align 4, !alias.scope !230, !noalias !227
  %725 = bitcast i32* %711 to <4 x i32>*
  store <4 x i32> %719, <4 x i32>* %725, align 4, !alias.scope !227
  %726 = bitcast i32* %715 to <4 x i32>*
  store <4 x i32> %722, <4 x i32>* %726, align 4, !alias.scope !227
  %727 = or i64 %709, 8
  %728 = getelementptr i32, i32* %672, i64 %727
  %729 = getelementptr i32, i32* %671, i64 %727
  %730 = bitcast i32* %728 to <4 x i32>*
  %731 = load <4 x i32>, <4 x i32>* %730, align 4, !alias.scope !227
  %732 = getelementptr i32, i32* %728, i64 4
  %733 = bitcast i32* %732 to <4 x i32>*
  %734 = load <4 x i32>, <4 x i32>* %733, align 4, !alias.scope !227
  %735 = bitcast i32* %729 to <4 x i32>*
  %736 = load <4 x i32>, <4 x i32>* %735, align 4, !alias.scope !230, !noalias !227
  %737 = getelementptr i32, i32* %729, i64 4
  %738 = bitcast i32* %737 to <4 x i32>*
  %739 = load <4 x i32>, <4 x i32>* %738, align 4, !alias.scope !230, !noalias !227
  %740 = bitcast i32* %729 to <4 x i32>*
  store <4 x i32> %731, <4 x i32>* %740, align 4, !alias.scope !230, !noalias !227
  %741 = bitcast i32* %737 to <4 x i32>*
  store <4 x i32> %734, <4 x i32>* %741, align 4, !alias.scope !230, !noalias !227
  %742 = bitcast i32* %728 to <4 x i32>*
  store <4 x i32> %736, <4 x i32>* %742, align 4, !alias.scope !227
  %743 = bitcast i32* %732 to <4 x i32>*
  store <4 x i32> %739, <4 x i32>* %743, align 4, !alias.scope !227
  %744 = add i64 %709, 16
  %745 = add i64 %710, -2
  %746 = icmp eq i64 %745, 0
  br i1 %746, label %747, label %708, !llvm.loop !232

747:                                              ; preds = %708, %697
  %748 = phi i64 [ 0, %697 ], [ %744, %708 ]
  %749 = icmp eq i64 %704, 0
  br i1 %749, label %767, label %750

750:                                              ; preds = %747
  %751 = getelementptr i32, i32* %672, i64 %748
  %752 = getelementptr i32, i32* %671, i64 %748
  %753 = bitcast i32* %751 to <4 x i32>*
  %754 = load <4 x i32>, <4 x i32>* %753, align 4, !alias.scope !227
  %755 = getelementptr i32, i32* %751, i64 4
  %756 = bitcast i32* %755 to <4 x i32>*
  %757 = load <4 x i32>, <4 x i32>* %756, align 4, !alias.scope !227
  %758 = bitcast i32* %752 to <4 x i32>*
  %759 = load <4 x i32>, <4 x i32>* %758, align 4, !alias.scope !230, !noalias !227
  %760 = getelementptr i32, i32* %752, i64 4
  %761 = bitcast i32* %760 to <4 x i32>*
  %762 = load <4 x i32>, <4 x i32>* %761, align 4, !alias.scope !230, !noalias !227
  %763 = bitcast i32* %752 to <4 x i32>*
  store <4 x i32> %754, <4 x i32>* %763, align 4, !alias.scope !230, !noalias !227
  %764 = bitcast i32* %760 to <4 x i32>*
  store <4 x i32> %757, <4 x i32>* %764, align 4, !alias.scope !230, !noalias !227
  %765 = bitcast i32* %751 to <4 x i32>*
  store <4 x i32> %759, <4 x i32>* %765, align 4, !alias.scope !227
  %766 = bitcast i32* %755 to <4 x i32>*
  store <4 x i32> %762, <4 x i32>* %766, align 4, !alias.scope !227
  br label %767

767:                                              ; preds = %747, %750
  %768 = icmp eq i64 %681, %698
  br i1 %768, label %872, label %769

769:                                              ; preds = %767, %683, %674
  %770 = phi i32* [ %672, %683 ], [ %672, %674 ], [ %699, %767 ]
  %771 = phi i32* [ %671, %683 ], [ %671, %674 ], [ %700, %767 ]
  %772 = ptrtoint i32* %771 to i64
  %773 = getelementptr i32, i32* %26, i64 -1
  %774 = ptrtoint i32* %773 to i64
  %775 = sub i64 %774, %772
  %776 = lshr i64 %775, 2
  %777 = add nuw nsw i64 %776, 1
  %778 = and i64 %777, 3
  %779 = icmp eq i64 %778, 0
  br i1 %779, label %790, label %780

780:                                              ; preds = %769, %780
  %781 = phi i32* [ %787, %780 ], [ %770, %769 ]
  %782 = phi i32* [ %786, %780 ], [ %771, %769 ]
  %783 = phi i64 [ %788, %780 ], [ %778, %769 ]
  %784 = load i32, i32* %781, align 4
  %785 = load i32, i32* %782, align 4
  store i32 %784, i32* %782, align 4
  store i32 %785, i32* %781, align 4
  %786 = getelementptr inbounds i32, i32* %782, i64 1
  %787 = getelementptr inbounds i32, i32* %781, i64 1
  %788 = add i64 %783, -1
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %790, label %780, !llvm.loop !233

790:                                              ; preds = %780, %769
  %791 = phi i32* [ %770, %769 ], [ %787, %780 ]
  %792 = phi i32* [ %771, %769 ], [ %786, %780 ]
  %793 = icmp ult i64 %775, 12
  br i1 %793, label %872, label %794

794:                                              ; preds = %790, %794
  %795 = phi i32* [ %812, %794 ], [ %791, %790 ]
  %796 = phi i32* [ %811, %794 ], [ %792, %790 ]
  %797 = load i32, i32* %795, align 4
  %798 = load i32, i32* %796, align 4
  store i32 %797, i32* %796, align 4
  store i32 %798, i32* %795, align 4
  %799 = getelementptr inbounds i32, i32* %796, i64 1
  %800 = getelementptr inbounds i32, i32* %795, i64 1
  %801 = load i32, i32* %800, align 4
  %802 = load i32, i32* %799, align 4
  store i32 %801, i32* %799, align 4
  store i32 %802, i32* %800, align 4
  %803 = getelementptr inbounds i32, i32* %796, i64 2
  %804 = getelementptr inbounds i32, i32* %795, i64 2
  %805 = load i32, i32* %804, align 4
  %806 = load i32, i32* %803, align 4
  store i32 %805, i32* %803, align 4
  store i32 %806, i32* %804, align 4
  %807 = getelementptr inbounds i32, i32* %796, i64 3
  %808 = getelementptr inbounds i32, i32* %795, i64 3
  %809 = load i32, i32* %808, align 4
  %810 = load i32, i32* %807, align 4
  store i32 %809, i32* %807, align 4
  store i32 %810, i32* %808, align 4
  %811 = getelementptr inbounds i32, i32* %796, i64 4
  %812 = getelementptr inbounds i32, i32* %795, i64 4
  %813 = icmp eq i32* %811, %26
  br i1 %813, label %872, label %794, !llvm.loop !234

814:                                              ; preds = %663, %814
  %815 = phi i64 [ %817, %814 ], [ %667, %663 ]
  %816 = phi i64 [ %815, %814 ], [ %665, %663 ]
  %817 = srem i64 %816, %815
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %814

819:                                              ; preds = %814
  %820 = icmp eq i64 %815, 0
  br i1 %820, label %848, label %821

821:                                              ; preds = %819
  %822 = getelementptr inbounds i32, i32* %629, i64 %815
  %823 = shl nsw i64 %815, 2
  %824 = add i64 %823, -4
  %825 = and i64 %824, 4
  %826 = icmp eq i64 %825, 0
  br i1 %826, label %827, label %845

827:                                              ; preds = %821
  %828 = getelementptr inbounds i32, i32* %822, i64 -1
  %829 = load i32, i32* %828, align 4
  %830 = getelementptr inbounds i32, i32* %828, i64 %665
  br label %831

831:                                              ; preds = %831, %827
  %832 = phi i32* [ %828, %827 ], [ %833, %831 ]
  %833 = phi i32* [ %830, %827 ], [ %842, %831 ]
  %834 = ptrtoint i32* %833 to i64
  %835 = load i32, i32* %833, align 4
  store i32 %835, i32* %832, align 4
  %836 = sub i64 %624, %834
  %837 = ashr exact i64 %836, 2
  %838 = icmp slt i64 %665, %837
  %839 = getelementptr inbounds i32, i32* %833, i64 %665
  %840 = sub nsw i64 %665, %837
  %841 = getelementptr inbounds i32, i32* %629, i64 %840
  %842 = select i1 %838, i32* %839, i32* %841
  %843 = icmp eq i32* %842, %828
  br i1 %843, label %844, label %831

844:                                              ; preds = %831
  store i32 %829, i32* %833, align 4
  br label %845

845:                                              ; preds = %844, %821
  %846 = phi i32* [ %828, %844 ], [ %822, %821 ]
  %847 = icmp eq i64 %824, 0
  br i1 %847, label %848, label %850

848:                                              ; preds = %845, %901, %819
  %849 = getelementptr inbounds i32, i32* %629, i64 %667
  br label %872

850:                                              ; preds = %845, %901
  %851 = phi i32* [ %869, %901 ], [ %846, %845 ]
  %852 = getelementptr inbounds i32, i32* %851, i64 -1
  %853 = load i32, i32* %852, align 4
  %854 = getelementptr inbounds i32, i32* %852, i64 %665
  br label %855

855:                                              ; preds = %855, %850
  %856 = phi i32* [ %852, %850 ], [ %857, %855 ]
  %857 = phi i32* [ %854, %850 ], [ %866, %855 ]
  %858 = ptrtoint i32* %857 to i64
  %859 = load i32, i32* %857, align 4
  store i32 %859, i32* %856, align 4
  %860 = sub i64 %624, %858
  %861 = ashr exact i64 %860, 2
  %862 = icmp slt i64 %665, %861
  %863 = getelementptr inbounds i32, i32* %857, i64 %665
  %864 = sub nsw i64 %665, %861
  %865 = getelementptr inbounds i32, i32* %629, i64 %864
  %866 = select i1 %862, i32* %863, i32* %865
  %867 = icmp eq i32* %866, %852
  br i1 %867, label %868, label %855

868:                                              ; preds = %855
  store i32 %853, i32* %857, align 4
  %869 = getelementptr inbounds i32, i32* %851, i64 -2
  %870 = load i32, i32* %869, align 4
  %871 = getelementptr inbounds i32, i32* %869, i64 %665
  br label %888

872:                                              ; preds = %790, %794, %669, %767, %622, %634, %645, %661, %848
  %873 = phi i32* [ %629, %634 ], [ %630, %622 ], [ %646, %645 ], [ %662, %661 ], [ %849, %848 ], [ %26, %767 ], [ %26, %669 ], [ %26, %794 ], [ %26, %790 ]
  %874 = add nsw i64 %626, %625
  %875 = add nsw i64 %627, %628
  %876 = icmp slt i64 %874, %875
  br i1 %876, label %877, label %879

877:                                              ; preds = %872
  %878 = ptrtoint i32* %873 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3x114AtomENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(i32* %560, i32* %629, i32* %873, %"struct.base::internal::flat_tree<x11::Atom, base::identity, std::__1::less<void>, std::__1::vector<x11::Atom, std::__1::allocator<x11::Atom> > >::value_compare"* dereferenceable(1) %3, i64 %626, i64 %625, i32* %6, i64 %7)
  br label %880

879:                                              ; preds = %872
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3x114AtomENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(i32* %873, i32* %630, i32* %15, %"struct.base::internal::flat_tree<x11::Atom, base::identity, std::__1::less<void>, std::__1::vector<x11::Atom, std::__1::allocator<x11::Atom> > >::value_compare"* dereferenceable(1) %3, i64 %627, i64 %628, i32* %6, i64 %7)
  br label %880

880:                                              ; preds = %877, %879
  %881 = phi i64 [ %878, %877 ], [ %550, %879 ]
  %882 = phi i64 [ %624, %877 ], [ %623, %879 ]
  %883 = phi i64 [ %628, %877 ], [ %625, %879 ]
  %884 = phi i64 [ %627, %877 ], [ %626, %879 ]
  %885 = phi i32* [ %15, %877 ], [ %873, %879 ]
  %886 = icmp eq i64 %883, 0
  br i1 %886, label %887, label %14

887:                                              ; preds = %880, %23, %554, %320, %509, %477, %481, %456, %8, %591, %353, %309, %304, %296, %165, %34
  ret void

888:                                              ; preds = %888, %868
  %889 = phi i32* [ %869, %868 ], [ %890, %888 ]
  %890 = phi i32* [ %871, %868 ], [ %899, %888 ]
  %891 = ptrtoint i32* %890 to i64
  %892 = load i32, i32* %890, align 4
  store i32 %892, i32* %889, align 4
  %893 = sub i64 %624, %891
  %894 = ashr exact i64 %893, 2
  %895 = icmp slt i64 %665, %894
  %896 = getelementptr inbounds i32, i32* %890, i64 %665
  %897 = sub nsw i64 %665, %894
  %898 = getelementptr inbounds i32, i32* %629, i64 %897
  %899 = select i1 %895, i32* %896, i32* %898
  %900 = icmp eq i32* %899, %869
  br i1 %900, label %901, label %888

901:                                              ; preds = %888
  store i32 %870, i32* %890, align 4
  %902 = icmp eq i32* %869, %629
  br i1 %902, label %848, label %850
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector.727"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #17
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.727"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.727"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #19
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #19
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #18
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #17
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #17
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #18
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN2ui9X11WindowEFvRKN3gfx4RectEEJNS0_17UnretainedWrapperIS4_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.gfx::Rect"*
  %8 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 %12
  %14 = bitcast i8* %13 to %"class.ui::X11Window"*
  %15 = and i64 %9, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %9, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)**
  %23 = load void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*, void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %9 to void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.ui::X11Window"*, %"class.gfx::Rect"*)* [ %23, %17 ], [ %25, %24 ]
  tail call void %27(%"class.ui::X11Window"* %14, %"class.gfx::Rect"* dereferenceable(16) %7) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN2ui9X11WindowEFvRKN3gfx4RectEEJNS0_17UnretainedWrapperIS3_EES5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE(%"class.base::internal::CancelableCallbackImpl"*, %"class.base::OnceCallback.30"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::OnceCallback.30", align 8
  %5 = alloca %"class.base::WeakPtr.887", align 8
  %6 = bitcast %"class.base::OnceCallback.30"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = bitcast %"class.base::WeakPtr.887"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #17
  %8 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17, !noalias !235
  %9 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %0, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %9) #17, !noalias !235
  %10 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load i64, i64* %10, align 8, !noalias !235
  %12 = getelementptr inbounds %"class.base::WeakPtr.887", %"class.base::WeakPtr.887"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %12, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %11) #17
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17, !noalias !235
  %13 = call i8* @_Znwm(i64 64) #18, !noalias !238
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEES5_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE) #17, !noalias !238
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.base::internal::CancelableCallbackImpl"*)* @_ZN4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE11ForwardOnceIJEEEvDpT_ to i64), i64 0>, <2 x i64>* %16, align 8, !noalias !238
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to %"class.base::internal::WeakReference"*
  %19 = getelementptr inbounds %"class.base::WeakPtr.887", %"class.base::WeakPtr.887"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %18, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %19) #17, !noalias !238
  %20 = getelementptr inbounds i8, i8* %13, i64 56
  %21 = bitcast i8* %20 to i64*
  %22 = getelementptr inbounds %"class.base::WeakPtr.887", %"class.base::WeakPtr.887"* %5, i64 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8, !noalias !238
  store i64 %23, i64* %21, align 8, !noalias !238
  %24 = bitcast %"class.base::OnceCallback.30"* %4 to i8**
  store i8* %13, i8** %24, align 8, !alias.scope !238
  %25 = getelementptr inbounds %"class.base::OnceCallback.30", %"class.base::OnceCallback.30"* %1, i64 0, i32 0
  %26 = getelementptr inbounds %"class.base::OnceCallback.30", %"class.base::OnceCallback.30"* %4, i64 0, i32 0
  %27 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %25, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %26) #17
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #17
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE11ForwardOnceIJEEEvDpT_(%"class.base::internal::CancelableCallbackImpl"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.30", align 8
  %3 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %3) #17
  %4 = bitcast %"class.base::OnceCallback.30"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::internal::CancelableCallbackImpl"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::OnceCallback.30"* %2 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback.30", %"class.base::OnceCallback.30"* %2, i64 0, i32 0
  %10 = inttoptr i64 %7 to %"class.base::internal::BindStateBase"*
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %10, i64 0, i32 1
  %12 = bitcast void ()** %11 to void (%"class.base::internal::BindStateBase"*)**
  %13 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %12, align 8
  tail call void %13(%"class.base::internal::BindStateBase"* %10) #17
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEES5_E7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.base::internal::CancelableCallbackImpl"**
  %10 = load %"class.base::internal::CancelableCallbackImpl"*, %"class.base::internal::CancelableCallbackImpl"** %9, align 8
  %11 = icmp eq %"class.base::internal::CancelableCallbackImpl"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i64 0, i64 0)) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.base::internal::CancelableCallbackImpl"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.base::internal::CancelableCallbackImpl"*)**
  %37 = load void (%"class.base::internal::CancelableCallbackImpl"*)*, void (%"class.base::internal::CancelableCallbackImpl"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.base::internal::CancelableCallbackImpl"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.base::internal::CancelableCallbackImpl"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.base::internal::CancelableCallbackImpl"* %28) #17
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #17
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #18
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.base::internal::CancelableCallbackImpl"**
  %9 = load %"class.base::internal::CancelableCallbackImpl"*, %"class.base::internal::CancelableCallbackImpl"** %8, align 8
  %10 = icmp ne %"class.base::internal::CancelableCallbackImpl"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #17
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!9 = !{!10}
!10 = distinct !{!10, !11}
!11 = distinct !{!11, !"LVerDomain"}
!12 = !{!13}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = distinct !{!18, !17}
!19 = distinct !{!19, !15}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN2ui9X11Window23GetWindowMaskForXWindowEv: argument 0"}
!22 = distinct !{!22, !"_ZN2ui9X11Window23GetWindowMaskForXWindowEv"}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !15}
!29 = distinct !{!29, !17}
!30 = distinct !{!30, !17}
!31 = distinct !{!31, !15}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !15}
!38 = distinct !{!38, !17}
!39 = distinct !{!39, !17}
!40 = distinct !{!40, !15}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !15}
!47 = distinct !{!47, !17}
!48 = distinct !{!48, !17}
!49 = distinct !{!49, !15}
!50 = !{!"branch_weights", i32 1, i32 1048575}
!51 = !{!52, !54}
!52 = distinct !{!52, !53, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3x116FutureIvE11IgnoreErrorEvEUlNS3_8ResponseIvEEE_JEEEDcOT0_DpOT1_: argument 0"}
!53 = distinct !{!53, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3x116FutureIvE11IgnoreErrorEvEUlNS3_8ResponseIvEEE_JEEEDcOT0_DpOT1_"}
!54 = distinct !{!54, !55, !"_ZN4base8BindOnceIZN3x116FutureIvE11IgnoreErrorEvEUlNS1_8ResponseIvEEE_JEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!55 = distinct !{!55, !"_ZN4base8BindOnceIZN3x116FutureIvE11IgnoreErrorEvEUlNS1_8ResponseIvEEE_JEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!56 = !{!57, !59}
!57 = distinct !{!57, !58, !"_ZN4base8internal8BindImplINS_12OnceCallbackERZN3x116FutureIvE10OnResponseENS2_IFvNS3_8ResponseIvEEEEEEUlS9_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS3_5ErrorENSD_14default_deleteISF_EEEEE_JS9_EEEDcOT0_DpOT1_: argument 0"}
!58 = distinct !{!58, !"_ZN4base8internal8BindImplINS_12OnceCallbackERZN3x116FutureIvE10OnResponseENS2_IFvNS3_8ResponseIvEEEEEEUlS9_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS3_5ErrorENSD_14default_deleteISF_EEEEE_JS9_EEEDcOT0_DpOT1_"}
!59 = distinct !{!59, !60, !"_ZN4base8BindOnceIRZN3x116FutureIvE10OnResponseENS_12OnceCallbackIFvNS1_8ResponseIvEEEEEEUlS8_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS1_5ErrorENSC_14default_deleteISE_EEEEE_JS8_EEENS4_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_: argument 0"}
!60 = distinct !{!60, !"_ZN4base8BindOnceIRZN3x116FutureIvE10OnResponseENS_12OnceCallbackIFvNS1_8ResponseIvEEEEEEUlS8_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS1_5ErrorENSC_14default_deleteISE_EEEEE_JS8_EEENS4_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_"}
!61 = !{!62, !64}
!62 = distinct !{!62, !63, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFvN3x116WindowENS3_6CursorEEJRS4_EEEDcOT0_DpOT1_: argument 0"}
!63 = distinct !{!63, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFvN3x116WindowENS3_6CursorEEJRS4_EEEDcOT0_DpOT1_"}
!64 = distinct !{!64, !65, !"_ZN4base8BindOnceIRFvN3x116WindowENS1_6CursorEEJRS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!65 = distinct !{!65, !"_ZN4base8BindOnceIRFvN3x116WindowENS1_6CursorEEJRS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEE8callbackEv: argument 0"}
!68 = distinct !{!68, !"_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEE8callbackEv"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZNK2ui9X11Window12GetWorkspaceEv: argument 0"}
!71 = distinct !{!71, !"_ZNK2ui9X11Window12GetWorkspaceEv"}
!72 = !{!"branch_weights", i32 1, i32 2000}
!73 = !{!"branch_weights", i32 2000, i32 1}
!74 = !{!75, !77}
!75 = distinct !{!75, !76, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2ui22PlatformWindowDelegateEFvPNS3_5EventEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!76 = distinct !{!76, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2ui22PlatformWindowDelegateEFvPNS3_5EventEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!77 = distinct !{!77, !78, !"_ZN4base8BindOnceIMN2ui22PlatformWindowDelegateEFvPNS1_5EventEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!78 = distinct !{!78, !"_ZN4base8BindOnceIMN2ui22PlatformWindowDelegateEFvPNS1_5EventEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!79 = !{!80}
!80 = distinct !{!80, !81, !"_ZNK4base14WeakPtrFactoryIN2ui9X11WindowEE10GetWeakPtrEv: argument 0"}
!81 = distinct !{!81, !"_ZNK4base14WeakPtrFactoryIN2ui9X11WindowEE10GetWeakPtrEv"}
!82 = !{!83}
!83 = distinct !{!83, !84}
!84 = distinct !{!84, !"LVerDomain"}
!85 = !{!86}
!86 = distinct !{!86, !84}
!87 = distinct !{!87, !15}
!88 = distinct !{!88, !17}
!89 = distinct !{!89, !17}
!90 = distinct !{!90, !15}
!91 = !{!92, !94}
!92 = distinct !{!92, !93, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2ui9X11WindowEFvRKN3gfx4RectEEJNS0_17UnretainedWrapperIS4_EERS6_EEEDcOT0_DpOT1_: argument 0"}
!93 = distinct !{!93, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2ui9X11WindowEFvRKN3gfx4RectEEJNS0_17UnretainedWrapperIS4_EERS6_EEEDcOT0_DpOT1_"}
!94 = distinct !{!94, !95, !"_ZN4base8BindOnceIMN2ui9X11WindowEFvRKN3gfx4RectEEJNS_8internal17UnretainedWrapperIS2_EERS4_EEENS_12OnceCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!95 = distinct !{!95, !"_ZN4base8BindOnceIMN2ui9X11WindowEFvRKN3gfx4RectEEJNS_8internal17UnretainedWrapperIS2_EERS4_EEENS_12OnceCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE8callbackEv: argument 0"}
!98 = distinct !{!98, !"_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE8callbackEv"}
!99 = !{!100}
!100 = distinct !{!100, !101}
!101 = distinct !{!101, !"LVerDomain"}
!102 = !{!103}
!103 = distinct !{!103, !101}
!104 = distinct !{!104, !15}
!105 = distinct !{!105, !17}
!106 = distinct !{!106, !15}
!107 = distinct !{!107, !17}
!108 = !{!109}
!109 = distinct !{!109, !110}
!110 = distinct !{!110, !"LVerDomain"}
!111 = !{!112}
!112 = distinct !{!112, !110}
!113 = distinct !{!113, !15}
!114 = distinct !{!114, !17}
!115 = distinct !{!115, !17}
!116 = distinct !{!116, !15}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121}
!121 = distinct !{!121, !119}
!122 = distinct !{!122, !15}
!123 = distinct !{!123, !17}
!124 = distinct !{!124, !17}
!125 = distinct !{!125, !15}
!126 = distinct !{!126, !15}
!127 = distinct !{!127, !17}
!128 = distinct !{!128, !129, !15}
!129 = !{!"llvm.loop.unroll.runtime.disable"}
!130 = !{!131}
!131 = distinct !{!131, !132}
!132 = distinct !{!132, !"LVerDomain"}
!133 = !{!134}
!134 = distinct !{!134, !132}
!135 = distinct !{!135, !15}
!136 = distinct !{!136, !17}
!137 = distinct !{!137, !17}
!138 = distinct !{!138, !15}
!139 = !{!140}
!140 = distinct !{!140, !141, !"_ZNK4base14WeakPtrFactoryINS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEEEE10GetWeakPtrEv: argument 0"}
!141 = distinct !{!141, !"_ZNK4base14WeakPtrFactoryINS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEEEE10GetWeakPtrEv"}
!142 = !{!143, !145}
!143 = distinct !{!143, !144, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMNS0_22CancelableCallbackImplINS2_IFvN3x116CursorEEEEEEFvS5_EJNS_7WeakPtrIS8_EEEEEDcOT0_DpOT1_: argument 0"}
!144 = distinct !{!144, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMNS0_22CancelableCallbackImplINS2_IFvN3x116CursorEEEEEEFvS5_EJNS_7WeakPtrIS8_EEEEEDcOT0_DpOT1_"}
!145 = distinct !{!145, !146, !"_ZN4base8BindOnceIRMNS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEEEFvS5_EJNS_7WeakPtrIS8_EEEEENS3_INS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!146 = distinct !{!146, !"_ZN4base8BindOnceIRMNS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvN3x116CursorEEEEEEFvS5_EJNS_7WeakPtrIS8_EEEEENS3_INS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!147 = !{!148}
!148 = distinct !{!148, !149}
!149 = distinct !{!149, !"LVerDomain"}
!150 = !{!151}
!151 = distinct !{!151, !149}
!152 = distinct !{!152, !15}
!153 = distinct !{!153, !17}
!154 = distinct !{!154, !15}
!155 = distinct !{!155, !17}
!156 = !{!157}
!157 = distinct !{!157, !158}
!158 = distinct !{!158, !"LVerDomain"}
!159 = !{!160}
!160 = distinct !{!160, !158}
!161 = distinct !{!161, !15}
!162 = distinct !{!162, !17}
!163 = distinct !{!163, !17}
!164 = distinct !{!164, !15}
!165 = distinct !{!165, !17}
!166 = !{!167}
!167 = distinct !{!167, !168}
!168 = distinct !{!168, !"LVerDomain"}
!169 = !{!170}
!170 = distinct !{!170, !168}
!171 = distinct !{!171, !15}
!172 = distinct !{!172, !17}
!173 = !{!174}
!174 = distinct !{!174, !175}
!175 = distinct !{!175, !"LVerDomain"}
!176 = !{!177}
!177 = distinct !{!177, !175}
!178 = distinct !{!178, !15}
!179 = distinct !{!179, !17}
!180 = distinct !{!180, !17}
!181 = distinct !{!181, !15}
!182 = distinct !{!182, !15}
!183 = !{!184}
!184 = distinct !{!184, !185}
!185 = distinct !{!185, !"LVerDomain"}
!186 = !{!187}
!187 = distinct !{!187, !185}
!188 = distinct !{!188, !15}
!189 = distinct !{!189, !17}
!190 = distinct !{!190, !17}
!191 = distinct !{!191, !15}
!192 = !{!193}
!193 = distinct !{!193, !194}
!194 = distinct !{!194, !"LVerDomain"}
!195 = !{!196}
!196 = distinct !{!196, !194}
!197 = distinct !{!197, !15}
!198 = distinct !{!198, !17}
!199 = distinct !{!199, !17}
!200 = distinct !{!200, !15}
!201 = distinct !{!201, !17}
!202 = !{!203}
!203 = distinct !{!203, !204}
!204 = distinct !{!204, !"LVerDomain"}
!205 = !{!206}
!206 = distinct !{!206, !204}
!207 = distinct !{!207, !15}
!208 = distinct !{!208, !17}
!209 = distinct !{!209, !17}
!210 = !{!211}
!211 = distinct !{!211, !212}
!212 = distinct !{!212, !"LVerDomain"}
!213 = !{!214}
!214 = distinct !{!214, !212}
!215 = distinct !{!215, !15}
!216 = distinct !{!216, !17}
!217 = distinct !{!217, !15}
!218 = !{!219}
!219 = distinct !{!219, !220}
!220 = distinct !{!220, !"LVerDomain"}
!221 = !{!222}
!222 = distinct !{!222, !220}
!223 = distinct !{!223, !15}
!224 = distinct !{!224, !17}
!225 = distinct !{!225, !15}
!226 = distinct !{!226, !15}
!227 = !{!228}
!228 = distinct !{!228, !229}
!229 = distinct !{!229, !"LVerDomain"}
!230 = !{!231}
!231 = distinct !{!231, !229}
!232 = distinct !{!232, !15}
!233 = distinct !{!233, !17}
!234 = distinct !{!234, !15}
!235 = !{!236}
!236 = distinct !{!236, !237, !"_ZNK4base14WeakPtrFactoryINS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEE10GetWeakPtrEv: argument 0"}
!237 = distinct !{!237, !"_ZNK4base14WeakPtrFactoryINS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEE10GetWeakPtrEv"}
!238 = !{!239, !241}
!239 = distinct !{!239, !240, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMNS0_22CancelableCallbackImplINS2_IFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEEDcOT0_DpOT1_: argument 0"}
!240 = distinct !{!240, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMNS0_22CancelableCallbackImplINS2_IFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEEDcOT0_DpOT1_"}
!241 = distinct !{!241, !242, !"_ZN4base8BindOnceIRMNS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEENS3_INS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!242 = distinct !{!242, !"_ZN4base8BindOnceIRMNS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEENS3_INS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
