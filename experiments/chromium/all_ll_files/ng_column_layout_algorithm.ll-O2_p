; ModuleID = '../../third_party/blink/renderer/core/layout/ng/ng_column_layout_algorithm.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/ng_column_layout_algorithm.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::NGColumnLayoutAlgorithm" = type <{ %"class.blink::NGLayoutAlgorithm", i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, i8, [5 x i8] }>
%"class.blink::NGLayoutAlgorithm" = type { %"class.blink::NGLayoutAlgorithmOperations", %"class.blink::NGBlockNode", %"class.blink::NGEarlyBreak"*, %class.scoped_refptr.1845, %"class.blink::NGBoxFragmentBuilder" }
%"class.blink::NGLayoutAlgorithmOperations" = type { i32 (...)** }
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1631, %"class.WTF::Vector.1798", %"class.std::__1::unique_ptr.1803", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1824, %"class.blink::Persistent.1825" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2171 }
%class.scoped_refptr.2171 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2172", %"class.WTF::Vector.630", %"class.WTF::Vector.2174", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2172" = type { %"class.base::RefCounted.2173" }
%"class.base::RefCounted.2173" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2174" = type { %"class.WTF::VectorBuffer.2175" }
%"class.WTF::VectorBuffer.2175" = type { %"class.WTF::VectorBufferBase.2176" }
%"class.WTF::VectorBufferBase.2176" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2177 }
%union.anon.2177 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2162" }
%"class.blink::Member.2162" = type { %"class.blink::MemberBase.2163" }
%"class.blink::MemberBase.2163" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2164" }
%"class.blink::Member.2164" = type { %"class.blink::MemberBase.2165" }
%"class.blink::MemberBase.2165" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2185 }
%class.scoped_refptr.2185 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2195" }
%"class.blink::Member.2195" = type { %"class.blink::MemberBase.2196" }
%"class.blink::MemberBase.2196" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2191" }
%"class.blink::MemberBase.2191" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2192" }
%"class.blink::MemberBase.2192" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2193" }
%"class.blink::MemberBase.2193" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2194" }
%"class.blink::MemberBase.2194" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2186", %"class.WTF::Vector.2186" }
%"class.WTF::Vector.2186" = type { %"class.WTF::VectorBuffer.2187" }
%"class.WTF::VectorBuffer.2187" = type { %"class.WTF::VectorBufferBase.2188" }
%"class.WTF::VectorBufferBase.2188" = type { %class.scoped_refptr.2185*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2166" }
%"class.WTF::Vector.2166" = type { %"class.WTF::VectorBuffer.2167" }
%"class.WTF::VectorBuffer.2167" = type { %"class.WTF::VectorBufferBase.2168" }
%"class.WTF::VectorBufferBase.2168" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1641", %"class.absl::optional.1641", %"class.absl::optional.1641" }
%"class.absl::optional.1641" = type { %"class.absl::optional_internal::optional_data.1642" }
%"class.absl::optional_internal::optional_data.1642" = type { %"class.absl::optional_internal::optional_data_base.1643" }
%"class.absl::optional_internal::optional_data_base.1643" = type { %"class.absl::optional_internal::optional_data_dtor_base.1644" }
%"class.absl::optional_internal::optional_data_dtor_base.1644" = type { i8, %union.anon.1645 }
%union.anon.1645 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2181" }
%"class.WTF::VectorBuffer.2181" = type { %"class.WTF::VectorBufferBase.2182", [32 x i8] }
%"class.WTF::VectorBufferBase.2182" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1631 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1632", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.1779, %union.anon.1797, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1632" = type { %"class.base::RefCounted.1633" }
%"class.base::RefCounted.1633" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1634, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1634 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1635 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1635 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1669 }
%class.scoped_refptr.1669 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1670", [4 x i8], %"class.std::__1::unique_ptr.1672", i64, %"class.WTF::Vector.1676", %"class.WTF::Vector.1681", %"class.WTF::Vector.1687", %"class.WTF::Vector.1705", %class.scoped_refptr.1546, %"class.WTF::HashMap.1711", %"class.WTF::Vector.1716", %"class.WTF::Vector.1676", %"class.WTF::Vector.1721", %"class.WTF::HashMap.1726", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1670" = type { %"class.base::RefCountedThreadSafe.1671" }
%"class.base::RefCountedThreadSafe.1671" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1672" = type { %"class.std::__1::__compressed_pair.1673" }
%"class.std::__1::__compressed_pair.1673" = type { %"struct.std::__1::__compressed_pair_elem.1674" }
%"struct.std::__1::__compressed_pair_elem.1674" = type { i8* }
%"class.WTF::Vector.1681" = type { %"class.WTF::VectorBuffer.1682" }
%"class.WTF::VectorBuffer.1682" = type { %"class.WTF::VectorBufferBase.1683", [8 x i8] }
%"class.WTF::VectorBufferBase.1683" = type { %class.scoped_refptr.1684*, i32, i32 }
%class.scoped_refptr.1684 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1687" = type { %"class.WTF::VectorBuffer.1688" }
%"class.WTF::VectorBuffer.1688" = type { %"class.WTF::VectorBufferBase.1689" }
%"class.WTF::VectorBufferBase.1689" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1691", %"class.std::__1::unique_ptr.1697" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1690 }
%class.scoped_refptr.1690 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1691" = type { %"class.std::__1::__compressed_pair.1692" }
%"class.std::__1::__compressed_pair.1692" = type { %"struct.std::__1::__compressed_pair_elem.1693" }
%"struct.std::__1::__compressed_pair_elem.1693" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1697" = type { %"class.std::__1::__compressed_pair.1698" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.1699" }
%"struct.std::__1::__compressed_pair_elem.1699" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1705" = type { %"class.WTF::VectorBuffer.1706" }
%"class.WTF::VectorBuffer.1706" = type { %"class.WTF::VectorBufferBase.1707" }
%"class.WTF::VectorBufferBase.1707" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1708", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1708" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1711" = type { %"class.WTF::HashTable.1712" }
%"class.WTF::HashTable.1712" = type <{ %"struct.WTF::KeyValuePair.1715"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1715" = type opaque
%"class.WTF::Vector.1716" = type { %"class.WTF::VectorBuffer.1717" }
%"class.WTF::VectorBuffer.1717" = type { %"class.WTF::VectorBufferBase.1718" }
%"class.WTF::VectorBufferBase.1718" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1676" = type { %"class.WTF::VectorBuffer.1677" }
%"class.WTF::VectorBuffer.1677" = type { %"class.WTF::VectorBufferBase.1678", [16 x i8] }
%"class.WTF::VectorBufferBase.1678" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1721" = type { %"class.WTF::VectorBuffer.1722" }
%"class.WTF::VectorBuffer.1722" = type { %"class.WTF::VectorBufferBase.1723" }
%"class.WTF::VectorBufferBase.1723" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1726" = type { %"class.WTF::HashTable.1727" }
%"class.WTF::HashTable.1727" = type <{ %"struct.WTF::KeyValuePair.1730"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1730" = type { i8**, %"class.std::__1::unique_ptr.2197" }
%"class.std::__1::unique_ptr.2197" = type { %"class.std::__1::__compressed_pair.2198" }
%"class.std::__1::__compressed_pair.2198" = type { %"struct.std::__1::__compressed_pair_elem.2199" }
%"struct.std::__1::__compressed_pair_elem.2199" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1731" }
%"class.std::__1::unique_ptr.1731" = type { %"class.std::__1::__compressed_pair.1732" }
%"class.std::__1::__compressed_pair.1732" = type { %"struct.std::__1::__compressed_pair_elem.1733" }
%"struct.std::__1::__compressed_pair_elem.1733" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1734, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1751" }
%class.scoped_refptr.1734 = type { %"class.base::RefCountedData.1735"* }
%"class.base::RefCountedData.1735" = type { %"class.base::RefCountedThreadSafe.1736", %"class.WTF::Vector.1737" }
%"class.base::RefCountedThreadSafe.1736" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1737" = type { %"class.WTF::VectorBuffer.1738" }
%"class.WTF::VectorBuffer.1738" = type { %"class.WTF::VectorBufferBase.1739" }
%"class.WTF::VectorBufferBase.1739" = type { %class.scoped_refptr.1740*, i32, i32 }
%class.scoped_refptr.1740 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1741", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1743" }
%"class.WTF::RefCounted.1741" = type { %"class.base::RefCounted.1742" }
%"class.base::RefCounted.1742" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1743" = type { %"class.std::__1::__compressed_pair.1744" }
%"class.std::__1::__compressed_pair.1744" = type { %"struct.std::__1::__compressed_pair_elem.1745" }
%"struct.std::__1::__compressed_pair_elem.1745" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1751" = type { %"class.std::__1::__compressed_pair.1752" }
%"class.std::__1::__compressed_pair.1752" = type { %"struct.std::__1::__compressed_pair_elem.1753" }
%"struct.std::__1::__compressed_pair_elem.1753" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1754", %"class.WTF::Vector.1767", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1754" = type { %"class.WTF::VectorBuffer.1755" }
%"class.WTF::VectorBuffer.1755" = type { %"class.WTF::VectorBufferBase.1756", [320 x i8] }
%"class.WTF::VectorBufferBase.1756" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1757", %"class.WTF::Vector.1757", %class.scoped_refptr.1762, i8, [7 x i8] }>
%"class.WTF::Vector.1757" = type { %"class.WTF::VectorBuffer.1758" }
%"class.WTF::VectorBuffer.1758" = type { %"class.WTF::VectorBufferBase.1759", [8 x i8] }
%"class.WTF::VectorBufferBase.1759" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1762 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1763", %"class.WTF::Vector.1737", %"class.WTF::Vector.1737" }
%"class.WTF::RefCounted.1763" = type { %"class.base::RefCounted.1764" }
%"class.base::RefCounted.1764" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1767" = type { %"class.WTF::VectorBuffer.1768" }
%"class.WTF::VectorBuffer.1768" = type { %"class.WTF::VectorBufferBase.1769", [288 x i8] }
%"class.WTF::VectorBufferBase.1769" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1757", %"class.WTF::Vector.1757" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1770 }
%class.scoped_refptr.1770 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.1779 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1780", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1782, %"class.std::__1::unique_ptr.1785" }
%"class.WTF::RefCounted.1780" = type { %"class.base::RefCounted.1781" }
%"class.base::RefCounted.1781" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1782 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1783", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.1783" = type { %"class.base::RefCounted.1784" }
%"class.base::RefCounted.1784" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1785" = type { %"class.std::__1::__compressed_pair.1786" }
%"class.std::__1::__compressed_pair.1786" = type { %"struct.std::__1::__compressed_pair_elem.1787" }
%"struct.std::__1::__compressed_pair_elem.1787" = type { %"class.WTF::Vector.1788"* }
%"class.WTF::Vector.1788" = type { %"class.WTF::VectorBuffer.1789" }
%"class.WTF::VectorBuffer.1789" = type { %"class.WTF::VectorBufferBase.1790" }
%"class.WTF::VectorBufferBase.1790" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1791 }
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%union.anon.1791 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%union.anon.1797 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1636", %class.scoped_refptr.1844, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.2111, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1669, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.2112", %"class.absl::optional.2104" }
%"class.absl::optional.1636" = type { %"class.absl::optional_internal::optional_data.1637" }
%"class.absl::optional_internal::optional_data.1637" = type { %"class.absl::optional_internal::optional_data_base.1638" }
%"class.absl::optional_internal::optional_data_base.1638" = type { %"class.absl::optional_internal::optional_data_dtor_base.1639" }
%"class.absl::optional_internal::optional_data_dtor_base.1639" = type { i8, %union.anon.1640 }
%union.anon.1640 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.1844 = type { %"class.blink::NGEarlyBreak"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%union.anon.2111 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2112" = type { %"class.std::__1::__compressed_pair.2113" }
%"class.std::__1::__compressed_pair.2113" = type { %"struct.std::__1::__compressed_pair_elem.2114" }
%"struct.std::__1::__compressed_pair_elem.2114" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.2085", %"class.WTF::Vector.2090", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.2085" = type { %"class.WTF::VectorBuffer.2086" }
%"class.WTF::VectorBuffer.2086" = type { %"class.WTF::VectorBufferBase.2087" }
%"class.WTF::VectorBufferBase.2087" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.2090" = type { %"class.WTF::VectorBuffer.2091" }
%"class.WTF::VectorBuffer.2091" = type { %"class.WTF::VectorBufferBase.2092" }
%"class.WTF::VectorBufferBase.2092" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.2104" = type { %"class.absl::optional_internal::optional_data.2105" }
%"class.absl::optional_internal::optional_data.2105" = type { %"class.absl::optional_internal::optional_data_base.2106" }
%"class.absl::optional_internal::optional_data_base.2106" = type { %"class.absl::optional_internal::optional_data_dtor_base.2107" }
%"class.absl::optional_internal::optional_data_dtor_base.2107" = type { i8, %union.anon.2108 }
%union.anon.2108 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1798" = type { %"class.WTF::VectorBuffer.1799" }
%"class.WTF::VectorBuffer.1799" = type { %"class.WTF::VectorBufferBase.1800", [8 x i8] }
%"class.WTF::VectorBufferBase.1800" = type { %class.scoped_refptr.1631*, i32, i32 }
%"class.std::__1::unique_ptr.1803" = type { %"class.std::__1::__compressed_pair.1804" }
%"class.std::__1::__compressed_pair.1804" = type { %"struct.std::__1::__compressed_pair_elem.1805" }
%"struct.std::__1::__compressed_pair_elem.1805" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1806", %"class.absl::optional.1811", %"class.absl::optional.1816" }
%"class.absl::optional.1806" = type { %"class.absl::optional_internal::optional_data.1807" }
%"class.absl::optional_internal::optional_data.1807" = type { %"class.absl::optional_internal::optional_data_base.1808" }
%"class.absl::optional_internal::optional_data_base.1808" = type { %"class.absl::optional_internal::optional_data_dtor_base.1809" }
%"class.absl::optional_internal::optional_data_dtor_base.1809" = type { i8, %union.anon.1810 }
%union.anon.1810 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1811" = type { %"class.absl::optional_internal::optional_data.1812" }
%"class.absl::optional_internal::optional_data.1812" = type { %"class.absl::optional_internal::optional_data_base.1813" }
%"class.absl::optional_internal::optional_data_base.1813" = type { %"class.absl::optional_internal::optional_data_dtor_base.1814" }
%"class.absl::optional_internal::optional_data_dtor_base.1814" = type { i8, [3 x i8], %union.anon.1815 }
%union.anon.1815 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1816" = type { %"class.absl::optional_internal::optional_data.1817" }
%"class.absl::optional_internal::optional_data.1817" = type { %"class.absl::optional_internal::optional_data_base.1818" }
%"class.absl::optional_internal::optional_data_base.1818" = type { %"class.absl::optional_internal::optional_data_dtor_base.1819" }
%"class.absl::optional_internal::optional_data_dtor_base.1819" = type { i8, %union.anon.1820 }
%union.anon.1820 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1824 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1825" = type { %"class.blink::PersistentBase.1826" }
%"class.blink::PersistentBase.1826" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1829", %"struct.blink::PhysicalRect", %"class.blink::Member.1839" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1829" = type { %"class.std::__1::__compressed_pair.1830" }
%"class.std::__1::__compressed_pair.1830" = type { %"struct.std::__1::__compressed_pair_elem.1831" }
%"struct.std::__1::__compressed_pair_elem.1831" = type { %"class.WTF::HashSet.1832"* }
%"class.WTF::HashSet.1832" = type { %"class.WTF::HashTable.1833" }
%"class.WTF::HashTable.1833" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1839" = type { %"class.blink::MemberBase.1840" }
%"class.blink::MemberBase.1840" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.1841", [4 x i8], %union.anon.1843, %class.scoped_refptr.1844, i32, [4 x i8] }>
%"class.WTF::RefCounted.1841" = type { %"class.base::RefCounted.1842" }
%"class.base::RefCounted.1842" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.1843 = type { %"class.blink::LayoutBox"* }
%class.scoped_refptr.1845 = type { %"class.blink::NGBlockBreakToken"* }
%"class.blink::NGBlockBreakToken" = type { %"class.blink::NGBreakToken.base", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, [0 x %"class.blink::NGBreakToken"*] }
%"class.blink::NGBreakToken.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1783", [4 x i8], %"class.blink::LayoutBox"*, i16 }>
%"class.blink::NGBoxFragmentBuilder" = type { %"class.blink::NGContainerFragmentBuilder.base", %"struct.blink::NGFragmentGeometry"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut", %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.absl::optional.1850", %"class.blink::NGFragmentItemsBuilder"*, %"class.blink::NGBlockNode", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.absl::optional.2028", i32, %"class.absl::optional.1636", %"class.absl::optional.1636", %"class.absl::optional.2033", %"class.absl::optional.2038", %class.scoped_refptr.2048, %"class.std::__1::unique_ptr.2066", %"class.absl::optional.2077", %"class.absl::optional.2077", %"class.std::__1::unique_ptr.2082", %"struct.blink::LogicalBoxSides", %class.scoped_refptr.1669, %"class.absl::optional.1641", %"class.std::__1::unique_ptr.2098", %"class.absl::optional.2104", %class.scoped_refptr.1845 }
%"class.blink::NGContainerFragmentBuilder.base" = type <{ %"class.blink::NGFragmentBuilder.base", [6 x i8], %"class.blink::NGLayoutInputNode", %"class.blink::NGConstraintSpace"*, %"class.blink::LayoutUnit", %"class.absl::optional.1636", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGExclusionSpace", %"class.WTF::Vector.1847", %"class.WTF::Vector.1847", %"class.WTF::Vector.1847", %"class.WTF::HashMap.1857", %"class.blink::NGUnpositionedListMarker", %"class.WTF::Vector.1988", %"class.WTF::Vector.1993", %class.scoped_refptr.1998, %class.scoped_refptr.1844, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"class.blink::NGFragmentBuilder.base" = type <{ %class.scoped_refptr, %"class.blink::WritingDirectionMode", [2 x i8], i32, %"struct.blink::LogicalSize", %"class.blink::LayoutObject"*, %class.scoped_refptr.1846, i8, i8 }>
%"class.blink::WritingDirectionMode" = type { i8, i8 }
%class.scoped_refptr.1846 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGLayoutInputNode" = type <{ %"class.blink::LayoutBox"*, i8, [7 x i8] }>
%"class.WTF::Vector.1847" = type { %"class.WTF::VectorBuffer.1848" }
%"class.WTF::VectorBuffer.1848" = type { %"class.WTF::VectorBufferBase.1849" }
%"class.WTF::VectorBufferBase.1849" = type { %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGLogicalOutOfFlowPositionedNode" = type <{ %"class.blink::LayoutBox"*, %"struct.blink::NGLogicalStaticPosition", %"class.blink::LayoutInline"*, i8, [3 x i8], %"class.blink::LayoutUnit", %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock", %"class.absl::optional.1850", [4 x i8] }>
%"struct.blink::NGLogicalStaticPosition" = type { %"struct.blink::LogicalOffset", i32, i32 }
%"struct.blink::NGContainingBlock" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset", %class.scoped_refptr.1779 }
%"class.WTF::HashMap.1857" = type { %"class.WTF::HashTable.1858" }
%"class.WTF::HashTable.1858" = type <{ %"struct.WTF::KeyValuePair.1861"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1861" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGMulticolWithPendingOOFs" }
%"struct.blink::NGMulticolWithPendingOOFs" = type { %"struct.blink::LogicalOffset", %"struct.blink::NGContainingBlock" }
%"class.blink::NGUnpositionedListMarker" = type { %"class.blink::LayoutNGOutsideListMarker"* }
%"class.blink::LayoutNGOutsideListMarker" = type <{ %"class.blink::LayoutNGBlockFlowMixin", %"class.blink::ListMarker", [4 x i8] }>
%"class.blink::LayoutNGBlockFlowMixin" = type { %"class.blink::LayoutNGMixin", %"class.std::__1::unique_ptr.1913" }
%"class.blink::LayoutNGMixin" = type { %"class.blink::LayoutBlockFlow" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1862", %"class.std::__1::unique_ptr.1882" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::Persistent.1862" = type { %"class.blink::PersistentBase.1863" }
%"class.blink::PersistentBase.1863" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1866", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1866" = type { %"class.std::__1::__compressed_pair.1867" }
%"class.std::__1::__compressed_pair.1867" = type { %"struct.std::__1::__compressed_pair_elem.1868" }
%"struct.std::__1::__compressed_pair_elem.1868" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.1869", %"class.WTF::HashMap.1874", %"class.WTF::String" }
%"class.WTF::Vector.1869" = type { %"class.WTF::VectorBuffer.1870" }
%"class.WTF::VectorBuffer.1870" = type { %"class.WTF::VectorBufferBase.1871" }
%"class.WTF::VectorBufferBase.1871" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.1874" = type { %"class.WTF::HashTable.1875" }
%"class.WTF::HashTable.1875" = type <{ %"struct.WTF::KeyValuePair.1878"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1878" = type opaque
%"class.std::__1::unique_ptr.1882" = type { %"class.std::__1::__compressed_pair.1883" }
%"class.std::__1::__compressed_pair.1883" = type { %"struct.std::__1::__compressed_pair_elem.1884" }
%"struct.std::__1::__compressed_pair_elem.1884" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1885", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1885" = type { %"class.WTF::HashTable.1888", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1888" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1891", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1891" = type { %"class.std::__1::__compressed_pair.1892" }
%"class.std::__1::__compressed_pair.1892" = type { %"struct.std::__1::__compressed_pair_elem.1893" }
%"struct.std::__1::__compressed_pair_elem.1893" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1894, %"class.std::__1::unique_ptr.1895", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1894 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2109", i16, %class.scoped_refptr.1894 }
%"class.WTF::ThreadSafeRefCounted.2109" = type { %"class.base::RefCountedThreadSafe.2110" }
%"class.base::RefCountedThreadSafe.2110" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1895" = type { %"class.std::__1::__compressed_pair.1896" }
%"class.std::__1::__compressed_pair.1896" = type { %"struct.std::__1::__compressed_pair_elem.1897" }
%"struct.std::__1::__compressed_pair_elem.1897" = type { %"class.WTF::Vector.1898"* }
%"class.WTF::Vector.1898" = type { %"class.WTF::VectorBuffer.1899" }
%"class.WTF::VectorBuffer.1899" = type { %"class.WTF::VectorBufferBase.1900" }
%"class.WTF::VectorBufferBase.1900" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1909, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.1909 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1913" = type { %"class.std::__1::__compressed_pair.1914" }
%"class.std::__1::__compressed_pair.1914" = type { %"struct.std::__1::__compressed_pair_elem.1915" }
%"struct.std::__1::__compressed_pair_elem.1915" = type { %"struct.blink::NGInlineNodeData"* }
%"struct.blink::NGInlineNodeData" = type <{ %"struct.blink::NGInlineItemsData", %"class.std::__1::unique_ptr.1957", %"class.std::__1::unique_ptr.1963", i8, [7 x i8] }>
%"struct.blink::NGInlineItemsData" = type { %"class.WTF::String", %"class.WTF::Vector.1916", %"class.std::__1::unique_ptr.1942", %"class.std::__1::unique_ptr.1866" }
%"class.WTF::Vector.1916" = type { %"class.WTF::VectorBuffer.1917" }
%"class.WTF::VectorBuffer.1917" = type { %"class.WTF::VectorBufferBase.1918" }
%"class.WTF::VectorBufferBase.1918" = type { %"class.blink::NGInlineItem"*, i32, i32 }
%"class.blink::NGInlineItem" = type { i32, i32, %class.scoped_refptr.1919, %"class.blink::LayoutObject"*, i32, i32 }
%class.scoped_refptr.1919 = type { %"class.blink::ShapeResult"* }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted.1920", float, %"class.blink::FloatRect", %"class.WTF::Vector.1922", %class.scoped_refptr.1928, %"class.std::__1::unique_ptr.1929", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted.1920" = type { %"class.base::RefCounted.1921" }
%"class.base::RefCounted.1921" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1922" = type { %"class.WTF::VectorBuffer.1923" }
%"class.WTF::VectorBuffer.1923" = type { %"class.WTF::VectorBufferBase.1924" }
%"class.WTF::VectorBufferBase.1924" = type { %class.scoped_refptr.1925*, i32, i32 }
%class.scoped_refptr.1925 = type opaque
%class.scoped_refptr.1928 = type { %"class.blink::SimpleFontData"* }
%"class.std::__1::unique_ptr.1929" = type { %"class.std::__1::__compressed_pair.1930" }
%"class.std::__1::__compressed_pair.1930" = type { %"struct.std::__1::__compressed_pair_elem.1931" }
%"struct.std::__1::__compressed_pair_elem.1931" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.1932", i32, float }
%"class.WTF::Vector.1932" = type { %"class.WTF::VectorBuffer.1933" }
%"class.WTF::VectorBuffer.1933" = type { %"class.WTF::VectorBufferBase.1934" }
%"class.WTF::VectorBufferBase.1934" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%"class.std::__1::unique_ptr.1942" = type { %"class.std::__1::__compressed_pair.1943" }
%"class.std::__1::__compressed_pair.1943" = type { %"struct.std::__1::__compressed_pair_elem.1944" }
%"struct.std::__1::__compressed_pair_elem.1944" = type { %"class.blink::NGInlineItemSegments"* }
%"class.blink::NGInlineItemSegments" = type { %"class.WTF::Vector.1945", %"class.WTF::Vector.1950" }
%"class.WTF::Vector.1945" = type { %"class.WTF::VectorBuffer.1946" }
%"class.WTF::VectorBuffer.1946" = type { %"class.WTF::VectorBufferBase.1947" }
%"class.WTF::VectorBufferBase.1947" = type { %"class.blink::NGInlineItemSegment"*, i32, i32 }
%"class.blink::NGInlineItemSegment" = type <{ i32, i16, [2 x i8] }>
%"class.WTF::Vector.1950" = type { %"class.WTF::VectorBuffer.1951" }
%"class.WTF::VectorBuffer.1951" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.std::__1::unique_ptr.1957" = type { %"class.std::__1::__compressed_pair.1958" }
%"class.std::__1::__compressed_pair.1958" = type { %"struct.std::__1::__compressed_pair_elem.1959" }
%"struct.std::__1::__compressed_pair_elem.1959" = type { %"struct.blink::NGInlineItemsData"* }
%"class.std::__1::unique_ptr.1963" = type { %"class.std::__1::__compressed_pair.1964" }
%"class.std::__1::__compressed_pair.1964" = type { %"struct.std::__1::__compressed_pair_elem.1965" }
%"struct.std::__1::__compressed_pair_elem.1965" = type { %"struct.blink::SvgInlineNodeData"* }
%"struct.blink::SvgInlineNodeData" = type { %"class.WTF::Vector.1966", %"class.WTF::Vector.1972", %"class.WTF::Vector.1972", %"class.WTF::HashMap.1977" }
%"class.WTF::Vector.1966" = type { %"class.WTF::VectorBuffer.1967" }
%"class.WTF::VectorBuffer.1967" = type { %"class.WTF::VectorBufferBase.1968" }
%"class.WTF::VectorBufferBase.1968" = type { %"struct.std::__1::pair.1969"*, i32, i32 }
%"struct.std::__1::pair.1969" = type opaque
%"class.WTF::Vector.1972" = type { %"class.WTF::VectorBuffer.1973" }
%"class.WTF::VectorBuffer.1973" = type { %"class.WTF::VectorBufferBase.1974" }
%"class.WTF::VectorBufferBase.1974" = type { %"struct.blink::SvgTextContentRange"*, i32, i32 }
%"struct.blink::SvgTextContentRange" = type { %"class.blink::LayoutObject"*, i32, i32 }
%"class.WTF::HashMap.1977" = type { %"class.WTF::HashTable.1978" }
%"class.WTF::HashTable.1978" = type <{ %"struct.WTF::KeyValuePair.1981"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1981" = type opaque
%"class.blink::ListMarker" = type { i8, [3 x i8] }
%"class.WTF::Vector.1988" = type { %"class.WTF::VectorBuffer.1989" }
%"class.WTF::VectorBuffer.1989" = type { %"class.WTF::VectorBufferBase.1990", [64 x i8] }
%"class.WTF::VectorBufferBase.1990" = type { %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, i32, i32 }
%"struct.blink::NGContainerFragmentBuilder::ChildWithOffset" = type { %"struct.blink::LogicalOffset", %class.scoped_refptr.1779 }
%"class.WTF::Vector.1993" = type { %"class.WTF::VectorBuffer.1994" }
%"class.WTF::VectorBuffer.1994" = type { %"class.WTF::VectorBufferBase.1995" }
%"class.WTF::VectorBufferBase.1995" = type { %class.scoped_refptr.1782*, i32, i32 }
%class.scoped_refptr.1998 = type { %"class.blink::NGInlineBreakToken"* }
%"class.blink::NGInlineBreakToken" = type { %"class.blink::NGBreakToken.base", %class.scoped_refptr, i32, i32 }
%"struct.blink::NGFragmentGeometry" = type { %"struct.blink::LogicalSize", %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"class.absl::optional.1850" = type { %"class.absl::optional_internal::optional_data.1851" }
%"class.absl::optional_internal::optional_data.1851" = type { %"class.absl::optional_internal::optional_data_base.1852" }
%"class.absl::optional_internal::optional_data_base.1852" = type { %"class.absl::optional_internal::optional_data_dtor_base.1853" }
%"class.absl::optional_internal::optional_data_dtor_base.1853" = type { i8, %union.anon.1854 }
%union.anon.1854 = type { %"struct.blink::LogicalRect" }
%"struct.blink::LogicalRect" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalSize" }
%"class.blink::NGFragmentItemsBuilder" = type <{ %"class.WTF::Vector.1999", %"class.WTF::String", %"class.WTF::String", %"class.blink::NGLogicalLineItems"*, %"class.blink::NGPhysicalFragment"*, %"class.WTF::HashMap.2023", %"class.blink::NGLogicalLineItems"*, %"class.blink::NGInlineNode", %"class.blink::WritingDirectionMode", i8, i8, i8, [3 x i8] }>
%"class.WTF::Vector.1999" = type { %"class.WTF::VectorBuffer.2000" }
%"class.WTF::VectorBuffer.2000" = type { %"class.WTF::VectorBufferBase.2001", [9216 x i8] }
%"class.WTF::VectorBufferBase.2001" = type { %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, i32, i32 }
%"struct.blink::NGFragmentItemsBuilder::ItemWithOffset" = type { %"class.blink::NGFragmentItem", %"struct.blink::LogicalOffset" }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.2002, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%union.anon.2002 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.2003, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.2003 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.2004", %class.scoped_refptr.1928, i32, i32, i32, i32, float, i32, [0 x %struct.anon.2006] }
%"class.WTF::RefCounted.2004" = type { %"class.base::RefCounted.2005" }
%"class.base::RefCounted.2005" = type { %"class.base::subtle::RefCountedBase" }
%struct.anon.2006 = type { i8* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.blink::NGInkOverflow" = type { %union.anon.2015 }
%union.anon.2015 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"class.WTF::HashMap.2023" = type { %"class.WTF::HashTable.2024" }
%"class.WTF::HashTable.2024" = type <{ %"struct.WTF::KeyValuePair.2027"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2027" = type opaque
%"class.blink::NGLogicalLineItems" = type { %"class.WTF::Vector.2018" }
%"class.WTF::Vector.2018" = type { %"class.WTF::VectorBuffer.2019" }
%"class.WTF::VectorBuffer.2019" = type { %"class.WTF::VectorBufferBase.2020", [1920 x i8] }
%"class.WTF::VectorBufferBase.2020" = type { %"struct.blink::NGLogicalLineItem"*, i32, i32 }
%"struct.blink::NGLogicalLineItem" = type <{ %class.scoped_refptr.1631, %"class.blink::NGInlineItem"*, %class.scoped_refptr.2003, %"struct.blink::NGTextOffset", %"class.WTF::String", %"class.blink::LayoutObject"*, i32, [4 x i8], %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"struct.blink::LogicalRect", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::NGInlineNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.absl::optional.2028" = type { %"class.absl::optional_internal::optional_data.2029" }
%"class.absl::optional_internal::optional_data.2029" = type { %"class.absl::optional_internal::optional_data_base.2030" }
%"class.absl::optional_internal::optional_data_base.2030" = type { %"class.absl::optional_internal::optional_data_dtor_base.2031" }
%"class.absl::optional_internal::optional_data_dtor_base.2031" = type { i8, %union.anon.2032 }
%union.anon.2032 = type { i32 }
%"class.absl::optional.2033" = type { %"class.absl::optional_internal::optional_data.2034" }
%"class.absl::optional_internal::optional_data.2034" = type { %"class.absl::optional_internal::optional_data_base.2035" }
%"class.absl::optional_internal::optional_data_base.2035" = type { %"class.absl::optional_internal::optional_data_dtor_base.2036" }
%"class.absl::optional_internal::optional_data_dtor_base.2036" = type { i8, %union.anon.2037 }
%union.anon.2037 = type { %"struct.blink::PhysicalRect" }
%"class.absl::optional.2038" = type { %"class.absl::optional_internal::optional_data.2039" }
%"class.absl::optional_internal::optional_data.2039" = type { %"class.absl::optional_internal::optional_data_base.2040" }
%"class.absl::optional_internal::optional_data_base.2040" = type { %"class.absl::optional_internal::optional_data_dtor_base.2041" }
%"class.absl::optional_internal::optional_data_dtor_base.2041" = type { i8, %union.anon.2042 }
%union.anon.2042 = type { %"class.WTF::Vector.2043" }
%"class.WTF::Vector.2043" = type { %"class.WTF::VectorBuffer.2044" }
%"class.WTF::VectorBuffer.2044" = type { %"class.WTF::VectorBufferBase.2045" }
%"class.WTF::VectorBufferBase.2045" = type { %"struct.blink::NGTableFragmentData::ColumnGeometry"*, i32, i32 }
%"struct.blink::NGTableFragmentData::ColumnGeometry" = type { i32, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGLayoutInputNode" }
%class.scoped_refptr.2048 = type { %"class.blink::NGTableBorders"* }
%"class.blink::NGTableBorders" = type <{ %"class.WTF::RefCounted.2049", [4 x i8], %"class.WTF::Vector.2051", %"class.WTF::Vector.2056", i32, %"class.absl::optional.2061", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.2049" = type { %"class.base::RefCounted.2050" }
%"class.base::RefCounted.2050" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2051" = type { %"class.WTF::VectorBuffer.2052" }
%"class.WTF::VectorBuffer.2052" = type { %"class.WTF::VectorBufferBase.2053" }
%"class.WTF::VectorBufferBase.2053" = type { %"struct.blink::NGTableBorders::Edge"*, i32, i32 }
%"struct.blink::NGTableBorders::Edge" = type { %class.scoped_refptr, i32, i32 }
%"class.WTF::Vector.2056" = type { %"class.WTF::VectorBuffer.2057" }
%"class.WTF::VectorBuffer.2057" = type { %"class.WTF::VectorBufferBase.2058" }
%"class.WTF::VectorBufferBase.2058" = type { %"struct.blink::NGTableBorders::Section"*, i32, i32 }
%"struct.blink::NGTableBorders::Section" = type { i32, i32 }
%"class.absl::optional.2061" = type { %"class.absl::optional_internal::optional_data.2062" }
%"class.absl::optional_internal::optional_data.2062" = type { %"class.absl::optional_internal::optional_data_base.2063" }
%"class.absl::optional_internal::optional_data_base.2063" = type { %"class.absl::optional_internal::optional_data_dtor_base.2064" }
%"class.absl::optional_internal::optional_data_dtor_base.2064" = type { i8, %union.anon.2065 }
%union.anon.2065 = type { %"struct.blink::NGBoxStrut" }
%"class.std::__1::unique_ptr.2066" = type { %"class.std::__1::__compressed_pair.2067" }
%"class.std::__1::__compressed_pair.2067" = type { %"struct.std::__1::__compressed_pair_elem.2068" }
%"struct.std::__1::__compressed_pair_elem.2068" = type { %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* }
%"struct.blink::NGTableFragmentData::CollapsedBordersGeometry" = type { %"class.WTF::Vector.2069", %"class.WTF::Vector.2069" }
%"class.WTF::Vector.2069" = type { %"class.WTF::VectorBuffer.2070" }
%"class.WTF::VectorBuffer.2070" = type { %"class.WTF::VectorBufferBase.2071" }
%"class.WTF::VectorBufferBase.2071" = type { %"class.blink::LayoutUnit"*, i32, i32 }
%"class.absl::optional.2077" = type { %"class.absl::optional_internal::optional_data.2078" }
%"class.absl::optional_internal::optional_data.2078" = type { %"class.absl::optional_internal::optional_data_base.2079" }
%"class.absl::optional_internal::optional_data_base.2079" = type { %"class.absl::optional_internal::optional_data_dtor_base.2080" }
%"class.absl::optional_internal::optional_data_dtor_base.2080" = type { i8, %union.anon.2081 }
%union.anon.2081 = type { i32 }
%"class.std::__1::unique_ptr.2082" = type { %"class.std::__1::__compressed_pair.2083" }
%"class.std::__1::__compressed_pair.2083" = type { %"struct.std::__1::__compressed_pair_elem.2084" }
%"struct.std::__1::__compressed_pair_elem.2084" = type { %"struct.blink::NGGridData"* }
%"struct.blink::LogicalBoxSides" = type { i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.2098" = type { %"class.std::__1::__compressed_pair.2099" }
%"class.std::__1::__compressed_pair.2099" = type { %"struct.std::__1::__compressed_pair_elem.2100" }
%"struct.std::__1::__compressed_pair_elem.2100" = type { %"struct.blink::NGMathMLPaintInfo"* }
%"struct.blink::NGMathMLPaintInfo" = type <{ i16, [6 x i8], %class.scoped_refptr.2003, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBoxStrut", %"class.absl::optional.1636", [4 x i8] }>
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::NGLayoutAlgorithmParams" = type { %"class.blink::NGBlockNode", %"struct.blink::NGFragmentGeometry"*, %"class.blink::NGConstraintSpace"*, %"class.blink::NGBlockBreakToken"*, %"class.blink::NGEarlyBreak"*, %"class.blink::NGLayoutResult"* }
%"class.blink::NGOutOfFlowLayoutPart" = type <{ %"class.blink::NGBoxFragmentBuilder"*, %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"class.WTF::HashMap.2118", i8, %"class.blink::WritingDirectionMode", [5 x i8], %"class.WTF::Vector.2123"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo" = type { %"class.blink::WritingDirectionMode", %"struct.blink::LogicalRect", %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }
%"class.WTF::HashMap.2118" = type { %"class.WTF::HashTable.2119" }
%"class.WTF::HashTable.2119" = type <{ %"struct.WTF::KeyValuePair.2122"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2122" = type <{ %"class.blink::LayoutObject"*, %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", [4 x i8] }>
%"class.WTF::Vector.2123" = type opaque
%"class.blink::NGContainerFragmentBuilder" = type <{ %"class.blink::NGFragmentBuilder.base", [6 x i8], %"class.blink::NGLayoutInputNode", %"class.blink::NGConstraintSpace"*, %"class.blink::LayoutUnit", %"class.absl::optional.1636", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGExclusionSpace", %"class.WTF::Vector.1847", %"class.WTF::Vector.1847", %"class.WTF::Vector.1847", %"class.WTF::HashMap.1857", %"class.blink::NGUnpositionedListMarker", %"class.WTF::Vector.1988", %"class.WTF::Vector.1993", %class.scoped_refptr.1998, %class.scoped_refptr.1844, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::(anonymous namespace)::MulticolPartWalker" = type <{ %"struct.blink::(anonymous namespace)::MulticolPartWalker::Entry", %"class.blink::NGBlockNode", %"class.blink::NGBlockNode", %"class.blink::NGBlockBreakToken"*, %class.scoped_refptr.1845, i32, i8, [3 x i8] }>
%"struct.blink::(anonymous namespace)::MulticolPartWalker::Entry" = type { %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockNode" }
%"struct.blink::MinMaxSizesFloatInput" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::NGBlockLayoutAlgorithm" = type { %"class.blink::NGLayoutAlgorithm", %"struct.blink::LogicalSize", %"struct.blink::LogicalSize", %class.scoped_refptr.1631, %"class.blink::LayoutUnit", i32, i8, %"class.absl::optional.1641", %"class.blink::NGExclusionSpace", %"class.absl::optional.1636" }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::NGConstraintSpaceBuilder" = type { %"class.blink::NGConstraintSpace", %"class.blink::LayoutUnit", i8, i8, i8, i8 }
%"class.blink::NGMinMaxConstraintSpaceBuilder" = type { %"class.blink::NGConstraintSpaceBuilder" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::VectorBufferBase.2131" = type { %struct.ResultWithOffset*, i32, i32 }
%struct.ResultWithOffset = type { %class.scoped_refptr.1631, %"struct.blink::LogicalOffset" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::Vector.2129" = type { %"class.WTF::VectorBuffer.2130" }
%"class.WTF::VectorBuffer.2130" = type { %"class.WTF::VectorBufferBase.2131", [256 x i8] }
%"class.absl::optional.2134" = type { %"class.absl::optional_internal::optional_data.2135" }
%"class.absl::optional_internal::optional_data.2135" = type { %"class.absl::optional_internal::optional_data_base.2136" }
%"class.absl::optional_internal::optional_data_base.2136" = type { %"class.absl::optional_internal::optional_data_dtor_base.2137" }
%"class.absl::optional_internal::optional_data_dtor_base.2137" = type { i8, %union.anon.2138 }
%union.anon.2138 = type { %"struct.blink::LogicalOffset" }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"class.WTF::VectorBufferBase.2141" = type { %struct.ContentRun*, i32, i32 }
%struct.ContentRun = type { %"class.blink::LayoutUnit", i32 }
%class.ContentRuns = type <{ %"class.WTF::Vector.2139", %"class.blink::LayoutUnit", [4 x i8] }>
%"class.WTF::Vector.2139" = type { %"class.WTF::VectorBuffer.2140" }
%"class.WTF::VectorBuffer.2140" = type { %"class.WTF::VectorBufferBase.2141", [8 x i8] }
%"class.blink::WritingModeConverter" = type { %"class.blink::WritingDirectionMode", %"struct.blink::PhysicalSize" }
%"class.base::CheckedContiguousIterator" = type { %"struct.blink::NGLink"*, %"struct.blink::NGLink"*, %"struct.blink::NGLink"* }
%"class.blink::NGTableConstraintSpaceData" = type <{ %"class.WTF::RefCounted.1647", [4 x i8], %"class.WTF::Vector.1649", %"class.WTF::Vector.1654", %"class.WTF::Vector.1659", %"class.WTF::Vector.1664", %"class.blink::LayoutUnit", %"class.blink::WritingDirectionMode", [2 x i8], %"struct.blink::LogicalSize", i8, i8, i8, [5 x i8] }>
%"class.WTF::RefCounted.1647" = type { %"class.base::RefCounted.1648" }
%"class.base::RefCounted.1648" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1649" = type { %"class.WTF::VectorBuffer.1650" }
%"class.WTF::VectorBuffer.1650" = type { %"class.WTF::VectorBufferBase.1651" }
%"class.WTF::VectorBufferBase.1651" = type { %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::ColumnLocation" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1654" = type { %"class.WTF::VectorBuffer.1655" }
%"class.WTF::VectorBuffer.1655" = type { %"class.WTF::VectorBufferBase.1656" }
%"class.WTF::VectorBufferBase.1656" = type { %"struct.blink::NGTableConstraintSpaceData::Section"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Section" = type { i32, i32 }
%"class.WTF::Vector.1659" = type { %"class.WTF::VectorBuffer.1660" }
%"class.WTF::VectorBuffer.1660" = type { %"class.WTF::VectorBufferBase.1661" }
%"class.WTF::VectorBufferBase.1661" = type { %"struct.blink::NGTableConstraintSpaceData::Row"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Row" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1664" = type { %"class.WTF::VectorBuffer.1665" }
%"class.WTF::VectorBuffer.1665" = type { %"class.WTF::VectorBufferBase.1666" }
%"class.WTF::VectorBufferBase.1666" = type { %"struct.blink::NGTableConstraintSpaceData::Cell"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Cell" = type <{ %"struct.blink::NGBoxStrut", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>
%"struct.std::__1::default_delete.1774" = type { i8 }
%"struct.std::__1::default_delete.2096" = type { i8 }
%"class.WTF::ConditionalDestructor.1855" = type { i8 }
%"class.WTF::VectorBuffer.302" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8], [4 x i8] }>
%"struct.std::__1::default_delete.473" = type { i8 }

$_ZN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEEC2ERKNS_23NGLayoutAlgorithmParamsE = comdat any

$_ZN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEE23RelayoutAndBreakEarlierINS_23NGColumnLayoutAlgorithmEEE13scoped_refptrIKNS_14NGLayoutResultEERKNS_12NGEarlyBreakE = comdat any

$_ZN5blink30NGMinMaxConstraintSpaceBuilderC2ERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_17NGLayoutInputNodeEb = comdat any

$_ZN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEED2Ev = comdat any

$_ZN5blink23NGColumnLayoutAlgorithmD0Ev = comdat any

$_ZN5blink17NGConstraintSpace8RareDataD2Ev = comdat any

$_ZN5blink16NGExclusionSpaceD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN5blink17NGShapeExclusionsD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEppEv = comdat any

$_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEC2EPS3_S5_S5_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEE15CheckComparableERKS4_ = comdat any

$_ZN5blink20NGBoxFragmentBuilderD2Ev = comdat any

$_ZN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEED0Ev = comdat any

$_ZN5blink26NGContainerFragmentBuilderD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink10NGGridDataEEclEPS2_ = comdat any

$_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev = comdat any

$_ZN5blink17ComputedStyleBaseD2Ev = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv = comdat any

$_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN5blink23StyleInheritedVariablesD2Ev = comdat any

$_ZN5blink14StyleVariablesD2Ev = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev = comdat any

$_ZN5blink18NinePieceImageDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev = comdat any

$_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev = comdat any

$_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev = comdat any

$_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_ = comdat any

$_ZN5blink13CSSTimingDataD2Ev = comdat any

$_ZN5blink16CSSAnimationDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev = comdat any

$_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE5clearEv = comdat any

$_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEEELb0EED2Ev = comdat any

$_ZN5blink12NGEarlyBreakD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN5blink20NGBoxFragmentBuilder26SetInitialFragmentGeometryERKNS_18NGFragmentGeometryE = comdat any

$_ZTVN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEEE = comdat any

@_ZTVN5blink23NGColumnLayoutAlgorithmE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (%"class.blink::NGLayoutResult"* (%"class.blink::NGColumnLayoutAlgorithm"*)* @_ZN5blink23NGColumnLayoutAlgorithm6LayoutEv to i8*), i8* bitcast ({ i64, i8 } (%"class.blink::NGColumnLayoutAlgorithm"*, %"struct.blink::MinMaxSizesFloatInput"*)* @_ZNK5blink23NGColumnLayoutAlgorithm18ComputeMinMaxSizesERKNS_21MinMaxSizesFloatInputE to i8*), i8* bitcast (void (%"class.blink::NGLayoutAlgorithm"*)* @_ZN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEED2Ev to i8*), i8* bitcast (void (%"class.blink::NGColumnLayoutAlgorithm"*)* @_ZN5blink23NGColumnLayoutAlgorithmD0Ev to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.3 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.9 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.11 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.12 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIZN5blink23NGColumnLayoutAlgorithm32CalculateBalancedColumnBlockSizeERKNS1_11LogicalSizeEPKNS1_17NGBlockBreakTokenEE10ContentRunEEPKcv = private unnamed_addr constant [58 x i8] c"const char *WTF::GetStringWithTypeName() [T = ContentRun]\00", align 1
@_ZTVN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::NGLayoutAlgorithm"*)* @_ZN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEED2Ev to i8*), i8* bitcast (void (%"class.blink::NGLayoutAlgorithm"*)* @_ZN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEED0Ev to i8*)] }, comdat, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIZN5blink23NGColumnLayoutAlgorithm9LayoutRowEPKNS1_17NGBlockBreakTokenEPNS1_13NGMarginStrutEE16ResultWithOffsetEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = ResultWithOffset]\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink23NGColumnLayoutAlgorithmC1ERKNS_23NGLayoutAlgorithmParamsE = hidden unnamed_addr alias void (%"class.blink::NGColumnLayoutAlgorithm"*, %"struct.blink::NGLayoutAlgorithmParams"*), void (%"class.blink::NGColumnLayoutAlgorithm"*, %"struct.blink::NGLayoutAlgorithmParams"*)* @_ZN5blink23NGColumnLayoutAlgorithmC2ERKNS_23NGLayoutAlgorithmParamsE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23NGColumnLayoutAlgorithmC2ERKNS_23NGLayoutAlgorithmParamsE(%"class.blink::NGColumnLayoutAlgorithm"*, %"struct.blink::NGLayoutAlgorithmParams"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca { %"class.blink::LayoutBox"*, i64 }, align 8
  %4 = bitcast { %"class.blink::LayoutBox"*, i64 }* %3 to %"class.blink::NGBlockNode"*
  %5 = alloca <2 x i64>, align 16
  %6 = alloca %"class.blink::NGUnpositionedListMarker", align 8
  %7 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0
  tail call void @_ZN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEEC2ERKNS_23NGLayoutAlgorithmParamsE(%"class.blink::NGLayoutAlgorithm"* %7, %"struct.blink::NGLayoutAlgorithmParams"* dereferenceable(56) %1)
  %8 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink23NGColumnLayoutAlgorithmE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 2, i32 0
  %10 = bitcast { %"class.blink::LayoutBox"*, i64 }* %3 to i8*
  %11 = bitcast i32* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 23, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %12 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %3, i64 0, i32 0
  %13 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %3, i64 0, i32 1
  %14 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.blink::LayoutBox"** %15 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  store <2 x i64> %17, <2 x i64>* %5, align 16
  %18 = bitcast <2 x i64>* %5 to %"class.blink::NGLayoutInputNode"*
  %19 = call { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink17NGLayoutInputNode29ListMarkerBlockNodeIfListItemEv(%"class.blink::NGLayoutInputNode"* nonnull %18) #10
  %20 = extractvalue { %"class.blink::LayoutBox"*, i64 } %19, 0
  store %"class.blink::LayoutBox"* %20, %"class.blink::LayoutBox"** %12, align 8
  %21 = extractvalue { %"class.blink::LayoutBox"*, i64 } %19, 1
  store i64 %21, i64* %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  %22 = icmp eq %"class.blink::LayoutBox"* %20, null
  br i1 %22, label %41, label %23

23:                                               ; preds = %2
  %24 = bitcast %"class.blink::LayoutBox"* %20 to %"class.blink::LayoutNGOutsideListMarker"*
  %25 = call zeroext i1 @_ZNK5blink25LayoutNGOutsideListMarker20NeedsOccupyWholeLineEv(%"class.blink::LayoutNGOutsideListMarker"* nonnull %24) #10
  br i1 %25, label %41, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 3, i32 0
  %28 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %27, align 8
  %29 = icmp eq %"class.blink::NGBlockBreakToken"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %28, i64 0, i32 0, i32 4
  %32 = load i16, i16* %31, align 8
  %33 = and i16 %32, 4096
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.blink::NGUnpositionedListMarker"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN5blink24NGUnpositionedListMarkerC1ERKNS_11NGBlockNodeE(%"class.blink::NGUnpositionedListMarker"* nonnull %6, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %4) #10
  %37 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 13
  %38 = bitcast %"class.blink::NGUnpositionedListMarker"* %6 to i64*
  %39 = bitcast %"class.blink::NGUnpositionedListMarker"* %37 to i64*
  %40 = load i64, i64* %38, align 8
  store i64 %40, i64* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %41

41:                                               ; preds = %30, %2, %23, %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEEC2ERKNS_23NGLayoutAlgorithmParamsE(%"class.blink::NGLayoutAlgorithm"*, %"struct.blink::NGLayoutAlgorithmParams"* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.scoped_refptr, align 8
  %4 = alloca %class.scoped_refptr, align 8
  %5 = alloca %class.scoped_refptr, align 8
  %6 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 1
  %8 = bitcast %"class.blink::NGBlockNode"* %7 to i8*
  %9 = bitcast %"struct.blink::NGLayoutAlgorithmParams"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %1, i64 0, i32 4
  %12 = bitcast %"class.blink::NGEarlyBreak"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.blink::NGEarlyBreak"** %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %1, i64 0, i32 3
  %16 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 3, i32 0
  store %"class.blink::NGBlockBreakToken"* %16, %"class.blink::NGBlockBreakToken"** %17, align 8
  %18 = icmp eq %"class.blink::NGBlockBreakToken"* %16, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %20) #10
  br label %21

21:                                               ; preds = %2, %19
  %22 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4
  %23 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %23, align 8
  %25 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %1, i64 0, i32 0, i32 0, i32 1
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %24, i64 0, i32 0, i32 0, i32 5, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = icmp eq %"class.blink::ComputedStyle"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %29, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %32) #10
  br label %33

33:                                               ; preds = %21, %31
  %34 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %1, i64 0, i32 2
  %35 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %35, i64 0, i32 3, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = lshr i32 %37, 4
  %39 = trunc i32 %38 to i16
  %40 = and i16 %39, 7
  %41 = trunc i32 %37 to i16
  %42 = shl i16 %41, 1
  %43 = and i16 %42, 256
  %44 = or i16 %43, %40
  %45 = bitcast %class.scoped_refptr* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  %46 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 0, i32 0
  %47 = ptrtoint %"class.blink::ComputedStyle"* %29 to i64
  store %"class.blink::ComputedStyle"* null, %"class.blink::ComputedStyle"** %46, align 8
  %48 = bitcast %class.scoped_refptr* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #10
  %49 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  store %"class.blink::ComputedStyle"* null, %"class.blink::ComputedStyle"** %49, align 8
  %50 = bitcast %class.scoped_refptr* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #10
  %51 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  %52 = bitcast %"class.blink::NGBoxFragmentBuilder"* %22 to i64*
  store i64 %47, i64* %52, align 8
  store %"class.blink::ComputedStyle"* null, %"class.blink::ComputedStyle"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %54 = bitcast %"class.blink::WritingDirectionMode"* %53 to i16*
  store i16 %44, i16* %54, align 8
  %55 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 0, i32 3
  %56 = bitcast i32* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %56, i8 0, i64 30, i1 false) #10
  call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #10
  %57 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 2, i32 0
  store %"class.blink::LayoutBox"* %24, %"class.blink::LayoutBox"** %57, align 8
  %58 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 2, i32 1
  %59 = bitcast i8* %58 to i64*
  store i64 %27, i64* %59, align 8
  %60 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 3
  store %"class.blink::NGConstraintSpace"* %35, %"class.blink::NGConstraintSpace"** %60, align 8
  %61 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 4, i32 0
  store i32 0, i32* %61, align 4
  %62 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %62, align 4
  %63 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 6
  %64 = bitcast %"struct.blink::NGMarginStrut"* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %64, i8 0, i64 14, i1 false) #10
  %65 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 8
  %66 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 13, i32 0
  store %"class.blink::LayoutNGOutsideListMarker"* null, %"class.blink::LayoutNGOutsideListMarker"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 14
  %68 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 14, i32 0, i32 1, i64 0
  %69 = bitcast %"class.WTF::Vector.1988"* %67 to i8**
  %70 = bitcast %"class.blink::NGExclusionSpace"* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 76, i1 false) #10
  store i8* %68, i8** %69, align 8
  %71 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 14, i32 0, i32 0, i32 1
  store i32 4, i32* %71, align 8
  %72 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 14, i32 0, i32 0, i32 2
  store i32 0, i32* %72, align 4
  %73 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 15
  %74 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %24, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 0, i32 5
  %76 = bitcast %"class.WTF::Vector.1993"* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 61, i1 false) #10
  store %"class.blink::LayoutObject"* %74, %"class.blink::LayoutObject"** %75, align 8
  call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #10
  %77 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 1
  %78 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 7
  %79 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 8, i32 0, i32 1
  %80 = bitcast %"struct.blink::NGFragmentGeometry"** %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 53, i1 false) #10
  %81 = bitcast %"class.blink::NGFragmentItemsBuilder"** %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 16, i1 false) #10
  %82 = load i8, i8* %79, align 8
  %83 = and i8 %82, -2
  store i8 %83, i8* %79, align 8
  %84 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 9
  %85 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 14
  %86 = trunc i64 %27 to i8
  %87 = and i8 %86, 1
  %88 = bitcast i32* %84 to i64*
  store i64 0, i64* %88, align 8
  store i8 %87, i8* %85, align 8
  %89 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 15
  store i8 1, i8* %89, align 1
  %90 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 16
  %91 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 27, i32 0
  %92 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 31, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 2 %90, i8 0, i64 11, i1 false) #10
  %93 = bitcast i32* %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %93, i8 0, i64 16, i1 false) #10
  store i32 2147483647, i32* %92, align 8
  %94 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 32, i32 0
  store i32 -2147483648, i32* %94, align 4
  %95 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 33, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %95, align 4
  %96 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 34
  store i32 2, i32* %96, align 8
  %97 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 35, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %97, align 4
  %98 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 36, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %98, align 4
  %99 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 37, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %99, align 4
  %100 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 38, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %100, align 8
  %101 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 39, i32 0
  %102 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 42, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %102, align 4
  %103 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 43
  %104 = bitcast %"class.std::__1::unique_ptr.2082"* %103 to i64*
  store i64 0, i64* %104, align 8
  %105 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 44
  %106 = bitcast %"struct.blink::LogicalBoxSides"* %105 to i32*
  %107 = bitcast %"class.blink::NGTableBorders"** %101 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 17, i1 false) #10
  store i32 16843009, i32* %106, align 1
  %108 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 45, i32 0
  store %"class.blink::SerializedScriptValue"* null, %"class.blink::SerializedScriptValue"** %108, align 8
  %109 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 46, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %109, align 4
  %110 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 47
  %111 = bitcast %"class.std::__1::unique_ptr.2098"* %110 to i64*
  store i64 0, i64* %111, align 8
  %112 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 48, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %112, align 4
  %113 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 49, i32 0
  store %"class.blink::NGBlockBreakToken"* null, %"class.blink::NGBlockBreakToken"** %113, align 8
  call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  %114 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %34, align 8
  %115 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %114, i64 0, i32 3, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = lshr i32 %116, 10
  %118 = trunc i32 %117 to i8
  %119 = and i8 %118, 1
  %120 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 20
  store i8 %119, i8* %120, align 2
  %121 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %1, i64 0, i32 1
  %122 = load %"struct.blink::NGFragmentGeometry"*, %"struct.blink::NGFragmentGeometry"** %121, align 8
  call void @_ZN5blink20NGBoxFragmentBuilder26SetInitialFragmentGeometryERKNS_18NGFragmentGeometryE(%"class.blink::NGBoxFragmentBuilder"* %22, %"struct.blink::NGFragmentGeometry"* dereferenceable(56) %122)
  %123 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %34, align 8
  %124 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %123, i64 0, i32 3, i32 0
  %125 = load i32, i32* %124, align 8
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %33
  %129 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %15, align 8
  %130 = icmp eq %"class.blink::NGBlockBreakToken"* %129, null
  br i1 %130, label %143, label %141, !prof !2

131:                                              ; preds = %33
  %132 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %123, i64 0, i32 1, i32 0
  %133 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %132, align 8
  %134 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %133, i64 0, i32 6
  %135 = load i16, i16* %134, align 8
  %136 = and i16 %135, 384
  %137 = icmp ne i16 %136, 0
  %138 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %15, align 8
  %139 = icmp ne %"class.blink::NGBlockBreakToken"* %138, null
  %140 = or i1 %137, %139
  br i1 %140, label %141, label %143, !prof !3

141:                                              ; preds = %128, %131
  %142 = phi %"class.blink::NGBlockBreakToken"* [ %129, %128 ], [ %138, %131 ]
  call void @_ZN5blink36SetupFragmentBuilderForFragmentationERKNS_17NGConstraintSpaceEPKNS_17NGBlockBreakTokenEPNS_20NGBoxFragmentBuilderE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %123, %"class.blink::NGBlockBreakToken"* %142, %"class.blink::NGBoxFragmentBuilder"* %22) #10
  br label %143

143:                                              ; preds = %128, %131, %141
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink17NGLayoutInputNode29ListMarkerBlockNodeIfListItemEv(%"class.blink::NGLayoutInputNode"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink24NGUnpositionedListMarkerC1ERKNS_11NGBlockNodeE(%"class.blink::NGUnpositionedListMarker"*, %"class.blink::NGBlockNode"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGLayoutResult"* @_ZN5blink23NGColumnLayoutAlgorithm6LayoutEv(%"class.blink::NGColumnLayoutAlgorithm"*) unnamed_addr #0 align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.blink::NGBlockNode"*
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"class.blink::NGBlockNode"*
  %6 = alloca %"struct.blink::NGMulticolWithPendingOOFs", align 8
  %7 = alloca %"class.blink::NGOutOfFlowLayoutPart", align 8
  %8 = alloca <2 x i64>, align 16
  %9 = bitcast <2 x i64>* %8 to %"class.blink::NGBlockNode"*
  %10 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4
  %12 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 1
  %13 = bitcast %"struct.blink::NGFragmentGeometry"** %12 to i64**
  %14 = load i64*, i64** %13, align 8
  %15 = load i64, i64* %14, align 4
  %16 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 3
  %17 = tail call i64 @_ZN5blink17ShrinkLogicalSizeENS_11LogicalSizeERKNS_10NGBoxStrutE(i64 %15, %"struct.blink::NGBoxStrut"* dereferenceable(16) %16) #10
  %18 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 4, i32 0
  %19 = lshr i64 %17, 32
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %18, align 4
  %21 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 4, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1
  %24 = bitcast %"class.blink::NGBlockNode"* %23 to %"class.blink::LayoutObject"**
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 5, i32 0
  %27 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %26, align 8
  %28 = tail call i32 @_ZN5blink27ResolveUsedColumnInlineSizeENS_10LayoutUnitERKNS_13ComputedStyleE(i32 %22, %"class.blink::ComputedStyle"* dereferenceable(104) %27) #10
  %29 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 2, i32 0
  store i32 %28, i32* %29, align 4
  %30 = load i32, i32* %21, align 4
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %31, i64 0, i32 5, i32 0
  %33 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %32, align 8
  %34 = tail call i32 @_ZN5blink20ResolveUsedColumnGapENS_10LayoutUnitERKNS_13ComputedStyleE(i32 %30, %"class.blink::ComputedStyle"* dereferenceable(104) %33) #10
  %35 = load i32, i32* %29, align 4
  %36 = icmp slt i32 %34, 0
  %37 = select i1 %36, i32 -2147483648, i32 2147483647
  %38 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %35, i32 %34) #10
  %39 = extractvalue { i32, i1 } %38, 1
  %40 = extractvalue { i32, i1 } %38, 0
  %41 = select i1 %39, i32 %37, i32 %40, !prof !4
  %42 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 3, i32 0
  store i32 %41, i32* %42, align 8
  %43 = load i32, i32* %21, align 4
  %44 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %44, i64 0, i32 5, i32 0
  %46 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  %47 = tail call i32 @_ZN5blink22ResolveUsedColumnCountENS_10LayoutUnitERKNS_13ComputedStyleE(i32 %43, %"class.blink::ComputedStyle"* dereferenceable(104) %46) #10
  %48 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 1
  store i32 %47, i32* %48, align 8
  %49 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 3
  %50 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %50, i64 0, i32 3, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %67, label %55

55:                                               ; preds = %1
  %56 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %50, i64 0, i32 1, i32 0
  %57 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %56, align 8
  %58 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %57, i64 0, i32 6
  %59 = load i16, i16* %58, align 8
  %60 = and i16 %59, 384
  switch i16 %60, label %66 [
    i16 0, label %67
    i16 256, label %61
  ]

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %57, i64 0, i32 4, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp ne i32 %63, -64
  %65 = zext i1 %64 to i8
  br label %67

66:                                               ; preds = %55
  br label %67

67:                                               ; preds = %1, %55, %66, %61
  %68 = phi i8 [ %65, %61 ], [ 0, %1 ], [ 0, %55 ], [ 1, %66 ]
  %69 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 7
  store i8 %68, i8* %69, align 8
  %70 = bitcast %"class.blink::NGBoxFragmentBuilder"* %11 to %"class.blink::NGContainerFragmentBuilder"*
  %71 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 30
  store i8 1, i8* %71, align 1
  %72 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 3, i32 2, i32 0
  %73 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 5, i32 0
  %74 = load i32, i32* %72, align 4
  store i32 %74, i32* %73, align 8
  %75 = tail call i32 @_ZN5blink23NGColumnLayoutAlgorithm14LayoutChildrenEv(%"class.blink::NGColumnLayoutAlgorithm"* %0)
  switch i32 %75, label %82 [
    i32 2, label %76
    i32 1, label %80
  ]

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 17, i32 0
  %78 = load %"class.blink::NGEarlyBreak"*, %"class.blink::NGEarlyBreak"** %77, align 8
  %79 = tail call %"class.blink::NGLayoutResult"* @_ZN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEE23RelayoutAndBreakEarlierINS_23NGColumnLayoutAlgorithmEEE13scoped_refptrIKNS_14NGLayoutResultEERKNS_12NGEarlyBreakE(%"class.blink::NGLayoutAlgorithm"* %10, %"class.blink::NGEarlyBreak"* dereferenceable(32) %78)
  br label %192

80:                                               ; preds = %67
  %81 = tail call %"class.blink::NGLayoutResult"* @_ZN5blink20NGBoxFragmentBuilder5AbortENS_14NGLayoutResult7EStatusE(%"class.blink::NGBoxFragmentBuilder"* %11, i32 3) #10
  br label %192

82:                                               ; preds = %67
  %83 = load i32, i32* %73, align 4
  %84 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 3, i32 3, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp slt i32 %85, 0
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %83, i32 %85) #10
  %89 = extractvalue { i32, i1 } %88, 1
  %90 = extractvalue { i32, i1 } %88, 0
  %91 = select i1 %89, i32 %87, i32 %90, !prof !4
  store i32 %91, i32* %73, align 4
  %92 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 3, i32 0
  %93 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %92, align 8
  %94 = icmp eq %"class.blink::NGBlockBreakToken"* %93, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %82
  %96 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %93, i64 0, i32 1, i32 0
  %97 = load i32, i32* %96, align 4
  br label %98

98:                                               ; preds = %82, %95
  %99 = phi i32 [ 0, %82 ], [ %97, %95 ]
  %100 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %49, align 8
  %101 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #10
  %102 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %103 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %104 = bitcast i8* %103 to i64*
  %105 = bitcast %"class.blink::LayoutBox"** %102 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 8
  store <2 x i64> %106, <2 x i64>* %2, align 16
  %107 = call i32 @_ZN5blink23ClampIntrinsicBlockSizeERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeERKNS_10NGBoxStrutENS_10LayoutUnitEN4absl8optionalIS9_EE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %100, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %3, %"struct.blink::NGBoxStrut"* dereferenceable(16) %16, i32 %91, i64 0) #10
  store i32 %107, i32* %73, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #10
  %108 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %49, align 8
  %109 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %110 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %109, i64 0, i32 5, i32 0
  %111 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 2
  %113 = icmp slt i32 %107, 0
  %114 = select i1 %113, i32 -2147483648, i32 2147483647
  %115 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %99, i32 %107) #10
  %116 = extractvalue { i32, i1 } %115, 1
  %117 = extractvalue { i32, i1 } %115, 0
  %118 = select i1 %116, i32 %114, i32 %117, !prof !4
  %119 = shl i64 %15, 32
  %120 = or i64 %119, 1
  %121 = call i32 @_ZN5blink27ComputeBlockSizeForFragmentERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutENS_10LayoutUnitEN4absl8optionalIS9_EES9_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %108, %"class.blink::ComputedStyle"* dereferenceable(104) %111, %"struct.blink::NGBoxStrut"* dereferenceable(16) %112, i32 %118, i64 %120, i32 0) #10
  %122 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 4, i32 1, i32 0
  store i32 %121, i32* %122, align 4
  %123 = load i32, i32* %73, align 8
  %124 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 5, i32 0
  store i32 %123, i32* %124, align 8
  %125 = load i32, i32* %72, align 4
  %126 = icmp sgt i32 %125, -1
  %127 = select i1 %126, i32 -2147483648, i32 2147483647
  %128 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %123, i32 %125) #10
  %129 = extractvalue { i32, i1 } %128, 1
  %130 = extractvalue { i32, i1 } %128, 0
  %131 = select i1 %129, i32 %127, i32 %130, !prof !4
  %132 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 29, i32 0
  store i32 %131, i32* %132, align 8
  call void @_ZN5blink23NGColumnLayoutAlgorithm30PositionAnyUnclaimedListMarkerEv(%"class.blink::NGColumnLayoutAlgorithm"* %0)
  %133 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %49, align 8
  %134 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %133, i64 0, i32 3, i32 0
  %135 = load i32, i32* %134, align 8
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %177, label %138

138:                                              ; preds = %98
  %139 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %133, i64 0, i32 1, i32 0
  %140 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %139, align 8
  %141 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %140, i64 0, i32 6
  %142 = load i16, i16* %141, align 8
  %143 = and i16 %142, 384
  %144 = icmp eq i16 %143, 0
  br i1 %144, label %177, label %145

145:                                              ; preds = %138
  %146 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %102, align 8
  %147 = load i64, i64* %104, align 8
  %148 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 2, i32 3, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i16 %143, 256
  %151 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %140, i64 0, i32 4, i32 0
  %152 = load i32, i32* %151, align 8
  %153 = icmp eq i32 %152, -64
  %154 = and i1 %150, %153
  br i1 %154, label %166, label %155

155:                                              ; preds = %145
  %156 = icmp sgt i32 %152, 64
  %157 = select i1 %156, i32 %152, i32 64
  %158 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %140, i64 0, i32 5, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = icmp sgt i32 %159, -1
  %161 = select i1 %160, i32 -2147483648, i32 2147483647
  %162 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %157, i32 %159) #10
  %163 = extractvalue { i32, i1 } %162, 1
  %164 = extractvalue { i32, i1 } %162, 0
  %165 = select i1 %163, i32 %161, i32 %164, !prof !4
  br label %166

166:                                              ; preds = %145, %155
  %167 = phi i32 [ %165, %155 ], [ -64, %145 ]
  %168 = call i32 @_ZN5blink19FinishFragmentationENS_11NGBlockNodeERKNS_17NGConstraintSpaceENS_10LayoutUnitES4_PNS_20NGBoxFragmentBuilderE(%"class.blink::LayoutBox"* %146, i64 %147, %"class.blink::NGConstraintSpace"* dereferenceable(32) %133, i32 %149, i32 %167, %"class.blink::NGBoxFragmentBuilder"* %11) #10
  %169 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 10, i32 0, i32 0, i32 2
  %170 = load i32, i32* %169, align 4
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %177, label %172

172:                                              ; preds = %166
  %173 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %173) #10
  %174 = bitcast %"class.blink::LayoutBox"** %102 to <2 x i64>*
  %175 = load <2 x i64>, <2 x i64>* %174, align 8
  store <2 x i64> %175, <2 x i64>* %4, align 16
  %176 = bitcast %"struct.blink::NGMulticolWithPendingOOFs"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %176, i8 0, i64 32, i1 false)
  call void @_ZN5blink26NGContainerFragmentBuilder26AddMulticolWithPendingOOFsERKNS_11NGBlockNodeENS_25NGMulticolWithPendingOOFsINS_13LogicalOffsetEEE(%"class.blink::NGContainerFragmentBuilder"* %70, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %5, %"struct.blink::NGMulticolWithPendingOOFs"* nonnull byval(%"struct.blink::NGMulticolWithPendingOOFs") align 8 %6) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %173) #10
  br label %177

177:                                              ; preds = %166, %138, %98, %172
  %178 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %178) #10
  %179 = bitcast <2 x i64>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %179) #10
  %180 = bitcast %"class.blink::LayoutBox"** %102 to <2 x i64>*
  %181 = load <2 x i64>, <2 x i64>* %180, align 8
  store <2 x i64> %181, <2 x i64>* %8, align 16
  %182 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %49, align 8
  call void @_ZN5blink21NGOutOfFlowLayoutPartC1ERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceEPNS_20NGBoxFragmentBuilderE(%"class.blink::NGOutOfFlowLayoutPart"* nonnull %7, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %9, %"class.blink::NGConstraintSpace"* dereferenceable(32) %182, %"class.blink::NGBoxFragmentBuilder"* %11) #10
  call void @_ZN5blink21NGOutOfFlowLayoutPart3RunEPKNS_9LayoutBoxE(%"class.blink::NGOutOfFlowLayoutPart"* nonnull %7, %"class.blink::LayoutBox"* null) #10
  %183 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %7, i64 0, i32 3, i32 0, i32 0
  %184 = load %"struct.WTF::KeyValuePair.2122"*, %"struct.WTF::KeyValuePair.2122"** %183, align 8
  %185 = icmp eq %"struct.WTF::KeyValuePair.2122"* %184, null
  br i1 %185, label %188, label %186, !prof !2

186:                                              ; preds = %177
  %187 = bitcast %"struct.WTF::KeyValuePair.2122"* %184 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %187) #10
  store %"struct.WTF::KeyValuePair.2122"* null, %"struct.WTF::KeyValuePair.2122"** %183, align 8
  br label %188

188:                                              ; preds = %177, %186
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %179) #10
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %178) #10
  %189 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 1, i32 0
  %190 = load i8, i8* %189, align 1
  %191 = call %"class.blink::NGLayoutResult"* @_ZN5blink20NGBoxFragmentBuilder13ToBoxFragmentENS_11WritingModeE(%"class.blink::NGBoxFragmentBuilder"* %11, i8 zeroext %190) #10
  br label %192

192:                                              ; preds = %188, %80, %76
  %193 = phi %"class.blink::NGLayoutResult"* [ %79, %76 ], [ %81, %80 ], [ %191, %188 ]
  ret %"class.blink::NGLayoutResult"* %193
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i64 @_ZN5blink17ShrinkLogicalSizeENS_11LogicalSizeERKNS_10NGBoxStrutE(i64, %"struct.blink::NGBoxStrut"* dereferenceable(16)) local_unnamed_addr #2

declare i32 @_ZN5blink27ResolveUsedColumnInlineSizeENS_10LayoutUnitERKNS_13ComputedStyleE(i32, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

declare i32 @_ZN5blink20ResolveUsedColumnGapENS_10LayoutUnitERKNS_13ComputedStyleE(i32, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

declare i32 @_ZN5blink22ResolveUsedColumnCountENS_10LayoutUnitERKNS_13ComputedStyleE(i32, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink23NGColumnLayoutAlgorithm14LayoutChildrenEv(%"class.blink::NGColumnLayoutAlgorithm"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::NGMarginStrut", align 4
  %3 = alloca %"class.blink::(anonymous namespace)::MulticolPartWalker", align 8
  %4 = alloca %"class.blink::NGBlockNode", align 8
  %5 = bitcast %"struct.blink::NGMarginStrut"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %2, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %2, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %2, i64 0, i32 4
  %9 = bitcast %"struct.blink::NGMarginStrut"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 -86, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %5, i8 0, i64 14, i1 false) #10
  %10 = bitcast %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 80, i1 false)
  %11 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 3, i32 0
  %17 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #10
  store i8 -86, i8* %18, align 8
  %19 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 1, i32 0, i32 1
  store i8 -86, i8* %20, align 8
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::LayoutBox"* %12, %"class.blink::LayoutBox"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 2, i32 0, i32 1
  %23 = bitcast i8* %22 to i64*
  store i64 %15, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 3
  store %"class.blink::NGBlockBreakToken"* %17, %"class.blink::NGBlockBreakToken"** %24, align 8
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 4, i32 0
  store %"class.blink::NGBlockBreakToken"* null, %"class.blink::NGBlockBreakToken"** %25, align 8
  %26 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 5
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 6
  store i8 0, i8* %27, align 4
  %28 = icmp eq %"class.blink::NGBlockBreakToken"* %17, null
  br i1 %28, label %64, label %29

29:                                               ; preds = %1
  %30 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %17, i64 0, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %51, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %17, i64 0, i32 5, i64 0
  %35 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %35, i64 0, i32 3
  %37 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %36, align 8
  %38 = icmp eq %"class.blink::LayoutBox"* %37, %12
  %39 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  br i1 %38, label %40, label %41

40:                                               ; preds = %33
  store %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"** %39, align 8
  br label %46

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %35, i64 0, i32 4
  %43 = load i16, i16* %42, align 8
  store %"class.blink::LayoutBox"* %37, %"class.blink::LayoutBox"** %39, align 8
  %44 = trunc i16 %43 to i8
  %45 = and i8 %44, 1
  br label %46

46:                                               ; preds = %41, %40
  %47 = phi %"class.blink::LayoutBox"* [ %37, %41 ], [ null, %40 ]
  %48 = phi i8 [ %45, %41 ], [ 0, %40 ]
  store i8 %48, i8* %18, align 8
  %49 = bitcast %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3 to %"class.blink::NGBreakToken"**
  store %"class.blink::NGBreakToken"* %35, %"class.blink::NGBreakToken"** %49, align 8
  %50 = bitcast %"class.blink::NGBreakToken"* %35 to %"class.blink::NGBlockBreakToken"*
  br label %51

51:                                               ; preds = %29, %46
  %52 = phi %"class.blink::LayoutBox"* [ null, %29 ], [ %47, %46 ]
  %53 = phi %"class.blink::NGBlockBreakToken"* [ null, %29 ], [ %50, %46 ]
  %54 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %17, i64 0, i32 0, i32 4
  %55 = load i16, i16* %54, align 8
  %56 = and i16 %55, 32
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %51
  %59 = icmp ne %"class.blink::NGBlockBreakToken"* %53, null
  %60 = and i16 %55, 2048
  %61 = icmp eq i16 %60, 0
  %62 = or i1 %61, %59
  br i1 %62, label %64, label %63

63:                                               ; preds = %58
  store i8 1, i8* %27, align 4
  br label %317

64:                                               ; preds = %1, %51, %58
  %65 = phi %"class.blink::LayoutBox"* [ %52, %58 ], [ %52, %51 ], [ null, %1 ]
  %66 = phi %"class.blink::NGBlockBreakToken"* [ %53, %58 ], [ %53, %51 ], [ null, %1 ]
  %67 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %69 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 0, i32 1, i32 1, i64 6
  %70 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 0, i32 1, i32 1, i64 5
  %71 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 0, i32 1, i32 1, i64 4
  %72 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 0, i32 1, i32 1, i64 3
  %73 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 0, i32 1, i32 1, i64 2
  %74 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 0, i32 1, i32 1, i64 1
  %75 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 0, i32 1, i32 1, i64 0
  %76 = bitcast %"class.blink::NGBlockNode"* %4 to i8*
  %77 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %4, i64 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %4, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %4, i64 0, i32 1, i64 0
  %80 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %4, i64 0, i32 1, i64 1
  %81 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %4, i64 0, i32 1, i64 2
  %82 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %4, i64 0, i32 1, i64 3
  %83 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %4, i64 0, i32 1, i64 4
  %84 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %4, i64 0, i32 1, i64 5
  %85 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %4, i64 0, i32 1, i64 6
  %86 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 2
  %87 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4
  %88 = bitcast %"class.blink::NGBlockNode"* %4 to %"class.blink::NGLayoutInputNode"*
  %89 = bitcast i8* %78 to i64*
  %90 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 17
  %91 = bitcast i8* %18 to i64*
  %92 = bitcast i8* %20 to i64*
  %93 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 4
  %94 = bitcast %class.scoped_refptr.1845* %93 to i64*
  %95 = getelementptr inbounds %class.scoped_refptr.1845, %class.scoped_refptr.1845* %93, i64 0, i32 0
  %96 = bitcast %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3 to %"class.blink::NGBreakToken"**
  %97 = bitcast %"class.blink::LayoutBox"** %68 to i64*
  %98 = bitcast %"class.blink::LayoutBox"** %68 to i8*
  br label %99

99:                                               ; preds = %311, %64
  %100 = phi %"class.blink::LayoutBox"* [ %65, %64 ], [ %313, %311 ]
  %101 = phi %"class.blink::NGBlockBreakToken"* [ %66, %64 ], [ %312, %311 ]
  %102 = icmp eq %"class.blink::LayoutBox"* %100, null
  br i1 %102, label %103, label %281

103:                                              ; preds = %99
  %104 = call %"class.blink::NGLayoutResult"* @_ZN5blink23NGColumnLayoutAlgorithm9LayoutRowEPKNS_17NGBlockBreakTokenEPNS_13NGMarginStrutE(%"class.blink::NGColumnLayoutAlgorithm"* %0, %"class.blink::NGBlockBreakToken"* %101, %"struct.blink::NGMarginStrut"* nonnull %2)
  %105 = icmp eq %"class.blink::NGLayoutResult"* %104, null
  br i1 %105, label %106, label %112

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 5, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %410, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 16
  store i8 1, i8* %111, align 2
  br label %314

112:                                              ; preds = %103
  call fastcc void @_ZN5blink12_GLOBAL__N_118MulticolPartWalker4NextEv(%"class.blink::(anonymous namespace)::MulticolPartWalker"* nonnull %3)
  %113 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %104, i64 0, i32 3, i32 0
  %114 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %114, i64 0, i32 4, i32 0
  %116 = bitcast %"class.blink::NGBreakToken"** %115 to %"class.blink::NGBlockBreakToken"**
  %117 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %104, i64 0, i32 6, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %203, label %122

122:                                              ; preds = %112
  %123 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %104, i64 0, i32 4, i32 0
  %124 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %123, align 8
  %125 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %124, i64 0, i32 7, i32 0, i32 0
  %126 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %125, align 8
  %127 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %124, i64 0, i32 7, i32 0, i32 1
  %128 = bitcast i8* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq %"class.blink::LayoutBox"* %126, null
  br i1 %130, label %203, label %131

131:                                              ; preds = %122
  store %"class.blink::NGBlockBreakToken"* null, %"class.blink::NGBlockBreakToken"** %24, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 40, i1 false) #10
  %132 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %95, align 8
  store i64 0, i64* %94, align 8
  %133 = icmp eq %"class.blink::NGBlockBreakToken"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %132, i64 0, i32 0, i32 1, i32 0
  %136 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %135, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %136) #10
  %137 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %135, i64 0, i32 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %147

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %135, i64 -2
  %142 = bitcast %"class.base::RefCounted.1784"* %141 to %"class.blink::NGBreakToken"*
  %143 = bitcast %"class.base::RefCounted.1784"* %141 to void (%"class.blink::NGBreakToken"*)***
  %144 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %143, align 8
  %145 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %144, i64 1
  %146 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %145, align 8
  call void %146(%"class.blink::NGBreakToken"* nonnull %142) #10
  br label %147

147:                                              ; preds = %140, %134, %131
  store i32 0, i32* %26, align 8
  store i8 0, i8* %27, align 4
  store %"class.blink::LayoutBox"* %126, %"class.blink::LayoutBox"** %19, align 8
  %148 = trunc i64 %129 to i8
  store i8 %148, i8* %20, align 8
  %149 = icmp eq %"class.blink::NGBlockBreakToken"* %117, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %117, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %151) #10
  br label %152

152:                                              ; preds = %150, %147
  %153 = ptrtoint %"class.blink::NGBlockBreakToken"* %117 to i64
  %154 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %95, align 8
  store i64 %153, i64* %94, align 8
  %155 = icmp eq %"class.blink::NGBlockBreakToken"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %154, i64 0, i32 0, i32 1, i32 0
  %158 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %157, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %158) #10
  %159 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %157, i64 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %169

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %157, i64 -2
  %164 = bitcast %"class.base::RefCounted.1784"* %163 to %"class.blink::NGBreakToken"*
  %165 = bitcast %"class.base::RefCounted.1784"* %163 to void (%"class.blink::NGBreakToken"*)***
  %166 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %165, align 8
  %167 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %166, i64 1
  %168 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %167, align 8
  call void %168(%"class.blink::NGBreakToken"* nonnull %164) #10
  br label %169

169:                                              ; preds = %162, %156, %152
  %170 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %24, align 8
  %171 = icmp eq %"class.blink::NGBlockBreakToken"* %170, null
  br i1 %171, label %193, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %170, i64 0, i32 4
  %174 = load i32, i32* %173, align 8
  %175 = load i32, i32* %26, align 8
  %176 = icmp ugt i32 %174, %175
  br i1 %176, label %177, label %193

177:                                              ; preds = %172
  %178 = zext i32 %175 to i64
  %179 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %170, i64 0, i32 5, i64 %178
  %180 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %179, align 8
  %181 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %180, i64 0, i32 3
  %182 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %181, align 8
  %183 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %21, align 8
  %184 = icmp eq %"class.blink::LayoutBox"* %182, %183
  br i1 %184, label %185, label %186

185:                                              ; preds = %177
  store %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"** %68, align 8
  br label %191

186:                                              ; preds = %177
  %187 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %180, i64 0, i32 4
  %188 = load i16, i16* %187, align 8
  store %"class.blink::LayoutBox"* %182, %"class.blink::LayoutBox"** %68, align 8
  %189 = trunc i16 %188 to i8
  %190 = and i8 %189, 1
  br label %191

191:                                              ; preds = %186, %185
  %192 = phi i8 [ %190, %186 ], [ 0, %185 ]
  store i8 %192, i8* %18, align 8
  store %"class.blink::NGBreakToken"* %180, %"class.blink::NGBreakToken"** %96, align 8
  br label %273

193:                                              ; preds = %172, %169
  %194 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %19, align 8
  %195 = icmp eq %"class.blink::LayoutBox"* %194, null
  br i1 %195, label %199, label %196

196:                                              ; preds = %193
  %197 = ptrtoint %"class.blink::LayoutBox"* %194 to i64
  %198 = load i64, i64* %92, align 8
  store %"class.blink::NGBlockBreakToken"* null, %"class.blink::NGBlockBreakToken"** %67, align 8
  store i64 %197, i64* %97, align 8
  store i64 %198, i64* %91, align 8
  br label %273

199:                                              ; preds = %193
  %200 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %25, align 8
  %201 = icmp eq %"class.blink::NGBlockBreakToken"* %200, null
  br i1 %201, label %273, label %202

202:                                              ; preds = %199
  store %"class.blink::NGBlockBreakToken"* %200, %"class.blink::NGBlockBreakToken"** %67, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #10
  br label %273

203:                                              ; preds = %122, %112
  %204 = icmp eq %"class.blink::NGBlockBreakToken"* %117, null
  br i1 %204, label %273, label %205

205:                                              ; preds = %203
  store %"class.blink::NGBlockBreakToken"* null, %"class.blink::NGBlockBreakToken"** %24, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 40, i1 false) #10
  %206 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %95, align 8
  store i64 0, i64* %94, align 8
  %207 = icmp eq %"class.blink::NGBlockBreakToken"* %206, null
  br i1 %207, label %221, label %208

208:                                              ; preds = %205
  %209 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %206, i64 0, i32 0, i32 1, i32 0
  %210 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %209, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %210) #10
  %211 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %209, i64 0, i32 0, i32 0
  %212 = load i32, i32* %211, align 4
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %221

214:                                              ; preds = %208
  %215 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %209, i64 -2
  %216 = bitcast %"class.base::RefCounted.1784"* %215 to %"class.blink::NGBreakToken"*
  %217 = bitcast %"class.base::RefCounted.1784"* %215 to void (%"class.blink::NGBreakToken"*)***
  %218 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %217, align 8
  %219 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %218, i64 1
  %220 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %219, align 8
  call void %220(%"class.blink::NGBreakToken"* nonnull %216) #10
  br label %221

221:                                              ; preds = %214, %208, %205
  store i32 0, i32* %26, align 8
  store i8 0, i8* %27, align 4
  %222 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %117, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %222) #10
  %223 = ptrtoint %"class.blink::NGBlockBreakToken"* %117 to i64
  %224 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %95, align 8
  store i64 %223, i64* %94, align 8
  %225 = icmp eq %"class.blink::NGBlockBreakToken"* %224, null
  br i1 %225, label %239, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %224, i64 0, i32 0, i32 1, i32 0
  %228 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %227, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %228) #10
  %229 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %227, i64 0, i32 0, i32 0
  %230 = load i32, i32* %229, align 4
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %239

232:                                              ; preds = %226
  %233 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %227, i64 -2
  %234 = bitcast %"class.base::RefCounted.1784"* %233 to %"class.blink::NGBreakToken"*
  %235 = bitcast %"class.base::RefCounted.1784"* %233 to void (%"class.blink::NGBreakToken"*)***
  %236 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %235, align 8
  %237 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %236, i64 1
  %238 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %237, align 8
  call void %238(%"class.blink::NGBreakToken"* nonnull %234) #10
  br label %239

239:                                              ; preds = %232, %226, %221
  %240 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %24, align 8
  %241 = icmp eq %"class.blink::NGBlockBreakToken"* %240, null
  br i1 %241, label %263, label %242

242:                                              ; preds = %239
  %243 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %240, i64 0, i32 4
  %244 = load i32, i32* %243, align 8
  %245 = load i32, i32* %26, align 8
  %246 = icmp ugt i32 %244, %245
  br i1 %246, label %247, label %263

247:                                              ; preds = %242
  %248 = zext i32 %245 to i64
  %249 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %240, i64 0, i32 5, i64 %248
  %250 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %249, align 8
  %251 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %250, i64 0, i32 3
  %252 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %251, align 8
  %253 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %21, align 8
  %254 = icmp eq %"class.blink::LayoutBox"* %252, %253
  br i1 %254, label %255, label %256

255:                                              ; preds = %247
  store %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"** %68, align 8
  br label %261

256:                                              ; preds = %247
  %257 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %250, i64 0, i32 4
  %258 = load i16, i16* %257, align 8
  store %"class.blink::LayoutBox"* %252, %"class.blink::LayoutBox"** %68, align 8
  %259 = trunc i16 %258 to i8
  %260 = and i8 %259, 1
  br label %261

261:                                              ; preds = %256, %255
  %262 = phi i8 [ %260, %256 ], [ 0, %255 ]
  store i8 %262, i8* %18, align 8
  store %"class.blink::NGBreakToken"* %250, %"class.blink::NGBreakToken"** %96, align 8
  br label %273

263:                                              ; preds = %242, %239
  %264 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %19, align 8
  %265 = icmp eq %"class.blink::LayoutBox"* %264, null
  br i1 %265, label %269, label %266

266:                                              ; preds = %263
  %267 = ptrtoint %"class.blink::LayoutBox"* %264 to i64
  %268 = load i64, i64* %92, align 8
  store %"class.blink::NGBlockBreakToken"* null, %"class.blink::NGBlockBreakToken"** %67, align 8
  store i64 %267, i64* %97, align 8
  store i64 %268, i64* %91, align 8
  br label %273

269:                                              ; preds = %263
  %270 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %25, align 8
  %271 = icmp eq %"class.blink::NGBlockBreakToken"* %270, null
  br i1 %271, label %273, label %272

272:                                              ; preds = %269
  store %"class.blink::NGBlockBreakToken"* %270, %"class.blink::NGBlockBreakToken"** %67, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #10
  br label %273

273:                                              ; preds = %202, %199, %196, %191, %272, %269, %266, %261, %203
  %274 = phi i32 [ 3, %272 ], [ 3, %269 ], [ 3, %266 ], [ 3, %261 ], [ 3, %203 ], [ 2, %191 ], [ 2, %196 ], [ 2, %199 ], [ 2, %202 ]
  %275 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %104, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %275) #10
  %276 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %104, i64 0, i32 0, i32 0, i32 0, i32 0
  %277 = load i32, i32* %276, align 4
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %306

279:                                              ; preds = %273
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %104) #10
  %280 = bitcast %"class.blink::NGLayoutResult"* %104 to i8*
  call void @free(i8* %280) #10
  br label %306

281:                                              ; preds = %99
  %282 = load i8, i8* %69, align 1
  %283 = load i8, i8* %70, align 2
  %284 = load i8, i8* %71, align 1
  %285 = load i8, i8* %72, align 4
  %286 = load i8, i8* %73, align 1
  %287 = load i8, i8* %74, align 2
  %288 = load i8, i8* %75, align 1
  %289 = load i8, i8* %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #10
  store %"class.blink::LayoutBox"* %100, %"class.blink::LayoutBox"** %77, align 8
  store i8 %289, i8* %78, align 8
  store i8 %288, i8* %79, align 1
  store i8 %287, i8* %80, align 2
  store i8 %286, i8* %81, align 1
  store i8 %285, i8* %82, align 4
  store i8 %284, i8* %83, align 1
  store i8 %283, i8* %84, align 2
  store i8 %282, i8* %85, align 1
  %290 = load %"class.blink::NGEarlyBreak"*, %"class.blink::NGEarlyBreak"** %86, align 8
  %291 = icmp eq %"class.blink::NGEarlyBreak"* %290, null
  br i1 %291, label %296, label %292

292:                                              ; preds = %281
  %293 = call zeroext i1 @_ZN5blink18IsEarlyBreakTargetERKNS_12NGEarlyBreakERKNS_20NGBoxFragmentBuilderERKNS_17NGLayoutInputNodeE(%"class.blink::NGEarlyBreak"* nonnull dereferenceable(32) %290, %"class.blink::NGBoxFragmentBuilder"* dereferenceable(640) %87, %"class.blink::NGLayoutInputNode"* nonnull dereferenceable(16) %88) #10
  br i1 %293, label %304, label %294

294:                                              ; preds = %292
  %295 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %77, align 8
  br label %296

296:                                              ; preds = %294, %281
  %297 = phi %"class.blink::LayoutBox"* [ %295, %294 ], [ %100, %281 ]
  %298 = load i64, i64* %89, align 8
  %299 = call i32 @_ZN5blink23NGColumnLayoutAlgorithm13LayoutSpannerENS_11NGBlockNodeEPKNS_17NGBlockBreakTokenEPNS_13NGMarginStrutE(%"class.blink::NGColumnLayoutAlgorithm"* %0, %"class.blink::LayoutBox"* %297, i64 %298, %"class.blink::NGBlockBreakToken"* %101, %"struct.blink::NGMarginStrut"* nonnull %2)
  call fastcc void @_ZN5blink12_GLOBAL__N_118MulticolPartWalker4NextEv(%"class.blink::(anonymous namespace)::MulticolPartWalker"* nonnull %3)
  switch i32 %299, label %300 [
    i32 2, label %304
    i32 1, label %303
  ]

300:                                              ; preds = %296
  %301 = load i8, i8* %90, align 1, !range !5
  %302 = icmp eq i8 %301, 0
  br i1 %302, label %304, label %303

303:                                              ; preds = %300, %296
  br label %304

304:                                              ; preds = %300, %303, %296, %292
  %305 = phi i32 [ 3, %292 ], [ 3, %303 ], [ 1, %296 ], [ 0, %300 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #10
  br label %306

306:                                              ; preds = %279, %273, %304
  %307 = phi i32 [ %305, %304 ], [ %274, %273 ], [ %274, %279 ]
  switch i32 %307, label %410 [
    i32 0, label %308
    i32 3, label %314
    i32 2, label %308
  ]

308:                                              ; preds = %306, %306
  %309 = load i8, i8* %27, align 4, !range !5
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %311, label %317

311:                                              ; preds = %308
  %312 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %67, align 8
  %313 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %68, align 8
  br label %99

314:                                              ; preds = %306, %110
  %315 = load i8, i8* %27, align 4
  %316 = icmp eq i8 %315, 0
  br i1 %316, label %322, label %317

317:                                              ; preds = %308, %63, %314
  %318 = phi i8 [ 1, %63 ], [ %315, %314 ], [ 1, %308 ]
  %319 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 17
  %320 = load i8, i8* %319, align 1, !range !5
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %378, label %322

322:                                              ; preds = %317, %314
  %323 = phi i8 [ %318, %317 ], [ 0, %314 ]
  %324 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 3
  %325 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %324, align 8
  %326 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %325, i64 0, i32 3, i32 0
  %327 = load i32, i32* %326, align 8
  %328 = and i32 %327, 1
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %355, label %330

330:                                              ; preds = %322
  %331 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %325, i64 0, i32 1, i32 0
  %332 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %331, align 8
  %333 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %332, i64 0, i32 6
  %334 = load i16, i16* %333, align 8
  %335 = and i16 %334, 384
  switch i16 %335, label %340 [
    i16 0, label %355
    i16 256, label %336
  ]

336:                                              ; preds = %330
  %337 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %332, i64 0, i32 4, i32 0
  %338 = load i32, i32* %337, align 8
  %339 = icmp eq i32 %338, -64
  br i1 %339, label %355, label %343

340:                                              ; preds = %330
  %341 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %332, i64 0, i32 4, i32 0
  %342 = load i32, i32* %341, align 8
  br label %343

343:                                              ; preds = %340, %336
  %344 = phi i32 [ %342, %340 ], [ %338, %336 ]
  %345 = icmp sgt i32 %344, 64
  %346 = select i1 %345, i32 %344, i32 64
  %347 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %332, i64 0, i32 5, i32 0
  %348 = load i32, i32* %347, align 4
  %349 = icmp sgt i32 %348, -1
  %350 = select i1 %349, i32 -2147483648, i32 2147483647
  %351 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %346, i32 %348) #10
  %352 = extractvalue { i32, i1 } %351, 1
  %353 = extractvalue { i32, i1 } %351, 0
  %354 = select i1 %352, i32 %350, i32 %353, !prof !4
  br label %355

355:                                              ; preds = %322, %330, %336, %343
  %356 = phi i32 [ %354, %343 ], [ -64, %336 ], [ -64, %322 ], [ -64, %330 ]
  %357 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 5, i32 0
  store i32 %356, i32* %357, align 8
  %358 = icmp eq i8 %323, 0
  br i1 %358, label %359, label %410

359:                                              ; preds = %355
  %360 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 0, i32 0
  %361 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %362 = bitcast i8* %18 to i64*
  %363 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4
  br label %364

364:                                              ; preds = %359, %375
  %365 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %360, align 8
  %366 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %361, align 8
  %367 = load i64, i64* %362, align 8
  %368 = icmp eq %"class.blink::NGBlockBreakToken"* %365, null
  br i1 %368, label %372, label %369

369:                                              ; preds = %364
  %370 = bitcast %"class.blink::NGBlockBreakToken"* %365 to %"class.blink::NGBreakToken"*
  %371 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %365, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %371) #10
  call void @_ZN5blink20NGBoxFragmentBuilder13AddBreakTokenE13scoped_refptrIKNS_12NGBreakTokenEEb(%"class.blink::NGBoxFragmentBuilder"* %363, %"class.blink::NGBreakToken"* nonnull %370, i1 zeroext false) #10
  br label %375

372:                                              ; preds = %364
  %373 = icmp eq %"class.blink::LayoutBox"* %366, null
  br i1 %373, label %375, label %374

374:                                              ; preds = %372
  call void @_ZN5blink20NGBoxFragmentBuilder19AddBreakBeforeChildENS_17NGLayoutInputNodeEN4absl8optionalINS_13NGBreakAppealEEEb(%"class.blink::NGBoxFragmentBuilder"* %363, %"class.blink::LayoutBox"* nonnull %366, i64 %367, i64 12884901889, i1 zeroext false) #10
  br label %375

375:                                              ; preds = %372, %374, %369
  call fastcc void @_ZN5blink12_GLOBAL__N_118MulticolPartWalker4NextEv(%"class.blink::(anonymous namespace)::MulticolPartWalker"* nonnull %3)
  %376 = load i8, i8* %27, align 4, !range !5
  %377 = icmp eq i8 %376, 0
  br i1 %377, label %364, label %410

378:                                              ; preds = %317
  %379 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 22
  store i8 1, i8* %379, align 8
  %380 = load i8, i8* %8, align 1, !range !5
  %381 = icmp eq i8 %380, 0
  br i1 %381, label %382, label %401

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %2, i64 0, i32 2
  %384 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %2, i64 0, i32 0
  %385 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %383, i64 0, i32 0
  %386 = load i32, i32* %385, align 4
  %387 = load i32, i32* %6, align 4
  %388 = icmp slt i32 %386, %387
  %389 = select i1 %388, %"class.blink::LayoutUnit"* %384, %"class.blink::LayoutUnit"* %383
  %390 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %389, i64 0, i32 0
  %391 = load i32, i32* %390, align 4
  %392 = load i32, i32* %7, align 4
  %393 = icmp slt i32 %392, 0
  %394 = select i1 %393, i32 -2147483648, i32 2147483647
  %395 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %391, i32 %392) #10
  %396 = extractvalue { i32, i1 } %395, 1
  %397 = extractvalue { i32, i1 } %395, 0
  %398 = select i1 %396, i32 %394, i32 %397, !prof !4
  %399 = icmp slt i32 %398, 0
  %400 = select i1 %399, i32 -2147483648, i32 2147483647
  br label %401

401:                                              ; preds = %378, %382
  %402 = phi i32 [ %398, %382 ], [ 0, %378 ]
  %403 = phi i32 [ %400, %382 ], [ 2147483647, %378 ]
  %404 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 5, i32 0
  %405 = load i32, i32* %404, align 4
  %406 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %405, i32 %402) #10
  %407 = extractvalue { i32, i1 } %406, 1
  %408 = extractvalue { i32, i1 } %406, 0
  %409 = select i1 %407, i32 %403, i32 %408, !prof !4
  store i32 %409, i32* %404, align 4
  br label %410

410:                                              ; preds = %306, %375, %355, %106, %401
  %411 = phi i32 [ 0, %401 ], [ 1, %106 ], [ 0, %355 ], [ 0, %375 ], [ 2, %306 ]
  %412 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %25, align 8
  %413 = icmp eq %"class.blink::NGBlockBreakToken"* %412, null
  br i1 %413, label %427, label %414

414:                                              ; preds = %410
  %415 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %412, i64 0, i32 0, i32 1, i32 0
  %416 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %415, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %416) #10
  %417 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %415, i64 0, i32 0, i32 0
  %418 = load i32, i32* %417, align 4
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %427

420:                                              ; preds = %414
  %421 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %415, i64 -2
  %422 = bitcast %"class.base::RefCounted.1784"* %421 to %"class.blink::NGBreakToken"*
  %423 = bitcast %"class.base::RefCounted.1784"* %421 to void (%"class.blink::NGBreakToken"*)***
  %424 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %423, align 8
  %425 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %424, i64 1
  %426 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %425, align 8
  call void %426(%"class.blink::NGBreakToken"* nonnull %422) #10
  br label %427

427:                                              ; preds = %410, %414, %420
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret i32 %411
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NGLayoutResult"* @_ZN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEE23RelayoutAndBreakEarlierINS_23NGColumnLayoutAlgorithmEEE13scoped_refptrIKNS_14NGLayoutResultEERKNS_12NGEarlyBreakE(%"class.blink::NGLayoutAlgorithm"*, %"class.blink::NGEarlyBreak"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.blink::NGLayoutAlgorithmParams", align 16
  %4 = alloca %"class.blink::NGColumnLayoutAlgorithm", align 8
  %5 = bitcast %"struct.blink::NGLayoutAlgorithmParams"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.blink::LayoutBox"** %6 to <2 x i64>*
  %8 = load <2 x i64>, <2 x i64>* %7, align 8
  %9 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 1
  %11 = bitcast %"struct.blink::NGFragmentGeometry"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 3
  %14 = bitcast %"class.blink::NGConstraintSpace"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 3, i32 0
  %17 = bitcast %"class.blink::NGBlockBreakToken"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"struct.blink::NGLayoutAlgorithmParams"* %3 to <2 x i64>*
  store <2 x i64> %8, <2 x i64>* %19, align 16
  %20 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %3, i64 0, i32 1
  %21 = bitcast %"struct.blink::NGFragmentGeometry"** %20 to i64*
  store i64 %12, i64* %21, align 16
  %22 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %3, i64 0, i32 2
  %23 = bitcast %"class.blink::NGConstraintSpace"** %22 to i64*
  store i64 %15, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %3, i64 0, i32 3
  %25 = bitcast %"class.blink::NGBlockBreakToken"** %24 to i64*
  store i64 %18, i64* %25, align 16
  %26 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %3, i64 0, i32 4
  store %"class.blink::NGEarlyBreak"* %1, %"class.blink::NGEarlyBreak"** %26, align 8
  %27 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %3, i64 0, i32 5
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %27, align 16
  %28 = bitcast %"class.blink::NGColumnLayoutAlgorithm"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 712, i8* nonnull %28) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 712, i1 false)
  call void @_ZN5blink23NGColumnLayoutAlgorithmC2ERKNS_23NGLayoutAlgorithmParamsE(%"class.blink::NGColumnLayoutAlgorithm"* nonnull %4, %"struct.blink::NGLayoutAlgorithmParams"* nonnull dereferenceable(56) %3)
  %29 = call i32 @_ZNK5blink20NGBoxFragmentBuilder7BoxTypeEv(%"class.blink::NGBoxFragmentBuilder"* %9) #10
  %30 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %4, i64 0, i32 0, i32 4, i32 9
  store i32 %29, i32* %30, align 8
  %31 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4, i32 31, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %4, i64 0, i32 0, i32 4, i32 31, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp sgt i32 %34, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %2
  store i32 %32, i32* %33, align 8
  br label %37

37:                                               ; preds = %2, %36
  %38 = call %"class.blink::NGLayoutResult"* @_ZN5blink23NGColumnLayoutAlgorithm6LayoutEv(%"class.blink::NGColumnLayoutAlgorithm"* nonnull %4)
  %39 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %4, i64 0, i32 0, i32 4
  call void @_ZN5blink20NGBoxFragmentBuilderD2Ev(%"class.blink::NGBoxFragmentBuilder"* %40) #10
  %41 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %4, i64 0, i32 0, i32 3, i32 0
  %42 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %41, align 8
  %43 = icmp eq %"class.blink::NGBlockBreakToken"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %42, i64 0, i32 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %45, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %46) #10
  %47 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %45, i64 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %57

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %45, i64 -2
  %52 = bitcast %"class.base::RefCounted.1784"* %51 to %"class.blink::NGBreakToken"*
  %53 = bitcast %"class.base::RefCounted.1784"* %51 to void (%"class.blink::NGBreakToken"*)***
  %54 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %54, i64 1
  %56 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %55, align 8
  call void %56(%"class.blink::NGBreakToken"* nonnull %52) #10
  br label %57

57:                                               ; preds = %37, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 712, i8* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #10
  ret %"class.blink::NGLayoutResult"* %38
}

declare %"class.blink::NGLayoutResult"* @_ZN5blink20NGBoxFragmentBuilder5AbortENS_14NGLayoutResult7EStatusE(%"class.blink::NGBoxFragmentBuilder"*, i32) local_unnamed_addr #2

declare i32 @_ZN5blink23ClampIntrinsicBlockSizeERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeERKNS_10NGBoxStrutENS_10LayoutUnitEN4absl8optionalIS9_EE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockNode"* dereferenceable(16), %"struct.blink::NGBoxStrut"* dereferenceable(16), i32, i64) local_unnamed_addr #2

declare i32 @_ZN5blink27ComputeBlockSizeForFragmentERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutENS_10LayoutUnitEN4absl8optionalIS9_EES9_(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::NGBoxStrut"* dereferenceable(16), i32, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23NGColumnLayoutAlgorithm30PositionAnyUnclaimedListMarkerEv(%"class.blink::NGColumnLayoutAlgorithm"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::NGUnpositionedListMarker", align 8
  %3 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %49

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.blink::LayoutBox"** %9 to %"class.blink::LayoutObject"**
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = bitcast %"class.blink::LayoutObject"* %11 to i1 (%"class.blink::LayoutObject"*, i32)***
  %13 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %13, i64 92
  %15 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::LayoutObject"* %11, i32 29) #10
  br i1 %16, label %17, label %49

17:                                               ; preds = %8
  %18 = bitcast %"class.blink::NGUnpositionedListMarker"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 13
  %20 = bitcast %"class.blink::NGUnpositionedListMarker"* %19 to i64*
  %21 = bitcast %"class.blink::NGUnpositionedListMarker"* %2 to i64*
  %22 = load i64, i64* %20, align 8
  store i64 %22, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %48, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4
  %26 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1
  %27 = bitcast %"class.blink::NGBlockNode"* %26 to %"class.blink::LayoutObject"**
  %28 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 5, i32 0
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %31 = tail call i32 @_ZNK5blink13ComputedStyle15GetFontBaselineEv(%"class.blink::ComputedStyle"* %30) #10
  %32 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 3
  %33 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %32, align 8
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 5, i32 0
  %36 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %35, align 8
  %37 = call %"class.blink::NGLayoutResult"* @_ZNK5blink24NGUnpositionedListMarker6LayoutERKNS_17NGConstraintSpaceERKNS_13ComputedStyleENS_12FontBaselineE(%"class.blink::NGUnpositionedListMarker"* nonnull %2, %"class.blink::NGConstraintSpace"* dereferenceable(32) %33, %"class.blink::ComputedStyle"* dereferenceable(104) %36, i32 %31) #10
  %38 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %32, align 8
  %39 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 5
  call void @_ZNK5blink24NGUnpositionedListMarker24AddToBoxWithoutLineBoxesERKNS_17NGConstraintSpaceENS_12FontBaselineERKNS_14NGLayoutResultEPNS_20NGBoxFragmentBuilderEPNS_10LayoutUnitE(%"class.blink::NGUnpositionedListMarker"* nonnull %2, %"class.blink::NGConstraintSpace"* dereferenceable(32) %38, i32 %31, %"class.blink::NGLayoutResult"* dereferenceable(64) %37, %"class.blink::NGBoxFragmentBuilder"* %25, %"class.blink::LayoutUnit"* %39) #10
  store i64 0, i64* %20, align 8
  %40 = icmp eq %"class.blink::NGLayoutResult"* %37, null
  br i1 %40, label %48, label %41

41:                                               ; preds = %24
  %42 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %37, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #10
  %43 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %37) #10
  %47 = bitcast %"class.blink::NGLayoutResult"* %37 to i8*
  call void @free(i8* %47) #10
  br label %48

48:                                               ; preds = %17, %46, %41, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  br label %49

49:                                               ; preds = %1, %8, %48
  ret void
}

declare i32 @_ZN5blink19FinishFragmentationENS_11NGBlockNodeERKNS_17NGConstraintSpaceENS_10LayoutUnitES4_PNS_20NGBoxFragmentBuilderE(%"class.blink::LayoutBox"*, i64, %"class.blink::NGConstraintSpace"* dereferenceable(32), i32, i32, %"class.blink::NGBoxFragmentBuilder"*) local_unnamed_addr #2

declare void @_ZN5blink26NGContainerFragmentBuilder26AddMulticolWithPendingOOFsERKNS_11NGBlockNodeENS_25NGMulticolWithPendingOOFsINS_13LogicalOffsetEEE(%"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGBlockNode"* dereferenceable(16), %"struct.blink::NGMulticolWithPendingOOFs"* byval(%"struct.blink::NGMulticolWithPendingOOFs") align 8) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink21NGOutOfFlowLayoutPartC1ERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceEPNS_20NGBoxFragmentBuilderE(%"class.blink::NGOutOfFlowLayoutPart"*, %"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBoxFragmentBuilder"*) unnamed_addr #2

declare void @_ZN5blink21NGOutOfFlowLayoutPart3RunEPKNS_9LayoutBoxE(%"class.blink::NGOutOfFlowLayoutPart"*, %"class.blink::LayoutBox"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i8 } @_ZNK5blink23NGColumnLayoutAlgorithm18ComputeMinMaxSizesERKNS_21MinMaxSizesFloatInputE(%"class.blink::NGColumnLayoutAlgorithm"* nocapture, %"struct.blink::MinMaxSizesFloatInput"* nocapture readnone dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.blink::NGConstraintSpace", align 8
  %6 = alloca %"struct.blink::NGFragmentGeometry", align 4
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"class.blink::NGBlockNode"*
  %9 = alloca %"class.blink::NGBlockLayoutAlgorithm", align 8
  %10 = alloca %"struct.blink::NGLayoutAlgorithmParams", align 16
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"struct.blink::MinMaxSizesFloatInput"*
  %13 = alloca i32, align 4
  %14 = alloca { %"class.blink::LayoutBox"*, i64 }, align 8
  %15 = bitcast { %"class.blink::LayoutBox"*, i64 }* %14 to %"class.blink::NGBlockNode"*
  %16 = bitcast %"class.blink::NGConstraintSpace"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %5, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %5, i64 0, i32 3, i32 0
  %19 = bitcast %"class.blink::NGConstraintSpace"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false)
  call void @_ZNK5blink23NGColumnLayoutAlgorithm30CreateConstraintSpaceForMinMaxEv(%"class.blink::NGConstraintSpace"* nonnull sret %5, %"class.blink::NGColumnLayoutAlgorithm"* %0)
  %20 = bitcast %"struct.blink::NGFragmentGeometry"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %20) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %20, i8 -86, i64 56, i1 false)
  %21 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #10
  %22 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %24 = bitcast i8* %23 to i64*
  %25 = bitcast %"class.blink::LayoutBox"** %22 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8
  store <2 x i64> %26, <2 x i64>* %7, align 16
  call void @_ZN5blink32CalculateInitialFragmentGeometryERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeEb(%"struct.blink::NGFragmentGeometry"* nonnull sret %6, %"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %5, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %8, i1 zeroext true) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #10
  %27 = bitcast %"class.blink::NGBlockLayoutAlgorithm"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 744, i8* nonnull %27) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 744, i1 false)
  %28 = bitcast %"struct.blink::NGLayoutAlgorithmParams"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %28) #10
  %29 = bitcast %"class.blink::LayoutBox"** %22 to <2 x i64>*
  %30 = load <2 x i64>, <2 x i64>* %29, align 8
  %31 = bitcast %"struct.blink::NGLayoutAlgorithmParams"* %10 to <2 x i64>*
  store <2 x i64> %30, <2 x i64>* %31, align 16
  %32 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %10, i64 0, i32 1
  store %"struct.blink::NGFragmentGeometry"* %6, %"struct.blink::NGFragmentGeometry"** %32, align 16
  %33 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %10, i64 0, i32 2
  store %"class.blink::NGConstraintSpace"* %5, %"class.blink::NGConstraintSpace"** %33, align 8
  %34 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %10, i64 0, i32 3
  %35 = bitcast %"class.blink::NGBlockBreakToken"** %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %35, i8 0, i64 24, i1 false)
  call void @_ZN5blink22NGBlockLayoutAlgorithmC1ERKNS_23NGLayoutAlgorithmParamsE(%"class.blink::NGBlockLayoutAlgorithm"* nonnull %9, %"struct.blink::NGLayoutAlgorithmParams"* nonnull dereferenceable(56) %10) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %28) #10
  %36 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  store i64 0, i64* %11, align 8
  %37 = call { i64, i8 } @_ZNK5blink22NGBlockLayoutAlgorithm18ComputeMinMaxSizesERKNS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockLayoutAlgorithm"* nonnull %9, %"struct.blink::MinMaxSizesFloatInput"* nonnull dereferenceable(8) %12) #10
  %38 = extractvalue { i64, i8 } %37, 0
  %39 = extractvalue { i64, i8 } %37, 1
  %40 = trunc i64 %38 to i32
  store i32 %40, i32* %3, align 8
  %41 = lshr i64 %38, 32
  %42 = trunc i64 %41 to i32
  store i32 %42, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  %43 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1
  %44 = bitcast %"class.blink::NGBlockNode"* %43 to %"class.blink::LayoutObject"**
  %45 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %45, i64 0, i32 5, i32 0
  %47 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %47, i64 0, i32 0, i32 3, i32 0, i32 0
  %49 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %49, i64 0, i32 3, i32 0, i32 0
  %51 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %51, i64 0, i32 1, i32 0, i32 0
  %53 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %53, i64 0, i32 2
  %55 = load i8, i8* %54, align 4
  %56 = and i8 %55, 2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %63, label %58

58:                                               ; preds = %2
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %49, i64 0, i32 2, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %60, i64 0, i32 2, i32 0, i32 0
  %62 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %61, align 8
  br label %94

63:                                               ; preds = %2
  %64 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64)
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %49, i64 0, i32 2, i32 0, i32 0
  %66 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %66, i64 0, i32 2, i32 0, i32 0
  %68 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %68, i64 0, i32 31
  %70 = load float, float* %69, align 8
  %71 = fmul float %70, 6.400000e+01
  %72 = fcmp ult float %71, 0xC1E0000000000000
  %73 = fcmp ugt float %71, 0x41DFFFFFE0000000
  %74 = fcmp ogt float %71, 0xC1E0000000000000
  %75 = select i1 %74, float %71, float 0xC1E0000000000000
  %76 = fptosi float %75 to i32
  %77 = select i1 %72, i32 0, i32 2147483647
  %78 = select i1 %73, i32 %77, i32 %76
  store i32 %78, i32* %13, align 4
  %79 = icmp slt i32 %78, %40
  %80 = bitcast i32* %13 to %"class.blink::LayoutUnit"*
  %81 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %82 = select i1 %79, %"class.blink::LayoutUnit"* %80, %"class.blink::LayoutUnit"* %81
  %83 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %82, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  store i32 %84, i32* %3, align 8
  %85 = icmp sgt i32 %78, %42
  %86 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %87 = select i1 %85, %"class.blink::LayoutUnit"* %80, %"class.blink::LayoutUnit"* %86
  %88 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  store i32 %89, i32* %4, align 4
  %90 = icmp slt i32 %89, %84
  %91 = select i1 %90, %"class.blink::LayoutUnit"* %81, %"class.blink::LayoutUnit"* %86
  %92 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %91, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  store i32 %93, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64)
  br label %94

94:                                               ; preds = %58, %63
  %95 = phi i32 [ %42, %58 ], [ %93, %63 ]
  %96 = phi i32 [ %40, %58 ], [ %84, %63 ]
  %97 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* [ %62, %58 ], [ %68, %63 ]
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %97, i64 0, i32 41
  %99 = load i16, i16* %98, align 8
  %100 = zext i16 %99 to i32
  %101 = call i32 @_ZN5blink20ResolveUsedColumnGapENS_10LayoutUnitERKNS_13ComputedStyleE(i32 0, %"class.blink::ComputedStyle"* dereferenceable(104) %47) #10
  %102 = add nsw i32 %100, -1
  %103 = icmp sgt i32 %102, 33554431
  %104 = shl nsw i32 %102, 6
  %105 = select i1 %103, i32 2147483647, i32 %104
  %106 = sext i32 %101 to i64
  %107 = sext i32 %105 to i64
  %108 = mul nsw i64 %107, %106
  %109 = sdiv i64 %108, 64
  %110 = ashr i64 %109, 32
  %111 = trunc i64 %110 to i32
  %112 = trunc i64 %109 to i32
  %113 = ashr i32 %112, 31
  %114 = icmp eq i32 %113, %111
  br i1 %114, label %119, label %115

115:                                              ; preds = %94
  %116 = xor i32 %105, %101
  %117 = lshr i32 %116, 31
  %118 = add nuw i32 %117, 2147483647
  br label %119

119:                                              ; preds = %94, %115
  %120 = phi i32 [ %112, %94 ], [ %118, %115 ]
  %121 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %122 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %121, i64 0, i32 5, i32 0
  %123 = bitcast %"class.blink::ComputedStyle"** %122 to %"class.blink::ComputedStyleBase"**
  %124 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %124, i64 0, i32 3, i32 0, i32 0
  %126 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %126, i64 0, i32 3, i32 0, i32 0
  %128 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %128, i64 0, i32 1, i32 0, i32 0
  %130 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %130, i64 0, i32 2
  %132 = load i8, i8* %131, align 4
  %133 = and i8 %132, 2
  %134 = icmp eq i8 %133, 0
  %135 = ptrtoint %"class.blink::LayoutObject"* %121 to i64
  %136 = uitofp i16 %99 to float
  br i1 %134, label %155, label %137

137:                                              ; preds = %119
  %138 = sitofp i32 %96 to float
  %139 = fmul float %138, 1.562500e-02
  %140 = fmul float %139, %136
  %141 = fmul float %140, 6.400000e+01
  %142 = fcmp ult float %141, 0xC1E0000000000000
  %143 = fcmp ugt float %141, 0x41DFFFFFE0000000
  %144 = fcmp ogt float %141, 0xC1E0000000000000
  %145 = select i1 %144, float %141, float 0xC1E0000000000000
  %146 = fptosi float %145 to i32
  %147 = select i1 %142, i32 0, i32 2147483647
  %148 = select i1 %143, i32 %147, i32 %146
  %149 = icmp slt i32 %120, 0
  %150 = select i1 %149, i32 -2147483648, i32 2147483647
  %151 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %148, i32 %120) #10
  %152 = extractvalue { i32, i1 } %151, 1
  %153 = extractvalue { i32, i1 } %151, 0
  %154 = select i1 %152, i32 %150, i32 %153, !prof !4
  store i32 %154, i32* %3, align 8
  br label %155

155:                                              ; preds = %119, %137
  %156 = phi i32 [ %154, %137 ], [ %96, %119 ]
  %157 = sitofp i32 %95 to float
  %158 = fmul float %157, 1.562500e-02
  %159 = fmul float %158, %136
  %160 = fmul float %159, 6.400000e+01
  %161 = fcmp ult float %160, 0xC1E0000000000000
  %162 = fcmp ugt float %160, 0x41DFFFFFE0000000
  %163 = fcmp ogt float %160, 0xC1E0000000000000
  %164 = select i1 %163, float %160, float 0xC1E0000000000000
  %165 = fptosi float %164 to i32
  %166 = select i1 %161, i32 0, i32 2147483647
  %167 = select i1 %162, i32 %166, i32 %165
  %168 = icmp slt i32 %120, 0
  %169 = select i1 %168, i32 -2147483648, i32 2147483647
  %170 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %167, i32 %120) #10
  %171 = extractvalue { i32, i1 } %170, 1
  %172 = extractvalue { i32, i1 } %170, 0
  %173 = select i1 %171, i32 %169, i32 %172
  %174 = bitcast { %"class.blink::LayoutBox"*, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #10
  %175 = load i64, i64* %24, align 8
  %176 = bitcast { %"class.blink::LayoutBox"*, i64 }* %14 to i64*
  store i64 %135, i64* %176, align 8
  %177 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %14, i64 0, i32 1
  store i64 %175, i64* %177, align 8
  %178 = call { i64, i8 } @_ZNK5blink23NGColumnLayoutAlgorithm26ComputeSpannersMinMaxSizesERKNS_11NGBlockNodeE(%"class.blink::NGColumnLayoutAlgorithm"* %0, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %15)
  %179 = extractvalue { i64, i8 } %178, 0
  %180 = trunc i64 %179 to i32
  %181 = lshr i64 %179, 32
  %182 = trunc i64 %181 to i32
  %183 = icmp slt i32 %156, %180
  %184 = select i1 %183, i32 %180, i32 %156
  %185 = icmp slt i32 %173, %182
  %186 = select i1 %185, i32 %182, i32 %173
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #10
  %187 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 3, i32 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 3, i32 1, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = icmp slt i32 %190, 0
  %192 = select i1 %191, i32 -2147483648, i32 2147483647
  %193 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %188, i32 %190) #10
  %194 = extractvalue { i32, i1 } %193, 1
  %195 = extractvalue { i32, i1 } %193, 0
  %196 = select i1 %194, i32 %192, i32 %195, !prof !4
  %197 = icmp slt i32 %196, 0
  %198 = select i1 %197, i32 -2147483648, i32 2147483647
  %199 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %184, i32 %196) #10
  %200 = extractvalue { i32, i1 } %199, 1
  %201 = extractvalue { i32, i1 } %199, 0
  %202 = select i1 %200, i32 %198, i32 %201, !prof !4
  store i32 %202, i32* %3, align 8
  %203 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %186, i32 %196) #10
  %204 = extractvalue { i32, i1 } %203, 1
  %205 = extractvalue { i32, i1 } %203, 0
  %206 = select i1 %204, i32 %198, i32 %205, !prof !4
  store i32 %206, i32* %4, align 4
  call void @_ZN5blink22NGBlockLayoutAlgorithmD1Ev(%"class.blink::NGBlockLayoutAlgorithm"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 744, i8* nonnull %27) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %20) #10
  %207 = load i32, i32* %18, align 8
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %215, label %210

210:                                              ; preds = %155
  %211 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %17, align 8
  %212 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %211, null
  br i1 %212, label %215, label %213

213:                                              ; preds = %210
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %211) #10
  %214 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %211 to i8*
  call void @free(i8* %214) #10
  br label %215

215:                                              ; preds = %155, %210, %213
  %216 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %5, i64 0, i32 2
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %216) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #10
  %217 = zext i32 %206 to i64
  %218 = shl nuw i64 %217, 32
  %219 = zext i32 %202 to i64
  %220 = or i64 %218, %219
  %221 = insertvalue { i64, i8 } undef, i64 %220, 0
  %222 = insertvalue { i64, i8 } %221, i8 %39, 1
  ret { i64, i8 } %222
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23NGColumnLayoutAlgorithm30CreateConstraintSpaceForMinMaxEv(%"class.blink::NGConstraintSpace"* noalias nocapture sret, %"class.blink::NGColumnLayoutAlgorithm"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::NGConstraintSpaceBuilder", align 8
  %4 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %3, i64 0, i32 0, i32 3
  %6 = bitcast %"struct.blink::NGConstraintSpace::Bitfields"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %1, i64 0, i32 0, i32 4, i32 0, i32 3
  %8 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %1, i64 0, i32 0, i32 1
  %10 = bitcast %"class.blink::NGBlockNode"* %9 to %"class.blink::LayoutObject"**
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = lshr i160 %16, 102
  %18 = trunc i160 %17 to i16
  %19 = and i16 %18, 3
  %20 = lshr i160 %16, 108
  %21 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %8, i64 0, i32 3, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 -64, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %3, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 -64, i32* %24, align 4
  %25 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %3, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %3, i64 0, i32 0, i32 3, i32 0
  %27 = shl nuw nsw i16 %19, 4
  %28 = trunc i160 %20 to i16
  %29 = and i16 %28, 128
  %30 = bitcast %union.anon.1634* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #10
  %31 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %3, i64 0, i32 1, i32 0
  store i32 -64, i32* %31, align 8
  %32 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %3, i64 0, i32 2
  %33 = and i32 %22, 112
  %34 = icmp ne i32 %33, 0
  %35 = icmp eq i16 %19, 0
  %36 = xor i1 %34, %35
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %32, align 4
  %38 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %38, align 1
  %39 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %39, align 2
  %40 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %3, i64 0, i32 5
  store i8 1, i8* %40, align 1
  %41 = select i1 %36, i32 0, i32 2048
  %42 = or i16 %29, %27
  %43 = or i16 %42, 1024
  %44 = zext i16 %43 to i32
  %45 = or i32 %41, %44
  store i32 %45, i32* %26, align 8
  %46 = load i32, i32* %21, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %69, label %49

49:                                               ; preds = %2
  %50 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %8, i64 0, i32 1, i32 0
  %51 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %50, align 8
  %52 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %51, i64 0, i32 6
  %53 = load i16, i16* %52, align 8
  %54 = and i16 %53, 512
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %69, label %56

56:                                               ; preds = %49
  %57 = tail call noalias i8* @malloc(i64 88) #10
  %58 = getelementptr inbounds i8, i8* %57, i64 24
  %59 = bitcast i8* %58 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 0, i64 24, i1 false) #10
  store i32 -64, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %57, i64 28
  %61 = bitcast i8* %60 to i32*
  store i32 0, i32* %61, align 4
  %62 = getelementptr inbounds i8, i8* %57, i64 32
  %63 = bitcast i8* %62 to i16*
  %64 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %3, i64 0, i32 0, i32 1, i32 0
  %65 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %64 to i8**
  store i8* %57, i8** %65, align 8
  %66 = or i32 %45, 1
  store i32 %66, i32* %26, align 8
  store i16 512, i16* %63, align 8
  %67 = bitcast i8* %57 to %"struct.blink::NGConstraintSpace::RareData"*
  %68 = ptrtoint i8* %57 to i64
  br label %69

69:                                               ; preds = %2, %49, %56
  %70 = phi i64 [ 0, %2 ], [ 0, %49 ], [ %68, %56 ]
  %71 = phi %"struct.blink::NGConstraintSpace::RareData"* [ null, %2 ], [ null, %49 ], [ %67, %56 ]
  %72 = phi i32 [ %45, %2 ], [ %45, %49 ], [ %66, %56 ]
  %73 = or i32 %72, 512
  store i32 %73, i32* %26, align 8
  %74 = and i32 %72, 1
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %91

76:                                               ; preds = %69
  %77 = tail call noalias i8* @malloc(i64 88) #10
  %78 = getelementptr inbounds i8, i8* %77, i64 16
  %79 = bitcast i8* %78 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %77, i8 0, i64 16, i1 false) #10
  store i64 %70, i64* %79, align 8
  %80 = getelementptr inbounds i8, i8* %77, i64 24
  %81 = bitcast i8* %80 to i32*
  store i32 -64, i32* %81, align 4
  %82 = getelementptr inbounds i8, i8* %77, i64 28
  %83 = bitcast i8* %82 to i32*
  store i32 0, i32* %83, align 4
  %84 = getelementptr inbounds i8, i8* %77, i64 32
  %85 = bitcast i8* %84 to i16*
  store i16 0, i16* %85, align 8
  %86 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %3, i64 0, i32 0, i32 1, i32 0
  %87 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %86 to i8**
  store i8* %77, i8** %87, align 8
  %88 = or i32 %72, 513
  store i32 %88, i32* %26, align 8
  %89 = bitcast i8* %77 to %"struct.blink::NGConstraintSpace::RareData"*
  %90 = ptrtoint i8* %77 to i64
  br label %91

91:                                               ; preds = %69, %76
  %92 = phi i64 [ %90, %76 ], [ %70, %69 ]
  %93 = phi i32 [ %88, %76 ], [ %73, %69 ]
  %94 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %89, %76 ], [ %71, %69 ]
  %95 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %94, i64 0, i32 6
  %96 = load i16, i16* %95, align 8
  %97 = or i16 %96, 1024
  store i16 %97, i16* %95, align 8
  %98 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %3 to i64*
  %99 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %100 = load i64, i64* %98, align 8, !noalias !6
  store i64 %100, i64* %99, align 8, !alias.scope !6
  %101 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 2
  %102 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %3, i64 0, i32 0, i32 2
  %103 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %102, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %103, align 8, !noalias !6
  %104 = bitcast %"class.blink::NGExclusionSpace"* %101 to i64*
  store i64 0, i64* %104, align 8, !alias.scope !6
  %105 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  store i32 %93, i32* %105, align 8, !alias.scope !6
  %106 = and i32 %93, 1
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %91
  %109 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1
  %110 = bitcast %union.anon.1634* %109 to i64*
  store i64 %92, i64* %110, align 8, !alias.scope !6
  br label %115

111:                                              ; preds = %91
  %112 = getelementptr inbounds %union.anon.1634, %union.anon.1634* %25, i64 0, i32 0
  %113 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1
  %114 = bitcast %union.anon.1634* %113 to i64*
  store i64 %92, i64* %114, align 8, !alias.scope !6
  store %"struct.blink::NGConstraintSpace::RareData"* null, %"struct.blink::NGConstraintSpace::RareData"** %112, align 8, !noalias !6
  br label %115

115:                                              ; preds = %111, %108
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %102) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #10
  ret void
}

declare void @_ZN5blink32CalculateInitialFragmentGeometryERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeEb(%"struct.blink::NGFragmentGeometry"* sret, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockNode"* dereferenceable(16), i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink22NGBlockLayoutAlgorithmC1ERKNS_23NGLayoutAlgorithmParamsE(%"class.blink::NGBlockLayoutAlgorithm"*, %"struct.blink::NGLayoutAlgorithmParams"* dereferenceable(56)) unnamed_addr #2

declare { i64, i8 } @_ZNK5blink22NGBlockLayoutAlgorithm18ComputeMinMaxSizesERKNS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockLayoutAlgorithm"*, %"struct.blink::MinMaxSizesFloatInput"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i8 } @_ZNK5blink23NGColumnLayoutAlgorithm26ComputeSpannersMinMaxSizesERKNS_11NGBlockNodeE(%"class.blink::NGColumnLayoutAlgorithm"* nocapture, %"class.blink::NGBlockNode"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca { %"class.blink::LayoutBox"*, i64 }, align 8
  %4 = bitcast { %"class.blink::LayoutBox"*, i64 }* %3 to %"class.blink::NGLayoutInputNode"*
  %5 = alloca %"class.blink::NGMinMaxConstraintSpaceBuilder", align 16
  %6 = alloca %"class.blink::NGConstraintSpace", align 16
  %7 = bitcast { %"class.blink::LayoutBox"*, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %3, i64 0, i32 0
  %9 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %3, i64 0, i32 1
  %10 = bitcast i64* %9 to i8*
  %11 = tail call { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode10FirstChildEv(%"class.blink::NGBlockNode"* %1) #10
  %12 = extractvalue { %"class.blink::LayoutBox"*, i64 } %11, 0
  store %"class.blink::LayoutBox"* %12, %"class.blink::LayoutBox"** %8, align 8
  %13 = extractvalue { %"class.blink::LayoutBox"*, i64 } %11, 1
  store i64 %13, i64* %9, align 8
  %14 = icmp eq %"class.blink::LayoutBox"* %12, null
  br i1 %14, label %44, label %15

15:                                               ; preds = %2
  %16 = trunc i64 %13 to i8
  %17 = bitcast { %"class.blink::LayoutBox"*, i64 }* %3 to %"class.blink::NGBlockNode"*
  %18 = bitcast %"class.blink::NGMinMaxConstraintSpaceBuilder"* %5 to i8*
  %19 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 3
  %20 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1
  %21 = bitcast %"class.blink::NGBlockNode"* %20 to %"class.blink::LayoutObject"**
  %22 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 4, i32 1, i32 0
  %23 = bitcast %"class.blink::NGMinMaxConstraintSpaceBuilder"* %5 to i64*
  %24 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %5, i64 0, i32 0, i32 2
  %25 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %5, i64 0, i32 0, i32 5
  %28 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %5, i64 0, i32 0, i32 1, i32 0
  %29 = bitcast %"class.blink::NGConstraintSpace"* %6 to i8*
  %30 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %6, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %6, i64 0, i32 3, i32 0
  %32 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %6, i64 0, i32 2
  %33 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %5, i64 0, i32 0, i32 0, i32 2
  %34 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.blink::NGExclusionSpace"* %33 to i64*
  %36 = bitcast %"class.blink::NGExclusionSpace"* %32 to i64*
  %37 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %5, i64 0, i32 0, i32 0, i32 3, i32 0
  %38 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %5, i64 0, i32 0, i32 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %5, i64 0, i32 0, i32 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %6, i64 0, i32 1
  %41 = bitcast %union.anon.1634* %40 to i8*
  %42 = bitcast %"class.blink::NGMinMaxConstraintSpaceBuilder"* %5 to <2 x i64>*
  %43 = bitcast %"class.blink::NGConstraintSpace"* %6 to <2 x i64>*
  br label %53

44:                                               ; preds = %159, %2
  %45 = phi i32 [ 0, %2 ], [ %160, %159 ]
  %46 = phi i32 [ 0, %2 ], [ %161, %159 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  %47 = zext i32 %45 to i64
  %48 = shl nuw i64 %47, 32
  %49 = zext i32 %46 to i64
  %50 = or i64 %48, %49
  %51 = insertvalue { i64, i8 } undef, i64 %50, 0
  %52 = insertvalue { i64, i8 } %51, i8 0, 1
  ret { i64, i8 } %52

53:                                               ; preds = %15, %159
  %54 = phi i8 [ %16, %15 ], [ %165, %159 ]
  %55 = phi %"class.blink::LayoutBox"* [ %12, %15 ], [ %163, %159 ]
  %56 = phi i32 [ 0, %15 ], [ %160, %159 ]
  %57 = phi i32 [ 0, %15 ], [ %161, %159 ]
  %58 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %55, i64 0, i32 0, i32 0
  %59 = and i8 %54, 1
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %159

61:                                               ; preds = %53
  %62 = and i8 %54, 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %87

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %55, i64 0, i32 0, i32 0, i32 5, i32 0
  %66 = bitcast %"class.blink::ComputedStyle"** %65 to %"class.blink::ComputedStyleBase"**
  %67 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %67, i64 0, i32 3, i32 0, i32 0
  %69 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %69, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %71, i64 0, i32 2, i32 0, i32 0
  %73 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %73, i64 0, i32 45
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, 536870912
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %87, label %78

78:                                               ; preds = %64
  %79 = bitcast %"class.blink::LayoutBox"* %55 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %80 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %79, align 8
  %81 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %80, i64 44
  %82 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %81, align 8
  %83 = call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %82(%"class.blink::LayoutObject"* %58) #10
  %84 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %83, null
  br i1 %84, label %85, label %101

85:                                               ; preds = %78
  %86 = load i8, i8* %10, align 8
  br label %87

87:                                               ; preds = %85, %64, %61
  %88 = phi i8 [ %86, %85 ], [ %54, %64 ], [ %54, %61 ]
  %89 = and i8 %88, 1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %87
  %92 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %8, align 8
  %93 = bitcast %"class.blink::LayoutBox"* %92 to i1 (%"class.blink::LayoutBox"*)***
  %94 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %93, align 8
  %95 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %94, i64 182
  %96 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %95, align 8
  %97 = call zeroext i1 %96(%"class.blink::LayoutBox"* %92) #10
  br i1 %97, label %159, label %98

98:                                               ; preds = %87, %91
  %99 = call { i64, i8 } @_ZNK5blink23NGColumnLayoutAlgorithm26ComputeSpannersMinMaxSizesERKNS_11NGBlockNodeE(%"class.blink::NGColumnLayoutAlgorithm"* %0, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %17)
  %100 = extractvalue { i64, i8 } %99, 0
  br label %150

101:                                              ; preds = %78
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 40, i1 false)
  %102 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %19, align 8
  %103 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %104 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %103, i64 0, i32 5, i32 0
  %105 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %104, align 8
  call void @_ZN5blink30NGMinMaxConstraintSpaceBuilderC2ERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_17NGLayoutInputNodeEb(%"class.blink::NGMinMaxConstraintSpaceBuilder"* nonnull %5, %"class.blink::NGConstraintSpace"* dereferenceable(32) %102, %"class.blink::ComputedStyle"* dereferenceable(104) %105, %"class.blink::NGLayoutInputNode"* nonnull dereferenceable(16) %4, i1 zeroext true)
  %106 = load i32, i32* %22, align 4
  %107 = zext i32 %106 to i64
  %108 = shl nuw i64 %107, 32
  %109 = or i64 %108, 4294967232
  store i64 %109, i64* %23, align 16
  %110 = load i8, i8* %24, align 4, !range !5
  %111 = icmp eq i8 %110, 1
  br i1 %111, label %119, label %112, !prof !2

112:                                              ; preds = %101
  store i32 %106, i32* %25, align 16
  store i32 -64, i32* %26, align 4
  %113 = load i8, i8* %27, align 1, !range !5
  %114 = icmp ne i8 %113, 0
  %115 = icmp eq i32 %106, -64
  %116 = and i1 %115, %114
  br i1 %116, label %117, label %119

117:                                              ; preds = %112
  %118 = load i32, i32* %28, align 16
  store i32 %118, i32* %25, align 16
  br label %119

119:                                              ; preds = %101, %112, %117
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false)
  %120 = load i64, i64* %35, align 16, !noalias !9
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %34, align 16, !noalias !9
  store i64 %120, i64* %36, align 16, !alias.scope !9
  %121 = load i32, i32* %37, align 8, !noalias !9
  store i32 %121, i32* %31, align 8, !alias.scope !9
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  %124 = load <2 x i64>, <2 x i64>* %42, align 16
  store <2 x i64> %124, <2 x i64>* %43, align 16
  br i1 %123, label %126, label %125

125:                                              ; preds = %119
  store %"struct.blink::NGConstraintSpace::RareData"* null, %"struct.blink::NGConstraintSpace::RareData"** %38, align 8, !noalias !9
  br label %126

126:                                              ; preds = %119, %125
  %127 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %128 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %127, i64 0, i32 5, i32 0
  %129 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %128, align 8
  %130 = call { i64, i8 } @_ZN5blink35ComputeMinAndMaxContentContributionERKNS_13ComputedStyleERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::ComputedStyle"* dereferenceable(104) %129, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %17, %"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %6, i64 0) #10
  %131 = extractvalue { i64, i8 } %130, 0
  %132 = load i32, i32* %31, align 8
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %140, label %135

135:                                              ; preds = %126
  %136 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %30, align 8
  %137 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %135
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %136) #10
  %139 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %136 to i8*
  call void @free(i8* %139) #10
  br label %140

140:                                              ; preds = %126, %135, %138
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %32) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #10
  %141 = load i32, i32* %37, align 8
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %149, label %144

144:                                              ; preds = %140
  %145 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %39, align 8
  %146 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %144
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %145) #10
  %148 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %145 to i8*
  call void @free(i8* %148) #10
  br label %149

149:                                              ; preds = %140, %144, %147
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %33) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #10
  br label %150

150:                                              ; preds = %149, %98
  %151 = phi i64 [ %131, %149 ], [ %100, %98 ]
  %152 = lshr i64 %151, 32
  %153 = trunc i64 %151 to i32
  %154 = trunc i64 %152 to i32
  %155 = icmp slt i32 %57, %153
  %156 = select i1 %155, i32 %153, i32 %57
  %157 = icmp slt i32 %56, %154
  %158 = select i1 %157, i32 %154, i32 %56
  br label %159

159:                                              ; preds = %150, %91, %53
  %160 = phi i32 [ %56, %53 ], [ %56, %91 ], [ %158, %150 ]
  %161 = phi i32 [ %57, %53 ], [ %57, %91 ], [ %156, %150 ]
  %162 = call { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink17NGLayoutInputNode11NextSiblingEv(%"class.blink::NGLayoutInputNode"* nonnull %4) #10
  %163 = extractvalue { %"class.blink::LayoutBox"*, i64 } %162, 0
  %164 = extractvalue { %"class.blink::LayoutBox"*, i64 } %162, 1
  store %"class.blink::LayoutBox"* %163, %"class.blink::LayoutBox"** %8, align 8
  %165 = trunc i64 %164 to i8
  store i8 %165, i8* %10, align 8
  %166 = icmp eq %"class.blink::LayoutBox"* %163, null
  br i1 %166, label %44, label %53
}

; Function Attrs: nounwind
declare void @_ZN5blink22NGBlockLayoutAlgorithmD1Ev(%"class.blink::NGBlockLayoutAlgorithm"*) unnamed_addr #3

declare { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode10FirstChildEv(%"class.blink::NGBlockNode"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30NGMinMaxConstraintSpaceBuilderC2ERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_17NGLayoutInputNodeEb(%"class.blink::NGMinMaxConstraintSpaceBuilder"*, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::NGLayoutInputNode"* dereferenceable(16), i1 zeroext) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0
  %7 = bitcast %"class.blink::NGLayoutInputNode"* %3 to %"class.blink::LayoutObject"**
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = lshr i160 %13, 102
  %15 = trunc i160 %14 to i16
  %16 = and i16 %15, 3
  %17 = lshr i160 %13, 108
  %18 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = zext i1 %4 to i8
  %21 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 -64, i32* %21, align 4
  %22 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 -64, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  %25 = shl nuw nsw i16 %16, 4
  %26 = trunc i160 %17 to i16
  %27 = and i16 %26, 128
  %28 = bitcast %union.anon.1634* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #10
  %29 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 -64, i32* %29, align 4
  %30 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 2
  %31 = and i32 %19, 112
  %32 = icmp ne i32 %31, 0
  %33 = icmp eq i16 %16, 0
  %34 = xor i1 %32, %33
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %30, align 4
  %36 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 3
  store i8 %20, i8* %36, align 1
  %37 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %37, align 2
  %38 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 5
  store i8 1, i8* %38, align 1
  %39 = zext i1 %4 to i32
  %40 = shl nuw nsw i32 %39, 10
  %41 = select i1 %34, i32 0, i32 2048
  %42 = or i16 %25, %27
  %43 = zext i16 %42 to i32
  %44 = or i32 %40, %43
  %45 = or i32 %44, %41
  store i32 %45, i32* %24, align 8
  %46 = load i32, i32* %18, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %67, label %49

49:                                               ; preds = %5
  %50 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %51 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %50, align 8
  %52 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %51, i64 0, i32 6
  %53 = load i16, i16* %52, align 8
  %54 = and i16 %53, 512
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %67, label %56

56:                                               ; preds = %49
  %57 = tail call noalias i8* @malloc(i64 88) #10
  %58 = getelementptr inbounds i8, i8* %57, i64 24
  %59 = bitcast i8* %58 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 0, i64 24, i1 false) #10
  store i32 -64, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %57, i64 28
  %61 = bitcast i8* %60 to i32*
  store i32 0, i32* %61, align 4
  %62 = getelementptr inbounds i8, i8* %57, i64 32
  %63 = bitcast i8* %62 to i16*
  %64 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %65 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %64 to i8**
  store i8* %57, i8** %65, align 8
  %66 = or i32 %45, 1
  store i32 %66, i32* %24, align 8
  store i16 512, i16* %63, align 8
  br label %67

67:                                               ; preds = %5, %49, %56
  %68 = getelementptr inbounds %"class.blink::NGLayoutInputNode", %"class.blink::NGLayoutInputNode"* %3, i64 0, i32 0
  %69 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::NGLayoutInputNode", %"class.blink::NGLayoutInputNode"* %3, i64 0, i32 1
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 8
  tail call void @_ZN5blink39SetOrthogonalFallbackInlineSizeIfNeededERKNS_13ComputedStyleENS_17NGLayoutInputNodeEPNS_24NGConstraintSpaceBuilderE(%"class.blink::ComputedStyle"* dereferenceable(104) %2, %"class.blink::LayoutBox"* %69, i64 %72, %"class.blink::NGConstraintSpaceBuilder"* %6) #10
  %73 = load i32, i32* %24, align 8
  %74 = or i32 %73, 65536
  store i32 %74, i32* %24, align 8
  %75 = load i32, i32* %18, align 8
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %126, label %78

78:                                               ; preds = %67
  %79 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %80 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %79, align 8
  %81 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %80, i64 0, i32 6
  %82 = load i16, i16* %81, align 8
  %83 = and i16 %82, 1024
  %84 = icmp eq i16 %83, 0
  br i1 %84, label %126, label %85

85:                                               ; preds = %78
  %86 = load i8, i8* %70, align 8
  %87 = and i8 %86, 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %98

89:                                               ; preds = %85
  %90 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %68, align 8
  %91 = bitcast %"class.blink::LayoutBox"* %90 to i1 (%"class.blink::LayoutBox"*)***
  %92 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %91, align 8
  %93 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %92, i64 182
  %94 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %93, align 8
  %95 = tail call zeroext i1 %94(%"class.blink::LayoutBox"* %90) #10
  br i1 %95, label %126, label %96

96:                                               ; preds = %89
  %97 = load i32, i32* %24, align 8
  br label %98

98:                                               ; preds = %96, %85
  %99 = phi i32 [ %97, %96 ], [ %74, %85 ]
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %104 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %103, align 8
  br label %121

105:                                              ; preds = %98
  %106 = tail call noalias i8* @malloc(i64 88) #10
  %107 = bitcast %union.anon.1634* %23 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds i8, i8* %106, i64 16
  %110 = bitcast i8* %109 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %106, i8 0, i64 16, i1 false) #10
  store i64 %108, i64* %110, align 8
  %111 = getelementptr inbounds i8, i8* %106, i64 24
  %112 = bitcast i8* %111 to i32*
  store i32 -64, i32* %112, align 4
  %113 = getelementptr inbounds i8, i8* %106, i64 28
  %114 = bitcast i8* %113 to i32*
  store i32 0, i32* %114, align 4
  %115 = getelementptr inbounds i8, i8* %106, i64 32
  %116 = bitcast i8* %115 to i16*
  store i16 0, i16* %116, align 8
  %117 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %118 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %117 to i8**
  store i8* %106, i8** %118, align 8
  %119 = or i32 %99, 1
  store i32 %119, i32* %24, align 8
  %120 = bitcast i8* %106 to %"struct.blink::NGConstraintSpace::RareData"*
  br label %121

121:                                              ; preds = %102, %105
  %122 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %104, %102 ], [ %120, %105 ]
  %123 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %122, i64 0, i32 6
  %124 = load i16, i16* %123, align 8
  %125 = or i16 %124, 1024
  store i16 %125, i16* %123, align 8
  br label %126

126:                                              ; preds = %78, %67, %121, %89
  ret void
}

declare { i64, i8 } @_ZN5blink35ComputeMinAndMaxContentContributionERKNS_13ComputedStyleERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGConstraintSpace"* dereferenceable(32), i64) local_unnamed_addr #2

declare { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink17NGLayoutInputNode11NextSiblingEv(%"class.blink::NGLayoutInputNode"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGLayoutResult"* @_ZN5blink23NGColumnLayoutAlgorithm9LayoutRowEPKNS_17NGBlockBreakTokenEPNS_13NGMarginStrutE(%"class.blink::NGColumnLayoutAlgorithm"*, %"class.blink::NGBlockBreakToken"*, %"struct.blink::NGMarginStrut"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.WTF::VectorBufferBase.2131", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"struct.blink::LogicalSize"*
  %10 = alloca %"class.WTF::Vector.2129", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.blink::NGConstraintSpace", align 8
  %13 = alloca %"struct.blink::NGFragmentGeometry", align 4
  %14 = alloca <2 x i64>, align 16
  %15 = bitcast <2 x i64>* %14 to %"class.blink::NGBlockNode"*
  %16 = alloca %"class.blink::NGBlockLayoutAlgorithm", align 8
  %17 = alloca %"struct.blink::NGLayoutAlgorithmParams", align 16
  %18 = alloca %struct.ResultWithOffset, align 8
  %19 = alloca %"class.absl::optional.2134", align 8
  %20 = alloca <2 x i64>, align 16
  %21 = bitcast <2 x i64>* %20 to %"class.blink::NGBlockNode"*
  %22 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %23 = bitcast i64* %8 to i32*
  %24 = getelementptr inbounds %"struct.blink::LogicalSize", %"struct.blink::LogicalSize"* %9, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 2, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 4, i32 0
  %28 = load i32, i32* %27, align 4
  store i32 %26, i32* %23, align 8
  store i32 %28, i32* %24, align 4
  %29 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %2, i64 0, i32 4
  %30 = load i8, i8* %29, align 1, !range !5
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %53

32:                                               ; preds = %3
  %33 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %2, i64 0, i32 2
  %34 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %2, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %33, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %2, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %36, %38
  %40 = select i1 %39, %"class.blink::LayoutUnit"* %34, %"class.blink::LayoutUnit"* %33
  %41 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %2, i64 0, i32 1, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %44, 0
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %42, i32 %44) #10
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !4
  %51 = icmp slt i32 %50, 0
  %52 = select i1 %51, i32 -2147483648, i32 2147483647
  br label %53

53:                                               ; preds = %3, %32
  %54 = phi i32 [ %50, %32 ], [ 0, %3 ]
  %55 = phi i32 [ %52, %32 ], [ 2147483647, %3 ]
  %56 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 5, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %54) #10
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %55, i32 %60, !prof !4
  store i32 %61, i32* %56, align 4
  %62 = bitcast %"struct.blink::NGMarginStrut"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 14, i1 false)
  %63 = icmp eq i32 %28, -64
  br i1 %63, label %100, label %64

64:                                               ; preds = %53
  %65 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 3, i32 0
  %66 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %65, align 8
  %67 = icmp eq %"class.blink::NGBlockBreakToken"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 7
  %70 = load i8, i8* %69, align 8, !range !5
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %81, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %66, i64 0, i32 1, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp sgt i32 %74, -1
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %28, i32 %74) #10
  %78 = extractvalue { i32, i1 } %77, 1
  %79 = extractvalue { i32, i1 } %77, 0
  %80 = select i1 %78, i32 %76, i32 %79, !prof !4
  store i32 %80, i32* %24, align 4
  br label %81

81:                                               ; preds = %68, %64, %72
  %82 = phi i32 [ %28, %68 ], [ %28, %64 ], [ %80, %72 ]
  %83 = load i32, i32* %56, align 4
  %84 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 3, i32 2, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp sgt i32 %85, -1
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %83, i32 %85) #10
  %89 = extractvalue { i32, i1 } %88, 1
  %90 = extractvalue { i32, i1 } %88, 0
  %91 = select i1 %89, i32 %87, i32 %90, !prof !4
  %92 = icmp sgt i32 %91, -1
  %93 = select i1 %92, i32 -2147483648, i32 2147483647
  %94 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %82, i32 %91) #10
  %95 = extractvalue { i32, i1 } %94, 1
  %96 = extractvalue { i32, i1 } %94, 0
  %97 = select i1 %95, i32 %93, i32 %96, !prof !4
  %98 = icmp sgt i32 %97, 0
  %99 = select i1 %98, i32 %97, i32 0
  store i32 %99, i32* %24, align 4
  br label %100

100:                                              ; preds = %53, %81
  %101 = phi i32 [ -64, %53 ], [ %99, %81 ]
  %102 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 7
  %103 = load i8, i8* %102, align 8, !range !5
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %154, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 3
  %107 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %107, i64 0, i32 3, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %137, label %112

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %107, i64 0, i32 1, i32 0
  %114 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %113, align 8
  %115 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %114, i64 0, i32 6
  %116 = load i16, i16* %115, align 8
  %117 = and i16 %116, 384
  switch i16 %117, label %122 [
    i16 0, label %137
    i16 256, label %118
  ]

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %114, i64 0, i32 4, i32 0
  %120 = load i32, i32* %119, align 8
  %121 = icmp eq i32 %120, -64
  br i1 %121, label %137, label %125

122:                                              ; preds = %112
  %123 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %114, i64 0, i32 4, i32 0
  %124 = load i32, i32* %123, align 8
  br label %125

125:                                              ; preds = %122, %118
  %126 = phi i32 [ %124, %122 ], [ %120, %118 ]
  %127 = icmp sgt i32 %126, 64
  %128 = select i1 %127, i32 %126, i32 64
  %129 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %114, i64 0, i32 5, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp sgt i32 %130, -1
  %132 = select i1 %131, i32 -2147483648, i32 2147483647
  %133 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %128, i32 %130) #10
  %134 = extractvalue { i32, i1 } %133, 1
  %135 = extractvalue { i32, i1 } %133, 0
  %136 = select i1 %134, i32 %132, i32 %135, !prof !4
  br label %137

137:                                              ; preds = %105, %112, %118, %125
  %138 = phi i32 [ %136, %125 ], [ -64, %118 ], [ -64, %105 ], [ -64, %112 ]
  %139 = load i32, i32* %56, align 4
  %140 = icmp sgt i32 %139, -1
  %141 = select i1 %140, i32 -2147483648, i32 2147483647
  %142 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %138, i32 %139) #10
  %143 = extractvalue { i32, i1 } %142, 1
  %144 = extractvalue { i32, i1 } %142, 0
  %145 = select i1 %143, i32 %141, i32 %144, !prof !4
  %146 = icmp slt i32 %145, 1
  br i1 %146, label %147, label %149

147:                                              ; preds = %137
  %148 = icmp slt i32 %145, 0
  br i1 %148, label %889, label %149

149:                                              ; preds = %147, %137
  %150 = phi i8 [ 0, %137 ], [ 1, %147 ]
  %151 = icmp ne i32 %101, -64
  %152 = icmp sle i32 %101, %145
  %153 = and i1 %152, %151
  br label %154

154:                                              ; preds = %149, %100
  %155 = phi i32 [ -64, %100 ], [ %145, %149 ]
  %156 = phi i8 [ 0, %100 ], [ %150, %149 ]
  %157 = phi i1 [ true, %100 ], [ %153, %149 ]
  %158 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1
  %159 = bitcast %"class.blink::NGBlockNode"* %158 to %"class.blink::LayoutObject"**
  %160 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %160, i64 0, i32 5, i32 0
  %162 = bitcast %"class.blink::ComputedStyle"** %161 to %"class.blink::ComputedStyleBase"**
  %163 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %162, align 8
  %164 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %163, i64 0, i32 3, i32 0, i32 0
  %165 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %165, i64 0, i32 2, i32 0, i32 0
  %167 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %166, align 8
  %168 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %167, i64 0, i32 2, i32 0, i32 0
  %169 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %168, align 8
  %170 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %169, i64 0, i32 45
  %171 = load i32, i32* %170, align 4
  %172 = and i32 %171, 268435456
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %178

174:                                              ; preds = %154
  %175 = icmp ne i32 %101, -64
  %176 = xor i1 %104, true
  %177 = or i1 %175, %176
  br i1 %177, label %180, label %178

178:                                              ; preds = %174, %154
  %179 = call i32 @_ZN5blink23NGColumnLayoutAlgorithm32CalculateBalancedColumnBlockSizeERKNS_11LogicalSizeEPKNS_17NGBlockBreakTokenE(%"class.blink::NGColumnLayoutAlgorithm"* %0, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %9, %"class.blink::NGBlockBreakToken"* %1)
  store i32 %179, i32* %24, align 4
  br label %187

180:                                              ; preds = %174
  %181 = icmp eq i32 %155, -64
  br i1 %181, label %187, label %182

182:                                              ; preds = %180
  %183 = icmp sgt i32 %101, %155
  %184 = icmp eq i32 %101, -64
  %185 = or i1 %183, %184
  br i1 %185, label %186, label %187

186:                                              ; preds = %182
  store i32 %155, i32* %24, align 4
  br label %187

187:                                              ; preds = %180, %182, %186, %178
  %188 = phi i8 [ 0, %180 ], [ 0, %186 ], [ 1, %178 ], [ 0, %182 ]
  %189 = bitcast %"class.WTF::Vector.2129"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %189) #10
  %190 = getelementptr inbounds %"class.WTF::Vector.2129", %"class.WTF::Vector.2129"* %10, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %190, i8 -86, i64 256, i1 false)
  %191 = getelementptr inbounds %"class.WTF::Vector.2129", %"class.WTF::Vector.2129"* %10, i64 0, i32 0, i32 1, i64 0
  %192 = bitcast %"class.WTF::Vector.2129"* %10 to i8**
  store i8* %191, i8** %192, align 8
  %193 = getelementptr inbounds %"class.WTF::Vector.2129", %"class.WTF::Vector.2129"* %10, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %193, align 8
  %194 = getelementptr inbounds %"class.WTF::Vector.2129", %"class.WTF::Vector.2129"* %10, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %194, align 4
  %195 = ptrtoint %"class.blink::NGBlockBreakToken"* %1 to i64
  %196 = icmp eq %"class.blink::NGBlockBreakToken"* %1, null
  %197 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %198 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %1, i64 0, i32 0, i32 4
  %199 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 3, i32 0, i32 0
  %200 = bitcast i32* %11 to i8*
  %201 = bitcast %"class.blink::NGConstraintSpace"* %12 to i8*
  %202 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %12, i64 0, i32 1, i32 0
  %203 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %12, i64 0, i32 3, i32 0
  %204 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 3
  %205 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 4, i32 1, i32 0
  %206 = bitcast %"struct.blink::NGFragmentGeometry"* %13 to i8*
  %207 = bitcast <2 x i64>* %14 to i8*
  %208 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %209 = bitcast %"class.blink::NGBlockLayoutAlgorithm"* %16 to i8*
  %210 = bitcast %"struct.blink::NGLayoutAlgorithmParams"* %17 to i8*
  %211 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %17, i64 0, i32 1
  %212 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %17, i64 0, i32 2
  %213 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %17, i64 0, i32 3
  %214 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %17, i64 0, i32 4
  %215 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  %216 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %217 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  %218 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %219 = bitcast %"class.logging::CheckError"* %7 to i8*
  %220 = getelementptr inbounds %"class.WTF::Vector.2129", %"class.WTF::Vector.2129"* %10, i64 0, i32 0, i32 0, i32 0
  %221 = bitcast %"class.WTF::VectorBufferBase.2131"* %5 to i8*
  %222 = getelementptr inbounds %"class.WTF::VectorBufferBase.2131", %"class.WTF::VectorBufferBase.2131"* %5, i64 0, i32 0
  %223 = getelementptr inbounds %"class.WTF::VectorBufferBase.2131", %"class.WTF::VectorBufferBase.2131"* %5, i64 0, i32 1
  %224 = bitcast i32* %223 to i64*
  %225 = bitcast i8* %191 to %struct.ResultWithOffset*
  %226 = bitcast %"class.WTF::Vector.2129"* %10 to i64*
  %227 = ptrtoint i8* %191 to i64
  %228 = getelementptr inbounds %"class.WTF::Vector.2129", %"class.WTF::Vector.2129"* %10, i64 0, i32 0, i32 0
  %229 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 3, i32 0
  %230 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 1
  %231 = and i8 %156, 1
  %232 = icmp ne i8 %231, 0
  %233 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 18
  %234 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %12, i64 0, i32 2
  %235 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 32, i32 0
  %236 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 31, i32 0
  %237 = bitcast %"class.blink::NGConstraintSpace"* %12 to i8*
  %238 = bitcast %"class.blink::NGEarlyBreak"** %214 to i8*
  %239 = bitcast %"class.blink::LayoutBox"** %208 to <2 x i64>*
  %240 = bitcast %"class.blink::LayoutBox"** %208 to <2 x i64>*
  %241 = bitcast %"struct.blink::NGLayoutAlgorithmParams"* %17 to <2 x i64>*
  br label %242

242:                                              ; preds = %702, %187
  %243 = phi i64 [ 0, %187 ], [ %701, %702 ]
  %244 = phi i8 [ %188, %187 ], [ %700, %702 ]
  %245 = inttoptr i64 %243 to %"class.blink::NGLayoutResult"*
  br i1 %196, label %250, label %246

246:                                              ; preds = %242
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %197) #10
  %247 = load i16, i16* %198, align 8
  %248 = trunc i16 %247 to i8
  %249 = icmp sgt i8 %248, -1
  br label %250

250:                                              ; preds = %242, %246
  %251 = phi i1 [ %249, %246 ], [ false, %242 ]
  %252 = zext i1 %251 to i8
  %253 = load i32, i32* %199, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %200)
  store i32 2147483647, i32* %11, align 4
  %254 = and i8 %244, 1
  %255 = icmp ne i8 %254, 0
  br label %256

256:                                              ; preds = %542, %250
  %257 = phi i32 [ %253, %250 ], [ %475, %542 ]
  %258 = phi i64 [ %195, %250 ], [ %530, %542 ]
  %259 = phi %"class.blink::NGLayoutResult"* [ %245, %250 ], [ %277, %542 ]
  %260 = phi i32 [ 0, %250 ], [ %465, %542 ]
  %261 = phi i32 [ 0, %250 ], [ %466, %542 ]
  %262 = phi i1 [ false, %250 ], [ %468, %542 ]
  %263 = phi i8 [ %252, %250 ], [ %531, %542 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %201) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %237, i8 -86, i64 32, i1 false)
  %264 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %204, align 8
  %265 = load i64, i64* %8, align 8
  %266 = load i32, i32* %25, align 4
  %267 = load i32, i32* %205, align 4
  %268 = zext i32 %267 to i64
  %269 = shl nuw i64 %268, 32
  %270 = zext i32 %266 to i64
  %271 = or i64 %269, %270
  %272 = and i8 %263, 1
  %273 = icmp ne i8 %272, 0
  call void @_ZN5blink31CreateConstraintSpaceForColumnsERKNS_17NGConstraintSpaceENS_11LogicalSizeES3_bb(%"class.blink::NGConstraintSpace"* nonnull sret %12, %"class.blink::NGConstraintSpace"* dereferenceable(32) %264, i64 %265, i64 %271, i1 zeroext %273, i1 zeroext %255) #10
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %206) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %206, i8 -86, i64 56, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %207) #10
  %274 = load <2 x i64>, <2 x i64>* %239, align 8
  store <2 x i64> %274, <2 x i64>* %14, align 16
  call void @_ZN5blink32CalculateInitialFragmentGeometryERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeEb(%"struct.blink::NGFragmentGeometry"* nonnull sret %13, %"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %12, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %15, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %207) #10
  call void @llvm.lifetime.start.p0i8(i64 744, i8* nonnull %209) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %209, i8 -86, i64 744, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %210) #10
  %275 = load <2 x i64>, <2 x i64>* %240, align 8
  %276 = inttoptr i64 %258 to %"class.blink::NGBlockBreakToken"*
  store <2 x i64> %275, <2 x i64>* %241, align 16
  store %"struct.blink::NGFragmentGeometry"* %13, %"struct.blink::NGFragmentGeometry"** %211, align 16
  store %"class.blink::NGConstraintSpace"* %12, %"class.blink::NGConstraintSpace"** %212, align 8
  store %"class.blink::NGBlockBreakToken"* %276, %"class.blink::NGBlockBreakToken"** %213, align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %238, i8 0, i64 16, i1 false)
  call void @_ZN5blink22NGBlockLayoutAlgorithmC1ERKNS_23NGLayoutAlgorithmParamsE(%"class.blink::NGBlockLayoutAlgorithm"* nonnull %16, %"struct.blink::NGLayoutAlgorithmParams"* nonnull dereferenceable(56) %17) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %210) #10
  call void @_ZN5blink22NGBlockLayoutAlgorithm10SetBoxTypeENS_18NGPhysicalFragment9NGBoxTypeE(%"class.blink::NGBlockLayoutAlgorithm"* nonnull %16, i32 2) #10
  %277 = call %"class.blink::NGLayoutResult"* @_ZN5blink22NGBlockLayoutAlgorithm6LayoutEv(%"class.blink::NGBlockLayoutAlgorithm"* nonnull %16) #10
  %278 = icmp eq %"class.blink::NGLayoutResult"* %259, null
  br i1 %278, label %286, label %279

279:                                              ; preds = %256
  %280 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %259, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %280) #10
  %281 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %259, i64 0, i32 0, i32 0, i32 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %286

284:                                              ; preds = %279
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %259) #10
  %285 = bitcast %"class.blink::NGLayoutResult"* %259 to i8*
  call void @free(i8* %285) #10
  br label %286

286:                                              ; preds = %256, %279, %284
  %287 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %277, i64 0, i32 3, i32 0
  %288 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %287, align 8
  %289 = load i32, i32* %56, align 8
  %290 = load i32, i32* %194, align 4
  %291 = load i32, i32* %193, align 8
  %292 = icmp eq i32 %290, %291
  br i1 %292, label %293, label %397, !prof !4

293:                                              ; preds = %286
  %294 = add i32 %290, 1
  %295 = shl i32 %290, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %216, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217) #10
  %296 = icmp ugt i32 %295, %290
  br i1 %296, label %297, label %298

297:                                              ; preds = %293
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #10
  store i8* null, i8** %216, align 8
  br label %305

298:                                              ; preds = %293
  %299 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %295) #10
  %300 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %290) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0), i8* %299, i8* %300) #10
  %301 = load i8*, i8** %218, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #10
  store i8* %301, i8** %216, align 8
  %302 = icmp eq i8* %301, null
  br i1 %302, label %305, label %303

303:                                              ; preds = %298
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %219) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %6) #10
  %304 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %219) #10
  br label %305

305:                                              ; preds = %303, %298, %297
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #10
  %306 = icmp ugt i32 %295, 4
  %307 = select i1 %306, i32 %295, i32 4
  %308 = icmp ugt i32 %307, %294
  %309 = select i1 %308, i32 %307, i32 %294
  %310 = load i32, i32* %193, align 8
  %311 = icmp ult i32 %310, %309
  br i1 %311, label %312, label %397, !prof !2

312:                                              ; preds = %305
  %313 = load %struct.ResultWithOffset*, %struct.ResultWithOffset** %220, align 8
  %314 = icmp eq %struct.ResultWithOffset* %313, null
  br i1 %314, label %315, label %319

315:                                              ; preds = %312
  %316 = icmp ugt i32 %309, 16
  br i1 %316, label %317, label %318

317:                                              ; preds = %315
  call fastcc void @_ZN3WTF16VectorBufferBaseIZN5blink23NGColumnLayoutAlgorithm9LayoutRowEPKNS1_17NGBlockBreakTokenEPNS1_13NGMarginStrutEE16ResultWithOffsetNS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.2131"* nonnull %228, i32 %309) #10
  br label %397

318:                                              ; preds = %315
  store atomic i64 %227, i64* %226 monotonic, align 8
  store i32 16, i32* %193, align 8
  br label %397

319:                                              ; preds = %312
  %320 = icmp ult i32 %309, 17
  br i1 %320, label %321, label %355

321:                                              ; preds = %319
  %322 = icmp eq %struct.ResultWithOffset* %313, %225
  br i1 %322, label %323, label %324

323:                                              ; preds = %321
  store atomic i64 %227, i64* %226 monotonic, align 8
  store i32 16, i32* %193, align 8
  br label %397

324:                                              ; preds = %321
  %325 = load i32, i32* %194, align 4
  %326 = zext i32 %325 to i64
  %327 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %313, i64 %326
  store atomic i64 %227, i64* %226 monotonic, align 8
  store i32 16, i32* %193, align 8
  %328 = icmp eq i32 %325, 0
  br i1 %328, label %354, label %329

329:                                              ; preds = %324, %350
  %330 = phi %struct.ResultWithOffset* [ %352, %350 ], [ %313, %324 ]
  %331 = phi %struct.ResultWithOffset* [ %351, %350 ], [ %225, %324 ]
  %332 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %330, i64 0, i32 0, i32 0
  %333 = bitcast %struct.ResultWithOffset* %330 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = bitcast %struct.ResultWithOffset* %331 to i64*
  store i64 %334, i64* %335, align 8
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %332, align 8
  %336 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %331, i64 0, i32 1
  %337 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %330, i64 0, i32 1
  %338 = bitcast %"struct.blink::LogicalOffset"* %337 to i64*
  %339 = bitcast %"struct.blink::LogicalOffset"* %336 to i64*
  %340 = load i64, i64* %338, align 8
  store i64 %340, i64* %339, align 8
  %341 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %332, align 8
  %342 = icmp eq %"class.blink::NGLayoutResult"* %341, null
  br i1 %342, label %350, label %343

343:                                              ; preds = %329
  %344 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %341, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %344) #10
  %345 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %341, i64 0, i32 0, i32 0, i32 0, i32 0
  %346 = load i32, i32* %345, align 4
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %350

348:                                              ; preds = %343
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %341) #10
  %349 = bitcast %"class.blink::NGLayoutResult"* %341 to i8*
  call void @free(i8* %349) #10
  br label %350

350:                                              ; preds = %348, %343, %329
  %351 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %331, i64 1
  %352 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %330, i64 1
  %353 = icmp eq %struct.ResultWithOffset* %352, %327
  br i1 %353, label %354, label %329

354:                                              ; preds = %350, %324
  call fastcc void @_ZN3WTF12VectorBufferIZN5blink23NGColumnLayoutAlgorithm9LayoutRowEPKNS1_17NGBlockBreakTokenEPNS1_13NGMarginStrutEE16ResultWithOffsetLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS8_(%struct.ResultWithOffset* nonnull %313) #10
  br label %397

355:                                              ; preds = %319
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %221) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %221, i8 -86, i64 16, i1 false) #10
  store %struct.ResultWithOffset* null, %struct.ResultWithOffset** %222, align 8
  store i32 0, i32* %223, align 8
  call fastcc void @_ZN3WTF16VectorBufferBaseIZN5blink23NGColumnLayoutAlgorithm9LayoutRowEPKNS1_17NGBlockBreakTokenEPNS1_13NGMarginStrutEE16ResultWithOffsetNS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.2131"* nonnull %5, i32 %309) #10
  %356 = load %struct.ResultWithOffset*, %struct.ResultWithOffset** %222, align 8
  %357 = load i64, i64* %224, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %221) #10
  %358 = ptrtoint %struct.ResultWithOffset* %356 to i64
  %359 = load %struct.ResultWithOffset*, %struct.ResultWithOffset** %220, align 8
  %360 = load i32, i32* %194, align 4
  %361 = zext i32 %360 to i64
  %362 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %359, i64 %361
  %363 = icmp eq i32 %360, 0
  br i1 %363, label %391, label %364

364:                                              ; preds = %355, %385
  %365 = phi %struct.ResultWithOffset* [ %387, %385 ], [ %359, %355 ]
  %366 = phi %struct.ResultWithOffset* [ %386, %385 ], [ %356, %355 ]
  %367 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %365, i64 0, i32 0, i32 0
  %368 = bitcast %struct.ResultWithOffset* %365 to i64*
  %369 = load i64, i64* %368, align 8
  %370 = bitcast %struct.ResultWithOffset* %366 to i64*
  store i64 %369, i64* %370, align 8
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %367, align 8
  %371 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %366, i64 0, i32 1
  %372 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %365, i64 0, i32 1
  %373 = bitcast %"struct.blink::LogicalOffset"* %372 to i64*
  %374 = bitcast %"struct.blink::LogicalOffset"* %371 to i64*
  %375 = load i64, i64* %373, align 8
  store i64 %375, i64* %374, align 8
  %376 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %367, align 8
  %377 = icmp eq %"class.blink::NGLayoutResult"* %376, null
  br i1 %377, label %385, label %378

378:                                              ; preds = %364
  %379 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %376, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %379) #10
  %380 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %376, i64 0, i32 0, i32 0, i32 0, i32 0
  %381 = load i32, i32* %380, align 4
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %385

383:                                              ; preds = %378
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %376) #10
  %384 = bitcast %"class.blink::NGLayoutResult"* %376 to i8*
  call void @free(i8* %384) #10
  br label %385

385:                                              ; preds = %383, %378, %364
  %386 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %366, i64 1
  %387 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %365, i64 1
  %388 = icmp eq %struct.ResultWithOffset* %387, %362
  br i1 %388, label %389, label %364

389:                                              ; preds = %385
  %390 = load %struct.ResultWithOffset*, %struct.ResultWithOffset** %220, align 8
  br label %391

391:                                              ; preds = %389, %355
  %392 = phi %struct.ResultWithOffset* [ %390, %389 ], [ %359, %355 ]
  %393 = icmp eq %struct.ResultWithOffset* %392, %225
  br i1 %393, label %395, label %394, !prof !2

394:                                              ; preds = %391
  call fastcc void @_ZN3WTF12VectorBufferIZN5blink23NGColumnLayoutAlgorithm9LayoutRowEPKNS1_17NGBlockBreakTokenEPNS1_13NGMarginStrutEE16ResultWithOffsetLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS8_(%struct.ResultWithOffset* %392) #10
  br label %395

395:                                              ; preds = %394, %391
  store atomic i64 %358, i64* %226 monotonic, align 8
  %396 = trunc i64 %357 to i32
  store i32 %396, i32* %193, align 8
  br label %397

397:                                              ; preds = %395, %354, %323, %318, %317, %305, %286
  %398 = load %struct.ResultWithOffset*, %struct.ResultWithOffset** %220, align 8
  %399 = load i32, i32* %194, align 4
  %400 = zext i32 %399 to i64
  %401 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %398, i64 %400
  %402 = icmp eq %"class.blink::NGLayoutResult"* %277, null
  br i1 %402, label %403, label %411

403:                                              ; preds = %397
  %404 = zext i32 %289 to i64
  %405 = shl nuw i64 %404, 32
  %406 = zext i32 %257 to i64
  %407 = or i64 %405, %406
  %408 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %401, i64 0, i32 0, i32 0
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %408, align 8
  %409 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %398, i64 %400, i32 1
  %410 = bitcast %"struct.blink::LogicalOffset"* %409 to i64*
  store i64 %407, i64* %410, align 8
  br label %425

411:                                              ; preds = %397
  %412 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %277, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %412) #10
  %413 = zext i32 %289 to i64
  %414 = shl nuw i64 %413, 32
  %415 = zext i32 %257 to i64
  %416 = or i64 %414, %415
  %417 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %401, i64 0, i32 0, i32 0
  store %"class.blink::NGLayoutResult"* %277, %"class.blink::NGLayoutResult"** %417, align 8
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %412) #10
  %418 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %398, i64 %400, i32 1
  %419 = bitcast %"struct.blink::LogicalOffset"* %418 to i64*
  store i64 %416, i64* %419, align 8
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %412) #10
  %420 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %277, i64 0, i32 0, i32 0, i32 0, i32 0
  %421 = load i32, i32* %420, align 4
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %425

423:                                              ; preds = %411
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %277) #10
  %424 = bitcast %"class.blink::NGLayoutResult"* %277 to i8*
  call void @free(i8* %424) #10
  br label %425

425:                                              ; preds = %403, %411, %423
  %426 = load i32, i32* %194, align 4
  %427 = add i32 %426, 1
  store i32 %427, i32* %194, align 4
  %428 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %277, i64 0, i32 6, i32 0
  %429 = load i32, i32* %428, align 4
  %430 = and i32 %429, 1
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %445, label %432

432:                                              ; preds = %425
  %433 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %277, i64 0, i32 4, i32 0
  %434 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %433, align 8
  %435 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %434, i64 0, i32 8, i32 0, i32 0
  %436 = load i32, i32* %435, align 4
  %437 = icmp eq i32 %436, -64
  br i1 %437, label %445, label %438

438:                                              ; preds = %432
  %439 = icmp sgt i32 %436, 0
  br i1 %439, label %445, label %440

440:                                              ; preds = %438
  %441 = add nuw nsw i32 %261, 1
  %442 = lshr i32 %429, 5
  %443 = and i32 %442, 1
  %444 = add nsw i32 %443, %260
  br label %457

445:                                              ; preds = %432, %425, %438
  %446 = phi i32 [ %436, %438 ], [ 2147483647, %425 ], [ 2147483647, %432 ]
  %447 = load i32, i32* %11, align 4
  %448 = icmp slt i32 %446, %447
  %449 = select i1 %448, i32 %446, i32 %447
  store i32 %449, i32* %11, align 4
  %450 = add nuw nsw i32 %261, 1
  %451 = lshr i32 %429, 5
  %452 = and i32 %451, 1
  %453 = add nsw i32 %452, %260
  br i1 %431, label %464, label %454

454:                                              ; preds = %445
  %455 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %277, i64 0, i32 4, i32 0
  %456 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %455, align 8
  br label %457

457:                                              ; preds = %454, %440
  %458 = phi %"struct.blink::NGLayoutResult::RareData"* [ %434, %440 ], [ %456, %454 ]
  %459 = phi i32 [ %444, %440 ], [ %453, %454 ]
  %460 = phi i32 [ %441, %440 ], [ %450, %454 ]
  %461 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %458, i64 0, i32 13
  %462 = load i8, i8* %461, align 8, !range !5
  %463 = icmp ne i8 %462, 0
  br label %464

464:                                              ; preds = %445, %457
  %465 = phi i32 [ %453, %445 ], [ %459, %457 ]
  %466 = phi i32 [ %450, %445 ], [ %460, %457 ]
  %467 = phi i1 [ false, %445 ], [ %463, %457 ]
  %468 = or i1 %262, %467
  %469 = load i32, i32* %229, align 4
  %470 = icmp slt i32 %469, 0
  %471 = select i1 %470, i32 -2147483648, i32 2147483647
  %472 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %257, i32 %469) #10
  %473 = extractvalue { i32, i1 } %472, 1
  %474 = extractvalue { i32, i1 } %472, 0
  %475 = select i1 %473, i32 %471, i32 %474, !prof !4
  br i1 %431, label %482, label %476

476:                                              ; preds = %464
  %477 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %277, i64 0, i32 4, i32 0
  %478 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %477, align 8
  %479 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %478, i64 0, i32 7, i32 0, i32 0
  %480 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %479, align 8
  %481 = icmp eq %"class.blink::LayoutBox"* %480, null
  br i1 %481, label %482, label %529

482:                                              ; preds = %476, %464
  %483 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %288, i64 0, i32 4, i32 0
  %484 = bitcast %"class.blink::NGBreakToken"** %483 to %"class.blink::NGBlockBreakToken"**
  %485 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %484, align 8
  %486 = icmp eq %"class.blink::NGBlockBreakToken"* %485, null
  br i1 %486, label %489, label %487

487:                                              ; preds = %482
  %488 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %485, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %488) #10
  br label %489

489:                                              ; preds = %487, %482
  %490 = ptrtoint %"class.blink::NGBlockBreakToken"* %485 to i64
  %491 = icmp eq i64 %258, 0
  br i1 %491, label %505, label %492

492:                                              ; preds = %489
  %493 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %276, i64 0, i32 0, i32 1, i32 0
  %494 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %493, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %494) #10
  %495 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %493, i64 0, i32 0, i32 0
  %496 = load i32, i32* %495, align 4
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %498, label %505

498:                                              ; preds = %492
  %499 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %493, i64 -2
  %500 = bitcast %"class.base::RefCounted.1784"* %499 to %"class.blink::NGBreakToken"*
  %501 = bitcast %"class.base::RefCounted.1784"* %499 to void (%"class.blink::NGBreakToken"*)***
  %502 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %501, align 8
  %503 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %502, i64 1
  %504 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %503, align 8
  call void %504(%"class.blink::NGBreakToken"* nonnull %500) #10
  br label %505

505:                                              ; preds = %489, %492, %498
  %506 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %204, align 8
  %507 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %506, i64 0, i32 3, i32 0
  %508 = load i32, i32* %507, align 8
  %509 = and i32 %508, 1
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %529, label %511

511:                                              ; preds = %505
  %512 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %506, i64 0, i32 1, i32 0
  %513 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %512, align 8
  %514 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %513, i64 0, i32 6
  %515 = load i16, i16* %514, align 8
  %516 = and i16 %515, 384
  %517 = icmp ne i16 %516, 0
  %518 = icmp ne %"class.blink::NGBlockBreakToken"* %485, null
  %519 = and i1 %518, %517
  br i1 %519, label %520, label %529

520:                                              ; preds = %511
  %521 = load i32, i32* %230, align 8
  %522 = icmp slt i32 %466, %521
  %523 = or i1 %157, %522
  %524 = or i1 %523, %232
  %525 = select i1 %523, i8 1, i8 %263
  %526 = xor i1 %523, true
  %527 = zext i1 %526 to i32
  br i1 %524, label %529, label %528

528:                                              ; preds = %520
  store i32 3, i32* %233, align 8
  br label %529

529:                                              ; preds = %520, %476, %505, %511, %528
  %530 = phi i64 [ %258, %476 ], [ %490, %520 ], [ %490, %528 ], [ %490, %511 ], [ %490, %505 ]
  %531 = phi i8 [ %263, %476 ], [ %525, %520 ], [ %263, %528 ], [ 1, %511 ], [ 1, %505 ]
  %532 = phi i32 [ 4, %476 ], [ %527, %520 ], [ 4, %528 ], [ 0, %511 ], [ 0, %505 ]
  call void @_ZN5blink22NGBlockLayoutAlgorithmD1Ev(%"class.blink::NGBlockLayoutAlgorithm"* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 744, i8* nonnull %209) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %206) #10
  %533 = load i32, i32* %203, align 8
  %534 = and i32 %533, 1
  %535 = icmp eq i32 %534, 0
  br i1 %535, label %541, label %536

536:                                              ; preds = %529
  %537 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %202, align 8
  %538 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %537, null
  br i1 %538, label %541, label %539

539:                                              ; preds = %536
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %537) #10
  %540 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %537 to i8*
  call void @free(i8* %540) #10
  br label %541

541:                                              ; preds = %529, %536, %539
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %234) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %201) #10
  switch i32 %532, label %674 [
    i32 0, label %542
    i32 4, label %544
  ]

542:                                              ; preds = %541
  %543 = icmp eq i64 %530, 0
  br i1 %543, label %544, label %256

544:                                              ; preds = %542, %541
  %545 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %277, i64 0, i32 6, i32 0
  %546 = ptrtoint %"class.blink::NGLayoutResult"* %277 to i64
  br i1 %255, label %589, label %547

547:                                              ; preds = %544
  %548 = load i32, i32* %545, align 4
  %549 = and i32 %548, 1
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %676, label %551

551:                                              ; preds = %547
  %552 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %277, i64 0, i32 4, i32 0
  %553 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %552, align 8
  %554 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %553, i64 0, i32 7, i32 0, i32 0
  %555 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %554, align 8
  %556 = icmp eq %"class.blink::LayoutBox"* %555, null
  br i1 %556, label %676, label %557

557:                                              ; preds = %551
  %558 = load i32, i32* %193, align 8
  %559 = icmp eq i32 %558, 0
  br i1 %559, label %587, label %560

560:                                              ; preds = %557
  %561 = load i32, i32* %194, align 4
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %583, label %563

563:                                              ; preds = %560
  %564 = load %struct.ResultWithOffset*, %struct.ResultWithOffset** %220, align 8
  %565 = zext i32 %561 to i64
  %566 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %564, i64 %565
  br label %567

567:                                              ; preds = %579, %563
  %568 = phi %struct.ResultWithOffset* [ %580, %579 ], [ %564, %563 ]
  %569 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %568, i64 0, i32 0, i32 0
  %570 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %569, align 8
  %571 = icmp eq %"class.blink::NGLayoutResult"* %570, null
  br i1 %571, label %579, label %572

572:                                              ; preds = %567
  %573 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %570, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %573) #10
  %574 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %570, i64 0, i32 0, i32 0, i32 0, i32 0
  %575 = load i32, i32* %574, align 4
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %577, label %579

577:                                              ; preds = %572
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %570) #10
  %578 = bitcast %"class.blink::NGLayoutResult"* %570 to i8*
  call void @free(i8* %578) #10
  br label %579

579:                                              ; preds = %577, %572, %567
  %580 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %568, i64 1
  %581 = icmp eq %struct.ResultWithOffset* %580, %566
  br i1 %581, label %582, label %567

582:                                              ; preds = %579
  store i32 0, i32* %194, align 4
  br label %583

583:                                              ; preds = %582, %560
  %584 = load %struct.ResultWithOffset*, %struct.ResultWithOffset** %220, align 8
  store atomic i64 %227, i64* %226 monotonic, align 8
  store i32 16, i32* %193, align 8
  %585 = icmp eq %struct.ResultWithOffset* %584, %225
  br i1 %585, label %587, label %586, !prof !2

586:                                              ; preds = %583
  call fastcc void @_ZN3WTF12VectorBufferIZN5blink23NGColumnLayoutAlgorithm9LayoutRowEPKNS1_17NGBlockBreakTokenEPNS1_13NGMarginStrutEE16ResultWithOffsetLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS8_(%struct.ResultWithOffset* %584) #10
  br label %587

587:                                              ; preds = %557, %583, %586
  %588 = call i32 @_ZN5blink23NGColumnLayoutAlgorithm32CalculateBalancedColumnBlockSizeERKNS_11LogicalSizeEPKNS_17NGBlockBreakTokenE(%"class.blink::NGColumnLayoutAlgorithm"* %0, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %9, %"class.blink::NGBlockBreakToken"* %1)
  store i32 %588, i32* %24, align 4
  br label %676

589:                                              ; preds = %544
  br i1 %468, label %608, label %590

590:                                              ; preds = %589
  %591 = load i32, i32* %230, align 8
  %592 = icmp slt i32 %261, %591
  br i1 %592, label %593, label %608

593:                                              ; preds = %590
  %594 = icmp eq i64 %530, 0
  br i1 %594, label %595, label %597

595:                                              ; preds = %593
  %596 = ptrtoint %"class.blink::NGLayoutResult"* %277 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %200)
  br label %703

597:                                              ; preds = %593
  %598 = load i32, i32* %545, align 4
  %599 = and i32 %598, 1
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %608, label %601

601:                                              ; preds = %597
  %602 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %277, i64 0, i32 4, i32 0
  %603 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %602, align 8
  %604 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %603, i64 0, i32 7, i32 0, i32 0
  %605 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %604, align 8
  %606 = icmp eq %"class.blink::LayoutBox"* %605, null
  br i1 %606, label %608, label %607

607:                                              ; preds = %601
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %200)
  br label %681

608:                                              ; preds = %601, %597, %589, %590
  %609 = load i32, i32* %11, align 4
  %610 = icmp ne i32 %609, 2147483647
  %611 = icmp sgt i32 %261, %465
  %612 = and i1 %611, %610
  br i1 %612, label %613, label %676

613:                                              ; preds = %608
  %614 = load i32, i32* %24, align 4
  %615 = icmp slt i32 %609, 0
  %616 = select i1 %615, i32 -2147483648, i32 2147483647
  %617 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %614, i32 %609) #10
  %618 = extractvalue { i32, i1 } %617, 1
  %619 = extractvalue { i32, i1 } %617, 0
  %620 = select i1 %618, i32 %616, i32 %619, !prof !4
  %621 = call i32 @_ZNK5blink23NGColumnLayoutAlgorithm24ConstrainColumnBlockSizeENS_10LayoutUnitE(%"class.blink::NGColumnLayoutAlgorithm"* %0, i32 %620) #10
  %622 = icmp sgt i32 %621, %614
  br i1 %622, label %643, label %623

623:                                              ; preds = %613
  %624 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %204, align 8
  %625 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %624, i64 0, i32 3, i32 0
  %626 = load i32, i32* %625, align 8
  %627 = and i32 %626, 1
  %628 = icmp eq i32 %627, 0
  br i1 %628, label %676, label %629

629:                                              ; preds = %623
  %630 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %624, i64 0, i32 1, i32 0
  %631 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %630, align 8
  %632 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %631, i64 0, i32 6
  %633 = load i16, i16* %632, align 8
  %634 = and i16 %633, 512
  %635 = icmp eq i16 %634, 0
  br i1 %635, label %676, label %636

636:                                              ; preds = %629
  %637 = load i32, i32* %235, align 4
  %638 = icmp sgt i32 %637, -1
  br i1 %638, label %676, label %639

639:                                              ; preds = %636
  %640 = load i32, i32* %236, align 4
  %641 = icmp sgt i32 %640, %609
  br i1 %641, label %642, label %676

642:                                              ; preds = %639
  store i32 %609, i32* %236, align 8
  br label %676

643:                                              ; preds = %613
  %644 = load i32, i32* %193, align 8
  %645 = icmp eq i32 %644, 0
  br i1 %645, label %673, label %646

646:                                              ; preds = %643
  %647 = load i32, i32* %194, align 4
  %648 = icmp eq i32 %647, 0
  br i1 %648, label %669, label %649

649:                                              ; preds = %646
  %650 = load %struct.ResultWithOffset*, %struct.ResultWithOffset** %220, align 8
  %651 = zext i32 %647 to i64
  %652 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %650, i64 %651
  br label %653

653:                                              ; preds = %665, %649
  %654 = phi %struct.ResultWithOffset* [ %666, %665 ], [ %650, %649 ]
  %655 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %654, i64 0, i32 0, i32 0
  %656 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %655, align 8
  %657 = icmp eq %"class.blink::NGLayoutResult"* %656, null
  br i1 %657, label %665, label %658

658:                                              ; preds = %653
  %659 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %656, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %659) #10
  %660 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %656, i64 0, i32 0, i32 0, i32 0, i32 0
  %661 = load i32, i32* %660, align 4
  %662 = icmp eq i32 %661, 0
  br i1 %662, label %663, label %665

663:                                              ; preds = %658
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %656) #10
  %664 = bitcast %"class.blink::NGLayoutResult"* %656 to i8*
  call void @free(i8* %664) #10
  br label %665

665:                                              ; preds = %663, %658, %653
  %666 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %654, i64 1
  %667 = icmp eq %struct.ResultWithOffset* %666, %652
  br i1 %667, label %668, label %653

668:                                              ; preds = %665
  store i32 0, i32* %194, align 4
  br label %669

669:                                              ; preds = %668, %646
  %670 = load %struct.ResultWithOffset*, %struct.ResultWithOffset** %220, align 8
  store atomic i64 %227, i64* %226 monotonic, align 8
  store i32 16, i32* %193, align 8
  %671 = icmp eq %struct.ResultWithOffset* %670, %225
  br i1 %671, label %673, label %672, !prof !2

672:                                              ; preds = %669
  call fastcc void @_ZN3WTF12VectorBufferIZN5blink23NGColumnLayoutAlgorithm9LayoutRowEPKNS1_17NGBlockBreakTokenEPNS1_13NGMarginStrutEE16ResultWithOffsetLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS8_(%struct.ResultWithOffset* %670) #10
  br label %673

673:                                              ; preds = %643, %669, %672
  store i32 %621, i32* %24, align 4
  br label %676

674:                                              ; preds = %541
  %675 = ptrtoint %"class.blink::NGLayoutResult"* %277 to i64
  br label %676

676:                                              ; preds = %674, %629, %551, %623, %547, %673, %636, %639, %642, %608, %587
  %677 = phi i64 [ %546, %587 ], [ %546, %551 ], [ %546, %608 ], [ %546, %642 ], [ %546, %639 ], [ %546, %629 ], [ %546, %636 ], [ %546, %673 ], [ %546, %547 ], [ %546, %623 ], [ %675, %674 ]
  %678 = phi i8 [ 1, %587 ], [ %244, %551 ], [ %244, %608 ], [ %244, %642 ], [ %244, %639 ], [ %244, %629 ], [ %244, %636 ], [ %244, %673 ], [ %244, %547 ], [ %244, %623 ], [ %244, %674 ]
  %679 = phi i32 [ 3, %587 ], [ 2, %551 ], [ 2, %608 ], [ 2, %642 ], [ 2, %639 ], [ 2, %629 ], [ 2, %636 ], [ 0, %673 ], [ 2, %547 ], [ 2, %623 ], [ %532, %674 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %200)
  %680 = icmp eq i64 %530, 0
  br i1 %680, label %698, label %681

681:                                              ; preds = %607, %676
  %682 = phi i32 [ 2, %607 ], [ %679, %676 ]
  %683 = phi i8 [ %244, %607 ], [ %678, %676 ]
  %684 = phi i64 [ %546, %607 ], [ %677, %676 ]
  %685 = inttoptr i64 %530 to %"class.blink::NGBlockBreakToken"*
  %686 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %685, i64 0, i32 0, i32 1, i32 0
  %687 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %686, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %687) #10
  %688 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %686, i64 0, i32 0, i32 0
  %689 = load i32, i32* %688, align 4
  %690 = icmp eq i32 %689, 0
  br i1 %690, label %691, label %698

691:                                              ; preds = %681
  %692 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %686, i64 -2
  %693 = bitcast %"class.base::RefCounted.1784"* %692 to %"class.blink::NGBreakToken"*
  %694 = bitcast %"class.base::RefCounted.1784"* %692 to void (%"class.blink::NGBreakToken"*)***
  %695 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %694, align 8
  %696 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %695, i64 1
  %697 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %696, align 8
  call void %697(%"class.blink::NGBreakToken"* nonnull %693) #10
  br label %698

698:                                              ; preds = %676, %681, %691
  %699 = phi i32 [ %679, %676 ], [ %682, %681 ], [ %682, %691 ]
  %700 = phi i8 [ %678, %676 ], [ %683, %681 ], [ %683, %691 ]
  %701 = phi i64 [ %677, %676 ], [ %684, %681 ], [ %684, %691 ]
  switch i32 %699, label %851 [
    i32 0, label %702
    i32 3, label %702
    i32 2, label %703
  ]

702:                                              ; preds = %698, %698
  br label %242

703:                                              ; preds = %698, %595
  %704 = phi i64 [ %596, %595 ], [ %701, %698 ]
  %705 = load i32, i32* %194, align 4
  %706 = icmp eq i32 %705, 1
  br i1 %706, label %707, label %717

707:                                              ; preds = %703
  %708 = call fastcc dereferenceable(16) %struct.ResultWithOffset* @_ZN3WTF6VectorIZN5blink23NGColumnLayoutAlgorithm9LayoutRowEPKNS1_17NGBlockBreakTokenEPNS1_13NGMarginStrutEE16ResultWithOffsetLj16ENS_18PartitionAllocatorEEixEj(%"class.WTF::Vector.2129"* nonnull %10)
  %709 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %708, i64 0, i32 0, i32 0
  %710 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %709, align 8
  %711 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %710, i64 0, i32 3, i32 0
  %712 = bitcast %"class.blink::NGPhysicalFragment"** %711 to %"class.blink::NGPhysicalBoxFragment"**
  %713 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %712, align 8
  %714 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %713, i64 0, i32 2
  %715 = load i32, i32* %714, align 4
  %716 = icmp eq i32 %715, 0
  br i1 %716, label %788, label %717

717:                                              ; preds = %703, %707
  %718 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 8
  store i8 1, i8* %718, align 1
  %719 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 34
  store i32 2, i32* %719, align 8
  %720 = call fastcc dereferenceable(16) %struct.ResultWithOffset* @_ZN3WTF6VectorIZN5blink23NGColumnLayoutAlgorithm9LayoutRowEPKNS1_17NGBlockBreakTokenEPNS1_13NGMarginStrutEE16ResultWithOffsetLj16ENS_18PartitionAllocatorEEixEj(%"class.WTF::Vector.2129"* nonnull %10)
  %721 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %720, i64 0, i32 0, i32 0
  %722 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %721, align 8
  %723 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %722, i64 0, i32 3, i32 0
  %724 = bitcast %"class.blink::NGPhysicalFragment"** %723 to %"class.blink::NGPhysicalBoxFragment"**
  %725 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %724, align 8
  %726 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 9
  %727 = load i8, i8* %726, align 2, !range !5
  %728 = icmp eq i8 %727, 0
  br i1 %728, label %729, label %786

729:                                              ; preds = %717
  store i8 1, i8* %726, align 2
  %730 = load i32, i32* %56, align 8
  %731 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 35
  %732 = bitcast %"class.absl::optional.1636"* %731 to i64*
  %733 = load i64, i64* %732, align 4
  %734 = trunc i64 %733 to i8
  %735 = icmp eq i8 %734, 0
  br i1 %735, label %736, label %786

736:                                              ; preds = %729
  %737 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %204, align 8
  %738 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %737, i64 0, i32 3, i32 0
  %739 = load i32, i32* %738, align 8
  %740 = trunc i32 %739 to i16
  %741 = icmp sgt i16 %740, -1
  br i1 %741, label %742, label %786

742:                                              ; preds = %736
  %743 = lshr i32 %739, 4
  %744 = trunc i32 %743 to i8
  %745 = and i8 %744, 7
  %746 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %725, i64 0, i32 0, i32 1
  %747 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %746, align 8
  %748 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %725, i64 0, i32 0, i32 3
  %749 = bitcast i24* %748 to i32*
  %750 = load i32, i32* %749, align 8
  %751 = lshr i32 %750, 10
  %752 = and i32 %751, 3
  %753 = icmp eq i32 %752, 0
  br i1 %753, label %754, label %757

754:                                              ; preds = %742
  %755 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %747, i64 0, i32 5, i32 0
  %756 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %755, align 8
  br label %759

757:                                              ; preds = %742
  %758 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %747, i32 %752) #10
  br label %759

759:                                              ; preds = %757, %754
  %760 = phi %"class.blink::ComputedStyle"* [ %756, %754 ], [ %758, %757 ]
  %761 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %760, i64 0, i32 0, i32 9
  %762 = bitcast [20 x i8]* %761 to i160*
  %763 = load i160, i160* %762, align 8
  %764 = lshr i160 %763, 102
  %765 = trunc i160 %764 to i8
  %766 = and i8 %765, 3
  %767 = icmp eq i8 %745, %766
  br i1 %767, label %768, label %786

768:                                              ; preds = %759
  %769 = load i32, i32* %749, align 8
  %770 = and i32 %769, 4194304
  %771 = icmp eq i32 %770, 0
  br i1 %771, label %786, label %772

772:                                              ; preds = %768
  %773 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %725, i64 0, i32 3, i32 0
  %774 = load i32, i32* %773, align 4
  %775 = icmp slt i32 %774, 0
  %776 = select i1 %775, i32 -2147483648, i32 2147483647
  %777 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %730, i32 %774) #10
  %778 = extractvalue { i32, i1 } %777, 1
  %779 = extractvalue { i32, i1 } %777, 0
  %780 = select i1 %778, i32 %776, i32 %779, !prof !4
  %781 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 35, i32 0, i32 0, i32 0, i32 0
  %782 = load i8, i8* %781, align 4, !range !5
  %783 = icmp eq i8 %782, 0
  %784 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 35, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %780, i32* %784, align 4
  br i1 %783, label %785, label %786

785:                                              ; preds = %772
  store i8 1, i8* %781, align 4
  br label %786

786:                                              ; preds = %785, %772, %768, %759, %736, %729, %717
  %787 = load i32, i32* %56, align 8
  call void @_ZN5blink23NGColumnLayoutAlgorithm27AttemptToPositionListMarkerERKNS_21NGPhysicalBoxFragmentENS_10LayoutUnitE(%"class.blink::NGColumnLayoutAlgorithm"* %0, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72) %725, i32 %787)
  br label %788

788:                                              ; preds = %786, %707
  %789 = load i32, i32* %56, align 4
  %790 = load i32, i32* %24, align 4
  %791 = icmp slt i32 %790, 0
  %792 = select i1 %791, i32 -2147483648, i32 2147483647
  %793 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %789, i32 %790) #10
  %794 = extractvalue { i32, i1 } %793, 1
  %795 = extractvalue { i32, i1 } %793, 0
  %796 = select i1 %794, i32 %792, i32 %795, !prof !4
  store i32 %796, i32* %56, align 4
  %797 = load %struct.ResultWithOffset*, %struct.ResultWithOffset** %220, align 8
  %798 = load i32, i32* %194, align 4
  %799 = zext i32 %798 to i64
  %800 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %797, i64 %799
  %801 = icmp eq i32 %798, 0
  br i1 %801, label %883, label %802

802:                                              ; preds = %788
  %803 = bitcast %struct.ResultWithOffset* %18 to i8*
  %804 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %18, i64 0, i32 0, i32 0
  %805 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %18, i64 0, i32 1
  %806 = bitcast %"struct.blink::LogicalOffset"* %805 to i64*
  %807 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4
  %808 = getelementptr inbounds %"class.absl::optional.2134", %"class.absl::optional.2134"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %809 = bitcast <2 x i64>* %20 to i8*
  %810 = bitcast %struct.ResultWithOffset* %18 to i8*
  %811 = bitcast %"class.blink::LayoutBox"** %208 to <2 x i64>*
  br label %812

812:                                              ; preds = %802, %848
  %813 = phi %struct.ResultWithOffset* [ %797, %802 ], [ %849, %848 ]
  %814 = phi %"class.blink::NGBlockBreakToken"* [ %1, %802 ], [ %838, %848 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %803) #10
  %815 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %813, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %810, i8 -86, i64 16, i1 false)
  %816 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %815, align 8
  store %"class.blink::NGLayoutResult"* %816, %"class.blink::NGLayoutResult"** %804, align 8
  %817 = icmp eq %"class.blink::NGLayoutResult"* %816, null
  br i1 %817, label %821, label %818

818:                                              ; preds = %812
  %819 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %816, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %819) #10
  %820 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %804, align 8
  br label %821

821:                                              ; preds = %812, %818
  %822 = phi %"class.blink::NGLayoutResult"* [ null, %812 ], [ %820, %818 ]
  %823 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %813, i64 0, i32 1
  %824 = bitcast %"struct.blink::LogicalOffset"* %823 to i64*
  %825 = load i64, i64* %824, align 8
  store i64 %825, i64* %806, align 8
  %826 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %822, i64 0, i32 3, i32 0
  %827 = bitcast %"class.blink::NGPhysicalFragment"** %826 to %"class.blink::NGPhysicalBoxFragment"**
  %828 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %827, align 8
  %829 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %828, i64 0, i32 0
  store i8 0, i8* %808, align 8
  call void @_ZN5blink20NGBoxFragmentBuilder8AddChildERKNS_18NGPhysicalFragmentERKNS_13LogicalOffsetEPKNS_12LayoutInlineEPKNS_13NGMarginStrutEbN4absl8optionalIS4_EENSE_INS_10LayoutUnitEEE(%"class.blink::NGBoxFragmentBuilder"* %807, %"class.blink::NGPhysicalFragment"* dereferenceable(48) %829, %"struct.blink::LogicalOffset"* dereferenceable(8) %805, %"class.blink::LayoutInline"* null, %"struct.blink::NGMarginStrut"* null, i1 zeroext false, %"class.absl::optional.2134"* nonnull byval(%"class.absl::optional.2134") align 8 %19, i64 1) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %809) #10
  %830 = load <2 x i64>, <2 x i64>* %811, align 8
  store <2 x i64> %830, <2 x i64>* %20, align 16
  %831 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %804, align 8
  %832 = icmp eq %"class.blink::NGLayoutResult"* %831, null
  br i1 %832, label %835, label %833

833:                                              ; preds = %821
  %834 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %831, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %834) #10
  br label %835

835:                                              ; preds = %821, %833
  call void @_ZNK5blink11NGBlockNode15AddColumnResultE13scoped_refptrIKNS_14NGLayoutResultEEPKNS_17NGBlockBreakTokenE(%"class.blink::NGBlockNode"* nonnull %21, %"class.blink::NGLayoutResult"* %831, %"class.blink::NGBlockBreakToken"* %814) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %809) #10
  %836 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %828, i64 0, i32 0, i32 4, i32 0
  %837 = bitcast %"class.blink::NGBreakToken"** %836 to %"class.blink::NGBlockBreakToken"**
  %838 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %837, align 8
  %839 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %804, align 8
  %840 = icmp eq %"class.blink::NGLayoutResult"* %839, null
  br i1 %840, label %848, label %841

841:                                              ; preds = %835
  %842 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %839, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %842) #10
  %843 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %839, i64 0, i32 0, i32 0, i32 0, i32 0
  %844 = load i32, i32* %843, align 4
  %845 = icmp eq i32 %844, 0
  br i1 %845, label %846, label %848

846:                                              ; preds = %841
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %839) #10
  %847 = bitcast %"class.blink::NGLayoutResult"* %839 to i8*
  call void @free(i8* %847) #10
  br label %848

848:                                              ; preds = %835, %841, %846
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %803) #10
  %849 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %813, i64 1
  %850 = icmp eq %struct.ResultWithOffset* %849, %800
  br i1 %850, label %859, label %812

851:                                              ; preds = %698
  br i1 %402, label %859, label %852

852:                                              ; preds = %851
  %853 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %277, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %853) #10
  %854 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %277, i64 0, i32 0, i32 0, i32 0, i32 0
  %855 = load i32, i32* %854, align 4
  %856 = icmp eq i32 %855, 0
  br i1 %856, label %857, label %859

857:                                              ; preds = %852
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %277) #10
  %858 = bitcast %"class.blink::NGLayoutResult"* %277 to i8*
  call void @free(i8* %858) #10
  br label %859

859:                                              ; preds = %848, %851, %852, %857
  %860 = phi i64 [ 0, %857 ], [ 0, %852 ], [ 0, %851 ], [ %704, %848 ]
  %861 = load i32, i32* %194, align 4
  %862 = icmp eq i32 %861, 0
  br i1 %862, label %883, label %863, !prof !4

863:                                              ; preds = %859
  %864 = load %struct.ResultWithOffset*, %struct.ResultWithOffset** %220, align 8
  %865 = zext i32 %861 to i64
  %866 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %864, i64 %865
  br label %867

867:                                              ; preds = %879, %863
  %868 = phi %struct.ResultWithOffset* [ %880, %879 ], [ %864, %863 ]
  %869 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %868, i64 0, i32 0, i32 0
  %870 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %869, align 8
  %871 = icmp eq %"class.blink::NGLayoutResult"* %870, null
  br i1 %871, label %879, label %872

872:                                              ; preds = %867
  %873 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %870, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %873) #10
  %874 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %870, i64 0, i32 0, i32 0, i32 0, i32 0
  %875 = load i32, i32* %874, align 4
  %876 = icmp eq i32 %875, 0
  br i1 %876, label %877, label %879

877:                                              ; preds = %872
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %870) #10
  %878 = bitcast %"class.blink::NGLayoutResult"* %870 to i8*
  call void @free(i8* %878) #10
  br label %879

879:                                              ; preds = %877, %872, %867
  %880 = getelementptr inbounds %struct.ResultWithOffset, %struct.ResultWithOffset* %868, i64 1
  %881 = icmp eq %struct.ResultWithOffset* %880, %866
  br i1 %881, label %882, label %867

882:                                              ; preds = %879
  store i32 0, i32* %194, align 4
  br label %883

883:                                              ; preds = %788, %882, %859
  %884 = phi i64 [ %860, %882 ], [ %860, %859 ], [ %704, %788 ]
  %885 = load %struct.ResultWithOffset*, %struct.ResultWithOffset** %220, align 8
  %886 = icmp eq %struct.ResultWithOffset* %885, %225
  br i1 %886, label %888, label %887, !prof !2

887:                                              ; preds = %883
  call fastcc void @_ZN3WTF12VectorBufferIZN5blink23NGColumnLayoutAlgorithm9LayoutRowEPKNS1_17NGBlockBreakTokenEPNS1_13NGMarginStrutEE16ResultWithOffsetLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS8_(%struct.ResultWithOffset* %885) #10
  br label %888

888:                                              ; preds = %883, %887
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %189) #10
  br label %889

889:                                              ; preds = %147, %888
  %890 = phi i64 [ %884, %888 ], [ 0, %147 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  %891 = inttoptr i64 %890 to %"class.blink::NGLayoutResult"*
  ret %"class.blink::NGLayoutResult"* %891
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_118MulticolPartWalker4NextEv(%"class.blink::(anonymous namespace)::MulticolPartWalker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 4, !range !5
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %118

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 3
  %7 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %6, align 8
  %8 = icmp eq %"class.blink::NGBlockBreakToken"* %7, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %7, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 5
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %11, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %9
  %16 = add nuw i32 %13, 1
  store i32 %16, i32* %12, align 8
  %17 = icmp ugt i32 %11, %16
  br i1 %17, label %64, label %18

18:                                               ; preds = %15, %9, %5
  %19 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %19, i64 0, i32 0, i32 0
  %21 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %20, align 8
  %22 = icmp eq %"class.blink::LayoutBox"* %21, null
  br i1 %22, label %63, label %23

23:                                               ; preds = %18
  %24 = tail call { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode11NextSiblingEv(%"class.blink::NGBlockNode"* %19) #10
  %25 = extractvalue { %"class.blink::LayoutBox"*, i64 } %24, 0
  %26 = icmp eq %"class.blink::LayoutBox"* %25, null
  br i1 %26, label %57, label %27

27:                                               ; preds = %23
  %28 = extractvalue { %"class.blink::LayoutBox"*, i64 } %24, 1
  %29 = trunc i64 %28 to i8
  %30 = and i8 %29, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %57

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %25, i64 0, i32 0, i32 0, i32 5, i32 0
  %34 = bitcast %"class.blink::ComputedStyle"** %33 to %"class.blink::ComputedStyleBase"**
  %35 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %35, i64 0, i32 3, i32 0, i32 0
  %37 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %39, i64 0, i32 2, i32 0, i32 0
  %41 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %41, i64 0, i32 45
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 536870912
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %57, label %46

46:                                               ; preds = %32
  %47 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %25, i64 0, i32 0, i32 0
  %48 = bitcast %"class.blink::LayoutBox"* %25 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %49 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %48, align 8
  %50 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %49, i64 44
  %51 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %50, align 8
  %52 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %51(%"class.blink::LayoutObject"* %47) #10
  %53 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::LayoutBox"* %25, %"class.blink::LayoutBox"** %55, align 8
  %56 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 1, i32 0, i32 1
  store i8 %29, i8* %56, align 8
  br label %64

57:                                               ; preds = %46, %32, %27, %23
  %58 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"** %58, align 8
  %59 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 1, i32 0, i32 1
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 4, i32 0
  %61 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %60, align 8
  %62 = icmp eq %"class.blink::NGBlockBreakToken"* %61, null
  br i1 %62, label %63, label %64

63:                                               ; preds = %18, %57
  store i8 1, i8* %2, align 4
  br label %118

64:                                               ; preds = %15, %54, %57
  %65 = load i8, i8* %2, align 4
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %118

67:                                               ; preds = %64
  %68 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %6, align 8
  %69 = icmp eq %"class.blink::NGBlockBreakToken"* %68, null
  br i1 %69, label %96, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %68, i64 0, i32 4
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 5
  %74 = load i32, i32* %73, align 8
  %75 = icmp ugt i32 %72, %74
  br i1 %75, label %76, label %96

76:                                               ; preds = %70
  %77 = zext i32 %74 to i64
  %78 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %68, i64 0, i32 5, i64 %77
  %79 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %79, i64 0, i32 3
  %81 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %82, align 8
  %84 = icmp eq %"class.blink::LayoutBox"* %81, %83
  %85 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  br i1 %84, label %86, label %87

86:                                               ; preds = %76
  store %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"** %85, align 8
  br label %92

87:                                               ; preds = %76
  %88 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %79, i64 0, i32 4
  %89 = load i16, i16* %88, align 8
  store %"class.blink::LayoutBox"* %81, %"class.blink::LayoutBox"** %85, align 8
  %90 = trunc i16 %89 to i8
  %91 = and i8 %90, 1
  br label %92

92:                                               ; preds = %87, %86
  %93 = phi i8 [ %91, %87 ], [ 0, %86 ]
  %94 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 %93, i8* %94, align 8
  %95 = bitcast %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0 to %"class.blink::NGBreakToken"**
  store %"class.blink::NGBreakToken"* %79, %"class.blink::NGBreakToken"** %95, align 8
  br label %118

96:                                               ; preds = %70, %67
  %97 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 1, i32 0, i32 0
  %98 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %97, align 8
  %99 = icmp eq %"class.blink::LayoutBox"* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %96
  %101 = ptrtoint %"class.blink::LayoutBox"* %98 to i64
  %102 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 1, i32 0, i32 1
  %103 = bitcast i8* %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 0, i32 0
  store %"class.blink::NGBlockBreakToken"* null, %"class.blink::NGBlockBreakToken"** %105, align 8
  %106 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %107 = bitcast %"class.blink::LayoutBox"** %106 to i64*
  store i64 %101, i64* %107, align 8
  %108 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %109 = bitcast i8* %108 to i64*
  store i64 %104, i64* %109, align 8
  br label %118

110:                                              ; preds = %96
  %111 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 4, i32 0
  %112 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %111, align 8
  %113 = icmp eq %"class.blink::NGBlockBreakToken"* %112, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 0, i32 0
  store %"class.blink::NGBlockBreakToken"* %112, %"class.blink::NGBlockBreakToken"** %115, align 8
  %116 = getelementptr inbounds %"class.blink::(anonymous namespace)::MulticolPartWalker", %"class.blink::(anonymous namespace)::MulticolPartWalker"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %117 = bitcast %"class.blink::LayoutBox"** %116 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 16, i1 false) #10
  br label %118

118:                                              ; preds = %114, %110, %100, %92, %63, %64, %1
  ret void
}

declare zeroext i1 @_ZN5blink18IsEarlyBreakTargetERKNS_12NGEarlyBreakERKNS_20NGBoxFragmentBuilderERKNS_17NGLayoutInputNodeE(%"class.blink::NGEarlyBreak"* dereferenceable(32), %"class.blink::NGBoxFragmentBuilder"* dereferenceable(640), %"class.blink::NGLayoutInputNode"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink23NGColumnLayoutAlgorithm13LayoutSpannerENS_11NGBlockNodeEPKNS_17NGBlockBreakTokenEPNS_13NGMarginStrutE(%"class.blink::NGColumnLayoutAlgorithm"*, %"class.blink::LayoutBox"*, i64, %"class.blink::NGBlockBreakToken"*, %"struct.blink::NGMarginStrut"*) local_unnamed_addr #0 align 2 {
  %6 = alloca { %"class.blink::LayoutBox"*, i64 }, align 8
  %7 = bitcast { %"class.blink::LayoutBox"*, i64 }* %6 to %"class.blink::NGBlockNode"*
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"struct.blink::NGBoxStrut"*
  %10 = alloca %"class.blink::NGConstraintSpace", align 8
  %11 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %6, i64 0, i32 0
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %11, align 8
  %12 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %6, i64 0, i32 1
  store i64 %2, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #10
  %16 = bitcast { i64, i64 }* %8 to i32*
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %18 = bitcast i64* %17 to %"class.blink::LayoutUnit"*
  %19 = bitcast i64* %17 to i32*
  %20 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %9, i64 0, i32 3
  %21 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 4, i32 0, i32 0
  %22 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load i32, i32* %21, align 4
  %24 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 3
  %25 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %25, i64 0, i32 3, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = lshr i32 %27, 4
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 7
  %31 = tail call { i64, i64 } @_ZN5blink22ComputePhysicalMarginsERKNS_13ComputedStyleENS_10LayoutUnitE(%"class.blink::ComputedStyle"* dereferenceable(104) %14, i32 %23) #10
  %32 = extractvalue { i64, i64 } %31, 0
  %33 = trunc i64 %32 to i32
  %34 = lshr i64 %32, 32
  %35 = extractvalue { i64, i64 } %31, 1
  switch i8 %30, label %57 [
    i8 0, label %36
    i8 1, label %43
    i8 3, label %43
    i8 2, label %47
    i8 4, label %52
  ]

36:                                               ; preds = %5
  %37 = trunc i64 %34 to i32
  %38 = lshr i64 %35, 32
  %39 = trunc i64 %38 to i32
  %40 = and i64 %32, 4294967295
  %41 = shl i64 %35, 32
  %42 = or i64 %41, %40
  br label %57

43:                                               ; preds = %5, %5
  %44 = trunc i64 %35 to i32
  %45 = and i64 %35, -4294967296
  %46 = or i64 %45, %34
  br label %57

47:                                               ; preds = %5
  %48 = trunc i64 %35 to i32
  %49 = lshr i64 %35, 32
  %50 = and i64 %32, -4294967296
  %51 = or i64 %50, %49
  br label %57

52:                                               ; preds = %5
  %53 = trunc i64 %35 to i32
  %54 = lshr i64 %35, 32
  %55 = and i64 %32, -4294967296
  %56 = or i64 %55, %54
  br label %57

57:                                               ; preds = %5, %36, %43, %47, %52
  %58 = phi i64 [ 0, %5 ], [ %56, %52 ], [ %51, %47 ], [ %46, %43 ], [ %42, %36 ]
  %59 = phi i32 [ 0, %5 ], [ %33, %52 ], [ %48, %47 ], [ %44, %43 ], [ %37, %36 ]
  %60 = phi i32 [ 0, %5 ], [ %53, %52 ], [ %33, %47 ], [ %33, %43 ], [ %39, %36 ]
  %61 = trunc i32 %27 to i8
  %62 = icmp slt i8 %61, 0
  %63 = select i1 %62, i32 %60, i32 %59
  %64 = select i1 %62, i32 %59, i32 %60
  %65 = zext i32 %63 to i64
  %66 = shl nuw i64 %65, 32
  %67 = zext i32 %64 to i64
  %68 = or i64 %66, %67
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  store i64 %68, i64* %69, align 8
  store i64 %58, i64* %17, align 8
  %70 = icmp eq %"class.blink::NGBlockBreakToken"* %3, null
  br i1 %70, label %97, label %71

71:                                               ; preds = %57
  %72 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %3, i64 0, i32 0, i32 4
  %73 = load i16, i16* %72, align 8
  %74 = and i16 %73, 32
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %91, label %76

76:                                               ; preds = %71
  %77 = and i16 %73, 64
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %79, label %92

79:                                               ; preds = %76
  %80 = and i16 %73, 1
  %81 = icmp eq i16 %80, 0
  br i1 %81, label %82, label %91

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %3, i64 0, i32 0, i32 3
  %84 = bitcast %"class.blink::LayoutBox"** %83 to %"class.blink::LayoutObject"**
  %85 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %85, i64 0, i32 4
  %87 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %86 to i96*
  %88 = load i96, i96* %87, align 4
  %89 = and i96 %88, 8388608
  %90 = icmp eq i96 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %82, %79, %71
  store i32 0, i32* %19, align 8
  br label %92

92:                                               ; preds = %91, %82, %76
  %93 = and i16 %73, 256
  %94 = icmp eq i16 %93, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %9, i64 0, i32 3, i32 0
  store i32 0, i32* %96, align 4
  br label %97

97:                                               ; preds = %57, %92, %95
  call void @_ZN5blink13NGMarginStrut6AppendERKNS_10LayoutUnitEb(%"struct.blink::NGMarginStrut"* %4, %"class.blink::LayoutUnit"* dereferenceable(4) %18, i1 zeroext false) #10
  %98 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %4, i64 0, i32 4
  %99 = load i8, i8* %98, align 1, !range !5
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %101, label %122

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %4, i64 0, i32 2
  %103 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %4, i64 0, i32 0
  %104 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %102, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %4, i64 0, i32 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = icmp slt i32 %105, %107
  %109 = select i1 %108, %"class.blink::LayoutUnit"* %103, %"class.blink::LayoutUnit"* %102
  %110 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %109, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %4, i64 0, i32 1, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = icmp slt i32 %113, 0
  %115 = select i1 %114, i32 -2147483648, i32 2147483647
  %116 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %111, i32 %113) #10
  %117 = extractvalue { i32, i1 } %116, 1
  %118 = extractvalue { i32, i1 } %116, 0
  %119 = select i1 %117, i32 %115, i32 %118, !prof !4
  %120 = icmp slt i32 %119, 0
  %121 = select i1 %120, i32 -2147483648, i32 2147483647
  br label %122

122:                                              ; preds = %97, %101
  %123 = phi i32 [ %119, %101 ], [ 0, %97 ]
  %124 = phi i32 [ %121, %101 ], [ 2147483647, %97 ]
  %125 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 5, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %126, i32 %123) #10
  %128 = extractvalue { i32, i1 } %127, 1
  %129 = extractvalue { i32, i1 } %127, 0
  %130 = select i1 %128, i32 %124, i32 %129, !prof !4
  %131 = bitcast %"class.blink::NGConstraintSpace"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %131) #10
  %132 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %10, i64 0, i32 1, i32 0
  %133 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %10, i64 0, i32 3, i32 0
  %134 = bitcast %"class.blink::NGConstraintSpace"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 -86, i64 32, i1 false)
  call void @_ZNK5blink23NGColumnLayoutAlgorithm31CreateConstraintSpaceForSpannerERKNS_11NGBlockNodeENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* nonnull sret %10, %"class.blink::NGColumnLayoutAlgorithm"* %0, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %7, i32 %130)
  %135 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 2
  %136 = load %"class.blink::NGEarlyBreak"*, %"class.blink::NGEarlyBreak"** %135, align 8
  %137 = icmp eq %"class.blink::NGEarlyBreak"* %136, null
  br i1 %137, label %140, label %138, !prof !2

138:                                              ; preds = %122
  %139 = call %"class.blink::NGEarlyBreak"* @_ZN5blink22EnterEarlyBreakInChildERKNS_11NGBlockNodeERKNS_12NGEarlyBreakE(%"class.blink::NGBlockNode"* nonnull dereferenceable(16) %7, %"class.blink::NGEarlyBreak"* nonnull dereferenceable(32) %136) #10
  br label %140

140:                                              ; preds = %122, %138
  %141 = phi %"class.blink::NGEarlyBreak"* [ %139, %138 ], [ null, %122 ]
  %142 = call %"class.blink::NGLayoutResult"* @_ZNK5blink11NGBlockNode6LayoutERKNS_17NGConstraintSpaceEPKNS_17NGBlockBreakTokenEPKNS_12NGEarlyBreakE(%"class.blink::NGBlockNode"* nonnull %7, %"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %10, %"class.blink::NGBlockBreakToken"* %3, %"class.blink::NGEarlyBreak"* %141) #10
  %143 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %24, align 8
  %144 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %143, i64 0, i32 3, i32 0
  %145 = load i32, i32* %144, align 8
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %179, label %148

148:                                              ; preds = %140
  %149 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %143, i64 0, i32 1, i32 0
  %150 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %149, align 8
  %151 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %150, i64 0, i32 6
  %152 = load i16, i16* %151, align 8
  %153 = and i16 %152, 384
  %154 = icmp eq i16 %153, 0
  br i1 %154, label %179, label %155

155:                                              ; preds = %148
  %156 = load %"class.blink::NGEarlyBreak"*, %"class.blink::NGEarlyBreak"** %135, align 8
  %157 = icmp eq %"class.blink::NGEarlyBreak"* %156, null
  br i1 %157, label %158, label %179

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %150, i64 0, i32 5, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp slt i32 %130, 0
  %162 = select i1 %161, i32 -2147483648, i32 2147483647
  %163 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %160, i32 %130) #10
  %164 = extractvalue { i32, i1 } %163, 1
  %165 = extractvalue { i32, i1 } %163, 0
  %166 = select i1 %164, i32 %162, i32 %165, !prof !4
  %167 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %11, align 8
  %168 = load i64, i64* %12, align 8
  %169 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 8
  %170 = load i8, i8* %169, align 1, !range !5
  %171 = icmp ne i8 %170, 0
  %172 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4
  %173 = call i32 @_ZN5blink24BreakBeforeChildIfNeededERKNS_17NGConstraintSpaceENS_17NGLayoutInputNodeERKNS_14NGLayoutResultENS_10LayoutUnitEbPNS_20NGBoxFragmentBuilderE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %143, %"class.blink::LayoutBox"* %167, i64 %168, %"class.blink::NGLayoutResult"* dereferenceable(64) %142, i32 %166, i1 zeroext %171, %"class.blink::NGBoxFragmentBuilder"* %172) #10
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %276

175:                                              ; preds = %158
  %176 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %24, align 8
  %177 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %176, i64 0, i32 3, i32 0
  %178 = load i32, i32* %177, align 8
  br label %179

179:                                              ; preds = %175, %148, %140, %155
  %180 = phi i32 [ %178, %175 ], [ %145, %148 ], [ %145, %140 ], [ %145, %155 ]
  %181 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %142, i64 0, i32 3, i32 0
  %182 = bitcast %"class.blink::NGPhysicalFragment"** %181 to %"class.blink::NGPhysicalBoxFragment"**
  %183 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1
  %185 = bitcast %"class.blink::NGBlockNode"* %184 to %"class.blink::LayoutObject"**
  %186 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %185, align 8
  %187 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %186, i64 0, i32 5, i32 0
  %188 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %187, align 8
  %189 = load i32, i32* %21, align 4
  %190 = and i32 %180, 112
  %191 = icmp eq i32 %190, 0
  %192 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %183, i64 0, i32 0, i32 2, i32 0, i32 0
  %193 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %183, i64 0, i32 0, i32 2, i32 1, i32 0
  %194 = select i1 %191, i32* %192, i32* %193
  %195 = load i32, i32* %194, align 4
  call void @_ZN5blink20ResolveInlineMarginsERKNS_13ComputedStyleES2_NS_10LayoutUnitES3_PNS_10NGBoxStrutE(%"class.blink::ComputedStyle"* dereferenceable(104) %14, %"class.blink::ComputedStyle"* dereferenceable(104) %188, i32 %189, i32 %195, %"struct.blink::NGBoxStrut"* nonnull %9) #10
  %196 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 3, i32 0, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = load i32, i32* %16, align 8
  %199 = icmp slt i32 %198, 0
  %200 = select i1 %199, i32 -2147483648, i32 2147483647
  %201 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %197, i32 %198) #10
  %202 = extractvalue { i32, i1 } %201, 1
  %203 = extractvalue { i32, i1 } %201, 0
  %204 = select i1 %202, i32 %200, i32 %203, !prof !4
  %205 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4
  %206 = zext i32 %130 to i64
  %207 = shl nuw i64 %206, 32
  %208 = zext i32 %204 to i64
  %209 = or i64 %207, %208
  call void @_ZN5blink20NGBoxFragmentBuilder9AddResultERKNS_14NGLayoutResultENS_13LogicalOffsetEN4absl8optionalIS4_EEb(%"class.blink::NGBoxFragmentBuilder"* %205, %"class.blink::NGLayoutResult"* dereferenceable(64) %142, i64 %209, i64 0, i32 undef, i1 zeroext true) #10
  %210 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 35
  %211 = bitcast %"class.absl::optional.1636"* %210 to i64*
  %212 = load i64, i64* %211, align 4
  %213 = trunc i64 %212 to i8
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %215, label %265

215:                                              ; preds = %179
  %216 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %24, align 8
  %217 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %216, i64 0, i32 3, i32 0
  %218 = load i32, i32* %217, align 8
  %219 = trunc i32 %218 to i16
  %220 = icmp sgt i16 %219, -1
  br i1 %220, label %221, label %265

221:                                              ; preds = %215
  %222 = lshr i32 %218, 4
  %223 = trunc i32 %222 to i8
  %224 = and i8 %223, 7
  %225 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %183, i64 0, i32 0, i32 1
  %226 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %225, align 8
  %227 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %183, i64 0, i32 0, i32 3
  %228 = bitcast i24* %227 to i32*
  %229 = load i32, i32* %228, align 8
  %230 = lshr i32 %229, 10
  %231 = and i32 %230, 3
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %236

233:                                              ; preds = %221
  %234 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %226, i64 0, i32 5, i32 0
  %235 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %234, align 8
  br label %238

236:                                              ; preds = %221
  %237 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %226, i32 %231) #10
  br label %238

238:                                              ; preds = %236, %233
  %239 = phi %"class.blink::ComputedStyle"* [ %235, %233 ], [ %237, %236 ]
  %240 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %239, i64 0, i32 0, i32 9
  %241 = bitcast [20 x i8]* %240 to i160*
  %242 = load i160, i160* %241, align 8
  %243 = lshr i160 %242, 102
  %244 = trunc i160 %243 to i8
  %245 = and i8 %244, 3
  %246 = icmp eq i8 %224, %245
  br i1 %246, label %247, label %265

247:                                              ; preds = %238
  %248 = load i32, i32* %228, align 8
  %249 = and i32 %248, 4194304
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %265, label %251

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %183, i64 0, i32 3, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = icmp slt i32 %253, 0
  %255 = select i1 %254, i32 -2147483648, i32 2147483647
  %256 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %130, i32 %253) #10
  %257 = extractvalue { i32, i1 } %256, 1
  %258 = extractvalue { i32, i1 } %256, 0
  %259 = select i1 %257, i32 %255, i32 %258, !prof !4
  %260 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 35, i32 0, i32 0, i32 0, i32 0
  %261 = load i8, i8* %260, align 4, !range !5
  %262 = icmp eq i8 %261, 0
  %263 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 35, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %259, i32* %263, align 4
  br i1 %262, label %264, label %265

264:                                              ; preds = %251
  store i8 1, i8* %260, align 4
  br label %265

265:                                              ; preds = %179, %215, %238, %247, %251, %264
  call void @_ZN5blink23NGColumnLayoutAlgorithm27AttemptToPositionListMarkerERKNS_21NGPhysicalBoxFragmentENS_10LayoutUnitE(%"class.blink::NGColumnLayoutAlgorithm"* %0, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72) %183, i32 %130)
  %266 = bitcast %"struct.blink::NGMarginStrut"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %266, i8 0, i64 14, i1 false)
  call void @_ZN5blink13NGMarginStrut6AppendERKNS_10LayoutUnitEb(%"struct.blink::NGMarginStrut"* %4, %"class.blink::LayoutUnit"* dereferenceable(4) %20, i1 zeroext false) #10
  %267 = select i1 %191, i32* %193, i32* %192
  %268 = load i32, i32* %267, align 4
  %269 = icmp slt i32 %268, 0
  %270 = select i1 %269, i32 -2147483648, i32 2147483647
  %271 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %130, i32 %268) #10
  %272 = extractvalue { i32, i1 } %271, 1
  %273 = extractvalue { i32, i1 } %271, 0
  %274 = select i1 %272, i32 %270, i32 %273, !prof !4
  store i32 %274, i32* %125, align 8
  %275 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 8
  store i8 1, i8* %275, align 1
  br label %276

276:                                              ; preds = %158, %265
  %277 = phi i32 [ 0, %265 ], [ %173, %158 ]
  %278 = icmp eq %"class.blink::NGLayoutResult"* %142, null
  br i1 %278, label %286, label %279

279:                                              ; preds = %276
  %280 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %142, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %280) #10
  %281 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %142, i64 0, i32 0, i32 0, i32 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %286

284:                                              ; preds = %279
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %142) #10
  %285 = bitcast %"class.blink::NGLayoutResult"* %142 to i8*
  call void @free(i8* %285) #10
  br label %286

286:                                              ; preds = %276, %279, %284
  %287 = load i32, i32* %133, align 8
  %288 = and i32 %287, 1
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %295, label %290

290:                                              ; preds = %286
  %291 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %132, align 8
  %292 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %291, null
  br i1 %292, label %295, label %293

293:                                              ; preds = %290
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %291) #10
  %294 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %291 to i8*
  call void @free(i8* %294) #10
  br label %295

295:                                              ; preds = %286, %290, %293
  %296 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %10, i64 0, i32 2
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %296) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %131) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  ret i32 %277
}

declare void @_ZN5blink20NGBoxFragmentBuilder13AddBreakTokenE13scoped_refptrIKNS_12NGBreakTokenEEb(%"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBreakToken"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink20NGBoxFragmentBuilder19AddBreakBeforeChildENS_17NGLayoutInputNodeEN4absl8optionalINS_13NGBreakAppealEEEb(%"class.blink::NGBoxFragmentBuilder"*, %"class.blink::LayoutBox"*, i64, i64, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink23NGColumnLayoutAlgorithm32CalculateBalancedColumnBlockSizeERKNS_11LogicalSizeEPKNS_17NGBlockBreakTokenE(%"class.blink::NGColumnLayoutAlgorithm"*, %"struct.blink::LogicalSize"* nocapture readonly dereferenceable(8), %"class.blink::NGBlockBreakToken"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.WTF::VectorBufferBase.2141", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.blink::NGConstraintSpace", align 8
  %11 = alloca %"struct.blink::NGFragmentGeometry", align 4
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to %"class.blink::NGBlockNode"*
  %14 = alloca %class.ContentRuns, align 8
  %15 = alloca %"class.blink::NGBlockLayoutAlgorithm", align 8
  %16 = alloca %"struct.blink::NGLayoutAlgorithmParams", align 16
  %17 = alloca i32, align 4
  %18 = bitcast %"class.blink::NGConstraintSpace"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %10, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %10, i64 0, i32 3, i32 0
  %21 = bitcast %"class.blink::NGConstraintSpace"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 32, i1 false)
  call void @_ZNK5blink23NGColumnLayoutAlgorithm33CreateConstraintSpaceForBalancingERKNS_11LogicalSizeE(%"class.blink::NGConstraintSpace"* nonnull sret %10, %"class.blink::NGColumnLayoutAlgorithm"* %0, %"struct.blink::LogicalSize"* dereferenceable(8) %1)
  %22 = bitcast %"struct.blink::NGFragmentGeometry"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %22) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %22, i8 -86, i64 56, i1 false)
  %23 = bitcast <2 x i64>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %25 = bitcast %"class.blink::LayoutBox"** %24 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8
  store <2 x i64> %26, <2 x i64>* %12, align 16
  call void @_ZN5blink32CalculateInitialFragmentGeometryERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeEb(%"struct.blink::NGFragmentGeometry"* nonnull sret %11, %"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %10, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %13, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #10
  %27 = bitcast %class.ContentRuns* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #10
  %28 = getelementptr inbounds %class.ContentRuns, %class.ContentRuns* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %class.ContentRuns, %class.ContentRuns* %14, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %class.ContentRuns, %class.ContentRuns* %14, i64 0, i32 0, i32 0, i32 0, i32 2
  %31 = getelementptr inbounds %class.ContentRuns, %class.ContentRuns* %14, i64 0, i32 0, i32 0, i32 1, i64 0
  %32 = getelementptr inbounds %class.ContentRuns, %class.ContentRuns* %14, i64 0, i32 1, i32 0
  %33 = bitcast %class.ContentRuns* %14 to i8**
  %34 = getelementptr inbounds %class.ContentRuns, %class.ContentRuns* %14, i64 0, i32 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 16, i1 false)
  store i8* %31, i8** %33, align 8
  store i32 1, i32* %29, align 8
  store i32 0, i32* %30, align 4
  store i32 0, i32* %32, align 8
  %35 = icmp eq %"class.blink::NGBlockBreakToken"* %2, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %37) #10
  br label %38

38:                                               ; preds = %3, %36
  %39 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 6
  %40 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %39, i64 0, i32 0
  store i32 0, i32* %40, align 4
  %41 = bitcast %"class.blink::NGBlockLayoutAlgorithm"* %15 to i8*
  %42 = bitcast %"struct.blink::NGLayoutAlgorithmParams"* %16 to i8*
  %43 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %16, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %16, i64 0, i32 2
  %45 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %16, i64 0, i32 3
  %46 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %16, i64 0, i32 4
  %47 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 3
  %48 = bitcast i32* %8 to i8*
  %49 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  %50 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %51 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  %52 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %53 = bitcast %"class.logging::CheckError"* %7 to i8*
  %54 = bitcast %"class.WTF::VectorBufferBase.2141"* %5 to i8*
  %55 = getelementptr inbounds %"class.WTF::VectorBufferBase.2141", %"class.WTF::VectorBufferBase.2141"* %5, i64 0, i32 0
  %56 = getelementptr inbounds %"class.WTF::VectorBufferBase.2141", %"class.WTF::VectorBufferBase.2141"* %5, i64 0, i32 1
  %57 = bitcast i32* %56 to i64*
  %58 = bitcast i8* %31 to %struct.ContentRun*
  %59 = bitcast %class.ContentRuns* %14 to i64*
  %60 = ptrtoint i8* %31 to i64
  %61 = getelementptr inbounds %class.ContentRuns, %class.ContentRuns* %14, i64 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %class.ContentRuns, %class.ContentRuns* %14, i64 0, i32 1
  %63 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %62, i64 0, i32 0
  %64 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  %65 = bitcast i32* %17 to i8*
  %66 = bitcast i32* %17 to %"class.blink::LayoutUnit"*
  %67 = bitcast %"class.blink::NGEarlyBreak"** %46 to i8*
  %68 = bitcast %"class.blink::LayoutBox"** %24 to <2 x i64>*
  %69 = bitcast %"struct.blink::NGLayoutAlgorithmParams"* %16 to <2 x i64>*
  br label %70

70:                                               ; preds = %229, %38
  %71 = phi %"class.blink::NGBlockBreakToken"* [ %2, %38 ], [ %201, %229 ]
  call void @llvm.lifetime.start.p0i8(i64 744, i8* nonnull %41) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 744, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %42) #10
  %72 = load <2 x i64>, <2 x i64>* %68, align 8
  store <2 x i64> %72, <2 x i64>* %69, align 16
  store %"struct.blink::NGFragmentGeometry"* %11, %"struct.blink::NGFragmentGeometry"** %43, align 16
  store %"class.blink::NGConstraintSpace"* %10, %"class.blink::NGConstraintSpace"** %44, align 8
  store %"class.blink::NGBlockBreakToken"* %71, %"class.blink::NGBlockBreakToken"** %45, align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false)
  call void @_ZN5blink22NGBlockLayoutAlgorithmC1ERKNS_23NGLayoutAlgorithmParamsE(%"class.blink::NGBlockLayoutAlgorithm"* nonnull %15, %"struct.blink::NGLayoutAlgorithmParams"* nonnull dereferenceable(56) %16) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %42) #10
  call void @_ZN5blink22NGBlockLayoutAlgorithm10SetBoxTypeENS_18NGPhysicalFragment9NGBoxTypeE(%"class.blink::NGBlockLayoutAlgorithm"* nonnull %15, i32 2) #10
  %73 = call %"class.blink::NGLayoutResult"* @_ZN5blink22NGBlockLayoutAlgorithm6LayoutEv(%"class.blink::NGBlockLayoutAlgorithm"* nonnull %15) #10
  %74 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %73, i64 0, i32 3, i32 0
  %75 = bitcast %"class.blink::NGPhysicalFragment"** %74 to %"class.blink::NGPhysicalBoxFragment"**
  %76 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %76, i64 0, i32 0
  %78 = load i32, i32* %20, align 8
  %79 = lshr i32 %78, 4
  %80 = trunc i32 %79 to i16
  %81 = and i16 %80, 7
  %82 = trunc i32 %78 to i16
  %83 = shl i16 %82, 1
  %84 = and i16 %83, 256
  %85 = or i16 %84, %81
  %86 = call fastcc i32 @_ZN5blink12_GLOBAL__N_131CalculateColumnContentBlockSizeERKNS_18NGPhysicalFragmentENS_20WritingDirectionModeE(%"class.blink::NGPhysicalFragment"* dereferenceable(48) %77, i16 %85)
  %87 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %47, align 8
  %88 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %87, i64 0, i32 3, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = and i32 %89, 112
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %76, i64 0, i32 0, i32 2, i32 1, i32 0
  %93 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %76, i64 0, i32 0, i32 2, i32 0, i32 0
  %94 = select i1 %91, i32* %92, i32* %93
  %95 = load i32, i32* %94, align 4
  %96 = icmp slt i32 %86, %95
  %97 = select i1 %96, i32 %95, i32 %86
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48)
  store i32 %97, i32* %8, align 4
  %98 = load i32, i32* %30, align 4
  %99 = load i32, i32* %29, align 8
  %100 = icmp eq i32 %98, %99
  br i1 %100, label %101, label %158, !prof !4

101:                                              ; preds = %70
  %102 = add i32 %98, 1
  %103 = shl i32 %98, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %50, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  %104 = icmp ugt i32 %103, %98
  br i1 %104, label %105, label %106

105:                                              ; preds = %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  store i8* null, i8** %50, align 8
  br label %113

106:                                              ; preds = %101
  %107 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %103) #10
  %108 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %98) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0), i8* %107, i8* %108) #10
  %109 = load i8*, i8** %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  store i8* %109, i8** %50, align 8
  %110 = icmp eq i8* %109, null
  br i1 %110, label %113, label %111

111:                                              ; preds = %106
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %6) #10
  %112 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #10
  br label %113

113:                                              ; preds = %111, %106, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #10
  %114 = icmp ugt i32 %103, 4
  %115 = select i1 %114, i32 %103, i32 4
  %116 = icmp ugt i32 %115, %102
  %117 = select i1 %116, i32 %115, i32 %102
  %118 = load i32, i32* %29, align 8
  %119 = icmp ult i32 %118, %117
  br i1 %119, label %120, label %158, !prof !2

120:                                              ; preds = %113
  %121 = load %struct.ContentRun*, %struct.ContentRun** %28, align 8
  %122 = icmp eq %struct.ContentRun* %121, null
  br i1 %122, label %123, label %127

123:                                              ; preds = %120
  %124 = icmp ugt i32 %117, 1
  br i1 %124, label %125, label %126

125:                                              ; preds = %123
  call fastcc void @_ZN3WTF16VectorBufferBaseIZN5blink23NGColumnLayoutAlgorithm32CalculateBalancedColumnBlockSizeERKNS1_11LogicalSizeEPKNS1_17NGBlockBreakTokenEE10ContentRunNS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.2141"* nonnull %61, i32 %117) #10
  br label %158

126:                                              ; preds = %123
  store atomic i64 %60, i64* %59 monotonic, align 8
  store i32 1, i32* %29, align 8
  br label %158

127:                                              ; preds = %120
  %128 = icmp ult i32 %117, 2
  br i1 %128, label %129, label %137

129:                                              ; preds = %127
  %130 = icmp eq %struct.ContentRun* %121, %58
  br i1 %130, label %131, label %132

131:                                              ; preds = %129
  store atomic i64 %60, i64* %59 monotonic, align 8
  store i32 1, i32* %29, align 8
  br label %158

132:                                              ; preds = %129
  %133 = load i32, i32* %30, align 4
  store atomic i64 %60, i64* %59 monotonic, align 8
  store i32 1, i32* %29, align 8
  %134 = zext i32 %133 to i64
  %135 = bitcast %struct.ContentRun* %121 to i8*
  %136 = shl nuw nsw i64 %134, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* nonnull align 4 %135, i64 %136, i1 false) #10
  call fastcc void @_ZN3WTF12VectorBufferIZN5blink23NGColumnLayoutAlgorithm32CalculateBalancedColumnBlockSizeERKNS1_11LogicalSizeEPKNS1_17NGBlockBreakTokenEE10ContentRunLj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS9_(%struct.ContentRun* nonnull %121) #10
  br label %158

137:                                              ; preds = %127
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 16, i1 false) #10
  store %struct.ContentRun* null, %struct.ContentRun** %55, align 8
  store i32 0, i32* %56, align 8
  call fastcc void @_ZN3WTF16VectorBufferBaseIZN5blink23NGColumnLayoutAlgorithm32CalculateBalancedColumnBlockSizeERKNS1_11LogicalSizeEPKNS1_17NGBlockBreakTokenEE10ContentRunNS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.2141"* nonnull %5, i32 %117) #10
  %138 = load %struct.ContentRun*, %struct.ContentRun** %55, align 8
  %139 = load i64, i64* %57, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #10
  %140 = ptrtoint %struct.ContentRun* %138 to i64
  %141 = load %struct.ContentRun*, %struct.ContentRun** %28, align 8
  %142 = icmp ne %struct.ContentRun* %138, null
  %143 = icmp ne %struct.ContentRun* %141, null
  %144 = and i1 %142, %143
  br i1 %144, label %145, label %152, !prof !2

145:                                              ; preds = %137
  %146 = load i32, i32* %30, align 4
  %147 = zext i32 %146 to i64
  %148 = bitcast %struct.ContentRun* %141 to i8*
  %149 = shl nuw nsw i64 %147, 3
  %150 = bitcast %struct.ContentRun* %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %150, i8* nonnull align 4 %148, i64 %149, i1 false) #10
  %151 = load %struct.ContentRun*, %struct.ContentRun** %28, align 8
  br label %152

152:                                              ; preds = %145, %137
  %153 = phi %struct.ContentRun* [ %141, %137 ], [ %151, %145 ]
  %154 = icmp eq %struct.ContentRun* %153, %58
  br i1 %154, label %156, label %155, !prof !2

155:                                              ; preds = %152
  call fastcc void @_ZN3WTF12VectorBufferIZN5blink23NGColumnLayoutAlgorithm32CalculateBalancedColumnBlockSizeERKNS1_11LogicalSizeEPKNS1_17NGBlockBreakTokenEE10ContentRunLj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS9_(%struct.ContentRun* %153) #10
  br label %156

156:                                              ; preds = %155, %152
  store atomic i64 %140, i64* %59 monotonic, align 8
  %157 = trunc i64 %139 to i32
  store i32 %157, i32* %29, align 8
  br label %158

158:                                              ; preds = %70, %113, %125, %126, %131, %132, %156
  %159 = load %struct.ContentRun*, %struct.ContentRun** %28, align 8
  %160 = load i32, i32* %30, align 4
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds %struct.ContentRun, %struct.ContentRun* %159, i64 %161, i32 0, i32 0
  store i32 %97, i32* %162, align 4
  %163 = getelementptr inbounds %struct.ContentRun, %struct.ContentRun* %159, i64 %161, i32 1
  store i32 0, i32* %163, align 4
  %164 = load i32, i32* %30, align 4
  %165 = add i32 %164, 1
  store i32 %165, i32* %30, align 4
  %166 = load i32, i32* %63, align 8
  %167 = icmp slt i32 %166, %97
  %168 = select i1 %167, %"class.blink::LayoutUnit"* %64, %"class.blink::LayoutUnit"* %62
  %169 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %168, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  store i32 %170, i32* %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65)
  %171 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %73, i64 0, i32 6, i32 0
  %172 = load i32, i32* %171, align 4
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %182, label %175

175:                                              ; preds = %158
  %176 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %73, i64 0, i32 4, i32 0
  %177 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %176, align 8
  %178 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %177, i64 0, i32 8, i32 0, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = icmp eq i32 %179, -64
  %181 = select i1 %180, i32 0, i32 %179
  br label %182

182:                                              ; preds = %158, %175
  %183 = phi i32 [ %181, %175 ], [ 0, %158 ]
  store i32 %183, i32* %17, align 4
  %184 = load i32, i32* %40, align 4
  %185 = icmp slt i32 %184, %183
  %186 = select i1 %185, %"class.blink::LayoutUnit"* %66, %"class.blink::LayoutUnit"* %39
  %187 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %186, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  store i32 %188, i32* %40, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65)
  %189 = load i32, i32* %171, align 4
  %190 = and i32 %189, 1
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %198, label %192

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %73, i64 0, i32 4, i32 0
  %194 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %193, align 8
  %195 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %194, i64 0, i32 7, i32 0, i32 0
  %196 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %195, align 8
  %197 = icmp eq %"class.blink::LayoutBox"* %196, null
  br i1 %197, label %198, label %230

198:                                              ; preds = %192, %182
  %199 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %76, i64 0, i32 0, i32 4, i32 0
  %200 = bitcast %"class.blink::NGBreakToken"** %199 to %"class.blink::NGBlockBreakToken"**
  %201 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %200, align 8
  %202 = icmp eq %"class.blink::NGBlockBreakToken"* %201, null
  br i1 %202, label %205, label %203

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %201, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %204) #10
  br label %205

205:                                              ; preds = %203, %198
  %206 = icmp eq %"class.blink::NGBlockBreakToken"* %71, null
  br i1 %206, label %220, label %207

207:                                              ; preds = %205
  %208 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %71, i64 0, i32 0, i32 1, i32 0
  %209 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %208, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %209) #10
  %210 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %208, i64 0, i32 0, i32 0
  %211 = load i32, i32* %210, align 4
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %220

213:                                              ; preds = %207
  %214 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %208, i64 -2
  %215 = bitcast %"class.base::RefCounted.1784"* %214 to %"class.blink::NGBreakToken"*
  %216 = bitcast %"class.base::RefCounted.1784"* %214 to void (%"class.blink::NGBreakToken"*)***
  %217 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %216, align 8
  %218 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %217, i64 1
  %219 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %218, align 8
  call void %219(%"class.blink::NGBreakToken"* nonnull %215) #10
  br label %220

220:                                              ; preds = %205, %207, %213
  %221 = icmp eq %"class.blink::NGLayoutResult"* %73, null
  br i1 %221, label %229, label %222

222:                                              ; preds = %220
  %223 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %73, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %223) #10
  %224 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %229

227:                                              ; preds = %222
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %73) #10
  %228 = bitcast %"class.blink::NGLayoutResult"* %73 to i8*
  call void @free(i8* %228) #10
  br label %229

229:                                              ; preds = %220, %222, %227
  call void @_ZN5blink22NGBlockLayoutAlgorithmD1Ev(%"class.blink::NGBlockLayoutAlgorithm"* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 744, i8* nonnull %41) #10
  br i1 %202, label %240, label %70

230:                                              ; preds = %192
  %231 = icmp eq %"class.blink::NGLayoutResult"* %73, null
  br i1 %231, label %239, label %232

232:                                              ; preds = %230
  %233 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %73, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %233) #10
  %234 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  %235 = load i32, i32* %234, align 4
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %239

237:                                              ; preds = %232
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %73) #10
  %238 = bitcast %"class.blink::NGLayoutResult"* %73 to i8*
  call void @free(i8* %238) #10
  br label %239

239:                                              ; preds = %230, %232, %237
  call void @_ZN5blink22NGBlockLayoutAlgorithmD1Ev(%"class.blink::NGBlockLayoutAlgorithm"* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 744, i8* nonnull %41) #10
  br label %240

240:                                              ; preds = %229, %239
  %241 = phi %"class.blink::NGBlockBreakToken"* [ %71, %239 ], [ null, %229 ]
  %242 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %47, align 8
  %243 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %242, i64 0, i32 3, i32 0
  %244 = load i32, i32* %243, align 8
  %245 = and i32 %244, 1
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %270, label %247

247:                                              ; preds = %240
  %248 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %242, i64 0, i32 1, i32 0
  %249 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %248, align 8
  %250 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %249, i64 0, i32 6
  %251 = load i16, i16* %250, align 8
  %252 = and i16 %251, 384
  %253 = icmp eq i16 %252, 256
  br i1 %253, label %254, label %270

254:                                              ; preds = %247
  %255 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %249, i64 0, i32 4, i32 0
  %256 = load i32, i32* %255, align 8
  %257 = icmp eq i32 %256, -64
  br i1 %257, label %258, label %270

258:                                              ; preds = %254
  %259 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 6, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %261)
  store i32 %260, i32* %9, align 4
  %262 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 32
  %263 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %262, i64 0, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = icmp slt i32 %264, %260
  %266 = bitcast i32* %9 to %"class.blink::LayoutUnit"*
  %267 = select i1 %265, %"class.blink::LayoutUnit"* %266, %"class.blink::LayoutUnit"* %262
  %268 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %267, i64 0, i32 0
  %269 = load i32, i32* %268, align 4
  store i32 %269, i32* %263, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %261)
  br label %270

270:                                              ; preds = %240, %247, %258, %254
  %271 = load i32, i32* %32, align 8
  %272 = load i32, i32* %40, align 4
  %273 = icmp slt i32 %272, %271
  br i1 %273, label %274, label %418

274:                                              ; preds = %270
  %275 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 4, i32 0, i32 0
  %276 = load i32, i32* %275, align 4
  %277 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1
  %278 = bitcast %"class.blink::NGBlockNode"* %277 to %"class.blink::LayoutObject"**
  %279 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %278, align 8
  %280 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %279, i64 0, i32 5, i32 0
  %281 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %280, align 8
  %282 = call i32 @_ZN5blink22ResolveUsedColumnCountENS_10LayoutUnitERKNS_13ComputedStyleE(i32 %276, %"class.blink::ComputedStyle"* dereferenceable(104) %281) #10
  %283 = load i32, i32* %30, align 4
  %284 = icmp slt i32 %283, %282
  br i1 %284, label %285, label %346

285:                                              ; preds = %274, %338
  %286 = phi i32 [ %345, %338 ], [ %283, %274 ]
  %287 = phi i32 [ %343, %338 ], [ %283, %274 ]
  %288 = load %struct.ContentRun*, %struct.ContentRun** %28, align 8
  %289 = zext i32 %286 to i64
  %290 = getelementptr inbounds %struct.ContentRun, %struct.ContentRun* %288, i64 %289
  %291 = icmp ult i32 %286, 2
  br i1 %291, label %338, label %292

292:                                              ; preds = %285
  %293 = getelementptr inbounds %struct.ContentRun, %struct.ContentRun* %288, i64 1
  br label %294

294:                                              ; preds = %294, %292
  %295 = phi %struct.ContentRun* [ %336, %294 ], [ %293, %292 ]
  %296 = phi %struct.ContentRun* [ %295, %294 ], [ %288, %292 ]
  %297 = phi %struct.ContentRun* [ %335, %294 ], [ %288, %292 ]
  %298 = getelementptr inbounds %struct.ContentRun, %struct.ContentRun* %297, i64 0, i32 0, i32 0
  %299 = load i32, i32* %298, align 4
  %300 = sitofp i32 %299 to float
  %301 = fmul float %300, 1.562500e-02
  %302 = getelementptr inbounds %struct.ContentRun, %struct.ContentRun* %297, i64 0, i32 1
  %303 = load i32, i32* %302, align 4
  %304 = add nsw i32 %303, 1
  %305 = sitofp i32 %304 to float
  %306 = fdiv float %301, %305
  %307 = fmul float %306, 6.400000e+01
  %308 = call float @llvm.ceil.f32(float %307) #10
  %309 = fcmp ult float %308, 0xC1E0000000000000
  %310 = fcmp ugt float %308, 0x41DFFFFFE0000000
  %311 = fcmp ogt float %308, 0xC1E0000000000000
  %312 = select i1 %311, float %308, float 0xC1E0000000000000
  %313 = fptosi float %312 to i32
  %314 = select i1 %309, i32 0, i32 2147483647
  %315 = select i1 %310, i32 %314, i32 %313
  %316 = getelementptr inbounds %struct.ContentRun, %struct.ContentRun* %295, i64 0, i32 0, i32 0
  %317 = load i32, i32* %316, align 4
  %318 = sitofp i32 %317 to float
  %319 = fmul float %318, 1.562500e-02
  %320 = getelementptr inbounds %struct.ContentRun, %struct.ContentRun* %296, i64 1, i32 1
  %321 = load i32, i32* %320, align 4
  %322 = add nsw i32 %321, 1
  %323 = sitofp i32 %322 to float
  %324 = fdiv float %319, %323
  %325 = fmul float %324, 6.400000e+01
  %326 = call float @llvm.ceil.f32(float %325) #10
  %327 = fcmp ult float %326, 0xC1E0000000000000
  %328 = fcmp ugt float %326, 0x41DFFFFFE0000000
  %329 = fcmp ogt float %326, 0xC1E0000000000000
  %330 = select i1 %329, float %326, float 0xC1E0000000000000
  %331 = fptosi float %330 to i32
  %332 = select i1 %327, i32 0, i32 2147483647
  %333 = select i1 %328, i32 %332, i32 %331
  %334 = icmp slt i32 %315, %333
  %335 = select i1 %334, %struct.ContentRun* %295, %struct.ContentRun* %297
  %336 = getelementptr inbounds %struct.ContentRun, %struct.ContentRun* %295, i64 1
  %337 = icmp eq %struct.ContentRun* %336, %290
  br i1 %337, label %338, label %294

338:                                              ; preds = %294, %285
  %339 = phi %struct.ContentRun* [ %288, %285 ], [ %335, %294 ]
  %340 = getelementptr inbounds %struct.ContentRun, %struct.ContentRun* %339, i64 0, i32 1
  %341 = load i32, i32* %340, align 4
  %342 = add nsw i32 %341, 1
  store i32 %342, i32* %340, align 4
  %343 = add nsw i32 %287, 1
  %344 = icmp eq i32 %343, %282
  %345 = load i32, i32* %30, align 4
  br i1 %344, label %346, label %285

346:                                              ; preds = %338, %274
  %347 = phi i32 [ %283, %274 ], [ %345, %338 ]
  %348 = load %struct.ContentRun*, %struct.ContentRun** %28, align 8
  %349 = zext i32 %347 to i64
  %350 = getelementptr inbounds %struct.ContentRun, %struct.ContentRun* %348, i64 %349
  %351 = icmp ult i32 %347, 2
  br i1 %351, label %398, label %352

352:                                              ; preds = %346
  %353 = getelementptr inbounds %struct.ContentRun, %struct.ContentRun* %348, i64 1
  br label %354

354:                                              ; preds = %354, %352
  %355 = phi %struct.ContentRun* [ %396, %354 ], [ %353, %352 ]
  %356 = phi %struct.ContentRun* [ %355, %354 ], [ %348, %352 ]
  %357 = phi %struct.ContentRun* [ %395, %354 ], [ %348, %352 ]
  %358 = getelementptr inbounds %struct.ContentRun, %struct.ContentRun* %357, i64 0, i32 0, i32 0
  %359 = load i32, i32* %358, align 4
  %360 = sitofp i32 %359 to float
  %361 = fmul float %360, 1.562500e-02
  %362 = getelementptr inbounds %struct.ContentRun, %struct.ContentRun* %357, i64 0, i32 1
  %363 = load i32, i32* %362, align 4
  %364 = add nsw i32 %363, 1
  %365 = sitofp i32 %364 to float
  %366 = fdiv float %361, %365
  %367 = fmul float %366, 6.400000e+01
  %368 = call float @llvm.ceil.f32(float %367) #10
  %369 = fcmp ult float %368, 0xC1E0000000000000
  %370 = fcmp ugt float %368, 0x41DFFFFFE0000000
  %371 = fcmp ogt float %368, 0xC1E0000000000000
  %372 = select i1 %371, float %368, float 0xC1E0000000000000
  %373 = fptosi float %372 to i32
  %374 = select i1 %369, i32 0, i32 2147483647
  %375 = select i1 %370, i32 %374, i32 %373
  %376 = getelementptr inbounds %struct.ContentRun, %struct.ContentRun* %355, i64 0, i32 0, i32 0
  %377 = load i32, i32* %376, align 4
  %378 = sitofp i32 %377 to float
  %379 = fmul float %378, 1.562500e-02
  %380 = getelementptr inbounds %struct.ContentRun, %struct.ContentRun* %356, i64 1, i32 1
  %381 = load i32, i32* %380, align 4
  %382 = add nsw i32 %381, 1
  %383 = sitofp i32 %382 to float
  %384 = fdiv float %379, %383
  %385 = fmul float %384, 6.400000e+01
  %386 = call float @llvm.ceil.f32(float %385) #10
  %387 = fcmp ult float %386, 0xC1E0000000000000
  %388 = fcmp ugt float %386, 0x41DFFFFFE0000000
  %389 = fcmp ogt float %386, 0xC1E0000000000000
  %390 = select i1 %389, float %386, float 0xC1E0000000000000
  %391 = fptosi float %390 to i32
  %392 = select i1 %387, i32 0, i32 2147483647
  %393 = select i1 %388, i32 %392, i32 %391
  %394 = icmp slt i32 %375, %393
  %395 = select i1 %394, %struct.ContentRun* %355, %struct.ContentRun* %357
  %396 = getelementptr inbounds %struct.ContentRun, %struct.ContentRun* %355, i64 1
  %397 = icmp eq %struct.ContentRun* %396, %350
  br i1 %397, label %398, label %354

398:                                              ; preds = %354, %346
  %399 = phi %struct.ContentRun* [ %348, %346 ], [ %395, %354 ]
  %400 = getelementptr inbounds %struct.ContentRun, %struct.ContentRun* %399, i64 0, i32 0, i32 0
  %401 = load i32, i32* %400, align 4
  %402 = sitofp i32 %401 to float
  %403 = fmul float %402, 1.562500e-02
  %404 = getelementptr inbounds %struct.ContentRun, %struct.ContentRun* %399, i64 0, i32 1
  %405 = load i32, i32* %404, align 4
  %406 = add nsw i32 %405, 1
  %407 = sitofp i32 %406 to float
  %408 = fdiv float %403, %407
  %409 = fmul float %408, 6.400000e+01
  %410 = call float @llvm.ceil.f32(float %409) #10
  %411 = fcmp ult float %410, 0xC1E0000000000000
  %412 = fcmp ugt float %410, 0x41DFFFFFE0000000
  %413 = fcmp ogt float %410, 0xC1E0000000000000
  %414 = select i1 %413, float %410, float 0xC1E0000000000000
  %415 = fptosi float %414 to i32
  %416 = select i1 %411, i32 0, i32 2147483647
  %417 = select i1 %412, i32 %416, i32 %415
  br label %418

418:                                              ; preds = %270, %398
  %419 = phi i32 [ %417, %398 ], [ %272, %270 ]
  %420 = call i32 @_ZNK5blink23NGColumnLayoutAlgorithm24ConstrainColumnBlockSizeENS_10LayoutUnitE(%"class.blink::NGColumnLayoutAlgorithm"* %0, i32 %419)
  %421 = icmp eq %"class.blink::NGBlockBreakToken"* %241, null
  br i1 %421, label %435, label %422

422:                                              ; preds = %418
  %423 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %241, i64 0, i32 0, i32 1, i32 0
  %424 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %423, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %424) #10
  %425 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %423, i64 0, i32 0, i32 0
  %426 = load i32, i32* %425, align 4
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %428, label %435

428:                                              ; preds = %422
  %429 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %423, i64 -2
  %430 = bitcast %"class.base::RefCounted.1784"* %429 to %"class.blink::NGBreakToken"*
  %431 = bitcast %"class.base::RefCounted.1784"* %429 to void (%"class.blink::NGBreakToken"*)***
  %432 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %431, align 8
  %433 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %432, i64 1
  %434 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %433, align 8
  call void %434(%"class.blink::NGBreakToken"* nonnull %430) #10
  br label %435

435:                                              ; preds = %418, %422, %428
  %436 = load i32, i32* %30, align 4
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %439, label %438, !prof !4

438:                                              ; preds = %435
  store i32 0, i32* %30, align 4
  br label %439

439:                                              ; preds = %438, %435
  %440 = load %struct.ContentRun*, %struct.ContentRun** %28, align 8
  %441 = icmp eq %struct.ContentRun* %440, %58
  br i1 %441, label %443, label %442, !prof !2

442:                                              ; preds = %439
  call fastcc void @_ZN3WTF12VectorBufferIZN5blink23NGColumnLayoutAlgorithm32CalculateBalancedColumnBlockSizeERKNS1_11LogicalSizeEPKNS1_17NGBlockBreakTokenEE10ContentRunLj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS9_(%struct.ContentRun* %440) #10
  br label %443

443:                                              ; preds = %439, %442
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %22) #10
  %444 = load i32, i32* %20, align 8
  %445 = and i32 %444, 1
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %452, label %447

447:                                              ; preds = %443
  %448 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %19, align 8
  %449 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %448, null
  br i1 %449, label %452, label %450

450:                                              ; preds = %447
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %448) #10
  %451 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %448 to i8*
  call void @free(i8* %451) #10
  br label %452

452:                                              ; preds = %443, %447, %450
  %453 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %10, i64 0, i32 2
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %453) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #10
  ret i32 %420
}

declare void @_ZN5blink31CreateConstraintSpaceForColumnsERKNS_17NGConstraintSpaceENS_11LogicalSizeES3_bb(%"class.blink::NGConstraintSpace"* sret, %"class.blink::NGConstraintSpace"* dereferenceable(32), i64, i64, i1 zeroext, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink22NGBlockLayoutAlgorithm10SetBoxTypeENS_18NGPhysicalFragment9NGBoxTypeE(%"class.blink::NGBlockLayoutAlgorithm"*, i32) local_unnamed_addr #2

declare %"class.blink::NGLayoutResult"* @_ZN5blink22NGBlockLayoutAlgorithm6LayoutEv(%"class.blink::NGBlockLayoutAlgorithm"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink23NGColumnLayoutAlgorithm22StretchColumnBlockSizeENS_10LayoutUnitES1_(%"class.blink::NGColumnLayoutAlgorithm"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp slt i32 %1, 0
  %5 = select i1 %4, i32 -2147483648, i32 2147483647
  %6 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 %1) #10
  %7 = extractvalue { i32, i1 } %6, 1
  %8 = extractvalue { i32, i1 } %6, 0
  %9 = select i1 %7, i32 %5, i32 %8, !prof !4
  %10 = tail call i32 @_ZNK5blink23NGColumnLayoutAlgorithm24ConstrainColumnBlockSizeENS_10LayoutUnitE(%"class.blink::NGColumnLayoutAlgorithm"* %0, i32 %9)
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(16) %struct.ResultWithOffset* @_ZN3WTF6VectorIZN5blink23NGColumnLayoutAlgorithm9LayoutRowEPKNS1_17NGBlockBreakTokenEPNS1_13NGMarginStrutEE16ResultWithOffsetLj16ENS_18PartitionAllocatorEEixEj(%"class.WTF::Vector.2129"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2129", %"class.WTF::Vector.2129"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = icmp eq i32 %8, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  store i8* null, i8** %6, align 8
  br label %21

12:                                               ; preds = %1
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* %13, i8* %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  store i8* %16, i8** %6, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %3) #10
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %22 = getelementptr inbounds %"class.WTF::Vector.2129", %"class.WTF::Vector.2129"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %struct.ResultWithOffset*, %struct.ResultWithOffset** %22, align 8
  ret %struct.ResultWithOffset* %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23NGColumnLayoutAlgorithm26PropagateBaselineFromChildERKNS_21NGPhysicalBoxFragmentENS_10LayoutUnitE(%"class.blink::NGColumnLayoutAlgorithm"* nocapture, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 35
  %5 = bitcast %"class.absl::optional.1636"* %4 to i64*
  %6 = load i64, i64* %5, align 4
  %7 = trunc i64 %6 to i8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %60

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 3
  %11 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %11, i64 0, i32 3, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = trunc i32 %13 to i16
  %15 = icmp sgt i16 %14, -1
  br i1 %15, label %16, label %60

16:                                               ; preds = %9
  %17 = lshr i32 %13, 4
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 7
  %20 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %1, i64 0, i32 0, i32 1
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %1, i64 0, i32 0, i32 3
  %23 = bitcast i24* %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = lshr i32 %24, 10
  %26 = and i32 %25, 3
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 0, i32 5, i32 0
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  br label %33

31:                                               ; preds = %16
  %32 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %21, i32 %26) #10
  br label %33

33:                                               ; preds = %31, %28
  %34 = phi %"class.blink::ComputedStyle"* [ %30, %28 ], [ %32, %31 ]
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8
  %38 = lshr i160 %37, 102
  %39 = trunc i160 %38 to i8
  %40 = and i8 %39, 3
  %41 = icmp eq i8 %19, %40
  br i1 %41, label %42, label %60

42:                                               ; preds = %33
  %43 = load i32, i32* %23, align 8
  %44 = and i32 %43, 4194304
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %60, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %1, i64 0, i32 3, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %48, 0
  %50 = select i1 %49, i32 -2147483648, i32 2147483647
  %51 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 %48) #10
  %52 = extractvalue { i32, i1 } %51, 1
  %53 = extractvalue { i32, i1 } %51, 0
  %54 = select i1 %52, i32 %50, i32 %53, !prof !4
  %55 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 35, i32 0, i32 0, i32 0, i32 0
  %56 = load i8, i8* %55, align 4, !range !5
  %57 = icmp eq i8 %56, 0
  %58 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 35, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %54, i32* %58, align 4
  br i1 %57, label %59, label %60

59:                                               ; preds = %46
  store i8 1, i8* %55, align 4
  br label %60

60:                                               ; preds = %42, %33, %3, %46, %59, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23NGColumnLayoutAlgorithm27AttemptToPositionListMarkerERKNS_21NGPhysicalBoxFragmentENS_10LayoutUnitE(%"class.blink::NGColumnLayoutAlgorithm"*, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::LayoutUnit", align 4
  %5 = alloca %"class.blink::NGUnpositionedListMarker", align 8
  %6 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  store i32 %2, i32* %6, align 4
  %7 = bitcast %"class.blink::NGUnpositionedListMarker"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4
  %9 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 13
  %10 = bitcast %"class.blink::NGUnpositionedListMarker"* %9 to i64*
  %11 = bitcast %"class.blink::NGUnpositionedListMarker"* %5 to i64*
  %12 = load i64, i64* %10, align 8
  store i64 %12, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %44, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1
  %16 = bitcast %"class.blink::NGBlockNode"* %15 to %"class.blink::LayoutObject"**
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = tail call i32 @_ZNK5blink13ComputedStyle15GetFontBaselineEv(%"class.blink::ComputedStyle"* %19) #10
  %21 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 3
  %22 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %1, i64 0, i32 0
  %24 = call i64 @_ZNK5blink24NGUnpositionedListMarker24ContentAlignmentBaselineERKNS_17NGConstraintSpaceENS_12FontBaselineERKNS_18NGPhysicalFragmentE(%"class.blink::NGUnpositionedListMarker"* nonnull %5, %"class.blink::NGConstraintSpace"* dereferenceable(32) %22, i32 %20, %"class.blink::NGPhysicalFragment"* dereferenceable(48) %23) #10
  %25 = trunc i64 %24 to i8
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %44, label %27

27:                                               ; preds = %14
  %28 = lshr i64 %24, 32
  %29 = trunc i64 %28 to i32
  %30 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %21, align 8
  %31 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %33 = call %"class.blink::NGLayoutResult"* @_ZNK5blink24NGUnpositionedListMarker6LayoutERKNS_17NGConstraintSpaceERKNS_13ComputedStyleENS_12FontBaselineE(%"class.blink::NGUnpositionedListMarker"* nonnull %5, %"class.blink::NGConstraintSpace"* dereferenceable(32) %30, %"class.blink::ComputedStyle"* dereferenceable(104) %32, i32 %20) #10
  %34 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %21, align 8
  %35 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 3
  call void @_ZNK5blink24NGUnpositionedListMarker8AddToBoxERKNS_17NGConstraintSpaceENS_12FontBaselineERKNS_18NGPhysicalFragmentERKNS_10NGBoxStrutERKNS_14NGLayoutResultENS_10LayoutUnitEPSE_PNS_20NGBoxFragmentBuilderE(%"class.blink::NGUnpositionedListMarker"* nonnull %5, %"class.blink::NGConstraintSpace"* dereferenceable(32) %34, i32 %20, %"class.blink::NGPhysicalFragment"* dereferenceable(48) %23, %"struct.blink::NGBoxStrut"* dereferenceable(16) %35, %"class.blink::NGLayoutResult"* dereferenceable(64) %33, i32 %29, %"class.blink::LayoutUnit"* nonnull %4, %"class.blink::NGBoxFragmentBuilder"* %8) #10
  store i64 0, i64* %10, align 8
  %36 = icmp eq %"class.blink::NGLayoutResult"* %33, null
  br i1 %36, label %44, label %37

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %33, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %38) #10
  %39 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %37
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %33) #10
  %43 = bitcast %"class.blink::NGLayoutResult"* %33 to i8*
  call void @free(i8* %43) #10
  br label %44

44:                                               ; preds = %14, %3, %27, %37, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

declare void @_ZN5blink20NGBoxFragmentBuilder8AddChildERKNS_18NGPhysicalFragmentERKNS_13LogicalOffsetEPKNS_12LayoutInlineEPKNS_13NGMarginStrutEbN4absl8optionalIS4_EENSE_INS_10LayoutUnitEEE(%"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGPhysicalFragment"* dereferenceable(48), %"struct.blink::LogicalOffset"* dereferenceable(8), %"class.blink::LayoutInline"*, %"struct.blink::NGMarginStrut"*, i1 zeroext, %"class.absl::optional.2134"* byval(%"class.absl::optional.2134") align 8, i64) local_unnamed_addr #2

declare void @_ZNK5blink11NGBlockNode15AddColumnResultE13scoped_refptrIKNS_14NGLayoutResultEEPKNS_17NGBlockBreakTokenE(%"class.blink::NGBlockNode"*, %"class.blink::NGLayoutResult"*, %"class.blink::NGBlockBreakToken"*) local_unnamed_addr #2

declare void @_ZN5blink13NGMarginStrut6AppendERKNS_10LayoutUnitEb(%"struct.blink::NGMarginStrut"*, %"class.blink::LayoutUnit"* dereferenceable(4), i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23NGColumnLayoutAlgorithm31CreateConstraintSpaceForSpannerERKNS_11NGBlockNodeENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* noalias nocapture sret, %"class.blink::NGColumnLayoutAlgorithm"* nocapture readonly, %"class.blink::NGBlockNode"* dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::NGConstraintSpaceBuilder", align 8
  %6 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %5, i64 0, i32 0, i32 3
  %8 = bitcast %"struct.blink::NGConstraintSpace::Bitfields"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %1, i64 0, i32 0, i32 4, i32 0, i32 3
  %10 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %1, i64 0, i32 0, i32 1
  %12 = bitcast %"class.blink::NGBlockNode"* %11 to %"class.blink::LayoutObject"**
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = lshr i160 %18, 102
  %20 = trunc i160 %19 to i16
  %21 = and i16 %20, 3
  %22 = lshr i160 %18, 108
  %23 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %10, i64 0, i32 3, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 -64, i32* %25, align 8
  %26 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %5, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 -64, i32* %26, align 4
  %27 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %5, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %5, i64 0, i32 0, i32 3, i32 0
  %29 = shl nuw nsw i16 %21, 4
  %30 = trunc i160 %22 to i16
  %31 = and i16 %30, 128
  %32 = bitcast %union.anon.1634* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #10
  %33 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %5, i64 0, i32 1, i32 0
  store i32 -64, i32* %33, align 8
  %34 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %5, i64 0, i32 2
  %35 = and i32 %24, 112
  %36 = icmp ne i32 %35, 0
  %37 = icmp eq i16 %21, 0
  %38 = xor i1 %36, %37
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %34, align 4
  %40 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %5, i64 0, i32 3
  store i8 1, i8* %40, align 1
  %41 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %5, i64 0, i32 4
  store i8 0, i8* %41, align 2
  %42 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %5, i64 0, i32 5
  store i8 1, i8* %42, align 1
  %43 = select i1 %38, i32 0, i32 2048
  %44 = or i16 %31, %29
  %45 = or i16 %44, 1024
  %46 = zext i16 %45 to i32
  %47 = or i32 %43, %46
  store i32 %47, i32* %28, align 8
  %48 = load i32, i32* %23, align 8
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %69, label %51

51:                                               ; preds = %4
  %52 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %10, i64 0, i32 1, i32 0
  %53 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %52, align 8
  %54 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %53, i64 0, i32 6
  %55 = load i16, i16* %54, align 8
  %56 = and i16 %55, 512
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %69, label %58

58:                                               ; preds = %51
  %59 = tail call noalias i8* @malloc(i64 88) #10
  %60 = getelementptr inbounds i8, i8* %59, i64 24
  %61 = bitcast i8* %60 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 24, i1 false) #10
  store i32 -64, i32* %61, align 4
  %62 = getelementptr inbounds i8, i8* %59, i64 28
  %63 = bitcast i8* %62 to i32*
  store i32 0, i32* %63, align 4
  %64 = getelementptr inbounds i8, i8* %59, i64 32
  %65 = bitcast i8* %64 to i16*
  %66 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %5, i64 0, i32 0, i32 1, i32 0
  %67 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %66 to i8**
  store i8* %59, i8** %67, align 8
  %68 = or i32 %47, 1
  store i32 %68, i32* %28, align 8
  store i16 512, i16* %65, align 8
  br label %69

69:                                               ; preds = %4, %51, %58
  %70 = phi i32 [ %47, %4 ], [ %47, %51 ], [ %68, %58 ]
  %71 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %1, i64 0, i32 0, i32 4, i32 4
  %72 = bitcast %"struct.blink::LogicalSize"* %71 to i64*
  %73 = load i64, i64* %72, align 4
  %74 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %5 to i64*
  store i64 %73, i64* %74, align 8
  %75 = lshr i64 %73, 32
  %76 = trunc i64 %75 to i32
  br i1 %38, label %81, label %77, !prof !2

77:                                               ; preds = %69
  %78 = trunc i64 %73 to i32
  store i32 %76, i32* %25, align 8
  store i32 %78, i32* %26, align 4
  %79 = icmp eq i32 %76, -64
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  store i32 -64, i32* %25, align 8
  br label %81

81:                                               ; preds = %80, %77, %69
  %82 = phi i32 [ -393217, %69 ], [ -1572865, %77 ], [ -1572865, %80 ]
  %83 = phi i32 [ 131072, %69 ], [ 524288, %77 ], [ 524288, %80 ]
  %84 = and i32 %70, %82
  %85 = or i32 %84, %83
  store i32 %85, i32* %28, align 8
  call void @_ZN5blink24NGConstraintSpaceBuilder27SetPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"* nonnull %5, i64 %73) #10
  %86 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %9, align 8
  %87 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %86, i64 0, i32 3, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = and i32 %88, 32768
  %90 = load i32, i32* %28, align 8
  %91 = and i32 %90, -32769
  %92 = or i32 %91, %89
  store i32 %92, i32* %28, align 8
  %93 = load i32, i32* %87, align 8
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %81
  %97 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %86, i64 0, i32 1, i32 0
  %98 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %97, align 8
  %99 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %98, i64 0, i32 6
  %100 = load i16, i16* %99, align 8
  %101 = and i16 %100, 384
  %102 = icmp eq i16 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %96
  %104 = bitcast %"class.blink::NGBlockNode"* %2 to %"class.blink::NGLayoutInputNode"*
  call void @_ZN5blink33SetupSpaceBuilderForFragmentationERKNS_17NGConstraintSpaceERKNS_17NGLayoutInputNodeENS_10LayoutUnitEPNS_24NGConstraintSpaceBuilderEb(%"class.blink::NGConstraintSpace"* dereferenceable(32) %86, %"class.blink::NGLayoutInputNode"* dereferenceable(16) %104, i32 %3, %"class.blink::NGConstraintSpaceBuilder"* nonnull %5, i1 zeroext true) #10
  %105 = load i32, i32* %28, align 8, !noalias !14
  br label %106

106:                                              ; preds = %96, %81, %103
  %107 = phi i32 [ %92, %96 ], [ %92, %81 ], [ %105, %103 ]
  %108 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %109 = load i64, i64* %74, align 8, !noalias !14
  store i64 %109, i64* %108, align 8, !alias.scope !14
  %110 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 2
  %111 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %5, i64 0, i32 0, i32 2
  %112 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %111, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.blink::NGExclusionSpace"* %111 to i64*
  %114 = load i64, i64* %113, align 8, !noalias !14
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %112, align 8, !noalias !14
  %115 = bitcast %"class.blink::NGExclusionSpace"* %110 to i64*
  store i64 %114, i64* %115, align 8, !alias.scope !14
  %116 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  store i32 %107, i32* %116, align 8, !alias.scope !14
  %117 = and i32 %107, 1
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %124

119:                                              ; preds = %106
  %120 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1
  %121 = bitcast %union.anon.1634* %27 to i64*
  %122 = bitcast %union.anon.1634* %120 to i64*
  %123 = load i64, i64* %121, align 8, !noalias !14
  store i64 %123, i64* %122, align 8, !alias.scope !14
  br label %130

124:                                              ; preds = %106
  %125 = getelementptr inbounds %union.anon.1634, %union.anon.1634* %27, i64 0, i32 0
  %126 = bitcast %union.anon.1634* %27 to i64*
  %127 = load i64, i64* %126, align 8, !noalias !14
  %128 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1
  %129 = bitcast %union.anon.1634* %128 to i64*
  store i64 %127, i64* %129, align 8, !alias.scope !14
  store %"struct.blink::NGConstraintSpace::RareData"* null, %"struct.blink::NGConstraintSpace::RareData"** %125, align 8, !noalias !14
  br label %130

130:                                              ; preds = %124, %119
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %111) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #10
  ret void
}

declare %"class.blink::NGEarlyBreak"* @_ZN5blink22EnterEarlyBreakInChildERKNS_11NGBlockNodeERKNS_12NGEarlyBreakE(%"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGEarlyBreak"* dereferenceable(32)) local_unnamed_addr #2

declare %"class.blink::NGLayoutResult"* @_ZNK5blink11NGBlockNode6LayoutERKNS_17NGConstraintSpaceEPKNS_17NGBlockBreakTokenEPKNS_12NGEarlyBreakE(%"class.blink::NGBlockNode"*, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockBreakToken"*, %"class.blink::NGEarlyBreak"*) local_unnamed_addr #2

declare i32 @_ZN5blink24BreakBeforeChildIfNeededERKNS_17NGConstraintSpaceENS_17NGLayoutInputNodeERKNS_14NGLayoutResultENS_10LayoutUnitEbPNS_20NGBoxFragmentBuilderE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::LayoutBox"*, i64, %"class.blink::NGLayoutResult"* dereferenceable(64), i32, i1 zeroext, %"class.blink::NGBoxFragmentBuilder"*) local_unnamed_addr #2

declare void @_ZN5blink20ResolveInlineMarginsERKNS_13ComputedStyleES2_NS_10LayoutUnitES3_PNS_10NGBoxStrutE(%"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::ComputedStyle"* dereferenceable(104), i32, i32, %"struct.blink::NGBoxStrut"*) local_unnamed_addr #2

declare void @_ZN5blink20NGBoxFragmentBuilder9AddResultERKNS_14NGLayoutResultENS_13LogicalOffsetEN4absl8optionalIS4_EEb(%"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGLayoutResult"* dereferenceable(64), i64, i64, i32, i1 zeroext) local_unnamed_addr #2

declare i32 @_ZNK5blink13ComputedStyle15GetFontBaselineEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #2

declare i64 @_ZNK5blink24NGUnpositionedListMarker24ContentAlignmentBaselineERKNS_17NGConstraintSpaceENS_12FontBaselineERKNS_18NGPhysicalFragmentE(%"class.blink::NGUnpositionedListMarker"*, %"class.blink::NGConstraintSpace"* dereferenceable(32), i32, %"class.blink::NGPhysicalFragment"* dereferenceable(48)) local_unnamed_addr #2

declare %"class.blink::NGLayoutResult"* @_ZNK5blink24NGUnpositionedListMarker6LayoutERKNS_17NGConstraintSpaceERKNS_13ComputedStyleENS_12FontBaselineE(%"class.blink::NGUnpositionedListMarker"*, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #2

declare void @_ZNK5blink24NGUnpositionedListMarker8AddToBoxERKNS_17NGConstraintSpaceENS_12FontBaselineERKNS_18NGPhysicalFragmentERKNS_10NGBoxStrutERKNS_14NGLayoutResultENS_10LayoutUnitEPSE_PNS_20NGBoxFragmentBuilderE(%"class.blink::NGUnpositionedListMarker"*, %"class.blink::NGConstraintSpace"* dereferenceable(32), i32, %"class.blink::NGPhysicalFragment"* dereferenceable(48), %"struct.blink::NGBoxStrut"* dereferenceable(16), %"class.blink::NGLayoutResult"* dereferenceable(64), i32, %"class.blink::LayoutUnit"*, %"class.blink::NGBoxFragmentBuilder"*) local_unnamed_addr #2

declare void @_ZNK5blink24NGUnpositionedListMarker24AddToBoxWithoutLineBoxesERKNS_17NGConstraintSpaceENS_12FontBaselineERKNS_14NGLayoutResultEPNS_20NGBoxFragmentBuilderEPNS_10LayoutUnitE(%"class.blink::NGUnpositionedListMarker"*, %"class.blink::NGConstraintSpace"* dereferenceable(32), i32, %"class.blink::NGLayoutResult"* dereferenceable(64), %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::LayoutUnit"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23NGColumnLayoutAlgorithm33CreateConstraintSpaceForBalancingERKNS_11LogicalSizeE(%"class.blink::NGConstraintSpace"* noalias nocapture sret, %"class.blink::NGColumnLayoutAlgorithm"* nocapture readonly, %"struct.blink::LogicalSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::NGConstraintSpaceBuilder", align 8
  %5 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 3
  %7 = bitcast %"struct.blink::NGConstraintSpace::Bitfields"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %1, i64 0, i32 0, i32 4, i32 0, i32 3
  %9 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %1, i64 0, i32 0, i32 1
  %11 = bitcast %"class.blink::NGBlockNode"* %10 to %"class.blink::LayoutObject"**
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 5, i32 0
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = lshr i160 %17, 102
  %19 = trunc i160 %18 to i16
  %20 = and i16 %19, 3
  %21 = lshr i160 %17, 108
  %22 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %9, i64 0, i32 3, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 -64, i32* %24, align 8
  %25 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 -64, i32* %25, align 4
  %26 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 3, i32 0
  %28 = shl nuw nsw i16 %20, 4
  %29 = trunc i160 %21 to i16
  %30 = and i16 %29, 128
  %31 = bitcast %union.anon.1634* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #10
  %32 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 1, i32 0
  store i32 -64, i32* %32, align 8
  %33 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 2
  %34 = and i32 %23, 112
  %35 = icmp ne i32 %34, 0
  %36 = icmp eq i16 %20, 0
  %37 = xor i1 %35, %36
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %33, align 4
  %39 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 3
  store i8 1, i8* %39, align 1
  %40 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 4
  store i8 0, i8* %40, align 2
  %41 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 5
  store i8 1, i8* %41, align 1
  %42 = select i1 %37, i32 0, i32 2048
  %43 = or i16 %30, %28
  %44 = or i16 %43, 1024
  %45 = zext i16 %44 to i32
  %46 = or i32 %42, %45
  store i32 %46, i32* %27, align 8
  %47 = load i32, i32* %22, align 8
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %70, label %50

50:                                               ; preds = %3
  %51 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %9, i64 0, i32 1, i32 0
  %52 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %51, align 8
  %53 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %52, i64 0, i32 6
  %54 = load i16, i16* %53, align 8
  %55 = and i16 %54, 512
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %70, label %57

57:                                               ; preds = %50
  %58 = tail call noalias i8* @malloc(i64 88) #10
  %59 = getelementptr inbounds i8, i8* %58, i64 24
  %60 = bitcast i8* %59 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %58, i8 0, i64 24, i1 false) #10
  store i32 -64, i32* %60, align 4
  %61 = getelementptr inbounds i8, i8* %58, i64 28
  %62 = bitcast i8* %61 to i32*
  store i32 0, i32* %62, align 4
  %63 = getelementptr inbounds i8, i8* %58, i64 32
  %64 = bitcast i8* %63 to i16*
  %65 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 1, i32 0
  %66 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %65 to i8**
  store i8* %58, i8** %66, align 8
  %67 = or i32 %46, 1
  store i32 %67, i32* %27, align 8
  store i16 512, i16* %64, align 8
  %68 = bitcast i8* %58 to %"struct.blink::NGConstraintSpace::RareData"*
  %69 = ptrtoint i8* %58 to i64
  br label %70

70:                                               ; preds = %3, %50, %57
  %71 = phi i64 [ 0, %3 ], [ 0, %50 ], [ %69, %57 ]
  %72 = phi %"struct.blink::NGConstraintSpace::RareData"* [ null, %3 ], [ null, %50 ], [ %68, %57 ]
  %73 = phi i32 [ %46, %3 ], [ %46, %50 ], [ %67, %57 ]
  %74 = and i32 %73, 1
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %70
  %77 = tail call noalias i8* @malloc(i64 88) #10
  %78 = getelementptr inbounds i8, i8* %77, i64 16
  %79 = bitcast i8* %78 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %77, i8 0, i64 16, i1 false) #10
  store i64 %71, i64* %79, align 8
  %80 = getelementptr inbounds i8, i8* %77, i64 24
  %81 = bitcast i8* %80 to i32*
  store i32 -64, i32* %81, align 4
  %82 = getelementptr inbounds i8, i8* %77, i64 28
  %83 = bitcast i8* %82 to i32*
  store i32 0, i32* %83, align 4
  %84 = getelementptr inbounds i8, i8* %77, i64 32
  %85 = bitcast i8* %84 to i16*
  store i16 0, i16* %85, align 8
  %86 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 1, i32 0
  %87 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %86 to i8**
  store i8* %77, i8** %87, align 8
  %88 = or i32 %73, 1
  store i32 %88, i32* %27, align 8
  %89 = bitcast i8* %77 to %"struct.blink::NGConstraintSpace::RareData"*
  br label %90

90:                                               ; preds = %70, %76
  %91 = phi i32 [ %88, %76 ], [ %73, %70 ]
  %92 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %89, %76 ], [ %72, %70 ]
  %93 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %92, i64 0, i32 6
  %94 = load i16, i16* %93, align 8
  %95 = and i16 %94, -385
  %96 = or i16 %95, 256
  store i16 %96, i16* %93, align 8
  %97 = getelementptr inbounds %"struct.blink::LogicalSize", %"struct.blink::LogicalSize"* %2, i64 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i64
  %100 = or i64 %99, -274877906944
  %101 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %4 to i64*
  store i64 %100, i64* %101, align 8
  br i1 %37, label %103, label %102, !prof !2

102:                                              ; preds = %90
  store i32 %98, i32* %25, align 4
  store i32 -64, i32* %24, align 8
  br label %103

103:                                              ; preds = %90, %102
  %104 = phi i32 [ -1572865, %102 ], [ -393217, %90 ]
  %105 = phi i32 [ 524288, %102 ], [ 131072, %90 ]
  %106 = and i32 %91, %104
  %107 = or i32 %106, %105
  store i32 %107, i32* %27, align 8
  %108 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %1, i64 0, i32 2, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %1, i64 0, i32 0, i32 4, i32 4, i32 1, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i64
  %113 = shl nuw i64 %112, 32
  %114 = zext i32 %109 to i64
  %115 = or i64 %113, %114
  call void @_ZN5blink24NGConstraintSpaceBuilder27SetPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"* nonnull %4, i64 %115) #10
  %116 = load i32, i32* %27, align 8
  %117 = or i32 %116, 512
  store i32 %117, i32* %27, align 8
  %118 = and i32 %116, 1
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %124, label %120

120:                                              ; preds = %103
  %121 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 1, i32 0
  %122 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %121, align 8
  %123 = ptrtoint %"struct.blink::NGConstraintSpace::RareData"* %122 to i64
  br label %141

124:                                              ; preds = %103
  %125 = call noalias i8* @malloc(i64 88) #10
  %126 = bitcast %union.anon.1634* %26 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds i8, i8* %125, i64 16
  %129 = bitcast i8* %128 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 4 %125, i8 0, i64 16, i1 false) #10
  store i64 %127, i64* %129, align 8
  %130 = getelementptr inbounds i8, i8* %125, i64 24
  %131 = bitcast i8* %130 to i32*
  store i32 -64, i32* %131, align 4
  %132 = getelementptr inbounds i8, i8* %125, i64 28
  %133 = bitcast i8* %132 to i32*
  store i32 0, i32* %133, align 4
  %134 = getelementptr inbounds i8, i8* %125, i64 32
  %135 = bitcast i8* %134 to i16*
  store i16 0, i16* %135, align 8
  %136 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 1, i32 0
  %137 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %136 to i8**
  store i8* %125, i8** %137, align 8
  %138 = or i32 %116, 513
  store i32 %138, i32* %27, align 8
  %139 = bitcast i8* %125 to %"struct.blink::NGConstraintSpace::RareData"*
  %140 = ptrtoint i8* %125 to i64
  br label %141

141:                                              ; preds = %120, %124
  %142 = phi i64 [ %123, %120 ], [ %140, %124 ]
  %143 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %122, %120 ], [ %139, %124 ]
  %144 = phi i32 [ %117, %120 ], [ %138, %124 ]
  %145 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %143, i64 0, i32 6
  %146 = load i16, i16* %145, align 8
  %147 = or i16 %146, 1024
  store i16 %147, i16* %145, align 8
  %148 = and i32 %144, 1
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %165

150:                                              ; preds = %141
  %151 = call noalias i8* @malloc(i64 88) #10
  %152 = getelementptr inbounds i8, i8* %151, i64 16
  %153 = bitcast i8* %152 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 4 %151, i8 0, i64 16, i1 false) #10
  store i64 %142, i64* %153, align 8
  %154 = getelementptr inbounds i8, i8* %151, i64 24
  %155 = bitcast i8* %154 to i32*
  store i32 -64, i32* %155, align 4
  %156 = getelementptr inbounds i8, i8* %151, i64 28
  %157 = bitcast i8* %156 to i32*
  store i32 0, i32* %157, align 4
  %158 = getelementptr inbounds i8, i8* %151, i64 32
  %159 = bitcast i8* %158 to i16*
  store i16 0, i16* %159, align 8
  %160 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 1, i32 0
  %161 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %160 to i8**
  store i8* %151, i8** %161, align 8
  %162 = or i32 %144, 1
  store i32 %162, i32* %27, align 8
  %163 = bitcast i8* %151 to %"struct.blink::NGConstraintSpace::RareData"*
  %164 = ptrtoint i8* %151 to i64
  br label %165

165:                                              ; preds = %141, %150
  %166 = phi i64 [ %164, %150 ], [ %142, %141 ]
  %167 = phi i32 [ %162, %150 ], [ %144, %141 ]
  %168 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %163, %150 ], [ %143, %141 ]
  %169 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %168, i64 0, i32 6
  %170 = load i16, i16* %169, align 8
  %171 = or i16 %170, 512
  store i16 %171, i16* %169, align 8
  %172 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %173 = load i64, i64* %101, align 8, !noalias !17
  store i64 %173, i64* %172, align 8, !alias.scope !17
  %174 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 2
  %175 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 2
  %176 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %175, i64 0, i32 0, i32 0, i32 0, i32 0
  %177 = bitcast %"class.blink::NGExclusionSpace"* %175 to i64*
  %178 = load i64, i64* %177, align 8, !noalias !17
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %176, align 8, !noalias !17
  %179 = bitcast %"class.blink::NGExclusionSpace"* %174 to i64*
  store i64 %178, i64* %179, align 8, !alias.scope !17
  %180 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  store i32 %167, i32* %180, align 8, !alias.scope !17
  %181 = and i32 %167, 1
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %186

183:                                              ; preds = %165
  %184 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1
  %185 = bitcast %union.anon.1634* %184 to i64*
  store i64 %166, i64* %185, align 8, !alias.scope !17
  br label %190

186:                                              ; preds = %165
  %187 = getelementptr inbounds %union.anon.1634, %union.anon.1634* %26, i64 0, i32 0
  %188 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1
  %189 = bitcast %union.anon.1634* %188 to i64*
  store i64 %166, i64* %189, align 8, !alias.scope !17
  store %"struct.blink::NGConstraintSpace::RareData"* null, %"struct.blink::NGConstraintSpace::RareData"** %187, align 8, !noalias !17
  br label %190

190:                                              ; preds = %186, %183
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %175) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blink12_GLOBAL__N_131CalculateColumnContentBlockSizeERKNS_18NGPhysicalFragmentENS_20WritingDirectionModeE(%"class.blink::NGPhysicalFragment"* dereferenceable(48), i16) unnamed_addr #0 {
  %3 = alloca %"class.blink::WritingModeConverter", align 4
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"struct.blink::PhysicalSize"*
  %8 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %3, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #10
  %9 = bitcast %"class.blink::WritingModeConverter"* %3 to i32*
  store i32 -1431655766, i32* %9, align 4
  %10 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %0, i64 0, i32 2
  %11 = bitcast %"struct.blink::PhysicalSize"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::WritingModeConverter"* %3 to i16*
  store i16 %1, i16* %13, align 4
  %14 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %3, i64 0, i32 1
  %15 = bitcast %"struct.blink::PhysicalSize"* %14 to i64*
  store i64 %12, i64* %15, align 4
  %16 = tail call { i64, %"struct.blink::NGLink"* } @_ZNK5blink18NGPhysicalFragment8ChildrenEv(%"class.blink::NGPhysicalFragment"* %0) #10
  %17 = extractvalue { i64, %"struct.blink::NGLink"* } %16, 0
  %18 = extractvalue { i64, %"struct.blink::NGLink"* } %16, 1
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %18, i64 %17
  %22 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"struct.blink::NGLink"* %18, %"struct.blink::NGLink"* %18, %"struct.blink::NGLink"* %21) #10
  %23 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %5, i64 0, i32 1
  %25 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"struct.blink::NGLink"* %18, %"struct.blink::NGLink"* %21, %"struct.blink::NGLink"* %21) #10
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #10
  %26 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %20, align 8
  %27 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %24, align 8
  %28 = icmp eq %"struct.blink::NGLink"* %26, %27
  br i1 %28, label %32, label %29

29:                                               ; preds = %2
  %30 = bitcast i64* %6 to i8*
  %31 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %3, i64 0, i32 0, i32 1
  br label %34

32:                                               ; preds = %81, %2
  %33 = phi i32 [ 0, %2 ], [ %90, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #10
  ret i32 %33

34:                                               ; preds = %29, %81
  %35 = phi i32 [ 0, %29 ], [ %90, %81 ]
  %36 = call dereferenceable(16) %"struct.blink::NGLink"* @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %4)
  %37 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %36, i64 0, i32 0
  %38 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %38, i64 0, i32 2
  %40 = bitcast %"struct.blink::PhysicalSize"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = lshr i64 %41, 32
  %43 = load i8, i8* %8, align 4
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %44, i64 %42, i64 %41
  %46 = trunc i64 %45 to i32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  store i64 %41, i64* %6, align 8
  %47 = load i8, i8* %31, align 1
  %48 = or i8 %43, %47
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %36, i64 0, i32 1, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  br label %58

53:                                               ; preds = %34
  %54 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %36, i64 0, i32 1
  %55 = call i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* nonnull %3, %"struct.blink::PhysicalOffset"* dereferenceable(8) %54, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %7) #10
  %56 = lshr i64 %55, 32
  %57 = trunc i64 %56 to i32
  br label %58

58:                                               ; preds = %53, %50
  %59 = phi i32 [ %52, %50 ], [ %57, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  %60 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %37, align 8
  %61 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %60, i64 0, i32 3
  %62 = bitcast i24* %61 to i32*
  %63 = load i32, i32* %62, align 8
  %64 = and i32 %63, 64
  %65 = icmp eq i32 %64, 0
  %66 = and i32 %63, 960
  %67 = icmp ne i32 %66, 256
  %68 = and i1 %65, %67
  br i1 %68, label %69, label %77

69:                                               ; preds = %58
  %70 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %60, i64 0, i32 1
  %71 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %71, i64 0, i32 4
  %73 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %72 to i96*
  %74 = load i96, i96* %73, align 4
  %75 = and i96 %74, 8589934592
  %76 = icmp eq i96 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %69, %58
  %78 = call fastcc i32 @_ZN5blink12_GLOBAL__N_131CalculateColumnContentBlockSizeERKNS_18NGPhysicalFragmentENS_20WritingDirectionModeE(%"class.blink::NGPhysicalFragment"* dereferenceable(48) %60, i16 %1)
  %79 = icmp sgt i32 %78, %46
  %80 = select i1 %79, i32 %78, i32 %46
  br label %81

81:                                               ; preds = %69, %77
  %82 = phi i32 [ %46, %69 ], [ %80, %77 ]
  %83 = icmp slt i32 %82, 0
  %84 = select i1 %83, i32 -2147483648, i32 2147483647
  %85 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %82) #10
  %86 = extractvalue { i32, i1 } %85, 1
  %87 = extractvalue { i32, i1 } %85, 0
  %88 = select i1 %86, i32 %84, i32 %87, !prof !4
  %89 = icmp slt i32 %35, %88
  %90 = select i1 %89, i32 %88, i32 %35
  %91 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %4)
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #10
  %92 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %20, align 8
  %93 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %24, align 8
  %94 = icmp eq %"struct.blink::NGLink"* %92, %93
  br i1 %94, label %32, label %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink23NGColumnLayoutAlgorithm24ConstrainColumnBlockSizeENS_10LayoutUnitE(%"class.blink::NGColumnLayoutAlgorithm"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %6 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 7
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 3
  %10 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %9, align 8
  br i1 %8, label %53, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %10, i64 0, i32 3, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %41, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %10, i64 0, i32 1, i32 0
  %18 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %17, align 8
  %19 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %18, i64 0, i32 6
  %20 = load i16, i16* %19, align 8
  %21 = and i16 %20, 384
  switch i16 %21, label %26 [
    i16 0, label %41
    i16 256, label %22
  ]

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %18, i64 0, i32 4, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, -64
  br i1 %25, label %41, label %29

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %18, i64 0, i32 4, i32 0
  %28 = load i32, i32* %27, align 8
  br label %29

29:                                               ; preds = %26, %22
  %30 = phi i32 [ %28, %26 ], [ %24, %22 ]
  %31 = icmp sgt i32 %30, 64
  %32 = select i1 %31, i32 %30, i32 64
  %33 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %18, i64 0, i32 5, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %34, -1
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %32, i32 %34) #10
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !4
  br label %41

41:                                               ; preds = %11, %16, %22, %29
  %42 = phi i32 [ %40, %29 ], [ -64, %22 ], [ -64, %11 ], [ -64, %16 ]
  %43 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 5, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %44, -1
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %42, i32 %44) #10
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !4
  %51 = icmp slt i32 %50, %1
  %52 = select i1 %51, i32 %50, i32 %1
  store i32 %52, i32* %3, align 4
  br label %53

53:                                               ; preds = %2, %41
  %54 = phi i32 [ %52, %41 ], [ %1, %2 ]
  %55 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 6
  %56 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp slt i32 %54, %57
  %59 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %60 = select i1 %58, %"class.blink::LayoutUnit"* %55, %"class.blink::LayoutUnit"* %59
  %61 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %60, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 3, i32 2, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 3, i32 3, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp slt i32 %66, 0
  %68 = select i1 %67, i32 -2147483648, i32 2147483647
  %69 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %64, i32 %66) #10
  %70 = extractvalue { i32, i1 } %69, 1
  %71 = extractvalue { i32, i1 } %69, 0
  %72 = select i1 %70, i32 %68, i32 %71, !prof !4
  %73 = icmp slt i32 %72, 0
  %74 = select i1 %73, i32 -2147483648, i32 2147483647
  %75 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %62, i32 %72) #10
  %76 = extractvalue { i32, i1 } %75, 1
  %77 = extractvalue { i32, i1 } %75, 0
  %78 = select i1 %76, i32 %74, i32 %77, !prof !4
  store i32 %78, i32* %3, align 4
  %79 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 1
  %80 = bitcast %"class.blink::NGBlockNode"* %79 to %"class.blink::LayoutObject"**
  %81 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %81, i64 0, i32 5, i32 0
  %83 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %82, align 8
  %84 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84)
  store i32 -1431655766, i32* %4, align 4
  %85 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 0, i32 3
  %86 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 2
  %87 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %83, i64 0, i32 0, i32 9
  %88 = bitcast [20 x i8]* %87 to i160*
  %89 = load i160, i160* %88, align 8
  %90 = and i160 %89, 15211807202738752817960438464512
  %91 = icmp eq i160 %90, 0
  %92 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %83, i64 0, i32 0, i32 5, i32 0, i32 0
  %93 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %93, i64 0, i32 4
  %95 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %93, i64 0, i32 5
  %96 = select i1 %91, %"class.blink::Length"* %94, %"class.blink::Length"* %95
  %97 = tail call zeroext i1 @_ZN5blink23BlockLengthUnresolvableERKNS_17NGConstraintSpaceERKNS_6LengthEPKNS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %10, %"class.blink::Length"* dereferenceable(8) %96, %"class.blink::LayoutUnit"* null) #10
  br i1 %97, label %100, label %98, !prof !2

98:                                               ; preds = %53
  %99 = tail call i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %10, %"class.blink::ComputedStyle"* dereferenceable(104) %83, %"struct.blink::NGBoxStrut"* dereferenceable(16) %86, %"class.blink::Length"* dereferenceable(8) %96, i32 -64, i32 0, %"class.blink::LayoutUnit"* null) #10
  br label %100

100:                                              ; preds = %53, %98
  %101 = phi i32 [ %99, %98 ], [ 2147483647, %53 ]
  store i32 %101, i32* %4, align 4
  %102 = load i160, i160* %88, align 8
  %103 = and i160 %102, 15211807202738752817960438464512
  %104 = icmp eq i160 %103, 0
  %105 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %92, align 8
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %105, i64 0, i32 3
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %105, i64 0, i32 8
  %108 = select i1 %104, %"class.blink::Length"* %106, %"class.blink::Length"* %107
  %109 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %108, i64 0, i32 2
  %110 = load i8, i8* %109, align 1
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %122, label %112

112:                                              ; preds = %100
  %113 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %85, align 8
  switch i8 %110, label %116 [
    i8 8, label %114
    i8 1, label %114
    i8 6, label %114
  ]

114:                                              ; preds = %112, %112, %112
  %115 = tail call zeroext i1 @_ZN5blink23BlockLengthUnresolvableERKNS_17NGConstraintSpaceERKNS_6LengthEPKNS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %113, %"class.blink::Length"* dereferenceable(8) %108, %"class.blink::LayoutUnit"* null) #10
  br i1 %115, label %122, label %116, !prof !4

116:                                              ; preds = %112, %114
  %117 = tail call i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %113, %"class.blink::ComputedStyle"* dereferenceable(104) %83, %"struct.blink::NGBoxStrut"* dereferenceable(16) %86, %"class.blink::Length"* dereferenceable(8) %108, i32 -64, i32 0, %"class.blink::LayoutUnit"* null) #10
  %118 = icmp eq i32 %117, -64
  br i1 %118, label %122, label %119

119:                                              ; preds = %116
  %120 = icmp slt i32 %117, %101
  %121 = select i1 %120, i32 %117, i32 %101
  store i32 %121, i32* %4, align 4
  br label %122

122:                                              ; preds = %114, %116, %119, %100
  %123 = phi i32 [ %101, %116 ], [ %121, %119 ], [ %101, %100 ], [ %101, %114 ]
  %124 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %124)
  store i32 -1431655766, i32* %5, align 4
  %125 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %85, align 8
  %126 = load i160, i160* %88, align 8
  %127 = and i160 %126, 15211807202738752817960438464512
  %128 = icmp eq i160 %127, 0
  %129 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %92, align 8
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %129, i64 0, i32 6
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %129, i64 0, i32 7
  %132 = select i1 %128, %"class.blink::Length"* %130, %"class.blink::Length"* %131
  %133 = tail call zeroext i1 @_ZN5blink23BlockLengthUnresolvableERKNS_17NGConstraintSpaceERKNS_6LengthEPKNS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %125, %"class.blink::Length"* dereferenceable(8) %132, %"class.blink::LayoutUnit"* null) #10
  br i1 %133, label %134, label %145, !prof !2

134:                                              ; preds = %122
  %135 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 2, i32 2, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4, i32 2, i32 3, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = icmp slt i32 %138, 0
  %140 = select i1 %139, i32 -2147483648, i32 2147483647
  %141 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %136, i32 %138) #10
  %142 = extractvalue { i32, i1 } %141, 1
  %143 = extractvalue { i32, i1 } %141, 0
  %144 = select i1 %142, i32 %140, i32 %143, !prof !4
  br label %147

145:                                              ; preds = %122
  %146 = tail call i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %125, %"class.blink::ComputedStyle"* dereferenceable(104) %83, %"struct.blink::NGBoxStrut"* dereferenceable(16) %86, %"class.blink::Length"* dereferenceable(8) %132, i32 -64, i32 0, %"class.blink::LayoutUnit"* null) #10
  br label %147

147:                                              ; preds = %134, %145
  %148 = phi i32 [ %144, %134 ], [ %146, %145 ]
  store i32 %148, i32* %5, align 4
  %149 = icmp slt i32 %123, %148
  %150 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %151 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %152 = select i1 %149, %"class.blink::LayoutUnit"* %150, %"class.blink::LayoutUnit"* %151
  %153 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %152, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  store i32 %154, i32* %4, align 4
  %155 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 3, i32 0
  %156 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %155, align 8
  %157 = icmp eq %"class.blink::NGBlockBreakToken"* %156, null
  br i1 %157, label %167, label %158

158:                                              ; preds = %147
  %159 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %156, i64 0, i32 1, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp sgt i32 %160, -1
  %162 = select i1 %161, i32 -2147483648, i32 2147483647
  %163 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %154, i32 %160) #10
  %164 = extractvalue { i32, i1 } %163, 1
  %165 = extractvalue { i32, i1 } %163, 0
  %166 = select i1 %164, i32 %162, i32 %165, !prof !4
  store i32 %166, i32* %4, align 4
  br label %167

167:                                              ; preds = %147, %158
  %168 = phi i32 [ %154, %147 ], [ %166, %158 ]
  %169 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 5, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = load i32, i32* %63, align 4
  %172 = icmp sgt i32 %171, -1
  %173 = select i1 %172, i32 -2147483648, i32 2147483647
  %174 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %170, i32 %171) #10
  %175 = extractvalue { i32, i1 } %174, 1
  %176 = extractvalue { i32, i1 } %174, 0
  %177 = select i1 %175, i32 %173, i32 %176, !prof !4
  %178 = icmp sgt i32 %177, -1
  %179 = select i1 %178, i32 -2147483648, i32 2147483647
  %180 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %168, i32 %177) #10
  %181 = extractvalue { i32, i1 } %180, 1
  %182 = extractvalue { i32, i1 } %180, 0
  %183 = select i1 %181, i32 %179, i32 %182, !prof !4
  store i32 %183, i32* %4, align 4
  %184 = icmp slt i32 %183, %78
  %185 = select i1 %184, %"class.blink::LayoutUnit"* %151, %"class.blink::LayoutUnit"* %59
  %186 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %185, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = icmp sgt i32 %72, -1
  %189 = select i1 %188, i32 -2147483648, i32 2147483647
  %190 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %187, i32 %72) #10
  %191 = extractvalue { i32, i1 } %190, 1
  %192 = extractvalue { i32, i1 } %190, 0
  %193 = select i1 %191, i32 %189, i32 %192, !prof !4
  %194 = icmp sgt i32 %193, 0
  %195 = select i1 %194, i32 %193, i32 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %124)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84)
  ret i32 %195
}

declare void @_ZN5blink24NGConstraintSpaceBuilder27SetPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"*, i64) local_unnamed_addr #2

declare void @_ZN5blink33SetupSpaceBuilderForFragmentationERKNS_17NGConstraintSpaceERKNS_17NGLayoutInputNodeENS_10LayoutUnitEPNS_24NGConstraintSpaceBuilderEb(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGLayoutInputNode"* dereferenceable(16), i32, %"class.blink::NGConstraintSpaceBuilder"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEED2Ev(%"class.blink::NGLayoutAlgorithm"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4
  tail call void @_ZN5blink20NGBoxFragmentBuilderD2Ev(%"class.blink::NGBoxFragmentBuilder"* %3) #10
  %4 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 3, i32 0
  %5 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %4, align 8
  %6 = icmp eq %"class.blink::NGBlockBreakToken"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %5, i64 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %8, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %9) #10
  %10 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %8, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %20

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %8, i64 -2
  %15 = bitcast %"class.base::RefCounted.1784"* %14 to %"class.blink::NGBreakToken"*
  %16 = bitcast %"class.base::RefCounted.1784"* %14 to void (%"class.blink::NGBreakToken"*)***
  %17 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %17, i64 1
  %19 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %18, align 8
  tail call void %19(%"class.blink::NGBreakToken"* nonnull %15) #10
  br label %20

20:                                               ; preds = %1, %7, %13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23NGColumnLayoutAlgorithmD0Ev(%"class.blink::NGColumnLayoutAlgorithm"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 4
  tail call void @_ZN5blink20NGBoxFragmentBuilderD2Ev(%"class.blink::NGBoxFragmentBuilder"* %3) #10
  %4 = getelementptr inbounds %"class.blink::NGColumnLayoutAlgorithm", %"class.blink::NGColumnLayoutAlgorithm"* %0, i64 0, i32 0, i32 3, i32 0
  %5 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %4, align 8
  %6 = icmp eq %"class.blink::NGBlockBreakToken"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %5, i64 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %8, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %9) #10
  %10 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %8, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %20

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %8, i64 -2
  %15 = bitcast %"class.base::RefCounted.1784"* %14 to %"class.blink::NGBreakToken"*
  %16 = bitcast %"class.base::RefCounted.1784"* %14 to void (%"class.blink::NGBreakToken"*)***
  %17 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %17, i64 1
  %19 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %18, align 8
  tail call void %19(%"class.blink::NGBreakToken"* nonnull %15) #10
  br label %20

20:                                               ; preds = %1, %7, %13
  %21 = bitcast %"class.blink::NGColumnLayoutAlgorithm"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #11
  ret void
}

declare zeroext i1 @_ZNK5blink25LayoutNGOutsideListMarker20NeedsOccupyWholeLineEv(%"class.blink::LayoutNGOutsideListMarker"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare %"class.blink::NGLayoutResult"* @_ZN5blink20NGBoxFragmentBuilder13ToBoxFragmentENS_11WritingModeE(%"class.blink::NGBoxFragmentBuilder"*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = zext i16 %4 to i32
  switch i32 %5, label %128 [
    i32 5, label %118
    i32 4, label %62
    i32 3, label %6
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %8 = bitcast %union.anon.1635* %7 to %"class.blink::NGTableConstraintSpaceData"**
  %9 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %8, align 8
  %10 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %9, null
  br i1 %10, label %128, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #10
  %13 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %128

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %18 = load %"struct.blink::NGTableConstraintSpaceData::Cell"*, %"struct.blink::NGTableConstraintSpaceData::Cell"** %17, align 8
  %19 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Cell"* %18, null
  %20 = bitcast %"struct.blink::NGTableConstraintSpaceData::Cell"* %18 to i8*
  br i1 %19, label %27, label %21, !prof !2

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 5, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !4

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #10
  store %"struct.blink::NGTableConstraintSpaceData::Cell"* null, %"struct.blink::NGTableConstraintSpaceData::Cell"** %17, align 8
  br label %27

27:                                               ; preds = %26, %16
  %28 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %"struct.blink::NGTableConstraintSpaceData::Row"*, %"struct.blink::NGTableConstraintSpaceData::Row"** %28, align 8
  %30 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Row"* %29, null
  %31 = bitcast %"struct.blink::NGTableConstraintSpaceData::Row"* %29 to i8*
  br i1 %30, label %38, label %32, !prof !2

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 4, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36, !prof !4

36:                                               ; preds = %32
  store i32 0, i32* %33, align 4
  br label %37

37:                                               ; preds = %36, %32
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #10
  store %"struct.blink::NGTableConstraintSpaceData::Row"* null, %"struct.blink::NGTableConstraintSpaceData::Row"** %28, align 8
  br label %38

38:                                               ; preds = %37, %27
  %39 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"struct.blink::NGTableConstraintSpaceData::Section"*, %"struct.blink::NGTableConstraintSpaceData::Section"** %39, align 8
  %41 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Section"* %40, null
  %42 = bitcast %"struct.blink::NGTableConstraintSpaceData::Section"* %40 to i8*
  br i1 %41, label %49, label %43, !prof !2

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 3, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47, !prof !4

47:                                               ; preds = %43
  store i32 0, i32* %44, align 4
  br label %48

48:                                               ; preds = %47, %43
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %42) #10
  store %"struct.blink::NGTableConstraintSpaceData::Section"* null, %"struct.blink::NGTableConstraintSpaceData::Section"** %39, align 8
  br label %49

49:                                               ; preds = %48, %38
  %50 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %51 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %50, align 8
  %52 = icmp eq %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %51, null
  %53 = bitcast %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %51 to i8*
  br i1 %52, label %60, label %54, !prof !2

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 2, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58, !prof !4

58:                                               ; preds = %54
  store i32 0, i32* %55, align 4
  br label %59

59:                                               ; preds = %58, %54
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #10
  br label %60

60:                                               ; preds = %49, %59
  %61 = bitcast %"class.blink::NGTableConstraintSpaceData"* %9 to i8*
  tail call void @free(i8* %61) #10
  br label %128

62:                                               ; preds = %1
  %63 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %64 = bitcast %union.anon.1635* %63 to %"class.blink::NGTableConstraintSpaceData"**
  %65 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %64, align 8
  %66 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %65, null
  br i1 %66, label %128, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %68) #10
  %69 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %128

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 5, i32 0, i32 0, i32 0
  %74 = load %"struct.blink::NGTableConstraintSpaceData::Cell"*, %"struct.blink::NGTableConstraintSpaceData::Cell"** %73, align 8
  %75 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Cell"* %74, null
  %76 = bitcast %"struct.blink::NGTableConstraintSpaceData::Cell"* %74 to i8*
  br i1 %75, label %83, label %77, !prof !2

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 5, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %82, label %81, !prof !4

81:                                               ; preds = %77
  store i32 0, i32* %78, align 4
  br label %82

82:                                               ; preds = %81, %77
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %76) #10
  store %"struct.blink::NGTableConstraintSpaceData::Cell"* null, %"struct.blink::NGTableConstraintSpaceData::Cell"** %73, align 8
  br label %83

83:                                               ; preds = %82, %72
  %84 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 4, i32 0, i32 0, i32 0
  %85 = load %"struct.blink::NGTableConstraintSpaceData::Row"*, %"struct.blink::NGTableConstraintSpaceData::Row"** %84, align 8
  %86 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Row"* %85, null
  %87 = bitcast %"struct.blink::NGTableConstraintSpaceData::Row"* %85 to i8*
  br i1 %86, label %94, label %88, !prof !2

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 4, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %93, label %92, !prof !4

92:                                               ; preds = %88
  store i32 0, i32* %89, align 4
  br label %93

93:                                               ; preds = %92, %88
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %87) #10
  store %"struct.blink::NGTableConstraintSpaceData::Row"* null, %"struct.blink::NGTableConstraintSpaceData::Row"** %84, align 8
  br label %94

94:                                               ; preds = %93, %83
  %95 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %96 = load %"struct.blink::NGTableConstraintSpaceData::Section"*, %"struct.blink::NGTableConstraintSpaceData::Section"** %95, align 8
  %97 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Section"* %96, null
  %98 = bitcast %"struct.blink::NGTableConstraintSpaceData::Section"* %96 to i8*
  br i1 %97, label %105, label %99, !prof !2

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 3, i32 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %104, label %103, !prof !4

103:                                              ; preds = %99
  store i32 0, i32* %100, align 4
  br label %104

104:                                              ; preds = %103, %99
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %98) #10
  store %"struct.blink::NGTableConstraintSpaceData::Section"* null, %"struct.blink::NGTableConstraintSpaceData::Section"** %95, align 8
  br label %105

105:                                              ; preds = %104, %94
  %106 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 2, i32 0, i32 0, i32 0
  %107 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %106, align 8
  %108 = icmp eq %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %107, null
  %109 = bitcast %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %107 to i8*
  br i1 %108, label %116, label %110, !prof !2

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 2, i32 0, i32 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %115, label %114, !prof !4

114:                                              ; preds = %110
  store i32 0, i32* %111, align 4
  br label %115

115:                                              ; preds = %114, %110
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %109) #10
  br label %116

116:                                              ; preds = %105, %115
  %117 = bitcast %"class.blink::NGTableConstraintSpaceData"* %65 to i8*
  tail call void @free(i8* %117) #10
  br label %128

118:                                              ; preds = %1
  %119 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %120 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %119, align 8
  %121 = icmp eq %"class.blink::SerializedScriptValue"* %120, null
  br i1 %121, label %128, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw sub i32* %123, i32 1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %128

126:                                              ; preds = %122
  tail call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %120) #10
  %127 = bitcast %"class.blink::SerializedScriptValue"* %120 to i8*
  tail call void @free(i8* %127) #10
  br label %128

128:                                              ; preds = %126, %122, %118, %116, %67, %62, %60, %11, %6, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %2, align 8
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %2, align 8
  %4 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %3, null
  br i1 %4, label %65, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %3, i64 0, i32 6
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.1751", %"class.std::__1::unique_ptr.1751"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %7, align 8
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %7, align 8
  %9 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::unique_ptr.1751"* %6 to %"struct.std::__1::default_delete.1774"*
  tail call void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.1774"* %11, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nonnull %8) #10
  br label %12

12:                                               ; preds = %10, %5
  %13 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %3, i64 0, i32 0, i32 0
  %14 = load %"class.base::RefCountedData.1735"*, %"class.base::RefCountedData.1735"** %13, align 8
  %15 = icmp eq %"class.base::RefCountedData.1735"* %14, null
  br i1 %15, label %63, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.base::RefCountedData.1735", %"class.base::RefCountedData.1735"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %63

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.base::RefCountedData.1735", %"class.base::RefCountedData.1735"* %14, i64 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::Vector.1737", %"class.WTF::Vector.1737"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %class.scoped_refptr.1740*, %class.scoped_refptr.1740** %22, align 8
  %24 = icmp eq %class.scoped_refptr.1740* %23, null
  br i1 %24, label %61, label %25, !prof !2

25:                                               ; preds = %20
  %26 = bitcast %class.scoped_refptr.1740* %23 to i8*
  %27 = getelementptr inbounds %"class.base::RefCountedData.1735", %"class.base::RefCountedData.1735"* %14, i64 0, i32 1, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %59, label %30, !prof !4

30:                                               ; preds = %25
  %31 = zext i32 %28 to i64
  %32 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %23, i64 %31
  br label %33

33:                                               ; preds = %53, %30
  %34 = phi %class.scoped_refptr.1740* [ %54, %53 ], [ %23, %30 ]
  %35 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %34, i64 0, i32 0
  %36 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %35, align 8
  %37 = icmp eq %"struct.blink::NGExclusion"* %36, null
  br i1 %37, label %53, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %36, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #10
  %40 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %53

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %36, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.base::RefCounted.1742", %"class.base::RefCounted.1742"* %44, i64 8
  %46 = bitcast %"class.base::RefCounted.1742"* %45 to %"struct.blink::NGExclusionShapeData"**
  %47 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %46, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %46, align 8
  %48 = icmp eq %"struct.blink::NGExclusionShapeData"* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %43
  %50 = bitcast %"struct.blink::NGExclusionShapeData"* %47 to i8*
  tail call void @_ZdlPv(i8* %50) #11
  br label %51

51:                                               ; preds = %49, %43
  %52 = bitcast %"struct.blink::NGExclusion"* %36 to i8*
  tail call void @free(i8* %52) #10
  br label %53

53:                                               ; preds = %51, %38, %33
  %54 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %34, i64 1
  %55 = icmp eq %class.scoped_refptr.1740* %54, %32
  br i1 %55, label %56, label %33

56:                                               ; preds = %53
  store i32 0, i32* %27, align 4
  %57 = bitcast %"class.WTF::Vector.1737"* %21 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %25
  %60 = phi i8* [ %58, %56 ], [ %26, %25 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %60) #10
  br label %61

61:                                               ; preds = %20, %59
  %62 = bitcast %"class.base::RefCountedData.1735"* %14 to i8*
  tail call void @_ZdlPv(i8* %62) #11
  br label %63

63:                                               ; preds = %61, %16, %12
  %64 = bitcast %"class.blink::NGExclusionSpaceInternal"* %3 to i8*
  tail call void @free(i8* %64) #10
  br label %65

65:                                               ; preds = %1, %63
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.1774"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, null
  br i1 %3, label %127, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::Vector.1767", %"class.WTF::Vector.1767"* %5, i64 0, i32 0, i32 0, i32 0
  br i1 %8, label %58, label %10, !prof !4

10:                                               ; preds = %4
  %11 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %12 = zext i32 %7 to i64
  %13 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %11, i64 %12
  br label %14

14:                                               ; preds = %54, %10
  %15 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %55, %54 ], [ %11, %10 ]
  %16 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !4

20:                                               ; preds = %14
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %14
  %22 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %16, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %24 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 1, i64 0
  %25 = bitcast i8* %24 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %26 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23, %25
  br i1 %26, label %29, label %27, !prof !2

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %16, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %28, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23) #10
  br label %29

29:                                               ; preds = %27, %21
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %30 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34, !prof !4

34:                                               ; preds = %29
  store i32 0, i32* %31, align 4
  br label %35

35:                                               ; preds = %34, %29
  %36 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %30, i64 0, i32 0, i32 0, i32 0
  %37 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %38 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 1, i64 0
  %39 = bitcast i8* %38 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %40 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37, %39
  br i1 %40, label %43, label %41, !prof !2

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %30, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %42, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37) #10
  br label %43

43:                                               ; preds = %41, %35
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %44 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 0, i32 1, i32 0
  %45 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %44, align 8
  %46 = icmp eq %"class.blink::NGShapeExclusions"* %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #10
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %45) #10
  %53 = bitcast %"class.blink::NGShapeExclusions"* %45 to i8*
  tail call void @free(i8* %53) #10
  br label %54

54:                                               ; preds = %43, %47, %52
  %55 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 1
  %56 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %55, %13
  br i1 %56, label %57, label %14

57:                                               ; preds = %54
  store i32 0, i32* %6, align 4
  br label %58

58:                                               ; preds = %57, %4
  %59 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %60 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 1, i64 0
  %61 = bitcast i8* %60 to %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*
  %62 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59, %61
  br i1 %62, label %65, label %63, !prof !2

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::Vector.1767", %"class.WTF::Vector.1767"* %5, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1768"* %64, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59) #10
  br label %65

65:                                               ; preds = %63, %58
  store %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* null, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %66 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %68, label %118, label %70, !prof !4

70:                                               ; preds = %65
  %71 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %72 = zext i32 %67 to i64
  %73 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %71, i64 %72
  br label %74

74:                                               ; preds = %114, %70
  %75 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelf"* [ %115, %114 ], [ %71, %70 ]
  %76 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 6, i32 0
  %77 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %76, align 8
  %78 = icmp eq %"class.blink::NGShapeExclusions"* %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %80) #10
  %81 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %77) #10
  %85 = bitcast %"class.blink::NGShapeExclusions"* %77 to i8*
  tail call void @free(i8* %85) #10
  br label %86

86:                                               ; preds = %84, %79, %74
  %87 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5
  %88 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %92, label %91, !prof !4

91:                                               ; preds = %86
  store i32 0, i32* %88, align 4
  br label %92

92:                                               ; preds = %91, %86
  %93 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %87, i64 0, i32 0, i32 0, i32 0
  %94 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %95 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 1, i64 0
  %96 = bitcast i8* %95 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %97 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94, %96
  br i1 %97, label %100, label %98, !prof !2

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %87, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %99, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94) #10
  br label %100

100:                                              ; preds = %98, %92
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %101 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4
  %102 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %106, label %105, !prof !4

105:                                              ; preds = %100
  store i32 0, i32* %102, align 4
  br label %106

106:                                              ; preds = %105, %100
  %107 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %101, i64 0, i32 0, i32 0, i32 0
  %108 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %109 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 1, i64 0
  %110 = bitcast i8* %109 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %111 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108, %110
  br i1 %111, label %114, label %112, !prof !2

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %101, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %113, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108) #10
  br label %114

114:                                              ; preds = %106, %112
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %115 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 1
  %116 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %115, %73
  br i1 %116, label %117, label %74

117:                                              ; preds = %114
  store i32 0, i32* %66, align 4
  br label %118

118:                                              ; preds = %117, %65
  %119 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %120 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 1, i64 0
  %121 = bitcast i8* %120 to %"struct.blink::NGExclusionSpaceInternal::NGShelf"*
  %122 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119, %121
  br i1 %122, label %125, label %123, !prof !2

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1755"* %124, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119) #10
  br label %125

125:                                              ; preds = %118, %123
  %126 = bitcast %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1 to i8*
  tail call void @free(i8* %126) #10
  br label %127

127:                                              ; preds = %125, %2
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.1737", %"class.WTF::Vector.1737"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.1740*, %class.scoped_refptr.1740** %3, align 8
  %5 = icmp eq %class.scoped_refptr.1740* %4, null
  br i1 %5, label %42, label %6, !prof !2

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.1740* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %40, label %11, !prof !4

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %4, i64 %12
  br label %14

14:                                               ; preds = %34, %11
  %15 = phi %class.scoped_refptr.1740* [ %35, %34 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %15, i64 0, i32 0
  %17 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %16, align 8
  %18 = icmp eq %"struct.blink::NGExclusion"* %17, null
  br i1 %18, label %34, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #10
  %21 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.1742", %"class.base::RefCounted.1742"* %25, i64 8
  %27 = bitcast %"class.base::RefCounted.1742"* %26 to %"struct.blink::NGExclusionShapeData"**
  %28 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %27, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %27, align 8
  %29 = icmp eq %"struct.blink::NGExclusionShapeData"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = bitcast %"struct.blink::NGExclusionShapeData"* %28 to i8*
  tail call void @_ZdlPv(i8* %31) #11
  br label %32

32:                                               ; preds = %30, %24
  %33 = bitcast %"struct.blink::NGExclusion"* %17 to i8*
  tail call void @free(i8* %33) #10
  br label %34

34:                                               ; preds = %32, %19, %14
  %35 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %15, i64 1
  %36 = icmp eq %class.scoped_refptr.1740* %35, %13
  br i1 %36, label %37, label %14

37:                                               ; preds = %34
  store i32 0, i32* %8, align 4
  %38 = bitcast %"class.WTF::Vector.1737"* %2 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %6
  %41 = phi i8* [ %39, %37 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %41) #10
  store %class.scoped_refptr.1740* null, %class.scoped_refptr.1740** %3, align 8
  br label %42

42:                                               ; preds = %1, %40
  %43 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::Vector.1737", %"class.WTF::Vector.1737"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %class.scoped_refptr.1740*, %class.scoped_refptr.1740** %44, align 8
  %46 = icmp eq %class.scoped_refptr.1740* %45, null
  br i1 %46, label %83, label %47, !prof !2

47:                                               ; preds = %42
  %48 = bitcast %class.scoped_refptr.1740* %45 to i8*
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %81, label %52, !prof !4

52:                                               ; preds = %47
  %53 = zext i32 %50 to i64
  %54 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %45, i64 %53
  br label %55

55:                                               ; preds = %75, %52
  %56 = phi %class.scoped_refptr.1740* [ %76, %75 ], [ %45, %52 ]
  %57 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %56, i64 0, i32 0
  %58 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %57, align 8
  %59 = icmp eq %"struct.blink::NGExclusion"* %58, null
  br i1 %59, label %75, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #10
  %62 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %75

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.base::RefCounted.1742", %"class.base::RefCounted.1742"* %66, i64 8
  %68 = bitcast %"class.base::RefCounted.1742"* %67 to %"struct.blink::NGExclusionShapeData"**
  %69 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %68, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %68, align 8
  %70 = icmp eq %"struct.blink::NGExclusionShapeData"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %65
  %72 = bitcast %"struct.blink::NGExclusionShapeData"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #11
  br label %73

73:                                               ; preds = %71, %65
  %74 = bitcast %"struct.blink::NGExclusion"* %58 to i8*
  tail call void @free(i8* %74) #10
  br label %75

75:                                               ; preds = %73, %60, %55
  %76 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %56, i64 1
  %77 = icmp eq %class.scoped_refptr.1740* %76, %54
  br i1 %77, label %78, label %55

78:                                               ; preds = %75
  store i32 0, i32* %49, align 4
  %79 = bitcast %"class.WTF::Vector.1737"* %43 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %81

81:                                               ; preds = %78, %47
  %82 = phi i8* [ %80, %78 ], [ %48, %47 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %82) #10
  store %class.scoped_refptr.1740* null, %class.scoped_refptr.1740** %44, align 8
  br label %83

83:                                               ; preds = %42, %81
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1768"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1755"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

declare void @_ZN5blink39SetOrthogonalFallbackInlineSizeIfNeededERKNS_13ComputedStyleENS_17NGLayoutInputNodeEPNS_24NGConstraintSpaceBuilderE(%"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::LayoutBox"*, i64, %"class.blink::NGConstraintSpaceBuilder"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode11NextSiblingEv(%"class.blink::NGBlockNode"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #5

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @_ZN3WTF12VectorBufferIZN5blink23NGColumnLayoutAlgorithm9LayoutRowEPKNS1_17NGBlockBreakTokenEPNS1_13NGMarginStrutEE16ResultWithOffsetLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS8_(%struct.ResultWithOffset*) unnamed_addr #7 align 2 {
  %2 = bitcast %struct.ResultWithOffset* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %2) #10
  ret void
}

declare { i64, i64 } @_ZN5blink22ComputePhysicalMarginsERKNS_13ComputedStyleENS_10LayoutUnitE(%"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #2

declare dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #2

declare { i64, %"struct.blink::NGLink"* } @_ZNK5blink18NGPhysicalFragment8ChildrenEv(%"class.blink::NGPhysicalFragment"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.blink::NGLink"* @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  %11 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %8, align 8
  %12 = icmp eq %"struct.blink::NGLink"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.blink::NGLink"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %17 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %16, i8* %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %26 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  ret %"struct.blink::NGLink"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  %11 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %8, align 8
  %12 = icmp eq %"struct.blink::NGLink"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.blink::NGLink"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %17 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %16, i8* %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %26 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  %27 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %26, i64 1
  store %"struct.blink::NGLink"* %27, %"struct.blink::NGLink"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #4 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #10
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"*, %"struct.blink::NGLink"*, %"struct.blink::NGLink"*, %"struct.blink::NGLink"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"struct.blink::NGLink"*, align 8
  %8 = alloca %"struct.blink::NGLink"*, align 8
  %9 = alloca %"struct.blink::NGLink"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"struct.blink::NGLink"* %1, %"struct.blink::NGLink"** %7, align 8
  store %"struct.blink::NGLink"* %2, %"struct.blink::NGLink"** %8, align 8
  store %"struct.blink::NGLink"* %3, %"struct.blink::NGLink"** %9, align 8
  %14 = ptrtoint %"struct.blink::NGLink"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"struct.blink::NGLink"* %2 to i64
  %18 = bitcast %"struct.blink::NGLink"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"struct.blink::NGLink"* %3 to i64
  %21 = bitcast %"struct.blink::NGLink"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"struct.blink::NGLink"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"struct.blink::NGLink"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %30 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i8* %29, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %8, align 8
  %43 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %9, align 8
  %44 = icmp ugt %"struct.blink::NGLink"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %49 = bitcast %"struct.blink::NGLink"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %48, i8* %50) #10
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #10
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #10
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %11, align 8
  %15 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %12, align 8
  %16 = icmp eq %"struct.blink::NGLink"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %20, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %32, align 8
  %36 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %33, align 8
  %37 = icmp eq %"struct.blink::NGLink"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"struct.blink::NGLink"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %42 = bitcast %"struct.blink::NGLink"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i8* %41, i8* %43) #10
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #10
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #10
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  ret void
}

declare i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"struct.blink::PhysicalSize"* dereferenceable(8)) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF16VectorBufferBaseIZN5blink23NGColumnLayoutAlgorithm32CalculateBalancedColumnBlockSizeERKNS1_11LogicalSizeEPKNS1_17NGBlockBreakTokenEE10ContentRunNS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.2141"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = zext i32 %1 to i64
  %7 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = icmp ugt i32 %1, 268173312
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  store i8* null, i8** %8, align 8
  br label %21

12:                                               ; preds = %2
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %6) #10
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %13, i8* %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  store i8* %16, i8** %8, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %4) #10
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %22 = shl nuw nsw i64 %6, 3
  %23 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %22) #10
  %24 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %23, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIZN5blink23NGColumnLayoutAlgorithm32CalculateBalancedColumnBlockSizeERKNS1_11LogicalSizeEPKNS1_17NGBlockBreakTokenEE10ContentRunEEPKcv, i64 0, i64 0)) #10
  %25 = bitcast %"class.WTF::VectorBufferBase.2141"* %0 to i64*
  %26 = ptrtoint i8* %24 to i64
  store atomic i64 %26, i64* %25 monotonic, align 8
  %27 = lshr i64 %23, 3
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %"class.WTF::VectorBufferBase.2141", %"class.WTF::VectorBufferBase.2141"* %0, i64 0, i32 1
  store i32 %28, i32* %29, align 8
  ret void
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @_ZN3WTF12VectorBufferIZN5blink23NGColumnLayoutAlgorithm32CalculateBalancedColumnBlockSizeERKNS1_11LogicalSizeEPKNS1_17NGBlockBreakTokenEE10ContentRunLj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS9_(%struct.ContentRun*) unnamed_addr #7 align 2 {
  %2 = bitcast %struct.ContentRun* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #5

declare zeroext i1 @_ZN5blink23BlockLengthUnresolvableERKNS_17NGConstraintSpaceERKNS_6LengthEPKNS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::Length"* dereferenceable(8), %"class.blink::LayoutUnit"*) local_unnamed_addr #2

declare i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::NGBoxStrut"* dereferenceable(16), %"class.blink::Length"* dereferenceable(8), i32, i32, %"class.blink::LayoutUnit"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20NGBoxFragmentBuilderD2Ev(%"class.blink::NGBoxFragmentBuilder"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 49, i32 0
  %3 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %2, align 8
  %4 = icmp eq %"class.blink::NGBlockBreakToken"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %3, i64 0, i32 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %6, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #10
  %8 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %6, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %6, i64 -2
  %13 = bitcast %"class.base::RefCounted.1784"* %12 to %"class.blink::NGBreakToken"*
  %14 = bitcast %"class.base::RefCounted.1784"* %12 to void (%"class.blink::NGBreakToken"*)***
  %15 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %15, i64 1
  %17 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %16, align 8
  tail call void %17(%"class.blink::NGBreakToken"* nonnull %13) #10
  br label %18

18:                                               ; preds = %1, %5, %11
  %19 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 47, i32 0, i32 0, i32 0
  %20 = load %"struct.blink::NGMathMLPaintInfo"*, %"struct.blink::NGMathMLPaintInfo"** %19, align 8
  store %"struct.blink::NGMathMLPaintInfo"* null, %"struct.blink::NGMathMLPaintInfo"** %19, align 8
  %21 = icmp eq %"struct.blink::NGMathMLPaintInfo"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.blink::NGMathMLPaintInfo", %"struct.blink::NGMathMLPaintInfo"* %20, i64 0, i32 2, i32 0
  %24 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %23, align 8
  %25 = icmp eq %"class.blink::ShapeResultView"* %24, null
  br i1 %25, label %33, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %24, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %27) #10
  %28 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %24) #10
  %32 = bitcast %"class.blink::ShapeResultView"* %24 to i8*
  tail call void @free(i8* %32) #10
  br label %33

33:                                               ; preds = %31, %26, %22
  %34 = bitcast %"struct.blink::NGMathMLPaintInfo"* %20 to i8*
  tail call void @free(i8* %34) #10
  br label %35

35:                                               ; preds = %18, %33
  %36 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 45, i32 0
  %37 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %36, align 8
  %38 = icmp eq %"class.blink::SerializedScriptValue"* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  tail call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %37) #10
  %44 = bitcast %"class.blink::SerializedScriptValue"* %37 to i8*
  tail call void @free(i8* %44) #10
  br label %45

45:                                               ; preds = %35, %39, %43
  %46 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 43
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.2082", %"class.std::__1::unique_ptr.2082"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"struct.blink::NGGridData"*, %"struct.blink::NGGridData"** %47, align 8
  store %"struct.blink::NGGridData"* null, %"struct.blink::NGGridData"** %47, align 8
  %49 = icmp eq %"struct.blink::NGGridData"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %45
  %51 = bitcast %"class.std::__1::unique_ptr.2082"* %46 to %"struct.std::__1::default_delete.2096"*
  tail call void @_ZNKSt3__114default_deleteIN5blink10NGGridDataEEclEPS2_(%"struct.std::__1::default_delete.2096"* %51, %"struct.blink::NGGridData"* nonnull %48) #10
  br label %52

52:                                               ; preds = %45, %50
  %53 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %54 = load %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"*, %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"** %53, align 8
  store %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* null, %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"** %53, align 8
  %55 = icmp eq %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* %54, null
  br i1 %55, label %80, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry", %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* %54, i64 0, i32 1, i32 0, i32 0, i32 0
  %58 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %57, align 8
  %59 = icmp eq %"class.blink::LayoutUnit"* %58, null
  %60 = bitcast %"class.blink::LayoutUnit"* %58 to i8*
  br i1 %59, label %67, label %61, !prof !2

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry", %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* %54, i64 0, i32 1, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %66, label %65, !prof !4

65:                                               ; preds = %61
  store i32 0, i32* %62, align 4
  br label %66

66:                                               ; preds = %65, %61
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %60) #10
  store %"class.blink::LayoutUnit"* null, %"class.blink::LayoutUnit"** %57, align 8
  br label %67

67:                                               ; preds = %66, %56
  %68 = getelementptr inbounds %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry", %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %68, align 8
  %70 = icmp eq %"class.blink::LayoutUnit"* %69, null
  %71 = bitcast %"class.blink::LayoutUnit"* %69 to i8*
  br i1 %70, label %78, label %72, !prof !2

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry", %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* %54, i64 0, i32 0, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %77, label %76, !prof !4

76:                                               ; preds = %72
  store i32 0, i32* %73, align 4
  br label %77

77:                                               ; preds = %76, %72
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %71) #10
  br label %78

78:                                               ; preds = %77, %67
  %79 = bitcast %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* %54 to i8*
  tail call void @_ZdlPv(i8* %79) #11
  br label %80

80:                                               ; preds = %52, %78
  %81 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 39, i32 0
  %82 = load %"class.blink::NGTableBorders"*, %"class.blink::NGTableBorders"** %81, align 8
  %83 = icmp eq %"class.blink::NGTableBorders"* %82, null
  br i1 %83, label %125, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %82, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %85) #10
  %86 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %82, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %125

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %82, i64 0, i32 3, i32 0, i32 0, i32 0
  %91 = load %"struct.blink::NGTableBorders::Section"*, %"struct.blink::NGTableBorders::Section"** %90, align 8
  %92 = icmp eq %"struct.blink::NGTableBorders::Section"* %91, null
  %93 = bitcast %"struct.blink::NGTableBorders::Section"* %91 to i8*
  br i1 %92, label %100, label %94, !prof !2

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %82, i64 0, i32 3, i32 0, i32 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %99, label %98, !prof !4

98:                                               ; preds = %94
  store i32 0, i32* %95, align 4
  br label %99

99:                                               ; preds = %98, %94
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %93) #10
  store %"struct.blink::NGTableBorders::Section"* null, %"struct.blink::NGTableBorders::Section"** %90, align 8
  br label %100

100:                                              ; preds = %99, %89
  %101 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %82, i64 0, i32 2
  %102 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"struct.blink::NGTableBorders::Edge"*, %"struct.blink::NGTableBorders::Edge"** %102, align 8
  %104 = icmp eq %"struct.blink::NGTableBorders::Edge"* %103, null
  br i1 %104, label %123, label %105, !prof !2

105:                                              ; preds = %100
  %106 = bitcast %"struct.blink::NGTableBorders::Edge"* %103 to i8*
  %107 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %82, i64 0, i32 2, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %121, label %110, !prof !4

110:                                              ; preds = %105
  %111 = zext i32 %108 to i64
  %112 = getelementptr inbounds %"struct.blink::NGTableBorders::Edge", %"struct.blink::NGTableBorders::Edge"* %103, i64 %111
  br label %113

113:                                              ; preds = %113, %110
  %114 = phi %"struct.blink::NGTableBorders::Edge"* [ %116, %113 ], [ %103, %110 ]
  %115 = getelementptr inbounds %"struct.blink::NGTableBorders::Edge", %"struct.blink::NGTableBorders::Edge"* %114, i64 0, i32 0
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr* %115) #10
  %116 = getelementptr inbounds %"struct.blink::NGTableBorders::Edge", %"struct.blink::NGTableBorders::Edge"* %114, i64 1
  %117 = icmp eq %"struct.blink::NGTableBorders::Edge"* %116, %112
  br i1 %117, label %118, label %113

118:                                              ; preds = %113
  store i32 0, i32* %107, align 4
  %119 = bitcast %"class.WTF::Vector.2051"* %101 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %105
  %122 = phi i8* [ %120, %118 ], [ %106, %105 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %122) #10
  br label %123

123:                                              ; preds = %100, %121
  %124 = bitcast %"class.blink::NGTableBorders"* %82 to i8*
  tail call void @free(i8* %124) #10
  br label %125

125:                                              ; preds = %80, %84, %123
  %126 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0
  %127 = load i8, i8* %126, align 8, !range !5
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %141, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %131 = load %"struct.blink::NGTableFragmentData::ColumnGeometry"*, %"struct.blink::NGTableFragmentData::ColumnGeometry"** %130, align 8
  %132 = icmp eq %"struct.blink::NGTableFragmentData::ColumnGeometry"* %131, null
  %133 = bitcast %"struct.blink::NGTableFragmentData::ColumnGeometry"* %131 to i8*
  br i1 %132, label %140, label %134, !prof !2

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %139, label %138, !prof !4

138:                                              ; preds = %134
  store i32 0, i32* %135, align 4
  br label %139

139:                                              ; preds = %138, %134
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %133) #10
  store %"struct.blink::NGTableFragmentData::ColumnGeometry"* null, %"struct.blink::NGTableFragmentData::ColumnGeometry"** %130, align 8
  br label %140

140:                                              ; preds = %139, %129
  store i8 0, i8* %126, align 8
  br label %141

141:                                              ; preds = %125, %140
  %142 = bitcast %"class.blink::NGBoxFragmentBuilder"* %0 to %"class.blink::NGContainerFragmentBuilder"*
  tail call void @_ZN5blink26NGContainerFragmentBuilderD2Ev(%"class.blink::NGContainerFragmentBuilder"* %142) #10
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEED0Ev(%"class.blink::NGLayoutAlgorithm"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26NGContainerFragmentBuilderD2Ev(%"class.blink::NGContainerFragmentBuilder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 9
  tail call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE5clearEv(%"class.WTF::Vector.1847"* %2)
  %3 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 10
  tail call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE5clearEv(%"class.WTF::Vector.1847"* %3)
  %4 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 11
  tail call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE5clearEv(%"class.WTF::Vector.1847"* %4)
  %5 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 12
  %6 = getelementptr inbounds %"class.WTF::HashMap.1857", %"class.WTF::HashMap.1857"* %5, i64 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.1861"*, %"struct.WTF::KeyValuePair.1861"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.1861"* %7, null
  br i1 %8, label %37, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 12, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %33, label %13

13:                                               ; preds = %9
  %14 = zext i32 %11 to i64
  br label %15

15:                                               ; preds = %30, %13
  %16 = phi i64 [ 0, %13 ], [ %31, %30 ]
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.1861", %"struct.WTF::KeyValuePair.1861"* %7, i64 %16, i32 0
  %18 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %17, align 8
  %19 = icmp eq %"class.blink::LayoutBox"* %18, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  br i1 %19, label %30, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.1861", %"struct.WTF::KeyValuePair.1861"* %7, i64 %16, i32 1, i32 1, i32 2, i32 0
  %22 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %21, align 8
  %23 = icmp eq %"class.blink::NGPhysicalFragment"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #10
  %26 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %22) #10
  br label %30

30:                                               ; preds = %29, %24, %20, %15
  %31 = add nuw nsw i64 %16, 1
  %32 = icmp eq i64 %31, %14
  br i1 %32, label %33, label %15

33:                                               ; preds = %30, %9
  %34 = bitcast %"struct.WTF::KeyValuePair.1861"* %7 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %34) #10
  %35 = bitcast %"class.WTF::HashMap.1857"* %5 to i64*
  store atomic i64 0, i64* %35 monotonic, align 8
  store i32 0, i32* %10, align 8
  %36 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 12, i32 0, i32 2
  store i32 0, i32* %36, align 4
  br label %37

37:                                               ; preds = %1, %33
  %38 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 17, i32 0
  %39 = load %"class.blink::NGEarlyBreak"*, %"class.blink::NGEarlyBreak"** %38, align 8
  %40 = icmp eq %"class.blink::NGEarlyBreak"* %39, null
  br i1 %40, label %48, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::NGEarlyBreak", %"class.blink::NGEarlyBreak"* %39, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #10
  %43 = getelementptr inbounds %"class.blink::NGEarlyBreak", %"class.blink::NGEarlyBreak"* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  tail call void @_ZN5blink12NGEarlyBreakD2Ev(%"class.blink::NGEarlyBreak"* nonnull %39) #10
  %47 = bitcast %"class.blink::NGEarlyBreak"* %39 to i8*
  tail call void @free(i8* %47) #10
  br label %48

48:                                               ; preds = %37, %41, %46
  %49 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 16, i32 0
  %50 = load %"class.blink::NGInlineBreakToken"*, %"class.blink::NGInlineBreakToken"** %49, align 8
  %51 = icmp eq %"class.blink::NGInlineBreakToken"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %50, i64 0, i32 0, i32 1, i32 0
  %54 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %53, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #10
  %55 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %53, i64 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %65

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %53, i64 -2
  %60 = bitcast %"class.base::RefCounted.1784"* %59 to %"class.blink::NGBreakToken"*
  %61 = bitcast %"class.base::RefCounted.1784"* %59 to void (%"class.blink::NGBreakToken"*)***
  %62 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %62, i64 1
  %64 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %63, align 8
  tail call void %64(%"class.blink::NGBreakToken"* nonnull %60) #10
  br label %65

65:                                               ; preds = %48, %52, %58
  %66 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 15
  %67 = getelementptr inbounds %"class.WTF::Vector.1993", %"class.WTF::Vector.1993"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %class.scoped_refptr.1782*, %class.scoped_refptr.1782** %67, align 8
  %69 = icmp eq %class.scoped_refptr.1782* %68, null
  br i1 %69, label %104, label %70, !prof !2

70:                                               ; preds = %65
  %71 = bitcast %class.scoped_refptr.1782* %68 to i8*
  %72 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 15, i32 0, i32 0, i32 2
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %102, label %75, !prof !4

75:                                               ; preds = %70
  %76 = zext i32 %73 to i64
  %77 = getelementptr inbounds %class.scoped_refptr.1782, %class.scoped_refptr.1782* %68, i64 %76
  br label %78

78:                                               ; preds = %96, %75
  %79 = phi %class.scoped_refptr.1782* [ %97, %96 ], [ %68, %75 ]
  %80 = getelementptr inbounds %class.scoped_refptr.1782, %class.scoped_refptr.1782* %79, i64 0, i32 0
  %81 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %80, align 8
  %82 = icmp eq %"class.blink::NGBreakToken"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %81, i64 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %84, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %85) #10
  %86 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %84, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %96

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %84, i64 -2
  %91 = bitcast %"class.base::RefCounted.1784"* %90 to %"class.blink::NGBreakToken"*
  %92 = bitcast %"class.base::RefCounted.1784"* %90 to void (%"class.blink::NGBreakToken"*)***
  %93 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %93, i64 1
  %95 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %94, align 8
  tail call void %95(%"class.blink::NGBreakToken"* nonnull %91) #10
  br label %96

96:                                               ; preds = %89, %83, %78
  %97 = getelementptr inbounds %class.scoped_refptr.1782, %class.scoped_refptr.1782* %79, i64 1
  %98 = icmp eq %class.scoped_refptr.1782* %97, %77
  br i1 %98, label %99, label %78

99:                                               ; preds = %96
  store i32 0, i32* %72, align 4
  %100 = bitcast %"class.WTF::Vector.1993"* %66 to i8**
  %101 = load i8*, i8** %100, align 8
  br label %102

102:                                              ; preds = %99, %70
  %103 = phi i8* [ %101, %99 ], [ %71, %70 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %103) #10
  store %class.scoped_refptr.1782* null, %class.scoped_refptr.1782** %67, align 8
  br label %104

104:                                              ; preds = %65, %102
  %105 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 14
  %106 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 14, i32 0, i32 0, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::Vector.1988", %"class.WTF::Vector.1988"* %105, i64 0, i32 0, i32 0, i32 0
  br i1 %108, label %129, label %110, !prof !4

110:                                              ; preds = %104
  %111 = load %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %109, align 8
  %112 = zext i32 %107 to i64
  %113 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %111, i64 %112
  br label %114

114:                                              ; preds = %125, %110
  %115 = phi %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* [ %126, %125 ], [ %111, %110 ]
  %116 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %115, i64 0, i32 1, i32 0
  %117 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %116, align 8
  %118 = icmp eq %"class.blink::NGPhysicalFragment"* %117, null
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %117, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %120) #10
  %121 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %117, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %119
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %117) #10
  br label %125

125:                                              ; preds = %124, %119, %114
  %126 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %115, i64 1
  %127 = icmp eq %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %126, %113
  br i1 %127, label %128, label %114

128:                                              ; preds = %125
  store i32 0, i32* %106, align 4
  br label %129

129:                                              ; preds = %128, %104
  %130 = load %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %109, align 8
  %131 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 14, i32 0, i32 1, i64 0
  %132 = bitcast i8* %131 to %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*
  %133 = icmp eq %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %130, %132
  br i1 %133, label %136, label %134, !prof !2

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.WTF::Vector.1988", %"class.WTF::Vector.1988"* %105, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1989"* %135, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %130) #10
  br label %136

136:                                              ; preds = %129, %134
  store %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* null, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %109, align 8
  %137 = load %"struct.WTF::KeyValuePair.1861"*, %"struct.WTF::KeyValuePair.1861"** %6, align 8
  %138 = icmp eq %"struct.WTF::KeyValuePair.1861"* %137, null
  br i1 %138, label %165, label %139, !prof !2

139:                                              ; preds = %136
  %140 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 12, i32 0, i32 1
  %141 = load i32, i32* %140, align 8
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %163, label %143

143:                                              ; preds = %139
  %144 = zext i32 %141 to i64
  br label %145

145:                                              ; preds = %160, %143
  %146 = phi i64 [ 0, %143 ], [ %161, %160 ]
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair.1861", %"struct.WTF::KeyValuePair.1861"* %137, i64 %146, i32 0
  %148 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %147, align 8
  %149 = icmp eq %"class.blink::LayoutBox"* %148, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  br i1 %149, label %160, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair.1861", %"struct.WTF::KeyValuePair.1861"* %137, i64 %146, i32 1, i32 1, i32 2, i32 0
  %152 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %151, align 8
  %153 = icmp eq %"class.blink::NGPhysicalFragment"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %152, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %155) #10
  %156 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %152, i64 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %154
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %152) #10
  br label %160

160:                                              ; preds = %159, %154, %150, %145
  %161 = add nuw nsw i64 %146, 1
  %162 = icmp eq i64 %161, %144
  br i1 %162, label %163, label %145

163:                                              ; preds = %160, %139
  %164 = bitcast %"struct.WTF::KeyValuePair.1861"* %137 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %164) #10
  store %"struct.WTF::KeyValuePair.1861"* null, %"struct.WTF::KeyValuePair.1861"** %6, align 8
  br label %165

165:                                              ; preds = %136, %163
  %166 = bitcast %"class.WTF::Vector.1847"* %4 to %"class.WTF::ConditionalDestructor.1855"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1855"* %166) #10
  %167 = bitcast %"class.WTF::Vector.1847"* %3 to %"class.WTF::ConditionalDestructor.1855"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1855"* %167) #10
  %168 = bitcast %"class.WTF::Vector.1847"* %2 to %"class.WTF::ConditionalDestructor.1855"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1855"* %168) #10
  %169 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 8
  tail call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %169) #10
  %170 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 0, i32 6, i32 0
  %171 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %170, align 8
  %172 = icmp eq %"class.blink::NGBreakToken"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %171, i64 0, i32 1, i32 0
  %175 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %174, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %175) #10
  %176 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %174, i64 0, i32 0, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %186

179:                                              ; preds = %173
  %180 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %174, i64 -2
  %181 = bitcast %"class.base::RefCounted.1784"* %180 to %"class.blink::NGBreakToken"*
  %182 = bitcast %"class.base::RefCounted.1784"* %180 to void (%"class.blink::NGBreakToken"*)***
  %183 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %182, align 8
  %184 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %183, i64 1
  %185 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %184, align 8
  tail call void %185(%"class.blink::NGBreakToken"* nonnull %181) #10
  br label %186

186:                                              ; preds = %165, %173, %179
  %187 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr* %187) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink10NGGridDataEEclEPS2_(%"struct.std::__1::default_delete.2096"*, %"struct.blink::NGGridData"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.blink::NGGridData"* %1, null
  br i1 %3, label %50, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.blink::NGGridData", %"struct.blink::NGGridData"* %1, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"** %5, align 8
  %7 = icmp eq %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %6, null
  %8 = bitcast %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %6 to i8*
  br i1 %7, label %15, label %9, !prof !2

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"struct.blink::NGGridData", %"struct.blink::NGGridData"* %1, i64 0, i32 5, i32 1, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13, !prof !4

13:                                               ; preds = %9
  store i32 0, i32* %10, align 4
  br label %14

14:                                               ; preds = %13, %9
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #10
  store %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* null, %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"** %5, align 8
  br label %15

15:                                               ; preds = %14, %4
  %16 = getelementptr inbounds %"struct.blink::NGGridData", %"struct.blink::NGGridData"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %17 = load %"struct.blink::NGGridData::SetData"*, %"struct.blink::NGGridData::SetData"** %16, align 8
  %18 = icmp eq %"struct.blink::NGGridData::SetData"* %17, null
  %19 = bitcast %"struct.blink::NGGridData::SetData"* %17 to i8*
  br i1 %18, label %26, label %20, !prof !2

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.blink::NGGridData", %"struct.blink::NGGridData"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24, !prof !4

24:                                               ; preds = %20
  store i32 0, i32* %21, align 4
  br label %25

25:                                               ; preds = %24, %20
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %19) #10
  store %"struct.blink::NGGridData::SetData"* null, %"struct.blink::NGGridData::SetData"** %16, align 8
  br label %26

26:                                               ; preds = %25, %15
  %27 = getelementptr inbounds %"struct.blink::NGGridData", %"struct.blink::NGGridData"* %1, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0
  %28 = load %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"** %27, align 8
  %29 = icmp eq %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %28, null
  %30 = bitcast %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %28 to i8*
  br i1 %29, label %37, label %31, !prof !2

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"struct.blink::NGGridData", %"struct.blink::NGGridData"* %1, i64 0, i32 4, i32 1, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %36, label %35, !prof !4

35:                                               ; preds = %31
  store i32 0, i32* %32, align 4
  br label %36

36:                                               ; preds = %35, %31
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %30) #10
  store %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* null, %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"** %27, align 8
  br label %37

37:                                               ; preds = %36, %26
  %38 = getelementptr inbounds %"struct.blink::NGGridData", %"struct.blink::NGGridData"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.blink::NGGridData::SetData"*, %"struct.blink::NGGridData::SetData"** %38, align 8
  %40 = icmp eq %"struct.blink::NGGridData::SetData"* %39, null
  %41 = bitcast %"struct.blink::NGGridData::SetData"* %39 to i8*
  br i1 %40, label %48, label %42, !prof !2

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"struct.blink::NGGridData", %"struct.blink::NGGridData"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46, !prof !4

46:                                               ; preds = %42
  store i32 0, i32* %43, align 4
  br label %47

47:                                               ; preds = %46, %42
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %41) #10
  br label %48

48:                                               ; preds = %37, %47
  %49 = bitcast %"struct.blink::NGGridData"* %1 to i8*
  tail call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %48, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %0, i64 0, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyle"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #10
  %8 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %28

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 -23
  %13 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 1
  %14 = bitcast %"class.base::RefCounted.732"* %13 to %"class.blink::StyleCachedData"**
  %15 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %14, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %14, align 8
  %16 = icmp eq %"class.blink::StyleCachedData"* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %18, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %18, align 8
  %20 = icmp eq %"class.WTF::Vector.739"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  tail call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv(%"class.WTF::Vector.739"* nonnull %19) #10
  %22 = bitcast %"class.WTF::Vector.739"* %19 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %22) #10
  br label %23

23:                                               ; preds = %21, %17
  %24 = bitcast %"class.blink::StyleCachedData"* %15 to i8*
  tail call void @_ZdlPv(i8* %24) #11
  br label %25

25:                                               ; preds = %23, %11
  %26 = bitcast %"class.base::RefCounted.732"* %12 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* %26) #10
  %27 = bitcast %"class.base::RefCounted.732"* %12 to i8*
  tail call void @free(i8* %27) #10
  br label %28

28:                                               ; preds = %25, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"*, %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #10
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.729", %"class.base::RefCounted.729"* %11, i64 2
  %13 = bitcast %"class.base::RefCounted.729"* %12 to %"class.blink::StyleInheritedVariables"**
  %14 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %13, align 8
  %15 = icmp eq %"class.blink::StyleInheritedVariables"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #10
  %18 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %14) #10
  %22 = bitcast %"class.blink::StyleInheritedVariables"* %14 to i8*
  tail call void @free(i8* %22) #10
  br label %23

23:                                               ; preds = %21, %16, %10
  %24 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3 to i8*
  tail call void @free(i8* %24) #10
  br label %25

25:                                               ; preds = %1, %5, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 7, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %26, align 8
  %28 = icmp eq %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #10
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"* nonnull %27) #10
  %35 = bitcast %"class.blink::ComputedStyleBase::StyleSurroundData"* %27 to i8*
  tail call void @free(i8* %35) #10
  br label %36

36:                                               ; preds = %25, %29, %34
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %37, align 8
  %39 = icmp eq %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #10
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %46, i64 2
  %48 = bitcast %"class.base::RefCounted.721"* %47 to %"class.blink::FillLayer"*
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %48) #10
  %49 = bitcast %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38 to i8*
  tail call void @free(i8* %49) #10
  br label %50

50:                                               ; preds = %36, %40, %45
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 5, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %51, align 8
  %53 = icmp eq %"class.blink::ComputedStyleBase::StyleBoxData"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #10
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"* nonnull %52) #10
  %60 = bitcast %"class.blink::ComputedStyleBase::StyleBoxData"* %52 to i8*
  tail call void @free(i8* %60) #10
  br label %61

61:                                               ; preds = %50, %54, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 4, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %62, align 8
  %64 = icmp eq %"class.blink::ComputedStyleBase::StyleSVGData"* %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %66) #10
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  tail call void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"* nonnull %63) #10
  %71 = bitcast %"class.blink::ComputedStyleBase::StyleSVGData"* %63 to i8*
  tail call void @free(i8* %71) #10
  br label %72

72:                                               ; preds = %61, %65, %70
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %73, align 8
  %75 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #10
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* nonnull %74) #10
  %82 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74 to i8*
  tail call void @free(i8* %82) #10
  br label %83

83:                                               ; preds = %72, %76, %81
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %84, align 8
  %86 = icmp eq %"class.blink::ComputedStyleBase::StyleVisualData"* %85, null
  br i1 %86, label %118, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %88) #10
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %118

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 8
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %97) #10
  br label %98

98:                                               ; preds = %96, %92
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2, i32 2
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 8
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %103) #10
  br label %104

104:                                              ; preds = %102, %98
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1, i32 2
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 8
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %109) #10
  br label %110

110:                                              ; preds = %108, %104
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0, i32 2
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 8
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %115) #10
  br label %116

116:                                              ; preds = %114, %110
  %117 = bitcast %"class.blink::ComputedStyleBase::StyleVisualData"* %85 to i8*
  tail call void @free(i8* %117) #10
  br label %118

118:                                              ; preds = %83, %87, %116
  %119 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 1, i32 0, i32 0
  %120 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %119, align 8
  %121 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, null
  br i1 %121, label %129, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %123) #10
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %122
  tail call void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* nonnull %120) #10
  %128 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120 to i8*
  tail call void @free(i8* %128) #10
  br label %129

129:                                              ; preds = %118, %122, %127
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %130, align 8
  %132 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, null
  br i1 %132, label %160, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %134) #10
  %135 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %160

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2, i32 2
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 8
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %143) #10
  br label %144

144:                                              ; preds = %142, %138
  %145 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 1, i32 0, i32 0
  %146 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %145, align 8
  %147 = icmp eq %"class.blink::ComputedStyleBase::StyleFontData"* %146, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %149) #10
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %154, i64 2
  %156 = bitcast %"class.base::RefCounted.4"* %155 to %"class.blink::Font"*
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %156) #10
  %157 = bitcast %"class.blink::ComputedStyleBase::StyleFontData"* %146 to i8*
  tail call void @free(i8* %157) #10
  br label %158

158:                                              ; preds = %153, %148, %144
  %159 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedData"* %131 to i8*
  tail call void @free(i8* %159) #10
  br label %160

160:                                              ; preds = %129, %133, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv(%"class.WTF::Vector.739"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %42, label %5, !prof !4

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %8 = zext i32 %3 to i64
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 %8
  br label %10

10:                                               ; preds = %5, %38
  %11 = phi %class.scoped_refptr* [ %39, %38 ], [ %7, %5 ]
  %12 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 0, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = icmp eq %"class.blink::ComputedStyle"* %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #10
  %18 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %38

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 -23
  %23 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 1
  %24 = bitcast %"class.base::RefCounted.732"* %23 to %"class.blink::StyleCachedData"**
  %25 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %24, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %24, align 8
  %26 = icmp eq %"class.blink::StyleCachedData"* %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %28, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %28, align 8
  %30 = icmp eq %"class.WTF::Vector.739"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  tail call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv(%"class.WTF::Vector.739"* nonnull %29) #10
  %32 = bitcast %"class.WTF::Vector.739"* %29 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %32) #10
  br label %33

33:                                               ; preds = %31, %27
  %34 = bitcast %"class.blink::StyleCachedData"* %25 to i8*
  tail call void @_ZdlPv(i8* %34) #11
  br label %35

35:                                               ; preds = %33, %21
  %36 = bitcast %"class.base::RefCounted.732"* %22 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* %36) #10
  %37 = bitcast %"class.base::RefCounted.732"* %22 to i8*
  tail call void @free(i8* %37) #10
  br label %38

38:                                               ; preds = %15, %35, %10
  %39 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 1
  %40 = icmp eq %class.scoped_refptr* %39, %9
  br i1 %40, label %41, label %10

41:                                               ; preds = %38
  store i32 0, i32* %2, align 4
  br label %42

42:                                               ; preds = %1, %41
  %43 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 0, i32 0
  %44 = load %class.scoped_refptr*, %class.scoped_refptr** %43, align 8
  %45 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = bitcast i8* %45 to %class.scoped_refptr*
  %47 = icmp eq %class.scoped_refptr* %44, %46
  br i1 %47, label %50, label %48, !prof !2

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2181"* %49, %class.scoped_refptr* %44) #10
  br label %50

50:                                               ; preds = %42, %48
  store %class.scoped_refptr* null, %class.scoped_refptr** %43, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2181"*, %class.scoped_refptr*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %class.scoped_refptr* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %2, align 8
  %4 = icmp eq %"class.blink::StyleInheritedVariables"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #10
  %7 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %3) #10
  %11 = bitcast %"class.blink::StyleInheritedVariables"* %3 to i8*
  tail call void @free(i8* %11) #10
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 1
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %13) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %25, align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, null
  br i1 %27, label %73, label %28, !prof !2

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %71, label %32

32:                                               ; preds = %28
  %33 = zext i32 %30 to i64
  br label %34

34:                                               ; preds = %68, %32
  %35 = phi i64 [ 0, %32 ], [ %69, %68 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35
  %37 = bitcast %"struct.WTF::KeyValuePair"* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, inttoptr (i64 -1 to i8*)
  br i1 %39, label %68, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35, i32 1, i32 0
  %42 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %41, align 8
  %43 = icmp eq %"class.blink::CSSVariableData"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #10
  %46 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %42) #10
  %50 = bitcast %"class.blink::CSSVariableData"* %42 to i8*
  tail call void @free(i8* %50) #10
  br label %51

51:                                               ; preds = %49, %44, %40
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #10
  br label %68

68:                                               ; preds = %67, %64, %51, %34
  %69 = add nuw nsw i64 %35, 1
  %70 = icmp eq i64 %69, %33
  br i1 %70, label %71, label %34

71:                                               ; preds = %68, %28
  %72 = bitcast %"struct.WTF::KeyValuePair"* %26 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #10
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %25, align 8
  br label %73

73:                                               ; preds = %24, %71
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #10
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #10
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !2

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !4

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #10
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !2

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !4

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #10
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.630"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #10
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #10
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #10
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #10
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #10
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #10
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #10
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #10
  br label %55

55:                                               ; preds = %49, %53
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #10
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #10
  br label %67

67:                                               ; preds = %61, %65
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #10
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #10
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #10
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 8
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %90) #10
  br label %91

91:                                               ; preds = %89, %85
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0, i32 2
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 8
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %96) #10
  br label %97

97:                                               ; preds = %91, %95
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1, i32 2
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 8
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %102) #10
  br label %103

103:                                              ; preds = %101, %97
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0, i32 2
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 8
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %108) #10
  br label %109

109:                                              ; preds = %103, %107
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1, i32 2
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 8
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %114) #10
  br label %115

115:                                              ; preds = %113, %109
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0, i32 2
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 8
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %120) #10
  br label %121

121:                                              ; preds = %115, %119
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %123 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %122, align 8
  %124 = icmp eq %"class.blink::NinePieceImageData"* %123, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %126) #10
  %127 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %125
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %123) #10
  %131 = bitcast %"class.blink::NinePieceImageData"* %123 to i8*
  tail call void @free(i8* %131) #10
  br label %132

132:                                              ; preds = %121, %125, %130
  ret void
}

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #10
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #10
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #10
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #10
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #10
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #10
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #10
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #10
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #10
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #10
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #10
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #10
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %75 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %76 = icmp eq %"class.blink::PersistentNode"* %75, null
  br i1 %76, label %96, label %77

77:                                               ; preds = %73
  %78 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %79 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %78, i64 0, i32 1
  %80 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %79) #10
  %81 = icmp eq i8* %80, null
  br i1 %81, label %82, label %84, !prof !4

82:                                               ; preds = %77
  %83 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %79, i8* %83) #10
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i8* [ %83, %82 ], [ %80, %77 ]
  %86 = bitcast i8* %85 to %"class.blink::ThreadState"**
  %87 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %87, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %88, align 8
  %90 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %91 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %89, i64 0, i32 0, i32 0
  %92 = bitcast %"class.blink::PersistentRegion"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::PersistentNode"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %90, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %95, align 8
  store %"class.blink::PersistentNode"* %90, %"class.blink::PersistentNode"** %91, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %74, align 8
  br label %96

96:                                               ; preds = %73, %84
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #10
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #10
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #10
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #10
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #10
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #10
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #10
  br label %49

49:                                               ; preds = %47, %43
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #10
  br label %55

55:                                               ; preds = %49, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 8
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %2) #10
  %3 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleStopData"*, %"class.blink::ComputedStyleBase::StyleStopData"** %3, align 8
  %5 = icmp eq %"class.blink::ComputedStyleBase::StyleStopData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #10
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ComputedStyleBase::StyleStopData"* %4 to i8*
  tail call void @free(i8* %12) #10
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"*, %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"** %14, align 8
  %16 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, null
  br i1 %16, label %31, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #10
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 6
  %25 = bitcast %"class.base::RefCounted.709"* %24 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %25) #10
  %26 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 4
  %27 = bitcast %"class.base::RefCounted.709"* %26 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %27) #10
  %28 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 2
  %29 = bitcast %"class.base::RefCounted.709"* %28 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %29) #10
  %30 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15 to i8*
  tail call void @free(i8* %30) #10
  br label %31

31:                                               ; preds = %13, %17, %23
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 5, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %32, align 8
  %34 = icmp eq %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #10
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  tail call void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"* nonnull %33) #10
  %41 = bitcast %"class.blink::ComputedStyleBase::StyleStrokeData"* %33 to i8*
  tail call void @free(i8* %41) #10
  br label %42

42:                                               ; preds = %31, %35, %40
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 4, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleFillData"*, %"class.blink::ComputedStyleBase::StyleFillData"** %43, align 8
  %45 = icmp eq %"class.blink::ComputedStyleBase::StyleFillData"* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #10
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 8
  %54 = bitcast %"class.base::RefCounted.679"* %53 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %54) #10
  %55 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 2
  %56 = bitcast %"class.base::RefCounted.679"* %55 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %56) #10
  %57 = bitcast %"class.blink::ComputedStyleBase::StyleFillData"* %44 to i8*
  tail call void @free(i8* %57) #10
  br label %58

58:                                               ; preds = %42, %46, %52
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleGeometryData"*, %"class.blink::ComputedStyleBase::StyleGeometryData"** %59, align 8
  %61 = icmp eq %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #10
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"* nonnull %60) #10
  %68 = bitcast %"class.blink::ComputedStyleBase::StyleGeometryData"* %60 to i8*
  tail call void @free(i8* %68) #10
  br label %69

69:                                               ; preds = %58, %62, %67
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleMiscData"*, %"class.blink::ComputedStyleBase::StyleMiscData"** %70, align 8
  %72 = icmp eq %"class.blink::ComputedStyleBase::StyleMiscData"* %71, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %75) #10
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %88

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 1, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.base::RefCounted.654", %"class.base::RefCounted.654"* %74, i64 1
  %85 = bitcast %"class.base::RefCounted.654"* %84 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %85) #10
  br label %86

86:                                               ; preds = %83, %79
  %87 = bitcast %"class.blink::ComputedStyleBase::StyleMiscData"* %71 to i8*
  tail call void @free(i8* %87) #10
  br label %88

88:                                               ; preds = %69, %73, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.680, %class.scoped_refptr.680* %0, i64 0, i32 0
  %3 = load %"class.blink::StyleSVGResource"*, %"class.blink::StyleSVGResource"** %2, align 8
  %4 = icmp eq %"class.blink::StyleSVGResource"* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #10
  %7 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %52

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #10
  br label %27

27:                                               ; preds = %26, %23, %10
  %28 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %30 = icmp eq %"class.blink::PersistentNode"* %29, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %27
  %32 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %33 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %32, i64 0, i32 1
  %34 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %33) #10
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %38, !prof !4

36:                                               ; preds = %31
  %37 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %33, i8* %37) #10
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i8* [ %37, %36 ], [ %34, %31 ]
  %40 = bitcast i8* %39 to %"class.blink::ThreadState"**
  %41 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %42, align 8
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %45 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %43, i64 0, i32 0, i32 0
  %46 = bitcast %"class.blink::PersistentRegion"* %43 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::PersistentNode"* %44 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %49, align 8
  store %"class.blink::PersistentNode"* %44, %"class.blink::PersistentNode"** %45, align 8
  br label %50

50:                                               ; preds = %27, %38
  %51 = bitcast %"class.blink::StyleSVGResource"* %3 to i8*
  tail call void @free(i8* %51) #10
  br label %52

52:                                               ; preds = %5, %50, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #10
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 4
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %14) #10
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 3
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %15) #10
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 2, i32 0
  %17 = load %"class.base::RefCountedData.699"*, %"class.base::RefCountedData.699"** %16, align 8
  %18 = icmp eq %"class.base::RefCountedData.699"* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %53

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 2
  %26 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to %"class.blink::Length"**
  %27 = load %"class.blink::Length"*, %"class.blink::Length"** %26, align 8
  %28 = icmp eq %"class.blink::Length"* %27, null
  br i1 %28, label %51, label %29, !prof !2

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::Length"* %27 to i8*
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %49, label %34, !prof !4

34:                                               ; preds = %29
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 %35
  br label %37

37:                                               ; preds = %43, %34
  %38 = phi %"class.blink::Length"* [ %44, %43 ], [ %27, %34 ]
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 8
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %38) #10
  br label %43

43:                                               ; preds = %42, %37
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 1
  %45 = icmp eq %"class.blink::Length"* %44, %36
  br i1 %45, label %46, label %37

46:                                               ; preds = %43
  store i32 0, i32* %31, align 4
  %47 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %29
  %50 = phi i8* [ %48, %46 ], [ %30, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  br label %51

51:                                               ; preds = %49, %24
  %52 = bitcast %"class.base::RefCountedData.699"* %17 to i8*
  tail call void @_ZdlPv(i8* %52) #11
  br label %53

53:                                               ; preds = %13, %19, %51
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #10
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #10
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #10
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #10
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #10
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #10
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 1, i32 0
  %45 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %44, align 8
  %46 = icmp eq %"class.blink::StylePath"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %45, i64 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %49) #10
  %50 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 -2
  %55 = bitcast %"class.base::RefCounted.480"* %54 to %"class.blink::BasicShape"*
  %56 = bitcast %"class.base::RefCounted.480"* %54 to void (%"class.blink::BasicShape"*)***
  %57 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %57, i64 1
  %59 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %58, align 8
  tail call void %59(%"class.blink::BasicShape"* nonnull %55) #10
  br label %60

60:                                               ; preds = %43, %47, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #10
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #10
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 6, i32 0, i32 1, i32 0
  %15 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %16 = icmp eq %"class.blink::PersistentNode"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #10
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !4

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #10
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %28, align 8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::PersistentRegion"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %31, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  br label %36

36:                                               ; preds = %13, %24
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 5, i32 0
  %38 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %37, align 8
  %39 = icmp eq %"class.blink::ShadowList"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #10
  %43 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 2
  %48 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 5, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51, !prof !4

51:                                               ; preds = %46
  store i32 0, i32* %48, align 4
  br label %52

52:                                               ; preds = %51, %46
  %53 = bitcast %"class.base::RefCounted.300"* %47 to %"class.blink::ShadowData"**
  %54 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %53, align 8
  %55 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 6
  %56 = bitcast %"class.base::RefCounted.300"* %55 to %"class.blink::ShadowData"*
  %57 = icmp eq %"class.blink::ShadowData"* %54, %56
  br i1 %57, label %60, label %58, !prof !2

58:                                               ; preds = %52
  %59 = bitcast %"class.base::RefCounted.300"* %47 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %59, %"class.blink::ShadowData"* %54) #10
  br label %60

60:                                               ; preds = %58, %52
  %61 = bitcast %"class.blink::ShadowList"* %38 to i8*
  tail call void @free(i8* %61) #10
  br label %62

62:                                               ; preds = %36, %40, %60
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4
  %64 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %class.scoped_refptr.638*, %class.scoped_refptr.638** %64, align 8
  %66 = icmp eq %class.scoped_refptr.638* %65, null
  br i1 %66, label %101, label %67, !prof !2

67:                                               ; preds = %62
  %68 = bitcast %class.scoped_refptr.638* %65 to i8*
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %99, label %72, !prof !4

72:                                               ; preds = %67
  %73 = zext i32 %70 to i64
  %74 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %65, i64 %73
  br label %75

75:                                               ; preds = %93, %72
  %76 = phi %class.scoped_refptr.638* [ %94, %93 ], [ %65, %72 ]
  %77 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 0, i32 0
  %78 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %77, align 8
  %79 = icmp eq %"class.blink::TransformOperation"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %78, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %82) #10
  %83 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 -2
  %88 = bitcast %"class.base::RefCounted.483"* %87 to %"class.blink::TransformOperation"*
  %89 = bitcast %"class.base::RefCounted.483"* %87 to void (%"class.blink::TransformOperation"*)***
  %90 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %90, i64 1
  %92 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %91, align 8
  tail call void %92(%"class.blink::TransformOperation"* nonnull %88) #10
  br label %93

93:                                               ; preds = %86, %80, %75
  %94 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 1
  %95 = icmp eq %class.scoped_refptr.638* %94, %74
  br i1 %95, label %96, label %75

96:                                               ; preds = %93
  store i32 0, i32* %69, align 4
  %97 = bitcast %"class.blink::TransformOperations"* %63 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %67
  %100 = phi i8* [ %98, %96 ], [ %68, %67 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %100) #10
  store %class.scoped_refptr.638* null, %class.scoped_refptr.638** %64, align 8
  br label %101

101:                                              ; preds = %62, %99
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %102, align 8
  %104 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %106) #10
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  tail call void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* nonnull %103) #10
  %111 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103 to i8*
  tail call void @free(i8* %111) #10
  br label %112

112:                                              ; preds = %101, %105, %110
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %113, align 8
  %115 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %117) #10
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* nonnull %114) #10
  %122 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114 to i8*
  tail call void @free(i8* %122) #10
  br label %123

123:                                              ; preds = %112, %116, %121
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"*, %"class.blink::ShadowData"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"class.blink::ShadowData"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #10
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #10
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #10
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #10
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #10
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #10
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #10
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %51 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %50, align 8
  %52 = icmp eq %"class.blink::NinePieceImageData"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #10
  %55 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %51) #10
  %59 = bitcast %"class.blink::NinePieceImageData"* %51 to i8*
  tail call void @free(i8* %59) #10
  br label %60

60:                                               ; preds = %49, %53, %58
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 13
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %61) #10
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12
  %63 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %63, align 8
  %65 = icmp eq %"class.WTF::String"* %64, null
  br i1 %65, label %100, label %66, !prof !2

66:                                               ; preds = %60
  %67 = bitcast %"class.WTF::String"* %64 to i8*
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %98, label %71, !prof !4

71:                                               ; preds = %66
  %72 = zext i32 %69 to i64
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 %72
  br label %74

74:                                               ; preds = %92, %71
  %75 = phi %"class.WTF::String"* [ %93, %92 ], [ %64, %71 ]
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #10
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 1
  %94 = icmp eq %"class.WTF::String"* %93, %73
  br i1 %94, label %95, label %74

95:                                               ; preds = %92
  store i32 0, i32* %68, align 4
  %96 = bitcast %"class.WTF::Vector.630"* %62 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %66
  %99 = phi i8* [ %97, %95 ], [ %67, %66 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %63, align 8
  br label %100

100:                                              ; preds = %60, %98
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %102 = load %"class.blink::StyleNonInheritedVariables"*, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  store %"class.blink::StyleNonInheritedVariables"* null, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  %103 = icmp eq %"class.blink::StyleNonInheritedVariables"* %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::StyleNonInheritedVariables", %"class.blink::StyleNonInheritedVariables"* %102, i64 0, i32 0
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %105) #10
  %106 = bitcast %"class.blink::StyleNonInheritedVariables"* %102 to i8*
  tail call void @free(i8* %106) #10
  br label %107

107:                                              ; preds = %100, %104
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 10
  tail call void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"* %108, %"class.blink::PaintImages"* null) #10
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %110 = load %"class.blink::CSSTransitionData"*, %"class.blink::CSSTransitionData"** %109, align 8
  store %"class.blink::CSSTransitionData"* null, %"class.blink::CSSTransitionData"** %109, align 8
  %111 = icmp eq %"class.blink::CSSTransitionData"* %110, null
  br i1 %111, label %154, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1
  %114 = getelementptr inbounds %"class.WTF::Vector.605", %"class.WTF::Vector.605"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  %116 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %115, null
  br i1 %116, label %151, label %117, !prof !2

117:                                              ; preds = %112
  %118 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %115 to i8*
  %119 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %149, label %122, !prof !4

122:                                              ; preds = %117
  %123 = zext i32 %120 to i64
  %124 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %115, i64 %123
  br label %125

125:                                              ; preds = %143, %122
  %126 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %144, %143 ], [ %115, %122 ]
  %127 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 0, i32 2, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #10
  br label %143

143:                                              ; preds = %142, %139, %125
  %144 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 1
  %145 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %144, %124
  br i1 %145, label %146, label %125

146:                                              ; preds = %143
  store i32 0, i32* %119, align 4
  %147 = bitcast %"class.WTF::Vector.605"* %113 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %149

149:                                              ; preds = %146, %117
  %150 = phi i8* [ %148, %146 ], [ %118, %117 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %150) #10
  store %"struct.blink::CSSTransitionData::TransitionProperty"* null, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  br label %151

151:                                              ; preds = %112, %149
  %152 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %152) #10
  %153 = bitcast %"class.blink::CSSTransitionData"* %110 to i8*
  tail call void @free(i8* %153) #10
  br label %154

154:                                              ; preds = %107, %151
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %156 = load %"class.blink::CSSAnimationData"*, %"class.blink::CSSAnimationData"** %155, align 8
  store %"class.blink::CSSAnimationData"* null, %"class.blink::CSSAnimationData"** %155, align 8
  %157 = icmp eq %"class.blink::CSSAnimationData"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %154
  tail call void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"* nonnull %156) #10
  %159 = bitcast %"class.blink::CSSAnimationData"* %156 to i8*
  tail call void @free(i8* %159) #10
  br label %160

160:                                              ; preds = %154, %158
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %162 = load %"class.blink::CounterDirectiveMap"*, %"class.blink::CounterDirectiveMap"** %161, align 8
  store %"class.blink::CounterDirectiveMap"* null, %"class.blink::CounterDirectiveMap"** %161, align 8
  %163 = icmp eq %"class.blink::CounterDirectiveMap"* %162, null
  br i1 %163, label %202, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 0
  %166 = load %"struct.WTF::KeyValuePair.560"*, %"struct.WTF::KeyValuePair.560"** %165, align 8
  %167 = icmp eq %"struct.WTF::KeyValuePair.560"* %166, null
  br i1 %167, label %200, label %168, !prof !2

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %198, label %172

172:                                              ; preds = %168
  %173 = zext i32 %170 to i64
  br label %174

174:                                              ; preds = %195, %172
  %175 = phi i64 [ 0, %172 ], [ %196, %195 ]
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.560", %"struct.WTF::KeyValuePair.560"* %166, i64 %175
  %177 = bitcast %"struct.WTF::KeyValuePair.560"* %176 to i8**
  %178 = load i8*, i8** %177, align 8
  %179 = bitcast i8* %178 to %"class.WTF::StringImpl"*
  %180 = ptrtoint i8* %178 to i64
  switch i64 %180, label %181 [
    i64 -1, label %195
    i64 0, label %195
  ]

181:                                              ; preds = %174
  %182 = getelementptr inbounds i8, i8* %178, i64 8
  %183 = bitcast i8* %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = bitcast i8* %178 to i32*
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %181
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %181
  %192 = phi i32 [ %190, %189 ], [ %188, %181 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #10
  br label %195

195:                                              ; preds = %194, %191, %174, %174
  %196 = add nuw nsw i64 %175, 1
  %197 = icmp eq i64 %196, %173
  br i1 %197, label %198, label %174

198:                                              ; preds = %195, %168
  %199 = bitcast %"struct.WTF::KeyValuePair.560"* %166 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %199) #10
  store %"struct.WTF::KeyValuePair.560"* null, %"struct.WTF::KeyValuePair.560"** %165, align 8
  br label %200

200:                                              ; preds = %198, %164
  %201 = bitcast %"class.blink::CounterDirectiveMap"* %162 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %201) #10
  br label %202

202:                                              ; preds = %160, %200
  %203 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #10
  br label %219

219:                                              ; preds = %202, %215, %218
  %220 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #10
  br label %236

236:                                              ; preds = %219, %232, %235
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #10
  br label %253

253:                                              ; preds = %236, %249, %252
  %254 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 3, i32 0, i32 0
  %255 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %254, align 8
  %256 = icmp eq %"class.blink::ComputedStyleBase::StyleGridData"* %255, null
  br i1 %256, label %264, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %258) #10
  %259 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %257
  tail call void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"* nonnull %255) #10
  %263 = bitcast %"class.blink::ComputedStyleBase::StyleGridData"* %255 to i8*
  tail call void @free(i8* %263) #10
  br label %264

264:                                              ; preds = %253, %257, %262
  %265 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0
  %266 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %265, align 8
  %267 = icmp eq %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, null
  br i1 %267, label %288, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0
  %270 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %270) #10
  %271 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %288

274:                                              ; preds = %268
  %275 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 2
  %276 = bitcast %"class.base::RefCounted.528"* %275 to i32**
  %277 = load i32*, i32** %276, align 8
  %278 = icmp eq i32* %277, null
  %279 = bitcast i32* %277 to i8*
  br i1 %278, label %286, label %280, !prof !2

280:                                              ; preds = %274
  %281 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 5, i32 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %285, label %284, !prof !4

284:                                              ; preds = %280
  store i32 0, i32* %281, align 4
  br label %285

285:                                              ; preds = %284, %280
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %279) #10
  br label %286

286:                                              ; preds = %285, %274
  %287 = bitcast %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266 to i8*
  tail call void @free(i8* %287) #10
  br label %288

288:                                              ; preds = %264, %268, %286
  %289 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 1, i32 0, i32 0
  %290 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %289, align 8
  %291 = icmp eq %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, null
  br i1 %291, label %299, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %293) #10
  %294 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %299

297:                                              ; preds = %292
  %298 = bitcast %"class.blink::ComputedStyleBase::StyleMultiColData"* %290 to i8*
  tail call void @free(i8* %298) #10
  br label %299

299:                                              ; preds = %288, %292, %297
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"*, %"class.blink::PaintImages"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.613"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PaintImages"*, %"class.blink::PaintImages"** %3, align 8
  store %"class.blink::PaintImages"* %1, %"class.blink::PaintImages"** %3, align 8
  %5 = icmp eq %"class.blink::PaintImages"* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Persistent.306"*, %"class.blink::Persistent.306"** %7, align 8
  %9 = icmp eq %"class.blink::Persistent.306"* %8, null
  br i1 %9, label %50, label %10, !prof !2

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::Persistent.306"* %8 to i8*
  %12 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %48, label %15, !prof !4

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %8, i64 %16
  br label %18

18:                                               ; preds = %15, %42
  %19 = phi %"class.blink::Persistent.306"* [ %43, %42 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 0, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #10
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !4

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #10
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %30, %18
  %43 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 1
  %44 = icmp eq %"class.blink::Persistent.306"* %43, %17
  br i1 %44, label %45, label %18

45:                                               ; preds = %42
  store i32 0, i32* %12, align 4
  %46 = bitcast %"class.blink::PaintImages"* %4 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %10
  %49 = phi i8* [ %47, %45 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #10
  store %"class.blink::Persistent.306"* null, %"class.blink::Persistent.306"** %7, align 8
  br label %50

50:                                               ; preds = %6, %48
  %51 = bitcast %"class.blink::PaintImages"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %51) #10
  br label %52

52:                                               ; preds = %2, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.572", %"class.WTF::Vector.572"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.575*, %class.scoped_refptr.575** %3, align 8
  %5 = icmp eq %class.scoped_refptr.575* %4, null
  br i1 %5, label %39, label %6, !prof !2

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.575* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11, !prof !4

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %4, i64 %12
  br label %14

14:                                               ; preds = %31, %11
  %15 = phi %class.scoped_refptr.575* [ %32, %31 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 0, i32 0
  %17 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %16, align 8
  %18 = icmp eq %"class.blink::TimingFunction"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %17, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to %"class.blink::TimingFunction"*
  %27 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to void (%"class.blink::TimingFunction"*)***
  %28 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, i64 1
  %30 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %29, align 8
  tail call void %30(%"class.blink::TimingFunction"* nonnull %26) #10
  br label %31

31:                                               ; preds = %24, %19, %14
  %32 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 1
  %33 = icmp eq %class.scoped_refptr.575* %32, %13
  br i1 %33, label %34, label %14

34:                                               ; preds = %31
  store i32 0, i32* %8, align 4
  %35 = bitcast %"class.WTF::Vector.572"* %2 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %6
  %38 = phi i8* [ %36, %34 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #10
  store %class.scoped_refptr.575* null, %class.scoped_refptr.575** %3, align 8
  br label %39

39:                                               ; preds = %1, %37
  %40 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load double*, double** %40, align 8
  %42 = icmp eq double* %41, null
  %43 = bitcast double* %41 to i8*
  br i1 %42, label %50, label %44, !prof !2

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48, !prof !4

48:                                               ; preds = %44
  store i32 0, i32* %45, align 4
  br label %49

49:                                               ; preds = %48, %44
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #10
  store double* null, double** %40, align 8
  br label %50

50:                                               ; preds = %39, %49
  %51 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load double*, double** %51, align 8
  %53 = icmp eq double* %52, null
  %54 = bitcast double* %52 to i8*
  br i1 %53, label %61, label %55, !prof !2

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !4

59:                                               ; preds = %55
  store i32 0, i32* %56, align 4
  br label %60

60:                                               ; preds = %59, %55
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #10
  store double* null, double** %51, align 8
  br label %61

61:                                               ; preds = %50, %60
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  %5 = bitcast i32* %3 to i8*
  br i1 %4, label %12, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !4

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #10
  store i32* null, i32** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  %16 = bitcast i32* %14 to i8*
  br i1 %15, label %23, label %17, !prof !2

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !4

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #10
  store i32* null, i32** %13, align 8
  br label %23

23:                                               ; preds = %12, %22
  %24 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %25, null
  %27 = bitcast i32* %25 to i8*
  br i1 %26, label %34, label %28, !prof !2

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !4

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #10
  store i32* null, i32** %24, align 8
  br label %34

34:                                               ; preds = %23, %33
  %35 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load double*, double** %35, align 8
  %37 = icmp eq double* %36, null
  %38 = bitcast double* %36 to i8*
  br i1 %37, label %45, label %39, !prof !2

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !4

43:                                               ; preds = %39
  store i32 0, i32* %40, align 4
  br label %44

44:                                               ; preds = %43, %39
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #10
  store double* null, double** %35, align 8
  br label %45

45:                                               ; preds = %34, %44
  %46 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"class.WTF::Vector.579", %"class.WTF::Vector.579"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::StyleNameOrKeyword"*, %"class.blink::StyleNameOrKeyword"** %47, align 8
  %49 = icmp eq %"class.blink::StyleNameOrKeyword"* %48, null
  br i1 %49, label %84, label %50, !prof !2

50:                                               ; preds = %45
  %51 = bitcast %"class.blink::StyleNameOrKeyword"* %48 to i8*
  %52 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %82, label %55, !prof !4

55:                                               ; preds = %50
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %48, i64 %56
  br label %58

58:                                               ; preds = %76, %55
  %59 = phi %"class.blink::StyleNameOrKeyword"* [ %77, %76 ], [ %48, %55 ]
  %60 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #10
  br label %76

76:                                               ; preds = %75, %72, %58
  %77 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 1
  %78 = icmp eq %"class.blink::StyleNameOrKeyword"* %77, %57
  br i1 %78, label %79, label %58

79:                                               ; preds = %76
  store i32 0, i32* %52, align 4
  %80 = bitcast %"class.WTF::Vector.579"* %46 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %50
  %83 = phi i8* [ %81, %79 ], [ %51, %50 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %83) #10
  store %"class.blink::StyleNameOrKeyword"* null, %"class.blink::StyleNameOrKeyword"** %47, align 8
  br label %84

84:                                               ; preds = %45, %82
  %85 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %86, align 8
  %88 = icmp eq %"class.WTF::AtomicString"* %87, null
  br i1 %88, label %123, label %89, !prof !2

89:                                               ; preds = %84
  %90 = bitcast %"class.WTF::AtomicString"* %87 to i8*
  %91 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %121, label %94, !prof !4

94:                                               ; preds = %89
  %95 = zext i32 %92 to i64
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 %95
  br label %97

97:                                               ; preds = %115, %94
  %98 = phi %"class.WTF::AtomicString"* [ %116, %115 ], [ %87, %94 ]
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #10
  br label %115

115:                                              ; preds = %114, %111, %97
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 1
  %117 = icmp eq %"class.WTF::AtomicString"* %116, %96
  br i1 %117, label %118, label %97

118:                                              ; preds = %115
  store i32 0, i32* %91, align 4
  %119 = bitcast %"class.WTF::Vector.284"* %85 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %89
  %122 = phi i8* [ %120, %118 ], [ %90, %89 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %122) #10
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %86, align 8
  br label %123

123:                                              ; preds = %84, %121
  %124 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %124) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14
  %3 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %3, align 8
  %5 = icmp eq %"class.blink::GridTrackSize"* %4, null
  br i1 %5, label %41, label %6, !prof !2

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::GridTrackSize"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11, !prof !4

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 %12
  br label %14

14:                                               ; preds = %33, %11
  %15 = phi %"class.blink::GridTrackSize"* [ %34, %33 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 8
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %20) #10
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 8
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %26) #10
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %32) #10
  br label %33

33:                                               ; preds = %31, %27
  %34 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 1
  %35 = icmp eq %"class.blink::GridTrackSize"* %34, %13
  br i1 %35, label %36, label %14

36:                                               ; preds = %33
  store i32 0, i32* %8, align 4
  %37 = bitcast %"class.WTF::Vector.459"* %2 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %6
  %40 = phi i8* [ %38, %36 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #10
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %3, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13
  %43 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %43, align 8
  %45 = icmp eq %"class.blink::GridTrackSize"* %44, null
  br i1 %45, label %81, label %46, !prof !2

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::GridTrackSize"* %44 to i8*
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %79, label %51, !prof !4

51:                                               ; preds = %46
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %44, i64 %52
  br label %54

54:                                               ; preds = %73, %51
  %55 = phi %"class.blink::GridTrackSize"* [ %74, %73 ], [ %44, %51 ]
  %56 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #10
  br label %61

61:                                               ; preds = %59, %54
  %62 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #10
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #10
  br label %73

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 1
  %75 = icmp eq %"class.blink::GridTrackSize"* %74, %53
  br i1 %75, label %76, label %54

76:                                               ; preds = %73
  store i32 0, i32* %48, align 4
  %77 = bitcast %"class.WTF::Vector.459"* %42 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %46
  %80 = phi i8* [ %78, %76 ], [ %47, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #10
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %43, align 8
  br label %81

81:                                               ; preds = %41, %79
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 0
  %83 = load %"struct.WTF::KeyValuePair.552"*, %"struct.WTF::KeyValuePair.552"** %82, align 8
  %84 = icmp eq %"struct.WTF::KeyValuePair.552"* %83, null
  br i1 %84, label %117, label %85, !prof !2

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %115, label %89

89:                                               ; preds = %85
  %90 = zext i32 %87 to i64
  br label %91

91:                                               ; preds = %112, %89
  %92 = phi i64 [ 0, %89 ], [ %113, %112 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %83, i64 %92
  %94 = bitcast %"struct.WTF::KeyValuePair.552"* %93 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = bitcast i8* %95 to %"class.WTF::StringImpl"*
  %97 = ptrtoint i8* %95 to i64
  switch i64 %97, label %98 [
    i64 -1, label %112
    i64 0, label %112
  ]

98:                                               ; preds = %91
  %99 = getelementptr inbounds i8, i8* %95, i64 8
  %100 = bitcast i8* %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = bitcast i8* %95 to i32*
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %98
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %98
  %109 = phi i32 [ %107, %106 ], [ %105, %98 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #10
  br label %112

112:                                              ; preds = %111, %108, %91, %91
  %113 = add nuw nsw i64 %92, 1
  %114 = icmp eq i64 %113, %90
  br i1 %114, label %115, label %91

115:                                              ; preds = %112, %85
  %116 = bitcast %"struct.WTF::KeyValuePair.552"* %83 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %116) #10
  store %"struct.WTF::KeyValuePair.552"* null, %"struct.WTF::KeyValuePair.552"** %82, align 8
  br label %117

117:                                              ; preds = %81, %115
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 0
  %119 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %118, align 8
  %120 = icmp eq %"struct.WTF::KeyValuePair.547"* %119, null
  br i1 %120, label %124, label %121, !prof !2

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %119, i32 %123) #10
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %118, align 8
  br label %124

124:                                              ; preds = %117, %121
  %125 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 0
  %126 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %125, align 8
  %127 = icmp eq %"struct.WTF::KeyValuePair.547"* %126, null
  br i1 %127, label %131, label %128, !prof !2

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %126, i32 %130) #10
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %125, align 8
  br label %131

131:                                              ; preds = %124, %128
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 0
  %133 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %132, align 8
  %134 = icmp eq %"struct.WTF::KeyValuePair.547"* %133, null
  br i1 %134, label %138, label %135, !prof !2

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %133, i32 %137) #10
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %132, align 8
  br label %138

138:                                              ; preds = %131, %135
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 0
  %140 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %139, align 8
  %141 = icmp eq %"struct.WTF::KeyValuePair.547"* %140, null
  br i1 %141, label %145, label %142, !prof !2

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 1
  %144 = load i32, i32* %143, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %140, i32 %144) #10
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %139, align 8
  br label %145

145:                                              ; preds = %138, %142
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 0
  %147 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %146, align 8
  %148 = icmp eq %"struct.WTF::KeyValuePair.542"* %147, null
  br i1 %148, label %196, label %149, !prof !2

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %194, label %153

153:                                              ; preds = %149
  %154 = zext i32 %151 to i64
  br label %155

155:                                              ; preds = %191, %153
  %156 = phi i64 [ 0, %153 ], [ %192, %191 ]
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156
  %158 = bitcast %"struct.WTF::KeyValuePair.542"* %157 to i8**
  %159 = load i8*, i8** %158, align 8
  %160 = icmp eq i8* %159, inttoptr (i64 -1 to i8*)
  br i1 %160, label %191, label %161

161:                                              ; preds = %155
  %162 = bitcast i8* %159 to %"class.WTF::StringImpl"*
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %164, null
  %166 = bitcast i64* %164 to i8*
  br i1 %165, label %175, label %167, !prof !2

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %172, label %171, !prof !4

171:                                              ; preds = %167
  store i32 0, i32* %168, align 4
  br label %172

172:                                              ; preds = %171, %167
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #10
  store i64* null, i64** %163, align 8
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %157, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  br label %175

175:                                              ; preds = %172, %161
  %176 = phi %"class.WTF::StringImpl"* [ %174, %172 ], [ %162, %161 ]
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #10
  br label %191

191:                                              ; preds = %190, %187, %175, %155
  %192 = add nuw nsw i64 %156, 1
  %193 = icmp eq i64 %192, %154
  br i1 %193, label %194, label %155

194:                                              ; preds = %191, %149
  %195 = bitcast %"struct.WTF::KeyValuePair.542"* %147 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %195) #10
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %146, align 8
  br label %196

196:                                              ; preds = %145, %194
  %197 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 0
  %198 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %197, align 8
  %199 = icmp eq %"struct.WTF::KeyValuePair.542"* %198, null
  br i1 %199, label %247, label %200, !prof !2

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 1
  %202 = load i32, i32* %201, align 8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %245, label %204

204:                                              ; preds = %200
  %205 = zext i32 %202 to i64
  br label %206

206:                                              ; preds = %242, %204
  %207 = phi i64 [ 0, %204 ], [ %243, %242 ]
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207
  %209 = bitcast %"struct.WTF::KeyValuePair.542"* %208 to i8**
  %210 = load i8*, i8** %209, align 8
  %211 = icmp eq i8* %210, inttoptr (i64 -1 to i8*)
  br i1 %211, label %242, label %212

212:                                              ; preds = %206
  %213 = bitcast i8* %210 to %"class.WTF::StringImpl"*
  %214 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 0
  %215 = load i64*, i64** %214, align 8
  %216 = icmp eq i64* %215, null
  %217 = bitcast i64* %215 to i8*
  br i1 %216, label %226, label %218, !prof !2

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %223, label %222, !prof !4

222:                                              ; preds = %218
  store i32 0, i32* %219, align 4
  br label %223

223:                                              ; preds = %222, %218
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %217) #10
  store i64* null, i64** %214, align 8
  %224 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %208, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  br label %226

226:                                              ; preds = %223, %212
  %227 = phi %"class.WTF::StringImpl"* [ %225, %223 ], [ %213, %212 ]
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #10
  br label %242

242:                                              ; preds = %241, %238, %226, %206
  %243 = add nuw nsw i64 %207, 1
  %244 = icmp eq i64 %243, %205
  br i1 %244, label %245, label %206

245:                                              ; preds = %242, %200
  %246 = bitcast %"struct.WTF::KeyValuePair.542"* %198 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %246) #10
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %197, align 8
  br label %247

247:                                              ; preds = %196, %245
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 0
  %249 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %248, align 8
  %250 = icmp eq %"struct.WTF::KeyValuePair.542"* %249, null
  br i1 %250, label %298, label %251, !prof !2

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %296, label %255

255:                                              ; preds = %251
  %256 = zext i32 %253 to i64
  br label %257

257:                                              ; preds = %293, %255
  %258 = phi i64 [ 0, %255 ], [ %294, %293 ]
  %259 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258
  %260 = bitcast %"struct.WTF::KeyValuePair.542"* %259 to i8**
  %261 = load i8*, i8** %260, align 8
  %262 = icmp eq i8* %261, inttoptr (i64 -1 to i8*)
  br i1 %262, label %293, label %263

263:                                              ; preds = %257
  %264 = bitcast i8* %261 to %"class.WTF::StringImpl"*
  %265 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 0
  %266 = load i64*, i64** %265, align 8
  %267 = icmp eq i64* %266, null
  %268 = bitcast i64* %266 to i8*
  br i1 %267, label %277, label %269, !prof !2

269:                                              ; preds = %263
  %270 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 2
  %271 = load i32, i32* %270, align 4
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %274, label %273, !prof !4

273:                                              ; preds = %269
  store i32 0, i32* %270, align 4
  br label %274

274:                                              ; preds = %273, %269
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %268) #10
  store i64* null, i64** %265, align 8
  %275 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %259, i64 0, i32 0, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  br label %277

277:                                              ; preds = %274, %263
  %278 = phi %"class.WTF::StringImpl"* [ %276, %274 ], [ %264, %263 ]
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #10
  br label %293

293:                                              ; preds = %292, %289, %277, %257
  %294 = add nuw nsw i64 %258, 1
  %295 = icmp eq i64 %294, %256
  br i1 %295, label %296, label %257

296:                                              ; preds = %293, %251
  %297 = bitcast %"struct.WTF::KeyValuePair.542"* %249 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %297) #10
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %248, align 8
  br label %298

298:                                              ; preds = %247, %296
  %299 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 0
  %300 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %299, align 8
  %301 = icmp eq %"struct.WTF::KeyValuePair.542"* %300, null
  br i1 %301, label %349, label %302, !prof !2

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 1
  %304 = load i32, i32* %303, align 8
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %347, label %306

306:                                              ; preds = %302
  %307 = zext i32 %304 to i64
  br label %308

308:                                              ; preds = %344, %306
  %309 = phi i64 [ 0, %306 ], [ %345, %344 ]
  %310 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309
  %311 = bitcast %"struct.WTF::KeyValuePair.542"* %310 to i8**
  %312 = load i8*, i8** %311, align 8
  %313 = icmp eq i8* %312, inttoptr (i64 -1 to i8*)
  br i1 %313, label %344, label %314

314:                                              ; preds = %308
  %315 = bitcast i8* %312 to %"class.WTF::StringImpl"*
  %316 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 0
  %317 = load i64*, i64** %316, align 8
  %318 = icmp eq i64* %317, null
  %319 = bitcast i64* %317 to i8*
  br i1 %318, label %328, label %320, !prof !2

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 2
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %325, label %324, !prof !4

324:                                              ; preds = %320
  store i32 0, i32* %321, align 4
  br label %325

325:                                              ; preds = %324, %320
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %319) #10
  store i64* null, i64** %316, align 8
  %326 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %310, i64 0, i32 0, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  br label %328

328:                                              ; preds = %325, %314
  %329 = phi %"class.WTF::StringImpl"* [ %327, %325 ], [ %315, %314 ]
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #10
  br label %344

344:                                              ; preds = %343, %340, %328, %308
  %345 = add nuw nsw i64 %309, 1
  %346 = icmp eq i64 %345, %307
  br i1 %346, label %347, label %308

347:                                              ; preds = %344, %302
  %348 = bitcast %"struct.WTF::KeyValuePair.542"* %300 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %348) #10
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %299, align 8
  br label %349

349:                                              ; preds = %298, %347
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 0
  %351 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %350, align 8
  %352 = icmp eq %"struct.WTF::KeyValuePair.542"* %351, null
  br i1 %352, label %400, label %353, !prof !2

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 1
  %355 = load i32, i32* %354, align 8
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %398, label %357

357:                                              ; preds = %353
  %358 = zext i32 %355 to i64
  br label %359

359:                                              ; preds = %395, %357
  %360 = phi i64 [ 0, %357 ], [ %396, %395 ]
  %361 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360
  %362 = bitcast %"struct.WTF::KeyValuePair.542"* %361 to i8**
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, inttoptr (i64 -1 to i8*)
  br i1 %364, label %395, label %365

365:                                              ; preds = %359
  %366 = bitcast i8* %363 to %"class.WTF::StringImpl"*
  %367 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 0
  %368 = load i64*, i64** %367, align 8
  %369 = icmp eq i64* %368, null
  %370 = bitcast i64* %368 to i8*
  br i1 %369, label %379, label %371, !prof !2

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %376, label %375, !prof !4

375:                                              ; preds = %371
  store i32 0, i32* %372, align 4
  br label %376

376:                                              ; preds = %375, %371
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %370) #10
  store i64* null, i64** %367, align 8
  %377 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %361, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  br label %379

379:                                              ; preds = %376, %365
  %380 = phi %"class.WTF::StringImpl"* [ %378, %376 ], [ %366, %365 ]
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %395, label %382

382:                                              ; preds = %379
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %382
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i32 [ %390, %389 ], [ %388, %382 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %380) #10
  br label %395

395:                                              ; preds = %394, %391, %379, %359
  %396 = add nuw nsw i64 %360, 1
  %397 = icmp eq i64 %396, %358
  br i1 %397, label %398, label %359

398:                                              ; preds = %395, %353
  %399 = bitcast %"struct.WTF::KeyValuePair.542"* %351 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %399) #10
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %350, align 8
  br label %400

400:                                              ; preds = %349, %398
  %401 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 0
  %402 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %401, align 8
  %403 = icmp eq %"struct.WTF::KeyValuePair.542"* %402, null
  br i1 %403, label %451, label %404, !prof !2

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 1
  %406 = load i32, i32* %405, align 8
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %449, label %408

408:                                              ; preds = %404
  %409 = zext i32 %406 to i64
  br label %410

410:                                              ; preds = %446, %408
  %411 = phi i64 [ 0, %408 ], [ %447, %446 ]
  %412 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411
  %413 = bitcast %"struct.WTF::KeyValuePair.542"* %412 to i8**
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, inttoptr (i64 -1 to i8*)
  br i1 %415, label %446, label %416

416:                                              ; preds = %410
  %417 = bitcast i8* %414 to %"class.WTF::StringImpl"*
  %418 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 0
  %419 = load i64*, i64** %418, align 8
  %420 = icmp eq i64* %419, null
  %421 = bitcast i64* %419 to i8*
  br i1 %420, label %430, label %422, !prof !2

422:                                              ; preds = %416
  %423 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 2
  %424 = load i32, i32* %423, align 4
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %427, label %426, !prof !4

426:                                              ; preds = %422
  store i32 0, i32* %423, align 4
  br label %427

427:                                              ; preds = %426, %422
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %421) #10
  store i64* null, i64** %418, align 8
  %428 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %412, i64 0, i32 0, i32 0, i32 0
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  br label %430

430:                                              ; preds = %427, %416
  %431 = phi %"class.WTF::StringImpl"* [ %429, %427 ], [ %417, %416 ]
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %446, label %433

433:                                              ; preds = %430
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  br i1 %437, label %440, label %442

440:                                              ; preds = %433
  %441 = add i32 %439, -1
  store i32 %441, i32* %438, align 4
  br label %442

442:                                              ; preds = %440, %433
  %443 = phi i32 [ %441, %440 ], [ %439, %433 ]
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %446

445:                                              ; preds = %442
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %431) #10
  br label %446

446:                                              ; preds = %445, %442, %430, %410
  %447 = add nuw nsw i64 %411, 1
  %448 = icmp eq i64 %447, %409
  br i1 %448, label %449, label %410

449:                                              ; preds = %446, %404
  %450 = bitcast %"struct.WTF::KeyValuePair.542"* %402 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %450) #10
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %401, align 8
  br label %451

451:                                              ; preds = %400, %449
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %52, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.547"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #10
  ret void

8:                                                ; preds = %52, %4
  %9 = phi i64 [ 0, %4 ], [ %53, %52 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -2
  br i1 %12, label %52, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = icmp eq %"class.WTF::String"* %16, null
  br i1 %17, label %52, label %18, !prof !2

18:                                               ; preds = %13
  %19 = bitcast %"class.WTF::String"* %16 to i8*
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %50, label %23, !prof !4

23:                                               ; preds = %18
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %24
  br label %26

26:                                               ; preds = %44, %23
  %27 = phi %"class.WTF::String"* [ %45, %44 ], [ %16, %23 ]
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #10
  br label %44

44:                                               ; preds = %43, %40, %26
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %46 = icmp eq %"class.WTF::String"* %45, %25
  br i1 %46, label %47, label %26

47:                                               ; preds = %44
  store i32 0, i32* %20, align 4
  %48 = bitcast %"class.WTF::Vector.630"* %14 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %18
  %51 = phi i8* [ %49, %47 ], [ %19, %18 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %52

52:                                               ; preds = %50, %13, %8
  %53 = add nuw nsw i64 %9, 1
  %54 = icmp eq i64 %53, %5
  br i1 %54, label %6, label %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #10
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !4

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #10
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %25, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  br label %30

30:                                               ; preds = %7, %18
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %31, align 8
  %33 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #10
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  tail call void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* nonnull %32) #10
  %40 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32 to i8*
  tail call void @free(i8* %40) #10
  br label %41

41:                                               ; preds = %30, %34, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #10
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #10
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #10
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #10
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #10
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #10
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #10
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #10
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #10
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #10
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #10
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #10
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #10
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 4, !range !5
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 8
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %94) #10
  br label %95

95:                                               ; preds = %93, %89
  store i8 0, i8* %86, align 4
  br label %96

96:                                               ; preds = %85, %95
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 4, !range !5
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %107, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 8
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %105) #10
  br label %106

106:                                              ; preds = %104, %100
  store i8 0, i8* %97, align 4
  br label %107

107:                                              ; preds = %96, %106
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 17, i32 0, i32 1, i32 0
  %109 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %110 = icmp eq %"class.blink::PersistentNode"* %109, null
  br i1 %110, label %130, label %111

111:                                              ; preds = %107
  %112 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %113 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %112, i64 0, i32 1
  %114 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %113) #10
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %118, !prof !4

116:                                              ; preds = %111
  %117 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %113, i8* %117) #10
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i8* [ %117, %116 ], [ %114, %111 ]
  %120 = bitcast i8* %119 to %"class.blink::ThreadState"**
  %121 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %121, i64 0, i32 3, i32 0, i32 0, i32 0
  %123 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %122, align 8
  %124 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %125 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %123, i64 0, i32 0, i32 0
  %126 = bitcast %"class.blink::PersistentRegion"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.blink::PersistentNode"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %124, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %129, align 8
  store %"class.blink::PersistentNode"* %124, %"class.blink::PersistentNode"** %125, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %108, align 8
  br label %130

130:                                              ; preds = %107, %118
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 16, i32 0, i32 1, i32 0
  %132 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %133 = icmp eq %"class.blink::PersistentNode"* %132, null
  br i1 %133, label %153, label %134

134:                                              ; preds = %130
  %135 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %136 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %135, i64 0, i32 1
  %137 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %136) #10
  %138 = icmp eq i8* %137, null
  br i1 %138, label %139, label %141, !prof !4

139:                                              ; preds = %134
  %140 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %136, i8* %140) #10
  br label %141

141:                                              ; preds = %139, %134
  %142 = phi i8* [ %140, %139 ], [ %137, %134 ]
  %143 = bitcast i8* %142 to %"class.blink::ThreadState"**
  %144 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %146 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %145, align 8
  %147 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %148 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %146, i64 0, i32 0, i32 0
  %149 = bitcast %"class.blink::PersistentRegion"* %146 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.blink::PersistentNode"* %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %147, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %152, align 8
  store %"class.blink::PersistentNode"* %147, %"class.blink::PersistentNode"** %148, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %131, align 8
  br label %153

153:                                              ; preds = %130, %141
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 15, i32 0
  %155 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %154, align 8
  %156 = icmp eq %"class.blink::StyleReflection"* %155, null
  br i1 %156, label %181, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %158) #10
  %159 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %181

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %163, align 8
  %165 = icmp eq %"class.blink::NinePieceImageData"* %164, null
  br i1 %165, label %173, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %167) #10
  %168 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %166
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %164) #10
  %172 = bitcast %"class.blink::NinePieceImageData"* %164 to i8*
  tail call void @free(i8* %172) #10
  br label %173

173:                                              ; preds = %171, %166, %162
  %174 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2, i32 2
  %175 = load i8, i8* %174, align 1
  %176 = icmp eq i8 %175, 8
  br i1 %176, label %177, label %179

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %178) #10
  br label %179

179:                                              ; preds = %173, %177
  %180 = bitcast %"class.blink::StyleReflection"* %155 to i8*
  tail call void @free(i8* %180) #10
  br label %181

181:                                              ; preds = %153, %157, %179
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 14, i32 0
  %183 = load %"class.blink::TranslateTransformOperation"*, %"class.blink::TranslateTransformOperation"** %182, align 8
  %184 = icmp eq %"class.blink::TranslateTransformOperation"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %183, i64 0, i32 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %187) #10
  %188 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %198

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 -2
  %193 = bitcast %"class.base::RefCounted.483"* %192 to %"class.blink::TransformOperation"*
  %194 = bitcast %"class.base::RefCounted.483"* %192 to void (%"class.blink::TransformOperation"*)***
  %195 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %195, i64 1
  %197 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %196, align 8
  tail call void %197(%"class.blink::TransformOperation"* nonnull %193) #10
  br label %198

198:                                              ; preds = %181, %185, %191
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 13, i32 0
  %200 = load %"class.blink::ScaleTransformOperation"*, %"class.blink::ScaleTransformOperation"** %199, align 8
  %201 = icmp eq %"class.blink::ScaleTransformOperation"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::ScaleTransformOperation", %"class.blink::ScaleTransformOperation"* %200, i64 0, i32 0, i32 1, i32 0
  %204 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %204) #10
  %205 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 -2
  %210 = bitcast %"class.base::RefCounted.483"* %209 to %"class.blink::TransformOperation"*
  %211 = bitcast %"class.base::RefCounted.483"* %209 to void (%"class.blink::TransformOperation"*)***
  %212 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %212, i64 1
  %214 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %213, align 8
  tail call void %214(%"class.blink::TransformOperation"* nonnull %210) #10
  br label %215

215:                                              ; preds = %198, %202, %208
  %216 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 12, i32 0
  %217 = load %"class.blink::RotateTransformOperation"*, %"class.blink::RotateTransformOperation"** %216, align 8
  %218 = icmp eq %"class.blink::RotateTransformOperation"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.blink::RotateTransformOperation", %"class.blink::RotateTransformOperation"* %217, i64 0, i32 0, i32 1, i32 0
  %221 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %221) #10
  %222 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %232

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 -2
  %227 = bitcast %"class.base::RefCounted.483"* %226 to %"class.blink::TransformOperation"*
  %228 = bitcast %"class.base::RefCounted.483"* %226 to void (%"class.blink::TransformOperation"*)***
  %229 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %229, i64 1
  %231 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %230, align 8
  tail call void %231(%"class.blink::TransformOperation"* nonnull %227) #10
  br label %232

232:                                              ; preds = %215, %219, %225
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 11, i32 0
  %234 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %233, align 8
  %235 = icmp eq %"class.blink::BasicShape"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %234, i64 0, i32 1, i32 0
  %238 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %238) #10
  %239 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 -2
  %244 = bitcast %"class.base::RefCounted.480"* %243 to %"class.blink::BasicShape"*
  %245 = bitcast %"class.base::RefCounted.480"* %243 to void (%"class.blink::BasicShape"*)***
  %246 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %245, align 8
  %247 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %246, i64 1
  %248 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %247, align 8
  tail call void %248(%"class.blink::BasicShape"* nonnull %244) #10
  br label %249

249:                                              ; preds = %232, %236, %242
  %250 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 10, i32 0
  %251 = load %"class.blink::ClipPathOperation"*, %"class.blink::ClipPathOperation"** %250, align 8
  %252 = icmp eq %"class.blink::ClipPathOperation"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.blink::ClipPathOperation", %"class.blink::ClipPathOperation"* %251, i64 0, i32 1, i32 0
  %255 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %255) #10
  %256 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 -2
  %261 = bitcast %"class.base::RefCounted.477"* %260 to %"class.blink::ClipPathOperation"*
  %262 = bitcast %"class.base::RefCounted.477"* %260 to void (%"class.blink::ClipPathOperation"*)***
  %263 = load void (%"class.blink::ClipPathOperation"*)**, void (%"class.blink::ClipPathOperation"*)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %263, i64 1
  %265 = load void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %264, align 8
  tail call void %265(%"class.blink::ClipPathOperation"* nonnull %261) #10
  br label %266

266:                                              ; preds = %249, %253, %259
  %267 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #10
  br label %283

283:                                              ; preds = %266, %279, %282
  %284 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #10
  br label %300

300:                                              ; preds = %283, %296, %299
  %301 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %317, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #10
  br label %317

317:                                              ; preds = %300, %313, %316
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %334, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  br i1 %325, label %328, label %330

328:                                              ; preds = %321
  %329 = add i32 %327, -1
  store i32 %329, i32* %326, align 4
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i32 [ %329, %328 ], [ %327, %321 ]
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #10
  br label %334

334:                                              ; preds = %317, %330, %333
  %335 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #10
  br label %351

351:                                              ; preds = %334, %347, %350
  %352 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4
  %353 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 1
  %354 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %353, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %354, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %354, align 8
  %356 = icmp eq %"class.blink::NGGridTrackList"* %355, null
  br i1 %356, label %359, label %357

357:                                              ; preds = %351
  %358 = bitcast %"class.std::__1::unique_ptr.464"* %353 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %358, %"class.blink::NGGridTrackList"* nonnull %355) #10
  br label %359

359:                                              ; preds = %357, %351
  %360 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %352, i64 0, i32 0, i32 0, i32 0, i32 0
  %361 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %360, align 8
  %362 = icmp eq %"class.blink::GridTrackSize"* %361, null
  br i1 %362, label %398, label %363, !prof !2

363:                                              ; preds = %359
  %364 = bitcast %"class.blink::GridTrackSize"* %361 to i8*
  %365 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %396, label %368, !prof !4

368:                                              ; preds = %363
  %369 = zext i32 %366 to i64
  %370 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %361, i64 %369
  br label %371

371:                                              ; preds = %390, %368
  %372 = phi %"class.blink::GridTrackSize"* [ %391, %390 ], [ %361, %368 ]
  %373 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0, i32 2
  %374 = load i8, i8* %373, align 1
  %375 = icmp eq i8 %374, 8
  br i1 %375, label %376, label %378

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %377) #10
  br label %378

378:                                              ; preds = %376, %371
  %379 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0, i32 2
  %380 = load i8, i8* %379, align 1
  %381 = icmp eq i8 %380, 8
  br i1 %381, label %382, label %384

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %383) #10
  br label %384

384:                                              ; preds = %382, %378
  %385 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0, i32 2
  %386 = load i8, i8* %385, align 1
  %387 = icmp eq i8 %386, 8
  br i1 %387, label %388, label %390

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %389) #10
  br label %390

390:                                              ; preds = %388, %384
  %391 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 1
  %392 = icmp eq %"class.blink::GridTrackSize"* %391, %370
  br i1 %392, label %393, label %371

393:                                              ; preds = %390
  store i32 0, i32* %365, align 4
  %394 = bitcast %"class.blink::GridTrackList"* %352 to i8**
  %395 = load i8*, i8** %394, align 8
  br label %396

396:                                              ; preds = %393, %363
  %397 = phi i8* [ %395, %393 ], [ %364, %363 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %397) #10
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %360, align 8
  br label %398

398:                                              ; preds = %359, %396
  %399 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3
  %400 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 1
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %401, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %401, align 8
  %403 = icmp eq %"class.blink::NGGridTrackList"* %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %398
  %405 = bitcast %"class.std::__1::unique_ptr.464"* %400 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %405, %"class.blink::NGGridTrackList"* nonnull %402) #10
  br label %406

406:                                              ; preds = %404, %398
  %407 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %399, i64 0, i32 0, i32 0, i32 0, i32 0
  %408 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %407, align 8
  %409 = icmp eq %"class.blink::GridTrackSize"* %408, null
  br i1 %409, label %445, label %410, !prof !2

410:                                              ; preds = %406
  %411 = bitcast %"class.blink::GridTrackSize"* %408 to i8*
  %412 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %413 = load i32, i32* %412, align 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %443, label %415, !prof !4

415:                                              ; preds = %410
  %416 = zext i32 %413 to i64
  %417 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %408, i64 %416
  br label %418

418:                                              ; preds = %437, %415
  %419 = phi %"class.blink::GridTrackSize"* [ %438, %437 ], [ %408, %415 ]
  %420 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0, i32 2
  %421 = load i8, i8* %420, align 1
  %422 = icmp eq i8 %421, 8
  br i1 %422, label %423, label %425

423:                                              ; preds = %418
  %424 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %424) #10
  br label %425

425:                                              ; preds = %423, %418
  %426 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0, i32 2
  %427 = load i8, i8* %426, align 1
  %428 = icmp eq i8 %427, 8
  br i1 %428, label %429, label %431

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %430) #10
  br label %431

431:                                              ; preds = %429, %425
  %432 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0, i32 2
  %433 = load i8, i8* %432, align 1
  %434 = icmp eq i8 %433, 8
  br i1 %434, label %435, label %437

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %436) #10
  br label %437

437:                                              ; preds = %435, %431
  %438 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 1
  %439 = icmp eq %"class.blink::GridTrackSize"* %438, %417
  br i1 %439, label %440, label %418

440:                                              ; preds = %437
  store i32 0, i32* %412, align 4
  %441 = bitcast %"class.blink::GridTrackList"* %399 to i8**
  %442 = load i8*, i8** %441, align 8
  br label %443

443:                                              ; preds = %440, %410
  %444 = phi i8* [ %442, %440 ], [ %411, %410 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %444) #10
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %407, align 8
  br label %445

445:                                              ; preds = %406, %443
  %446 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2
  %447 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 1
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %447, i64 0, i32 0, i32 0, i32 0
  %449 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %448, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %448, align 8
  %450 = icmp eq %"class.blink::NGGridTrackList"* %449, null
  br i1 %450, label %453, label %451

451:                                              ; preds = %445
  %452 = bitcast %"class.std::__1::unique_ptr.464"* %447 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %452, %"class.blink::NGGridTrackList"* nonnull %449) #10
  br label %453

453:                                              ; preds = %451, %445
  %454 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %446, i64 0, i32 0, i32 0, i32 0, i32 0
  %455 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %454, align 8
  %456 = icmp eq %"class.blink::GridTrackSize"* %455, null
  br i1 %456, label %492, label %457, !prof !2

457:                                              ; preds = %453
  %458 = bitcast %"class.blink::GridTrackSize"* %455 to i8*
  %459 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %460 = load i32, i32* %459, align 4
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %490, label %462, !prof !4

462:                                              ; preds = %457
  %463 = zext i32 %460 to i64
  %464 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %455, i64 %463
  br label %465

465:                                              ; preds = %484, %462
  %466 = phi %"class.blink::GridTrackSize"* [ %485, %484 ], [ %455, %462 ]
  %467 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0, i32 2
  %468 = load i8, i8* %467, align 1
  %469 = icmp eq i8 %468, 8
  br i1 %469, label %470, label %472

470:                                              ; preds = %465
  %471 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %471) #10
  br label %472

472:                                              ; preds = %470, %465
  %473 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0, i32 2
  %474 = load i8, i8* %473, align 1
  %475 = icmp eq i8 %474, 8
  br i1 %475, label %476, label %478

476:                                              ; preds = %472
  %477 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %477) #10
  br label %478

478:                                              ; preds = %476, %472
  %479 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0, i32 2
  %480 = load i8, i8* %479, align 1
  %481 = icmp eq i8 %480, 8
  br i1 %481, label %482, label %484

482:                                              ; preds = %478
  %483 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %483) #10
  br label %484

484:                                              ; preds = %482, %478
  %485 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 1
  %486 = icmp eq %"class.blink::GridTrackSize"* %485, %464
  br i1 %486, label %487, label %465

487:                                              ; preds = %484
  store i32 0, i32* %459, align 4
  %488 = bitcast %"class.blink::GridTrackList"* %446 to i8**
  %489 = load i8*, i8** %488, align 8
  br label %490

490:                                              ; preds = %487, %457
  %491 = phi i8* [ %489, %487 ], [ %458, %457 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %491) #10
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %454, align 8
  br label %492

492:                                              ; preds = %453, %490
  %493 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1
  %494 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 1
  %495 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %494, i64 0, i32 0, i32 0, i32 0
  %496 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %495, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %495, align 8
  %497 = icmp eq %"class.blink::NGGridTrackList"* %496, null
  br i1 %497, label %500, label %498

498:                                              ; preds = %492
  %499 = bitcast %"class.std::__1::unique_ptr.464"* %494 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %499, %"class.blink::NGGridTrackList"* nonnull %496) #10
  br label %500

500:                                              ; preds = %498, %492
  %501 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %493, i64 0, i32 0, i32 0, i32 0, i32 0
  %502 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %501, align 8
  %503 = icmp eq %"class.blink::GridTrackSize"* %502, null
  br i1 %503, label %539, label %504, !prof !2

504:                                              ; preds = %500
  %505 = bitcast %"class.blink::GridTrackSize"* %502 to i8*
  %506 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %507 = load i32, i32* %506, align 4
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %537, label %509, !prof !4

509:                                              ; preds = %504
  %510 = zext i32 %507 to i64
  %511 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %502, i64 %510
  br label %512

512:                                              ; preds = %531, %509
  %513 = phi %"class.blink::GridTrackSize"* [ %532, %531 ], [ %502, %509 ]
  %514 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0, i32 2
  %515 = load i8, i8* %514, align 1
  %516 = icmp eq i8 %515, 8
  br i1 %516, label %517, label %519

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %518) #10
  br label %519

519:                                              ; preds = %517, %512
  %520 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0, i32 2
  %521 = load i8, i8* %520, align 1
  %522 = icmp eq i8 %521, 8
  br i1 %522, label %523, label %525

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %524) #10
  br label %525

525:                                              ; preds = %523, %519
  %526 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0, i32 2
  %527 = load i8, i8* %526, align 1
  %528 = icmp eq i8 %527, 8
  br i1 %528, label %529, label %531

529:                                              ; preds = %525
  %530 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %530) #10
  br label %531

531:                                              ; preds = %529, %525
  %532 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 1
  %533 = icmp eq %"class.blink::GridTrackSize"* %532, %511
  br i1 %533, label %534, label %512

534:                                              ; preds = %531
  store i32 0, i32* %506, align 4
  %535 = bitcast %"class.blink::GridTrackList"* %493 to i8**
  %536 = load i8*, i8** %535, align 8
  br label %537

537:                                              ; preds = %534, %504
  %538 = phi i8* [ %536, %534 ], [ %505, %504 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %538) #10
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %501, align 8
  br label %539

539:                                              ; preds = %500, %537
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"*, %"class.blink::NGGridTrackList"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::NGGridTrackList"* %1, null
  br i1 %3, label %57, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %6, align 8
  %8 = icmp eq %"class.blink::GridTrackSize"* %7, null
  br i1 %8, label %44, label %9, !prof !2

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::GridTrackSize"* %7 to i8*
  %11 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %42, label %14, !prof !4

14:                                               ; preds = %9
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 %15
  br label %17

17:                                               ; preds = %36, %14
  %18 = phi %"class.blink::GridTrackSize"* [ %37, %36 ], [ %7, %14 ]
  %19 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 8
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %23) #10
  br label %24

24:                                               ; preds = %22, %17
  %25 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %29) #10
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %35) #10
  br label %36

36:                                               ; preds = %34, %30
  %37 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 1
  %38 = icmp eq %"class.blink::GridTrackSize"* %37, %16
  br i1 %38, label %39, label %17

39:                                               ; preds = %36
  store i32 0, i32* %11, align 4
  %40 = bitcast %"class.WTF::Vector.459"* %5 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %9
  %43 = phi i8* [ %41, %39 ], [ %10, %9 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #10
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %6, align 8
  br label %44

44:                                               ; preds = %42, %4
  %45 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.blink::NGGridTrackRepeater"*, %"struct.blink::NGGridTrackRepeater"** %45, align 8
  %47 = icmp eq %"struct.blink::NGGridTrackRepeater"* %46, null
  %48 = bitcast %"struct.blink::NGGridTrackRepeater"* %46 to i8*
  br i1 %47, label %55, label %49, !prof !2

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53, !prof !4

53:                                               ; preds = %49
  store i32 0, i32* %50, align 4
  br label %54

54:                                               ; preds = %53, %49
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %48) #10
  br label %55

55:                                               ; preds = %44, %54
  %56 = bitcast %"class.blink::NGGridTrackList"* %1 to i8*
  tail call void @_ZdlPv(i8* %56) #11
  br label %57

57:                                               ; preds = %55, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #10
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #10
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 10, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #10
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !4

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #10
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %19, %30
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %42
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #10
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !4

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #10
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %57, align 8
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %58, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::PersistentRegion"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.blink::PersistentNode"* %59 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %59, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %64, align 8
  store %"class.blink::PersistentNode"* %59, %"class.blink::PersistentNode"** %60, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8
  br label %65

65:                                               ; preds = %42, %53
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 8, i32 0
  %67 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %66, align 8
  %68 = icmp eq %"class.blink::ShadowList"* %67, null
  br i1 %68, label %91, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %71) #10
  %72 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %91

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 2
  %77 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 5, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %81, label %80, !prof !4

80:                                               ; preds = %75
  store i32 0, i32* %77, align 4
  br label %81

81:                                               ; preds = %80, %75
  %82 = bitcast %"class.base::RefCounted.300"* %76 to %"class.blink::ShadowData"**
  %83 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %82, align 8
  %84 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 6
  %85 = bitcast %"class.base::RefCounted.300"* %84 to %"class.blink::ShadowData"*
  %86 = icmp eq %"class.blink::ShadowData"* %83, %85
  br i1 %86, label %89, label %87, !prof !2

87:                                               ; preds = %81
  %88 = bitcast %"class.base::RefCounted.300"* %76 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %88, %"class.blink::ShadowData"* %83) #10
  br label %89

89:                                               ; preds = %87, %81
  %90 = bitcast %"class.blink::ShadowList"* %67 to i8*
  tail call void @free(i8* %90) #10
  br label %91

91:                                               ; preds = %65, %69, %89
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 7, i32 0
  %93 = load %"class.blink::QuotesData"*, %"class.blink::QuotesData"** %92, align 8
  %94 = icmp eq %"class.blink::QuotesData"* %93, null
  br i1 %94, label %158, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %96) #10
  %97 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %158

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1
  %102 = getelementptr inbounds %"class.WTF::Vector.292", %"class.WTF::Vector.292"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::pair.295"*, %"struct.std::__1::pair.295"** %102, align 8
  %104 = icmp eq %"struct.std::__1::pair.295"* %103, null
  br i1 %104, label %156, label %105, !prof !2

105:                                              ; preds = %100
  %106 = bitcast %"struct.std::__1::pair.295"* %103 to i8*
  %107 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %154, label %110, !prof !4

110:                                              ; preds = %105
  %111 = zext i32 %108 to i64
  %112 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %103, i64 %111
  br label %113

113:                                              ; preds = %148, %110
  %114 = phi %"struct.std::__1::pair.295"* [ %149, %148 ], [ %103, %110 ]
  %115 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 1, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #10
  br label %131

131:                                              ; preds = %130, %127, %113
  %132 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #10
  br label %148

148:                                              ; preds = %147, %144, %131
  %149 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 1
  %150 = icmp eq %"struct.std::__1::pair.295"* %149, %112
  br i1 %150, label %151, label %113

151:                                              ; preds = %148
  store i32 0, i32* %107, align 4
  %152 = bitcast %"class.WTF::Vector.292"* %101 to i8**
  %153 = load i8*, i8** %152, align 8
  br label %154

154:                                              ; preds = %151, %105
  %155 = phi i8* [ %153, %151 ], [ %106, %105 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %155) #10
  br label %156

156:                                              ; preds = %100, %154
  %157 = bitcast %"class.blink::QuotesData"* %93 to i8*
  tail call void @free(i8* %157) #10
  br label %158

158:                                              ; preds = %91, %95, %156
  %159 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #10
  br label %175

175:                                              ; preds = %158, %171, %174
  %176 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #10
  br label %192

192:                                              ; preds = %175, %188, %191
  %193 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4
  %194 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %193, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %194, align 8
  %196 = icmp eq %"class.WTF::AtomicString"* %195, null
  br i1 %196, label %231, label %197, !prof !2

197:                                              ; preds = %192
  %198 = bitcast %"class.WTF::AtomicString"* %195 to i8*
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %229, label %202, !prof !4

202:                                              ; preds = %197
  %203 = zext i32 %200 to i64
  %204 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %195, i64 %203
  br label %205

205:                                              ; preds = %223, %202
  %206 = phi %"class.WTF::AtomicString"* [ %224, %223 ], [ %195, %202 ]
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 0, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #10
  br label %223

223:                                              ; preds = %222, %219, %205
  %224 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 1
  %225 = icmp eq %"class.WTF::AtomicString"* %224, %204
  br i1 %225, label %226, label %205

226:                                              ; preds = %223
  store i32 0, i32* %199, align 4
  %227 = bitcast %"class.WTF::Vector.284"* %193 to i8**
  %228 = load i8*, i8** %227, align 8
  br label %229

229:                                              ; preds = %226, %197
  %230 = phi i8* [ %228, %226 ], [ %198, %197 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %230) #10
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %194, align 8
  br label %231

231:                                              ; preds = %192, %229
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %233 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"** %232, align 8
  %234 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, null
  br i1 %234, label %242, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %236) #10
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %242

240:                                              ; preds = %235
  %241 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233 to i8*
  tail call void @free(i8* %241) #10
  br label %242

242:                                              ; preds = %231, %235, %240
  %243 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %244 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %243, align 8
  %245 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, null
  br i1 %245, label %253, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %247) #10
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %246
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* nonnull %244) #10
  %252 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244 to i8*
  tail call void @free(i8* %252) #10
  br label %253

253:                                              ; preds = %242, %246, %251
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 4, i32 0
  %26 = load %"class.blink::StyleInitialData"*, %"class.blink::StyleInitialData"** %25, align 8
  %27 = icmp eq %"class.blink::StyleInitialData"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #10
  %30 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.base::RefCounted.261", %"class.base::RefCounted.261"* %34, i64 2
  %36 = bitcast %"class.base::RefCounted.261"* %35 to %"class.blink::StyleVariables"*
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %36) #10
  %37 = bitcast %"class.blink::StyleInitialData"* %26 to i8*
  tail call void @free(i8* %37) #10
  br label %38

38:                                               ; preds = %24, %28, %33
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 3, i32 0
  %40 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %39, align 8
  %41 = icmp eq %"class.base::RefCountedData"* %40, null
  br i1 %41, label %82, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0
  %44 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %82

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 2
  %49 = bitcast %"class.base::RefCountedThreadSafe.253"* %48 to %"class.blink::AppliedTextDecoration"**
  %50 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  %51 = icmp eq %"class.blink::AppliedTextDecoration"* %50, null
  br i1 %51, label %80, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %77, label %56, !prof !4

56:                                               ; preds = %52
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %50, i64 %57
  br label %59

59:                                               ; preds = %72, %56
  %60 = phi %"class.blink::AppliedTextDecoration"* [ %73, %72 ], [ %50, %56 ]
  %61 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3, i32 2
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 8
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %65) #10
  br label %66

66:                                               ; preds = %64, %59
  %67 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 8
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %71) #10
  br label %72

72:                                               ; preds = %70, %66
  %73 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 1
  %74 = icmp eq %"class.blink::AppliedTextDecoration"* %73, %58
  br i1 %74, label %75, label %59

75:                                               ; preds = %72
  store i32 0, i32* %53, align 4
  %76 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  br label %77

77:                                               ; preds = %75, %52
  %78 = phi %"class.blink::AppliedTextDecoration"* [ %50, %52 ], [ %76, %75 ]
  %79 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %78, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #10
  br label %80

80:                                               ; preds = %77, %47
  %81 = bitcast %"class.base::RefCountedData"* %40 to i8*
  tail call void @_ZdlPv(i8* %81) #11
  br label %82

82:                                               ; preds = %38, %42, %80
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #10
  br label %99

99:                                               ; preds = %82, %95, %98
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4FontD1Ev(%"class.blink::Font"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE5clearEv(%"class.WTF::Vector.1847"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Vector.1847", %"class.WTF::Vector.1847"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %43, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::Vector.1847", %"class.WTF::Vector.1847"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %39, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::Vector.1847", %"class.WTF::Vector.1847"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %10, align 8
  %12 = zext i32 %7 to i64
  %13 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %11, i64 %12
  br label %14

14:                                               ; preds = %35, %9
  %15 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %36, %35 ], [ %11, %9 ]
  %16 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 7, i32 2, i32 0
  %17 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %16, align 8
  %18 = icmp eq %"class.blink::NGPhysicalFragment"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #10
  %21 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %19
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %17) #10
  br label %25

25:                                               ; preds = %24, %19, %14
  %26 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 6, i32 2, i32 0
  %27 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %26, align 8
  %28 = icmp eq %"class.blink::NGPhysicalFragment"* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #10
  %31 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %27) #10
  br label %35

35:                                               ; preds = %34, %29, %25
  %36 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 1
  %37 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %36, %13
  br i1 %37, label %38, label %14

38:                                               ; preds = %35
  store i32 0, i32* %6, align 4
  br label %39

39:                                               ; preds = %5, %38
  %40 = bitcast %"class.WTF::Vector.1847"* %0 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast %"class.WTF::Vector.1847"* %0 to i64*
  store atomic i64 0, i64* %42 monotonic, align 8
  store i32 0, i32* %2, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %41) #10
  br label %43

43:                                               ; preds = %1, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1855"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor.1855"* %0 to %"struct.blink::NGLogicalOutOfFlowPositionedNode"**
  %3 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %2, align 8
  %4 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %3, null
  br i1 %4, label %43, label %5, !prof !2

5:                                                ; preds = %1
  %6 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %3 to i8*
  %7 = getelementptr inbounds %"class.WTF::ConditionalDestructor.1855", %"class.WTF::ConditionalDestructor.1855"* %0, i64 12
  %8 = bitcast %"class.WTF::ConditionalDestructor.1855"* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %41, label %11, !prof !4

11:                                               ; preds = %5
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %3, i64 %12
  br label %14

14:                                               ; preds = %11, %35
  %15 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %36, %35 ], [ %3, %11 ]
  %16 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 7, i32 2, i32 0
  %17 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %16, align 8
  %18 = icmp eq %"class.blink::NGPhysicalFragment"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #10
  %21 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %19
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %17) #10
  br label %25

25:                                               ; preds = %24, %19, %14
  %26 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 6, i32 2, i32 0
  %27 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %26, align 8
  %28 = icmp eq %"class.blink::NGPhysicalFragment"* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #10
  %31 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %27) #10
  br label %35

35:                                               ; preds = %34, %29, %25
  %36 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 1
  %37 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %36, %13
  br i1 %37, label %38, label %14

38:                                               ; preds = %35
  store i32 0, i32* %8, align 4
  %39 = bitcast %"class.WTF::ConditionalDestructor.1855"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %38, %5
  %42 = phi i8* [ %40, %38 ], [ %6, %5 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %42) #10
  store %"struct.blink::NGLogicalOutOfFlowPositionedNode"* null, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %2, align 8
  br label %43

43:                                               ; preds = %1, %41
  ret void
}

declare void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12NGEarlyBreakD2Ev(%"class.blink::NGEarlyBreak"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGEarlyBreak", %"class.blink::NGEarlyBreak"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.blink::NGEarlyBreak"*, %"class.blink::NGEarlyBreak"** %2, align 8
  %4 = icmp eq %"class.blink::NGEarlyBreak"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGEarlyBreak", %"class.blink::NGEarlyBreak"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #10
  %7 = getelementptr inbounds %"class.blink::NGEarlyBreak", %"class.blink::NGEarlyBreak"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink12NGEarlyBreakD2Ev(%"class.blink::NGEarlyBreak"* nonnull %3) #10
  %11 = bitcast %"class.blink::NGEarlyBreak"* %3 to i8*
  tail call void @free(i8* %11) #10
  ret void

12:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1989"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20NGBoxFragmentBuilder26SetInitialFragmentGeometryERKNS_18NGFragmentGeometryE(%"class.blink::NGBoxFragmentBuilder"*, %"struct.blink::NGFragmentGeometry"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 1
  store %"struct.blink::NGFragmentGeometry"* %1, %"struct.blink::NGFragmentGeometry"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 0, i32 4
  %5 = bitcast %"struct.blink::NGFragmentGeometry"* %1 to i64*
  %6 = bitcast %"struct.blink::LogicalSize"* %4 to i64*
  %7 = load i64, i64* %5, align 4
  store i64 %7, i64* %6, align 8
  %8 = and i64 %7, -4294967296
  %9 = icmp eq i64 %8, -274877906944
  %10 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 13
  %11 = zext i1 %9 to i8
  store i8 %11, i8* %10, align 1
  %12 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %1, i64 0, i32 1
  %13 = bitcast %"struct.blink::NGBoxStrut"* %12 to i64*
  %14 = load i64, i64* %13, align 4
  %15 = trunc i64 %14 to i32
  %16 = lshr i64 %14, 32
  %17 = trunc i64 %16 to i32
  %18 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %1, i64 0, i32 1, i32 2
  %19 = bitcast %"class.blink::LayoutUnit"* %18 to i64*
  %20 = load i64, i64* %19, align 4
  %21 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %1, i64 0, i32 3, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %15, i32 %22) #10
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !4
  %29 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %1, i64 0, i32 3, i32 1, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %30, 0
  %32 = select i1 %31, i32 -2147483648, i32 2147483647
  %33 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 %30) #10
  %34 = extractvalue { i32, i1 } %33, 1
  %35 = extractvalue { i32, i1 } %33, 0
  %36 = select i1 %34, i32 %32, i32 %35, !prof !4
  %37 = trunc i64 %20 to i32
  %38 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %1, i64 0, i32 3, i32 2, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %39, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %37, i32 %39) #10
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = select i1 %43, i32 %41, i32 %44, !prof !4
  %46 = zext i32 %45 to i64
  %47 = lshr i64 %20, 32
  %48 = trunc i64 %47 to i32
  %49 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %1, i64 0, i32 3, i32 3, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, 0
  %52 = select i1 %51, i32 -2147483648, i32 2147483647
  %53 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %48, i32 %50) #10
  %54 = extractvalue { i32, i1 } %53, 1
  %55 = extractvalue { i32, i1 } %53, 0
  %56 = select i1 %54, i32 %52, i32 %55, !prof !4
  %57 = zext i32 %56 to i64
  %58 = shl nuw i64 %57, 32
  %59 = or i64 %58, %46
  %60 = zext i32 %36 to i64
  %61 = shl nuw i64 %60, 32
  %62 = zext i32 %28 to i64
  %63 = or i64 %61, %62
  %64 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 2
  %65 = bitcast %"struct.blink::NGBoxStrut"* %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 2, i32 2
  %67 = bitcast %"class.blink::LayoutUnit"* %66 to i64*
  store i64 %59, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %1, i64 0, i32 2, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp slt i32 %69, 0
  %71 = select i1 %70, i32 -2147483648, i32 2147483647
  %72 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %28, i32 %69) #10
  %73 = extractvalue { i32, i1 } %72, 1
  %74 = extractvalue { i32, i1 } %72, 0
  %75 = select i1 %73, i32 %71, i32 %74, !prof !4
  %76 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %1, i64 0, i32 2, i32 1, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %77, 0
  %79 = select i1 %78, i32 -2147483648, i32 2147483647
  %80 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %36, i32 %77) #10
  %81 = extractvalue { i32, i1 } %80, 1
  %82 = extractvalue { i32, i1 } %80, 0
  %83 = select i1 %81, i32 %79, i32 %82, !prof !4
  %84 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %1, i64 0, i32 2, i32 2, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp slt i32 %85, 0
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %45, i32 %85) #10
  %89 = extractvalue { i32, i1 } %88, 1
  %90 = extractvalue { i32, i1 } %88, 0
  %91 = select i1 %89, i32 %87, i32 %90, !prof !4
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %1, i64 0, i32 2, i32 3, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp slt i32 %94, 0
  %96 = select i1 %95, i32 -2147483648, i32 2147483647
  %97 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %56, i32 %94) #10
  %98 = extractvalue { i32, i1 } %97, 1
  %99 = extractvalue { i32, i1 } %97, 0
  %100 = select i1 %98, i32 %96, i32 %99, !prof !4
  %101 = zext i32 %100 to i64
  %102 = shl nuw i64 %101, 32
  %103 = or i64 %102, %92
  %104 = zext i32 %83 to i64
  %105 = shl nuw i64 %104, 32
  %106 = zext i32 %75 to i64
  %107 = or i64 %105, %106
  %108 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 3
  %109 = bitcast %"struct.blink::NGBoxStrut"* %108 to i64*
  store i64 %107, i64* %109, align 8
  %110 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 3, i32 2
  %111 = bitcast %"class.blink::LayoutUnit"* %110 to i64*
  store i64 %103, i64* %111, align 8
  %112 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 3
  %113 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %112, align 8
  %114 = icmp eq %"class.blink::NGConstraintSpace"* %113, null
  br i1 %114, label %121, label %115

115:                                              ; preds = %2
  %116 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 0, i32 2
  %117 = bitcast %"class.blink::NGLayoutInputNode"* %116 to %"class.blink::NGBlockNode"*
  %118 = tail call i64 @_ZN5blink27CalculateChildAvailableSizeERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeENS_11LogicalSizeERKNS_10NGBoxStrutE(%"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %113, %"class.blink::NGBlockNode"* dereferenceable(16) %117, i64 %7, %"struct.blink::NGBoxStrut"* dereferenceable(16) %108) #10
  %119 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 4
  %120 = bitcast %"struct.blink::LogicalSize"* %119 to i64*
  store i64 %118, i64* %120, align 8
  br label %121

121:                                              ; preds = %2, %115
  ret void
}

declare void @_ZN5blink36SetupFragmentBuilderForFragmentationERKNS_17NGConstraintSpaceEPKNS_17NGBlockBreakTokenEPNS_20NGBoxFragmentBuilderE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBoxFragmentBuilder"*) local_unnamed_addr #2

declare i64 @_ZN5blink27CalculateChildAvailableSizeERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeENS_11LogicalSizeERKNS_10NGBoxStrutE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockNode"* dereferenceable(16), i64, %"struct.blink::NGBoxStrut"* dereferenceable(16)) local_unnamed_addr #2

declare i32 @_ZNK5blink20NGBoxFragmentBuilder7BoxTypeEv(%"class.blink::NGBoxFragmentBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF16VectorBufferBaseIZN5blink23NGColumnLayoutAlgorithm9LayoutRowEPKNS1_17NGBlockBreakTokenEPNS1_13NGMarginStrutEE16ResultWithOffsetNS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.2131"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = zext i32 %1 to i64
  %7 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = icmp ugt i32 %1, 134086656
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  store i8* null, i8** %8, align 8
  br label %21

12:                                               ; preds = %2
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %6) #10
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %13, i8* %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  store i8* %16, i8** %8, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %4) #10
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %22 = shl nuw nsw i64 %6, 4
  %23 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %22) #10
  %24 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %23, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIZN5blink23NGColumnLayoutAlgorithm9LayoutRowEPKNS1_17NGBlockBreakTokenEPNS1_13NGMarginStrutEE16ResultWithOffsetEEPKcv, i64 0, i64 0)) #10
  %25 = bitcast %"class.WTF::VectorBufferBase.2131"* %0 to i64*
  %26 = ptrtoint i8* %24 to i64
  store atomic i64 %26, i64* %25 monotonic, align 8
  %27 = lshr i64 %23, 4
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %"class.WTF::VectorBufferBase.2131", %"class.WTF::VectorBufferBase.2131"* %0, i64 0, i32 1
  store i32 %28, i32* %29, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 4193255, i32 -102759400}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv: argument 0"}
!8 = distinct !{!8, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv: argument 0"}
!11 = distinct !{!11, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv"}
!12 = distinct !{!12, !13, !"_ZN5blink30NGMinMaxConstraintSpaceBuilder17ToConstraintSpaceEv: argument 0"}
!13 = distinct !{!13, !"_ZN5blink30NGMinMaxConstraintSpaceBuilder17ToConstraintSpaceEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv: argument 0"}
!16 = distinct !{!16, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv: argument 0"}
!19 = distinct !{!19, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv"}
