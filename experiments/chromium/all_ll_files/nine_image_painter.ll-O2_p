; ModuleID = '../../ui/gfx/nine_image_painter.cc'
source_filename = "../../ui/gfx/nine_image_painter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.48 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.49 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.42 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.8, i32, i32 }
%class.sk_sp.8 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.10" }
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.scoped_refptr.50 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type opaque
%class.sk_sp.43 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.44", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i8* }
%"class.gfx::Size" = type { i32, i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.15 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.15 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.cc::PaintFlags" = type <{ %class.sk_sp.51, %class.sk_sp.52, %class.sk_sp.82, %class.sk_sp.83, %class.sk_sp.84, %class.sk_sp.85, i32, float, float, i32, %union.anon.86, [4 x i8] }>
%class.sk_sp.51 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.52 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.53", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.43, i32, %"class.absl::optional.58", %"class.std::__1::vector.63", %"class.std::__1::vector.70", %class.sk_sp.77, %class.sk_sp.42, i32, [4 x i8] }>
%"class.absl::optional.53" = type { %"class.absl::optional_internal::optional_data.54" }
%"class.absl::optional_internal::optional_data.54" = type { %"class.absl::optional_internal::optional_data_base.55" }
%"class.absl::optional_internal::optional_data_base.55" = type { %"class.absl::optional_internal::optional_data_dtor_base.56" }
%"class.absl::optional_internal::optional_data_dtor_base.56" = type { i8, %union.anon.57 }
%union.anon.57 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.42, %class.scoped_refptr.50 }
%"class.absl::optional.58" = type { %"class.absl::optional_internal::optional_data.59" }
%"class.absl::optional_internal::optional_data.59" = type { %"class.absl::optional_internal::optional_data_base.60" }
%"class.absl::optional_internal::optional_data_base.60" = type { %"class.absl::optional_internal::optional_data_dtor_base.61" }
%"class.absl::optional_internal::optional_data_dtor_base.61" = type { i8, %union.anon.62 }
%union.anon.62 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { i32*, i32*, %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { i32* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { float*, float*, %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { float* }
%class.sk_sp.77 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.78", [7 x i8] }>
%"struct.std::__1::atomic.78" = type { %"struct.std::__1::__atomic_base.79" }
%"struct.std::__1::__atomic_base.79" = type { %"struct.std::__1::__cxx_atomic_impl.80" }
%"struct.std::__1::__cxx_atomic_impl.80" = type { %"struct.std::__1::__cxx_atomic_base_impl.81" }
%"struct.std::__1::__cxx_atomic_base_impl.81" = type { i8 }
%class.sk_sp.82 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.83 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.84 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.85 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type opaque
%union.anon.86 = type { i32 }
%"class.gfx::NineImagePainter" = type { [9 x %"class.gfx::ImageSkia"] }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::ImageSkia"* }
%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.gfx::Rect"* }
%"class.gfx::Canvas" = type { i32 (...)**, float, %"class.absl::optional", %"class.absl::optional.16", %"class.cc::PaintCanvas"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkBitmap }
%"class.absl::optional.16" = type { %"class.absl::optional_internal::optional_data.17" }
%"class.absl::optional_internal::optional_data.17" = type { %"class.absl::optional_internal::optional_data_base.18" }
%"class.absl::optional_internal::optional_data_base.18" = type { %"class.absl::optional_internal::optional_data_dtor_base.19" }
%"class.absl::optional_internal::optional_data_dtor_base.19" = type { i8, [7 x i8], %union.anon.20 }
%union.anon.20 = type { %"class.cc::SkiaPaintCanvas" }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.32", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.21, [384 x i64], %class.sk_sp.22, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.26" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.21 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.22 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type opaque
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.gfx::ScopedCanvas" = type { i32 (...)**, %"class.gfx::Canvas"* }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.gfx::ImageSkiaRep" = type <{ %"class.cc::PaintImage", %class.sk_sp.43, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

@__const._ZN3gfx16NineImagePainter5PaintEPNS_6CanvasERKNS_4RectEh.image_reps = private unnamed_addr constant [9 x <{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 }, %class.sk_sp.43, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }>] [<{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 }, %class.sk_sp.43, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }> <{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 } { %class.sk_sp.42 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.sk_sp.43 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.48 { %"class.cc::PaintImageGenerator"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintImageGenerator"*) }, %class.sk_sp.49 { %"class.cc::TextureBacking"* inttoptr (i64 -6148914691236517206 to %"class.cc::TextureBacking"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.42 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.scoped_refptr.50 { %"class.cc::PaintWorkletInput"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintWorkletInput"*) } }, %class.sk_sp.43 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, i32 -1431655766, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkBitmap { %class.sk_sp { %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*) }, %class.SkPixmap { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.8 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } } }, %class.sk_sp.15 { %class.SkMipmap* inttoptr (i64 -6148914691236517206 to %class.SkMipmap*) } }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, <{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 }, %class.sk_sp.43, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }> <{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 } { %class.sk_sp.42 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.sk_sp.43 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.48 { %"class.cc::PaintImageGenerator"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintImageGenerator"*) }, %class.sk_sp.49 { %"class.cc::TextureBacking"* inttoptr (i64 -6148914691236517206 to %"class.cc::TextureBacking"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.42 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.scoped_refptr.50 { %"class.cc::PaintWorkletInput"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintWorkletInput"*) } }, %class.sk_sp.43 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, i32 -1431655766, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkBitmap { %class.sk_sp { %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*) }, %class.SkPixmap { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.8 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } } }, %class.sk_sp.15 { %class.SkMipmap* inttoptr (i64 -6148914691236517206 to %class.SkMipmap*) } }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, <{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 }, %class.sk_sp.43, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }> <{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 } { %class.sk_sp.42 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.sk_sp.43 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.48 { %"class.cc::PaintImageGenerator"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintImageGenerator"*) }, %class.sk_sp.49 { %"class.cc::TextureBacking"* inttoptr (i64 -6148914691236517206 to %"class.cc::TextureBacking"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.42 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.scoped_refptr.50 { %"class.cc::PaintWorkletInput"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintWorkletInput"*) } }, %class.sk_sp.43 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, i32 -1431655766, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkBitmap { %class.sk_sp { %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*) }, %class.SkPixmap { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.8 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } } }, %class.sk_sp.15 { %class.SkMipmap* inttoptr (i64 -6148914691236517206 to %class.SkMipmap*) } }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, <{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 }, %class.sk_sp.43, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }> <{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 } { %class.sk_sp.42 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.sk_sp.43 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.48 { %"class.cc::PaintImageGenerator"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintImageGenerator"*) }, %class.sk_sp.49 { %"class.cc::TextureBacking"* inttoptr (i64 -6148914691236517206 to %"class.cc::TextureBacking"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.42 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.scoped_refptr.50 { %"class.cc::PaintWorkletInput"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintWorkletInput"*) } }, %class.sk_sp.43 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, i32 -1431655766, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkBitmap { %class.sk_sp { %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*) }, %class.SkPixmap { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.8 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } } }, %class.sk_sp.15 { %class.SkMipmap* inttoptr (i64 -6148914691236517206 to %class.SkMipmap*) } }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, <{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 }, %class.sk_sp.43, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }> <{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 } { %class.sk_sp.42 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.sk_sp.43 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.48 { %"class.cc::PaintImageGenerator"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintImageGenerator"*) }, %class.sk_sp.49 { %"class.cc::TextureBacking"* inttoptr (i64 -6148914691236517206 to %"class.cc::TextureBacking"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.42 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.scoped_refptr.50 { %"class.cc::PaintWorkletInput"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintWorkletInput"*) } }, %class.sk_sp.43 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, i32 -1431655766, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkBitmap { %class.sk_sp { %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*) }, %class.SkPixmap { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.8 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } } }, %class.sk_sp.15 { %class.SkMipmap* inttoptr (i64 -6148914691236517206 to %class.SkMipmap*) } }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, <{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 }, %class.sk_sp.43, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }> <{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 } { %class.sk_sp.42 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.sk_sp.43 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.48 { %"class.cc::PaintImageGenerator"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintImageGenerator"*) }, %class.sk_sp.49 { %"class.cc::TextureBacking"* inttoptr (i64 -6148914691236517206 to %"class.cc::TextureBacking"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.42 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.scoped_refptr.50 { %"class.cc::PaintWorkletInput"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintWorkletInput"*) } }, %class.sk_sp.43 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, i32 -1431655766, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkBitmap { %class.sk_sp { %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*) }, %class.SkPixmap { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.8 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } } }, %class.sk_sp.15 { %class.SkMipmap* inttoptr (i64 -6148914691236517206 to %class.SkMipmap*) } }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, <{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 }, %class.sk_sp.43, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }> <{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 } { %class.sk_sp.42 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.sk_sp.43 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.48 { %"class.cc::PaintImageGenerator"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintImageGenerator"*) }, %class.sk_sp.49 { %"class.cc::TextureBacking"* inttoptr (i64 -6148914691236517206 to %"class.cc::TextureBacking"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.42 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.scoped_refptr.50 { %"class.cc::PaintWorkletInput"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintWorkletInput"*) } }, %class.sk_sp.43 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, i32 -1431655766, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkBitmap { %class.sk_sp { %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*) }, %class.SkPixmap { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.8 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } } }, %class.sk_sp.15 { %class.SkMipmap* inttoptr (i64 -6148914691236517206 to %class.SkMipmap*) } }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, <{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 }, %class.sk_sp.43, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }> <{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 } { %class.sk_sp.42 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.sk_sp.43 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.48 { %"class.cc::PaintImageGenerator"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintImageGenerator"*) }, %class.sk_sp.49 { %"class.cc::TextureBacking"* inttoptr (i64 -6148914691236517206 to %"class.cc::TextureBacking"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.42 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.scoped_refptr.50 { %"class.cc::PaintWorkletInput"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintWorkletInput"*) } }, %class.sk_sp.43 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, i32 -1431655766, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkBitmap { %class.sk_sp { %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*) }, %class.SkPixmap { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.8 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } } }, %class.sk_sp.15 { %class.SkMipmap* inttoptr (i64 -6148914691236517206 to %class.SkMipmap*) } }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, <{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 }, %class.sk_sp.43, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }> <{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 } { %class.sk_sp.42 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.sk_sp.43 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.48 { %"class.cc::PaintImageGenerator"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintImageGenerator"*) }, %class.sk_sp.49 { %"class.cc::TextureBacking"* inttoptr (i64 -6148914691236517206 to %"class.cc::TextureBacking"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.42 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.scoped_refptr.50 { %"class.cc::PaintWorkletInput"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintWorkletInput"*) } }, %class.sk_sp.43 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, i32 -1431655766, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkBitmap { %class.sk_sp { %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*) }, %class.SkPixmap { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.8 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } } }, %class.sk_sp.15 { %class.SkMipmap* inttoptr (i64 -6148914691236517206 to %class.SkMipmap*) } }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>], align 16
@__const._ZN3gfx16NineImagePainter5PaintEPNS_6CanvasERKNS_4RectEh.flags = private unnamed_addr constant %"class.cc::PaintFlags" <{ %class.sk_sp.51 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.52 { %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*) }, %class.sk_sp.82 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.83 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.84 { %class.SkDrawLooper* inttoptr (i64 -6148914691236517206 to %class.SkDrawLooper*) }, %class.sk_sp.85 { %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*) }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %union.anon.86 { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

@_ZN3gfx16NineImagePainterC1ERKNSt3__16vectorINS_9ImageSkiaENS1_9allocatorIS3_EEEE = hidden unnamed_addr alias void (%"class.gfx::NineImagePainter"*, %"class.std::__1::vector"*), void (%"class.gfx::NineImagePainter"*, %"class.std::__1::vector"*)* @_ZN3gfx16NineImagePainterC2ERKNSt3__16vectorINS_9ImageSkiaENS1_9allocatorIS3_EEEE
@_ZN3gfx16NineImagePainterC1ERKNS_9ImageSkiaERKNS_6InsetsE = hidden unnamed_addr alias void (%"class.gfx::NineImagePainter"*, %"class.gfx::ImageSkia"*, %"class.gfx::Insets"*), void (%"class.gfx::NineImagePainter"*, %"class.gfx::ImageSkia"*, %"class.gfx::Insets"*)* @_ZN3gfx16NineImagePainterC2ERKNS_9ImageSkiaERKNS_6InsetsE
@_ZN3gfx16NineImagePainterD1Ev = hidden unnamed_addr alias void (%"class.gfx::NineImagePainter"*), void (%"class.gfx::NineImagePainter"*)* @_ZN3gfx16NineImagePainterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx16NineImagePainterC2ERKNSt3__16vectorINS_9ImageSkiaENS1_9allocatorIS3_EEEE(%"class.gfx::NineImagePainter"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 0
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %3) #8
  %4 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 1
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %4) #8
  %5 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 2
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %5) #8
  %6 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 3
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %6) #8
  %7 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 4
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %7) #8
  %8 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 5
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %8) #8
  %9 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 6
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %9) #8
  %10 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 7
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %10) #8
  %11 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 8
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %11) #8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %12, align 8
  %14 = tail call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %3, %"class.gfx::ImageSkia"* dereferenceable(8) %13) #8
  %15 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %12, align 8
  %16 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %15, i64 1
  %17 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 1
  %18 = tail call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %17, %"class.gfx::ImageSkia"* dereferenceable(8) %16) #8
  %19 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %12, align 8
  %20 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %19, i64 2
  %21 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 2
  %22 = tail call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %21, %"class.gfx::ImageSkia"* dereferenceable(8) %20) #8
  %23 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %12, align 8
  %24 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %23, i64 3
  %25 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 3
  %26 = tail call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %25, %"class.gfx::ImageSkia"* dereferenceable(8) %24) #8
  %27 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %12, align 8
  %28 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %27, i64 4
  %29 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 4
  %30 = tail call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %29, %"class.gfx::ImageSkia"* dereferenceable(8) %28) #8
  %31 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %12, align 8
  %32 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %31, i64 5
  %33 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 5
  %34 = tail call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %33, %"class.gfx::ImageSkia"* dereferenceable(8) %32) #8
  %35 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %12, align 8
  %36 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %35, i64 6
  %37 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 6
  %38 = tail call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %37, %"class.gfx::ImageSkia"* dereferenceable(8) %36) #8
  %39 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %12, align 8
  %40 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %39, i64 7
  %41 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 7
  %42 = tail call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %41, %"class.gfx::ImageSkia"* dereferenceable(8) %40) #8
  %43 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %12, align 8
  %44 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %43, i64 8
  %45 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 8
  %46 = tail call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %45, %"class.gfx::ImageSkia"* dereferenceable(8) %44) #8
  ret void
}

declare void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx16NineImagePainterC2ERKNS_9ImageSkiaERKNS_6InsetsE(%"class.gfx::NineImagePainter"*, %"class.gfx::ImageSkia"* dereferenceable(8), %"class.gfx::Insets"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.1", align 8
  %5 = alloca %"class.gfx::ImageSkia", align 8
  %6 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 0
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %6) #8
  %7 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 1
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %7) #8
  %8 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 2
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %8) #8
  %9 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 3
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %9) #8
  %10 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 4
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %10) #8
  %11 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 5
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %11) #8
  %12 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 6
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %12) #8
  %13 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 7
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %13) #8
  %14 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 8
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %14) #8
  %15 = bitcast %"class.std::__1::vector.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #8
  call void @_ZN3gfx16NineImagePainter16GetSubsetRegionsERKNS_9ImageSkiaERKNS_6InsetsEPNSt3__16vectorINS_4RectENS7_9allocatorIS9_EEEE(%"class.gfx::ImageSkia"* dereferenceable(8) %1, %"class.gfx::Insets"* dereferenceable(16) %2, %"class.std::__1::vector.1"* nonnull %4)
  %17 = bitcast %"class.gfx::ImageSkia"* %5 to i8*
  %18 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN3gfx19ImageSkiaOperations13ExtractSubsetERKNS_9ImageSkiaERKNS_4RectE(%"class.gfx::ImageSkia"* nonnull sret %5, %"class.gfx::ImageSkia"* dereferenceable(8) %1, %"class.gfx::Rect"* dereferenceable(16) %18) #8
  %19 = call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %6, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %5) #8
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %20 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %18, i64 1
  call void @_ZN3gfx19ImageSkiaOperations13ExtractSubsetERKNS_9ImageSkiaERKNS_4RectE(%"class.gfx::ImageSkia"* nonnull sret %5, %"class.gfx::ImageSkia"* dereferenceable(8) %1, %"class.gfx::Rect"* dereferenceable(16) %20) #8
  %21 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 1
  %22 = call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %21, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %5) #8
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %23 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %18, i64 2
  call void @_ZN3gfx19ImageSkiaOperations13ExtractSubsetERKNS_9ImageSkiaERKNS_4RectE(%"class.gfx::ImageSkia"* nonnull sret %5, %"class.gfx::ImageSkia"* dereferenceable(8) %1, %"class.gfx::Rect"* dereferenceable(16) %23) #8
  %24 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 2
  %25 = call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %24, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %5) #8
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %26 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %18, i64 3
  call void @_ZN3gfx19ImageSkiaOperations13ExtractSubsetERKNS_9ImageSkiaERKNS_4RectE(%"class.gfx::ImageSkia"* nonnull sret %5, %"class.gfx::ImageSkia"* dereferenceable(8) %1, %"class.gfx::Rect"* dereferenceable(16) %26) #8
  %27 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 3
  %28 = call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %27, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %5) #8
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %29 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %18, i64 4
  call void @_ZN3gfx19ImageSkiaOperations13ExtractSubsetERKNS_9ImageSkiaERKNS_4RectE(%"class.gfx::ImageSkia"* nonnull sret %5, %"class.gfx::ImageSkia"* dereferenceable(8) %1, %"class.gfx::Rect"* dereferenceable(16) %29) #8
  %30 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 4
  %31 = call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %30, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %5) #8
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %32 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %18, i64 5
  call void @_ZN3gfx19ImageSkiaOperations13ExtractSubsetERKNS_9ImageSkiaERKNS_4RectE(%"class.gfx::ImageSkia"* nonnull sret %5, %"class.gfx::ImageSkia"* dereferenceable(8) %1, %"class.gfx::Rect"* dereferenceable(16) %32) #8
  %33 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 5
  %34 = call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %33, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %5) #8
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %35 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %18, i64 6
  call void @_ZN3gfx19ImageSkiaOperations13ExtractSubsetERKNS_9ImageSkiaERKNS_4RectE(%"class.gfx::ImageSkia"* nonnull sret %5, %"class.gfx::ImageSkia"* dereferenceable(8) %1, %"class.gfx::Rect"* dereferenceable(16) %35) #8
  %36 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 6
  %37 = call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %36, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %5) #8
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %38 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %18, i64 7
  call void @_ZN3gfx19ImageSkiaOperations13ExtractSubsetERKNS_9ImageSkiaERKNS_4RectE(%"class.gfx::ImageSkia"* nonnull sret %5, %"class.gfx::ImageSkia"* dereferenceable(8) %1, %"class.gfx::Rect"* dereferenceable(16) %38) #8
  %39 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 7
  %40 = call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %39, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %5) #8
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %41 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %18, i64 8
  call void @_ZN3gfx19ImageSkiaOperations13ExtractSubsetERKNS_9ImageSkiaERKNS_4RectE(%"class.gfx::ImageSkia"* nonnull sret %5, %"class.gfx::ImageSkia"* dereferenceable(8) %1, %"class.gfx::Rect"* dereferenceable(16) %41) #8
  %42 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 8
  %43 = call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %42, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %5) #8
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  %44 = icmp eq %"class.gfx::Rect"* %18, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %3
  %46 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 1
  %47 = ptrtoint %"class.gfx::Rect"* %18 to i64
  %48 = bitcast %"class.gfx::Rect"** %46 to i64*
  store i64 %47, i64* %48, align 8
  %49 = bitcast %"class.gfx::Rect"* %18 to i8*
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %3, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx16NineImagePainter16GetSubsetRegionsERKNS_9ImageSkiaERKNS_6InsetsEPNSt3__16vectorINS_4RectENS7_9allocatorIS9_EEEE(%"class.gfx::ImageSkia"* dereferenceable(8), %"class.gfx::Insets"* nocapture readonly dereferenceable(16), %"class.std::__1::vector.1"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca [4 x i32], align 16
  %5 = tail call i8* @_Znwm(i64 144) #9
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %5, i8 0, i64 144, i1 false) #8
  %6 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = tail call i32 @_ZNK3gfx9ImageSkia5widthEv(%"class.gfx::ImageSkia"* %0) #8
  %9 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = sub nsw i32 %8, %10
  %12 = tail call i32 @_ZNK3gfx9ImageSkia5widthEv(%"class.gfx::ImageSkia"* %0) #8
  %13 = bitcast [4 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8
  %14 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 0
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 1
  %16 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 2
  %17 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 3
  store i32 0, i32* %14, align 16
  %18 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %15, align 4
  %20 = tail call i32 @_ZNK3gfx9ImageSkia6heightEv(%"class.gfx::ImageSkia"* %0) #8
  %21 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = sub nsw i32 %20, %22
  store i32 %23, i32* %16, align 8
  %24 = tail call i32 @_ZNK3gfx9ImageSkia6heightEv(%"class.gfx::ImageSkia"* %0) #8
  store i32 %24, i32* %17, align 4
  %25 = icmp sgt i32 %7, 0
  %26 = select i1 %25, i32 %7, i32 0
  %27 = sub nsw i32 %11, %7
  %28 = icmp sgt i32 %27, 0
  %29 = and i1 %25, %28
  %30 = sub nuw nsw i32 2147483647, %7
  %31 = icmp ult i32 %30, %27
  %32 = and i1 %31, %29
  %33 = select i1 %32, i32 %30, i32 %27
  %34 = icmp sgt i32 %33, 0
  %35 = select i1 %34, i32 %33, i32 0
  %36 = sub nsw i32 %12, %11
  %37 = icmp sgt i32 %11, 0
  %38 = icmp sgt i32 %36, 0
  %39 = and i1 %37, %38
  %40 = sub nuw nsw i32 2147483647, %11
  %41 = icmp ult i32 %40, %36
  %42 = and i1 %41, %39
  %43 = select i1 %42, i32 %40, i32 %36
  %44 = icmp sgt i32 %43, 0
  %45 = select i1 %44, i32 %43, i32 0
  %46 = getelementptr inbounds i8, i8* %5, i64 144
  %47 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp sgt i32 %48, 0
  %50 = select i1 %49, i32 %48, i32 0
  %51 = bitcast i8* %5 to i32*
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds i8, i8* %5, i64 4
  %53 = bitcast i8* %52 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %5, i64 8
  %55 = bitcast i8* %54 to i32*
  store i32 %26, i32* %55, align 4
  %56 = getelementptr inbounds i8, i8* %5, i64 12
  %57 = bitcast i8* %56 to i32*
  store i32 %50, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %5, i64 16
  %59 = bitcast i8* %58 to i32*
  store i32 %7, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %5, i64 20
  %61 = bitcast i8* %60 to i32*
  store i32 0, i32* %61, align 4
  %62 = getelementptr inbounds i8, i8* %5, i64 24
  %63 = bitcast i8* %62 to i32*
  store i32 %35, i32* %63, align 4
  %64 = getelementptr inbounds i8, i8* %5, i64 28
  %65 = bitcast i8* %64 to i32*
  store i32 %50, i32* %65, align 4
  %66 = getelementptr inbounds i8, i8* %5, i64 32
  %67 = bitcast i8* %66 to i32*
  store i32 %11, i32* %67, align 4
  %68 = getelementptr inbounds i8, i8* %5, i64 36
  %69 = bitcast i8* %68 to i32*
  store i32 0, i32* %69, align 4
  %70 = getelementptr inbounds i8, i8* %5, i64 40
  %71 = bitcast i8* %70 to i32*
  store i32 %45, i32* %71, align 4
  %72 = getelementptr inbounds i8, i8* %5, i64 44
  %73 = bitcast i8* %72 to i32*
  store i32 %50, i32* %73, align 4
  %74 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 2
  %75 = load i32, i32* %74, align 8
  %76 = sub nsw i32 %75, %48
  %77 = icmp sgt i32 %48, 0
  %78 = icmp sgt i32 %76, 0
  %79 = and i1 %77, %78
  %80 = sub nuw nsw i32 2147483647, %48
  %81 = icmp ult i32 %80, %76
  %82 = and i1 %81, %79
  %83 = select i1 %82, i32 %80, i32 %76
  %84 = icmp sgt i32 %83, 0
  %85 = select i1 %84, i32 %83, i32 0
  %86 = getelementptr inbounds i8, i8* %5, i64 48
  %87 = bitcast i8* %86 to i32*
  store i32 0, i32* %87, align 4
  %88 = getelementptr inbounds i8, i8* %5, i64 52
  %89 = bitcast i8* %88 to i32*
  store i32 %48, i32* %89, align 4
  %90 = getelementptr inbounds i8, i8* %5, i64 56
  %91 = bitcast i8* %90 to i32*
  store i32 %26, i32* %91, align 4
  %92 = getelementptr inbounds i8, i8* %5, i64 60
  %93 = bitcast i8* %92 to i32*
  store i32 %85, i32* %93, align 4
  %94 = getelementptr inbounds i8, i8* %5, i64 64
  %95 = bitcast i8* %94 to i32*
  store i32 %7, i32* %95, align 4
  %96 = getelementptr inbounds i8, i8* %5, i64 68
  %97 = bitcast i8* %96 to i32*
  store i32 %48, i32* %97, align 4
  %98 = getelementptr inbounds i8, i8* %5, i64 72
  %99 = bitcast i8* %98 to i32*
  store i32 %35, i32* %99, align 4
  %100 = getelementptr inbounds i8, i8* %5, i64 76
  %101 = bitcast i8* %100 to i32*
  store i32 %85, i32* %101, align 4
  %102 = getelementptr inbounds i8, i8* %5, i64 80
  %103 = bitcast i8* %102 to i32*
  store i32 %11, i32* %103, align 4
  %104 = getelementptr inbounds i8, i8* %5, i64 84
  %105 = bitcast i8* %104 to i32*
  store i32 %48, i32* %105, align 4
  %106 = getelementptr inbounds i8, i8* %5, i64 88
  %107 = bitcast i8* %106 to i32*
  store i32 %45, i32* %107, align 4
  %108 = getelementptr inbounds i8, i8* %5, i64 92
  %109 = bitcast i8* %108 to i32*
  store i32 %85, i32* %109, align 4
  %110 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 3
  %111 = load i32, i32* %110, align 4
  %112 = sub nsw i32 %111, %75
  %113 = icmp sgt i32 %75, 0
  %114 = icmp sgt i32 %112, 0
  %115 = and i1 %113, %114
  %116 = sub nuw nsw i32 2147483647, %75
  %117 = icmp ult i32 %116, %112
  %118 = and i1 %117, %115
  %119 = select i1 %118, i32 %116, i32 %112
  %120 = icmp sgt i32 %119, 0
  %121 = select i1 %120, i32 %119, i32 0
  %122 = getelementptr inbounds i8, i8* %5, i64 96
  %123 = bitcast i8* %122 to i32*
  store i32 0, i32* %123, align 4
  %124 = getelementptr inbounds i8, i8* %5, i64 100
  %125 = bitcast i8* %124 to i32*
  store i32 %75, i32* %125, align 4
  %126 = getelementptr inbounds i8, i8* %5, i64 104
  %127 = bitcast i8* %126 to i32*
  store i32 %26, i32* %127, align 4
  %128 = getelementptr inbounds i8, i8* %5, i64 108
  %129 = bitcast i8* %128 to i32*
  store i32 %121, i32* %129, align 4
  %130 = getelementptr inbounds i8, i8* %5, i64 112
  %131 = bitcast i8* %130 to i32*
  store i32 %7, i32* %131, align 4
  %132 = getelementptr inbounds i8, i8* %5, i64 116
  %133 = bitcast i8* %132 to i32*
  store i32 %75, i32* %133, align 4
  %134 = getelementptr inbounds i8, i8* %5, i64 120
  %135 = bitcast i8* %134 to i32*
  store i32 %35, i32* %135, align 4
  %136 = getelementptr inbounds i8, i8* %5, i64 124
  %137 = bitcast i8* %136 to i32*
  store i32 %121, i32* %137, align 4
  %138 = getelementptr inbounds i8, i8* %5, i64 128
  %139 = bitcast i8* %138 to i32*
  store i32 %11, i32* %139, align 4
  %140 = getelementptr inbounds i8, i8* %5, i64 132
  %141 = bitcast i8* %140 to i32*
  store i32 %75, i32* %141, align 4
  %142 = getelementptr inbounds i8, i8* %5, i64 136
  %143 = bitcast i8* %142 to i32*
  store i32 %45, i32* %143, align 4
  %144 = getelementptr inbounds i8, i8* %5, i64 140
  %145 = bitcast i8* %144 to i32*
  store i32 %121, i32* %145, align 4
  %146 = ptrtoint i8* %5 to i64
  %147 = ptrtoint i8* %46 to i64
  %148 = bitcast %"class.std::__1::vector.1"* %2 to i64*
  %149 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 0
  %150 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %149, align 8
  store i64 %146, i64* %148, align 8
  %151 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 1
  %152 = bitcast %"class.gfx::Rect"** %151 to i64*
  store i64 %147, i64* %152, align 8
  %153 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %154 = bitcast %"class.gfx::Rect"** %153 to i64*
  store i64 %147, i64* %154, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  %155 = icmp eq %"class.gfx::Rect"* %150, null
  br i1 %155, label %158, label %156

156:                                              ; preds = %3
  %157 = bitcast %"class.gfx::Rect"* %150 to i8*
  tail call void @_ZdlPv(i8* %157) #9
  br label %158

158:                                              ; preds = %3, %156
  ret void
}

declare void @_ZN3gfx19ImageSkiaOperations13ExtractSubsetERKNS_9ImageSkiaERKNS_4RectE(%"class.gfx::ImageSkia"* sret, %"class.gfx::ImageSkia"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx16NineImagePainterD2Ev(%"class.gfx::NineImagePainter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 8
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %2) #8
  %3 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 7
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %3) #8
  %4 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 6
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %4) #8
  %5 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 5
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %5) #8
  %6 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 4
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %6) #8
  %7 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 3
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %7) #8
  %8 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 2
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %8) #8
  %9 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 1
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %9) #8
  %10 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 0
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %10) #8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx16NineImagePainter7IsEmptyEv(%"class.gfx::NineImagePainter"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 0, i32 0, i32 0
  %3 = load %"class.gfx::internal::ImageSkiaStorage"*, %"class.gfx::internal::ImageSkiaStorage"** %2, align 8
  %4 = icmp eq %"class.gfx::internal::ImageSkiaStorage"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3gfx16NineImagePainter14GetMinimumSizeEv(%"class.gfx::NineImagePainter"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 0, i32 0, i32 0
  %3 = load %"class.gfx::internal::ImageSkiaStorage"*, %"class.gfx::internal::ImageSkiaStorage"** %2, align 8
  %4 = icmp eq %"class.gfx::internal::ImageSkiaStorage"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 0
  %7 = tail call i32 @_ZNK3gfx9ImageSkia5widthEv(%"class.gfx::ImageSkia"* %6) #8
  %8 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 1
  %9 = tail call i32 @_ZNK3gfx9ImageSkia5widthEv(%"class.gfx::ImageSkia"* %8) #8
  %10 = add nsw i32 %9, %7
  %11 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 2
  %12 = tail call i32 @_ZNK3gfx9ImageSkia5widthEv(%"class.gfx::ImageSkia"* %11) #8
  %13 = add nsw i32 %10, %12
  %14 = tail call i32 @_ZNK3gfx9ImageSkia6heightEv(%"class.gfx::ImageSkia"* %6) #8
  %15 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 3
  %16 = tail call i32 @_ZNK3gfx9ImageSkia6heightEv(%"class.gfx::ImageSkia"* %15) #8
  %17 = add nsw i32 %16, %14
  %18 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 6
  %19 = tail call i32 @_ZNK3gfx9ImageSkia6heightEv(%"class.gfx::ImageSkia"* %18) #8
  %20 = add nsw i32 %17, %19
  %21 = icmp sgt i32 %13, 0
  %22 = select i1 %21, i32 %13, i32 0
  %23 = icmp sgt i32 %20, 0
  %24 = select i1 %23, i32 %20, i32 0
  %25 = zext i32 %24 to i64
  %26 = shl nuw nsw i64 %25, 32
  %27 = zext i32 %22 to i64
  br label %28

28:                                               ; preds = %1, %5
  %29 = phi i64 [ %26, %5 ], [ 0, %1 ]
  %30 = phi i64 [ %27, %5 ], [ 0, %1 ]
  %31 = or i64 %30, %29
  ret i64 %31
}

declare i32 @_ZNK3gfx9ImageSkia5widthEv(%"class.gfx::ImageSkia"*) local_unnamed_addr #1

declare i32 @_ZNK3gfx9ImageSkia6heightEv(%"class.gfx::ImageSkia"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx16NineImagePainter5PaintEPNS_6CanvasERKNS_4RectE(%"class.gfx::NineImagePainter"*, %"class.gfx::Canvas"*, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN3gfx16NineImagePainter5PaintEPNS_6CanvasERKNS_4RectEh(%"class.gfx::NineImagePainter"* %0, %"class.gfx::Canvas"* %1, %"class.gfx::Rect"* dereferenceable(16) %2, i8 zeroext -1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx16NineImagePainter5PaintEPNS_6CanvasERKNS_4RectEh(%"class.gfx::NineImagePainter"*, %"class.gfx::Canvas"*, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), i8 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.gfx::ScopedCanvas", align 8
  %6 = alloca %"class.gfx::Vector2d", align 4
  %7 = alloca [9 x %"class.gfx::ImageSkiaRep"], align 16
  %8 = alloca [3 x i32], align 4
  %9 = alloca [3 x i32], align 4
  %10 = alloca [3 x i32], align 4
  %11 = alloca %"class.cc::PaintFlags", align 8
  %12 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 0, i32 0, i32 0
  %13 = load %"class.gfx::internal::ImageSkiaStorage"*, %"class.gfx::internal::ImageSkiaStorage"** %12, align 8
  %14 = icmp eq %"class.gfx::internal::ImageSkiaStorage"* %13, null
  br i1 %14, label %553, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.gfx::ScopedCanvas"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8
  %17 = bitcast %"class.gfx::ScopedCanvas"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  call void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"* nonnull %5, %"class.gfx::Canvas"* %1) #8
  %18 = call float @_ZN3gfx6Canvas21UndoDeviceScaleFactorEv(%"class.gfx::Canvas"* %1) #8
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = sitofp i32 %20 to float
  %22 = fmul float %18, %21
  %23 = fcmp ult float %22, 0.000000e+00
  %24 = fadd float %22, 5.000000e-01
  %25 = call float @llvm.floor.f32(float %24) #8
  %26 = fadd float %22, -5.000000e-01
  %27 = call float @llvm.ceil.f32(float %26) #8
  %28 = select i1 %23, float %27, float %25
  %29 = fcmp ult float %28, 0xC1E0000000000000
  %30 = fcmp ugt float %28, 0x41DFFFFFE0000000
  %31 = fcmp ogt float %28, 0xC1E0000000000000
  %32 = select i1 %31, float %28, float 0xC1E0000000000000
  %33 = fptosi float %32 to i32
  %34 = select i1 %29, i32 0, i32 2147483647
  %35 = select i1 %30, i32 %34, i32 %33
  %36 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = sitofp i32 %37 to float
  %39 = fmul float %18, %38
  %40 = fcmp ult float %39, 0.000000e+00
  %41 = fadd float %39, 5.000000e-01
  %42 = call float @llvm.floor.f32(float %41) #8
  %43 = fadd float %39, -5.000000e-01
  %44 = call float @llvm.ceil.f32(float %43) #8
  %45 = select i1 %40, float %44, float %42
  %46 = fcmp ult float %45, 0xC1E0000000000000
  %47 = fcmp ugt float %45, 0x41DFFFFFE0000000
  %48 = fcmp ogt float %45, 0xC1E0000000000000
  %49 = select i1 %48, float %45, float 0xC1E0000000000000
  %50 = fptosi float %49 to i32
  %51 = select i1 %46, i32 0, i32 2147483647
  %52 = select i1 %47, i32 %51, i32 %50
  %53 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = add nsw i32 %54, %20
  %56 = sitofp i32 %55 to float
  %57 = fmul float %18, %56
  %58 = fcmp ult float %57, 0.000000e+00
  %59 = fadd float %57, 5.000000e-01
  %60 = call float @llvm.floor.f32(float %59) #8
  %61 = fadd float %57, -5.000000e-01
  %62 = call float @llvm.ceil.f32(float %61) #8
  %63 = select i1 %58, float %62, float %60
  %64 = fcmp ult float %63, 0xC1E0000000000000
  %65 = fcmp ugt float %63, 0x41DFFFFFE0000000
  %66 = fcmp ogt float %63, 0xC1E0000000000000
  %67 = select i1 %66, float %63, float 0xC1E0000000000000
  %68 = fptosi float %67 to i32
  %69 = select i1 %64, i32 0, i32 2147483647
  %70 = select i1 %65, i32 %69, i32 %68
  %71 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = add nsw i32 %72, %37
  %74 = sitofp i32 %73 to float
  %75 = fmul float %18, %74
  %76 = fcmp ult float %75, 0.000000e+00
  %77 = fadd float %75, 5.000000e-01
  %78 = call float @llvm.floor.f32(float %77) #8
  %79 = fadd float %75, -5.000000e-01
  %80 = call float @llvm.ceil.f32(float %79) #8
  %81 = select i1 %76, float %80, float %78
  %82 = fcmp ult float %81, 0xC1E0000000000000
  %83 = fcmp ogt float %81, 0xC1E0000000000000
  %84 = select i1 %83, float %81, float 0xC1E0000000000000
  %85 = select i1 %82, i32 0, i32 2147483647
  %86 = sub nsw i32 %70, %35
  %87 = bitcast %"class.gfx::Vector2d"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #8
  %88 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %6, i64 0, i32 0
  store i32 %35, i32* %88, align 4
  %89 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %6, i64 0, i32 1
  store i32 %52, i32* %89, align 4
  call void @_ZN3gfx6Canvas9TranslateERKNS_8Vector2dE(%"class.gfx::Canvas"* %1, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #8
  %90 = bitcast [9 x %"class.gfx::ImageSkiaRep"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1728, i8* nonnull %90) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %90, i8* align 16 bitcast ([9 x <{ { %class.sk_sp.42, %class.sk_sp.43, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.48, %class.sk_sp.49, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.42, %class.scoped_refptr.50 }, %class.sk_sp.43, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }>]* @__const._ZN3gfx16NineImagePainter5PaintEPNS_6CanvasERKNS_4RectEh.image_reps to i8*), i64 1728, i1 false)
  %91 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 0
  call void @_ZN3gfx12ImageSkiaRepC1Ev(%"class.gfx::ImageSkiaRep"* nonnull %91) #8
  %92 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 1
  call void @_ZN3gfx12ImageSkiaRepC1Ev(%"class.gfx::ImageSkiaRep"* %92) #8
  %93 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 2
  call void @_ZN3gfx12ImageSkiaRepC1Ev(%"class.gfx::ImageSkiaRep"* %93) #8
  %94 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 3
  call void @_ZN3gfx12ImageSkiaRepC1Ev(%"class.gfx::ImageSkiaRep"* %94) #8
  %95 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 4
  call void @_ZN3gfx12ImageSkiaRepC1Ev(%"class.gfx::ImageSkiaRep"* %95) #8
  %96 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 5
  call void @_ZN3gfx12ImageSkiaRepC1Ev(%"class.gfx::ImageSkiaRep"* %96) #8
  %97 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 6
  call void @_ZN3gfx12ImageSkiaRepC1Ev(%"class.gfx::ImageSkiaRep"* %97) #8
  %98 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 7
  call void @_ZN3gfx12ImageSkiaRepC1Ev(%"class.gfx::ImageSkiaRep"* %98) #8
  %99 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 8
  call void @_ZN3gfx12ImageSkiaRepC1Ev(%"class.gfx::ImageSkiaRep"* %99) #8
  %100 = fcmp ugt float %81, 0x41DFFFFFE0000000
  %101 = fptosi float %84 to i32
  %102 = select i1 %100, i32 %85, i32 %101
  %103 = sub nsw i32 %102, %52
  br label %508

104:                                              ; preds = %538
  %105 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 0, i32 2
  %106 = load i32, i32* %105, align 16
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %104
  %109 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 0, i32 5, i32 0, i32 0
  %110 = load %class.SkPixelRef*, %class.SkPixelRef** %109, align 16
  %111 = icmp eq %class.SkPixelRef* %110, null
  br i1 %111, label %119, label %116

112:                                              ; preds = %104
  %113 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 0, i32 1, i32 0
  %114 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %113, align 8
  %115 = icmp eq %"class.cc::PaintOpBuffer"* %114, null
  br i1 %115, label %119, label %116

116:                                              ; preds = %112, %108
  %117 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 0, i32 3, i32 0
  %118 = load i32, i32* %117, align 4
  br label %119

119:                                              ; preds = %108, %112, %116
  %120 = phi i32 [ %118, %116 ], [ 0, %112 ], [ 0, %108 ]
  %121 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 2
  %122 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 2, i32 2
  %123 = load i32, i32* %122, align 16
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %129

125:                                              ; preds = %119
  %126 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 2, i32 5, i32 0, i32 0
  %127 = load %class.SkPixelRef*, %class.SkPixelRef** %126, align 16
  %128 = icmp eq %class.SkPixelRef* %127, null
  br i1 %128, label %136, label %133

129:                                              ; preds = %119
  %130 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 2, i32 1, i32 0
  %131 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %130, align 8
  %132 = icmp eq %"class.cc::PaintOpBuffer"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %129, %125
  %134 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 2, i32 3, i32 0
  %135 = load i32, i32* %134, align 4
  br label %136

136:                                              ; preds = %125, %129, %133
  %137 = phi i32 [ %135, %133 ], [ 0, %129 ], [ 0, %125 ]
  %138 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 3
  %139 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 3, i32 2
  %140 = load i32, i32* %139, align 16
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %146

142:                                              ; preds = %136
  %143 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 3, i32 5, i32 0, i32 0
  %144 = load %class.SkPixelRef*, %class.SkPixelRef** %143, align 16
  %145 = icmp eq %class.SkPixelRef* %144, null
  br i1 %145, label %153, label %150

146:                                              ; preds = %136
  %147 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 3, i32 1, i32 0
  %148 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %147, align 8
  %149 = icmp eq %"class.cc::PaintOpBuffer"* %148, null
  br i1 %149, label %153, label %150

150:                                              ; preds = %146, %142
  %151 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 3, i32 3, i32 0
  %152 = load i32, i32* %151, align 4
  br label %153

153:                                              ; preds = %142, %146, %150
  %154 = phi i32 [ %152, %150 ], [ 0, %146 ], [ 0, %142 ]
  %155 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 5
  %156 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 5, i32 2
  %157 = load i32, i32* %156, align 16
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %163

159:                                              ; preds = %153
  %160 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 5, i32 5, i32 0, i32 0
  %161 = load %class.SkPixelRef*, %class.SkPixelRef** %160, align 16
  %162 = icmp eq %class.SkPixelRef* %161, null
  br i1 %162, label %170, label %167

163:                                              ; preds = %153
  %164 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 5, i32 1, i32 0
  %165 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %164, align 8
  %166 = icmp eq %"class.cc::PaintOpBuffer"* %165, null
  br i1 %166, label %170, label %167

167:                                              ; preds = %163, %159
  %168 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 5, i32 3, i32 0
  %169 = load i32, i32* %168, align 4
  br label %170

170:                                              ; preds = %159, %163, %167
  %171 = phi i32 [ %169, %167 ], [ 0, %163 ], [ 0, %159 ]
  %172 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 6
  %173 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 6, i32 2
  %174 = load i32, i32* %173, align 16
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %180

176:                                              ; preds = %170
  %177 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 6, i32 5, i32 0, i32 0
  %178 = load %class.SkPixelRef*, %class.SkPixelRef** %177, align 16
  %179 = icmp eq %class.SkPixelRef* %178, null
  br i1 %179, label %187, label %184

180:                                              ; preds = %170
  %181 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 6, i32 1, i32 0
  %182 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %181, align 8
  %183 = icmp eq %"class.cc::PaintOpBuffer"* %182, null
  br i1 %183, label %187, label %184

184:                                              ; preds = %180, %176
  %185 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 6, i32 3, i32 0
  %186 = load i32, i32* %185, align 4
  br label %187

187:                                              ; preds = %176, %180, %184
  %188 = phi i32 [ %186, %184 ], [ 0, %180 ], [ 0, %176 ]
  %189 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 8
  %190 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 8, i32 2
  %191 = load i32, i32* %190, align 16
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %197

193:                                              ; preds = %187
  %194 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 8, i32 5, i32 0, i32 0
  %195 = load %class.SkPixelRef*, %class.SkPixelRef** %194, align 16
  %196 = icmp eq %class.SkPixelRef* %195, null
  br i1 %196, label %204, label %201

197:                                              ; preds = %187
  %198 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 8, i32 1, i32 0
  %199 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %198, align 8
  %200 = icmp eq %"class.cc::PaintOpBuffer"* %199, null
  br i1 %200, label %204, label %201

201:                                              ; preds = %197, %193
  %202 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 8, i32 3, i32 0
  %203 = load i32, i32* %202, align 4
  br label %204

204:                                              ; preds = %193, %197, %201
  %205 = phi i32 [ %203, %201 ], [ 0, %197 ], [ 0, %193 ]
  br i1 %107, label %206, label %210

206:                                              ; preds = %204
  %207 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 0, i32 5, i32 0, i32 0
  %208 = load %class.SkPixelRef*, %class.SkPixelRef** %207, align 16
  %209 = icmp eq %class.SkPixelRef* %208, null
  br i1 %209, label %217, label %214

210:                                              ; preds = %204
  %211 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 0, i32 1, i32 0
  %212 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %211, align 8
  %213 = icmp eq %"class.cc::PaintOpBuffer"* %212, null
  br i1 %213, label %217, label %214

214:                                              ; preds = %210, %206
  %215 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 0, i32 3, i32 1
  %216 = load i32, i32* %215, align 4
  br label %217

217:                                              ; preds = %206, %210, %214
  %218 = phi i32 [ %216, %214 ], [ 0, %210 ], [ 0, %206 ]
  %219 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 1
  %220 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 1, i32 2
  %221 = load i32, i32* %220, align 16
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %227

223:                                              ; preds = %217
  %224 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 1, i32 5, i32 0, i32 0
  %225 = load %class.SkPixelRef*, %class.SkPixelRef** %224, align 16
  %226 = icmp eq %class.SkPixelRef* %225, null
  br i1 %226, label %234, label %231

227:                                              ; preds = %217
  %228 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 1, i32 1, i32 0
  %229 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %228, align 8
  %230 = icmp eq %"class.cc::PaintOpBuffer"* %229, null
  br i1 %230, label %234, label %231

231:                                              ; preds = %227, %223
  %232 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 1, i32 3, i32 1
  %233 = load i32, i32* %232, align 4
  br label %234

234:                                              ; preds = %223, %227, %231
  %235 = phi i32 [ %233, %231 ], [ 0, %227 ], [ 0, %223 ]
  br i1 %124, label %236, label %240

236:                                              ; preds = %234
  %237 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 2, i32 5, i32 0, i32 0
  %238 = load %class.SkPixelRef*, %class.SkPixelRef** %237, align 16
  %239 = icmp eq %class.SkPixelRef* %238, null
  br i1 %239, label %247, label %244

240:                                              ; preds = %234
  %241 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 2, i32 1, i32 0
  %242 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %241, align 8
  %243 = icmp eq %"class.cc::PaintOpBuffer"* %242, null
  br i1 %243, label %247, label %244

244:                                              ; preds = %240, %236
  %245 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 2, i32 3, i32 1
  %246 = load i32, i32* %245, align 4
  br label %247

247:                                              ; preds = %236, %240, %244
  %248 = phi i32 [ %246, %244 ], [ 0, %240 ], [ 0, %236 ]
  br i1 %175, label %249, label %253

249:                                              ; preds = %247
  %250 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 6, i32 5, i32 0, i32 0
  %251 = load %class.SkPixelRef*, %class.SkPixelRef** %250, align 16
  %252 = icmp eq %class.SkPixelRef* %251, null
  br i1 %252, label %260, label %257

253:                                              ; preds = %247
  %254 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 6, i32 1, i32 0
  %255 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %254, align 8
  %256 = icmp eq %"class.cc::PaintOpBuffer"* %255, null
  br i1 %256, label %260, label %257

257:                                              ; preds = %253, %249
  %258 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 6, i32 3, i32 1
  %259 = load i32, i32* %258, align 4
  br label %260

260:                                              ; preds = %249, %253, %257
  %261 = phi i32 [ %259, %257 ], [ 0, %253 ], [ 0, %249 ]
  %262 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 7
  %263 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 7, i32 2
  %264 = load i32, i32* %263, align 16
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %270

266:                                              ; preds = %260
  %267 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 7, i32 5, i32 0, i32 0
  %268 = load %class.SkPixelRef*, %class.SkPixelRef** %267, align 16
  %269 = icmp eq %class.SkPixelRef* %268, null
  br i1 %269, label %277, label %274

270:                                              ; preds = %260
  %271 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 7, i32 1, i32 0
  %272 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %271, align 8
  %273 = icmp eq %"class.cc::PaintOpBuffer"* %272, null
  br i1 %273, label %277, label %274

274:                                              ; preds = %270, %266
  %275 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 7, i32 3, i32 1
  %276 = load i32, i32* %275, align 4
  br label %277

277:                                              ; preds = %266, %270, %274
  %278 = phi i32 [ %276, %274 ], [ 0, %270 ], [ 0, %266 ]
  br i1 %192, label %279, label %283

279:                                              ; preds = %277
  %280 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 8, i32 5, i32 0, i32 0
  %281 = load %class.SkPixelRef*, %class.SkPixelRef** %280, align 16
  %282 = icmp eq %class.SkPixelRef* %281, null
  br i1 %282, label %290, label %287

283:                                              ; preds = %277
  %284 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 8, i32 1, i32 0
  %285 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %284, align 8
  %286 = icmp eq %"class.cc::PaintOpBuffer"* %285, null
  br i1 %286, label %290, label %287

287:                                              ; preds = %283, %279
  %288 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 8, i32 3, i32 1
  %289 = load i32, i32* %288, align 4
  br label %290

290:                                              ; preds = %279, %283, %287
  %291 = phi i32 [ %289, %287 ], [ 0, %283 ], [ 0, %279 ]
  %292 = icmp slt i32 %86, %120
  %293 = select i1 %292, i32 %86, i32 %120
  %294 = sub nsw i32 %86, %293
  %295 = icmp slt i32 %294, %137
  %296 = icmp slt i32 %86, %154
  %297 = select i1 %296, i32 %86, i32 %154
  %298 = sub nsw i32 %86, %297
  %299 = icmp slt i32 %298, %171
  %300 = icmp slt i32 %86, %188
  %301 = select i1 %300, i32 %86, i32 %188
  %302 = sub nsw i32 %86, %301
  %303 = icmp slt i32 %302, %205
  %304 = icmp slt i32 %103, %218
  %305 = select i1 %304, i32 %103, i32 %218
  %306 = icmp slt i32 %103, %235
  %307 = select i1 %306, i32 %103, i32 %235
  %308 = icmp slt i32 %103, %248
  %309 = select i1 %308, i32 %103, i32 %248
  %310 = sub nsw i32 %103, %305
  %311 = icmp slt i32 %310, %261
  %312 = sub nsw i32 %103, %307
  %313 = icmp slt i32 %312, %278
  %314 = sub nsw i32 %103, %309
  %315 = icmp slt i32 %314, %291
  %316 = bitcast [3 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %316) #8
  %317 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 0
  store i32 %293, i32* %317, align 4
  %318 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 1
  store i32 %297, i32* %318, align 4
  %319 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 2
  store i32 %301, i32* %319, align 4
  %320 = icmp slt i32 %297, %293
  %321 = select i1 %320, i32* %318, i32* %317
  %322 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 2
  %323 = load i32, i32* %321, align 4
  %324 = icmp slt i32 %301, %323
  %325 = select i1 %295, i32 %294, i32 %137
  %326 = select i1 %299, i32 %298, i32 %171
  %327 = select i1 %303, i32 %302, i32 %205
  %328 = select i1 %311, i32 %310, i32 %261
  %329 = select i1 %313, i32 %312, i32 %278
  %330 = select i1 %315, i32 %314, i32 %291
  %331 = load i32, i32* %322, align 4
  %332 = load i32, i32* %321, align 4
  %333 = select i1 %324, i32 %331, i32 %332
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %316) #8
  %334 = icmp slt i32 %307, %305
  %335 = select i1 %334, i32 %307, i32 %305
  %336 = icmp slt i32 %309, %335
  %337 = select i1 %336, i32 %309, i32 %335
  %338 = bitcast [3 x i32]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %338) #8
  %339 = getelementptr inbounds [3 x i32], [3 x i32]* %9, i64 0, i64 0
  store i32 %325, i32* %339, align 4
  %340 = getelementptr inbounds [3 x i32], [3 x i32]* %9, i64 0, i64 1
  store i32 %326, i32* %340, align 4
  %341 = getelementptr inbounds [3 x i32], [3 x i32]* %9, i64 0, i64 2
  store i32 %327, i32* %341, align 4
  %342 = icmp slt i32 %326, %325
  %343 = getelementptr inbounds [3 x i32], [3 x i32]* %9, i64 0, i64 2
  %344 = load i32, i32* %339, align 4
  %345 = select i1 %342, i32 %326, i32 %344
  %346 = icmp slt i32 %327, %345
  %347 = sub nsw i32 %86, %333
  %348 = load i32, i32* %343, align 4
  %349 = select i1 %346, i32 %348, i32 %345
  %350 = sub i32 %347, %349
  %351 = icmp sgt i32 %350, 0
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %338) #8
  %352 = bitcast [3 x i32]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %352) #8
  %353 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 0
  store i32 %328, i32* %353, align 4
  %354 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 1
  store i32 %329, i32* %354, align 4
  %355 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 2
  store i32 %330, i32* %355, align 4
  %356 = icmp slt i32 %329, %328
  %357 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 2
  %358 = load i32, i32* %353, align 4
  %359 = select i1 %356, i32 %329, i32 %358
  %360 = icmp slt i32 %330, %359
  %361 = select i1 %351, i32 %350, i32 0
  %362 = sub nsw i32 %103, %337
  %363 = load i32, i32* %357, align 4
  %364 = select i1 %360, i32 %363, i32 %359
  %365 = sub i32 %362, %364
  %366 = icmp sgt i32 %365, 0
  %367 = select i1 %366, i32 %365, i32 0
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %352) #8
  %368 = bitcast %"class.cc::PaintFlags"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %368) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %368, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN3gfx16NineImagePainter5PaintEPNS_6CanvasERKNS_4RectEh.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %11) #8
  %369 = zext i8 %3 to i32
  %370 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %11, i64 0, i32 6
  %371 = load i32, i32* %370, align 8
  %372 = and i32 %371, 16711680
  %373 = and i32 %371, 65280
  %374 = and i32 %371, 255
  %375 = shl nuw i32 %369, 24
  %376 = or i32 %372, %375
  %377 = or i32 %376, %373
  %378 = or i32 %377, %374
  store i32 %378, i32* %370, align 8
  %379 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 4
  %380 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 4, i32 2
  %381 = load i32, i32* %380, align 16
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %387

383:                                              ; preds = %290
  %384 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 4, i32 5, i32 0, i32 0
  %385 = load %class.SkPixelRef*, %class.SkPixelRef** %384, align 16
  %386 = icmp eq %class.SkPixelRef* %385, null
  br i1 %386, label %392, label %391

387:                                              ; preds = %290
  %388 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 4, i32 1, i32 0
  %389 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %388, align 8
  %390 = icmp eq %"class.cc::PaintOpBuffer"* %389, null
  br i1 %390, label %392, label %391

391:                                              ; preds = %387, %383
  call void @_ZN3gfx6Canvas19DrawImageIntInPixelERKNS_12ImageSkiaRepEiiiibRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %1, %"class.gfx::ImageSkiaRep"* dereferenceable(192) %379, i32 %333, i32 %337, i32 %361, i32 %367, i1 zeroext false, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %11) #8
  br label %392

392:                                              ; preds = %383, %387, %391
  %393 = load i32, i32* %105, align 16
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %399

395:                                              ; preds = %392
  %396 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 0, i32 5, i32 0, i32 0
  %397 = load %class.SkPixelRef*, %class.SkPixelRef** %396, align 16
  %398 = icmp eq %class.SkPixelRef* %397, null
  br i1 %398, label %404, label %403

399:                                              ; preds = %392
  %400 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 0, i32 1, i32 0
  %401 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %400, align 8
  %402 = icmp eq %"class.cc::PaintOpBuffer"* %401, null
  br i1 %402, label %404, label %403

403:                                              ; preds = %399, %395
  call void @_ZN3gfx6Canvas19DrawImageIntInPixelERKNS_12ImageSkiaRepEiiiibRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %1, %"class.gfx::ImageSkiaRep"* nonnull dereferenceable(192) %91, i32 0, i32 0, i32 %293, i32 %305, i1 zeroext false, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %11) #8
  br label %404

404:                                              ; preds = %395, %399, %403
  %405 = sub nsw i32 %294, %325
  %406 = load i32, i32* %220, align 16
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %408, label %412

408:                                              ; preds = %404
  %409 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 1, i32 5, i32 0, i32 0
  %410 = load %class.SkPixelRef*, %class.SkPixelRef** %409, align 16
  %411 = icmp eq %class.SkPixelRef* %410, null
  br i1 %411, label %417, label %416

412:                                              ; preds = %404
  %413 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 1, i32 1, i32 0
  %414 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %413, align 8
  %415 = icmp eq %"class.cc::PaintOpBuffer"* %414, null
  br i1 %415, label %417, label %416

416:                                              ; preds = %412, %408
  call void @_ZN3gfx6Canvas19DrawImageIntInPixelERKNS_12ImageSkiaRepEiiiibRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %1, %"class.gfx::ImageSkiaRep"* dereferenceable(192) %219, i32 %293, i32 0, i32 %405, i32 %307, i1 zeroext false, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %11) #8
  br label %417

417:                                              ; preds = %408, %412, %416
  %418 = sub nsw i32 %86, %325
  %419 = load i32, i32* %122, align 16
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %421, label %425

421:                                              ; preds = %417
  %422 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 2, i32 5, i32 0, i32 0
  %423 = load %class.SkPixelRef*, %class.SkPixelRef** %422, align 16
  %424 = icmp eq %class.SkPixelRef* %423, null
  br i1 %424, label %430, label %429

425:                                              ; preds = %417
  %426 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 2, i32 1, i32 0
  %427 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %426, align 8
  %428 = icmp eq %"class.cc::PaintOpBuffer"* %427, null
  br i1 %428, label %430, label %429

429:                                              ; preds = %425, %421
  call void @_ZN3gfx6Canvas19DrawImageIntInPixelERKNS_12ImageSkiaRepEiiiibRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %1, %"class.gfx::ImageSkiaRep"* dereferenceable(192) %121, i32 %418, i32 0, i32 %325, i32 %309, i1 zeroext false, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %11) #8
  br label %430

430:                                              ; preds = %421, %425, %429
  %431 = sub nsw i32 %310, %328
  %432 = load i32, i32* %139, align 16
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %434, label %438

434:                                              ; preds = %430
  %435 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 3, i32 5, i32 0, i32 0
  %436 = load %class.SkPixelRef*, %class.SkPixelRef** %435, align 16
  %437 = icmp eq %class.SkPixelRef* %436, null
  br i1 %437, label %443, label %442

438:                                              ; preds = %430
  %439 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 3, i32 1, i32 0
  %440 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %439, align 8
  %441 = icmp eq %"class.cc::PaintOpBuffer"* %440, null
  br i1 %441, label %443, label %442

442:                                              ; preds = %438, %434
  call void @_ZN3gfx6Canvas19DrawImageIntInPixelERKNS_12ImageSkiaRepEiiiibRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %1, %"class.gfx::ImageSkiaRep"* dereferenceable(192) %138, i32 0, i32 %305, i32 %297, i32 %431, i1 zeroext false, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %11) #8
  br label %443

443:                                              ; preds = %434, %438, %442
  %444 = sub nsw i32 %86, %326
  %445 = sub nsw i32 %314, %330
  %446 = load i32, i32* %156, align 16
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %448, label %452

448:                                              ; preds = %443
  %449 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 5, i32 5, i32 0, i32 0
  %450 = load %class.SkPixelRef*, %class.SkPixelRef** %449, align 16
  %451 = icmp eq %class.SkPixelRef* %450, null
  br i1 %451, label %457, label %456

452:                                              ; preds = %443
  %453 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 5, i32 1, i32 0
  %454 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %453, align 8
  %455 = icmp eq %"class.cc::PaintOpBuffer"* %454, null
  br i1 %455, label %457, label %456

456:                                              ; preds = %452, %448
  call void @_ZN3gfx6Canvas19DrawImageIntInPixelERKNS_12ImageSkiaRepEiiiibRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %1, %"class.gfx::ImageSkiaRep"* dereferenceable(192) %155, i32 %444, i32 %309, i32 %326, i32 %445, i1 zeroext false, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %11) #8
  br label %457

457:                                              ; preds = %448, %452, %456
  %458 = sub nsw i32 %103, %328
  %459 = load i32, i32* %173, align 16
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %461, label %465

461:                                              ; preds = %457
  %462 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 6, i32 5, i32 0, i32 0
  %463 = load %class.SkPixelRef*, %class.SkPixelRef** %462, align 16
  %464 = icmp eq %class.SkPixelRef* %463, null
  br i1 %464, label %470, label %469

465:                                              ; preds = %457
  %466 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 6, i32 1, i32 0
  %467 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %466, align 8
  %468 = icmp eq %"class.cc::PaintOpBuffer"* %467, null
  br i1 %468, label %470, label %469

469:                                              ; preds = %465, %461
  call void @_ZN3gfx6Canvas19DrawImageIntInPixelERKNS_12ImageSkiaRepEiiiibRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %1, %"class.gfx::ImageSkiaRep"* dereferenceable(192) %172, i32 0, i32 %458, i32 %301, i32 %328, i1 zeroext false, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %11) #8
  br label %470

470:                                              ; preds = %461, %465, %469
  %471 = sub nsw i32 %103, %329
  %472 = sub nsw i32 %302, %327
  %473 = load i32, i32* %263, align 16
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %475, label %479

475:                                              ; preds = %470
  %476 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 7, i32 5, i32 0, i32 0
  %477 = load %class.SkPixelRef*, %class.SkPixelRef** %476, align 16
  %478 = icmp eq %class.SkPixelRef* %477, null
  br i1 %478, label %484, label %483

479:                                              ; preds = %470
  %480 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 7, i32 1, i32 0
  %481 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %480, align 8
  %482 = icmp eq %"class.cc::PaintOpBuffer"* %481, null
  br i1 %482, label %484, label %483

483:                                              ; preds = %479, %475
  call void @_ZN3gfx6Canvas19DrawImageIntInPixelERKNS_12ImageSkiaRepEiiiibRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %1, %"class.gfx::ImageSkiaRep"* dereferenceable(192) %262, i32 %301, i32 %471, i32 %472, i32 %329, i1 zeroext false, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %11) #8
  br label %484

484:                                              ; preds = %475, %479, %483
  %485 = sub nsw i32 %86, %327
  %486 = sub nsw i32 %103, %330
  %487 = load i32, i32* %190, align 16
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %489, label %493

489:                                              ; preds = %484
  %490 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 8, i32 5, i32 0, i32 0
  %491 = load %class.SkPixelRef*, %class.SkPixelRef** %490, align 16
  %492 = icmp eq %class.SkPixelRef* %491, null
  br i1 %492, label %498, label %497

493:                                              ; preds = %484
  %494 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 8, i32 1, i32 0
  %495 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %494, align 8
  %496 = icmp eq %"class.cc::PaintOpBuffer"* %495, null
  br i1 %496, label %498, label %497

497:                                              ; preds = %493, %489
  call void @_ZN3gfx6Canvas19DrawImageIntInPixelERKNS_12ImageSkiaRepEiiiibRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %1, %"class.gfx::ImageSkiaRep"* dereferenceable(192) %189, i32 %485, i32 %486, i32 %327, i32 %330, i1 zeroext false, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %11) #8
  br label %498

498:                                              ; preds = %489, %493, %497
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %368) #8
  %499 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 8
  call void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"* %499) #8
  %500 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 7
  call void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"* %500) #8
  %501 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 6
  call void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"* %501) #8
  %502 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 5
  call void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"* %502) #8
  %503 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 4
  call void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"* %503) #8
  %504 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 3
  call void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"* %504) #8
  %505 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 2
  call void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"* %505) #8
  %506 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 1
  call void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"* %506) #8
  %507 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 0
  call void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"* nonnull %507) #8
  call void @llvm.lifetime.end.p0i8(i64 1728, i8* nonnull %90) #8
  call void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8
  br label %553

508:                                              ; preds = %538, %15
  %509 = phi i64 [ %551, %538 ], [ 0, %15 ]
  %510 = getelementptr inbounds %"class.gfx::NineImagePainter", %"class.gfx::NineImagePainter"* %0, i64 0, i32 0, i64 %509
  %511 = call dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"* %510, float %18) #8
  %512 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 %509
  %513 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %512, i64 0, i32 0
  %514 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %511, i64 0, i32 0
  %515 = call dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSERKS0_(%"class.cc::PaintImage"* %513, %"class.cc::PaintImage"* dereferenceable(104) %514) #8
  %516 = icmp eq %"class.gfx::ImageSkiaRep"* %512, %511
  br i1 %516, label %538, label %517

517:                                              ; preds = %508
  %518 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %511, i64 0, i32 1, i32 0
  %519 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %518, align 8
  %520 = icmp eq %"class.cc::PaintOpBuffer"* %519, null
  br i1 %520, label %524, label %521

521:                                              ; preds = %517
  %522 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %519, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %523 = atomicrmw add i32* %522, i32 1 monotonic
  br label %524

524:                                              ; preds = %521, %517
  %525 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 %509, i32 1, i32 0
  %526 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %525, align 8
  store %"class.cc::PaintOpBuffer"* %519, %"class.cc::PaintOpBuffer"** %525, align 8
  %527 = icmp eq %"class.cc::PaintOpBuffer"* %526, null
  br i1 %527, label %538, label %528

528:                                              ; preds = %524
  %529 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %526, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %530 = atomicrmw add i32* %529, i32 -1 acq_rel
  %531 = icmp eq i32 %530, 1
  br i1 %531, label %532, label %538

532:                                              ; preds = %528
  %533 = bitcast %"class.cc::PaintOpBuffer"* %526 to %class.SkRefCntBase*
  %534 = bitcast %"class.cc::PaintOpBuffer"* %526 to void (%class.SkRefCntBase*)***
  %535 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %534, align 8
  %536 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %535, i64 2
  %537 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %536, align 8
  call void %537(%class.SkRefCntBase* nonnull %533) #8
  br label %538

538:                                              ; preds = %508, %524, %528, %532
  %539 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 %509, i32 2
  %540 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %511, i64 0, i32 2
  %541 = bitcast i32* %539 to i8*
  %542 = bitcast i32* %540 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %541, i8* align 8 %542, i64 12, i1 false) #8
  %543 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 %509, i32 5
  %544 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %511, i64 0, i32 5
  %545 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %543, %class.SkBitmap* dereferenceable(56) %544) #8
  %546 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %511, i64 0, i32 6
  %547 = bitcast float* %546 to i32*
  %548 = load i32, i32* %547, align 8
  %549 = getelementptr inbounds [9 x %"class.gfx::ImageSkiaRep"], [9 x %"class.gfx::ImageSkiaRep"]* %7, i64 0, i64 %509, i32 6
  %550 = bitcast float* %549 to i32*
  store i32 %548, i32* %550, align 8
  %551 = add nuw nsw i64 %509, 1
  %552 = icmp eq i64 %551, 9
  br i1 %552, label %104, label %508

553:                                              ; preds = %4, %498
  ret void
}

declare void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"*, %"class.gfx::Canvas"*) unnamed_addr #1

declare float @_ZN3gfx6Canvas21UndoDeviceScaleFactorEv(%"class.gfx::Canvas"*) local_unnamed_addr #1

declare void @_ZN3gfx6Canvas9TranslateERKNS_8Vector2dE(%"class.gfx::Canvas"*, %"class.gfx::Vector2d"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3gfx12ImageSkiaRepC1Ev(%"class.gfx::ImageSkiaRep"*) unnamed_addr #1

declare dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"*, float) local_unnamed_addr #1

declare void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"*) unnamed_addr #3

declare dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSERKS0_(%"class.cc::PaintImage"*, %"class.cc::PaintImage"* dereferenceable(104)) local_unnamed_addr #1

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

declare void @_ZN3gfx6Canvas19DrawImageIntInPixelERKNS_12ImageSkiaRepEiiiibRKN2cc10PaintFlagsE(%"class.gfx::Canvas"*, %"class.gfx::ImageSkiaRep"* dereferenceable(192), i32, i32, i32, i32, i1 zeroext, %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
