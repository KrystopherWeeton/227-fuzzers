; ModuleID = '../../content/common/in_process_child_thread_params.cc'
source_filename = "../../content/common/in_process_child_thread_params.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::InProcessChildThreadParams" = type { %class.scoped_refptr, %"class.mojo::OutgoingInvitation"* }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::OutgoingInvitation" = type { %"class.mojo::ScopedHandleBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::InvitationHandle" }
%"class.mojo::InvitationHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>

@_ZN7content26InProcessChildThreadParamsC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEEPN4mojo18OutgoingInvitationE = hidden unnamed_addr alias void (%"class.content::InProcessChildThreadParams"*, %"class.base::SingleThreadTaskRunner"*, %"class.mojo::OutgoingInvitation"*), void (%"class.content::InProcessChildThreadParams"*, %"class.base::SingleThreadTaskRunner"*, %"class.mojo::OutgoingInvitation"*)* @_ZN7content26InProcessChildThreadParamsC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEEPN4mojo18OutgoingInvitationE
@_ZN7content26InProcessChildThreadParamsC1ERKS0_ = hidden unnamed_addr alias void (%"class.content::InProcessChildThreadParams"*, %"class.content::InProcessChildThreadParams"*), void (%"class.content::InProcessChildThreadParams"*, %"class.content::InProcessChildThreadParams"*)* @_ZN7content26InProcessChildThreadParamsC2ERKS0_
@_ZN7content26InProcessChildThreadParamsD1Ev = hidden unnamed_addr alias void (%"class.content::InProcessChildThreadParams"*), void (%"class.content::InProcessChildThreadParams"*)* @_ZN7content26InProcessChildThreadParamsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26InProcessChildThreadParamsC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEEPN4mojo18OutgoingInvitationE(%"class.content::InProcessChildThreadParams"* nocapture, %"class.base::SingleThreadTaskRunner"*, %"class.mojo::OutgoingInvitation"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.base::SingleThreadTaskRunner"* %1 to i64
  %5 = bitcast %"class.content::InProcessChildThreadParams"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.content::InProcessChildThreadParams", %"class.content::InProcessChildThreadParams"* %0, i64 0, i32 1
  store %"class.mojo::OutgoingInvitation"* %2, %"class.mojo::OutgoingInvitation"** %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7content26InProcessChildThreadParamsC2ERKS0_(%"class.content::InProcessChildThreadParams"* nocapture, %"class.content::InProcessChildThreadParams"* nocapture readonly dereferenceable(16)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.content::InProcessChildThreadParams", %"class.content::InProcessChildThreadParams"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = getelementptr inbounds %"class.content::InProcessChildThreadParams", %"class.content::InProcessChildThreadParams"* %0, i64 0, i32 0, i32 0
  store %"class.base::SingleThreadTaskRunner"* %4, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %6 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %"class.content::InProcessChildThreadParams", %"class.content::InProcessChildThreadParams"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.content::InProcessChildThreadParams", %"class.content::InProcessChildThreadParams"* %1, i64 0, i32 1
  %13 = bitcast %"class.mojo::OutgoingInvitation"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.mojo::OutgoingInvitation"** %11 to i64*
  store i64 %14, i64* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26InProcessChildThreadParamsD2Ev(%"class.content::InProcessChildThreadParams"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::InProcessChildThreadParams", %"class.content::InProcessChildThreadParams"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %2, align 8
  %4 = icmp eq %"class.base::SingleThreadTaskRunner"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %3, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 -2
  %12 = bitcast %"class.base::RefCountedThreadSafe"* %11 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %12) #3
  br label %13

13:                                               ; preds = %1, %5, %10
  ret void
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
