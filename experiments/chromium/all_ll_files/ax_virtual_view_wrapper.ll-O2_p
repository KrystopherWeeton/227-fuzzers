; ModuleID = '../../ui/views/accessibility/ax_virtual_view_wrapper.cc'
source_filename = "../../ui/views/accessibility/ax_virtual_view_wrapper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.views::AXVirtualViewWrapper" = type { %"class.views::AXAuraObjWrapper", %"class.views::AXVirtualView"* }
%"class.views::AXAuraObjWrapper" = type { i32 (...)**, %"class.views::AXAuraObjCache"* }
%"class.views::AXAuraObjCache" = type { %"class.aura::client::FocusChangeObserver", %"class.aura::Window"*, %"class.std::__1::unique_ptr", %"class.std::__1::map", %"class.std::__1::map.7", %"class.std::__1::map.18", %"class.std::__1::map.29", %"class.std::__1::map.40", %"class.views::AXAuraObjCache::Delegate"*, %"class.std::__1::set", %"class.aura::Window"*, %"class.views::Widget"* }
%"class.aura::client::FocusChangeObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.views::AXAuraObjCache::A11yOverrideWindowObserver"* }
%"class.views::AXAuraObjCache::A11yOverrideWindowObserver" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.std::__1::map.7" = type { %"class.std::__1::__tree.8" }
%"class.std::__1::__tree.8" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.18" = type { %"class.std::__1::__tree.19" }
%"class.std::__1::__tree.19" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.29" = type { %"class.std::__1::__tree.30" }
%"class.std::__1::__tree.30" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.40" = type { %"class.std::__1::__tree.41" }
%"class.std::__1::__tree.41" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.views::AXAuraObjCache::Delegate" = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree.51" }
%"class.std::__1::__tree.51" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.aura::Window" = type opaque
%"class.views::Widget" = type opaque
%"class.views::AXVirtualView" = type { %"class.ui::AXPlatformNodeDelegateBase", %"class.ui::AXPlatformNode"*, %"class.views::ViewAccessibility"*, %"class.views::AXVirtualView"*, %"class.std::__1::vector.198", %"class.views::AXAuraObjCache"*, %"class.ui::AXUniqueId", %"struct.ui::AXNodeData", %"class.base::RepeatingCallback.295" }
%"class.ui::AXPlatformNodeDelegateBase" = type { %"class.ui::AXPlatformNodeDelegate" }
%"class.ui::AXPlatformNodeDelegate" = type { i32 (...)** }
%"class.ui::AXPlatformNode" = type opaque
%"class.views::ViewAccessibility" = type { i32 (...)**, %"class.base::RepeatingCallback", %"class.views::View"*, %"class.std::__1::vector.198", %"class.views::AXVirtualView"*, %"class.ui::AXUniqueId", %"struct.ui::AXNodeData", i8, i8, %"class.absl::optional.157", %"class.views::Widget"*, %"class.views::Widget"*, %"class.absl::optional.279", %"class.std::__1::unique_ptr.289" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.104", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.111", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.129", %"class.absl::optional.135", i8, [7 x i8], %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.157", i8, i8, [3 x i8], %"class.std::__1::vector.162", %"class.std::__1::unique_ptr.169", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.175", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.188", %"class.base::ObserverList.194", i32, [4 x i8] }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.59", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.65" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.ui::EventHandler"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.72" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map.84" }
%"class.std::__1::map.84" = type { %"class.std::__1::__tree.85" }
%"class.std::__1::__tree.85" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.86", %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.95" }
%"class.std::__1::map.95" = type { %"class.std::__1::__tree.96" }
%"class.std::__1::__tree.96" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.views::View"** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.std::__1::vector.104"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.119", %"struct.std::__1::atomic.119", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.117, %class.SkTDArray.118, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.117 = type { i8*, i32, i32 }
%class.SkTDArray.118 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.124 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.119" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.124 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.125", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.125" = type { %"struct.std::__1::__atomic_base.126" }
%"struct.std::__1::__atomic_base.126" = type { %"struct.std::__1::__cxx_atomic_impl.127" }
%"struct.std::__1::__cxx_atomic_impl.127" = type { %"struct.std::__1::__cxx_atomic_base_impl.128" }
%"struct.std::__1::__cxx_atomic_base_impl.128" = type { i8 }
%"struct.std::__1::atomic.119" = type { %"struct.std::__1::__atomic_base.120" }
%"struct.std::__1::__atomic_base.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__cxx_atomic_impl.122" }
%"struct.std::__1::__cxx_atomic_impl.122" = type { %"struct.std::__1::__cxx_atomic_base_impl.123" }
%"struct.std::__1::__cxx_atomic_base_impl.123" = type { i8 }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.135" = type { %"class.absl::optional_internal::optional_data.136" }
%"class.absl::optional_internal::optional_data.136" = type { %"class.absl::optional_internal::optional_data_base.137" }
%"class.absl::optional_internal::optional_data_base.137" = type { %"class.absl::optional_internal::optional_data_dtor_base.138" }
%"class.absl::optional_internal::optional_data_dtor_base.138" = type { i8, %union.anon.139 }
%union.anon.139 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.views::Background"* }
%"class.views::Background" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.views::Border"* }
%"class.views::Border" = type opaque
%"class.ui::PaintCache" = type <{ %class.sk_sp.152, float, [4 x i8] }>
%class.sk_sp.152 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.153", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { i8* }
%"class.ui::NativeTheme" = type opaque
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.std::__1::vector.178"* }
%"class.std::__1::vector.178" = type opaque
%"class.views::ContextMenuController" = type opaque
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.views::ViewTargeterDelegate" = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.views::ViewAccessibility"* }
%"class.base::ObserverList.194" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.195", i64, i32, [4 x i8] }>
%"class.base::LinkedList.195" = type { %"class.base::LinkNode.196" }
%"class.base::LinkNode.196" = type { %"class.base::internal::LinkNodeBase" }
%"class.absl::optional.157" = type { %"class.absl::optional_internal::optional_data.158" }
%"class.absl::optional_internal::optional_data.158" = type { %"class.absl::optional_internal::optional_data_base.159" }
%"class.absl::optional_internal::optional_data_base.159" = type { %"class.absl::optional_internal::optional_data_dtor_base.160" }
%"class.absl::optional_internal::optional_data_dtor_base.160" = type { i8, %union.anon.161 }
%union.anon.161 = type { i8 }
%"class.absl::optional.279" = type { %"class.absl::optional_internal::optional_data.280" }
%"class.absl::optional_internal::optional_data.280" = type { %"class.absl::optional_internal::optional_data_base.281" }
%"class.absl::optional_internal::optional_data_base.281" = type { %"class.absl::optional_internal::optional_data_dtor_base.282" }
%"class.absl::optional_internal::optional_data_dtor_base.282" = type { i8, %union.anon.283 }
%union.anon.283 = type { %"class.ui::AXTreeID" }
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional.284" }
%"class.absl::optional.284" = type { %"class.absl::optional_internal::optional_data.285" }
%"class.absl::optional_internal::optional_data.285" = type { %"class.absl::optional_internal::optional_data_base.286" }
%"class.absl::optional_internal::optional_data_base.286" = type { %"class.absl::optional_internal::optional_data_dtor_base.287" }
%"class.absl::optional_internal::optional_data_dtor_base.287" = type { i8, %union.anon.288 }
%union.anon.288 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::unique_ptr.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.views::ViewsAXTreeManager"* }
%"class.views::ViewsAXTreeManager" = type opaque
%"class.std::__1::vector.198" = type { %"class.std::__1::__vector_base.199" }
%"class.std::__1::__vector_base.199" = type { %"class.std::__1::unique_ptr.200"*, %"class.std::__1::unique_ptr.200"*, %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.views::AXVirtualView"* }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::unique_ptr.200"* }
%"class.ui::AXUniqueId" = type <{ i32 (...)**, i32, [4 x i8] }>
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.211", %"class.std::__1::vector.218", %"class.std::__1::vector.226", %"class.std::__1::vector.234", %"class.std::__1::vector.242", %"class.std::__1::vector.250", %"class.std::__1::vector.258", %"class.std::__1::vector.266", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.211" = type { %"class.std::__1::__vector_base.212" }
%"class.std::__1::__vector_base.212" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.213" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.218" = type { %"class.std::__1::__vector_base.219" }
%"class.std::__1::__vector_base.219" = type { %"struct.std::__1::pair.220"*, %"struct.std::__1::pair.220"*, %"class.std::__1::__compressed_pair.221" }
%"struct.std::__1::pair.220" = type opaque
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"struct.std::__1::pair.220"* }
%"class.std::__1::vector.226" = type { %"class.std::__1::__vector_base.227" }
%"class.std::__1::__vector_base.227" = type { %"struct.std::__1::pair.228"*, %"struct.std::__1::pair.228"*, %"class.std::__1::__compressed_pair.229" }
%"struct.std::__1::pair.228" = type opaque
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::pair.228"* }
%"class.std::__1::vector.234" = type { %"class.std::__1::__vector_base.235" }
%"class.std::__1::__vector_base.235" = type { %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"*, %"class.std::__1::__compressed_pair.237" }
%"struct.std::__1::pair.236" = type opaque
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::pair.236"* }
%"class.std::__1::vector.242" = type { %"class.std::__1::__vector_base.243" }
%"class.std::__1::__vector_base.243" = type { %"struct.std::__1::pair.244"*, %"struct.std::__1::pair.244"*, %"class.std::__1::__compressed_pair.245" }
%"struct.std::__1::pair.244" = type opaque
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"struct.std::__1::pair.244"* }
%"class.std::__1::vector.250" = type { %"class.std::__1::__vector_base.251" }
%"class.std::__1::__vector_base.251" = type { %"struct.std::__1::pair.252"*, %"struct.std::__1::pair.252"*, %"class.std::__1::__compressed_pair.253" }
%"struct.std::__1::pair.252" = type opaque
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.std::__1::pair.252"* }
%"class.std::__1::vector.258" = type { %"class.std::__1::__vector_base.259" }
%"class.std::__1::__vector_base.259" = type { %"struct.std::__1::pair.260"*, %"struct.std::__1::pair.260"*, %"class.std::__1::__compressed_pair.261" }
%"struct.std::__1::pair.260" = type opaque
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::pair.260"* }
%"class.std::__1::vector.266" = type { %"class.std::__1::__vector_base.267" }
%"class.std::__1::__vector_base.267" = type { i32*, i32*, %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr.273" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.base::RepeatingCallback.295" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.296" = type { %"class.std::__1::__vector_base.297" }
%"class.std::__1::__vector_base.297" = type { %"class.views::AXAuraObjWrapper"**, %"class.views::AXAuraObjWrapper"**, %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.views::AXAuraObjWrapper"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.ui::AXActionData" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.305 }
%union.anon.305 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

@_ZTVN5views20AXVirtualViewWrapperE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::AXVirtualViewWrapper"*)* @_ZN5views20AXVirtualViewWrapperD2Ev to i8*), i8* bitcast (void (%"class.views::AXVirtualViewWrapper"*)* @_ZN5views20AXVirtualViewWrapperD0Ev to i8*), i8* bitcast (%"class.views::AXAuraObjWrapper"* (%"class.views::AXVirtualViewWrapper"*)* @_ZN5views20AXVirtualViewWrapper9GetParentEv to i8*), i8* bitcast (void (%"class.views::AXVirtualViewWrapper"*, %"class.std::__1::vector.296"*)* @_ZN5views20AXVirtualViewWrapper11GetChildrenEPNSt3__16vectorIPNS_16AXAuraObjWrapperENS1_9allocatorIS4_EEEE to i8*), i8* bitcast (void (%"class.views::AXVirtualViewWrapper"*, %"struct.ui::AXNodeData"*)* @_ZN5views20AXVirtualViewWrapper9SerializeEPN2ui10AXNodeDataE to i8*), i8* bitcast (i32 (%"class.views::AXVirtualViewWrapper"*)* @_ZNK5views20AXVirtualViewWrapper11GetUniqueIdEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.views::AXVirtualViewWrapper"*)* @_ZNK5views20AXVirtualViewWrapper8ToStringEv to i8*), i8* bitcast (i1 (%"class.views::AXVirtualViewWrapper"*, %"struct.ui::AXActionData"*)* @_ZN5views20AXVirtualViewWrapper22HandleAccessibleActionERKN2ui12AXActionDataE to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"Virtual view child of \00", align 1

@_ZN5views20AXVirtualViewWrapperC1EPNS_14AXAuraObjCacheEPNS_13AXVirtualViewE = hidden unnamed_addr alias void (%"class.views::AXVirtualViewWrapper"*, %"class.views::AXAuraObjCache"*, %"class.views::AXVirtualView"*), void (%"class.views::AXVirtualViewWrapper"*, %"class.views::AXAuraObjCache"*, %"class.views::AXVirtualView"*)* @_ZN5views20AXVirtualViewWrapperC2EPNS_14AXAuraObjCacheEPNS_13AXVirtualViewE
@_ZN5views20AXVirtualViewWrapperD1Ev = hidden unnamed_addr alias void (%"class.views::AXVirtualViewWrapper"*), void (%"class.views::AXVirtualViewWrapper"*)* @_ZN5views20AXVirtualViewWrapperD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views20AXVirtualViewWrapperC2EPNS_14AXAuraObjCacheEPNS_13AXVirtualViewE(%"class.views::AXVirtualViewWrapper"*, %"class.views::AXAuraObjCache"*, %"class.views::AXVirtualView"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.views::AXVirtualViewWrapper", %"class.views::AXVirtualViewWrapper"* %0, i64 0, i32 0
  tail call void @_ZN5views16AXAuraObjWrapperC2EPNS_14AXAuraObjCacheE(%"class.views::AXAuraObjWrapper"* %4, %"class.views::AXAuraObjCache"* %1) #10
  %5 = getelementptr inbounds %"class.views::AXVirtualViewWrapper", %"class.views::AXVirtualViewWrapper"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5views20AXVirtualViewWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.views::AXVirtualViewWrapper", %"class.views::AXVirtualViewWrapper"* %0, i64 0, i32 1
  store %"class.views::AXVirtualView"* %2, %"class.views::AXVirtualView"** %6, align 8
  %7 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %2, i64 0, i32 5
  store %"class.views::AXAuraObjCache"* %1, %"class.views::AXAuraObjCache"** %7, align 8
  ret void
}

declare void @_ZN5views16AXAuraObjWrapperC2EPNS_14AXAuraObjCacheE(%"class.views::AXAuraObjWrapper"*, %"class.views::AXAuraObjCache"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5views20AXVirtualViewWrapperD2Ev(%"class.views::AXVirtualViewWrapper"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views20AXVirtualViewWrapperD0Ev(%"class.views::AXVirtualViewWrapper"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.views::AXVirtualViewWrapper"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::AXAuraObjWrapper"* @_ZN5views20AXVirtualViewWrapper9GetParentEv(%"class.views::AXVirtualViewWrapper"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::AXVirtualViewWrapper", %"class.views::AXVirtualViewWrapper"* %0, i64 0, i32 1
  %3 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %2, align 8
  %4 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %3, i64 0, i32 3
  %5 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %4, align 8
  %6 = icmp eq %"class.views::AXVirtualView"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.views::AXVirtualViewWrapper", %"class.views::AXVirtualViewWrapper"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.views::AXAuraObjCache"*, %"class.views::AXAuraObjCache"** %8, align 8
  %10 = tail call %"class.views::AXVirtualViewWrapper"* @_ZN5views13AXVirtualView18GetOrCreateWrapperEPNS_14AXAuraObjCacheE(%"class.views::AXVirtualView"* nonnull %5, %"class.views::AXAuraObjCache"* %9) #10
  %11 = getelementptr inbounds %"class.views::AXVirtualViewWrapper", %"class.views::AXVirtualViewWrapper"* %10, i64 0, i32 0
  br label %21

12:                                               ; preds = %1
  %13 = tail call %"class.views::View"* @_ZNK5views13AXVirtualView12GetOwnerViewEv(%"class.views::AXVirtualView"* %3) #10
  %14 = icmp eq %"class.views::View"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.views::AXVirtualViewWrapper", %"class.views::AXVirtualViewWrapper"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.views::AXAuraObjCache"*, %"class.views::AXAuraObjCache"** %16, align 8
  %18 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %2, align 8
  %19 = tail call %"class.views::View"* @_ZNK5views13AXVirtualView12GetOwnerViewEv(%"class.views::AXVirtualView"* %18) #10
  %20 = tail call %"class.views::AXAuraObjWrapper"* @_ZN5views14AXAuraObjCache11GetOrCreateEPNS_4ViewE(%"class.views::AXAuraObjCache"* %17, %"class.views::View"* %19) #10
  br label %21

21:                                               ; preds = %12, %15, %7
  %22 = phi %"class.views::AXAuraObjWrapper"* [ %11, %7 ], [ %20, %15 ], [ null, %12 ]
  ret %"class.views::AXAuraObjWrapper"* %22
}

declare %"class.views::AXVirtualViewWrapper"* @_ZN5views13AXVirtualView18GetOrCreateWrapperEPNS_14AXAuraObjCacheE(%"class.views::AXVirtualView"*, %"class.views::AXAuraObjCache"*) local_unnamed_addr #1

declare %"class.views::View"* @_ZNK5views13AXVirtualView12GetOwnerViewEv(%"class.views::AXVirtualView"*) local_unnamed_addr #1

declare %"class.views::AXAuraObjWrapper"* @_ZN5views14AXAuraObjCache11GetOrCreateEPNS_4ViewE(%"class.views::AXAuraObjCache"*, %"class.views::View"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views20AXVirtualViewWrapper11GetChildrenEPNSt3__16vectorIPNS_16AXAuraObjWrapperENS1_9allocatorIS4_EEEE(%"class.views::AXVirtualViewWrapper"* nocapture readonly, %"class.std::__1::vector.296"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::AXVirtualViewWrapper", %"class.views::AXVirtualViewWrapper"* %0, i64 0, i32 1
  %4 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %3, align 8
  %5 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %4, i64 0, i32 4, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.200"*, %"class.std::__1::unique_ptr.200"** %5, align 8
  %7 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %4, i64 0, i32 4, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.200"*, %"class.std::__1::unique_ptr.200"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr.200"* %6, %8
  br i1 %9, label %18, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.views::AXVirtualViewWrapper", %"class.views::AXVirtualViewWrapper"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.296", %"class.std::__1::vector.296"* %1, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.296", %"class.std::__1::vector.296"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.views::AXAuraObjWrapper"*** %12 to i64*
  %15 = bitcast %"class.std::__1::vector.296"* %1 to i64*
  %16 = bitcast %"class.views::AXAuraObjWrapper"*** %13 to i64*
  %17 = getelementptr inbounds %"class.std::__1::vector.296", %"class.std::__1::vector.296"* %1, i64 0, i32 0, i32 0
  br label %19

18:                                               ; preds = %87, %2
  ret void

19:                                               ; preds = %10, %87
  %20 = phi %"class.std::__1::unique_ptr.200"* [ %6, %10 ], [ %88, %87 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.200"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %21, align 8
  %23 = load %"class.views::AXAuraObjCache"*, %"class.views::AXAuraObjCache"** %11, align 8
  %24 = tail call %"class.views::AXVirtualViewWrapper"* @_ZN5views13AXVirtualView18GetOrCreateWrapperEPNS_14AXAuraObjCacheE(%"class.views::AXVirtualView"* %22, %"class.views::AXAuraObjCache"* %23) #10
  %25 = ptrtoint %"class.views::AXVirtualViewWrapper"* %24 to i64
  %26 = load %"class.views::AXAuraObjWrapper"**, %"class.views::AXAuraObjWrapper"*** %12, align 8
  %27 = load %"class.views::AXAuraObjWrapper"**, %"class.views::AXAuraObjWrapper"*** %13, align 8
  %28 = icmp ult %"class.views::AXAuraObjWrapper"** %26, %27
  %29 = ptrtoint %"class.views::AXAuraObjWrapper"** %27 to i64
  br i1 %28, label %30, label %34

30:                                               ; preds = %19
  %31 = bitcast %"class.views::AXAuraObjWrapper"** %26 to i64*
  store i64 %25, i64* %31, align 8
  %32 = getelementptr inbounds %"class.views::AXAuraObjWrapper"*, %"class.views::AXAuraObjWrapper"** %26, i64 1
  %33 = ptrtoint %"class.views::AXAuraObjWrapper"** %32 to i64
  store i64 %33, i64* %14, align 8
  br label %87

34:                                               ; preds = %19
  %35 = ptrtoint %"class.views::AXAuraObjWrapper"** %26 to i64
  %36 = load i64, i64* %15, align 8
  %37 = sub i64 %35, %36
  %38 = ashr exact i64 %37, 3
  %39 = add nsw i64 %38, 1
  %40 = icmp ugt i64 %39, 2305843009213693951
  br i1 %40, label %41, label %43

41:                                               ; preds = %34
  %42 = bitcast %"class.std::__1::vector.296"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #12
  unreachable

43:                                               ; preds = %34
  %44 = sub i64 %29, %36
  %45 = ashr exact i64 %44, 3
  %46 = icmp ult i64 %45, 1152921504606846975
  br i1 %46, label %47, label %55

47:                                               ; preds = %43
  %48 = ashr exact i64 %44, 2
  %49 = icmp ult i64 %48, %39
  %50 = select i1 %49, i64 %39, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %47
  %53 = icmp ugt i64 %50, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %52
  tail call void @abort() #12
  unreachable

55:                                               ; preds = %52, %43
  %56 = phi i64 [ %50, %52 ], [ 2305843009213693951, %43 ]
  %57 = shl i64 %56, 3
  %58 = tail call i8* @_Znwm(i64 %57) #11
  %59 = bitcast i8* %58 to %"class.views::AXAuraObjWrapper"**
  br label %60

60:                                               ; preds = %55, %47
  %61 = phi i64 [ %56, %55 ], [ 0, %47 ]
  %62 = phi %"class.views::AXAuraObjWrapper"** [ %59, %55 ], [ null, %47 ]
  %63 = getelementptr inbounds %"class.views::AXAuraObjWrapper"*, %"class.views::AXAuraObjWrapper"** %62, i64 %38
  %64 = getelementptr inbounds %"class.views::AXAuraObjWrapper"*, %"class.views::AXAuraObjWrapper"** %62, i64 %61
  %65 = ptrtoint %"class.views::AXAuraObjWrapper"** %64 to i64
  %66 = bitcast %"class.views::AXAuraObjWrapper"** %63 to i64*
  store i64 %25, i64* %66, align 8
  %67 = getelementptr inbounds %"class.views::AXAuraObjWrapper"*, %"class.views::AXAuraObjWrapper"** %63, i64 1
  %68 = ptrtoint %"class.views::AXAuraObjWrapper"** %67 to i64
  %69 = load %"class.views::AXAuraObjWrapper"**, %"class.views::AXAuraObjWrapper"*** %17, align 8
  %70 = load i64, i64* %14, align 8
  %71 = ptrtoint %"class.views::AXAuraObjWrapper"** %69 to i64
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 3
  %74 = sub nsw i64 0, %73
  %75 = getelementptr inbounds %"class.views::AXAuraObjWrapper"*, %"class.views::AXAuraObjWrapper"** %63, i64 %74
  %76 = ptrtoint %"class.views::AXAuraObjWrapper"** %75 to i64
  %77 = icmp sgt i64 %72, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %60
  %79 = bitcast %"class.views::AXAuraObjWrapper"** %75 to i8*
  %80 = bitcast %"class.views::AXAuraObjWrapper"** %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 %72, i1 false) #10
  %81 = load %"class.views::AXAuraObjWrapper"**, %"class.views::AXAuraObjWrapper"*** %17, align 8
  br label %82

82:                                               ; preds = %78, %60
  %83 = phi %"class.views::AXAuraObjWrapper"** [ %69, %60 ], [ %81, %78 ]
  store i64 %76, i64* %15, align 8
  store i64 %68, i64* %14, align 8
  store i64 %65, i64* %16, align 8
  %84 = icmp eq %"class.views::AXAuraObjWrapper"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = bitcast %"class.views::AXAuraObjWrapper"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #11
  br label %87

87:                                               ; preds = %30, %82, %85
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.200"* %20, i64 1
  %89 = icmp eq %"class.std::__1::unique_ptr.200"* %88, %8
  br i1 %89, label %18, label %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views20AXVirtualViewWrapper9SerializeEPN2ui10AXNodeDataE(%"class.views::AXVirtualViewWrapper"* nocapture readonly, %"struct.ui::AXNodeData"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::AXNodeData", align 8
  %4 = alloca %"class.gfx::Point", align 4
  %5 = getelementptr inbounds %"class.views::AXVirtualViewWrapper", %"class.views::AXVirtualViewWrapper"* %0, i64 0, i32 1
  %6 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %5, align 8
  %7 = bitcast %"class.views::AXVirtualView"* %6 to %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)***
  %8 = load %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)**, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*** %7, align 8
  %9 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)** %8, i64 2
  %10 = load %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)** %9, align 8
  %11 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %10(%"class.views::AXVirtualView"* %6) #10
  call void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"* nonnull %3, %"struct.ui::AXNodeData"* dereferenceable(264) %11) #10
  %12 = call dereferenceable(264) %"struct.ui::AXNodeData"* @_ZN2ui10AXNodeDataaSES0_(%"struct.ui::AXNodeData"* %1, %"struct.ui::AXNodeData"* nonnull %3) #10
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %3) #10
  %13 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %5, align 8
  %14 = call %"class.views::View"* @_ZNK5views13AXVirtualView12GetOwnerViewEv(%"class.views::AXVirtualView"* %13) #10
  %15 = icmp eq %"class.views::View"* %14, null
  br i1 %15, label %32, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.views::View"* %14 to %"class.views::Widget"* (%"class.views::View"*)***
  %18 = load %"class.views::Widget"* (%"class.views::View"*)**, %"class.views::Widget"* (%"class.views::View"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %18, i64 13
  %20 = load %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %19, align 8
  %21 = call %"class.views::Widget"* %20(%"class.views::View"* nonnull %14) #10
  %22 = icmp eq %"class.views::Widget"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.gfx::Point"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %4, i64 0, i32 0
  %26 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %4, i64 0, i32 1
  store i32 0, i32* %25, align 4
  store i32 0, i32* %26, align 4
  call void @_ZN5views4View20ConvertPointToScreenEPKS0_PN3gfx5PointE(%"class.views::View"* nonnull %14, %"class.gfx::Point"* nonnull %4) #10
  %27 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %1, i64 0, i32 13, i32 2
  %28 = load i32, i32* %25, align 4
  %29 = sitofp i32 %28 to float
  %30 = load i32, i32* %26, align 4
  %31 = sitofp i32 %30 to float
  call void @_ZN3gfx5RectF6OffsetEff(%"class.gfx::RectF"* %27, float %29, float %31) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %32

32:                                               ; preds = %16, %2, %23
  ret void
}

declare void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"* dereferenceable(264)) unnamed_addr #1

declare dereferenceable(264) %"struct.ui::AXNodeData"* @_ZN2ui10AXNodeDataaSES0_(%"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"*) unnamed_addr #5

declare void @_ZN5views4View20ConvertPointToScreenEPKS0_PN3gfx5PointE(%"class.views::View"*, %"class.gfx::Point"*) local_unnamed_addr #1

declare void @_ZN3gfx5RectF6OffsetEff(%"class.gfx::RectF"*, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5views20AXVirtualViewWrapper11GetUniqueIdEv(%"class.views::AXVirtualViewWrapper"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::AXVirtualViewWrapper", %"class.views::AXVirtualViewWrapper"* %0, i64 0, i32 1
  %3 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %2, align 8
  %4 = bitcast %"class.views::AXVirtualView"* %3 to %"class.ui::AXUniqueId"* (%"class.views::AXVirtualView"*)***
  %5 = load %"class.ui::AXUniqueId"* (%"class.views::AXVirtualView"*)**, %"class.ui::AXUniqueId"* (%"class.views::AXVirtualView"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.ui::AXUniqueId"* (%"class.views::AXVirtualView"*)*, %"class.ui::AXUniqueId"* (%"class.views::AXVirtualView"*)** %5, i64 53
  %7 = load %"class.ui::AXUniqueId"* (%"class.views::AXVirtualView"*)*, %"class.ui::AXUniqueId"* (%"class.views::AXVirtualView"*)** %6, align 8
  %8 = tail call dereferenceable(16) %"class.ui::AXUniqueId"* %7(%"class.views::AXVirtualView"* %3) #10
  %9 = getelementptr inbounds %"class.ui::AXUniqueId", %"class.ui::AXUniqueId"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views20AXVirtualViewWrapper22HandleAccessibleActionERKN2ui12AXActionDataE(%"class.views::AXVirtualViewWrapper"* nocapture readonly, %"struct.ui::AXActionData"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::AXVirtualViewWrapper", %"class.views::AXVirtualViewWrapper"* %0, i64 0, i32 1
  %4 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %3, align 8
  %5 = bitcast %"class.views::AXVirtualView"* %4 to i1 (%"class.views::AXVirtualView"*, %"struct.ui::AXActionData"*)***
  %6 = load i1 (%"class.views::AXVirtualView"*, %"struct.ui::AXActionData"*)**, i1 (%"class.views::AXVirtualView"*, %"struct.ui::AXActionData"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.views::AXVirtualView"*, %"struct.ui::AXActionData"*)*, i1 (%"class.views::AXVirtualView"*, %"struct.ui::AXActionData"*)** %6, i64 98
  %8 = load i1 (%"class.views::AXVirtualView"*, %"struct.ui::AXActionData"*)*, i1 (%"class.views::AXVirtualView"*, %"struct.ui::AXActionData"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.views::AXVirtualView"* %4, %"struct.ui::AXActionData"* %1) #10
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views20AXVirtualViewWrapper8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.views::AXVirtualViewWrapper"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  store i8 22, i8* %6, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i64 22, i1 false) #10
  %7 = getelementptr inbounds i8, i8* %4, i64 22
  store i8 0, i8* %7, align 2
  %8 = getelementptr inbounds %"class.views::AXVirtualViewWrapper", %"class.views::AXVirtualViewWrapper"* %1, i64 0, i32 1
  %9 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %8, align 8
  %10 = tail call %"class.views::View"* @_ZNK5views13AXVirtualView12GetOwnerViewEv(%"class.views::AXVirtualView"* %9) #10
  %11 = bitcast %"class.views::View"* %10 to i8* (%"class.views::View"*)***
  %12 = load i8* (%"class.views::View"*)**, i8* (%"class.views::View"*)*** %11, align 8
  %13 = getelementptr inbounds i8* (%"class.views::View"*)*, i8* (%"class.views::View"*)** %12, i64 10
  %14 = load i8* (%"class.views::View"*)*, i8* (%"class.views::View"*)** %13, align 8
  %15 = tail call i8* %14(%"class.views::View"* %10) #10
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #10, !alias.scope !2
  %20 = tail call i64 @strlen(i8* %15) #10, !noalias !2
  %21 = add i64 %20, 22
  %22 = icmp ugt i64 %21, -17
  br i1 %22, label %23, label %25

23:                                               ; preds = %2
  %24 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #12
  unreachable

25:                                               ; preds = %2
  %26 = icmp ult i64 %21, 23
  br i1 %26, label %27, label %30

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 22, i8* %29, align 1, !alias.scope !2
  br label %35

30:                                               ; preds = %25
  %31 = add nuw i64 %20, 38
  %32 = and i64 %31, -16
  %33 = tail call i8* @_Znwm(i64 %32) #11
  store i8* %33, i8** %16, align 8, !alias.scope !2
  %34 = or i64 %32, -9223372036854775808
  store i64 %34, i64* %18, align 8, !alias.scope !2
  store i64 22, i64* %17, align 8, !alias.scope !2
  br label %35

35:                                               ; preds = %27, %30
  %36 = phi i8* [ %19, %27 ], [ %33, %30 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* nonnull align 8 %4, i64 22, i1 false) #10
  %37 = getelementptr inbounds i8, i8* %36, i64 22
  store i8 0, i8* %37, align 1
  %38 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %15, i64 %20) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
