; ModuleID = '../../third_party/skia/src/pathops/SkOpCoincidence.cpp'
source_filename = "../../third_party/skia/src/pathops/SkOpCoincidence.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkIntersections = type <{ [13 x %struct.SkDPoint], [2 x %struct.SkDPoint], [2 x [13 x double]], [2 x i16], [2 x i8], i8, i8, i8, i8, [6 x i8] }>
%struct.SkDPoint = type { double, double }
%struct.SkPoint = type { float, float }
%struct.SkDLine = type { [2 x %struct.SkDPoint] }
%struct.SkDQuad = type { [3 x %struct.SkDPoint] }
%class.SkCoincidentSpans = type { %class.SkCoincidentSpans*, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT* }
%class.SkOpPtT = type <{ double, %struct.SkPoint, %class.SkOpSpanBase*, %class.SkOpPtT*, i8, i8, i8, [5 x i8] }>
%class.SkOpSpanBase = type <{ %class.SkOpPtT, %class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpAngle*, %class.SkOpSpan*, i32, i8, i8, [2 x i8] }>
%class.SkOpSegment = type <{ %class.SkOpSpan, %class.SkOpSpanBase, %class.SkOpContour*, %class.SkOpSegment*, %class.SkOpSegment*, %struct.SkPoint*, %struct.SkPathOpsBounds, float, i32, i32, i32, i8, [7 x i8] }>
%class.SkOpSpan = type <{ %class.SkOpSpanBase.base, [2 x i8], %class.SkOpSpan*, %class.SkOpAngle*, %class.SkOpSpanBase*, i32, i32, i32, i32, i32, i8, i8, [2 x i8] }>
%class.SkOpSpanBase.base = type <{ %class.SkOpPtT, %class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpAngle*, %class.SkOpSpan*, i32, i8, i8 }>
%class.SkOpContour = type opaque
%struct.SkPathOpsBounds = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%class.SkOpAngle = type <{ %struct.SkDCurve, %class.SkDCurveSweep, double, %class.SkLineParameters, %class.SkOpAngle*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, i32, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%struct.SkDCurve = type { %union.anon }
%union.anon = type { %struct.SkDCubic }
%struct.SkDCubic = type { [4 x %struct.SkDPoint] }
%class.SkDCurveSweep = type <{ %struct.SkDCurve, [2 x %struct.SkDVector], i8, i8, [6 x i8] }>
%struct.SkDVector = type { double, double }
%class.SkLineParameters = type { double, double, double }
%class.SkOpCoincidence = type <{ %class.SkCoincidentSpans*, %class.SkCoincidentSpans*, %class.SkOpGlobalState*, i8, i8, i8, i8, i8, [3 x i8] }>
%class.SkOpGlobalState = type <{ %class.SkArenaAlloc*, %class.SkOpCoincidence*, %class.SkOpContourHead*, i32, i8, i8, i8, i8 }>
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.SkOpContourHead = type opaque
%class.SkTDArray = type { %class.SkCoincidentSpans**, i32, i32 }
%struct.SkDConic = type { %struct.SkDQuad, float }

$_ZNK8SkDPoint18approximatelyEqualERKS_ = comdat any

@__const._ZN15SkOpCoincidence16addEndMovedSpansEPK8SkOpSpanPK12SkOpSpanBase.i = private unnamed_addr constant %class.SkIntersections <{ [13 x %struct.SkDPoint] [%struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, %struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, %struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, %struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, %struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, %struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, %struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, %struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, %struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, %struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, %struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, %struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, %struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }], [2 x %struct.SkDPoint] [%struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, %struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }], [2 x [13 x double]] [[13 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF], [13 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF]], [2 x i16] [i16 -21846, i16 -21846], [2 x i8] c"\AA\AA", i8 -86, i8 -86, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, align 8
@_ZL17CurveIntersectRay = internal unnamed_addr constant [5 x void (%struct.SkPoint*, float, %struct.SkDLine*, %class.SkIntersections*)*] [void (%struct.SkPoint*, float, %struct.SkDLine*, %class.SkIntersections*)* null, void (%struct.SkPoint*, float, %struct.SkDLine*, %class.SkIntersections*)* @_ZL18line_intersect_rayPK7SkPointfRK7SkDLineP15SkIntersections, void (%struct.SkPoint*, float, %struct.SkDLine*, %class.SkIntersections*)* @_ZL18quad_intersect_rayPK7SkPointfRK7SkDLineP15SkIntersections, void (%struct.SkPoint*, float, %struct.SkDLine*, %class.SkIntersections*)* @_ZL19conic_intersect_rayPK7SkPointfRK7SkDLineP15SkIntersections, void (%struct.SkPoint*, float, %struct.SkDLine*, %class.SkIntersections*)* @_ZL19cubic_intersect_rayPK7SkPointfRK7SkDLineP15SkIntersections], align 16
@_ZL14CurveDSlopeAtT = internal unnamed_addr constant [5 x { double, double } (%struct.SkPoint*, float, double)*] [{ double, double } (%struct.SkPoint*, float, double)* null, { double, double } (%struct.SkPoint*, float, double)* @_ZL15dline_dxdy_at_tPK7SkPointfd, { double, double } (%struct.SkPoint*, float, double)* @_ZL15dquad_dxdy_at_tPK7SkPointfd, { double, double } (%struct.SkPoint*, float, double)* @_ZL16dconic_dxdy_at_tPK7SkPointfd, { double, double } (%struct.SkPoint*, float, double)* @_ZL16dcubic_dxdy_at_tPK7SkPointfd], align 16
@__const._ZL19conic_intersect_rayPK7SkPointfRK7SkDLineP15SkIntersections.conic = private unnamed_addr constant { %struct.SkDQuad, float, [4 x i8] } { %struct.SkDQuad { [3 x %struct.SkDPoint] [%struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, %struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, %struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }] }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }, align 8
@.str = private unnamed_addr constant [51 x i8] c"../../third_party/skia/include/private/SkTDArray.h\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"SkTFitsIn<int>(count)\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"SkTFitsIn<int>(reserve)\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK17SkCoincidentSpans9collapsedEPK7SkOpPtT(%class.SkCoincidentSpans* nocapture readonly, %class.SkOpPtT*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 1
  %4 = load %class.SkOpPtT*, %class.SkOpPtT** %3, align 8
  %5 = icmp eq %class.SkOpPtT* %4, %1
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 2
  %8 = load %class.SkOpPtT*, %class.SkOpPtT** %7, align 8
  %9 = tail call zeroext i1 @_ZNK7SkOpPtT8containsEPKS_(%class.SkOpPtT* %8, %class.SkOpPtT* %1) #10
  br i1 %9, label %32, label %10

10:                                               ; preds = %6, %2
  %11 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 2
  %12 = load %class.SkOpPtT*, %class.SkOpPtT** %11, align 8
  %13 = icmp eq %class.SkOpPtT* %12, %1
  br i1 %13, label %14, label %17

14:                                               ; preds = %10
  %15 = load %class.SkOpPtT*, %class.SkOpPtT** %3, align 8
  %16 = tail call zeroext i1 @_ZNK7SkOpPtT8containsEPKS_(%class.SkOpPtT* %15, %class.SkOpPtT* %1) #10
  br i1 %16, label %32, label %17

17:                                               ; preds = %14, %10
  %18 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 3
  %19 = load %class.SkOpPtT*, %class.SkOpPtT** %18, align 8
  %20 = icmp eq %class.SkOpPtT* %19, %1
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 4
  %23 = load %class.SkOpPtT*, %class.SkOpPtT** %22, align 8
  %24 = tail call zeroext i1 @_ZNK7SkOpPtT8containsEPKS_(%class.SkOpPtT* %23, %class.SkOpPtT* %1) #10
  br i1 %24, label %32, label %25

25:                                               ; preds = %21, %17
  %26 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 4
  %27 = load %class.SkOpPtT*, %class.SkOpPtT** %26, align 8
  %28 = icmp eq %class.SkOpPtT* %27, %1
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = load %class.SkOpPtT*, %class.SkOpPtT** %18, align 8
  %31 = tail call zeroext i1 @_ZNK7SkOpPtT8containsEPKS_(%class.SkOpPtT* %30, %class.SkOpPtT* %1) #10
  br label %32

32:                                               ; preds = %25, %29, %21, %14, %6
  %33 = phi i1 [ true, %21 ], [ true, %14 ], [ true, %6 ], [ false, %25 ], [ %31, %29 ]
  ret i1 %33
}

declare zeroext i1 @_ZNK7SkOpPtT8containsEPKS_(%class.SkOpPtT*, %class.SkOpPtT*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkOpPtT* @_ZNK17SkCoincidentSpans10coinPtTEndEv(%class.SkCoincidentSpans* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 2
  %3 = load %class.SkOpPtT*, %class.SkOpPtT** %2, align 8
  ret %class.SkOpPtT* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkOpPtT* @_ZNK17SkCoincidentSpans12coinPtTStartEv(%class.SkCoincidentSpans* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 1
  %3 = load %class.SkOpPtT*, %class.SkOpPtT** %2, align 8
  ret %class.SkOpPtT* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkCoincidentSpans13correctOneEndEMS_KFPK7SkOpPtTvEMS_FvS2_E(%class.SkCoincidentSpans*, i64, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = bitcast %class.SkCoincidentSpans* %0 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 %2
  %8 = bitcast i8* %7 to %class.SkCoincidentSpans*
  %9 = and i64 %1, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %5
  %12 = bitcast i8* %7 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = add i64 %1, -1
  %15 = getelementptr i8, i8* %13, i64 %14
  %16 = bitcast i8* %15 to %class.SkOpPtT* (%class.SkCoincidentSpans*)**
  %17 = load %class.SkOpPtT* (%class.SkCoincidentSpans*)*, %class.SkOpPtT* (%class.SkCoincidentSpans*)** %16, align 8
  br label %20

18:                                               ; preds = %5
  %19 = inttoptr i64 %1 to %class.SkOpPtT* (%class.SkCoincidentSpans*)*
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi %class.SkOpPtT* (%class.SkCoincidentSpans*)* [ %17, %11 ], [ %19, %18 ]
  %22 = tail call %class.SkOpPtT* %21(%class.SkCoincidentSpans* %8) #10
  %23 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %22, i64 0, i32 2
  %24 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %23, align 8
  %25 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %24, i64 0, i32 4
  %26 = load %class.SkOpSpan*, %class.SkOpSpan** %25, align 8
  %27 = icmp eq %class.SkOpSpan* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %26, i64 0, i32 4
  br label %35

30:                                               ; preds = %20
  %31 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %24, i64 1, i32 0, i32 2
  %32 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %31, align 8
  %33 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %32, i64 0, i32 4
  %34 = bitcast %class.SkOpSpan** %33 to %class.SkOpSpanBase**
  br label %35

35:                                               ; preds = %30, %28
  %36 = phi %class.SkOpSpanBase** [ %29, %28 ], [ %34, %30 ]
  %37 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %36, align 8
  %38 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %37, i64 0, i32 0
  %39 = icmp eq %class.SkOpPtT* %22, %38
  br i1 %39, label %56, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds i8, i8* %6, i64 %4
  %42 = bitcast i8* %41 to %class.SkCoincidentSpans*
  %43 = and i64 %3, 1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %40
  %46 = bitcast i8* %41 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = add i64 %3, -1
  %49 = getelementptr i8, i8* %47, i64 %48
  %50 = bitcast i8* %49 to void (%class.SkCoincidentSpans*, %class.SkOpPtT*)**
  %51 = load void (%class.SkCoincidentSpans*, %class.SkOpPtT*)*, void (%class.SkCoincidentSpans*, %class.SkOpPtT*)** %50, align 8
  br label %54

52:                                               ; preds = %40
  %53 = inttoptr i64 %3 to void (%class.SkCoincidentSpans*, %class.SkOpPtT*)*
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi void (%class.SkCoincidentSpans*, %class.SkOpPtT*)* [ %51, %45 ], [ %53, %52 ]
  tail call void %55(%class.SkCoincidentSpans* %42, %class.SkOpPtT* %38) #10
  br label %56

56:                                               ; preds = %35, %54
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN17SkCoincidentSpans11correctEndsEv(%class.SkCoincidentSpans* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 1
  %3 = load %class.SkOpPtT*, %class.SkOpPtT** %2, align 8
  %4 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %3, i64 0, i32 2
  %5 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %4, align 8
  %6 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %5, i64 0, i32 4
  %7 = load %class.SkOpSpan*, %class.SkOpSpan** %6, align 8
  %8 = icmp eq %class.SkOpSpan* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %7, i64 0, i32 4
  br label %16

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %5, i64 1, i32 0, i32 2
  %13 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %12, align 8
  %14 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %13, i64 0, i32 4
  %15 = bitcast %class.SkOpSpan** %14 to %class.SkOpSpanBase**
  br label %16

16:                                               ; preds = %11, %9
  %17 = phi %class.SkOpSpanBase** [ %10, %9 ], [ %15, %11 ]
  %18 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %17, align 8
  %19 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %18, i64 0, i32 0
  %20 = icmp eq %class.SkOpPtT* %3, %19
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  store %class.SkOpPtT* %19, %class.SkOpPtT** %2, align 8
  %22 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %18, i64 0, i32 0, i32 6
  store i8 1, i8* %22, align 2
  br label %23

23:                                               ; preds = %16, %21
  %24 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 2
  %25 = load %class.SkOpPtT*, %class.SkOpPtT** %24, align 8
  %26 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %25, i64 0, i32 2
  %27 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %26, align 8
  %28 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %27, i64 0, i32 4
  %29 = load %class.SkOpSpan*, %class.SkOpSpan** %28, align 8
  %30 = icmp eq %class.SkOpSpan* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %29, i64 0, i32 4
  br label %38

33:                                               ; preds = %23
  %34 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %27, i64 1, i32 0, i32 2
  %35 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %34, align 8
  %36 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %35, i64 0, i32 4
  %37 = bitcast %class.SkOpSpan** %36 to %class.SkOpSpanBase**
  br label %38

38:                                               ; preds = %33, %31
  %39 = phi %class.SkOpSpanBase** [ %32, %31 ], [ %37, %33 ]
  %40 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %39, align 8
  %41 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %40, i64 0, i32 0
  %42 = icmp eq %class.SkOpPtT* %25, %41
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  store %class.SkOpPtT* %41, %class.SkOpPtT** %24, align 8
  %44 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %40, i64 0, i32 0, i32 6
  store i8 1, i8* %44, align 2
  br label %45

45:                                               ; preds = %38, %43
  %46 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 3
  %47 = load %class.SkOpPtT*, %class.SkOpPtT** %46, align 8
  %48 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %47, i64 0, i32 2
  %49 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %48, align 8
  %50 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %49, i64 0, i32 4
  %51 = load %class.SkOpSpan*, %class.SkOpSpan** %50, align 8
  %52 = icmp eq %class.SkOpSpan* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %51, i64 0, i32 4
  br label %60

55:                                               ; preds = %45
  %56 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %49, i64 1, i32 0, i32 2
  %57 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %56, align 8
  %58 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %57, i64 0, i32 4
  %59 = bitcast %class.SkOpSpan** %58 to %class.SkOpSpanBase**
  br label %60

60:                                               ; preds = %55, %53
  %61 = phi %class.SkOpSpanBase** [ %54, %53 ], [ %59, %55 ]
  %62 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %61, align 8
  %63 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %62, i64 0, i32 0
  %64 = icmp eq %class.SkOpPtT* %47, %63
  br i1 %64, label %67, label %65

65:                                               ; preds = %60
  store %class.SkOpPtT* %63, %class.SkOpPtT** %46, align 8
  %66 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %62, i64 0, i32 0, i32 6
  store i8 1, i8* %66, align 2
  br label %67

67:                                               ; preds = %60, %65
  %68 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 4
  %69 = load %class.SkOpPtT*, %class.SkOpPtT** %68, align 8
  %70 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %69, i64 0, i32 2
  %71 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %70, align 8
  %72 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %71, i64 0, i32 4
  %73 = load %class.SkOpSpan*, %class.SkOpSpan** %72, align 8
  %74 = icmp eq %class.SkOpSpan* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %73, i64 0, i32 4
  br label %82

77:                                               ; preds = %67
  %78 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %71, i64 1, i32 0, i32 2
  %79 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %78, align 8
  %80 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %79, i64 0, i32 4
  %81 = bitcast %class.SkOpSpan** %80 to %class.SkOpSpanBase**
  br label %82

82:                                               ; preds = %77, %75
  %83 = phi %class.SkOpSpanBase** [ %76, %75 ], [ %81, %77 ]
  %84 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %83, align 8
  %85 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %84, i64 0, i32 0
  %86 = icmp eq %class.SkOpPtT* %69, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %82
  store %class.SkOpPtT* %85, %class.SkOpPtT** %68, align 8
  %88 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %84, i64 0, i32 0, i32 6
  store i8 1, i8* %88, align 2
  br label %89

89:                                               ; preds = %82, %87
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkOpPtT* @_ZNK17SkCoincidentSpans11oppPtTStartEv(%class.SkCoincidentSpans* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 3
  %3 = load %class.SkOpPtT*, %class.SkOpPtT** %2, align 8
  ret %class.SkOpPtT* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkOpPtT* @_ZNK17SkCoincidentSpans9oppPtTEndEv(%class.SkCoincidentSpans* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 4
  %3 = load %class.SkOpPtT*, %class.SkOpPtT** %2, align 8
  ret %class.SkOpPtT* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17SkCoincidentSpans6expandEv(%class.SkCoincidentSpans* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 1
  %3 = load %class.SkOpPtT*, %class.SkOpPtT** %2, align 8
  %4 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %3) #10
  %5 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 3
  %6 = load %class.SkOpPtT*, %class.SkOpPtT** %5, align 8
  %7 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %6) #10
  %8 = load %class.SkOpPtT*, %class.SkOpPtT** %2, align 8
  %9 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %8, i64 0, i32 2
  %10 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %9, align 8
  %11 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %10, i64 0, i32 4
  %12 = load %class.SkOpSpan*, %class.SkOpSpan** %11, align 8
  %13 = icmp eq %class.SkOpSpan* %12, null
  br i1 %13, label %39, label %14

14:                                               ; preds = %1, %29
  %15 = phi %class.SkOpSpan* [ %37, %29 ], [ %12, %1 ]
  %16 = phi %class.SkOpSpanBase* [ %35, %29 ], [ %10, %1 ]
  %17 = phi i8 [ 1, %29 ], [ 0, %1 ]
  %18 = bitcast %class.SkOpSpan* %15 to %class.SkOpSpanBase*
  %19 = tail call %class.SkOpPtT* @_ZNK12SkOpSpanBase8containsEPK11SkOpSegment(%class.SkOpSpanBase* nonnull %18, %class.SkOpSegment* %7) #10
  %20 = icmp eq %class.SkOpPtT* %19, null
  br i1 %20, label %39, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %15, i64 0, i32 0, i32 0, i32 0
  %23 = load double, double* %22, align 8
  %24 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %16, i64 0, i32 0, i32 0
  %25 = load double, double* %24, align 8
  %26 = fadd double %23, %25
  %27 = fmul double %26, 5.000000e-01
  %28 = tail call zeroext i1 @_ZNK11SkOpSegment7isCloseEdPKS_(%class.SkOpSegment* %4, double %27, %class.SkOpSegment* %7) #10
  br i1 %28, label %29, label %39

29:                                               ; preds = %21
  %30 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %15, i64 0, i32 0, i32 0
  store %class.SkOpPtT* %30, %class.SkOpPtT** %2, align 8
  %31 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %15, i64 0, i32 0, i32 0, i32 6
  store i8 1, i8* %31, align 2
  store %class.SkOpPtT* %19, %class.SkOpPtT** %5, align 8
  %32 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %19, i64 0, i32 6
  store i8 1, i8* %32, align 2
  %33 = load %class.SkOpPtT*, %class.SkOpPtT** %2, align 8
  %34 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %33, i64 0, i32 2
  %35 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %34, align 8
  %36 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %35, i64 0, i32 4
  %37 = load %class.SkOpSpan*, %class.SkOpSpan** %36, align 8
  %38 = icmp eq %class.SkOpSpan* %37, null
  br i1 %38, label %39, label %14

39:                                               ; preds = %21, %29, %14, %1
  %40 = phi i8 [ 0, %1 ], [ %17, %21 ], [ 1, %29 ], [ %17, %14 ]
  %41 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 2
  %42 = load %class.SkOpPtT*, %class.SkOpPtT** %41, align 8
  %43 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %42, i64 0, i32 2
  %44 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %43, align 8
  %45 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %44, i64 0, i32 0, i32 0
  %46 = load double, double* %45, align 8
  %47 = fcmp oeq double %46, 1.000000e+00
  br i1 %47, label %84, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 4
  %50 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %44, i64 1, i32 0, i32 2
  %51 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %50, align 8
  %52 = icmp eq %class.SkOpSpanBase* %51, null
  br i1 %52, label %84, label %57

53:                                               ; preds = %74
  %54 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %80, i64 1, i32 0, i32 2
  %55 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %54, align 8
  %56 = icmp eq %class.SkOpSpanBase* %55, null
  br i1 %56, label %84, label %57

57:                                               ; preds = %48, %53
  %58 = phi %class.SkOpSpanBase* [ %55, %53 ], [ %51, %48 ]
  %59 = phi i8 [ 1, %53 ], [ %40, %48 ]
  %60 = phi double* [ %81, %53 ], [ %45, %48 ]
  %61 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %58, i64 0, i32 0, i32 4
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %84

64:                                               ; preds = %57
  %65 = tail call %class.SkOpPtT* @_ZNK12SkOpSpanBase8containsEPK11SkOpSegment(%class.SkOpSpanBase* nonnull %58, %class.SkOpSegment* %7) #10
  %66 = icmp eq %class.SkOpPtT* %65, null
  br i1 %66, label %84, label %67

67:                                               ; preds = %64
  %68 = load double, double* %60, align 8
  %69 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %58, i64 0, i32 0, i32 0
  %70 = load double, double* %69, align 8
  %71 = fadd double %68, %70
  %72 = fmul double %71, 5.000000e-01
  %73 = tail call zeroext i1 @_ZNK11SkOpSegment7isCloseEdPKS_(%class.SkOpSegment* %4, double %72, %class.SkOpSegment* %7) #10
  br i1 %73, label %74, label %84

74:                                               ; preds = %67
  %75 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %58, i64 0, i32 0
  store %class.SkOpPtT* %75, %class.SkOpPtT** %41, align 8
  %76 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %58, i64 0, i32 0, i32 6
  store i8 1, i8* %76, align 2
  store %class.SkOpPtT* %65, %class.SkOpPtT** %49, align 8
  %77 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %65, i64 0, i32 6
  store i8 1, i8* %77, align 2
  %78 = load %class.SkOpPtT*, %class.SkOpPtT** %41, align 8
  %79 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %78, i64 0, i32 2
  %80 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %79, align 8
  %81 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %80, i64 0, i32 0, i32 0
  %82 = load double, double* %81, align 8
  %83 = fcmp oeq double %82, 1.000000e+00
  br i1 %83, label %84, label %53

84:                                               ; preds = %57, %53, %74, %64, %67, %48, %39
  %85 = phi i8 [ %40, %39 ], [ %40, %48 ], [ %59, %67 ], [ %59, %64 ], [ 1, %74 ], [ 1, %53 ], [ %59, %57 ]
  %86 = and i8 %85, 1
  %87 = icmp ne i8 %86, 0
  ret i1 %87
}

declare %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT*) local_unnamed_addr #1

declare %class.SkOpPtT* @_ZNK12SkOpSpanBase8containsEPK11SkOpSegment(%class.SkOpSpanBase*, %class.SkOpSegment*) local_unnamed_addr #1

declare zeroext i1 @_ZNK11SkOpSegment7isCloseEdPKS_(%class.SkOpSegment*, double, %class.SkOpSegment*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN17SkCoincidentSpans6extendEPK7SkOpPtTS2_S2_S2_(%class.SkCoincidentSpans* nocapture, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT*) local_unnamed_addr #4 align 2 {
  %6 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 1
  %7 = load %class.SkOpPtT*, %class.SkOpPtT** %6, align 8
  %8 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %7, i64 0, i32 0
  %9 = load double, double* %8, align 8
  %10 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %1, i64 0, i32 0
  %11 = load double, double* %10, align 8
  %12 = fcmp ogt double %9, %11
  br i1 %12, label %29, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 3
  %15 = load %class.SkOpPtT*, %class.SkOpPtT** %14, align 8
  %16 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %15, i64 0, i32 0
  %17 = load double, double* %16, align 8
  %18 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 4
  %19 = load %class.SkOpPtT*, %class.SkOpPtT** %18, align 8
  %20 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %19, i64 0, i32 0
  %21 = load double, double* %20, align 8
  %22 = fcmp ogt double %17, %21
  %23 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %3, i64 0, i32 0
  %24 = load double, double* %23, align 8
  br i1 %22, label %25, label %27

25:                                               ; preds = %13
  %26 = fcmp olt double %17, %24
  br i1 %26, label %29, label %33

27:                                               ; preds = %13
  %28 = fcmp ogt double %17, %24
  br i1 %28, label %29, label %33

29:                                               ; preds = %27, %25, %5
  store %class.SkOpPtT* %1, %class.SkOpPtT** %6, align 8
  %30 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %1, i64 0, i32 6
  store i8 1, i8* %30, align 2
  %31 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 3
  store %class.SkOpPtT* %3, %class.SkOpPtT** %31, align 8
  %32 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %3, i64 0, i32 6
  store i8 1, i8* %32, align 2
  br label %33

33:                                               ; preds = %29, %27, %25
  %34 = phi i8 [ 1, %29 ], [ 0, %25 ], [ 0, %27 ]
  %35 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 2
  %36 = load %class.SkOpPtT*, %class.SkOpPtT** %35, align 8
  %37 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %36, i64 0, i32 0
  %38 = load double, double* %37, align 8
  %39 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %2, i64 0, i32 0
  %40 = load double, double* %39, align 8
  %41 = fcmp olt double %38, %40
  br i1 %41, label %58, label %42

42:                                               ; preds = %33
  %43 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 3
  %44 = load %class.SkOpPtT*, %class.SkOpPtT** %43, align 8
  %45 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %44, i64 0, i32 0
  %46 = load double, double* %45, align 8
  %47 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 4
  %48 = load %class.SkOpPtT*, %class.SkOpPtT** %47, align 8
  %49 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %48, i64 0, i32 0
  %50 = load double, double* %49, align 8
  %51 = fcmp ogt double %46, %50
  %52 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %4, i64 0, i32 0
  %53 = load double, double* %52, align 8
  br i1 %51, label %54, label %56

54:                                               ; preds = %42
  %55 = fcmp ogt double %50, %53
  br i1 %55, label %58, label %62

56:                                               ; preds = %42
  %57 = fcmp olt double %50, %53
  br i1 %57, label %58, label %62

58:                                               ; preds = %56, %54, %33
  store %class.SkOpPtT* %2, %class.SkOpPtT** %35, align 8
  %59 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %2, i64 0, i32 6
  store i8 1, i8* %59, align 2
  %60 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 4
  store %class.SkOpPtT* %4, %class.SkOpPtT** %60, align 8
  %61 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %4, i64 0, i32 6
  store i8 1, i8* %61, align 2
  br label %62

62:                                               ; preds = %58, %56, %54
  %63 = phi i8 [ 1, %58 ], [ %34, %54 ], [ %34, %56 ]
  %64 = and i8 %63, 1
  %65 = icmp ne i8 %64, 0
  ret i1 %65
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN17SkCoincidentSpans3setEPS_PK7SkOpPtTS3_S3_S3_(%class.SkCoincidentSpans* nocapture, %class.SkCoincidentSpans*, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT*) local_unnamed_addr #5 align 2 {
  %7 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 0
  store %class.SkCoincidentSpans* %1, %class.SkCoincidentSpans** %7, align 8
  %8 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 1
  store %class.SkOpPtT* %2, %class.SkOpPtT** %8, align 8
  %9 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %2, i64 0, i32 6
  store i8 1, i8* %9, align 2
  %10 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 3
  store %class.SkOpPtT* %4, %class.SkOpPtT** %10, align 8
  %11 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %4, i64 0, i32 6
  store i8 1, i8* %11, align 2
  %12 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 2
  store %class.SkOpPtT* %3, %class.SkOpPtT** %12, align 8
  %13 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %3, i64 0, i32 6
  store i8 1, i8* %13, align 2
  %14 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 4
  store %class.SkOpPtT* %5, %class.SkOpPtT** %14, align 8
  %15 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %5, i64 0, i32 6
  store i8 1, i8* %15, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK17SkCoincidentSpans8containsEPK7SkOpPtTS2_(%class.SkCoincidentSpans* nocapture readonly, %class.SkOpPtT*, %class.SkOpPtT*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %class.SkOpPtT* %1 to i64
  %5 = ptrtoint %class.SkOpPtT* %2 to i64
  %6 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %1, i64 0, i32 0
  %7 = load double, double* %6, align 8
  %8 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %2, i64 0, i32 0
  %9 = load double, double* %8, align 8
  %10 = fcmp ogt double %7, %9
  %11 = select i1 %10, i64 %5, i64 %4
  %12 = select i1 %10, i64 %4, i64 %5
  %13 = inttoptr i64 %11 to %class.SkOpPtT*
  %14 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %13) #10
  %15 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 1
  %16 = load %class.SkOpPtT*, %class.SkOpPtT** %15, align 8
  %17 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %16) #10
  %18 = icmp eq %class.SkOpSegment* %14, %17
  br i1 %18, label %19, label %35

19:                                               ; preds = %3
  %20 = load %class.SkOpPtT*, %class.SkOpPtT** %15, align 8
  %21 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %20, i64 0, i32 0
  %22 = load double, double* %21, align 8
  %23 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %13, i64 0, i32 0
  %24 = load double, double* %23, align 8
  %25 = fcmp ugt double %22, %24
  br i1 %25, label %59, label %26

26:                                               ; preds = %19
  %27 = inttoptr i64 %12 to %class.SkOpPtT*
  %28 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %27, i64 0, i32 0
  %29 = load double, double* %28, align 8
  %30 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 2
  %31 = load %class.SkOpPtT*, %class.SkOpPtT** %30, align 8
  %32 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %31, i64 0, i32 0
  %33 = load double, double* %32, align 8
  %34 = fcmp ole double %29, %33
  br label %59

35:                                               ; preds = %3
  %36 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 3
  %37 = bitcast %class.SkOpPtT** %36 to i64**
  %38 = load i64*, i64** %37, align 8
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 4
  %41 = load %class.SkOpPtT*, %class.SkOpPtT** %40, align 8
  %42 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %41, i64 0, i32 0
  %43 = load double, double* %42, align 8
  %44 = bitcast double %43 to i64
  %45 = bitcast i64 %39 to double
  %46 = fcmp olt double %43, %45
  %47 = select i1 %46, i64 %44, i64 %39
  %48 = bitcast i64 %47 to double
  %49 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %13, i64 0, i32 0
  %50 = load double, double* %49, align 8
  %51 = fcmp ult double %50, %48
  br i1 %51, label %59, label %52

52:                                               ; preds = %35
  %53 = select i1 %46, i64 %39, i64 %44
  %54 = inttoptr i64 %12 to %class.SkOpPtT*
  %55 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %54, i64 0, i32 0
  %56 = load double, double* %55, align 8
  %57 = bitcast i64 %53 to double
  %58 = fcmp ole double %56, %57
  br label %59

59:                                               ; preds = %52, %35, %26, %19
  %60 = phi i1 [ false, %19 ], [ %34, %26 ], [ false, %35 ], [ %58, %52 ]
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK17SkCoincidentSpans7orderedEPb(%class.SkCoincidentSpans* nocapture readonly, i8* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 1
  %4 = load %class.SkOpPtT*, %class.SkOpPtT** %3, align 8
  %5 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %4, i64 0, i32 2
  %6 = bitcast %class.SkOpSpanBase** %5 to %class.SkOpSpan**
  %7 = load %class.SkOpSpan*, %class.SkOpSpan** %6, align 8
  %8 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 2
  %9 = load %class.SkOpPtT*, %class.SkOpPtT** %8, align 8
  %10 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %9, i64 0, i32 2
  %11 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %10, align 8
  %12 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %7, i64 0, i32 4
  %13 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %12, align 8
  %14 = icmp eq %class.SkOpSpanBase* %13, %11
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  store i8 1, i8* %1, align 1
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 3
  %18 = load %class.SkOpPtT*, %class.SkOpPtT** %17, align 8
  %19 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %18, i64 0, i32 0
  %20 = load double, double* %19, align 8
  %21 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %0, i64 0, i32 4
  %22 = load %class.SkOpPtT*, %class.SkOpPtT** %21, align 8
  %23 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %22, i64 0, i32 0
  %24 = load double, double* %23, align 8
  %25 = fcmp ogt double %20, %24
  %26 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %18) #10
  %27 = load %class.SkOpPtT*, %class.SkOpPtT** %17, align 8
  %28 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %27, i64 0, i32 0
  %29 = load double, double* %28, align 8
  %30 = tail call %class.SkOpPtT* @_ZNK12SkOpSpanBase8containsEPK11SkOpSegment(%class.SkOpSpanBase* %13, %class.SkOpSegment* %26) #10
  %31 = icmp eq %class.SkOpPtT* %30, null
  br i1 %31, label %56, label %32

32:                                               ; preds = %16, %50
  %33 = phi %class.SkOpPtT* [ %53, %50 ], [ %30, %16 ]
  %34 = phi double [ %37, %50 ], [ %29, %16 ]
  %35 = phi %class.SkOpSpanBase* [ %52, %50 ], [ %13, %16 ]
  %36 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %33, i64 0, i32 0
  %37 = load double, double* %36, align 8
  %38 = fcmp ogt double %34, %37
  %39 = xor i1 %25, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %32
  store i8 0, i8* %1, align 1
  br label %56

41:                                               ; preds = %32
  %42 = icmp eq %class.SkOpSpanBase* %35, %11
  br i1 %42, label %55, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %35, i64 0, i32 0, i32 0
  %45 = load double, double* %44, align 8
  %46 = fcmp oeq double %45, 1.000000e+00
  %47 = icmp eq %class.SkOpSpanBase* %35, null
  %48 = or i1 %47, %46
  br i1 %48, label %49, label %50

49:                                               ; preds = %43
  store i8 0, i8* %1, align 1
  br label %56

50:                                               ; preds = %43
  %51 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %35, i64 1, i32 0, i32 2
  %52 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %51, align 8
  %53 = tail call %class.SkOpPtT* @_ZNK12SkOpSpanBase8containsEPK11SkOpSegment(%class.SkOpSpanBase* %52, %class.SkOpSegment* %26) #10
  %54 = icmp eq %class.SkOpPtT* %53, null
  br i1 %54, label %56, label %32

55:                                               ; preds = %41
  store i8 1, i8* %1, align 1
  br label %56

56:                                               ; preds = %50, %16, %49, %40, %55, %15
  %57 = phi i1 [ true, %15 ], [ true, %55 ], [ true, %49 ], [ true, %40 ], [ false, %16 ], [ false, %50 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkOpCoincidence6extendEPK7SkOpPtTS2_S2_S2_(%class.SkOpCoincidence* nocapture readonly, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %7 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %6, align 8
  %8 = icmp eq %class.SkCoincidentSpans* %7, null
  br i1 %8, label %158, label %9

9:                                                ; preds = %5
  %10 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %1) #10
  %11 = ptrtoint %class.SkOpSegment* %10 to i64
  %12 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %3) #10
  %13 = ptrtoint %class.SkOpSegment* %12 to i64
  %14 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %1) #10
  %15 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %3) #10
  %16 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %14, i64 0, i32 10
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %15, i64 0, i32 10
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %17, %19
  br i1 %20, label %59, label %21

21:                                               ; preds = %9
  %22 = icmp sgt i32 %17, %19
  br i1 %22, label %52, label %23

23:                                               ; preds = %21
  %24 = add nsw i32 %17, 1
  %25 = ashr i32 %24, 2
  %26 = sub nsw i32 %17, %25
  %27 = shl i32 %26, 1
  %28 = add i32 %27, 2
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %59

30:                                               ; preds = %23
  %31 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %15, i64 0, i32 5
  %32 = load %struct.SkPoint*, %struct.SkPoint** %31, align 8
  %33 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %32, i64 0, i32 0
  %34 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %14, i64 0, i32 5
  %35 = load %struct.SkPoint*, %struct.SkPoint** %34, align 8
  %36 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %35, i64 0, i32 0
  br label %37

37:                                               ; preds = %162, %30
  %38 = phi i32 [ 0, %30 ], [ %165, %162 ]
  %39 = phi float* [ %33, %30 ], [ %164, %162 ]
  %40 = phi float* [ %36, %30 ], [ %163, %162 ]
  %41 = load float, float* %40, align 4
  %42 = load float, float* %39, align 4
  %43 = fcmp olt float %41, %42
  br i1 %43, label %59, label %44

44:                                               ; preds = %37
  %45 = fcmp ogt float %41, %42
  br i1 %45, label %52, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds float, float* %40, i64 1
  %48 = getelementptr inbounds float, float* %39, i64 1
  %49 = load float, float* %47, align 4
  %50 = load float, float* %48, align 4
  %51 = fcmp olt float %49, %50
  br i1 %51, label %59, label %160

52:                                               ; preds = %44, %160, %21
  %53 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %3, i64 0, i32 0
  %54 = load double, double* %53, align 8
  %55 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %4, i64 0, i32 0
  %56 = load double, double* %55, align 8
  %57 = fcmp ogt double %54, %56
  br i1 %57, label %58, label %59

58:                                               ; preds = %52
  br label %59

59:                                               ; preds = %37, %46, %162, %23, %9, %52, %58
  %60 = phi %class.SkOpPtT* [ %4, %58 ], [ %3, %52 ], [ %1, %9 ], [ %1, %23 ], [ %1, %162 ], [ %1, %46 ], [ %1, %37 ]
  %61 = phi %class.SkOpPtT* [ %3, %58 ], [ %4, %52 ], [ %2, %9 ], [ %2, %23 ], [ %2, %162 ], [ %2, %46 ], [ %2, %37 ]
  %62 = phi %class.SkOpPtT* [ %2, %58 ], [ %1, %52 ], [ %3, %9 ], [ %3, %23 ], [ %3, %162 ], [ %3, %46 ], [ %3, %37 ]
  %63 = phi %class.SkOpPtT* [ %1, %58 ], [ %2, %52 ], [ %4, %9 ], [ %4, %23 ], [ %4, %162 ], [ %4, %46 ], [ %4, %37 ]
  %64 = phi i64 [ %13, %58 ], [ %13, %52 ], [ %11, %9 ], [ %11, %23 ], [ %11, %162 ], [ %11, %46 ], [ %11, %37 ]
  %65 = phi i64 [ %11, %58 ], [ %11, %52 ], [ %13, %9 ], [ %13, %23 ], [ %13, %162 ], [ %13, %46 ], [ %13, %37 ]
  %66 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %62, i64 0, i32 0
  %67 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %63, i64 0, i32 0
  %68 = load double, double* %67, align 8
  %69 = load double, double* %66, align 8
  %70 = fcmp olt double %68, %69
  %71 = select i1 %70, double %68, double %69
  %72 = inttoptr i64 %64 to %class.SkOpSegment*
  %73 = inttoptr i64 %65 to %class.SkOpSegment*
  %74 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %61, i64 0, i32 0
  %75 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %60, i64 0, i32 0
  br label %76

76:                                               ; preds = %154, %59
  %77 = phi %class.SkCoincidentSpans* [ %7, %59 ], [ %156, %154 ]
  %78 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %77, i64 0, i32 1
  %79 = load %class.SkOpPtT*, %class.SkOpPtT** %78, align 8
  %80 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %79) #10
  %81 = icmp eq %class.SkOpSegment* %80, %72
  br i1 %81, label %82, label %154

82:                                               ; preds = %76
  %83 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %77, i64 0, i32 3
  %84 = load %class.SkOpPtT*, %class.SkOpPtT** %83, align 8
  %85 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %84) #10
  %86 = icmp eq %class.SkOpSegment* %85, %73
  br i1 %86, label %87, label %154

87:                                               ; preds = %82
  %88 = load %class.SkOpPtT*, %class.SkOpPtT** %83, align 8
  %89 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %88, i64 0, i32 0
  %90 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %77, i64 0, i32 4
  %91 = load %class.SkOpPtT*, %class.SkOpPtT** %90, align 8
  %92 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %91, i64 0, i32 0
  %93 = load double, double* %92, align 8
  %94 = load double, double* %89, align 8
  %95 = fcmp olt double %93, %94
  %96 = select i1 %95, double %93, double %94
  %97 = fcmp olt double %94, %93
  %98 = select i1 %97, double %93, double %94
  %99 = load %class.SkOpPtT*, %class.SkOpPtT** %78, align 8
  %100 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %99, i64 0, i32 0
  %101 = load double, double* %100, align 8
  %102 = load double, double* %74, align 8
  %103 = fcmp ugt double %101, %102
  br i1 %103, label %111, label %104

104:                                              ; preds = %87
  %105 = load double, double* %75, align 8
  %106 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %77, i64 0, i32 2
  %107 = load %class.SkOpPtT*, %class.SkOpPtT** %106, align 8
  %108 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %107, i64 0, i32 0
  %109 = load double, double* %108, align 8
  %110 = fcmp ugt double %105, %109
  br i1 %110, label %111, label %117

111:                                              ; preds = %104, %87
  %112 = fcmp ugt double %96, %98
  %113 = fcmp ugt double %71, %98
  %114 = or i1 %112, %113
  br i1 %114, label %154, label %115

115:                                              ; preds = %111
  %116 = load double, double* %75, align 8
  br label %117

117:                                              ; preds = %104, %115
  %118 = phi double [ %116, %115 ], [ %105, %104 ]
  %119 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %77, i64 0, i32 4
  %120 = fcmp ogt double %101, %118
  br i1 %120, label %127, label %121

121:                                              ; preds = %117
  %122 = load double, double* %66, align 8
  br i1 %95, label %123, label %125

123:                                              ; preds = %121
  %124 = fcmp olt double %94, %122
  br i1 %124, label %127, label %131

125:                                              ; preds = %121
  %126 = fcmp ogt double %94, %122
  br i1 %126, label %127, label %131

127:                                              ; preds = %125, %123, %117
  store %class.SkOpPtT* %60, %class.SkOpPtT** %78, align 8
  %128 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %60, i64 0, i32 6
  store i8 1, i8* %128, align 2
  store %class.SkOpPtT* %62, %class.SkOpPtT** %83, align 8
  %129 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %62, i64 0, i32 6
  store i8 1, i8* %129, align 2
  %130 = load double, double* %74, align 8
  br label %131

131:                                              ; preds = %127, %125, %123
  %132 = phi double [ %130, %127 ], [ %102, %125 ], [ %102, %123 ]
  %133 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %77, i64 0, i32 2
  %134 = load %class.SkOpPtT*, %class.SkOpPtT** %133, align 8
  %135 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %134, i64 0, i32 0
  %136 = load double, double* %135, align 8
  %137 = fcmp olt double %136, %132
  br i1 %137, label %151, label %138

138:                                              ; preds = %131
  %139 = load %class.SkOpPtT*, %class.SkOpPtT** %83, align 8
  %140 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %139, i64 0, i32 0
  %141 = load double, double* %140, align 8
  %142 = load %class.SkOpPtT*, %class.SkOpPtT** %119, align 8
  %143 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %142, i64 0, i32 0
  %144 = load double, double* %143, align 8
  %145 = fcmp ogt double %141, %144
  %146 = load double, double* %67, align 8
  br i1 %145, label %147, label %149

147:                                              ; preds = %138
  %148 = fcmp ogt double %144, %146
  br i1 %148, label %151, label %158

149:                                              ; preds = %138
  %150 = fcmp olt double %144, %146
  br i1 %150, label %151, label %158

151:                                              ; preds = %149, %147, %131
  store %class.SkOpPtT* %61, %class.SkOpPtT** %133, align 8
  %152 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %61, i64 0, i32 6
  store i8 1, i8* %152, align 2
  store %class.SkOpPtT* %63, %class.SkOpPtT** %119, align 8
  %153 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %63, i64 0, i32 6
  store i8 1, i8* %153, align 2
  br label %158

154:                                              ; preds = %111, %82, %76
  %155 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %77, i64 0, i32 0
  %156 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %155, align 8
  %157 = icmp eq %class.SkCoincidentSpans* %156, null
  br i1 %157, label %158, label %76

158:                                              ; preds = %154, %151, %149, %147, %5
  %159 = phi i1 [ false, %5 ], [ true, %147 ], [ true, %149 ], [ true, %151 ], [ false, %154 ]
  ret i1 %159

160:                                              ; preds = %46
  %161 = fcmp ogt float %49, %50
  br i1 %161, label %52, label %162

162:                                              ; preds = %160
  %163 = getelementptr inbounds float, float* %40, i64 2
  %164 = getelementptr inbounds float, float* %39, i64 2
  %165 = add nuw nsw i32 %38, 2
  %166 = icmp eq i32 %165, %28
  br i1 %166, label %59, label %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkOpCoincidence3addEP7SkOpPtTS1_S1_S1_(%class.SkOpCoincidence*, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT*) local_unnamed_addr #0 align 2 {
  %6 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %1) #10
  %7 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %3) #10
  %8 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %6, i64 0, i32 10
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %7, i64 0, i32 10
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %9, %11
  br i1 %12, label %69, label %13

13:                                               ; preds = %5, %52
  %14 = phi i32 [ %67, %52 ], [ %11, %5 ]
  %15 = phi i32 [ %65, %52 ], [ %9, %5 ]
  %16 = phi %class.SkOpSegment* [ %63, %52 ], [ %7, %5 ]
  %17 = phi %class.SkOpSegment* [ %62, %52 ], [ %6, %5 ]
  %18 = phi %class.SkOpPtT* [ %61, %52 ], [ %4, %5 ]
  %19 = phi %class.SkOpPtT* [ %60, %52 ], [ %3, %5 ]
  %20 = phi %class.SkOpPtT* [ %59, %52 ], [ %2, %5 ]
  %21 = phi %class.SkOpPtT* [ %58, %52 ], [ %1, %5 ]
  %22 = icmp sgt i32 %15, %14
  br i1 %22, label %52, label %23

23:                                               ; preds = %13
  %24 = add nsw i32 %15, 1
  %25 = ashr i32 %24, 2
  %26 = sub nsw i32 %15, %25
  %27 = shl i32 %26, 1
  %28 = add i32 %27, 2
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %69

30:                                               ; preds = %23
  %31 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %16, i64 0, i32 5
  %32 = load %struct.SkPoint*, %struct.SkPoint** %31, align 8
  %33 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %32, i64 0, i32 0
  %34 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %17, i64 0, i32 5
  %35 = load %struct.SkPoint*, %struct.SkPoint** %34, align 8
  %36 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %35, i64 0, i32 0
  br label %37

37:                                               ; preds = %129, %30
  %38 = phi i32 [ 0, %30 ], [ %132, %129 ]
  %39 = phi float* [ %33, %30 ], [ %131, %129 ]
  %40 = phi float* [ %36, %30 ], [ %130, %129 ]
  %41 = load float, float* %40, align 4
  %42 = load float, float* %39, align 4
  %43 = fcmp olt float %41, %42
  br i1 %43, label %69, label %44

44:                                               ; preds = %37
  %45 = fcmp ogt float %41, %42
  br i1 %45, label %52, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds float, float* %40, i64 1
  %48 = getelementptr inbounds float, float* %39, i64 1
  %49 = load float, float* %47, align 4
  %50 = load float, float* %48, align 4
  %51 = fcmp olt float %49, %50
  br i1 %51, label %69, label %127

52:                                               ; preds = %44, %127, %13
  %53 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %19, i64 0, i32 0
  %54 = load double, double* %53, align 8
  %55 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %18, i64 0, i32 0
  %56 = load double, double* %55, align 8
  %57 = fcmp olt double %54, %56
  %58 = select i1 %57, %class.SkOpPtT* %19, %class.SkOpPtT* %18
  %59 = select i1 %57, %class.SkOpPtT* %18, %class.SkOpPtT* %19
  %60 = select i1 %57, %class.SkOpPtT* %21, %class.SkOpPtT* %20
  %61 = select i1 %57, %class.SkOpPtT* %20, %class.SkOpPtT* %21
  %62 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %58) #10
  %63 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %60) #10
  %64 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %62, i64 0, i32 10
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %63, i64 0, i32 10
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %65, %67
  br i1 %68, label %69, label %13

69:                                               ; preds = %23, %52, %37, %46, %129, %5
  %70 = phi %class.SkOpPtT* [ %1, %5 ], [ %21, %129 ], [ %21, %46 ], [ %21, %37 ], [ %21, %23 ], [ %58, %52 ]
  %71 = phi %class.SkOpPtT* [ %2, %5 ], [ %20, %129 ], [ %20, %46 ], [ %20, %37 ], [ %20, %23 ], [ %59, %52 ]
  %72 = phi %class.SkOpPtT* [ %3, %5 ], [ %19, %129 ], [ %19, %46 ], [ %19, %37 ], [ %19, %23 ], [ %60, %52 ]
  %73 = phi %class.SkOpPtT* [ %4, %5 ], [ %18, %129 ], [ %18, %46 ], [ %18, %37 ], [ %18, %23 ], [ %61, %52 ]
  %74 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %70, i64 0, i32 2
  %75 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %74, align 8
  %76 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %75, i64 0, i32 0
  %77 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %71, i64 0, i32 2
  %78 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %77, align 8
  %79 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %78, i64 0, i32 0
  %80 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %72, i64 0, i32 2
  %81 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %80, align 8
  %82 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %81, i64 0, i32 0
  %83 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %73, i64 0, i32 2
  %84 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %83, align 8
  %85 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %84, i64 0, i32 0
  %86 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 2
  %87 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %86, align 8
  %88 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %87, i64 0, i32 0
  %89 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %88, align 8
  %90 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %89, i64 0, i32 1
  %91 = bitcast i8** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = sub i64 0, %92
  %94 = and i64 %93, 7
  %95 = or i64 %94, 40
  %96 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %89, i64 0, i32 2
  %97 = bitcast i8** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %98, %92
  %100 = icmp ugt i64 %95, %99
  br i1 %100, label %101, label %105

101:                                              ; preds = %69
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %89, i32 40, i32 8) #10
  %102 = load i64, i64* %91, align 8
  %103 = sub i64 0, %102
  %104 = and i64 %103, 7
  br label %105

105:                                              ; preds = %69, %101
  %106 = phi i64 [ %102, %101 ], [ %92, %69 ]
  %107 = phi i64 [ %104, %101 ], [ %94, %69 ]
  %108 = inttoptr i64 %106 to i8*
  %109 = getelementptr inbounds i8, i8* %108, i64 %107
  %110 = getelementptr inbounds i8, i8* %109, i64 40
  store i8* %110, i8** %90, align 8
  %111 = bitcast %class.SkOpCoincidence* %0 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 1 %109, i8 0, i64 40, i1 false)
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %109 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds i8, i8* %109, i64 8
  %115 = bitcast i8* %114 to %class.SkOpPtT**
  store %class.SkOpPtT* %76, %class.SkOpPtT** %115, align 8
  %116 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %75, i64 0, i32 0, i32 6
  store i8 1, i8* %116, align 2
  %117 = getelementptr inbounds i8, i8* %109, i64 24
  %118 = bitcast i8* %117 to %class.SkOpPtT**
  store %class.SkOpPtT* %82, %class.SkOpPtT** %118, align 8
  %119 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %81, i64 0, i32 0, i32 6
  store i8 1, i8* %119, align 2
  %120 = getelementptr inbounds i8, i8* %109, i64 16
  %121 = bitcast i8* %120 to %class.SkOpPtT**
  store %class.SkOpPtT* %79, %class.SkOpPtT** %121, align 8
  %122 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %78, i64 0, i32 0, i32 6
  store i8 1, i8* %122, align 2
  %123 = getelementptr inbounds i8, i8* %109, i64 32
  %124 = bitcast i8* %123 to %class.SkOpPtT**
  store %class.SkOpPtT* %85, %class.SkOpPtT** %124, align 8
  %125 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %84, i64 0, i32 0, i32 6
  store i8 1, i8* %125, align 2
  %126 = bitcast %class.SkOpCoincidence* %0 to i8**
  store i8* %109, i8** %126, align 8
  ret void

127:                                              ; preds = %46
  %128 = fcmp ogt float %49, %50
  br i1 %128, label %52, label %129

129:                                              ; preds = %127
  %130 = getelementptr inbounds float, float* %40, i64 2
  %131 = getelementptr inbounds float, float* %39, i64 2
  %132 = add nuw nsw i32 %38, 2
  %133 = icmp eq i32 %132, %28
  br i1 %133, label %69, label %37
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkOpCoincidence16addEndMovedSpansEPK8SkOpSpanPK12SkOpSpanBase(%class.SkOpCoincidence*, %class.SkOpSpan*, %class.SkOpSpanBase* readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca <2 x double>, align 16
  %5 = bitcast <2 x double>* %4 to %struct.SkDPoint*
  %6 = alloca %struct.SkDLine, align 16
  %7 = alloca %class.SkIntersections, align 8
  %8 = alloca %struct.SkDPoint, align 8
  %9 = alloca i8, align 1
  %10 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %2, i64 0, i32 0
  %11 = bitcast %class.SkOpSpan* %1 to %class.SkOpSpanBase*
  %12 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %1, i64 0, i32 0, i32 1
  %13 = load %class.SkOpSegment*, %class.SkOpSegment** %12, align 8
  %14 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %2, i64 0, i32 0, i32 3
  %15 = load %class.SkOpPtT*, %class.SkOpPtT** %14, align 8
  %16 = icmp eq %class.SkOpPtT* %15, %10
  br i1 %16, label %209, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %19 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 1
  %20 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %1, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %13, i64 0, i32 10
  %22 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %13, i64 0, i32 5
  %23 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %13, i64 0, i32 7
  %24 = bitcast %struct.SkDLine* %6 to i8*
  %25 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %6, i64 0, i32 0, i64 1, i32 0
  %26 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %6, i64 0, i32 0, i64 1, i32 1
  %27 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %28 = bitcast %class.SkIntersections* %7 to i8*
  %29 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %7, i64 0, i32 8
  %30 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %7, i64 0, i32 4, i64 0
  %31 = bitcast i8* %30 to i16*
  %32 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %7, i64 0, i32 7
  %33 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %7, i64 0, i32 5
  %34 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %7, i64 0, i32 3, i64 0
  %35 = bitcast i16* %34 to i32*
  %36 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %7, i64 0, i32 6
  %37 = bitcast %struct.SkDPoint* %8 to i8*
  %38 = bitcast <2 x double>* %4 to i8*
  %39 = bitcast %class.SkOpSpan* %1 to i64*
  %40 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %2, i64 0, i32 0, i32 0
  %41 = bitcast %class.SkOpSpanBase* %2 to i64*
  %42 = bitcast float* %27 to <2 x float>*
  %43 = bitcast %struct.SkDLine* %6 to <2 x double>*
  %44 = bitcast float* %27 to <2 x float>*
  br label %45

45:                                               ; preds = %17, %205
  %46 = phi %class.SkOpPtT* [ %15, %17 ], [ %207, %205 ]
  %47 = phi i32 [ 100000, %17 ], [ %48, %205 ]
  %48 = add nsw i32 %47, -1
  %49 = icmp ult i32 %47, 2
  br i1 %49, label %209, label %50

50:                                               ; preds = %45
  %51 = call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %46) #10
  %52 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %46, i64 0, i32 4
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp ne i8 %53, 0
  %55 = icmp eq %class.SkOpSegment* %51, %13
  %56 = or i1 %55, %54
  br i1 %56, label %205, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %46, i64 0, i32 2
  %59 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %58, align 8
  %60 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %59, i64 0, i32 0
  %61 = icmp eq %class.SkOpPtT* %60, %46
  br i1 %61, label %62, label %205

62:                                               ; preds = %57
  %63 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %46, i64 0, i32 0
  %64 = load double, double* %63, align 8
  %65 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %18, align 8
  %66 = call zeroext i1 @_ZNK15SkOpCoincidence8containsEPK17SkCoincidentSpansPK11SkOpSegmentS5_d(%class.SkOpCoincidence* undef, %class.SkCoincidentSpans* %65, %class.SkOpSegment* %13, %class.SkOpSegment* %51, double %64) #10
  br i1 %66, label %205, label %67

67:                                               ; preds = %62
  %68 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %19, align 8
  %69 = call zeroext i1 @_ZNK15SkOpCoincidence8containsEPK17SkCoincidentSpansPK11SkOpSegmentS5_d(%class.SkOpCoincidence* undef, %class.SkCoincidentSpans* %68, %class.SkOpSegment* %13, %class.SkOpSegment* %51, double %64) #10
  br i1 %69, label %205, label %70

70:                                               ; preds = %67
  %71 = load double, double* %20, align 8
  %72 = load i32, i32* %21, align 4
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds [5 x { double, double } (%struct.SkPoint*, float, double)*], [5 x { double, double } (%struct.SkPoint*, float, double)*]* @_ZL14CurveDSlopeAtT, i64 0, i64 %73
  %75 = load { double, double } (%struct.SkPoint*, float, double)*, { double, double } (%struct.SkPoint*, float, double)** %74, align 8
  %76 = load %struct.SkPoint*, %struct.SkPoint** %22, align 8
  %77 = load float, float* %23, align 8
  %78 = call { double, double } %75(%struct.SkPoint* %76, float %77, double %71) #10
  %79 = extractvalue { double, double } %78, 0
  %80 = extractvalue { double, double } %78, 1
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #10
  %81 = load <2 x float>, <2 x float>* %42, align 4
  %82 = fpext <2 x float> %81 to <2 x double>
  store <2 x double> %82, <2 x double>* %43, align 16
  %83 = extractelement <2 x double> %82, i32 0
  %84 = fadd double %80, %83
  store double %84, double* %25, align 16
  %85 = extractelement <2 x double> %82, i32 1
  %86 = fsub double %85, %79
  store double %86, double* %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 464, i8* nonnull %28) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 bitcast (%class.SkIntersections* @__const._ZN15SkOpCoincidence16addEndMovedSpansEPK8SkOpSpanPK12SkOpSpanBase.i to i8*), i64 464, i1 false)
  store i8 0, i8* %29, align 1
  store i16 0, i16* %31, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 448, i1 false) #10
  store i8 1, i8* %32, align 8
  store i8 0, i8* %33, align 2
  store i32 0, i32* %35, align 8
  store i8 0, i8* %36, align 1
  %87 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %51, i64 0, i32 10
  %88 = load i32, i32* %87, align 4
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds [5 x void (%struct.SkPoint*, float, %struct.SkDLine*, %class.SkIntersections*)*], [5 x void (%struct.SkPoint*, float, %struct.SkDLine*, %class.SkIntersections*)*]* @_ZL17CurveIntersectRay, i64 0, i64 %89
  %91 = load void (%struct.SkPoint*, float, %struct.SkDLine*, %class.SkIntersections*)*, void (%struct.SkPoint*, float, %struct.SkDLine*, %class.SkIntersections*)** %90, align 8
  %92 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %51, i64 0, i32 5
  %93 = load %struct.SkPoint*, %struct.SkPoint** %92, align 8
  %94 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %51, i64 0, i32 7
  %95 = load float, float* %94, align 8
  call void %91(%struct.SkPoint* %93, float %95, %struct.SkDLine* nonnull dereferenceable(32) %6, %class.SkIntersections* nonnull %7) #10
  %96 = load i8, i8* %33, align 2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %203, label %98

98:                                               ; preds = %70
  %99 = bitcast %class.SkOpPtT* %46 to i64*
  br label %100

100:                                              ; preds = %98, %198
  %101 = phi i8 [ %96, %98 ], [ %199, %198 ]
  %102 = phi i64 [ 0, %98 ], [ %200, %198 ]
  %103 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %7, i64 0, i32 2, i64 0, i64 %102
  %104 = load double, double* %103, align 8
  %105 = fsub double 0.000000e+00, %104
  %106 = fsub double 1.000000e+00, %104
  %107 = fmul double %105, %106
  %108 = fcmp ugt double %107, 0.000000e+00
  br i1 %108, label %198, label %109

109:                                              ; preds = %100
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #10
  %110 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %7, i64 0, i32 0, i64 %102
  %111 = bitcast %struct.SkDPoint* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 %111, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #10
  %112 = load <2 x float>, <2 x float>* %44, align 4
  %113 = fpext <2 x float> %112 to <2 x double>
  store <2 x double> %113, <2 x double>* %4, align 16
  %114 = call zeroext i1 @_ZNK8SkDPoint18approximatelyEqualERKS_(%struct.SkDPoint* nonnull %8, %struct.SkDPoint* nonnull dereferenceable(16) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #10
  br i1 %114, label %115, label %196

115:                                              ; preds = %109
  %116 = call %class.SkOpPtT* @_ZN11SkOpSegment4addTEd(%class.SkOpSegment* %51, double %104) #10
  %117 = icmp eq %class.SkOpPtT* %116, %46
  br i1 %117, label %196, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %116, i64 0, i32 2
  %120 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %119, align 8
  %121 = call zeroext i1 @_ZN12SkOpSpanBase6addOppEPS_(%class.SkOpSpanBase* %120, %class.SkOpSpanBase* %11) #10
  %122 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %116, i64 0, i32 4
  %123 = load i8, i8* %122, align 8, !range !2
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %196

125:                                              ; preds = %118
  %126 = load %class.SkOpSegment*, %class.SkOpSegment** %12, align 8
  %127 = ptrtoint %class.SkOpSegment* %126 to i64
  %128 = call %class.SkOpSegment* @_ZN7SkOpPtT7segmentEv(%class.SkOpPtT* %116) #10
  %129 = ptrtoint %class.SkOpSegment* %128 to i64
  %130 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %126, i64 0, i32 10
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %128, i64 0, i32 10
  %133 = load i32, i32* %132, align 4
  %134 = icmp slt i32 %131, %133
  br i1 %134, label %166, label %135

135:                                              ; preds = %125
  %136 = icmp sgt i32 %131, %133
  br i1 %136, label %168, label %137

137:                                              ; preds = %135
  %138 = add nsw i32 %131, 1
  %139 = ashr i32 %138, 2
  %140 = sub nsw i32 %131, %139
  %141 = shl i32 %140, 1
  %142 = add i32 %141, 2
  %143 = icmp sgt i32 %142, 0
  br i1 %143, label %144, label %166

144:                                              ; preds = %137
  %145 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %128, i64 0, i32 5
  %146 = load %struct.SkPoint*, %struct.SkPoint** %145, align 8
  %147 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %146, i64 0, i32 0
  %148 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %126, i64 0, i32 5
  %149 = load %struct.SkPoint*, %struct.SkPoint** %148, align 8
  %150 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %149, i64 0, i32 0
  br label %151

151:                                              ; preds = %213, %144
  %152 = phi i32 [ 0, %144 ], [ %216, %213 ]
  %153 = phi float* [ %147, %144 ], [ %215, %213 ]
  %154 = phi float* [ %150, %144 ], [ %214, %213 ]
  %155 = load float, float* %154, align 4
  %156 = load float, float* %153, align 4
  %157 = fcmp olt float %155, %156
  br i1 %157, label %166, label %158

158:                                              ; preds = %151
  %159 = fcmp ogt float %155, %156
  br i1 %159, label %168, label %160

160:                                              ; preds = %158
  %161 = getelementptr inbounds float, float* %154, i64 1
  %162 = getelementptr inbounds float, float* %153, i64 1
  %163 = load float, float* %161, align 4
  %164 = load float, float* %162, align 4
  %165 = fcmp olt float %163, %164
  br i1 %165, label %166, label %211

166:                                              ; preds = %151, %160, %213, %125, %137
  %167 = bitcast %class.SkOpPtT* %116 to i64*
  br label %170

168:                                              ; preds = %158, %211, %135
  %169 = bitcast %class.SkOpPtT* %116 to i64*
  br label %170

170:                                              ; preds = %168, %166
  %171 = phi i64 [ %127, %166 ], [ %129, %168 ]
  %172 = phi i64 [ %129, %166 ], [ %127, %168 ]
  %173 = phi i64* [ %39, %166 ], [ %169, %168 ]
  %174 = phi i64* [ %41, %166 ], [ %99, %168 ]
  %175 = phi i64* [ %167, %166 ], [ %39, %168 ]
  %176 = phi double* [ %63, %166 ], [ %40, %168 ]
  %177 = load i64, i64* %175, align 8
  %178 = bitcast double* %176 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast i64* %174 to double*
  %181 = load double, double* %180, align 8
  %182 = bitcast i64* %173 to double*
  %183 = load double, double* %182, align 8
  %184 = fcmp ogt double %183, %181
  br i1 %184, label %185, label %186

185:                                              ; preds = %170
  br label %186

186:                                              ; preds = %185, %170
  %187 = phi double [ %183, %185 ], [ %181, %170 ]
  %188 = phi double [ %181, %185 ], [ %183, %170 ]
  %189 = phi i64 [ %179, %185 ], [ %177, %170 ]
  %190 = phi i64 [ %177, %185 ], [ %179, %170 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #10
  store i8 -86, i8* %9, align 1
  %191 = inttoptr i64 %171 to %class.SkOpSegment*
  %192 = inttoptr i64 %172 to %class.SkOpSegment*
  %193 = bitcast i64 %189 to double
  %194 = bitcast i64 %190 to double
  %195 = call zeroext i1 @_ZN15SkOpCoincidence12addOrOverlapEP11SkOpSegmentS1_ddddPb(%class.SkOpCoincidence* %0, %class.SkOpSegment* %191, %class.SkOpSegment* %192, double %188, double %187, double %193, double %194, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #10
  br i1 %195, label %196, label %204

196:                                              ; preds = %118, %109, %115, %186
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #10
  %197 = load i8, i8* %33, align 2
  br label %198

198:                                              ; preds = %100, %196
  %199 = phi i8 [ %101, %100 ], [ %197, %196 ]
  %200 = add nuw nsw i64 %102, 1
  %201 = zext i8 %199 to i64
  %202 = icmp ult i64 %200, %201
  br i1 %202, label %100, label %203

203:                                              ; preds = %198, %70
  call void @llvm.lifetime.end.p0i8(i64 464, i8* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #10
  br label %205

204:                                              ; preds = %186
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #10
  call void @llvm.lifetime.end.p0i8(i64 464, i8* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #10
  br label %209

205:                                              ; preds = %62, %67, %57, %50, %203
  %206 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %46, i64 0, i32 3
  %207 = load %class.SkOpPtT*, %class.SkOpPtT** %206, align 8
  %208 = icmp eq %class.SkOpPtT* %207, %10
  br i1 %208, label %209, label %45

209:                                              ; preds = %45, %205, %204, %3
  %210 = phi i1 [ true, %3 ], [ false, %204 ], [ true, %205 ], [ false, %45 ]
  ret i1 %210

211:                                              ; preds = %160
  %212 = fcmp ogt float %163, %164
  br i1 %212, label %168, label %213

213:                                              ; preds = %211
  %214 = getelementptr inbounds float, float* %154, i64 2
  %215 = getelementptr inbounds float, float* %153, i64 2
  %216 = add nuw nsw i32 %152, 2
  %217 = icmp eq i32 %216, %142
  br i1 %217, label %166, label %151
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15SkOpCoincidence8containsEPK11SkOpSegmentS2_d(%class.SkOpCoincidence* nocapture readonly, %class.SkOpSegment*, %class.SkOpSegment*, double) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %6 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %5, align 8
  %7 = tail call zeroext i1 @_ZNK15SkOpCoincidence8containsEPK17SkCoincidentSpansPK11SkOpSegmentS5_d(%class.SkOpCoincidence* undef, %class.SkCoincidentSpans* %6, %class.SkOpSegment* %1, %class.SkOpSegment* %2, double %3)
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 1
  %10 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %9, align 8
  %11 = tail call zeroext i1 @_ZNK15SkOpCoincidence8containsEPK17SkCoincidentSpansPK11SkOpSegmentS5_d(%class.SkOpCoincidence* undef, %class.SkCoincidentSpans* %10, %class.SkOpSegment* %1, %class.SkOpSegment* %2, double %3)
  br label %12

12:                                               ; preds = %8, %4
  %13 = phi i1 [ true, %4 ], [ %11, %8 ]
  ret i1 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare %class.SkOpPtT* @_ZN11SkOpSegment4addTEd(%class.SkOpSegment*, double) local_unnamed_addr #1

declare zeroext i1 @_ZN12SkOpSpanBase6addOppEPS_(%class.SkOpSpanBase*, %class.SkOpSpanBase*) local_unnamed_addr #1

declare %class.SkOpSegment* @_ZN7SkOpPtT7segmentEv(%class.SkOpPtT*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN15SkOpCoincidence7OrderedEPK11SkOpSegmentS2_(%class.SkOpSegment* nocapture readonly, %class.SkOpSegment* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %0, i64 0, i32 10
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %1, i64 0, i32 10
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %39, label %8

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %6
  br i1 %9, label %39, label %10

10:                                               ; preds = %8
  %11 = add nsw i32 %4, 1
  %12 = ashr i32 %11, 2
  %13 = sub nsw i32 %4, %12
  %14 = shl i32 %13, 1
  %15 = add i32 %14, 2
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %39

17:                                               ; preds = %10
  %18 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %1, i64 0, i32 5
  %19 = load %struct.SkPoint*, %struct.SkPoint** %18, align 8
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %19, i64 0, i32 0
  %21 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %0, i64 0, i32 5
  %22 = load %struct.SkPoint*, %struct.SkPoint** %21, align 8
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %22, i64 0, i32 0
  br label %24

24:                                               ; preds = %43, %17
  %25 = phi i32 [ 0, %17 ], [ %46, %43 ]
  %26 = phi float* [ %20, %17 ], [ %45, %43 ]
  %27 = phi float* [ %23, %17 ], [ %44, %43 ]
  %28 = load float, float* %27, align 4
  %29 = load float, float* %26, align 4
  %30 = fcmp olt float %28, %29
  br i1 %30, label %39, label %31

31:                                               ; preds = %24
  %32 = fcmp ogt float %28, %29
  br i1 %32, label %39, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds float, float* %27, i64 1
  %35 = getelementptr inbounds float, float* %26, i64 1
  %36 = load float, float* %34, align 4
  %37 = load float, float* %35, align 4
  %38 = fcmp olt float %36, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %24, %31, %33, %41, %43, %10, %8, %2
  %40 = phi i1 [ true, %2 ], [ false, %8 ], [ true, %10 ], [ true, %24 ], [ false, %31 ], [ true, %33 ], [ false, %41 ], [ true, %43 ]
  ret i1 %40

41:                                               ; preds = %33
  %42 = fcmp ogt float %36, %37
  br i1 %42, label %39, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds float, float* %27, i64 2
  %45 = getelementptr inbounds float, float* %26, i64 2
  %46 = add nuw nsw i32 %25, 2
  %47 = icmp eq i32 %46, %15
  br i1 %47, label %39, label %24
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkOpCoincidence12addOrOverlapEP11SkOpSegmentS1_ddddPb(%class.SkOpCoincidence*, %class.SkOpSegment*, %class.SkOpSegment*, double, double, double, double, i8* nocapture) local_unnamed_addr #0 align 2 {
  %9 = alloca %class.SkTDArray, align 8
  %10 = bitcast %class.SkTDArray* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %9, i64 0, i32 0
  %12 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %9, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #10
  %13 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 1
  %14 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %13, align 8
  %15 = icmp eq %class.SkCoincidentSpans* %14, null
  br i1 %15, label %555, label %16

16:                                               ; preds = %8
  %17 = call zeroext i1 @_ZNK15SkOpCoincidence12checkOverlapEP17SkCoincidentSpansPK11SkOpSegmentS4_ddddP9SkTDArrayIS1_E(%class.SkOpCoincidence* %0, %class.SkCoincidentSpans* nonnull %14, %class.SkOpSegment* %1, %class.SkOpSegment* %2, double %3, double %4, double %5, double %6, %class.SkTDArray* nonnull %9)
  br i1 %17, label %18, label %555

18:                                               ; preds = %16
  %19 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %20 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %19, align 8
  %21 = icmp eq %class.SkCoincidentSpans* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = call zeroext i1 @_ZNK15SkOpCoincidence12checkOverlapEP17SkCoincidentSpansPK11SkOpSegmentS4_ddddP9SkTDArrayIS1_E(%class.SkOpCoincidence* %0, %class.SkCoincidentSpans* nonnull %20, %class.SkOpSegment* %1, %class.SkOpSegment* %2, double %3, double %4, double %5, double %6, %class.SkTDArray* nonnull %9)
  br i1 %23, label %24, label %555

24:                                               ; preds = %18, %22
  %25 = load i32, i32* %12, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %24
  %28 = load %class.SkCoincidentSpans**, %class.SkCoincidentSpans*** %11, align 8
  %29 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %28, align 8
  %30 = icmp sgt i32 %25, 1
  br i1 %30, label %31, label %36

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %29, i64 0, i32 1
  %33 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %29, i64 0, i32 2
  %34 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %29, i64 0, i32 3
  %35 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %29, i64 0, i32 4
  br label %47

36:                                               ; preds = %153, %24, %27
  %37 = phi %class.SkCoincidentSpans* [ %29, %27 ], [ null, %24 ], [ %29, %153 ]
  %38 = call %class.SkOpPtT* @_ZNK11SkOpSegment8existingEdPKS_(%class.SkOpSegment* %1, double %3, %class.SkOpSegment* %2) #10
  %39 = ptrtoint %class.SkOpPtT* %38 to i64
  %40 = call %class.SkOpPtT* @_ZNK11SkOpSegment8existingEdPKS_(%class.SkOpSegment* %1, double %4, %class.SkOpSegment* %2) #10
  %41 = ptrtoint %class.SkOpPtT* %40 to i64
  %42 = icmp ne %class.SkCoincidentSpans* %37, null
  %43 = icmp ne %class.SkOpPtT* %38, null
  %44 = and i1 %42, %43
  %45 = icmp ne %class.SkOpPtT* %40, null
  %46 = and i1 %44, %45
  br i1 %46, label %158, label %212

47:                                               ; preds = %31, %153
  %48 = phi i64 [ 1, %31 ], [ %154, %153 ]
  %49 = load %class.SkCoincidentSpans**, %class.SkCoincidentSpans*** %11, align 8
  %50 = getelementptr inbounds %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %49, i64 %48
  %51 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %50, align 8
  %52 = load %class.SkOpPtT*, %class.SkOpPtT** %32, align 8
  %53 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %52, i64 0, i32 0
  %54 = load double, double* %53, align 8
  %55 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %51, i64 0, i32 1
  %56 = load %class.SkOpPtT*, %class.SkOpPtT** %55, align 8
  %57 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %56, i64 0, i32 0
  %58 = load double, double* %57, align 8
  %59 = fcmp ogt double %54, %58
  br i1 %59, label %60, label %62

60:                                               ; preds = %47
  store %class.SkOpPtT* %56, %class.SkOpPtT** %32, align 8
  %61 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %56, i64 0, i32 6
  store i8 1, i8* %61, align 2
  br label %62

62:                                               ; preds = %60, %47
  %63 = load %class.SkOpPtT*, %class.SkOpPtT** %33, align 8
  %64 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %63, i64 0, i32 0
  %65 = load double, double* %64, align 8
  %66 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %51, i64 0, i32 2
  %67 = load %class.SkOpPtT*, %class.SkOpPtT** %66, align 8
  %68 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %67, i64 0, i32 0
  %69 = load double, double* %68, align 8
  %70 = fcmp olt double %65, %69
  br i1 %70, label %71, label %73

71:                                               ; preds = %62
  store %class.SkOpPtT* %67, %class.SkOpPtT** %33, align 8
  %72 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %67, i64 0, i32 6
  store i8 1, i8* %72, align 2
  br label %73

73:                                               ; preds = %71, %62
  %74 = load %class.SkOpPtT*, %class.SkOpPtT** %34, align 8
  %75 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %74, i64 0, i32 0
  %76 = load double, double* %75, align 8
  %77 = load %class.SkOpPtT*, %class.SkOpPtT** %35, align 8
  %78 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %77, i64 0, i32 0
  %79 = load double, double* %78, align 8
  %80 = fcmp ogt double %76, %79
  %81 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %51, i64 0, i32 3
  %82 = load %class.SkOpPtT*, %class.SkOpPtT** %81, align 8
  %83 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %82, i64 0, i32 0
  %84 = load double, double* %83, align 8
  br i1 %80, label %85, label %87

85:                                               ; preds = %73
  %86 = fcmp olt double %76, %84
  br i1 %86, label %89, label %97

87:                                               ; preds = %73
  %88 = fcmp ogt double %76, %84
  br i1 %88, label %89, label %97

89:                                               ; preds = %87, %85
  store %class.SkOpPtT* %82, %class.SkOpPtT** %34, align 8
  %90 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %82, i64 0, i32 6
  store i8 1, i8* %90, align 2
  %91 = load %class.SkOpPtT*, %class.SkOpPtT** %34, align 8
  %92 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %91, i64 0, i32 0
  %93 = load double, double* %92, align 8
  %94 = load %class.SkOpPtT*, %class.SkOpPtT** %35, align 8
  %95 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %94, i64 0, i32 0
  %96 = load double, double* %95, align 8
  br label %97

97:                                               ; preds = %89, %87, %85
  %98 = phi double [ %96, %89 ], [ %79, %87 ], [ %79, %85 ]
  %99 = phi double [ %93, %89 ], [ %76, %87 ], [ %76, %85 ]
  %100 = fcmp ogt double %99, %98
  %101 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %51, i64 0, i32 4
  %102 = load %class.SkOpPtT*, %class.SkOpPtT** %101, align 8
  %103 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %102, i64 0, i32 0
  %104 = load double, double* %103, align 8
  br i1 %100, label %105, label %107

105:                                              ; preds = %97
  %106 = fcmp ogt double %98, %104
  br i1 %106, label %109, label %111

107:                                              ; preds = %97
  %108 = fcmp olt double %98, %104
  br i1 %108, label %109, label %111

109:                                              ; preds = %107, %105
  store %class.SkOpPtT* %102, %class.SkOpPtT** %35, align 8
  %110 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %102, i64 0, i32 6
  store i8 1, i8* %110, align 2
  br label %111

111:                                              ; preds = %109, %107, %105
  %112 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %19, align 8
  %113 = icmp eq %class.SkCoincidentSpans* %112, null
  br i1 %113, label %130, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %112, i64 0, i32 0
  %116 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %115, align 8
  %117 = icmp eq %class.SkCoincidentSpans* %112, %51
  br i1 %117, label %122, label %123

118:                                              ; preds = %123
  %119 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %124, i64 0, i32 0
  %120 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %119, align 8
  %121 = icmp eq %class.SkCoincidentSpans* %124, %51
  br i1 %121, label %127, label %123

122:                                              ; preds = %114
  store %class.SkCoincidentSpans* %116, %class.SkCoincidentSpans** %19, align 8
  br label %153

123:                                              ; preds = %114, %118
  %124 = phi %class.SkCoincidentSpans* [ %120, %118 ], [ %116, %114 ]
  %125 = phi %class.SkCoincidentSpans* [ %124, %118 ], [ %112, %114 ]
  %126 = icmp eq %class.SkCoincidentSpans* %124, null
  br i1 %126, label %130, label %118

127:                                              ; preds = %118
  %128 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %125, i64 0, i32 0
  store %class.SkCoincidentSpans* %120, %class.SkCoincidentSpans** %128, align 8
  %129 = icmp eq %class.SkCoincidentSpans* %51, null
  br i1 %129, label %130, label %153

130:                                              ; preds = %123, %127, %111
  %131 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %13, align 8
  %132 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %131, i64 0, i32 0
  %133 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %132, align 8
  %134 = icmp eq %class.SkCoincidentSpans* %131, %51
  br i1 %134, label %143, label %149

135:                                              ; preds = %149
  %136 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %150, i64 0, i32 0
  %137 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %136, align 8
  %138 = icmp eq %class.SkCoincidentSpans* %150, %51
  br i1 %138, label %139, label %149

139:                                              ; preds = %135
  %140 = icmp eq %class.SkCoincidentSpans* %151, null
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %151, i64 0, i32 0
  store %class.SkCoincidentSpans* %137, %class.SkCoincidentSpans** %142, align 8
  br label %153

143:                                              ; preds = %139, %130
  %144 = phi %class.SkCoincidentSpans* [ %137, %139 ], [ %133, %130 ]
  %145 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %19, align 8
  %146 = icmp eq %class.SkCoincidentSpans* %145, %131
  br i1 %146, label %147, label %148

147:                                              ; preds = %143
  store %class.SkCoincidentSpans* %144, %class.SkCoincidentSpans** %19, align 8
  br label %153

148:                                              ; preds = %143
  store %class.SkCoincidentSpans* %144, %class.SkCoincidentSpans** %13, align 8
  br label %153

149:                                              ; preds = %130, %135
  %150 = phi %class.SkCoincidentSpans* [ %137, %135 ], [ %133, %130 ]
  %151 = phi %class.SkCoincidentSpans* [ %150, %135 ], [ %131, %130 ]
  %152 = icmp eq %class.SkCoincidentSpans* %150, null
  br i1 %152, label %153, label %135

153:                                              ; preds = %149, %127, %148, %147, %141, %122
  %154 = add nuw nsw i64 %48, 1
  %155 = load i32, i32* %12, align 4
  %156 = sext i32 %155 to i64
  %157 = icmp slt i64 %154, %156
  br i1 %157, label %47, label %36

158:                                              ; preds = %36
  %159 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %38, i64 0, i32 0
  %160 = load double, double* %159, align 8
  %161 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %40, i64 0, i32 0
  %162 = load double, double* %161, align 8
  %163 = fcmp ogt double %160, %162
  %164 = select i1 %163, i64 %41, i64 %39
  %165 = select i1 %163, i64 %39, i64 %41
  %166 = inttoptr i64 %164 to %class.SkOpPtT*
  %167 = call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* nonnull %166) #10
  %168 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 1
  %169 = load %class.SkOpPtT*, %class.SkOpPtT** %168, align 8
  %170 = call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %169) #10
  %171 = icmp eq %class.SkOpSegment* %167, %170
  br i1 %171, label %172, label %188

172:                                              ; preds = %158
  %173 = load %class.SkOpPtT*, %class.SkOpPtT** %168, align 8
  %174 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %173, i64 0, i32 0
  %175 = load double, double* %174, align 8
  %176 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %166, i64 0, i32 0
  %177 = load double, double* %176, align 8
  %178 = fcmp ugt double %175, %177
  br i1 %178, label %212, label %179

179:                                              ; preds = %172
  %180 = inttoptr i64 %165 to %class.SkOpPtT*
  %181 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %180, i64 0, i32 0
  %182 = load double, double* %181, align 8
  %183 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 2
  %184 = load %class.SkOpPtT*, %class.SkOpPtT** %183, align 8
  %185 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %184, i64 0, i32 0
  %186 = load double, double* %185, align 8
  %187 = fcmp ugt double %182, %186
  br i1 %187, label %212, label %555

188:                                              ; preds = %158
  %189 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 3
  %190 = bitcast %class.SkOpPtT** %189 to i64**
  %191 = load i64*, i64** %190, align 8
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 4
  %194 = load %class.SkOpPtT*, %class.SkOpPtT** %193, align 8
  %195 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %194, i64 0, i32 0
  %196 = load double, double* %195, align 8
  %197 = bitcast double %196 to i64
  %198 = bitcast i64 %192 to double
  %199 = fcmp olt double %196, %198
  %200 = select i1 %199, i64 %197, i64 %192
  %201 = bitcast i64 %200 to double
  %202 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %166, i64 0, i32 0
  %203 = load double, double* %202, align 8
  %204 = fcmp ult double %203, %201
  br i1 %204, label %212, label %205

205:                                              ; preds = %188
  %206 = select i1 %199, i64 %192, i64 %197
  %207 = inttoptr i64 %165 to %class.SkOpPtT*
  %208 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %207, i64 0, i32 0
  %209 = load double, double* %208, align 8
  %210 = bitcast i64 %206 to double
  %211 = fcmp ugt double %209, %210
  br i1 %211, label %212, label %555

212:                                              ; preds = %179, %205, %188, %172, %36
  %213 = icmp eq %class.SkOpPtT* %38, %40
  %214 = and i1 %43, %213
  br i1 %214, label %555, label %215

215:                                              ; preds = %212
  %216 = call %class.SkOpPtT* @_ZNK11SkOpSegment8existingEdPKS_(%class.SkOpSegment* %2, double %5, %class.SkOpSegment* %1) #10
  %217 = ptrtoint %class.SkOpPtT* %216 to i64
  %218 = call %class.SkOpPtT* @_ZNK11SkOpSegment8existingEdPKS_(%class.SkOpSegment* %2, double %6, %class.SkOpSegment* %1) #10
  %219 = ptrtoint %class.SkOpPtT* %218 to i64
  %220 = icmp ne %class.SkOpPtT* %216, null
  %221 = and i1 %42, %220
  %222 = icmp ne %class.SkOpPtT* %218, null
  %223 = and i1 %221, %222
  br i1 %223, label %224, label %278

224:                                              ; preds = %215
  %225 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %216, i64 0, i32 0
  %226 = load double, double* %225, align 8
  %227 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %218, i64 0, i32 0
  %228 = load double, double* %227, align 8
  %229 = fcmp ogt double %226, %228
  %230 = select i1 %229, i64 %219, i64 %217
  %231 = select i1 %229, i64 %217, i64 %219
  %232 = inttoptr i64 %230 to %class.SkOpPtT*
  %233 = call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* nonnull %232) #10
  %234 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 1
  %235 = load %class.SkOpPtT*, %class.SkOpPtT** %234, align 8
  %236 = call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %235) #10
  %237 = icmp eq %class.SkOpSegment* %233, %236
  br i1 %237, label %238, label %254

238:                                              ; preds = %224
  %239 = load %class.SkOpPtT*, %class.SkOpPtT** %234, align 8
  %240 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %239, i64 0, i32 0
  %241 = load double, double* %240, align 8
  %242 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %232, i64 0, i32 0
  %243 = load double, double* %242, align 8
  %244 = fcmp ugt double %241, %243
  br i1 %244, label %278, label %245

245:                                              ; preds = %238
  %246 = inttoptr i64 %231 to %class.SkOpPtT*
  %247 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %246, i64 0, i32 0
  %248 = load double, double* %247, align 8
  %249 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 2
  %250 = load %class.SkOpPtT*, %class.SkOpPtT** %249, align 8
  %251 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %250, i64 0, i32 0
  %252 = load double, double* %251, align 8
  %253 = fcmp ugt double %248, %252
  br i1 %253, label %278, label %555

254:                                              ; preds = %224
  %255 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 3
  %256 = bitcast %class.SkOpPtT** %255 to i64**
  %257 = load i64*, i64** %256, align 8
  %258 = load i64, i64* %257, align 8
  %259 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 4
  %260 = load %class.SkOpPtT*, %class.SkOpPtT** %259, align 8
  %261 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %260, i64 0, i32 0
  %262 = load double, double* %261, align 8
  %263 = bitcast double %262 to i64
  %264 = bitcast i64 %258 to double
  %265 = fcmp olt double %262, %264
  %266 = select i1 %265, i64 %263, i64 %258
  %267 = bitcast i64 %266 to double
  %268 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %232, i64 0, i32 0
  %269 = load double, double* %268, align 8
  %270 = fcmp ult double %269, %267
  br i1 %270, label %278, label %271

271:                                              ; preds = %254
  %272 = select i1 %265, i64 %258, i64 %263
  %273 = inttoptr i64 %231 to %class.SkOpPtT*
  %274 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %273, i64 0, i32 0
  %275 = load double, double* %274, align 8
  %276 = bitcast i64 %272 to double
  %277 = fcmp ugt double %275, %276
  br i1 %277, label %278, label %555

278:                                              ; preds = %245, %271, %254, %238, %215
  %279 = icmp eq %class.SkOpPtT* %38, null
  br i1 %279, label %284, label %280

280:                                              ; preds = %278
  %281 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %38, i64 0, i32 4
  %282 = load i8, i8* %281, align 8, !range !2
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %284, label %555

284:                                              ; preds = %280, %278
  %285 = icmp eq %class.SkOpPtT* %216, null
  br i1 %285, label %290, label %286

286:                                              ; preds = %284
  %287 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %216, i64 0, i32 4
  %288 = load i8, i8* %287, align 8, !range !2
  %289 = icmp eq i8 %288, 0
  br i1 %289, label %290, label %555

290:                                              ; preds = %286, %284
  %291 = icmp eq %class.SkOpPtT* %40, null
  br i1 %291, label %296, label %292

292:                                              ; preds = %290
  %293 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %40, i64 0, i32 4
  %294 = load i8, i8* %293, align 8, !range !2
  %295 = icmp eq i8 %294, 0
  br i1 %295, label %296, label %555

296:                                              ; preds = %292, %290
  %297 = icmp eq %class.SkOpPtT* %218, null
  br i1 %297, label %302, label %298

298:                                              ; preds = %296
  %299 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %218, i64 0, i32 4
  %300 = load i8, i8* %299, align 8, !range !2
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %302, label %555

302:                                              ; preds = %298, %296
  br i1 %279, label %303, label %305

303:                                              ; preds = %302
  %304 = call %class.SkOpPtT* @_ZNK11SkOpSegment8existingEdPKS_(%class.SkOpSegment* %1, double %3, %class.SkOpSegment* null) #10
  br label %305

305:                                              ; preds = %302, %303
  %306 = phi %class.SkOpPtT* [ %304, %303 ], [ null, %302 ]
  br i1 %291, label %307, label %309

307:                                              ; preds = %305
  %308 = call %class.SkOpPtT* @_ZNK11SkOpSegment8existingEdPKS_(%class.SkOpSegment* %1, double %4, %class.SkOpSegment* null) #10
  br label %309

309:                                              ; preds = %305, %307
  %310 = phi %class.SkOpPtT* [ %308, %307 ], [ null, %305 ]
  %311 = icmp ne %class.SkOpPtT* %306, null
  %312 = icmp eq %class.SkOpPtT* %306, %310
  %313 = and i1 %311, %312
  br i1 %313, label %555, label %314

314:                                              ; preds = %309
  %315 = icmp eq %class.SkOpPtT* %310, null
  br i1 %315, label %321, label %316

316:                                              ; preds = %314
  %317 = icmp eq %class.SkOpPtT* %310, %38
  br i1 %317, label %555, label %318

318:                                              ; preds = %316
  %319 = select i1 %311, %class.SkOpPtT* %306, %class.SkOpPtT* %38
  %320 = call zeroext i1 @_ZNK7SkOpPtT8containsEPKS_(%class.SkOpPtT* nonnull %310, %class.SkOpPtT* %319) #10
  br i1 %320, label %555, label %321

321:                                              ; preds = %314, %318
  br i1 %285, label %322, label %324

322:                                              ; preds = %321
  %323 = call %class.SkOpPtT* @_ZNK11SkOpSegment8existingEdPKS_(%class.SkOpSegment* %2, double %5, %class.SkOpSegment* null) #10
  br label %324

324:                                              ; preds = %321, %322
  %325 = phi %class.SkOpPtT* [ %323, %322 ], [ null, %321 ]
  br i1 %297, label %326, label %328

326:                                              ; preds = %324
  %327 = call %class.SkOpPtT* @_ZNK11SkOpSegment8existingEdPKS_(%class.SkOpSegment* %2, double %6, %class.SkOpSegment* null) #10
  br label %328

328:                                              ; preds = %324, %326
  %329 = phi %class.SkOpPtT* [ %327, %326 ], [ null, %324 ]
  %330 = icmp ne %class.SkOpPtT* %325, null
  %331 = icmp eq %class.SkOpPtT* %325, %329
  %332 = and i1 %330, %331
  br i1 %332, label %555, label %333

333:                                              ; preds = %328
  br i1 %330, label %334, label %340

334:                                              ; preds = %333
  %335 = icmp eq %class.SkOpPtT* %325, %218
  br i1 %335, label %555, label %336

336:                                              ; preds = %334
  %337 = icmp eq %class.SkOpPtT* %329, null
  %338 = select i1 %337, %class.SkOpPtT* %218, %class.SkOpPtT* %329
  %339 = call zeroext i1 @_ZNK7SkOpPtT8containsEPKS_(%class.SkOpPtT* nonnull %325, %class.SkOpPtT* %338) #10
  br i1 %339, label %555, label %340

340:                                              ; preds = %333, %336
  %341 = icmp eq %class.SkOpPtT* %329, null
  br i1 %341, label %347, label %342

342:                                              ; preds = %340
  %343 = icmp eq %class.SkOpPtT* %329, %216
  br i1 %343, label %555, label %344

344:                                              ; preds = %342
  %345 = select i1 %330, %class.SkOpPtT* %325, %class.SkOpPtT* %216
  %346 = call zeroext i1 @_ZNK7SkOpPtT8containsEPKS_(%class.SkOpPtT* nonnull %329, %class.SkOpPtT* %345) #10
  br i1 %346, label %555, label %347

347:                                              ; preds = %340, %344
  call void @_ZNK15SkOpCoincidence13debugValidateEv(%class.SkOpCoincidence* %0) #10
  %348 = and i1 %43, %220
  br i1 %348, label %381, label %349

349:                                              ; preds = %347
  br i1 %43, label %352, label %350

350:                                              ; preds = %349
  %351 = call %class.SkOpPtT* @_ZN11SkOpSegment4addTEd(%class.SkOpSegment* %1, double %3) #10
  br label %352

352:                                              ; preds = %349, %350
  %353 = phi %class.SkOpPtT* [ %351, %350 ], [ %38, %349 ]
  %354 = icmp eq %class.SkOpPtT* %353, %40
  br i1 %354, label %555, label %355

355:                                              ; preds = %352
  br i1 %285, label %356, label %358

356:                                              ; preds = %355
  %357 = call %class.SkOpPtT* @_ZN11SkOpSegment4addTEd(%class.SkOpSegment* %2, double %5) #10
  br label %358

358:                                              ; preds = %355, %356
  %359 = phi %class.SkOpPtT* [ %357, %356 ], [ %216, %355 ]
  %360 = icmp ne %class.SkOpPtT* %353, null
  %361 = icmp ne %class.SkOpPtT* %359, null
  %362 = and i1 %360, %361
  br i1 %362, label %363, label %555

363:                                              ; preds = %358
  %364 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %353, i64 0, i32 2
  %365 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %364, align 8
  %366 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %359, i64 0, i32 2
  %367 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %366, align 8
  %368 = call zeroext i1 @_ZN12SkOpSpanBase6addOppEPS_(%class.SkOpSpanBase* %365, %class.SkOpSpanBase* %367) #10
  %369 = call %class.SkOpPtT* @_ZNK7SkOpPtT6activeEv(%class.SkOpPtT* nonnull %359) #10
  %370 = icmp eq %class.SkOpPtT* %369, null
  br i1 %370, label %555, label %371

371:                                              ; preds = %363
  br i1 %291, label %376, label %372

372:                                              ; preds = %371
  %373 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %40, i64 0, i32 4
  %374 = load i8, i8* %373, align 8, !range !2
  %375 = icmp eq i8 %374, 0
  br i1 %375, label %376, label %555

376:                                              ; preds = %372, %371
  br i1 %297, label %381, label %377

377:                                              ; preds = %376
  %378 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %218, i64 0, i32 4
  %379 = load i8, i8* %378, align 8, !range !2
  %380 = icmp eq i8 %379, 0
  br i1 %380, label %381, label %555

381:                                              ; preds = %377, %376, %347
  %382 = phi %class.SkOpPtT* [ %38, %347 ], [ %353, %377 ], [ %353, %376 ]
  %383 = phi %class.SkOpPtT* [ %216, %347 ], [ %369, %377 ], [ %369, %376 ]
  %384 = and i1 %45, %222
  br i1 %384, label %399, label %385

385:                                              ; preds = %381
  br i1 %45, label %388, label %386

386:                                              ; preds = %385
  %387 = call %class.SkOpPtT* @_ZN11SkOpSegment4addTEd(%class.SkOpSegment* %1, double %4) #10
  br label %388

388:                                              ; preds = %385, %386
  %389 = phi %class.SkOpPtT* [ %387, %386 ], [ %40, %385 ]
  br i1 %297, label %390, label %392

390:                                              ; preds = %388
  %391 = call %class.SkOpPtT* @_ZN11SkOpSegment4addTEd(%class.SkOpSegment* %2, double %6) #10
  br label %392

392:                                              ; preds = %388, %390
  %393 = phi %class.SkOpPtT* [ %391, %390 ], [ %218, %388 ]
  %394 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %389, i64 0, i32 2
  %395 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %394, align 8
  %396 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %393, i64 0, i32 2
  %397 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %396, align 8
  %398 = call zeroext i1 @_ZN12SkOpSpanBase6addOppEPS_(%class.SkOpSpanBase* %395, %class.SkOpSpanBase* %397) #10
  br i1 %398, label %399, label %555

399:                                              ; preds = %392, %381
  %400 = phi %class.SkOpPtT* [ %40, %381 ], [ %389, %392 ]
  %401 = phi %class.SkOpPtT* [ %218, %381 ], [ %393, %392 ]
  call void @_ZNK15SkOpCoincidence13debugValidateEv(%class.SkOpCoincidence* %0) #10
  %402 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %382, i64 0, i32 4
  %403 = load i8, i8* %402, align 8, !range !2
  %404 = icmp eq i8 %403, 0
  br i1 %404, label %405, label %555

405:                                              ; preds = %399
  %406 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %383, i64 0, i32 4
  %407 = load i8, i8* %406, align 8, !range !2
  %408 = icmp eq i8 %407, 0
  br i1 %408, label %409, label %555

409:                                              ; preds = %405
  %410 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %400, i64 0, i32 4
  %411 = load i8, i8* %410, align 8, !range !2
  %412 = icmp eq i8 %411, 0
  br i1 %412, label %413, label %555

413:                                              ; preds = %409
  %414 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %401, i64 0, i32 4
  %415 = load i8, i8* %414, align 8, !range !2
  %416 = icmp eq i8 %415, 0
  br i1 %416, label %417, label %555

417:                                              ; preds = %413
  %418 = call zeroext i1 @_ZNK7SkOpPtT8containsEPKS_(%class.SkOpPtT* nonnull %382, %class.SkOpPtT* %400) #10
  br i1 %418, label %555, label %419

419:                                              ; preds = %417
  %420 = call zeroext i1 @_ZNK7SkOpPtT8containsEPKS_(%class.SkOpPtT* nonnull %383, %class.SkOpPtT* %401) #10
  br i1 %420, label %555, label %421

421:                                              ; preds = %419
  br i1 %42, label %422, label %551

422:                                              ; preds = %421
  %423 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 1
  %424 = load %class.SkOpPtT*, %class.SkOpPtT** %423, align 8
  %425 = call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %424) #10
  %426 = icmp eq %class.SkOpSegment* %425, %1
  br i1 %426, label %427, label %485

427:                                              ; preds = %422
  %428 = load %class.SkOpPtT*, %class.SkOpPtT** %423, align 8
  %429 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %428, i64 0, i32 0
  %430 = load double, double* %429, align 8
  %431 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %382, i64 0, i32 0
  %432 = load double, double* %431, align 8
  %433 = fcmp ogt double %430, %432
  br i1 %433, label %450, label %434

434:                                              ; preds = %427
  %435 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 3
  %436 = load %class.SkOpPtT*, %class.SkOpPtT** %435, align 8
  %437 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %436, i64 0, i32 0
  %438 = load double, double* %437, align 8
  %439 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 4
  %440 = load %class.SkOpPtT*, %class.SkOpPtT** %439, align 8
  %441 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %440, i64 0, i32 0
  %442 = load double, double* %441, align 8
  %443 = fcmp ogt double %438, %442
  %444 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %383, i64 0, i32 0
  %445 = load double, double* %444, align 8
  br i1 %443, label %446, label %448

446:                                              ; preds = %434
  %447 = fcmp olt double %438, %445
  br i1 %447, label %450, label %454

448:                                              ; preds = %434
  %449 = fcmp ogt double %438, %445
  br i1 %449, label %450, label %454

450:                                              ; preds = %448, %446, %427
  store %class.SkOpPtT* %382, %class.SkOpPtT** %423, align 8
  %451 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %382, i64 0, i32 6
  store i8 1, i8* %451, align 2
  %452 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 3
  store %class.SkOpPtT* %383, %class.SkOpPtT** %452, align 8
  %453 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %383, i64 0, i32 6
  store i8 1, i8* %453, align 2
  br label %454

454:                                              ; preds = %450, %448, %446
  %455 = phi i8 [ 1, %450 ], [ 0, %446 ], [ 0, %448 ]
  %456 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 2
  %457 = load %class.SkOpPtT*, %class.SkOpPtT** %456, align 8
  %458 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %457, i64 0, i32 0
  %459 = load double, double* %458, align 8
  %460 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %400, i64 0, i32 0
  %461 = load double, double* %460, align 8
  %462 = fcmp olt double %459, %461
  br i1 %462, label %479, label %463

463:                                              ; preds = %454
  %464 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 3
  %465 = load %class.SkOpPtT*, %class.SkOpPtT** %464, align 8
  %466 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %465, i64 0, i32 0
  %467 = load double, double* %466, align 8
  %468 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 4
  %469 = load %class.SkOpPtT*, %class.SkOpPtT** %468, align 8
  %470 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %469, i64 0, i32 0
  %471 = load double, double* %470, align 8
  %472 = fcmp ogt double %467, %471
  %473 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %401, i64 0, i32 0
  %474 = load double, double* %473, align 8
  br i1 %472, label %475, label %477

475:                                              ; preds = %463
  %476 = fcmp ogt double %471, %474
  br i1 %476, label %479, label %483

477:                                              ; preds = %463
  %478 = fcmp olt double %471, %474
  br i1 %478, label %479, label %483

479:                                              ; preds = %454, %475, %477
  store %class.SkOpPtT* %400, %class.SkOpPtT** %456, align 8
  %480 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %400, i64 0, i32 6
  store i8 1, i8* %480, align 2
  %481 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 4
  store %class.SkOpPtT* %401, %class.SkOpPtT** %481, align 8
  %482 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %401, i64 0, i32 6
  store i8 1, i8* %482, align 2
  call void @_ZNK15SkOpCoincidence13debugValidateEv(%class.SkOpCoincidence* %0) #10
  br label %554

483:                                              ; preds = %475, %477
  %484 = icmp eq i8 %455, 0
  call void @_ZNK15SkOpCoincidence13debugValidateEv(%class.SkOpCoincidence* %0) #10
  br i1 %484, label %555, label %554

485:                                              ; preds = %422
  %486 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %383, i64 0, i32 0
  %487 = load double, double* %486, align 8
  %488 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %401, i64 0, i32 0
  %489 = load double, double* %488, align 8
  %490 = fcmp ogt double %487, %489
  br i1 %490, label %491, label %492

491:                                              ; preds = %485
  br label %492

492:                                              ; preds = %491, %485
  %493 = phi %class.SkOpPtT* [ %382, %491 ], [ %400, %485 ]
  %494 = phi %class.SkOpPtT* [ %400, %491 ], [ %382, %485 ]
  %495 = phi %class.SkOpPtT* [ %383, %491 ], [ %401, %485 ]
  %496 = phi %class.SkOpPtT* [ %401, %491 ], [ %383, %485 ]
  %497 = phi double [ %489, %491 ], [ %487, %485 ]
  %498 = load %class.SkOpPtT*, %class.SkOpPtT** %423, align 8
  %499 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %498, i64 0, i32 0
  %500 = load double, double* %499, align 8
  %501 = fcmp ogt double %500, %497
  br i1 %501, label %518, label %502

502:                                              ; preds = %492
  %503 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 3
  %504 = load %class.SkOpPtT*, %class.SkOpPtT** %503, align 8
  %505 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %504, i64 0, i32 0
  %506 = load double, double* %505, align 8
  %507 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 4
  %508 = load %class.SkOpPtT*, %class.SkOpPtT** %507, align 8
  %509 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %508, i64 0, i32 0
  %510 = load double, double* %509, align 8
  %511 = fcmp ogt double %506, %510
  %512 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %494, i64 0, i32 0
  %513 = load double, double* %512, align 8
  br i1 %511, label %514, label %516

514:                                              ; preds = %502
  %515 = fcmp olt double %506, %513
  br i1 %515, label %518, label %522

516:                                              ; preds = %502
  %517 = fcmp ogt double %506, %513
  br i1 %517, label %518, label %522

518:                                              ; preds = %516, %514, %492
  store %class.SkOpPtT* %496, %class.SkOpPtT** %423, align 8
  %519 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %496, i64 0, i32 6
  store i8 1, i8* %519, align 2
  %520 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 3
  store %class.SkOpPtT* %494, %class.SkOpPtT** %520, align 8
  %521 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %494, i64 0, i32 6
  store i8 1, i8* %521, align 2
  br label %522

522:                                              ; preds = %518, %516, %514
  %523 = phi i8 [ 1, %518 ], [ 0, %514 ], [ 0, %516 ]
  %524 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 2
  %525 = load %class.SkOpPtT*, %class.SkOpPtT** %524, align 8
  %526 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %525, i64 0, i32 0
  %527 = load double, double* %526, align 8
  %528 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %495, i64 0, i32 0
  %529 = load double, double* %528, align 8
  %530 = fcmp olt double %527, %529
  br i1 %530, label %547, label %531

531:                                              ; preds = %522
  %532 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 3
  %533 = load %class.SkOpPtT*, %class.SkOpPtT** %532, align 8
  %534 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %533, i64 0, i32 0
  %535 = load double, double* %534, align 8
  %536 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 4
  %537 = load %class.SkOpPtT*, %class.SkOpPtT** %536, align 8
  %538 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %537, i64 0, i32 0
  %539 = load double, double* %538, align 8
  %540 = fcmp ogt double %535, %539
  %541 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %493, i64 0, i32 0
  %542 = load double, double* %541, align 8
  br i1 %540, label %543, label %545

543:                                              ; preds = %531
  %544 = fcmp ogt double %539, %542
  br i1 %544, label %547, label %552

545:                                              ; preds = %531
  %546 = fcmp olt double %539, %542
  br i1 %546, label %547, label %552

547:                                              ; preds = %522, %543, %545
  store %class.SkOpPtT* %495, %class.SkOpPtT** %524, align 8
  %548 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %495, i64 0, i32 6
  store i8 1, i8* %548, align 2
  %549 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 4
  store %class.SkOpPtT* %493, %class.SkOpPtT** %549, align 8
  %550 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %493, i64 0, i32 6
  store i8 1, i8* %550, align 2
  call void @_ZNK15SkOpCoincidence13debugValidateEv(%class.SkOpCoincidence* %0) #10
  br label %554

551:                                              ; preds = %421
  call void @_ZN15SkOpCoincidence3addEP7SkOpPtTS1_S1_S1_(%class.SkOpCoincidence* %0, %class.SkOpPtT* nonnull %382, %class.SkOpPtT* %400, %class.SkOpPtT* nonnull %383, %class.SkOpPtT* %401) #10
  call void @_ZNK15SkOpCoincidence13debugValidateEv(%class.SkOpCoincidence* %0) #10
  br label %554

552:                                              ; preds = %545, %543
  %553 = icmp eq i8 %523, 0
  call void @_ZNK15SkOpCoincidence13debugValidateEv(%class.SkOpCoincidence* %0) #10
  br i1 %553, label %555, label %554

554:                                              ; preds = %483, %552, %479, %547, %551
  store i8 1, i8* %7, align 1
  br label %555

555:                                              ; preds = %409, %405, %399, %179, %205, %245, %271, %483, %552, %377, %372, %363, %328, %309, %298, %292, %286, %280, %212, %8, %392, %417, %358, %352, %342, %334, %316, %419, %344, %336, %318, %554, %413, %22, %16
  %556 = phi i1 [ false, %8 ], [ true, %16 ], [ true, %22 ], [ false, %212 ], [ true, %205 ], [ true, %179 ], [ true, %271 ], [ false, %309 ], [ false, %413 ], [ false, %409 ], [ false, %405 ], [ false, %399 ], [ false, %328 ], [ true, %554 ], [ true, %552 ], [ true, %245 ], [ false, %280 ], [ false, %286 ], [ false, %292 ], [ false, %298 ], [ false, %318 ], [ false, %336 ], [ false, %344 ], [ false, %419 ], [ true, %483 ], [ false, %316 ], [ false, %334 ], [ false, %342 ], [ false, %358 ], [ false, %363 ], [ true, %352 ], [ false, %417 ], [ false, %372 ], [ false, %377 ], [ false, %392 ]
  %557 = bitcast %class.SkTDArray* %9 to i8**
  %558 = load i8*, i8** %557, align 8
  call void @_Z7sk_freePv(i8* %558) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret i1 %556
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkOpCoincidence16addEndMovedSpansEPK7SkOpPtT(%class.SkOpCoincidence*, %class.SkOpPtT* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %1, i64 0, i32 2
  %4 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %3, align 8
  %5 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %4, i64 0, i32 0, i32 0
  %6 = load double, double* %5, align 8
  %7 = fcmp une double %6, 1.000000e+00
  %8 = bitcast %class.SkOpSpanBase* %4 to %class.SkOpSpan*
  %9 = icmp ne %class.SkOpSpanBase* %4, null
  %10 = and i1 %9, %7
  br i1 %10, label %11, label %41

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %4, i64 0, i32 4
  %13 = load %class.SkOpSpan*, %class.SkOpSpan** %12, align 8
  %14 = icmp eq %class.SkOpSpan* %13, null
  br i1 %14, label %41, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %13, i64 0, i32 7
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %13, i64 0, i32 8
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %15, %19
  %24 = bitcast %class.SkOpSpan* %13 to %class.SkOpSpanBase*
  %25 = tail call zeroext i1 @_ZN15SkOpCoincidence16addEndMovedSpansEPK8SkOpSpanPK12SkOpSpanBase(%class.SkOpCoincidence* %0, %class.SkOpSpan* nonnull %8, %class.SkOpSpanBase* nonnull %24)
  br i1 %25, label %26, label %41

26:                                               ; preds = %23, %19
  %27 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %4, i64 1, i32 0, i32 4
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %26
  %32 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %4, i64 1, i32 0, i32 7, i64 1
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %26, %31
  %37 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %4, i64 1, i32 0, i32 2
  %38 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %37, align 8
  %39 = tail call zeroext i1 @_ZN15SkOpCoincidence16addEndMovedSpansEPK8SkOpSpanPK12SkOpSpanBase(%class.SkOpCoincidence* %0, %class.SkOpSpan* nonnull %8, %class.SkOpSpanBase* %38)
  br i1 %39, label %40, label %41

40:                                               ; preds = %36, %31
  br label %41

41:                                               ; preds = %11, %40, %23, %36, %2
  %42 = phi i1 [ false, %2 ], [ true, %40 ], [ false, %11 ], [ false, %23 ], [ false, %36 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkOpCoincidence16addEndMovedSpansEv(%class.SkOpCoincidence*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %3 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %2, align 8
  %4 = icmp eq %class.SkCoincidentSpans* %3, null
  br i1 %4, label %264, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 1
  store %class.SkCoincidentSpans* %3, %class.SkCoincidentSpans** %6, align 8
  store %class.SkCoincidentSpans* null, %class.SkCoincidentSpans** %2, align 8
  br label %7

7:                                                ; preds = %216, %5
  %8 = phi %class.SkCoincidentSpans* [ %3, %5 ], [ %218, %216 ]
  %9 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 1
  %10 = load %class.SkOpPtT*, %class.SkOpPtT** %9, align 8
  %11 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 3
  %12 = load %class.SkOpPtT*, %class.SkOpPtT** %11, align 8
  %13 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %10, i64 0, i32 1, i32 0
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %12, i64 0, i32 1, i32 0
  %16 = load float, float* %15, align 4
  %17 = fcmp une float %14, %16
  br i1 %17, label %24, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %10, i64 0, i32 1, i32 1
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %12, i64 0, i32 1, i32 1
  %22 = load float, float* %21, align 4
  %23 = fcmp une float %20, %22
  br i1 %23, label %24, label %113

24:                                               ; preds = %7, %18
  %25 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %10, i64 0, i32 0
  %26 = load double, double* %25, align 8
  %27 = fcmp une double %26, 1.000000e+00
  br i1 %27, label %28, label %264

28:                                               ; preds = %24
  %29 = fcmp oeq double %26, 0.000000e+00
  %30 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %12, i64 0, i32 0
  %31 = load double, double* %30, align 8
  %32 = fcmp oeq double %31, 0.000000e+00
  %33 = fcmp oeq double %31, 1.000000e+00
  %34 = or i1 %32, %33
  br i1 %29, label %35, label %74

35:                                               ; preds = %28
  br i1 %34, label %113, label %36

36:                                               ; preds = %35
  %37 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %12, i64 0, i32 2
  %38 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %37, align 8
  %39 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %38, i64 0, i32 0, i32 0
  %40 = load double, double* %39, align 8
  %41 = fcmp une double %40, 1.000000e+00
  %42 = bitcast %class.SkOpSpanBase* %38 to %class.SkOpSpan*
  %43 = icmp ne %class.SkOpSpanBase* %38, null
  %44 = and i1 %43, %41
  br i1 %44, label %45, label %264

45:                                               ; preds = %36
  %46 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %38, i64 0, i32 4
  %47 = load %class.SkOpSpan*, %class.SkOpSpan** %46, align 8
  %48 = icmp eq %class.SkOpSpan* %47, null
  br i1 %48, label %264, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %47, i64 0, i32 7
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %47, i64 0, i32 8
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %53, %49
  %58 = bitcast %class.SkOpSpan* %47 to %class.SkOpSpanBase*
  %59 = tail call zeroext i1 @_ZN15SkOpCoincidence16addEndMovedSpansEPK8SkOpSpanPK12SkOpSpanBase(%class.SkOpCoincidence* %0, %class.SkOpSpan* nonnull %42, %class.SkOpSpanBase* nonnull %58) #10
  br i1 %59, label %60, label %264

60:                                               ; preds = %57, %53
  %61 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %38, i64 1, i32 0, i32 4
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %70

65:                                               ; preds = %60
  %66 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %38, i64 1, i32 0, i32 7, i64 1
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %113, label %70

70:                                               ; preds = %65, %60
  %71 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %38, i64 1, i32 0, i32 2
  %72 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %71, align 8
  %73 = tail call zeroext i1 @_ZN15SkOpCoincidence16addEndMovedSpansEPK8SkOpSpanPK12SkOpSpanBase(%class.SkOpCoincidence* %0, %class.SkOpSpan* nonnull %42, %class.SkOpSpanBase* %72) #10
  br i1 %73, label %113, label %264

74:                                               ; preds = %28
  br i1 %34, label %75, label %113

75:                                               ; preds = %74
  %76 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %10, i64 0, i32 2
  %77 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %76, align 8
  %78 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %77, i64 0, i32 0, i32 0
  %79 = load double, double* %78, align 8
  %80 = fcmp une double %79, 1.000000e+00
  %81 = bitcast %class.SkOpSpanBase* %77 to %class.SkOpSpan*
  %82 = icmp ne %class.SkOpSpanBase* %77, null
  %83 = and i1 %82, %80
  br i1 %83, label %84, label %264

84:                                               ; preds = %75
  %85 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %77, i64 0, i32 4
  %86 = load %class.SkOpSpan*, %class.SkOpSpan** %85, align 8
  %87 = icmp eq %class.SkOpSpan* %86, null
  br i1 %87, label %264, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %86, i64 0, i32 7
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %88
  %93 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %86, i64 0, i32 8
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %99, label %96

96:                                               ; preds = %92, %88
  %97 = bitcast %class.SkOpSpan* %86 to %class.SkOpSpanBase*
  %98 = tail call zeroext i1 @_ZN15SkOpCoincidence16addEndMovedSpansEPK8SkOpSpanPK12SkOpSpanBase(%class.SkOpCoincidence* %0, %class.SkOpSpan* nonnull %81, %class.SkOpSpanBase* nonnull %97) #10
  br i1 %98, label %99, label %264

99:                                               ; preds = %96, %92
  %100 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %77, i64 1, i32 0, i32 4
  %101 = bitcast i8* %100 to i32*
  %102 = load i32, i32* %101, align 8
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %109

104:                                              ; preds = %99
  %105 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %77, i64 1, i32 0, i32 7, i64 1
  %106 = bitcast i8* %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %113, label %109

109:                                              ; preds = %104, %99
  %110 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %77, i64 1, i32 0, i32 2
  %111 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %110, align 8
  %112 = tail call zeroext i1 @_ZN15SkOpCoincidence16addEndMovedSpansEPK8SkOpSpanPK12SkOpSpanBase(%class.SkOpCoincidence* %0, %class.SkOpSpan* nonnull %81, %class.SkOpSpanBase* %111) #10
  br i1 %112, label %113, label %264

113:                                              ; preds = %109, %104, %70, %65, %74, %35, %18
  %114 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 2
  %115 = load %class.SkOpPtT*, %class.SkOpPtT** %114, align 8
  %116 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 4
  %117 = load %class.SkOpPtT*, %class.SkOpPtT** %116, align 8
  %118 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %115, i64 0, i32 1, i32 0
  %119 = load float, float* %118, align 4
  %120 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %117, i64 0, i32 1, i32 0
  %121 = load float, float* %120, align 4
  %122 = fcmp une float %119, %121
  br i1 %122, label %129, label %123

123:                                              ; preds = %113
  %124 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %115, i64 0, i32 1, i32 1
  %125 = load float, float* %124, align 4
  %126 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %117, i64 0, i32 1, i32 1
  %127 = load float, float* %126, align 4
  %128 = fcmp une float %125, %127
  br i1 %128, label %129, label %216

129:                                              ; preds = %113, %123
  %130 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %115, i64 0, i32 0
  %131 = load double, double* %130, align 8
  %132 = fcmp oeq double %131, 1.000000e+00
  %133 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %117, i64 0, i32 0
  %134 = load double, double* %133, align 8
  %135 = fcmp oeq double %134, 0.000000e+00
  %136 = fcmp oeq double %134, 1.000000e+00
  %137 = or i1 %135, %136
  br i1 %132, label %138, label %177

138:                                              ; preds = %129
  br i1 %137, label %216, label %139

139:                                              ; preds = %138
  %140 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %117, i64 0, i32 2
  %141 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %140, align 8
  %142 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %141, i64 0, i32 0, i32 0
  %143 = load double, double* %142, align 8
  %144 = fcmp une double %143, 1.000000e+00
  %145 = bitcast %class.SkOpSpanBase* %141 to %class.SkOpSpan*
  %146 = icmp ne %class.SkOpSpanBase* %141, null
  %147 = and i1 %146, %144
  br i1 %147, label %148, label %264

148:                                              ; preds = %139
  %149 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %141, i64 0, i32 4
  %150 = load %class.SkOpSpan*, %class.SkOpSpan** %149, align 8
  %151 = icmp eq %class.SkOpSpan* %150, null
  br i1 %151, label %264, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %150, i64 0, i32 7
  %154 = load i32, i32* %153, align 8
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %160

156:                                              ; preds = %152
  %157 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %150, i64 0, i32 8
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %163, label %160

160:                                              ; preds = %156, %152
  %161 = bitcast %class.SkOpSpan* %150 to %class.SkOpSpanBase*
  %162 = tail call zeroext i1 @_ZN15SkOpCoincidence16addEndMovedSpansEPK8SkOpSpanPK12SkOpSpanBase(%class.SkOpCoincidence* %0, %class.SkOpSpan* nonnull %145, %class.SkOpSpanBase* nonnull %161) #10
  br i1 %162, label %163, label %264

163:                                              ; preds = %160, %156
  %164 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %141, i64 1, i32 0, i32 4
  %165 = bitcast i8* %164 to i32*
  %166 = load i32, i32* %165, align 8
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %173

168:                                              ; preds = %163
  %169 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %141, i64 1, i32 0, i32 7, i64 1
  %170 = bitcast i8* %169 to i32*
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %216, label %173

173:                                              ; preds = %168, %163
  %174 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %141, i64 1, i32 0, i32 2
  %175 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %174, align 8
  %176 = tail call zeroext i1 @_ZN15SkOpCoincidence16addEndMovedSpansEPK8SkOpSpanPK12SkOpSpanBase(%class.SkOpCoincidence* %0, %class.SkOpSpan* nonnull %145, %class.SkOpSpanBase* %175) #10
  br i1 %176, label %216, label %264

177:                                              ; preds = %129
  br i1 %137, label %178, label %216

178:                                              ; preds = %177
  %179 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %115, i64 0, i32 2
  %180 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %179, align 8
  %181 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %180, i64 0, i32 0, i32 0
  %182 = load double, double* %181, align 8
  %183 = fcmp une double %182, 1.000000e+00
  %184 = bitcast %class.SkOpSpanBase* %180 to %class.SkOpSpan*
  %185 = icmp ne %class.SkOpSpanBase* %180, null
  %186 = and i1 %185, %183
  br i1 %186, label %187, label %264

187:                                              ; preds = %178
  %188 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %180, i64 0, i32 4
  %189 = load %class.SkOpSpan*, %class.SkOpSpan** %188, align 8
  %190 = icmp eq %class.SkOpSpan* %189, null
  br i1 %190, label %264, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %189, i64 0, i32 7
  %193 = load i32, i32* %192, align 8
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %199

195:                                              ; preds = %191
  %196 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %189, i64 0, i32 8
  %197 = load i32, i32* %196, align 4
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %202, label %199

199:                                              ; preds = %195, %191
  %200 = bitcast %class.SkOpSpan* %189 to %class.SkOpSpanBase*
  %201 = tail call zeroext i1 @_ZN15SkOpCoincidence16addEndMovedSpansEPK8SkOpSpanPK12SkOpSpanBase(%class.SkOpCoincidence* %0, %class.SkOpSpan* nonnull %184, %class.SkOpSpanBase* nonnull %200) #10
  br i1 %201, label %202, label %264

202:                                              ; preds = %199, %195
  %203 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %180, i64 1, i32 0, i32 4
  %204 = bitcast i8* %203 to i32*
  %205 = load i32, i32* %204, align 8
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %212

207:                                              ; preds = %202
  %208 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %180, i64 1, i32 0, i32 7, i64 1
  %209 = bitcast i8* %208 to i32*
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %216, label %212

212:                                              ; preds = %207, %202
  %213 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %180, i64 1, i32 0, i32 2
  %214 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %213, align 8
  %215 = tail call zeroext i1 @_ZN15SkOpCoincidence16addEndMovedSpansEPK8SkOpSpanPK12SkOpSpanBase(%class.SkOpCoincidence* %0, %class.SkOpSpan* nonnull %184, %class.SkOpSpanBase* %214) #10
  br i1 %215, label %216, label %264

216:                                              ; preds = %212, %207, %173, %168, %177, %138, %123
  %217 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 0
  %218 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %217, align 8
  %219 = icmp eq %class.SkCoincidentSpans* %218, null
  br i1 %219, label %220, label %7

220:                                              ; preds = %216, %220
  %221 = phi %class.SkCoincidentSpans** [ %224, %220 ], [ %2, %216 ]
  %222 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %221, align 8
  %223 = icmp eq %class.SkCoincidentSpans* %222, null
  %224 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %222, i64 0, i32 0
  br i1 %223, label %225, label %220

225:                                              ; preds = %220
  %226 = bitcast %class.SkCoincidentSpans** %6 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = bitcast %class.SkCoincidentSpans** %221 to i64*
  store i64 %227, i64* %228, align 8
  store %class.SkCoincidentSpans* null, %class.SkCoincidentSpans** %6, align 8
  %229 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %2, align 8
  %230 = icmp eq %class.SkCoincidentSpans* %229, null
  br i1 %230, label %264, label %231

231:                                              ; preds = %225, %260
  %232 = phi %class.SkCoincidentSpans* [ %261, %260 ], [ %229, %225 ]
  %233 = phi %class.SkCoincidentSpans** [ %262, %260 ], [ %2, %225 ]
  %234 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %232, i64 0, i32 1
  %235 = load %class.SkOpPtT*, %class.SkOpPtT** %234, align 8
  %236 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %235) #10
  %237 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %236, i64 0, i32 9
  %238 = load i32, i32* %237, align 8
  %239 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %236, i64 0, i32 8
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %238, %240
  br i1 %241, label %251, label %242

242:                                              ; preds = %231
  %243 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %232, i64 0, i32 3
  %244 = load %class.SkOpPtT*, %class.SkOpPtT** %243, align 8
  %245 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %244) #10
  %246 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %245, i64 0, i32 9
  %247 = load i32, i32* %246, align 8
  %248 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %245, i64 0, i32 8
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %247, %249
  br i1 %250, label %251, label %256

251:                                              ; preds = %242, %231
  %252 = bitcast %class.SkCoincidentSpans* %232 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = bitcast %class.SkCoincidentSpans** %233 to i64*
  store i64 %253, i64* %254, align 8
  %255 = inttoptr i64 %253 to %class.SkCoincidentSpans*
  br label %260

256:                                              ; preds = %242
  %257 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %233, align 8
  %258 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %257, i64 0, i32 0
  %259 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %258, align 8
  br label %260

260:                                              ; preds = %256, %251
  %261 = phi %class.SkCoincidentSpans* [ %255, %251 ], [ %259, %256 ]
  %262 = phi %class.SkCoincidentSpans** [ %233, %251 ], [ %258, %256 ]
  %263 = icmp eq %class.SkCoincidentSpans* %261, null
  br i1 %263, label %264, label %231

264:                                              ; preds = %212, %199, %187, %178, %173, %160, %148, %139, %109, %96, %84, %75, %70, %57, %45, %36, %24, %260, %225, %1
  %265 = phi i1 [ true, %1 ], [ true, %225 ], [ true, %260 ], [ false, %24 ], [ false, %36 ], [ false, %45 ], [ false, %57 ], [ false, %70 ], [ false, %75 ], [ false, %84 ], [ false, %96 ], [ false, %109 ], [ false, %139 ], [ false, %148 ], [ false, %160 ], [ false, %173 ], [ false, %178 ], [ false, %187 ], [ false, %199 ], [ false, %212 ]
  ret i1 %265
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkOpCoincidence11restoreHeadEv(%class.SkOpCoincidence* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  br label %3

3:                                                ; preds = %3, %1
  %4 = phi %class.SkCoincidentSpans** [ %2, %1 ], [ %7, %3 ]
  %5 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %4, align 8
  %6 = icmp eq %class.SkCoincidentSpans* %5, null
  %7 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %5, i64 0, i32 0
  br i1 %6, label %8, label %3

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 1
  %10 = bitcast %class.SkCoincidentSpans** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %class.SkCoincidentSpans** %4 to i64*
  store i64 %11, i64* %12, align 8
  store %class.SkCoincidentSpans* null, %class.SkCoincidentSpans** %9, align 8
  %13 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %2, align 8
  %14 = icmp eq %class.SkCoincidentSpans* %13, null
  br i1 %14, label %48, label %15

15:                                               ; preds = %8, %44
  %16 = phi %class.SkCoincidentSpans* [ %45, %44 ], [ %13, %8 ]
  %17 = phi %class.SkCoincidentSpans** [ %46, %44 ], [ %2, %8 ]
  %18 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %16, i64 0, i32 1
  %19 = load %class.SkOpPtT*, %class.SkOpPtT** %18, align 8
  %20 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %19) #10
  %21 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %20, i64 0, i32 9
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %20, i64 0, i32 8
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %35, label %26

26:                                               ; preds = %15
  %27 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %16, i64 0, i32 3
  %28 = load %class.SkOpPtT*, %class.SkOpPtT** %27, align 8
  %29 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %28) #10
  %30 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %29, i64 0, i32 9
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %29, i64 0, i32 8
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %35, label %40

35:                                               ; preds = %26, %15
  %36 = bitcast %class.SkCoincidentSpans* %16 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %class.SkCoincidentSpans** %17 to i64*
  store i64 %37, i64* %38, align 8
  %39 = inttoptr i64 %37 to %class.SkCoincidentSpans*
  br label %44

40:                                               ; preds = %26
  %41 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %17, align 8
  %42 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %41, i64 0, i32 0
  %43 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %42, align 8
  br label %44

44:                                               ; preds = %40, %35
  %45 = phi %class.SkCoincidentSpans* [ %39, %35 ], [ %43, %40 ]
  %46 = phi %class.SkCoincidentSpans** [ %17, %35 ], [ %42, %40 ]
  %47 = icmp eq %class.SkCoincidentSpans* %45, null
  br i1 %47, label %48, label %15

48:                                               ; preds = %44, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkOpCoincidence11addExpandedEv(%class.SkOpCoincidence* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %4 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %3, align 8
  %5 = icmp eq %class.SkCoincidentSpans* %4, null
  br i1 %5, label %210, label %6

6:                                                ; preds = %1, %206
  %7 = phi %class.SkCoincidentSpans* [ %208, %206 ], [ %4, %1 ]
  %8 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %7, i64 0, i32 1
  %9 = load %class.SkOpPtT*, %class.SkOpPtT** %8, align 8
  %10 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %7, i64 0, i32 3
  %11 = load %class.SkOpPtT*, %class.SkOpPtT** %10, align 8
  %12 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %9, i64 0, i32 0
  %13 = load double, double* %12, align 8
  %14 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %11, i64 0, i32 0
  %15 = load double, double* %14, align 8
  %16 = call zeroext i1 @_ZNK7SkOpPtT8containsEPKS_(%class.SkOpPtT* %9, %class.SkOpPtT* %11) #10
  br i1 %16, label %17, label %210

17:                                               ; preds = %6
  %18 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %9, i64 0, i32 2
  %19 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %18, align 8
  %20 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %11, i64 0, i32 2
  %21 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %20, align 8
  %22 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %7, i64 0, i32 2
  %23 = load %class.SkOpPtT*, %class.SkOpPtT** %22, align 8
  %24 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %23, i64 0, i32 2
  %25 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %24, align 8
  %26 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %7, i64 0, i32 4
  %27 = load %class.SkOpPtT*, %class.SkOpPtT** %26, align 8
  %28 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %27, i64 0, i32 2
  %29 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %28, align 8
  %30 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %29, i64 0, i32 0, i32 4
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %210

33:                                               ; preds = %17
  %34 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %19, i64 0, i32 0, i32 0
  %35 = load double, double* %34, align 8
  %36 = fcmp une double %35, 1.000000e+00
  %37 = icmp ne %class.SkOpSpanBase* %19, null
  %38 = and i1 %37, %36
  br i1 %38, label %39, label %210

39:                                               ; preds = %33
  %40 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %19, i64 1, i32 0, i32 2
  %41 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %40, align 8
  %42 = load %class.SkOpPtT*, %class.SkOpPtT** %10, align 8
  %43 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %42, i64 0, i32 0
  %44 = load double, double* %43, align 8
  %45 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %27, i64 0, i32 0
  %46 = load double, double* %45, align 8
  %47 = fcmp ogt double %44, %46
  br i1 %47, label %54, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %21, i64 0, i32 0, i32 0
  %50 = load double, double* %49, align 8
  %51 = fcmp oeq double %50, 1.000000e+00
  %52 = icmp eq %class.SkOpSpanBase* %21, null
  %53 = or i1 %52, %51
  br i1 %53, label %210, label %57

54:                                               ; preds = %39
  %55 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %21, i64 0, i32 4
  %56 = bitcast %class.SkOpSpan** %55 to %class.SkOpSpanBase**
  br label %59

57:                                               ; preds = %48
  %58 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %21, i64 1, i32 0, i32 2
  br label %59

59:                                               ; preds = %57, %54
  %60 = phi %class.SkOpSpanBase** [ %56, %54 ], [ %58, %57 ]
  %61 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %60, align 8
  %62 = icmp eq %class.SkOpSpanBase* %61, null
  br i1 %62, label %210, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %19, i64 0, i32 1
  %65 = load %class.SkOpSegment*, %class.SkOpSegment** %64, align 8
  %66 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %21, i64 0, i32 1
  %67 = load %class.SkOpSegment*, %class.SkOpSegment** %66, align 8
  %68 = icmp eq %class.SkOpSpanBase* %41, %25
  %69 = icmp eq %class.SkOpSpanBase* %61, %29
  %70 = and i1 %69, %68
  br i1 %70, label %206, label %71

71:                                               ; preds = %63, %200
  %72 = phi double [ %175, %200 ], [ %13, %63 ]
  %73 = phi double [ %202, %200 ], [ %15, %63 ]
  %74 = phi %class.SkOpSpanBase* [ %162, %200 ], [ %25, %63 ]
  %75 = phi %class.SkOpSpanBase* [ %201, %200 ], [ %61, %63 ]
  %76 = phi %class.SkOpSpanBase* [ %174, %200 ], [ %41, %63 ]
  %77 = phi %class.SkOpSpanBase* [ %159, %200 ], [ %29, %63 ]
  %78 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %76, i64 0, i32 0
  %79 = call %class.SkOpPtT* @_ZNK7SkOpPtT8containsEPK11SkOpSegment(%class.SkOpPtT* %78, %class.SkOpSegment* %67) #10
  %80 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %75, i64 0, i32 0
  %81 = call %class.SkOpPtT* @_ZNK7SkOpPtT8containsEPK11SkOpSegment(%class.SkOpPtT* %80, %class.SkOpSegment* %65) #10
  %82 = icmp ne %class.SkOpPtT* %79, null
  %83 = icmp ne %class.SkOpPtT* %81, null
  %84 = and i1 %82, %83
  br i1 %84, label %158, label %85

85:                                               ; preds = %71
  br i1 %82, label %86, label %89

86:                                               ; preds = %85
  %87 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %76, i64 0, i32 0, i32 0
  %88 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %79, i64 0, i32 0
  br label %114

89:                                               ; preds = %85
  br i1 %83, label %90, label %93

90:                                               ; preds = %89
  %91 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %81, i64 0, i32 0
  %92 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %75, i64 0, i32 0, i32 0
  br label %114

93:                                               ; preds = %89, %106
  %94 = phi %class.SkOpSpanBase* [ %102, %106 ], [ %76, %89 ]
  %95 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %94, i64 0, i32 0, i32 0
  %96 = load double, double* %95, align 8
  %97 = fcmp une double %96, 1.000000e+00
  %98 = icmp ne %class.SkOpSpanBase* %94, null
  %99 = and i1 %98, %97
  br i1 %99, label %100, label %210

100:                                              ; preds = %93
  %101 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %94, i64 1, i32 0, i32 2
  %102 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %101, align 8
  %103 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %102, i64 0, i32 0
  %104 = call %class.SkOpPtT* @_ZNK7SkOpPtT8containsEPK11SkOpSegment(%class.SkOpPtT* %103, %class.SkOpSegment* %67) #10
  %105 = icmp eq %class.SkOpPtT* %104, null
  br i1 %105, label %106, label %111

106:                                              ; preds = %100
  %107 = load %class.SkOpPtT*, %class.SkOpPtT** %22, align 8
  %108 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %107, i64 0, i32 2
  %109 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %108, align 8
  %110 = icmp eq %class.SkOpSpanBase* %102, %109
  br i1 %110, label %210, label %93

111:                                              ; preds = %100
  %112 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %102, i64 0, i32 0, i32 0
  %113 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %104, i64 0, i32 0
  br label %114

114:                                              ; preds = %111, %90, %86
  %115 = phi double* [ %87, %86 ], [ %91, %90 ], [ %112, %111 ]
  %116 = phi double* [ %88, %86 ], [ %92, %90 ], [ %113, %111 ]
  %117 = load double, double* %115, align 8
  %118 = fsub double %117, %72
  %119 = fcmp une double %118, 0.000000e+00
  br i1 %119, label %120, label %210

120:                                              ; preds = %114
  %121 = load double, double* %116, align 8
  %122 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %76, i64 0, i32 0, i32 0
  %123 = load double, double* %122, align 8
  %124 = fsub double %123, %72
  %125 = fdiv double %124, %118
  %126 = fsub double %121, %73
  %127 = fcmp une double %126, 0.000000e+00
  br i1 %127, label %128, label %210

128:                                              ; preds = %120
  %129 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %75, i64 0, i32 0, i32 0
  %130 = load double, double* %129, align 8
  %131 = fsub double %130, %73
  %132 = fdiv double %131, %126
  %133 = fcmp une double %125, %132
  br i1 %133, label %134, label %210

134:                                              ; preds = %128
  %135 = or i1 %82, %83
  %136 = fcmp olt double %125, %132
  %137 = select i1 %135, i1 %83, i1 %136
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #10
  store i8 0, i8* %2, align 1
  br i1 %137, label %138, label %142

138:                                              ; preds = %134
  %139 = fmul double %126, %125
  %140 = fadd double %73, %139
  %141 = call zeroext i1 @_ZN11SkOpSegment11addExpandedEdPK12SkOpSpanBasePb(%class.SkOpSegment* %67, double %140, %class.SkOpSpanBase* %76, i8* nonnull %2) #10
  br i1 %141, label %146, label %157

142:                                              ; preds = %134
  %143 = fmul double %118, %132
  %144 = fadd double %72, %143
  %145 = call zeroext i1 @_ZN11SkOpSegment11addExpandedEdPK12SkOpSpanBasePb(%class.SkOpSegment* %65, double %144, %class.SkOpSpanBase* %75, i8* nonnull %2) #10
  br i1 %145, label %146, label %157

146:                                              ; preds = %142, %138
  %147 = load i8, i8* %2, align 1, !range !2
  %148 = icmp eq i8 %147, 0
  %149 = select i1 %148, %class.SkOpSpanBase* %76, %class.SkOpSpanBase* %19
  %150 = select i1 %148, %class.SkOpSpanBase* %75, %class.SkOpSpanBase* %21
  %151 = load %class.SkOpPtT*, %class.SkOpPtT** %22, align 8
  %152 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %151, i64 0, i32 2
  %153 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %152, align 8
  %154 = load %class.SkOpPtT*, %class.SkOpPtT** %26, align 8
  %155 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %154, i64 0, i32 2
  %156 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %155, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #10
  br label %158

157:                                              ; preds = %142, %138
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #10
  br label %210

158:                                              ; preds = %146, %71
  %159 = phi %class.SkOpSpanBase* [ %77, %71 ], [ %156, %146 ]
  %160 = phi %class.SkOpSpanBase* [ %76, %71 ], [ %149, %146 ]
  %161 = phi %class.SkOpSpanBase* [ %75, %71 ], [ %150, %146 ]
  %162 = phi %class.SkOpSpanBase* [ %74, %71 ], [ %153, %146 ]
  %163 = icmp eq %class.SkOpSpanBase* %160, %162
  br i1 %163, label %173, label %164

164:                                              ; preds = %158
  %165 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %160, i64 0, i32 0, i32 0
  %166 = load double, double* %165, align 8
  %167 = fcmp une double %166, 1.000000e+00
  %168 = icmp ne %class.SkOpSpanBase* %160, null
  %169 = and i1 %168, %167
  br i1 %169, label %170, label %210

170:                                              ; preds = %164
  %171 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %160, i64 1, i32 0, i32 2
  %172 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %171, align 8
  br label %173

173:                                              ; preds = %158, %170
  %174 = phi %class.SkOpSpanBase* [ %172, %170 ], [ %160, %158 ]
  %175 = phi double [ %166, %170 ], [ %72, %158 ]
  %176 = icmp eq %class.SkOpSpanBase* %161, %159
  br i1 %176, label %200, label %177

177:                                              ; preds = %173
  %178 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %161, i64 0, i32 0, i32 0
  %179 = load double, double* %178, align 8
  %180 = load %class.SkOpPtT*, %class.SkOpPtT** %10, align 8
  %181 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %180, i64 0, i32 0
  %182 = load double, double* %181, align 8
  %183 = load %class.SkOpPtT*, %class.SkOpPtT** %26, align 8
  %184 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %183, i64 0, i32 0
  %185 = load double, double* %184, align 8
  %186 = fcmp ogt double %182, %185
  br i1 %186, label %187, label %190

187:                                              ; preds = %177
  %188 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %161, i64 0, i32 4
  %189 = bitcast %class.SkOpSpan** %188 to %class.SkOpSpanBase**
  br label %196

190:                                              ; preds = %177
  %191 = fcmp une double %179, 1.000000e+00
  %192 = icmp ne %class.SkOpSpanBase* %161, null
  %193 = and i1 %192, %191
  br i1 %193, label %194, label %210

194:                                              ; preds = %190
  %195 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %161, i64 1, i32 0, i32 2
  br label %196

196:                                              ; preds = %187, %194
  %197 = phi %class.SkOpSpanBase** [ %189, %187 ], [ %195, %194 ]
  %198 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %197, align 8
  %199 = icmp eq %class.SkOpSpanBase* %198, null
  br i1 %199, label %210, label %200

200:                                              ; preds = %196, %173
  %201 = phi %class.SkOpSpanBase* [ %198, %196 ], [ %159, %173 ]
  %202 = phi double [ %179, %196 ], [ %73, %173 ]
  %203 = icmp eq %class.SkOpSpanBase* %174, %162
  %204 = icmp eq %class.SkOpSpanBase* %201, %159
  %205 = and i1 %204, %203
  br i1 %205, label %206, label %71

206:                                              ; preds = %200, %63
  %207 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %7, i64 0, i32 0
  %208 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %207, align 8
  %209 = icmp eq %class.SkCoincidentSpans* %208, null
  br i1 %209, label %210, label %6

210:                                              ; preds = %59, %6, %48, %17, %33, %206, %196, %128, %120, %114, %164, %190, %106, %93, %157, %1
  %211 = phi i1 [ true, %1 ], [ false, %157 ], [ false, %93 ], [ false, %106 ], [ false, %190 ], [ false, %164 ], [ false, %114 ], [ false, %120 ], [ false, %128 ], [ false, %196 ], [ false, %6 ], [ false, %48 ], [ false, %59 ], [ false, %17 ], [ false, %33 ], [ true, %206 ]
  ret i1 %211
}

declare %class.SkOpPtT* @_ZNK7SkOpPtT8containsEPK11SkOpSegment(%class.SkOpPtT*, %class.SkOpSegment*) local_unnamed_addr #1

declare zeroext i1 @_ZN11SkOpSegment11addExpandedEdPK12SkOpSpanBasePb(%class.SkOpSegment*, double, %class.SkOpSpanBase*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN15SkOpCoincidence6TRangeEPK7SkOpPtTdPK11SkOpSegment(%class.SkOpPtT* nocapture readonly, double, %class.SkOpSegment*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 2
  %5 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %4, align 8
  br label %6

6:                                                ; preds = %22, %3
  %7 = phi %class.SkOpSpanBase* [ %5, %3 ], [ %26, %22 ]
  %8 = phi %class.SkOpPtT* [ null, %3 ], [ %24, %22 ]
  %9 = phi %class.SkOpPtT* [ null, %3 ], [ %23, %22 ]
  %10 = tail call %class.SkOpPtT* @_ZNK12SkOpSpanBase8containsEPK11SkOpSegment(%class.SkOpSpanBase* %7, %class.SkOpSegment* %2) #10
  %11 = icmp eq %class.SkOpPtT* %10, null
  %12 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %7, i64 0, i32 0, i32 0
  %13 = load double, double* %12, align 8
  br i1 %11, label %20, label %14

14:                                               ; preds = %6
  %15 = fcmp ugt double %13, %1
  %16 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %7, i64 0, i32 0
  %17 = select i1 %15, %class.SkOpPtT* %8, %class.SkOpPtT* %16
  %18 = select i1 %15, %class.SkOpPtT* %9, %class.SkOpPtT* %10
  %19 = fcmp ult double %13, %1
  br i1 %19, label %22, label %28

20:                                               ; preds = %6
  %21 = fcmp oeq double %13, 1.000000e+00
  br i1 %21, label %49, label %22

22:                                               ; preds = %14, %20
  %23 = phi %class.SkOpPtT* [ %9, %20 ], [ %18, %14 ]
  %24 = phi %class.SkOpPtT* [ %8, %20 ], [ %17, %14 ]
  %25 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %7, i64 1, i32 0, i32 2
  %26 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %25, align 8
  %27 = icmp eq %class.SkOpSpanBase* %26, null
  br i1 %27, label %49, label %6

28:                                               ; preds = %14
  %29 = icmp eq %class.SkOpPtT* %18, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %7, i64 0, i32 0, i32 0
  %32 = load double, double* %31, align 8
  %33 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %17, i64 0, i32 0
  %34 = load double, double* %33, align 8
  %35 = fsub double %32, %34
  %36 = fcmp une double %35, 0.000000e+00
  br i1 %36, label %37, label %40

37:                                               ; preds = %30
  %38 = fsub double %1, %34
  %39 = fdiv double %38, %35
  br label %40

40:                                               ; preds = %30, %37
  %41 = phi double [ %39, %37 ], [ 1.000000e+00, %30 ]
  %42 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %18, i64 0, i32 0
  %43 = load double, double* %42, align 8
  %44 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %10, i64 0, i32 0
  %45 = load double, double* %44, align 8
  %46 = fsub double %45, %43
  %47 = fmul double %41, %46
  %48 = fadd double %43, %47
  br label %49

49:                                               ; preds = %22, %20, %28, %40
  %50 = phi double [ %48, %40 ], [ 1.000000e+00, %28 ], [ 1.000000e+00, %20 ], [ 1.000000e+00, %22 ]
  ret double %50
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15SkOpCoincidence12checkOverlapEP17SkCoincidentSpansPK11SkOpSegmentS4_ddddP9SkTDArrayIS1_E(%class.SkOpCoincidence* readnone, %class.SkCoincidentSpans*, %class.SkOpSegment*, %class.SkOpSegment*, double, double, double, double, %class.SkTDArray*) local_unnamed_addr #0 align 2 {
  %10 = bitcast double %6 to i64
  %11 = bitcast double %7 to i64
  %12 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %2, i64 0, i32 10
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %3, i64 0, i32 10
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %13, %15
  br i1 %16, label %69, label %17

17:                                               ; preds = %9, %58
  %18 = phi i32 [ %67, %58 ], [ %15, %9 ]
  %19 = phi i32 [ %18, %58 ], [ %13, %9 ]
  %20 = phi i64 [ %65, %58 ], [ %11, %9 ]
  %21 = phi i64 [ %64, %58 ], [ %10, %9 ]
  %22 = phi double [ %63, %58 ], [ %7, %9 ]
  %23 = phi double [ %62, %58 ], [ %6, %9 ]
  %24 = phi double [ %61, %58 ], [ %5, %9 ]
  %25 = phi double [ %60, %58 ], [ %4, %9 ]
  %26 = phi %class.SkOpSegment* [ %27, %58 ], [ %3, %9 ]
  %27 = phi %class.SkOpSegment* [ %26, %58 ], [ %2, %9 ]
  %28 = icmp sgt i32 %19, %18
  br i1 %28, label %58, label %29

29:                                               ; preds = %17
  %30 = add nsw i32 %19, 1
  %31 = ashr i32 %30, 2
  %32 = sub nsw i32 %19, %31
  %33 = shl i32 %32, 1
  %34 = add i32 %33, 2
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %69

36:                                               ; preds = %29
  %37 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %26, i64 0, i32 5
  %38 = load %struct.SkPoint*, %struct.SkPoint** %37, align 8
  %39 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %38, i64 0, i32 0
  %40 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %27, i64 0, i32 5
  %41 = load %struct.SkPoint*, %struct.SkPoint** %40, align 8
  %42 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %41, i64 0, i32 0
  br label %43

43:                                               ; preds = %170, %36
  %44 = phi i32 [ 0, %36 ], [ %173, %170 ]
  %45 = phi float* [ %39, %36 ], [ %172, %170 ]
  %46 = phi float* [ %42, %36 ], [ %171, %170 ]
  %47 = load float, float* %46, align 4
  %48 = load float, float* %45, align 4
  %49 = fcmp olt float %47, %48
  br i1 %49, label %69, label %50

50:                                               ; preds = %43
  %51 = fcmp ogt float %47, %48
  br i1 %51, label %58, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds float, float* %46, i64 1
  %54 = getelementptr inbounds float, float* %45, i64 1
  %55 = load float, float* %53, align 4
  %56 = load float, float* %54, align 4
  %57 = fcmp olt float %55, %56
  br i1 %57, label %69, label %168

58:                                               ; preds = %50, %168, %17
  %59 = fcmp olt double %23, %22
  %60 = select i1 %59, double %23, double %22
  %61 = select i1 %59, double %22, double %23
  %62 = select i1 %59, double %25, double %24
  %63 = select i1 %59, double %24, double %25
  %64 = bitcast double %62 to i64
  %65 = bitcast double %63 to i64
  %66 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %27, i64 0, i32 10
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %18, %67
  br i1 %68, label %69, label %17

69:                                               ; preds = %29, %58, %43, %52, %170, %9
  %70 = phi %class.SkOpSegment* [ %2, %9 ], [ %27, %170 ], [ %27, %52 ], [ %27, %43 ], [ %27, %29 ], [ %26, %58 ]
  %71 = phi %class.SkOpSegment* [ %3, %9 ], [ %26, %170 ], [ %26, %52 ], [ %26, %43 ], [ %26, %29 ], [ %27, %58 ]
  %72 = phi double [ %4, %9 ], [ %25, %170 ], [ %25, %52 ], [ %25, %43 ], [ %25, %29 ], [ %60, %58 ]
  %73 = phi double [ %5, %9 ], [ %24, %170 ], [ %24, %52 ], [ %24, %43 ], [ %24, %29 ], [ %61, %58 ]
  %74 = phi double [ %6, %9 ], [ %23, %170 ], [ %23, %52 ], [ %23, %43 ], [ %23, %29 ], [ %62, %58 ]
  %75 = phi double [ %7, %9 ], [ %22, %170 ], [ %22, %52 ], [ %22, %43 ], [ %22, %29 ], [ %63, %58 ]
  %76 = phi i64 [ %10, %9 ], [ %21, %170 ], [ %21, %52 ], [ %21, %43 ], [ %21, %29 ], [ %64, %58 ]
  %77 = phi i64 [ %11, %9 ], [ %20, %170 ], [ %20, %52 ], [ %20, %43 ], [ %20, %29 ], [ %65, %58 ]
  %78 = fcmp ogt double %74, %75
  %79 = select i1 %78, i64 %77, i64 %76
  %80 = select i1 %78, i64 %76, i64 %77
  %81 = bitcast i64 %80 to double
  %82 = bitcast i64 %79 to double
  %83 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %8, i64 0, i32 2
  %84 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %8, i64 0, i32 1
  %85 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %8, i64 0, i32 0
  %86 = bitcast %class.SkTDArray* %8 to i8**
  br label %87

87:                                               ; preds = %162, %69
  %88 = phi %class.SkCoincidentSpans* [ %1, %69 ], [ %164, %162 ]
  %89 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %88, i64 0, i32 1
  %90 = load %class.SkOpPtT*, %class.SkOpPtT** %89, align 8
  %91 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %90) #10
  %92 = icmp eq %class.SkOpSegment* %91, %70
  br i1 %92, label %93, label %162

93:                                               ; preds = %87
  %94 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %88, i64 0, i32 3
  %95 = load %class.SkOpPtT*, %class.SkOpPtT** %94, align 8
  %96 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %95) #10
  %97 = icmp eq %class.SkOpSegment* %96, %71
  br i1 %97, label %98, label %162

98:                                               ; preds = %93
  %99 = load %class.SkOpPtT*, %class.SkOpPtT** %89, align 8
  %100 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %99, i64 0, i32 0
  %101 = load double, double* %100, align 8
  %102 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %88, i64 0, i32 2
  %103 = load %class.SkOpPtT*, %class.SkOpPtT** %102, align 8
  %104 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %103, i64 0, i32 0
  %105 = load double, double* %104, align 8
  %106 = fcmp ule double %101, %73
  %107 = fcmp uge double %105, %72
  %108 = bitcast %class.SkOpPtT** %94 to i64**
  %109 = load i64*, i64** %108, align 8
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %88, i64 0, i32 4
  %112 = load %class.SkOpPtT*, %class.SkOpPtT** %111, align 8
  %113 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %112, i64 0, i32 0
  %114 = load double, double* %113, align 8
  br i1 %78, label %115, label %119

115:                                              ; preds = %98
  %116 = bitcast double %114 to i64
  %117 = bitcast i64 %110 to double
  %118 = fcmp ult double %114, %117
  br i1 %118, label %119, label %166

119:                                              ; preds = %98, %115
  %120 = phi double [ %117, %115 ], [ %114, %98 ]
  %121 = phi i64 [ %116, %115 ], [ %110, %98 ]
  %122 = bitcast i64 %121 to double
  %123 = fcmp uge double %81, %122
  %124 = fcmp uge double %120, %82
  %125 = and i1 %106, %107
  %126 = and i1 %124, %123
  %127 = or i1 %125, %126
  br i1 %127, label %128, label %162

128:                                              ; preds = %119
  %129 = fcmp ult double %120, %81
  br i1 %129, label %136, label %130

130:                                              ; preds = %128
  %131 = fcmp ult double %105, %73
  %132 = fcmp ugt double %101, %72
  %133 = fcmp ult double %82, %122
  %134 = or i1 %132, %131
  %135 = or i1 %134, %133
  br i1 %135, label %136, label %166

136:                                              ; preds = %128, %130
  %137 = load i32, i32* %83, align 4
  %138 = add i32 %137, 1
  %139 = icmp sgt i32 %138, -1
  br i1 %139, label %141, label %140

140:                                              ; preds = %136
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #11
  unreachable

141:                                              ; preds = %136
  %142 = load i32, i32* %84, align 8
  %143 = icmp slt i32 %142, %138
  br i1 %143, label %146, label %144

144:                                              ; preds = %141
  %145 = load %class.SkCoincidentSpans**, %class.SkCoincidentSpans*** %85, align 8
  br label %158

146:                                              ; preds = %141
  %147 = add i32 %137, 5
  %148 = lshr i32 %147, 2
  %149 = add nuw i32 %148, %147
  %150 = icmp sgt i32 %149, -1
  br i1 %150, label %152, label %151

151:                                              ; preds = %146
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

152:                                              ; preds = %146
  store i32 %149, i32* %84, align 8
  %153 = load i8*, i8** %86, align 8
  %154 = sext i32 %149 to i64
  %155 = shl nsw i64 %154, 3
  %156 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %153, i64 %155) #10
  store i8* %156, i8** %86, align 8
  %157 = bitcast i8* %156 to %class.SkCoincidentSpans**
  br label %158

158:                                              ; preds = %144, %152
  %159 = phi %class.SkCoincidentSpans** [ %145, %144 ], [ %157, %152 ]
  store i32 %138, i32* %83, align 4
  %160 = sext i32 %137 to i64
  %161 = getelementptr inbounds %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %159, i64 %160
  store %class.SkCoincidentSpans* %88, %class.SkCoincidentSpans** %161, align 8
  br label %162

162:                                              ; preds = %158, %119, %93, %87
  %163 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %88, i64 0, i32 0
  %164 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %163, align 8
  %165 = icmp eq %class.SkCoincidentSpans* %164, null
  br i1 %165, label %166, label %87

166:                                              ; preds = %130, %115, %162
  %167 = phi i1 [ true, %162 ], [ false, %115 ], [ false, %130 ]
  ret i1 %167

168:                                              ; preds = %52
  %169 = fcmp ogt float %55, %56
  br i1 %169, label %58, label %170

170:                                              ; preds = %168
  %171 = getelementptr inbounds float, float* %46, i64 2
  %172 = getelementptr inbounds float, float* %45, i64 2
  %173 = add nuw nsw i32 %44, 2
  %174 = icmp eq i32 %173, %34
  br i1 %174, label %69, label %43
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkOpCoincidence12addIfMissingEPK7SkOpPtTS2_ddP11SkOpSegmentS4_Pb(%class.SkOpCoincidence*, %class.SkOpPtT* nocapture readonly, %class.SkOpPtT* nocapture readonly, double, double, %class.SkOpSegment*, %class.SkOpSegment*, i8* nocapture) local_unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %1, i64 0, i32 2
  %10 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %9, align 8
  br label %11

11:                                               ; preds = %27, %8
  %12 = phi %class.SkOpSpanBase* [ %10, %8 ], [ %31, %27 ]
  %13 = phi %class.SkOpPtT* [ null, %8 ], [ %29, %27 ]
  %14 = phi %class.SkOpPtT* [ null, %8 ], [ %28, %27 ]
  %15 = tail call %class.SkOpPtT* @_ZNK12SkOpSpanBase8containsEPK11SkOpSegment(%class.SkOpSpanBase* %12, %class.SkOpSegment* %5) #10
  %16 = icmp eq %class.SkOpPtT* %15, null
  %17 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %12, i64 0, i32 0, i32 0
  %18 = load double, double* %17, align 8
  br i1 %16, label %25, label %19

19:                                               ; preds = %11
  %20 = fcmp ugt double %18, %3
  %21 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %12, i64 0, i32 0
  %22 = select i1 %20, %class.SkOpPtT* %13, %class.SkOpPtT* %21
  %23 = select i1 %20, %class.SkOpPtT* %14, %class.SkOpPtT* %15
  %24 = fcmp ult double %18, %3
  br i1 %24, label %27, label %33

25:                                               ; preds = %11
  %26 = fcmp oeq double %18, 1.000000e+00
  br i1 %26, label %52, label %27

27:                                               ; preds = %25, %19
  %28 = phi %class.SkOpPtT* [ %14, %25 ], [ %23, %19 ]
  %29 = phi %class.SkOpPtT* [ %13, %25 ], [ %22, %19 ]
  %30 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %12, i64 1, i32 0, i32 2
  %31 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %30, align 8
  %32 = icmp eq %class.SkOpSpanBase* %31, null
  br i1 %32, label %52, label %11

33:                                               ; preds = %19
  %34 = icmp eq %class.SkOpPtT* %23, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %22, i64 0, i32 0
  %37 = load double, double* %36, align 8
  %38 = fsub double %18, %37
  %39 = fcmp une double %38, 0.000000e+00
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = fsub double %3, %37
  %42 = fdiv double %41, %38
  br label %43

43:                                               ; preds = %40, %35
  %44 = phi double [ %42, %40 ], [ 1.000000e+00, %35 ]
  %45 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %23, i64 0, i32 0
  %46 = load double, double* %45, align 8
  %47 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %15, i64 0, i32 0
  %48 = load double, double* %47, align 8
  %49 = fsub double %48, %46
  %50 = fmul double %44, %49
  %51 = fadd double %46, %50
  br label %52

52:                                               ; preds = %25, %27, %33, %43
  %53 = phi double [ %51, %43 ], [ 1.000000e+00, %33 ], [ 1.000000e+00, %27 ], [ 1.000000e+00, %25 ]
  %54 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %9, align 8
  br label %55

55:                                               ; preds = %71, %52
  %56 = phi %class.SkOpSpanBase* [ %54, %52 ], [ %75, %71 ]
  %57 = phi %class.SkOpPtT* [ null, %52 ], [ %73, %71 ]
  %58 = phi %class.SkOpPtT* [ null, %52 ], [ %72, %71 ]
  %59 = tail call %class.SkOpPtT* @_ZNK12SkOpSpanBase8containsEPK11SkOpSegment(%class.SkOpSpanBase* %56, %class.SkOpSegment* %5) #10
  %60 = icmp eq %class.SkOpPtT* %59, null
  %61 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %56, i64 0, i32 0, i32 0
  %62 = load double, double* %61, align 8
  br i1 %60, label %69, label %63

63:                                               ; preds = %55
  %64 = fcmp ugt double %62, %4
  %65 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %56, i64 0, i32 0
  %66 = select i1 %64, %class.SkOpPtT* %57, %class.SkOpPtT* %65
  %67 = select i1 %64, %class.SkOpPtT* %58, %class.SkOpPtT* %59
  %68 = fcmp ult double %62, %4
  br i1 %68, label %71, label %77

69:                                               ; preds = %55
  %70 = fcmp oeq double %62, 1.000000e+00
  br i1 %70, label %96, label %71

71:                                               ; preds = %69, %63
  %72 = phi %class.SkOpPtT* [ %58, %69 ], [ %67, %63 ]
  %73 = phi %class.SkOpPtT* [ %57, %69 ], [ %66, %63 ]
  %74 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %56, i64 1, i32 0, i32 2
  %75 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %74, align 8
  %76 = icmp eq %class.SkOpSpanBase* %75, null
  br i1 %76, label %96, label %55

77:                                               ; preds = %63
  %78 = icmp eq %class.SkOpPtT* %67, null
  br i1 %78, label %96, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %66, i64 0, i32 0
  %81 = load double, double* %80, align 8
  %82 = fsub double %62, %81
  %83 = fcmp une double %82, 0.000000e+00
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = fsub double %4, %81
  %86 = fdiv double %85, %82
  br label %87

87:                                               ; preds = %84, %79
  %88 = phi double [ %86, %84 ], [ 1.000000e+00, %79 ]
  %89 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %67, i64 0, i32 0
  %90 = load double, double* %89, align 8
  %91 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %59, i64 0, i32 0
  %92 = load double, double* %91, align 8
  %93 = fsub double %92, %90
  %94 = fmul double %88, %93
  %95 = fadd double %90, %94
  br label %96

96:                                               ; preds = %69, %71, %77, %87
  %97 = phi double [ %95, %87 ], [ 1.000000e+00, %77 ], [ 1.000000e+00, %71 ], [ 1.000000e+00, %69 ]
  %98 = tail call i32 @_ZNK11SkOpSegment9collapsedEdd(%class.SkOpSegment* %5, double %53, double %97) #10
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %96
  %101 = icmp eq i32 %98, 1
  br label %205

102:                                              ; preds = %96
  %103 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %2, i64 0, i32 2
  %104 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %103, align 8
  br label %105

105:                                              ; preds = %121, %102
  %106 = phi %class.SkOpSpanBase* [ %104, %102 ], [ %125, %121 ]
  %107 = phi %class.SkOpPtT* [ null, %102 ], [ %123, %121 ]
  %108 = phi %class.SkOpPtT* [ null, %102 ], [ %122, %121 ]
  %109 = tail call %class.SkOpPtT* @_ZNK12SkOpSpanBase8containsEPK11SkOpSegment(%class.SkOpSpanBase* %106, %class.SkOpSegment* %6) #10
  %110 = icmp eq %class.SkOpPtT* %109, null
  %111 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %106, i64 0, i32 0, i32 0
  %112 = load double, double* %111, align 8
  br i1 %110, label %119, label %113

113:                                              ; preds = %105
  %114 = fcmp ugt double %112, %3
  %115 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %106, i64 0, i32 0
  %116 = select i1 %114, %class.SkOpPtT* %107, %class.SkOpPtT* %115
  %117 = select i1 %114, %class.SkOpPtT* %108, %class.SkOpPtT* %109
  %118 = fcmp ult double %112, %3
  br i1 %118, label %121, label %127

119:                                              ; preds = %105
  %120 = fcmp oeq double %112, 1.000000e+00
  br i1 %120, label %146, label %121

121:                                              ; preds = %119, %113
  %122 = phi %class.SkOpPtT* [ %108, %119 ], [ %117, %113 ]
  %123 = phi %class.SkOpPtT* [ %107, %119 ], [ %116, %113 ]
  %124 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %106, i64 1, i32 0, i32 2
  %125 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %124, align 8
  %126 = icmp eq %class.SkOpSpanBase* %125, null
  br i1 %126, label %146, label %105

127:                                              ; preds = %113
  %128 = icmp eq %class.SkOpPtT* %117, null
  br i1 %128, label %146, label %129

129:                                              ; preds = %127
  %130 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %116, i64 0, i32 0
  %131 = load double, double* %130, align 8
  %132 = fsub double %112, %131
  %133 = fcmp une double %132, 0.000000e+00
  br i1 %133, label %134, label %137

134:                                              ; preds = %129
  %135 = fsub double %3, %131
  %136 = fdiv double %135, %132
  br label %137

137:                                              ; preds = %134, %129
  %138 = phi double [ %136, %134 ], [ 1.000000e+00, %129 ]
  %139 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %117, i64 0, i32 0
  %140 = load double, double* %139, align 8
  %141 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %109, i64 0, i32 0
  %142 = load double, double* %141, align 8
  %143 = fsub double %142, %140
  %144 = fmul double %138, %143
  %145 = fadd double %140, %144
  br label %146

146:                                              ; preds = %119, %121, %127, %137
  %147 = phi double [ %145, %137 ], [ 1.000000e+00, %127 ], [ 1.000000e+00, %121 ], [ 1.000000e+00, %119 ]
  %148 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %103, align 8
  br label %149

149:                                              ; preds = %165, %146
  %150 = phi %class.SkOpSpanBase* [ %148, %146 ], [ %169, %165 ]
  %151 = phi %class.SkOpPtT* [ null, %146 ], [ %167, %165 ]
  %152 = phi %class.SkOpPtT* [ null, %146 ], [ %166, %165 ]
  %153 = tail call %class.SkOpPtT* @_ZNK12SkOpSpanBase8containsEPK11SkOpSegment(%class.SkOpSpanBase* %150, %class.SkOpSegment* %6) #10
  %154 = icmp eq %class.SkOpPtT* %153, null
  %155 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %150, i64 0, i32 0, i32 0
  %156 = load double, double* %155, align 8
  br i1 %154, label %163, label %157

157:                                              ; preds = %149
  %158 = fcmp ugt double %156, %4
  %159 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %150, i64 0, i32 0
  %160 = select i1 %158, %class.SkOpPtT* %151, %class.SkOpPtT* %159
  %161 = select i1 %158, %class.SkOpPtT* %152, %class.SkOpPtT* %153
  %162 = fcmp ult double %156, %4
  br i1 %162, label %165, label %171

163:                                              ; preds = %149
  %164 = fcmp oeq double %156, 1.000000e+00
  br i1 %164, label %190, label %165

165:                                              ; preds = %163, %157
  %166 = phi %class.SkOpPtT* [ %152, %163 ], [ %161, %157 ]
  %167 = phi %class.SkOpPtT* [ %151, %163 ], [ %160, %157 ]
  %168 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %150, i64 1, i32 0, i32 2
  %169 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %168, align 8
  %170 = icmp eq %class.SkOpSpanBase* %169, null
  br i1 %170, label %190, label %149

171:                                              ; preds = %157
  %172 = icmp eq %class.SkOpPtT* %161, null
  br i1 %172, label %190, label %173

173:                                              ; preds = %171
  %174 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %160, i64 0, i32 0
  %175 = load double, double* %174, align 8
  %176 = fsub double %156, %175
  %177 = fcmp une double %176, 0.000000e+00
  br i1 %177, label %178, label %181

178:                                              ; preds = %173
  %179 = fsub double %4, %175
  %180 = fdiv double %179, %176
  br label %181

181:                                              ; preds = %178, %173
  %182 = phi double [ %180, %178 ], [ 1.000000e+00, %173 ]
  %183 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %161, i64 0, i32 0
  %184 = load double, double* %183, align 8
  %185 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %153, i64 0, i32 0
  %186 = load double, double* %185, align 8
  %187 = fsub double %186, %184
  %188 = fmul double %182, %187
  %189 = fadd double %184, %188
  br label %190

190:                                              ; preds = %163, %165, %171, %181
  %191 = phi double [ %189, %181 ], [ 1.000000e+00, %171 ], [ 1.000000e+00, %165 ], [ 1.000000e+00, %163 ]
  %192 = tail call i32 @_ZNK11SkOpSegment9collapsedEdd(%class.SkOpSegment* %6, double %147, double %191) #10
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %190
  %195 = icmp eq i32 %192, 1
  br label %205

196:                                              ; preds = %190
  %197 = fcmp ogt double %53, %97
  br i1 %197, label %198, label %199

198:                                              ; preds = %196
  br label %199

199:                                              ; preds = %198, %196
  %200 = phi double [ %97, %198 ], [ %53, %196 ]
  %201 = phi double [ %53, %198 ], [ %97, %196 ]
  %202 = phi double [ %191, %198 ], [ %147, %196 ]
  %203 = phi double [ %147, %198 ], [ %191, %196 ]
  %204 = tail call zeroext i1 @_ZN15SkOpCoincidence12addOrOverlapEP11SkOpSegmentS1_ddddPb(%class.SkOpCoincidence* %0, %class.SkOpSegment* %5, %class.SkOpSegment* %6, double %200, double %201, double %202, double %203, i8* %7)
  br label %205

205:                                              ; preds = %199, %194, %100
  %206 = phi i1 [ %101, %100 ], [ %195, %194 ], [ true, %199 ]
  ret i1 %206
}

declare i32 @_ZNK11SkOpSegment9collapsedEdd(%class.SkOpSegment*, double, double) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkOpCoincidence7releaseEP17SkCoincidentSpansS1_(%class.SkOpCoincidence* nocapture, %class.SkCoincidentSpans*, %class.SkCoincidentSpans* readnone) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %1, i64 0, i32 0
  %5 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %4, align 8
  %6 = icmp eq %class.SkCoincidentSpans* %1, %2
  br i1 %6, label %15, label %24

7:                                                ; preds = %24
  %8 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %25, i64 0, i32 0
  %9 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %8, align 8
  %10 = icmp eq %class.SkCoincidentSpans* %25, %2
  br i1 %10, label %11, label %24

11:                                               ; preds = %7
  %12 = icmp eq %class.SkCoincidentSpans* %26, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %26, i64 0, i32 0
  store %class.SkCoincidentSpans* %9, %class.SkCoincidentSpans** %14, align 8
  br label %28

15:                                               ; preds = %3, %11
  %16 = phi %class.SkCoincidentSpans* [ %9, %11 ], [ %5, %3 ]
  %17 = phi %class.SkCoincidentSpans* [ %2, %11 ], [ %1, %3 ]
  %18 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %19 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %18, align 8
  %20 = icmp eq %class.SkCoincidentSpans* %19, %1
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  store %class.SkCoincidentSpans* %16, %class.SkCoincidentSpans** %18, align 8
  br label %28

22:                                               ; preds = %15
  %23 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 1
  store %class.SkCoincidentSpans* %16, %class.SkCoincidentSpans** %23, align 8
  br label %28

24:                                               ; preds = %3, %7
  %25 = phi %class.SkCoincidentSpans* [ %9, %7 ], [ %5, %3 ]
  %26 = phi %class.SkCoincidentSpans* [ %25, %7 ], [ %1, %3 ]
  %27 = icmp eq %class.SkCoincidentSpans* %25, null
  br i1 %27, label %28, label %7

28:                                               ; preds = %24, %13, %22, %21
  %29 = phi %class.SkCoincidentSpans* [ %2, %13 ], [ %17, %21 ], [ %17, %22 ], [ null, %24 ]
  %30 = icmp ne %class.SkCoincidentSpans* %29, null
  ret i1 %30
}

declare %class.SkOpPtT* @_ZNK11SkOpSegment8existingEdPKS_(%class.SkOpSegment*, double, %class.SkOpSegment*) local_unnamed_addr #1

declare void @_ZNK15SkOpCoincidence13debugValidateEv(%class.SkOpCoincidence*) local_unnamed_addr #1

declare %class.SkOpPtT* @_ZNK7SkOpPtT6activeEv(%class.SkOpPtT*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkOpCoincidence10addMissingEPb(%class.SkOpCoincidence*, i8* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %4 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %3, align 8
  store i8 0, i8* %1, align 1
  %5 = icmp eq %class.SkCoincidentSpans* %4, null
  br i1 %5, label %266, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 1
  store %class.SkCoincidentSpans* %4, %class.SkCoincidentSpans** %7, align 8
  store %class.SkCoincidentSpans* null, %class.SkCoincidentSpans** %3, align 8
  br label %8

8:                                                ; preds = %218, %6
  %9 = phi %class.SkCoincidentSpans* [ %4, %6 ], [ %220, %218 ]
  %10 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %9, i64 0, i32 1
  %11 = load %class.SkOpPtT*, %class.SkOpPtT** %10, align 8
  %12 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %11, i64 0, i32 4
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %266

15:                                               ; preds = %8
  %16 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %11) #10
  %17 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %16, i64 0, i32 9
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %16, i64 0, i32 8
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %266, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %9, i64 0, i32 3
  %24 = load %class.SkOpPtT*, %class.SkOpPtT** %23, align 8
  %25 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %24, i64 0, i32 4
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %266

28:                                               ; preds = %22
  %29 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %24) #10
  %30 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %9, i64 0, i32 4
  %31 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %24, i64 0, i32 0
  %32 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %9, i64 0, i32 2
  %33 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %11, i64 0, i32 0
  %34 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %9, i64 0, i32 0
  %35 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %34, align 8
  %36 = icmp eq %class.SkCoincidentSpans* %35, null
  br i1 %36, label %218, label %37

37:                                               ; preds = %28, %214
  %38 = phi %class.SkCoincidentSpans* [ %216, %214 ], [ %35, %28 ]
  tail call void @_ZNK15SkOpCoincidence13debugValidateEv(%class.SkOpCoincidence* %0) #10
  %39 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %38, i64 0, i32 1
  %40 = load %class.SkOpPtT*, %class.SkOpPtT** %39, align 8
  %41 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %40, i64 0, i32 4
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %266

44:                                               ; preds = %37
  %45 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %40) #10
  %46 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %45, i64 0, i32 9
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %45, i64 0, i32 8
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %47, %49
  br i1 %50, label %266, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %38, i64 0, i32 3
  %53 = load %class.SkOpPtT*, %class.SkOpPtT** %52, align 8
  %54 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %53, i64 0, i32 4
  %55 = load i8, i8* %54, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %266

57:                                               ; preds = %51
  %58 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %53) #10
  %59 = icmp eq %class.SkOpSegment* %16, %45
  br i1 %59, label %60, label %98

60:                                               ; preds = %57
  %61 = load %class.SkOpPtT*, %class.SkOpPtT** %32, align 8
  %62 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %61, i64 0, i32 4
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %266

65:                                               ; preds = %60
  %66 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %38, i64 0, i32 2
  %67 = load %class.SkOpPtT*, %class.SkOpPtT** %66, align 8
  %68 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %67, i64 0, i32 4
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %266

71:                                               ; preds = %65
  %72 = icmp eq %class.SkOpSegment* %29, %58
  br i1 %72, label %214, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %61, i64 0, i32 0
  %75 = load double, double* %74, align 8
  %76 = load double, double* %33, align 8
  %77 = fcmp olt double %75, %76
  %78 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %40, i64 0, i32 0
  %79 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %67, i64 0, i32 0
  %80 = load double, double* %79, align 8
  %81 = load double, double* %78, align 8
  %82 = fcmp olt double %80, %81
  %83 = select i1 %77, double %75, double %76
  %84 = select i1 %82, double %80, double %81
  %85 = fcmp olt double %83, %84
  %86 = select i1 %85, double %84, double %83
  %87 = fcmp olt double %76, %75
  %88 = fcmp olt double %81, %80
  %89 = select i1 %88, double %80, double %81
  %90 = select i1 %87, double %75, double %76
  %91 = fcmp olt double %89, %90
  %92 = select i1 %91, double %89, double %90
  %93 = fcmp olt double %86, %92
  br i1 %93, label %94, label %214

94:                                               ; preds = %73
  %95 = select i1 %87, %class.SkOpPtT* %11, %class.SkOpPtT* %61
  %96 = select i1 %88, %class.SkOpPtT* %40, %class.SkOpPtT* %67
  %97 = tail call zeroext i1 @_ZN15SkOpCoincidence12addIfMissingEPK7SkOpPtTS2_ddP11SkOpSegmentS4_Pb(%class.SkOpCoincidence* %0, %class.SkOpPtT* %95, %class.SkOpPtT* %96, double %86, double %92, %class.SkOpSegment* %29, %class.SkOpSegment* %58, i8* %1)
  br i1 %97, label %214, label %266

98:                                               ; preds = %57
  %99 = icmp eq %class.SkOpSegment* %16, %58
  br i1 %99, label %100, label %138

100:                                              ; preds = %98
  %101 = load %class.SkOpPtT*, %class.SkOpPtT** %32, align 8
  %102 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %101, i64 0, i32 4
  %103 = load i8, i8* %102, align 8, !range !2
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %105, label %266

105:                                              ; preds = %100
  %106 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %38, i64 0, i32 4
  %107 = load %class.SkOpPtT*, %class.SkOpPtT** %106, align 8
  %108 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %107, i64 0, i32 4
  %109 = load i8, i8* %108, align 8, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %266

111:                                              ; preds = %105
  %112 = icmp eq %class.SkOpSegment* %29, %45
  br i1 %112, label %214, label %113

113:                                              ; preds = %111
  %114 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %101, i64 0, i32 0
  %115 = load double, double* %114, align 8
  %116 = load double, double* %33, align 8
  %117 = fcmp olt double %115, %116
  %118 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %53, i64 0, i32 0
  %119 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %107, i64 0, i32 0
  %120 = load double, double* %119, align 8
  %121 = load double, double* %118, align 8
  %122 = fcmp olt double %120, %121
  %123 = select i1 %117, double %115, double %116
  %124 = select i1 %122, double %120, double %121
  %125 = fcmp olt double %123, %124
  %126 = select i1 %125, double %124, double %123
  %127 = fcmp olt double %116, %115
  %128 = fcmp olt double %121, %120
  %129 = select i1 %128, double %120, double %121
  %130 = select i1 %127, double %115, double %116
  %131 = fcmp olt double %129, %130
  %132 = select i1 %131, double %129, double %130
  %133 = fcmp olt double %126, %132
  br i1 %133, label %134, label %214

134:                                              ; preds = %113
  %135 = select i1 %127, %class.SkOpPtT* %11, %class.SkOpPtT* %101
  %136 = select i1 %128, %class.SkOpPtT* %53, %class.SkOpPtT* %107
  %137 = tail call zeroext i1 @_ZN15SkOpCoincidence12addIfMissingEPK7SkOpPtTS2_ddP11SkOpSegmentS4_Pb(%class.SkOpCoincidence* %0, %class.SkOpPtT* %135, %class.SkOpPtT* %136, double %126, double %132, %class.SkOpSegment* %29, %class.SkOpSegment* %45, i8* %1)
  br i1 %137, label %214, label %266

138:                                              ; preds = %98
  %139 = icmp eq %class.SkOpSegment* %29, %45
  br i1 %139, label %140, label %176

140:                                              ; preds = %138
  %141 = load %class.SkOpPtT*, %class.SkOpPtT** %30, align 8
  %142 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %141, i64 0, i32 4
  %143 = load i8, i8* %142, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %266

145:                                              ; preds = %140
  %146 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %38, i64 0, i32 2
  %147 = load %class.SkOpPtT*, %class.SkOpPtT** %146, align 8
  %148 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %147, i64 0, i32 4
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %151, label %266

151:                                              ; preds = %145
  %152 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %141, i64 0, i32 0
  %153 = load double, double* %152, align 8
  %154 = load double, double* %31, align 8
  %155 = fcmp olt double %153, %154
  %156 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %40, i64 0, i32 0
  %157 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %147, i64 0, i32 0
  %158 = load double, double* %157, align 8
  %159 = load double, double* %156, align 8
  %160 = fcmp olt double %158, %159
  %161 = select i1 %155, double %153, double %154
  %162 = select i1 %160, double %158, double %159
  %163 = fcmp olt double %161, %162
  %164 = select i1 %163, double %162, double %161
  %165 = fcmp olt double %154, %153
  %166 = fcmp olt double %159, %158
  %167 = select i1 %166, double %158, double %159
  %168 = select i1 %165, double %153, double %154
  %169 = fcmp olt double %167, %168
  %170 = select i1 %169, double %167, double %168
  %171 = fcmp olt double %164, %170
  br i1 %171, label %172, label %214

172:                                              ; preds = %151
  %173 = select i1 %165, %class.SkOpPtT* %24, %class.SkOpPtT* %141
  %174 = select i1 %166, %class.SkOpPtT* %40, %class.SkOpPtT* %147
  %175 = tail call zeroext i1 @_ZN15SkOpCoincidence12addIfMissingEPK7SkOpPtTS2_ddP11SkOpSegmentS4_Pb(%class.SkOpCoincidence* %0, %class.SkOpPtT* %173, %class.SkOpPtT* %174, double %164, double %170, %class.SkOpSegment* %16, %class.SkOpSegment* %58, i8* %1)
  br i1 %175, label %214, label %266

176:                                              ; preds = %138
  %177 = icmp eq %class.SkOpSegment* %29, %58
  br i1 %177, label %178, label %214

178:                                              ; preds = %176
  %179 = load %class.SkOpPtT*, %class.SkOpPtT** %30, align 8
  %180 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %179, i64 0, i32 4
  %181 = load i8, i8* %180, align 8, !range !2
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %183, label %266

183:                                              ; preds = %178
  %184 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %38, i64 0, i32 4
  %185 = load %class.SkOpPtT*, %class.SkOpPtT** %184, align 8
  %186 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %185, i64 0, i32 4
  %187 = load i8, i8* %186, align 8, !range !2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %189, label %266

189:                                              ; preds = %183
  %190 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %179, i64 0, i32 0
  %191 = load double, double* %190, align 8
  %192 = load double, double* %31, align 8
  %193 = fcmp olt double %191, %192
  %194 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %53, i64 0, i32 0
  %195 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %185, i64 0, i32 0
  %196 = load double, double* %195, align 8
  %197 = load double, double* %194, align 8
  %198 = fcmp olt double %196, %197
  %199 = select i1 %193, double %191, double %192
  %200 = select i1 %198, double %196, double %197
  %201 = fcmp olt double %199, %200
  %202 = select i1 %201, double %200, double %199
  %203 = fcmp olt double %192, %191
  %204 = fcmp olt double %197, %196
  %205 = select i1 %204, double %196, double %197
  %206 = select i1 %203, double %191, double %192
  %207 = fcmp olt double %205, %206
  %208 = select i1 %207, double %205, double %206
  %209 = fcmp olt double %202, %208
  br i1 %209, label %210, label %214

210:                                              ; preds = %189
  %211 = select i1 %203, %class.SkOpPtT* %24, %class.SkOpPtT* %179
  %212 = select i1 %204, %class.SkOpPtT* %53, %class.SkOpPtT* %185
  %213 = tail call zeroext i1 @_ZN15SkOpCoincidence12addIfMissingEPK7SkOpPtTS2_ddP11SkOpSegmentS4_Pb(%class.SkOpCoincidence* %0, %class.SkOpPtT* %211, %class.SkOpPtT* %212, double %202, double %208, %class.SkOpSegment* %16, %class.SkOpSegment* %45, i8* %1)
  br i1 %213, label %214, label %266

214:                                              ; preds = %176, %73, %94, %71, %113, %134, %111, %151, %172, %189, %210
  tail call void @_ZNK15SkOpCoincidence13debugValidateEv(%class.SkOpCoincidence* %0) #10
  %215 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %38, i64 0, i32 0
  %216 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %215, align 8
  %217 = icmp eq %class.SkCoincidentSpans* %216, null
  br i1 %217, label %218, label %37

218:                                              ; preds = %214, %28
  %219 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %9, i64 0, i32 0
  %220 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %219, align 8
  %221 = icmp eq %class.SkCoincidentSpans* %220, null
  br i1 %221, label %222, label %8

222:                                              ; preds = %218, %222
  %223 = phi %class.SkCoincidentSpans** [ %226, %222 ], [ %3, %218 ]
  %224 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %223, align 8
  %225 = icmp eq %class.SkCoincidentSpans* %224, null
  %226 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %224, i64 0, i32 0
  br i1 %225, label %227, label %222

227:                                              ; preds = %222
  %228 = bitcast %class.SkCoincidentSpans** %7 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = bitcast %class.SkCoincidentSpans** %223 to i64*
  store i64 %229, i64* %230, align 8
  store %class.SkCoincidentSpans* null, %class.SkCoincidentSpans** %7, align 8
  %231 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %3, align 8
  %232 = icmp eq %class.SkCoincidentSpans* %231, null
  br i1 %232, label %266, label %233

233:                                              ; preds = %227, %262
  %234 = phi %class.SkCoincidentSpans* [ %263, %262 ], [ %231, %227 ]
  %235 = phi %class.SkCoincidentSpans** [ %264, %262 ], [ %3, %227 ]
  %236 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %234, i64 0, i32 1
  %237 = load %class.SkOpPtT*, %class.SkOpPtT** %236, align 8
  %238 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %237) #10
  %239 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %238, i64 0, i32 9
  %240 = load i32, i32* %239, align 8
  %241 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %238, i64 0, i32 8
  %242 = load i32, i32* %241, align 4
  %243 = icmp eq i32 %240, %242
  br i1 %243, label %253, label %244

244:                                              ; preds = %233
  %245 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %234, i64 0, i32 3
  %246 = load %class.SkOpPtT*, %class.SkOpPtT** %245, align 8
  %247 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %246) #10
  %248 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %247, i64 0, i32 9
  %249 = load i32, i32* %248, align 8
  %250 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %247, i64 0, i32 8
  %251 = load i32, i32* %250, align 4
  %252 = icmp eq i32 %249, %251
  br i1 %252, label %253, label %258

253:                                              ; preds = %244, %233
  %254 = bitcast %class.SkCoincidentSpans* %234 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = bitcast %class.SkCoincidentSpans** %235 to i64*
  store i64 %255, i64* %256, align 8
  %257 = inttoptr i64 %255 to %class.SkCoincidentSpans*
  br label %262

258:                                              ; preds = %244
  %259 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %235, align 8
  %260 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %259, i64 0, i32 0
  %261 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %260, align 8
  br label %262

262:                                              ; preds = %258, %253
  %263 = phi %class.SkCoincidentSpans* [ %257, %253 ], [ %261, %258 ]
  %264 = phi %class.SkCoincidentSpans** [ %235, %253 ], [ %260, %258 ]
  %265 = icmp eq %class.SkCoincidentSpans* %263, null
  br i1 %265, label %266, label %233

266:                                              ; preds = %22, %15, %8, %210, %172, %134, %94, %60, %183, %44, %178, %145, %140, %105, %100, %65, %51, %37, %262, %227, %2
  %267 = phi i1 [ true, %2 ], [ true, %227 ], [ true, %262 ], [ false, %210 ], [ false, %172 ], [ false, %134 ], [ false, %94 ], [ false, %178 ], [ true, %183 ], [ false, %140 ], [ false, %145 ], [ false, %100 ], [ false, %105 ], [ true, %60 ], [ false, %65 ], [ false, %37 ], [ false, %44 ], [ false, %51 ], [ false, %8 ], [ false, %15 ], [ true, %22 ]
  ret i1 %267
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15SkOpCoincidence7overlapEPK7SkOpPtTS2_S2_S2_PdS3_(%class.SkOpCoincidence* nocapture readnone, %class.SkOpPtT* nocapture readonly, %class.SkOpPtT* nocapture readonly, %class.SkOpPtT* nocapture readonly, %class.SkOpPtT* nocapture readonly, double* nocapture, double* nocapture) local_unnamed_addr #4 align 2 {
  %8 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %1, i64 0, i32 0
  %9 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %2, i64 0, i32 0
  %10 = load double, double* %9, align 8
  %11 = load double, double* %8, align 8
  %12 = fcmp olt double %10, %11
  %13 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %3, i64 0, i32 0
  %14 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %4, i64 0, i32 0
  %15 = load double, double* %14, align 8
  %16 = load double, double* %13, align 8
  %17 = fcmp olt double %15, %16
  %18 = select i1 %12, double %10, double %11
  %19 = select i1 %17, double %15, double %16
  %20 = fcmp olt double %18, %19
  %21 = select i1 %20, double %19, double %18
  store double %21, double* %5, align 8
  %22 = load double, double* %8, align 8
  %23 = load double, double* %9, align 8
  %24 = fcmp olt double %22, %23
  %25 = load double, double* %13, align 8
  %26 = load double, double* %14, align 8
  %27 = fcmp olt double %25, %26
  %28 = select i1 %27, double %26, double %25
  %29 = select i1 %24, double %23, double %22
  %30 = fcmp olt double %28, %29
  %31 = select i1 %30, double %28, double %29
  store double %31, double* %6, align 8
  %32 = load double, double* %5, align 8
  %33 = fcmp olt double %32, %31
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkOpCoincidence10addOverlapEPK11SkOpSegmentS2_S2_S2_PK7SkOpPtTS5_(%class.SkOpCoincidence*, %class.SkOpSegment*, %class.SkOpSegment*, %class.SkOpSegment*, %class.SkOpSegment*, %class.SkOpPtT*, %class.SkOpPtT*) local_unnamed_addr #0 align 2 {
  %8 = tail call %class.SkOpPtT* @_ZNK7SkOpPtT4findEPK11SkOpSegment(%class.SkOpPtT* %5, %class.SkOpSegment* %1) #10
  %9 = tail call %class.SkOpPtT* @_ZNK7SkOpPtT4findEPK11SkOpSegment(%class.SkOpPtT* %6, %class.SkOpSegment* %1) #10
  %10 = icmp eq %class.SkOpPtT* %8, null
  %11 = icmp eq %class.SkOpPtT* %9, null
  %12 = or i1 %10, %11
  br i1 %12, label %111, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %8, i64 0, i32 0
  %15 = load double, double* %14, align 8
  %16 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %9, i64 0, i32 0
  %17 = load double, double* %16, align 8
  %18 = fcmp olt double %15, %17
  %19 = select i1 %18, %class.SkOpPtT* %8, %class.SkOpPtT* %9
  %20 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %19, i64 0, i32 2
  %21 = bitcast %class.SkOpSpanBase** %20 to %class.SkOpSpan**
  %22 = load %class.SkOpSpan*, %class.SkOpSpan** %21, align 8
  %23 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %22, i64 0, i32 7
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %45

26:                                               ; preds = %13
  %27 = tail call %class.SkOpPtT* @_ZNK7SkOpPtT4findEPK11SkOpSegment(%class.SkOpPtT* %5, %class.SkOpSegment* %2) #10
  %28 = tail call %class.SkOpPtT* @_ZNK7SkOpPtT4findEPK11SkOpSegment(%class.SkOpPtT* %6, %class.SkOpSegment* %2) #10
  %29 = icmp eq %class.SkOpPtT* %27, null
  %30 = icmp eq %class.SkOpPtT* %28, null
  %31 = or i1 %29, %30
  br i1 %31, label %111, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %27, i64 0, i32 0
  %34 = load double, double* %33, align 8
  %35 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %28, i64 0, i32 0
  %36 = load double, double* %35, align 8
  %37 = fcmp olt double %34, %36
  %38 = select i1 %37, %class.SkOpPtT* %27, %class.SkOpPtT* %28
  %39 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %38, i64 0, i32 2
  %40 = bitcast %class.SkOpSpanBase** %39 to %class.SkOpSpan**
  %41 = load %class.SkOpSpan*, %class.SkOpSpan** %40, align 8
  %42 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %41, i64 0, i32 7
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %111, label %45

45:                                               ; preds = %32, %13
  %46 = phi %class.SkOpPtT* [ %27, %32 ], [ %8, %13 ]
  %47 = phi %class.SkOpPtT* [ %28, %32 ], [ %9, %13 ]
  %48 = ptrtoint %class.SkOpPtT* %47 to i64
  %49 = ptrtoint %class.SkOpPtT* %46 to i64
  %50 = tail call %class.SkOpPtT* @_ZNK7SkOpPtT4findEPK11SkOpSegment(%class.SkOpPtT* %5, %class.SkOpSegment* %3) #10
  %51 = tail call %class.SkOpPtT* @_ZNK7SkOpPtT4findEPK11SkOpSegment(%class.SkOpPtT* %6, %class.SkOpSegment* %3) #10
  %52 = icmp eq %class.SkOpPtT* %50, null
  %53 = icmp eq %class.SkOpPtT* %51, null
  %54 = or i1 %52, %53
  br i1 %54, label %111, label %55

55:                                               ; preds = %45
  %56 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %50, i64 0, i32 0
  %57 = load double, double* %56, align 8
  %58 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %51, i64 0, i32 0
  %59 = load double, double* %58, align 8
  %60 = fcmp olt double %57, %59
  %61 = select i1 %60, %class.SkOpPtT* %50, %class.SkOpPtT* %51
  %62 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %61, i64 0, i32 2
  %63 = bitcast %class.SkOpSpanBase** %62 to %class.SkOpSpan**
  %64 = load %class.SkOpSpan*, %class.SkOpSpan** %63, align 8
  %65 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %64, i64 0, i32 7
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %87

68:                                               ; preds = %55
  %69 = tail call %class.SkOpPtT* @_ZNK7SkOpPtT4findEPK11SkOpSegment(%class.SkOpPtT* %5, %class.SkOpSegment* %4) #10
  %70 = tail call %class.SkOpPtT* @_ZNK7SkOpPtT4findEPK11SkOpSegment(%class.SkOpPtT* %6, %class.SkOpSegment* %4) #10
  %71 = icmp eq %class.SkOpPtT* %69, null
  %72 = icmp eq %class.SkOpPtT* %70, null
  %73 = or i1 %71, %72
  br i1 %73, label %111, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %69, i64 0, i32 0
  %76 = load double, double* %75, align 8
  %77 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %70, i64 0, i32 0
  %78 = load double, double* %77, align 8
  %79 = fcmp olt double %76, %78
  %80 = select i1 %79, %class.SkOpPtT* %69, %class.SkOpPtT* %70
  %81 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %80, i64 0, i32 2
  %82 = bitcast %class.SkOpSpanBase** %81 to %class.SkOpSpan**
  %83 = load %class.SkOpSpan*, %class.SkOpSpan** %82, align 8
  %84 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %83, i64 0, i32 7
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %111, label %87

87:                                               ; preds = %74, %55
  %88 = phi %class.SkOpPtT* [ %69, %74 ], [ %50, %55 ]
  %89 = phi %class.SkOpPtT* [ %70, %74 ], [ %51, %55 ]
  %90 = ptrtoint %class.SkOpPtT* %89 to i64
  %91 = ptrtoint %class.SkOpPtT* %88 to i64
  %92 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* nonnull %46) #10
  %93 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* nonnull %88) #10
  %94 = icmp eq %class.SkOpSegment* %92, %93
  br i1 %94, label %111, label %95

95:                                               ; preds = %87
  %96 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %46, i64 0, i32 0
  %97 = load double, double* %96, align 8
  %98 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %47, i64 0, i32 0
  %99 = load double, double* %98, align 8
  %100 = fcmp ogt double %97, %99
  br i1 %100, label %101, label %102

101:                                              ; preds = %95
  br label %102

102:                                              ; preds = %101, %95
  %103 = phi i64 [ %48, %101 ], [ %49, %95 ]
  %104 = phi i64 [ %49, %101 ], [ %48, %95 ]
  %105 = phi i64 [ %90, %101 ], [ %91, %95 ]
  %106 = phi i64 [ %91, %101 ], [ %90, %95 ]
  %107 = inttoptr i64 %103 to %class.SkOpPtT*
  %108 = inttoptr i64 %104 to %class.SkOpPtT*
  %109 = inttoptr i64 %105 to %class.SkOpPtT*
  %110 = inttoptr i64 %106 to %class.SkOpPtT*
  tail call void @_ZN15SkOpCoincidence3addEP7SkOpPtTS1_S1_S1_(%class.SkOpCoincidence* %0, %class.SkOpPtT* %107, %class.SkOpPtT* %108, %class.SkOpPtT* %109, %class.SkOpPtT* %110) #10
  br label %111

111:                                              ; preds = %26, %68, %45, %7, %102, %74, %87, %32
  %112 = phi i1 [ false, %26 ], [ false, %7 ], [ true, %32 ], [ true, %102 ], [ false, %68 ], [ false, %45 ], [ true, %74 ], [ true, %87 ]
  ret i1 %112
}

declare %class.SkOpPtT* @_ZNK7SkOpPtT4findEPK11SkOpSegment(%class.SkOpPtT*, %class.SkOpSegment*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15SkOpCoincidence8containsEPK17SkCoincidentSpansPK11SkOpSegmentS5_d(%class.SkOpCoincidence* nocapture readnone, %class.SkCoincidentSpans* readonly, %class.SkOpSegment* readnone, %class.SkOpSegment* readnone, double) local_unnamed_addr #0 align 2 {
  %6 = icmp eq %class.SkCoincidentSpans* %1, null
  br i1 %6, label %55, label %7

7:                                                ; preds = %5, %51
  %8 = phi %class.SkCoincidentSpans* [ %53, %51 ], [ %1, %5 ]
  %9 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 1
  %10 = load %class.SkOpPtT*, %class.SkOpPtT** %9, align 8
  %11 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %10) #10
  %12 = icmp eq %class.SkOpSegment* %11, %2
  br i1 %12, label %13, label %30

13:                                               ; preds = %7
  %14 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 3
  %15 = load %class.SkOpPtT*, %class.SkOpPtT** %14, align 8
  %16 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %15) #10
  %17 = icmp eq %class.SkOpSegment* %16, %3
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = load %class.SkOpPtT*, %class.SkOpPtT** %14, align 8
  %20 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %19, i64 0, i32 0
  %21 = load double, double* %20, align 8
  %22 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 4
  %23 = load %class.SkOpPtT*, %class.SkOpPtT** %22, align 8
  %24 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %23, i64 0, i32 0
  %25 = load double, double* %24, align 8
  %26 = fsub double %21, %4
  %27 = fsub double %25, %4
  %28 = fmul double %26, %27
  %29 = fcmp ugt double %28, 0.000000e+00
  br i1 %29, label %30, label %55

30:                                               ; preds = %18, %13, %7
  %31 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 3
  %32 = load %class.SkOpPtT*, %class.SkOpPtT** %31, align 8
  %33 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %32) #10
  %34 = icmp eq %class.SkOpSegment* %33, %2
  br i1 %34, label %35, label %51

35:                                               ; preds = %30
  %36 = load %class.SkOpPtT*, %class.SkOpPtT** %9, align 8
  %37 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %36) #10
  %38 = icmp eq %class.SkOpSegment* %37, %3
  br i1 %38, label %39, label %51

39:                                               ; preds = %35
  %40 = load %class.SkOpPtT*, %class.SkOpPtT** %9, align 8
  %41 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %40, i64 0, i32 0
  %42 = load double, double* %41, align 8
  %43 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 2
  %44 = load %class.SkOpPtT*, %class.SkOpPtT** %43, align 8
  %45 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %44, i64 0, i32 0
  %46 = load double, double* %45, align 8
  %47 = fsub double %42, %4
  %48 = fsub double %46, %4
  %49 = fmul double %47, %48
  %50 = fcmp ugt double %49, 0.000000e+00
  br i1 %50, label %51, label %55

51:                                               ; preds = %39, %30, %35
  %52 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 0
  %53 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %52, align 8
  %54 = icmp eq %class.SkCoincidentSpans* %53, null
  br i1 %54, label %55, label %7

55:                                               ; preds = %18, %39, %51, %5
  %56 = phi i1 [ false, %5 ], [ false, %51 ], [ true, %39 ], [ true, %18 ]
  ret i1 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15SkOpCoincidence8containsEPK7SkOpPtTS2_S2_S2_(%class.SkOpCoincidence* nocapture readonly, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %7 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %6, align 8
  %8 = icmp eq %class.SkCoincidentSpans* %7, null
  br i1 %8, label %122, label %9

9:                                                ; preds = %5
  %10 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %1) #10
  %11 = ptrtoint %class.SkOpSegment* %10 to i64
  %12 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %3) #10
  %13 = ptrtoint %class.SkOpSegment* %12 to i64
  %14 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %1) #10
  %15 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %3) #10
  %16 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %14, i64 0, i32 10
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %15, i64 0, i32 10
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %17, %19
  br i1 %20, label %59, label %21

21:                                               ; preds = %9
  %22 = icmp sgt i32 %17, %19
  br i1 %22, label %52, label %23

23:                                               ; preds = %21
  %24 = add nsw i32 %17, 1
  %25 = ashr i32 %24, 2
  %26 = sub nsw i32 %17, %25
  %27 = shl i32 %26, 1
  %28 = add i32 %27, 2
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %59

30:                                               ; preds = %23
  %31 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %15, i64 0, i32 5
  %32 = load %struct.SkPoint*, %struct.SkPoint** %31, align 8
  %33 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %32, i64 0, i32 0
  %34 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %14, i64 0, i32 5
  %35 = load %struct.SkPoint*, %struct.SkPoint** %34, align 8
  %36 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %35, i64 0, i32 0
  br label %37

37:                                               ; preds = %126, %30
  %38 = phi i32 [ 0, %30 ], [ %129, %126 ]
  %39 = phi float* [ %33, %30 ], [ %128, %126 ]
  %40 = phi float* [ %36, %30 ], [ %127, %126 ]
  %41 = load float, float* %40, align 4
  %42 = load float, float* %39, align 4
  %43 = fcmp olt float %41, %42
  br i1 %43, label %59, label %44

44:                                               ; preds = %37
  %45 = fcmp ogt float %41, %42
  br i1 %45, label %52, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds float, float* %40, i64 1
  %48 = getelementptr inbounds float, float* %39, i64 1
  %49 = load float, float* %47, align 4
  %50 = load float, float* %48, align 4
  %51 = fcmp olt float %49, %50
  br i1 %51, label %59, label %124

52:                                               ; preds = %44, %124, %21
  %53 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %3, i64 0, i32 0
  %54 = load double, double* %53, align 8
  %55 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %4, i64 0, i32 0
  %56 = load double, double* %55, align 8
  %57 = fcmp ogt double %54, %56
  br i1 %57, label %58, label %59

58:                                               ; preds = %52
  br label %59

59:                                               ; preds = %37, %46, %126, %23, %9, %52, %58
  %60 = phi %class.SkOpPtT* [ %4, %58 ], [ %3, %52 ], [ %1, %9 ], [ %1, %23 ], [ %1, %126 ], [ %1, %46 ], [ %1, %37 ]
  %61 = phi %class.SkOpPtT* [ %3, %58 ], [ %4, %52 ], [ %2, %9 ], [ %2, %23 ], [ %2, %126 ], [ %2, %46 ], [ %2, %37 ]
  %62 = phi %class.SkOpPtT* [ %2, %58 ], [ %1, %52 ], [ %3, %9 ], [ %3, %23 ], [ %3, %126 ], [ %3, %46 ], [ %3, %37 ]
  %63 = phi %class.SkOpPtT* [ %1, %58 ], [ %2, %52 ], [ %4, %9 ], [ %4, %23 ], [ %4, %126 ], [ %4, %46 ], [ %4, %37 ]
  %64 = phi i64 [ %13, %58 ], [ %13, %52 ], [ %11, %9 ], [ %11, %23 ], [ %11, %126 ], [ %11, %46 ], [ %11, %37 ]
  %65 = phi i64 [ %11, %58 ], [ %11, %52 ], [ %13, %9 ], [ %13, %23 ], [ %13, %126 ], [ %13, %46 ], [ %13, %37 ]
  %66 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %62, i64 0, i32 0
  %67 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %63, i64 0, i32 0
  %68 = load double, double* %67, align 8
  %69 = load double, double* %66, align 8
  %70 = fcmp olt double %68, %69
  %71 = select i1 %70, double %68, double %69
  %72 = fcmp olt double %69, %68
  %73 = select i1 %72, double %68, double %69
  %74 = inttoptr i64 %64 to %class.SkOpSegment*
  %75 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %60, i64 0, i32 0
  %76 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %61, i64 0, i32 0
  %77 = inttoptr i64 %65 to %class.SkOpSegment*
  br label %78

78:                                               ; preds = %118, %59
  %79 = phi %class.SkCoincidentSpans* [ %7, %59 ], [ %120, %118 ]
  %80 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %79, i64 0, i32 1
  %81 = load %class.SkOpPtT*, %class.SkOpPtT** %80, align 8
  %82 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %81) #10
  %83 = icmp eq %class.SkOpSegment* %82, %74
  br i1 %83, label %84, label %118

84:                                               ; preds = %78
  %85 = load double, double* %75, align 8
  %86 = load %class.SkOpPtT*, %class.SkOpPtT** %80, align 8
  %87 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %86, i64 0, i32 0
  %88 = load double, double* %87, align 8
  %89 = fcmp olt double %85, %88
  br i1 %89, label %118, label %90

90:                                               ; preds = %84
  %91 = load double, double* %76, align 8
  %92 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %79, i64 0, i32 2
  %93 = load %class.SkOpPtT*, %class.SkOpPtT** %92, align 8
  %94 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %93, i64 0, i32 0
  %95 = load double, double* %94, align 8
  %96 = fcmp ogt double %91, %95
  br i1 %96, label %118, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %79, i64 0, i32 3
  %99 = load %class.SkOpPtT*, %class.SkOpPtT** %98, align 8
  %100 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %99) #10
  %101 = icmp eq %class.SkOpSegment* %100, %77
  br i1 %101, label %102, label %118

102:                                              ; preds = %97
  %103 = load %class.SkOpPtT*, %class.SkOpPtT** %98, align 8
  %104 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %103, i64 0, i32 0
  %105 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %79, i64 0, i32 4
  %106 = load %class.SkOpPtT*, %class.SkOpPtT** %105, align 8
  %107 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %106, i64 0, i32 0
  %108 = load double, double* %107, align 8
  %109 = load double, double* %104, align 8
  %110 = fcmp olt double %108, %109
  %111 = select i1 %110, double %108, double %109
  %112 = fcmp olt double %71, %111
  br i1 %112, label %118, label %113

113:                                              ; preds = %102
  %114 = fcmp olt double %109, %108
  %115 = select i1 %114, double* %107, double* %104
  %116 = load double, double* %115, align 8
  %117 = fcmp ogt double %73, %116
  br i1 %117, label %118, label %122

118:                                              ; preds = %97, %78, %113, %102, %90, %84
  %119 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %79, i64 0, i32 0
  %120 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %119, align 8
  %121 = icmp eq %class.SkCoincidentSpans* %120, null
  br i1 %121, label %122, label %78

122:                                              ; preds = %113, %118, %5
  %123 = phi i1 [ false, %5 ], [ false, %118 ], [ true, %113 ]
  ret i1 %123

124:                                              ; preds = %46
  %125 = fcmp ogt float %49, %50
  br i1 %125, label %52, label %126

126:                                              ; preds = %124
  %127 = getelementptr inbounds float, float* %40, i64 2
  %128 = getelementptr inbounds float, float* %39, i64 2
  %129 = add nuw nsw i32 %38, 2
  %130 = icmp eq i32 %129, %28
  br i1 %130, label %59, label %37
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN15SkOpCoincidence11correctEndsEv(%class.SkOpCoincidence* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %3 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %2, align 8
  %4 = icmp eq %class.SkCoincidentSpans* %3, null
  br i1 %4, label %98, label %5

5:                                                ; preds = %1, %94
  %6 = phi %class.SkCoincidentSpans* [ %96, %94 ], [ %3, %1 ]
  %7 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %6, i64 0, i32 1
  %8 = load %class.SkOpPtT*, %class.SkOpPtT** %7, align 8
  %9 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %8, i64 0, i32 2
  %10 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %9, align 8
  %11 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %10, i64 0, i32 4
  %12 = load %class.SkOpSpan*, %class.SkOpSpan** %11, align 8
  %13 = icmp eq %class.SkOpSpan* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %12, i64 0, i32 4
  br label %21

16:                                               ; preds = %5
  %17 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %10, i64 1, i32 0, i32 2
  %18 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %17, align 8
  %19 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %18, i64 0, i32 4
  %20 = bitcast %class.SkOpSpan** %19 to %class.SkOpSpanBase**
  br label %21

21:                                               ; preds = %16, %14
  %22 = phi %class.SkOpSpanBase** [ %15, %14 ], [ %20, %16 ]
  %23 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %22, align 8
  %24 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %23, i64 0, i32 0
  %25 = icmp eq %class.SkOpPtT* %8, %24
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  store %class.SkOpPtT* %24, %class.SkOpPtT** %7, align 8
  %27 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %23, i64 0, i32 0, i32 6
  store i8 1, i8* %27, align 2
  br label %28

28:                                               ; preds = %26, %21
  %29 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %6, i64 0, i32 2
  %30 = load %class.SkOpPtT*, %class.SkOpPtT** %29, align 8
  %31 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %30, i64 0, i32 2
  %32 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %31, align 8
  %33 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %32, i64 0, i32 4
  %34 = load %class.SkOpSpan*, %class.SkOpSpan** %33, align 8
  %35 = icmp eq %class.SkOpSpan* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %34, i64 0, i32 4
  br label %43

38:                                               ; preds = %28
  %39 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %32, i64 1, i32 0, i32 2
  %40 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %39, align 8
  %41 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %40, i64 0, i32 4
  %42 = bitcast %class.SkOpSpan** %41 to %class.SkOpSpanBase**
  br label %43

43:                                               ; preds = %38, %36
  %44 = phi %class.SkOpSpanBase** [ %37, %36 ], [ %42, %38 ]
  %45 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %44, align 8
  %46 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %45, i64 0, i32 0
  %47 = icmp eq %class.SkOpPtT* %30, %46
  br i1 %47, label %50, label %48

48:                                               ; preds = %43
  store %class.SkOpPtT* %46, %class.SkOpPtT** %29, align 8
  %49 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %45, i64 0, i32 0, i32 6
  store i8 1, i8* %49, align 2
  br label %50

50:                                               ; preds = %48, %43
  %51 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %6, i64 0, i32 3
  %52 = load %class.SkOpPtT*, %class.SkOpPtT** %51, align 8
  %53 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %52, i64 0, i32 2
  %54 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %53, align 8
  %55 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %54, i64 0, i32 4
  %56 = load %class.SkOpSpan*, %class.SkOpSpan** %55, align 8
  %57 = icmp eq %class.SkOpSpan* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %56, i64 0, i32 4
  br label %65

60:                                               ; preds = %50
  %61 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %54, i64 1, i32 0, i32 2
  %62 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %61, align 8
  %63 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %62, i64 0, i32 4
  %64 = bitcast %class.SkOpSpan** %63 to %class.SkOpSpanBase**
  br label %65

65:                                               ; preds = %60, %58
  %66 = phi %class.SkOpSpanBase** [ %59, %58 ], [ %64, %60 ]
  %67 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %66, align 8
  %68 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %67, i64 0, i32 0
  %69 = icmp eq %class.SkOpPtT* %52, %68
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  store %class.SkOpPtT* %68, %class.SkOpPtT** %51, align 8
  %71 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %67, i64 0, i32 0, i32 6
  store i8 1, i8* %71, align 2
  br label %72

72:                                               ; preds = %70, %65
  %73 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %6, i64 0, i32 4
  %74 = load %class.SkOpPtT*, %class.SkOpPtT** %73, align 8
  %75 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %74, i64 0, i32 2
  %76 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %75, align 8
  %77 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %76, i64 0, i32 4
  %78 = load %class.SkOpSpan*, %class.SkOpSpan** %77, align 8
  %79 = icmp eq %class.SkOpSpan* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %72
  %81 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %78, i64 0, i32 4
  br label %87

82:                                               ; preds = %72
  %83 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %76, i64 1, i32 0, i32 2
  %84 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %83, align 8
  %85 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %84, i64 0, i32 4
  %86 = bitcast %class.SkOpSpan** %85 to %class.SkOpSpanBase**
  br label %87

87:                                               ; preds = %82, %80
  %88 = phi %class.SkOpSpanBase** [ %81, %80 ], [ %86, %82 ]
  %89 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %88, align 8
  %90 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %89, i64 0, i32 0
  %91 = icmp eq %class.SkOpPtT* %74, %90
  br i1 %91, label %94, label %92

92:                                               ; preds = %87
  store %class.SkOpPtT* %90, %class.SkOpPtT** %73, align 8
  %93 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %89, i64 0, i32 0, i32 6
  store i8 1, i8* %93, align 2
  br label %94

94:                                               ; preds = %87, %92
  %95 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %6, i64 0, i32 0
  %96 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %95, align 8
  %97 = icmp eq %class.SkCoincidentSpans* %96, null
  br i1 %97, label %98, label %5

98:                                               ; preds = %94, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkOpCoincidence5applyEv(%class.SkOpCoincidence* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %3 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %2, align 8
  %4 = icmp eq %class.SkCoincidentSpans* %3, null
  br i1 %4, label %192, label %5

5:                                                ; preds = %1, %188
  %6 = phi %class.SkCoincidentSpans* [ %190, %188 ], [ %3, %1 ]
  %7 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %6, i64 0, i32 1
  %8 = load %class.SkOpPtT*, %class.SkOpPtT** %7, align 8
  %9 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %8, i64 0, i32 2
  %10 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %9, align 8
  %11 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %10, i64 0, i32 0, i32 0
  %12 = load double, double* %11, align 8
  %13 = fcmp une double %12, 1.000000e+00
  %14 = icmp ne %class.SkOpSpanBase* %10, null
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %192

16:                                               ; preds = %5
  %17 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %10, i64 0, i32 0, i32 4
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %188

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %6, i64 0, i32 2
  %22 = load %class.SkOpPtT*, %class.SkOpPtT** %21, align 8
  %23 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %22, i64 0, i32 2
  %24 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %23, align 8
  %25 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %24, i64 0, i32 0, i32 0
  %26 = load double, double* %25, align 8
  %27 = fcmp olt double %12, %26
  %28 = select i1 %27, %class.SkOpSpanBase* %10, %class.SkOpSpanBase* %24
  %29 = icmp eq %class.SkOpSpanBase* %10, %28
  br i1 %29, label %30, label %192

30:                                               ; preds = %20
  %31 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %6, i64 0, i32 3
  %32 = load %class.SkOpPtT*, %class.SkOpPtT** %31, align 8
  %33 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %32, i64 0, i32 0
  %34 = load double, double* %33, align 8
  %35 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %6, i64 0, i32 4
  %36 = load %class.SkOpPtT*, %class.SkOpPtT** %35, align 8
  %37 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %36, i64 0, i32 0
  %38 = load double, double* %37, align 8
  %39 = fcmp ogt double %34, %38
  %40 = select i1 %39, %class.SkOpPtT* %36, %class.SkOpPtT* %32
  %41 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %40, i64 0, i32 2
  %42 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %41, align 8
  %43 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %42, i64 0, i32 0, i32 0
  %44 = load double, double* %43, align 8
  %45 = fcmp une double %44, 1.000000e+00
  %46 = bitcast %class.SkOpSpanBase* %42 to %class.SkOpSpan*
  %47 = icmp ne %class.SkOpSpanBase* %42, null
  %48 = and i1 %47, %45
  br i1 %48, label %49, label %192

49:                                               ; preds = %30
  %50 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %42, i64 0, i32 0, i32 4
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %188

53:                                               ; preds = %49
  %54 = select i1 %39, %class.SkOpPtT* %32, %class.SkOpPtT* %36
  %55 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %54, i64 0, i32 2
  %56 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %55, align 8
  %57 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %10, i64 0, i32 1
  %58 = load %class.SkOpSegment*, %class.SkOpSegment** %57, align 8
  %59 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %42, i64 0, i32 1
  %60 = load %class.SkOpSegment*, %class.SkOpSegment** %59, align 8
  %61 = tail call zeroext i1 @_ZNK11SkOpSegment7operandEv(%class.SkOpSegment* %58) #10
  %62 = tail call zeroext i1 @_ZNK11SkOpSegment7operandEv(%class.SkOpSegment* %60) #10
  %63 = xor i1 %61, %62
  br i1 %39, label %66, label %64

64:                                               ; preds = %70, %53
  %65 = phi %class.SkOpSpan* [ %46, %53 ], [ %71, %70 ]
  br label %179

66:                                               ; preds = %53
  %67 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %56, i64 0, i32 0, i32 4
  %68 = load i8, i8* %67, align 8, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %188

70:                                               ; preds = %66, %75
  %71 = phi %class.SkOpSpan* [ %79, %75 ], [ %46, %66 ]
  %72 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %71, i64 0, i32 4
  %73 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %72, align 8
  %74 = icmp eq %class.SkOpSpanBase* %73, %56
  br i1 %74, label %64, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %73, i64 0, i32 0, i32 0
  %77 = load double, double* %76, align 8
  %78 = fcmp une double %77, 1.000000e+00
  %79 = bitcast %class.SkOpSpanBase* %73 to %class.SkOpSpan*
  %80 = icmp ne %class.SkOpSpanBase* %73, null
  %81 = and i1 %80, %78
  br i1 %81, label %70, label %192

82:                                               ; preds = %179, %187
  %83 = phi %class.SkOpSpanBase* [ %156, %187 ], [ %180, %179 ]
  %84 = bitcast %class.SkOpSpanBase* %83 to %class.SkOpSpan*
  %85 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %83, i64 1, i32 0, i32 4
  %86 = bitcast i8* %85 to i32*
  %87 = load i32, i32* %86, align 8
  %88 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %83, i64 1, i32 0, i32 7, i64 1
  %89 = bitcast i8* %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = load i32, i32* %182, align 8
  %92 = load i32, i32* %183, align 4
  %93 = select i1 %63, i32 %92, i32 %91
  %94 = select i1 %63, i32 %90, i32 %87
  %95 = sub i32 0, %93
  %96 = sub i32 0, %94
  %97 = select i1 %39, i32 %93, i32 %95
  %98 = select i1 %39, i32 %94, i32 %96
  %99 = icmp eq i32 %87, 0
  br i1 %99, label %110, label %100

100:                                              ; preds = %82
  %101 = icmp sgt i32 %87, %97
  br i1 %101, label %106, label %102

102:                                              ; preds = %100
  %103 = icmp eq i32 %87, %97
  %104 = icmp sle i32 %91, %98
  %105 = and i1 %104, %103
  br i1 %105, label %106, label %110

106:                                              ; preds = %102, %100
  %107 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %84, i64 0, i32 10
  %108 = load i8, i8* %107, align 4, !range !2
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %113, label %127

110:                                              ; preds = %102, %82
  %111 = load i8, i8* %184, align 4, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %127, label %113

113:                                              ; preds = %106, %110
  %114 = select i1 %63, i32 %91, i32 %92
  %115 = select i1 %39, i32 %95, i32 %93
  %116 = add i32 %115, %87
  %117 = sub i32 0, %114
  %118 = select i1 %39, i32 %117, i32 %114
  %119 = add i32 %118, %90
  %120 = tail call zeroext i1 @_ZNK11SkOpSegment5isXorEv(%class.SkOpSegment* %58) #10
  %121 = and i32 %116, 1
  %122 = select i1 %120, i32 %121, i32 %116
  %123 = tail call zeroext i1 @_ZNK11SkOpSegment6oppXorEv(%class.SkOpSegment* %58) #10
  %124 = and i32 %119, 1
  %125 = select i1 %123, i32 %124, i32 %119
  %126 = icmp slt i32 %122, 0
  br i1 %126, label %192, label %141

127:                                              ; preds = %106, %110
  %128 = select i1 %63, i32 %87, i32 %90
  %129 = select i1 %39, i32 %96, i32 %94
  %130 = add i32 %129, %91
  %131 = sub i32 0, %128
  %132 = select i1 %39, i32 %131, i32 %128
  %133 = add i32 %92, %132
  %134 = tail call zeroext i1 @_ZNK11SkOpSegment5isXorEv(%class.SkOpSegment* %60) #10
  %135 = and i32 %130, 1
  %136 = select i1 %134, i32 %135, i32 %130
  %137 = tail call zeroext i1 @_ZNK11SkOpSegment6oppXorEv(%class.SkOpSegment* %60) #10
  %138 = and i32 %133, 1
  %139 = select i1 %137, i32 %138, i32 %133
  store i32 0, i32* %86, align 8
  store i32 0, i32* %89, align 4
  %140 = icmp sgt i32 %136, -1
  br i1 %140, label %142, label %192

141:                                              ; preds = %113
  store i32 %122, i32* %86, align 8
  store i32 %125, i32* %89, align 4
  br label %142

142:                                              ; preds = %141, %127
  %143 = phi i32 [ %122, %141 ], [ 0, %127 ]
  %144 = phi i32 [ %125, %141 ], [ 0, %127 ]
  %145 = phi i32 [ 0, %141 ], [ %136, %127 ]
  %146 = phi i32 [ 0, %141 ], [ %139, %127 ]
  store i32 %145, i32* %182, align 8
  store i32 %146, i32* %183, align 4
  %147 = or i32 %144, %143
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %142
  tail call void @_ZN11SkOpSegment8markDoneEP8SkOpSpan(%class.SkOpSegment* %58, %class.SkOpSpan* %84) #10
  br label %150

150:                                              ; preds = %142, %149
  %151 = or i32 %146, %145
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  tail call void @_ZN11SkOpSegment8markDoneEP8SkOpSpan(%class.SkOpSegment* %60, %class.SkOpSpan* %181) #10
  br label %154

154:                                              ; preds = %150, %153
  %155 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %83, i64 1, i32 0, i32 2
  %156 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %155, align 8
  br i1 %39, label %157, label %160

157:                                              ; preds = %154
  %158 = load %class.SkOpSpan*, %class.SkOpSpan** %186, align 8
  %159 = bitcast %class.SkOpSpan* %158 to %class.SkOpSpanBase*
  br label %163

160:                                              ; preds = %154
  %161 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %185, align 8
  %162 = bitcast %class.SkOpSpanBase* %161 to %class.SkOpSpan*
  br label %163

163:                                              ; preds = %160, %157
  %164 = phi %class.SkOpSpan* [ %158, %157 ], [ %162, %160 ]
  %165 = phi %class.SkOpSpanBase* [ %159, %157 ], [ %161, %160 ]
  %166 = icmp eq %class.SkOpSpanBase* %156, %24
  br i1 %166, label %188, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %156, i64 0, i32 0, i32 0
  %169 = load double, double* %168, align 8
  %170 = fcmp une double %169, 1.000000e+00
  %171 = icmp ne %class.SkOpSpanBase* %156, null
  %172 = and i1 %171, %170
  br i1 %172, label %173, label %192

173:                                              ; preds = %167
  %174 = icmp eq %class.SkOpSpanBase* %165, null
  br i1 %174, label %187, label %175

175:                                              ; preds = %173
  %176 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %165, i64 0, i32 0, i32 0
  %177 = load double, double* %176, align 8
  %178 = fcmp oeq double %177, 1.000000e+00
  br i1 %178, label %187, label %179

179:                                              ; preds = %175, %64
  %180 = phi %class.SkOpSpanBase* [ %10, %64 ], [ %156, %175 ]
  %181 = phi %class.SkOpSpan* [ %65, %64 ], [ %164, %175 ]
  %182 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %181, i64 0, i32 7
  %183 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %181, i64 0, i32 8
  %184 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %181, i64 0, i32 10
  %185 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %181, i64 0, i32 4
  %186 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %181, i64 0, i32 0, i32 4
  br label %82

187:                                              ; preds = %175, %173
  br label %82

188:                                              ; preds = %163, %66, %49, %16
  %189 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %6, i64 0, i32 0
  %190 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %189, align 8
  %191 = icmp eq %class.SkCoincidentSpans* %190, null
  br i1 %191, label %192, label %5

192:                                              ; preds = %20, %30, %5, %188, %75, %113, %167, %127, %1
  %193 = phi i1 [ true, %1 ], [ false, %127 ], [ false, %167 ], [ false, %113 ], [ false, %75 ], [ false, %20 ], [ false, %30 ], [ false, %5 ], [ true, %188 ]
  ret i1 %193
}

declare zeroext i1 @_ZNK11SkOpSegment7operandEv(%class.SkOpSegment*) local_unnamed_addr #1

declare zeroext i1 @_ZNK11SkOpSegment5isXorEv(%class.SkOpSegment*) local_unnamed_addr #1

declare zeroext i1 @_ZNK11SkOpSegment6oppXorEv(%class.SkOpSegment*) local_unnamed_addr #1

declare void @_ZN11SkOpSegment8markDoneEP8SkOpSpan(%class.SkOpSegment*, %class.SkOpSpan*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN15SkOpCoincidence14releaseDeletedEP17SkCoincidentSpans(%class.SkOpCoincidence* nocapture, %class.SkCoincidentSpans*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq %class.SkCoincidentSpans* %1, null
  br i1 %3, label %31, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %6 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 1
  br label %7

7:                                                ; preds = %4, %28
  %8 = phi %class.SkCoincidentSpans* [ %11, %28 ], [ %1, %4 ]
  %9 = phi %class.SkCoincidentSpans* [ %29, %28 ], [ null, %4 ]
  %10 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 0
  %11 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %10, align 8
  %12 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 1
  %13 = load %class.SkOpPtT*, %class.SkOpPtT** %12, align 8
  %14 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %13, i64 0, i32 4
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %7
  %18 = icmp eq %class.SkCoincidentSpans* %9, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %9, i64 0, i32 0
  br label %25

21:                                               ; preds = %17
  %22 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %5, align 8
  %23 = icmp eq %class.SkCoincidentSpans* %22, %1
  %24 = select i1 %23, %class.SkCoincidentSpans** %5, %class.SkCoincidentSpans** %6
  br label %25

25:                                               ; preds = %21, %19
  %26 = phi %class.SkCoincidentSpans** [ %20, %19 ], [ %24, %21 ]
  %27 = phi %class.SkCoincidentSpans* [ %9, %19 ], [ null, %21 ]
  store %class.SkCoincidentSpans* %11, %class.SkCoincidentSpans** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi %class.SkCoincidentSpans* [ %8, %7 ], [ %27, %25 ]
  %30 = icmp eq %class.SkCoincidentSpans* %11, null
  br i1 %30, label %31, label %7

31:                                               ; preds = %28, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN15SkOpCoincidence14releaseDeletedEv(%class.SkOpCoincidence* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %3 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %2, align 8
  %4 = icmp eq %class.SkCoincidentSpans* %3, null
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 1
  br label %7

7:                                                ; preds = %28, %5
  %8 = phi %class.SkCoincidentSpans* [ %11, %28 ], [ %3, %5 ]
  %9 = phi %class.SkCoincidentSpans* [ %29, %28 ], [ null, %5 ]
  %10 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 0
  %11 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %10, align 8
  %12 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 1
  %13 = load %class.SkOpPtT*, %class.SkOpPtT** %12, align 8
  %14 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %13, i64 0, i32 4
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %7
  %18 = icmp eq %class.SkCoincidentSpans* %9, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %9, i64 0, i32 0
  br label %25

21:                                               ; preds = %17
  %22 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %2, align 8
  %23 = icmp eq %class.SkCoincidentSpans* %22, %3
  %24 = select i1 %23, %class.SkCoincidentSpans** %2, %class.SkCoincidentSpans** %6
  br label %25

25:                                               ; preds = %21, %19
  %26 = phi %class.SkCoincidentSpans** [ %20, %19 ], [ %24, %21 ]
  %27 = phi %class.SkCoincidentSpans* [ %9, %19 ], [ null, %21 ]
  store %class.SkCoincidentSpans* %11, %class.SkCoincidentSpans** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi %class.SkCoincidentSpans* [ %8, %7 ], [ %27, %25 ]
  %30 = icmp eq %class.SkCoincidentSpans* %11, null
  br i1 %30, label %31, label %7

31:                                               ; preds = %28, %1
  %32 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 1
  %33 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %32, align 8
  %34 = icmp eq %class.SkCoincidentSpans* %33, null
  br i1 %34, label %59, label %35

35:                                               ; preds = %31, %56
  %36 = phi %class.SkCoincidentSpans* [ %39, %56 ], [ %33, %31 ]
  %37 = phi %class.SkCoincidentSpans* [ %57, %56 ], [ null, %31 ]
  %38 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %36, i64 0, i32 0
  %39 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %38, align 8
  %40 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %36, i64 0, i32 1
  %41 = load %class.SkOpPtT*, %class.SkOpPtT** %40, align 8
  %42 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %41, i64 0, i32 4
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %56, label %45

45:                                               ; preds = %35
  %46 = icmp eq %class.SkCoincidentSpans* %37, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %37, i64 0, i32 0
  br label %53

49:                                               ; preds = %45
  %50 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %2, align 8
  %51 = icmp eq %class.SkCoincidentSpans* %50, %33
  %52 = select i1 %51, %class.SkCoincidentSpans** %2, %class.SkCoincidentSpans** %32
  br label %53

53:                                               ; preds = %49, %47
  %54 = phi %class.SkCoincidentSpans** [ %48, %47 ], [ %52, %49 ]
  %55 = phi %class.SkCoincidentSpans* [ %37, %47 ], [ null, %49 ]
  store %class.SkCoincidentSpans* %39, %class.SkCoincidentSpans** %54, align 8
  br label %56

56:                                               ; preds = %53, %35
  %57 = phi %class.SkCoincidentSpans* [ %36, %35 ], [ %55, %53 ]
  %58 = icmp eq %class.SkCoincidentSpans* %39, null
  br i1 %58, label %59, label %35

59:                                               ; preds = %56, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkOpCoincidence6expandEv(%class.SkOpCoincidence* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %3 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %2, align 8
  %4 = icmp eq %class.SkCoincidentSpans* %3, null
  br i1 %4, label %56, label %5

5:                                                ; preds = %1, %48
  %6 = phi %class.SkCoincidentSpans* [ %51, %48 ], [ %3, %1 ]
  %7 = phi i8 [ %49, %48 ], [ 0, %1 ]
  %8 = tail call zeroext i1 @_ZN17SkCoincidentSpans6expandEv(%class.SkCoincidentSpans* nonnull %6)
  br i1 %8, label %9, label %48

9:                                                ; preds = %5
  %10 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %2, align 8
  %11 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %6, i64 0, i32 1
  %12 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %6, i64 0, i32 3
  br label %13

13:                                               ; preds = %44, %9
  %14 = phi %class.SkCoincidentSpans* [ %10, %9 ], [ %46, %44 ]
  %15 = icmp eq %class.SkCoincidentSpans* %6, %14
  br i1 %15, label %44, label %16

16:                                               ; preds = %13
  %17 = load %class.SkOpPtT*, %class.SkOpPtT** %11, align 8
  %18 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %14, i64 0, i32 1
  %19 = load %class.SkOpPtT*, %class.SkOpPtT** %18, align 8
  %20 = icmp eq %class.SkOpPtT* %17, %19
  br i1 %20, label %21, label %44

21:                                               ; preds = %16
  %22 = load %class.SkOpPtT*, %class.SkOpPtT** %12, align 8
  %23 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %14, i64 0, i32 3
  %24 = load %class.SkOpPtT*, %class.SkOpPtT** %23, align 8
  %25 = icmp eq %class.SkOpPtT* %22, %24
  br i1 %25, label %26, label %44

26:                                               ; preds = %21
  %27 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %10, i64 0, i32 0
  %28 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %27, align 8
  %29 = icmp eq %class.SkCoincidentSpans* %10, %14
  br i1 %29, label %38, label %40

30:                                               ; preds = %40
  %31 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %41, i64 0, i32 0
  %32 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %31, align 8
  %33 = icmp eq %class.SkCoincidentSpans* %41, %14
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = icmp eq %class.SkCoincidentSpans* %42, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %42, i64 0, i32 0
  store %class.SkCoincidentSpans* %32, %class.SkCoincidentSpans** %37, align 8
  br label %48

38:                                               ; preds = %26, %34
  %39 = phi %class.SkCoincidentSpans* [ %32, %34 ], [ %28, %26 ]
  store %class.SkCoincidentSpans* %39, %class.SkCoincidentSpans** %2, align 8
  br label %48

40:                                               ; preds = %26, %30
  %41 = phi %class.SkCoincidentSpans* [ %32, %30 ], [ %28, %26 ]
  %42 = phi %class.SkCoincidentSpans* [ %41, %30 ], [ %10, %26 ]
  %43 = icmp eq %class.SkCoincidentSpans* %41, null
  br i1 %43, label %48, label %30

44:                                               ; preds = %16, %21, %13
  %45 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %14, i64 0, i32 0
  %46 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %45, align 8
  %47 = icmp eq %class.SkCoincidentSpans* %46, null
  br i1 %47, label %48, label %13

48:                                               ; preds = %44, %40, %38, %36, %5
  %49 = phi i8 [ %7, %5 ], [ 1, %36 ], [ 1, %38 ], [ 1, %40 ], [ 1, %44 ]
  %50 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %6, i64 0, i32 0
  %51 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %50, align 8
  %52 = icmp eq %class.SkCoincidentSpans* %51, null
  br i1 %52, label %53, label %5

53:                                               ; preds = %48
  %54 = and i8 %49, 1
  %55 = icmp ne i8 %54, 0
  br label %56

56:                                               ; preds = %1, %53
  %57 = phi i1 [ %55, %53 ], [ false, %1 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15SkOpCoincidence12findOverlapsEPS_(%class.SkOpCoincidence* nocapture readonly, %class.SkOpCoincidence*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %4 = bitcast %class.SkOpCoincidence* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  %5 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %3, align 8
  %6 = icmp eq %class.SkCoincidentSpans* %5, null
  br i1 %6, label %218, label %7

7:                                                ; preds = %2, %215
  %8 = phi %class.SkCoincidentSpans* [ %216, %215 ], [ %5, %2 ]
  %9 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 1
  %10 = load %class.SkOpPtT*, %class.SkOpPtT** %9, align 8
  %11 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %10) #10
  %12 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 3
  %13 = load %class.SkOpPtT*, %class.SkOpPtT** %12, align 8
  %14 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %13) #10
  %15 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 0
  %16 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %15, align 8
  %17 = icmp eq %class.SkCoincidentSpans* %16, null
  br i1 %17, label %218, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 4
  %20 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %8, i64 0, i32 2
  br label %21

21:                                               ; preds = %18, %211
  %22 = phi %class.SkCoincidentSpans* [ %16, %18 ], [ %213, %211 ]
  %23 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %22, i64 0, i32 1
  %24 = load %class.SkOpPtT*, %class.SkOpPtT** %23, align 8
  %25 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %24) #10
  %26 = icmp eq %class.SkOpSegment* %11, %25
  br i1 %26, label %211, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %22, i64 0, i32 3
  %29 = load %class.SkOpPtT*, %class.SkOpPtT** %28, align 8
  %30 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %29) #10
  %31 = icmp eq %class.SkOpSegment* %14, %25
  br i1 %31, label %32, label %89

32:                                               ; preds = %27
  %33 = load %class.SkOpPtT*, %class.SkOpPtT** %12, align 8
  %34 = load %class.SkOpPtT*, %class.SkOpPtT** %19, align 8
  %35 = load %class.SkOpPtT*, %class.SkOpPtT** %23, align 8
  %36 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %22, i64 0, i32 2
  %37 = load %class.SkOpPtT*, %class.SkOpPtT** %36, align 8
  %38 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %33, i64 0, i32 0
  %39 = load double, double* %38, align 8
  %40 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %34, i64 0, i32 0
  %41 = load double, double* %40, align 8
  %42 = fcmp olt double %39, %41
  %43 = select i1 %42, %class.SkOpPtT* %33, %class.SkOpPtT* %34
  %44 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %35, i64 0, i32 0
  %45 = load double, double* %44, align 8
  %46 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %37, i64 0, i32 0
  %47 = load double, double* %46, align 8
  %48 = fcmp olt double %45, %47
  %49 = select i1 %48, %class.SkOpPtT* %35, %class.SkOpPtT* %37
  %50 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %49, i64 0, i32 0
  %51 = load double, double* %50, align 8
  %52 = fsub double %39, %51
  %53 = fsub double %41, %51
  %54 = fmul double %52, %53
  %55 = fcmp ugt double %54, 0.000000e+00
  br i1 %55, label %56, label %64

56:                                               ; preds = %32
  %57 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %43, i64 0, i32 0
  %58 = load double, double* %57, align 8
  %59 = fsub double %45, %58
  %60 = fsub double %47, %58
  %61 = fmul double %59, %60
  %62 = fcmp ole double %61, 0.000000e+00
  %63 = select i1 %62, %class.SkOpPtT* %43, %class.SkOpPtT* null
  br label %64

64:                                               ; preds = %56, %32
  %65 = phi %class.SkOpPtT* [ %63, %56 ], [ %49, %32 ]
  %66 = select i1 %42, %class.SkOpPtT* %34, %class.SkOpPtT* %33
  %67 = select i1 %48, %class.SkOpPtT* %37, %class.SkOpPtT* %35
  %68 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %67, i64 0, i32 0
  %69 = load double, double* %68, align 8
  %70 = fsub double %39, %69
  %71 = fsub double %41, %69
  %72 = fmul double %70, %71
  %73 = fcmp ugt double %72, 0.000000e+00
  br i1 %73, label %74, label %82

74:                                               ; preds = %64
  %75 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %66, i64 0, i32 0
  %76 = load double, double* %75, align 8
  %77 = fsub double %45, %76
  %78 = fsub double %47, %76
  %79 = fmul double %77, %78
  %80 = fcmp ole double %79, 0.000000e+00
  %81 = select i1 %80, %class.SkOpPtT* %66, %class.SkOpPtT* null
  br label %82

82:                                               ; preds = %74, %64
  %83 = phi %class.SkOpPtT* [ %81, %74 ], [ %67, %64 ]
  %84 = icmp eq %class.SkOpPtT* %65, %83
  br i1 %84, label %89, label %85

85:                                               ; preds = %82
  %86 = icmp ne %class.SkOpPtT* %65, null
  %87 = icmp ne %class.SkOpPtT* %83, null
  %88 = and i1 %86, %87
  br i1 %88, label %207, label %89

89:                                               ; preds = %82, %85, %27
  %90 = icmp eq %class.SkOpSegment* %11, %30
  br i1 %90, label %91, label %148

91:                                               ; preds = %89
  %92 = load %class.SkOpPtT*, %class.SkOpPtT** %9, align 8
  %93 = load %class.SkOpPtT*, %class.SkOpPtT** %20, align 8
  %94 = load %class.SkOpPtT*, %class.SkOpPtT** %28, align 8
  %95 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %22, i64 0, i32 4
  %96 = load %class.SkOpPtT*, %class.SkOpPtT** %95, align 8
  %97 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %92, i64 0, i32 0
  %98 = load double, double* %97, align 8
  %99 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %93, i64 0, i32 0
  %100 = load double, double* %99, align 8
  %101 = fcmp olt double %98, %100
  %102 = select i1 %101, %class.SkOpPtT* %92, %class.SkOpPtT* %93
  %103 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %94, i64 0, i32 0
  %104 = load double, double* %103, align 8
  %105 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %96, i64 0, i32 0
  %106 = load double, double* %105, align 8
  %107 = fcmp olt double %104, %106
  %108 = select i1 %107, %class.SkOpPtT* %94, %class.SkOpPtT* %96
  %109 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %108, i64 0, i32 0
  %110 = load double, double* %109, align 8
  %111 = fsub double %98, %110
  %112 = fsub double %100, %110
  %113 = fmul double %111, %112
  %114 = fcmp ugt double %113, 0.000000e+00
  br i1 %114, label %115, label %123

115:                                              ; preds = %91
  %116 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %102, i64 0, i32 0
  %117 = load double, double* %116, align 8
  %118 = fsub double %104, %117
  %119 = fsub double %106, %117
  %120 = fmul double %118, %119
  %121 = fcmp ole double %120, 0.000000e+00
  %122 = select i1 %121, %class.SkOpPtT* %102, %class.SkOpPtT* null
  br label %123

123:                                              ; preds = %115, %91
  %124 = phi %class.SkOpPtT* [ %122, %115 ], [ %108, %91 ]
  %125 = select i1 %101, %class.SkOpPtT* %93, %class.SkOpPtT* %92
  %126 = select i1 %107, %class.SkOpPtT* %96, %class.SkOpPtT* %94
  %127 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %126, i64 0, i32 0
  %128 = load double, double* %127, align 8
  %129 = fsub double %98, %128
  %130 = fsub double %100, %128
  %131 = fmul double %129, %130
  %132 = fcmp ugt double %131, 0.000000e+00
  br i1 %132, label %133, label %141

133:                                              ; preds = %123
  %134 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %125, i64 0, i32 0
  %135 = load double, double* %134, align 8
  %136 = fsub double %104, %135
  %137 = fsub double %106, %135
  %138 = fmul double %136, %137
  %139 = fcmp ole double %138, 0.000000e+00
  %140 = select i1 %139, %class.SkOpPtT* %125, %class.SkOpPtT* null
  br label %141

141:                                              ; preds = %133, %123
  %142 = phi %class.SkOpPtT* [ %140, %133 ], [ %126, %123 ]
  %143 = icmp eq %class.SkOpPtT* %124, %142
  br i1 %143, label %148, label %144

144:                                              ; preds = %141
  %145 = icmp ne %class.SkOpPtT* %124, null
  %146 = icmp ne %class.SkOpPtT* %142, null
  %147 = and i1 %145, %146
  br i1 %147, label %207, label %148

148:                                              ; preds = %141, %144, %89
  %149 = icmp eq %class.SkOpSegment* %14, %30
  br i1 %149, label %150, label %211

150:                                              ; preds = %148
  %151 = load %class.SkOpPtT*, %class.SkOpPtT** %12, align 8
  %152 = load %class.SkOpPtT*, %class.SkOpPtT** %19, align 8
  %153 = load %class.SkOpPtT*, %class.SkOpPtT** %28, align 8
  %154 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %22, i64 0, i32 4
  %155 = load %class.SkOpPtT*, %class.SkOpPtT** %154, align 8
  %156 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %151, i64 0, i32 0
  %157 = load double, double* %156, align 8
  %158 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %152, i64 0, i32 0
  %159 = load double, double* %158, align 8
  %160 = fcmp olt double %157, %159
  %161 = select i1 %160, %class.SkOpPtT* %151, %class.SkOpPtT* %152
  %162 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %153, i64 0, i32 0
  %163 = load double, double* %162, align 8
  %164 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %155, i64 0, i32 0
  %165 = load double, double* %164, align 8
  %166 = fcmp olt double %163, %165
  %167 = select i1 %166, %class.SkOpPtT* %153, %class.SkOpPtT* %155
  %168 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %167, i64 0, i32 0
  %169 = load double, double* %168, align 8
  %170 = fsub double %157, %169
  %171 = fsub double %159, %169
  %172 = fmul double %170, %171
  %173 = fcmp ugt double %172, 0.000000e+00
  br i1 %173, label %174, label %182

174:                                              ; preds = %150
  %175 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %161, i64 0, i32 0
  %176 = load double, double* %175, align 8
  %177 = fsub double %163, %176
  %178 = fsub double %165, %176
  %179 = fmul double %177, %178
  %180 = fcmp ole double %179, 0.000000e+00
  %181 = select i1 %180, %class.SkOpPtT* %161, %class.SkOpPtT* null
  br label %182

182:                                              ; preds = %174, %150
  %183 = phi %class.SkOpPtT* [ %181, %174 ], [ %167, %150 ]
  %184 = select i1 %160, %class.SkOpPtT* %152, %class.SkOpPtT* %151
  %185 = select i1 %166, %class.SkOpPtT* %155, %class.SkOpPtT* %153
  %186 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %185, i64 0, i32 0
  %187 = load double, double* %186, align 8
  %188 = fsub double %157, %187
  %189 = fsub double %159, %187
  %190 = fmul double %188, %189
  %191 = fcmp ugt double %190, 0.000000e+00
  br i1 %191, label %192, label %200

192:                                              ; preds = %182
  %193 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %184, i64 0, i32 0
  %194 = load double, double* %193, align 8
  %195 = fsub double %163, %194
  %196 = fsub double %165, %194
  %197 = fmul double %195, %196
  %198 = fcmp ole double %197, 0.000000e+00
  %199 = select i1 %198, %class.SkOpPtT* %184, %class.SkOpPtT* null
  br label %200

200:                                              ; preds = %192, %182
  %201 = phi %class.SkOpPtT* [ %199, %192 ], [ %185, %182 ]
  %202 = icmp eq %class.SkOpPtT* %183, %201
  br i1 %202, label %211, label %203

203:                                              ; preds = %200
  %204 = icmp ne %class.SkOpPtT* %183, null
  %205 = icmp ne %class.SkOpPtT* %201, null
  %206 = and i1 %204, %205
  br i1 %206, label %207, label %211

207:                                              ; preds = %203, %144, %85
  %208 = phi %class.SkOpPtT* [ %65, %85 ], [ %124, %144 ], [ %183, %203 ]
  %209 = phi %class.SkOpPtT* [ %83, %85 ], [ %142, %144 ], [ %201, %203 ]
  %210 = tail call zeroext i1 @_ZN15SkOpCoincidence10addOverlapEPK11SkOpSegmentS2_S2_S2_PK7SkOpPtTS5_(%class.SkOpCoincidence* %1, %class.SkOpSegment* %11, %class.SkOpSegment* %14, %class.SkOpSegment* %25, %class.SkOpSegment* %30, %class.SkOpPtT* nonnull %208, %class.SkOpPtT* nonnull %209)
  br i1 %210, label %211, label %218

211:                                              ; preds = %148, %203, %207, %200, %21
  %212 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %22, i64 0, i32 0
  %213 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %212, align 8
  %214 = icmp eq %class.SkCoincidentSpans* %213, null
  br i1 %214, label %215, label %21

215:                                              ; preds = %211
  %216 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %15, align 8
  %217 = icmp eq %class.SkCoincidentSpans* %216, null
  br i1 %217, label %218, label %7

218:                                              ; preds = %7, %215, %207, %2
  %219 = phi i1 [ true, %2 ], [ false, %207 ], [ true, %215 ], [ true, %7 ]
  ret i1 %219
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN15SkOpCoincidence5fixUpEP7SkOpPtTPKS0_(%class.SkOpCoincidence* nocapture, %class.SkOpPtT* readnone, %class.SkOpPtT*) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %5 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %4, align 8
  %6 = icmp eq %class.SkCoincidentSpans* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZN15SkOpCoincidence5fixUpEP17SkCoincidentSpansP7SkOpPtTPKS2_(%class.SkOpCoincidence* %0, %class.SkCoincidentSpans* nonnull %5, %class.SkOpPtT* %1, %class.SkOpPtT* %2)
  br label %8

8:                                                ; preds = %3, %7
  %9 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 1
  %10 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %9, align 8
  %11 = icmp eq %class.SkCoincidentSpans* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @_ZN15SkOpCoincidence5fixUpEP17SkCoincidentSpansP7SkOpPtTPKS2_(%class.SkOpCoincidence* %0, %class.SkCoincidentSpans* nonnull %10, %class.SkOpPtT* %1, %class.SkOpPtT* %2)
  br label %13

13:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN15SkOpCoincidence5fixUpEP17SkCoincidentSpansP7SkOpPtTPKS2_(%class.SkOpCoincidence* nocapture, %class.SkCoincidentSpans*, %class.SkOpPtT* readnone, %class.SkOpPtT*) local_unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %3, i64 0, i32 2
  %6 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %3, i64 0, i32 6
  %7 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %1, i64 0, i32 0
  %8 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %9 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 1
  br label %10

10:                                               ; preds = %141, %4
  %11 = phi %class.SkCoincidentSpans* [ %1, %4 ], [ %143, %141 ]
  %12 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %11, i64 0, i32 1
  %13 = load %class.SkOpPtT*, %class.SkOpPtT** %12, align 8
  %14 = icmp eq %class.SkOpPtT* %13, %2
  br i1 %14, label %15, label %44

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %11, i64 0, i32 2
  %17 = load %class.SkOpPtT*, %class.SkOpPtT** %16, align 8
  %18 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %17, i64 0, i32 2
  %19 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %18, align 8
  %20 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %5, align 8
  %21 = icmp eq %class.SkOpSpanBase* %19, %20
  br i1 %21, label %22, label %43

22:                                               ; preds = %15
  %23 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %7, align 8
  %24 = icmp eq %class.SkCoincidentSpans* %11, %1
  br i1 %24, label %33, label %39

25:                                               ; preds = %39
  %26 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %40, i64 0, i32 0
  %27 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %26, align 8
  %28 = icmp eq %class.SkCoincidentSpans* %40, %11
  br i1 %28, label %29, label %39

29:                                               ; preds = %25
  %30 = icmp eq %class.SkCoincidentSpans* %41, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %41, i64 0, i32 0
  store %class.SkCoincidentSpans* %27, %class.SkCoincidentSpans** %32, align 8
  br label %141

33:                                               ; preds = %29, %22
  %34 = phi %class.SkCoincidentSpans* [ %27, %29 ], [ %23, %22 ]
  %35 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %8, align 8
  %36 = icmp eq %class.SkCoincidentSpans* %35, %1
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  store %class.SkCoincidentSpans* %34, %class.SkCoincidentSpans** %8, align 8
  br label %141

38:                                               ; preds = %33
  store %class.SkCoincidentSpans* %34, %class.SkCoincidentSpans** %9, align 8
  br label %141

39:                                               ; preds = %22, %25
  %40 = phi %class.SkCoincidentSpans* [ %27, %25 ], [ %23, %22 ]
  %41 = phi %class.SkCoincidentSpans* [ %40, %25 ], [ %1, %22 ]
  %42 = icmp eq %class.SkCoincidentSpans* %40, null
  br i1 %42, label %141, label %25

43:                                               ; preds = %15
  store %class.SkOpPtT* %3, %class.SkOpPtT** %12, align 8
  store i8 1, i8* %6, align 2
  br label %44

44:                                               ; preds = %43, %10
  %45 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %11, i64 0, i32 2
  %46 = load %class.SkOpPtT*, %class.SkOpPtT** %45, align 8
  %47 = icmp eq %class.SkOpPtT* %46, %2
  br i1 %47, label %48, label %76

48:                                               ; preds = %44
  %49 = load %class.SkOpPtT*, %class.SkOpPtT** %12, align 8
  %50 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %49, i64 0, i32 2
  %51 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %50, align 8
  %52 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %5, align 8
  %53 = icmp eq %class.SkOpSpanBase* %51, %52
  br i1 %53, label %54, label %75

54:                                               ; preds = %48
  %55 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %7, align 8
  %56 = icmp eq %class.SkCoincidentSpans* %11, %1
  br i1 %56, label %65, label %71

57:                                               ; preds = %71
  %58 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %72, i64 0, i32 0
  %59 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %58, align 8
  %60 = icmp eq %class.SkCoincidentSpans* %72, %11
  br i1 %60, label %61, label %71

61:                                               ; preds = %57
  %62 = icmp eq %class.SkCoincidentSpans* %73, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %73, i64 0, i32 0
  store %class.SkCoincidentSpans* %59, %class.SkCoincidentSpans** %64, align 8
  br label %141

65:                                               ; preds = %61, %54
  %66 = phi %class.SkCoincidentSpans* [ %59, %61 ], [ %55, %54 ]
  %67 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %8, align 8
  %68 = icmp eq %class.SkCoincidentSpans* %67, %1
  br i1 %68, label %69, label %70

69:                                               ; preds = %65
  store %class.SkCoincidentSpans* %66, %class.SkCoincidentSpans** %8, align 8
  br label %141

70:                                               ; preds = %65
  store %class.SkCoincidentSpans* %66, %class.SkCoincidentSpans** %9, align 8
  br label %141

71:                                               ; preds = %54, %57
  %72 = phi %class.SkCoincidentSpans* [ %59, %57 ], [ %55, %54 ]
  %73 = phi %class.SkCoincidentSpans* [ %72, %57 ], [ %1, %54 ]
  %74 = icmp eq %class.SkCoincidentSpans* %72, null
  br i1 %74, label %141, label %57

75:                                               ; preds = %48
  store %class.SkOpPtT* %3, %class.SkOpPtT** %45, align 8
  store i8 1, i8* %6, align 2
  br label %76

76:                                               ; preds = %75, %44
  %77 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %11, i64 0, i32 3
  %78 = load %class.SkOpPtT*, %class.SkOpPtT** %77, align 8
  %79 = icmp eq %class.SkOpPtT* %78, %2
  br i1 %79, label %80, label %109

80:                                               ; preds = %76
  %81 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %11, i64 0, i32 4
  %82 = load %class.SkOpPtT*, %class.SkOpPtT** %81, align 8
  %83 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %82, i64 0, i32 2
  %84 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %83, align 8
  %85 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %5, align 8
  %86 = icmp eq %class.SkOpSpanBase* %84, %85
  br i1 %86, label %87, label %108

87:                                               ; preds = %80
  %88 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %7, align 8
  %89 = icmp eq %class.SkCoincidentSpans* %11, %1
  br i1 %89, label %98, label %104

90:                                               ; preds = %104
  %91 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %105, i64 0, i32 0
  %92 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %91, align 8
  %93 = icmp eq %class.SkCoincidentSpans* %105, %11
  br i1 %93, label %94, label %104

94:                                               ; preds = %90
  %95 = icmp eq %class.SkCoincidentSpans* %106, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %106, i64 0, i32 0
  store %class.SkCoincidentSpans* %92, %class.SkCoincidentSpans** %97, align 8
  br label %141

98:                                               ; preds = %94, %87
  %99 = phi %class.SkCoincidentSpans* [ %92, %94 ], [ %88, %87 ]
  %100 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %8, align 8
  %101 = icmp eq %class.SkCoincidentSpans* %100, %1
  br i1 %101, label %102, label %103

102:                                              ; preds = %98
  store %class.SkCoincidentSpans* %99, %class.SkCoincidentSpans** %8, align 8
  br label %141

103:                                              ; preds = %98
  store %class.SkCoincidentSpans* %99, %class.SkCoincidentSpans** %9, align 8
  br label %141

104:                                              ; preds = %87, %90
  %105 = phi %class.SkCoincidentSpans* [ %92, %90 ], [ %88, %87 ]
  %106 = phi %class.SkCoincidentSpans* [ %105, %90 ], [ %1, %87 ]
  %107 = icmp eq %class.SkCoincidentSpans* %105, null
  br i1 %107, label %141, label %90

108:                                              ; preds = %80
  store %class.SkOpPtT* %3, %class.SkOpPtT** %77, align 8
  store i8 1, i8* %6, align 2
  br label %109

109:                                              ; preds = %108, %76
  %110 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %11, i64 0, i32 4
  %111 = load %class.SkOpPtT*, %class.SkOpPtT** %110, align 8
  %112 = icmp eq %class.SkOpPtT* %111, %2
  br i1 %112, label %113, label %141

113:                                              ; preds = %109
  %114 = load %class.SkOpPtT*, %class.SkOpPtT** %77, align 8
  %115 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %114, i64 0, i32 2
  %116 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %115, align 8
  %117 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %5, align 8
  %118 = icmp eq %class.SkOpSpanBase* %116, %117
  br i1 %118, label %119, label %140

119:                                              ; preds = %113
  %120 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %7, align 8
  %121 = icmp eq %class.SkCoincidentSpans* %11, %1
  br i1 %121, label %130, label %136

122:                                              ; preds = %136
  %123 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %137, i64 0, i32 0
  %124 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %123, align 8
  %125 = icmp eq %class.SkCoincidentSpans* %137, %11
  br i1 %125, label %126, label %136

126:                                              ; preds = %122
  %127 = icmp eq %class.SkCoincidentSpans* %138, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %138, i64 0, i32 0
  store %class.SkCoincidentSpans* %124, %class.SkCoincidentSpans** %129, align 8
  br label %141

130:                                              ; preds = %126, %119
  %131 = phi %class.SkCoincidentSpans* [ %124, %126 ], [ %120, %119 ]
  %132 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %8, align 8
  %133 = icmp eq %class.SkCoincidentSpans* %132, %1
  br i1 %133, label %134, label %135

134:                                              ; preds = %130
  store %class.SkCoincidentSpans* %131, %class.SkCoincidentSpans** %8, align 8
  br label %141

135:                                              ; preds = %130
  store %class.SkCoincidentSpans* %131, %class.SkCoincidentSpans** %9, align 8
  br label %141

136:                                              ; preds = %119, %122
  %137 = phi %class.SkCoincidentSpans* [ %124, %122 ], [ %120, %119 ]
  %138 = phi %class.SkCoincidentSpans* [ %137, %122 ], [ %1, %119 ]
  %139 = icmp eq %class.SkCoincidentSpans* %137, null
  br i1 %139, label %141, label %122

140:                                              ; preds = %113
  store %class.SkOpPtT* %3, %class.SkOpPtT** %110, align 8
  store i8 1, i8* %6, align 2
  br label %141

141:                                              ; preds = %136, %104, %71, %39, %135, %134, %128, %103, %102, %96, %70, %69, %63, %38, %37, %31, %109, %140
  %142 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %11, i64 0, i32 0
  %143 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %142, align 8
  %144 = icmp eq %class.SkCoincidentSpans* %143, null
  br i1 %144, label %145, label %10

145:                                              ; preds = %141
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkOpCoincidence4markEv(%class.SkOpCoincidence* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %4 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %3, align 8
  %5 = icmp eq %class.SkCoincidentSpans* %4, null
  br i1 %5, label %128, label %6

6:                                                ; preds = %1, %113
  %7 = phi %class.SkCoincidentSpans* [ %115, %113 ], [ %4, %1 ]
  %8 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %7, i64 0, i32 1
  %9 = load %class.SkOpPtT*, %class.SkOpPtT** %8, align 8
  %10 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %9, i64 0, i32 2
  %11 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %10, align 8
  %12 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %11, i64 0, i32 0, i32 0
  %13 = load double, double* %12, align 8
  %14 = fcmp une double %13, 1.000000e+00
  %15 = bitcast %class.SkOpSpanBase* %11 to %class.SkOpSpan*
  %16 = icmp ne %class.SkOpSpanBase* %11, null
  %17 = and i1 %16, %14
  br i1 %17, label %18, label %128

18:                                               ; preds = %6
  %19 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %11, i64 0, i32 0, i32 4
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %128

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %7, i64 0, i32 2
  %24 = load %class.SkOpPtT*, %class.SkOpPtT** %23, align 8
  %25 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %24, i64 0, i32 2
  %26 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %25, align 8
  %27 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %7, i64 0, i32 3
  %28 = load %class.SkOpPtT*, %class.SkOpPtT** %27, align 8
  %29 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %28, i64 0, i32 2
  %30 = bitcast %class.SkOpSpanBase** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %7, i64 0, i32 4
  %33 = load %class.SkOpPtT*, %class.SkOpPtT** %32, align 8
  %34 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %33, i64 0, i32 2
  %35 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %34, align 8
  %36 = ptrtoint %class.SkOpSpanBase* %35 to i64
  %37 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %35, i64 0, i32 0, i32 4
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %128

40:                                               ; preds = %22
  %41 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %28, i64 0, i32 0
  %42 = load double, double* %41, align 8
  %43 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %33, i64 0, i32 0
  %44 = load double, double* %43, align 8
  %45 = fcmp ogt double %42, %44
  %46 = select i1 %45, i64 %36, i64 %31
  %47 = select i1 %45, i64 %31, i64 %36
  %48 = inttoptr i64 %46 to %class.SkOpSpanBase*
  %49 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %48, i64 0, i32 0, i32 0
  %50 = load double, double* %49, align 8
  %51 = fcmp une double %50, 1.000000e+00
  %52 = inttoptr i64 %46 to %class.SkOpSpan*
  %53 = icmp ne i64 %46, 0
  %54 = and i1 %51, %53
  br i1 %54, label %55, label %128

55:                                               ; preds = %40, %60
  %56 = phi %class.SkOpSpan* [ %58, %60 ], [ %15, %40 ]
  %57 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %56, i64 0, i32 2
  %58 = load %class.SkOpSpan*, %class.SkOpSpan** %57, align 8
  %59 = icmp eq %class.SkOpSpan* %58, %15
  br i1 %59, label %62, label %60

60:                                               ; preds = %55
  %61 = icmp eq %class.SkOpSpan* %58, %52
  br i1 %61, label %69, label %55

62:                                               ; preds = %55
  tail call void @_ZNK12SkOpSpanBase13debugValidateEv(%class.SkOpSpanBase* nonnull %11) #10
  %63 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %52, i64 0, i32 2
  %64 = bitcast %class.SkOpSpan** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %11, i64 1
  %67 = bitcast %class.SkOpSpanBase* %66 to i64*
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %64, align 8
  store i64 %65, i64* %67, align 8
  tail call void @_ZNK12SkOpSpanBase13debugValidateEv(%class.SkOpSpanBase* nonnull %11) #10
  br label %69

69:                                               ; preds = %60, %62
  %70 = inttoptr i64 %47 to %class.SkOpSpanBase*
  br label %71

71:                                               ; preds = %76, %69
  %72 = phi %class.SkOpSpanBase* [ %26, %69 ], [ %74, %76 ]
  %73 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %72, i64 0, i32 2
  %74 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %73, align 8
  %75 = icmp eq %class.SkOpSpanBase* %74, %26
  br i1 %75, label %78, label %76

76:                                               ; preds = %71
  %77 = icmp eq %class.SkOpSpanBase* %74, %70
  br i1 %77, label %85, label %71

78:                                               ; preds = %71
  tail call void @_ZNK12SkOpSpanBase13debugValidateEv(%class.SkOpSpanBase* %26) #10
  %79 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %70, i64 0, i32 2
  %80 = bitcast %class.SkOpSpanBase** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %26, i64 0, i32 2
  %83 = bitcast %class.SkOpSpanBase** %82 to i64*
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* %80, align 8
  store i64 %81, i64* %83, align 8
  tail call void @_ZNK12SkOpSpanBase13debugValidateEv(%class.SkOpSpanBase* %26) #10
  br label %85

85:                                               ; preds = %76, %78
  %86 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %11, i64 0, i32 1
  %87 = load %class.SkOpSegment*, %class.SkOpSegment** %86, align 8
  %88 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %48, i64 0, i32 1
  %89 = load %class.SkOpSegment*, %class.SkOpSegment** %88, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #10
  store i8 -86, i8* %2, align 1
  %90 = call zeroext i1 @_ZNK17SkCoincidentSpans7orderedEPb(%class.SkCoincidentSpans* %7, i8* nonnull %2)
  br i1 %90, label %91, label %127

91:                                               ; preds = %85
  %92 = load i8, i8* %2, align 1
  %93 = icmp ne i8 %92, 0
  br label %94

94:                                               ; preds = %91, %105
  %95 = phi %class.SkOpSpanBase* [ %97, %105 ], [ %11, %91 ]
  %96 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %95, i64 1, i32 0, i32 2
  %97 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %96, align 8
  %98 = icmp eq %class.SkOpSpanBase* %97, %26
  br i1 %98, label %108, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %97, i64 0, i32 0, i32 0
  %101 = load double, double* %100, align 8
  %102 = fcmp une double %101, 1.000000e+00
  %103 = icmp ne %class.SkOpSpanBase* %97, null
  %104 = and i1 %103, %102
  br i1 %104, label %105, label %126

105:                                              ; preds = %99
  %106 = bitcast %class.SkOpSpanBase* %97 to %class.SkOpSpan*
  %107 = tail call zeroext i1 @_ZN8SkOpSpan17insertCoincidenceEPK11SkOpSegmentbb(%class.SkOpSpan* nonnull %106, %class.SkOpSegment* %89, i1 zeroext %45, i1 zeroext %93) #10
  br i1 %107, label %94, label %127

108:                                              ; preds = %94, %123
  %109 = phi %class.SkOpSpanBase* [ %111, %123 ], [ %48, %94 ]
  %110 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %109, i64 1, i32 0, i32 2
  %111 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %110, align 8
  %112 = icmp eq %class.SkOpSpanBase* %111, %70
  br i1 %112, label %113, label %117

113:                                              ; preds = %108
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #10
  %114 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %7, i64 0, i32 0
  %115 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %114, align 8
  %116 = icmp eq %class.SkCoincidentSpans* %115, null
  br i1 %116, label %128, label %6

117:                                              ; preds = %108
  %118 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %111, i64 0, i32 0, i32 0
  %119 = load double, double* %118, align 8
  %120 = fcmp une double %119, 1.000000e+00
  %121 = icmp ne %class.SkOpSpanBase* %111, null
  %122 = and i1 %121, %120
  br i1 %122, label %123, label %126

123:                                              ; preds = %117
  %124 = bitcast %class.SkOpSpanBase* %111 to %class.SkOpSpan*
  %125 = tail call zeroext i1 @_ZN8SkOpSpan17insertCoincidenceEPK11SkOpSegmentbb(%class.SkOpSpan* nonnull %124, %class.SkOpSegment* %87, i1 zeroext %45, i1 zeroext %93) #10
  br i1 %125, label %108, label %127

126:                                              ; preds = %99, %117
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #10
  br label %128

127:                                              ; preds = %85, %105, %123
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #10
  br label %128

128:                                              ; preds = %40, %22, %18, %6, %113, %127, %126, %1
  %129 = phi i1 [ false, %127 ], [ true, %1 ], [ false, %126 ], [ false, %40 ], [ false, %22 ], [ false, %18 ], [ false, %6 ], [ true, %113 ]
  ret i1 %129
}

declare zeroext i1 @_ZN8SkOpSpan17insertCoincidenceEPK11SkOpSegmentbb(%class.SkOpSpan*, %class.SkOpSegment*, i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkOpCoincidence13markCollapsedEP17SkCoincidentSpansP7SkOpPtT(%class.SkOpCoincidence* nocapture, %class.SkCoincidentSpans*, %class.SkOpPtT*) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %class.SkCoincidentSpans* %1, null
  br i1 %4, label %97, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %1, i64 0, i32 0
  %7 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %8 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 1
  br label %9

9:                                                ; preds = %5, %93
  %10 = phi %class.SkCoincidentSpans* [ %1, %5 ], [ %95, %93 ]
  %11 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %10, i64 0, i32 1
  %12 = load %class.SkOpPtT*, %class.SkOpPtT** %11, align 8
  %13 = icmp eq %class.SkOpPtT* %12, %2
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %10, i64 0, i32 2
  %16 = load %class.SkOpPtT*, %class.SkOpPtT** %15, align 8
  %17 = tail call zeroext i1 @_ZNK7SkOpPtT8containsEPKS_(%class.SkOpPtT* %16, %class.SkOpPtT* %2) #10
  br i1 %17, label %40, label %18

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %10, i64 0, i32 2
  %20 = load %class.SkOpPtT*, %class.SkOpPtT** %19, align 8
  %21 = icmp eq %class.SkOpPtT* %20, %2
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  %23 = load %class.SkOpPtT*, %class.SkOpPtT** %11, align 8
  %24 = tail call zeroext i1 @_ZNK7SkOpPtT8containsEPKS_(%class.SkOpPtT* %23, %class.SkOpPtT* %2) #10
  br i1 %24, label %40, label %25

25:                                               ; preds = %22, %18
  %26 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %10, i64 0, i32 3
  %27 = load %class.SkOpPtT*, %class.SkOpPtT** %26, align 8
  %28 = icmp eq %class.SkOpPtT* %27, %2
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %10, i64 0, i32 4
  %31 = load %class.SkOpPtT*, %class.SkOpPtT** %30, align 8
  %32 = tail call zeroext i1 @_ZNK7SkOpPtT8containsEPKS_(%class.SkOpPtT* %31, %class.SkOpPtT* %2) #10
  br i1 %32, label %40, label %33

33:                                               ; preds = %29, %25
  %34 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %10, i64 0, i32 4
  %35 = load %class.SkOpPtT*, %class.SkOpPtT** %34, align 8
  %36 = icmp eq %class.SkOpPtT* %35, %2
  br i1 %36, label %37, label %93

37:                                               ; preds = %33
  %38 = load %class.SkOpPtT*, %class.SkOpPtT** %26, align 8
  %39 = tail call zeroext i1 @_ZNK7SkOpPtT8containsEPKS_(%class.SkOpPtT* %38, %class.SkOpPtT* %2) #10
  br i1 %39, label %40, label %93

40:                                               ; preds = %14, %22, %29, %37
  %41 = load %class.SkOpPtT*, %class.SkOpPtT** %11, align 8
  %42 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %41, i64 0, i32 0
  %43 = load double, double* %42, align 8
  %44 = fcmp oeq double %43, 0.000000e+00
  %45 = fcmp oeq double %43, 1.000000e+00
  %46 = or i1 %44, %45
  br i1 %46, label %47, label %57

47:                                               ; preds = %40
  %48 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %10, i64 0, i32 2
  %49 = load %class.SkOpPtT*, %class.SkOpPtT** %48, align 8
  %50 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %49, i64 0, i32 0
  %51 = load double, double* %50, align 8
  %52 = fcmp oeq double %51, 0.000000e+00
  %53 = fcmp oeq double %51, 1.000000e+00
  %54 = or i1 %52, %53
  br i1 %54, label %55, label %57

55:                                               ; preds = %47
  %56 = tail call %class.SkOpSegment* @_ZN7SkOpPtT7segmentEv(%class.SkOpPtT* %41) #10
  tail call void @_ZN11SkOpSegment11markAllDoneEv(%class.SkOpSegment* %56) #10
  br label %57

57:                                               ; preds = %55, %47, %40
  %58 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %10, i64 0, i32 3
  %59 = load %class.SkOpPtT*, %class.SkOpPtT** %58, align 8
  %60 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %59, i64 0, i32 0
  %61 = load double, double* %60, align 8
  %62 = fcmp oeq double %61, 0.000000e+00
  %63 = fcmp oeq double %61, 1.000000e+00
  %64 = or i1 %62, %63
  br i1 %64, label %65, label %75

65:                                               ; preds = %57
  %66 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %10, i64 0, i32 4
  %67 = load %class.SkOpPtT*, %class.SkOpPtT** %66, align 8
  %68 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %67, i64 0, i32 0
  %69 = load double, double* %68, align 8
  %70 = fcmp oeq double %69, 0.000000e+00
  %71 = fcmp oeq double %69, 1.000000e+00
  %72 = or i1 %70, %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %65
  %74 = tail call %class.SkOpSegment* @_ZN7SkOpPtT7segmentEv(%class.SkOpPtT* %59) #10
  tail call void @_ZN11SkOpSegment11markAllDoneEv(%class.SkOpSegment* %74) #10
  br label %75

75:                                               ; preds = %73, %65, %57
  %76 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %6, align 8
  %77 = icmp eq %class.SkCoincidentSpans* %10, %1
  br i1 %77, label %84, label %89

78:                                               ; preds = %89
  %79 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %90, i64 0, i32 0
  %80 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %79, align 8
  %81 = icmp eq %class.SkCoincidentSpans* %90, %10
  br i1 %81, label %82, label %89

82:                                               ; preds = %78
  %83 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %91, i64 0, i32 0
  store %class.SkCoincidentSpans* %80, %class.SkCoincidentSpans** %83, align 8
  br label %93

84:                                               ; preds = %75
  %85 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %7, align 8
  %86 = icmp eq %class.SkCoincidentSpans* %85, %1
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  store %class.SkCoincidentSpans* %76, %class.SkCoincidentSpans** %7, align 8
  br label %93

88:                                               ; preds = %84
  store %class.SkCoincidentSpans* %76, %class.SkCoincidentSpans** %8, align 8
  br label %93

89:                                               ; preds = %75, %78
  %90 = phi %class.SkCoincidentSpans* [ %80, %78 ], [ %76, %75 ]
  %91 = phi %class.SkCoincidentSpans* [ %90, %78 ], [ %1, %75 ]
  %92 = icmp eq %class.SkCoincidentSpans* %90, null
  br i1 %92, label %93, label %78

93:                                               ; preds = %89, %33, %88, %87, %82, %37
  %94 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %10, i64 0, i32 0
  %95 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %94, align 8
  %96 = icmp eq %class.SkCoincidentSpans* %95, null
  br i1 %96, label %97, label %9

97:                                               ; preds = %93, %3
  ret void
}

declare void @_ZN11SkOpSegment11markAllDoneEv(%class.SkOpSegment*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkOpCoincidence13markCollapsedEP7SkOpPtT(%class.SkOpCoincidence* nocapture, %class.SkOpPtT*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %4 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %3, align 8
  tail call void @_ZN15SkOpCoincidence13markCollapsedEP17SkCoincidentSpansP7SkOpPtT(%class.SkOpCoincidence* %0, %class.SkCoincidentSpans* %4, %class.SkOpPtT* %1)
  %5 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 1
  %6 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %5, align 8
  tail call void @_ZN15SkOpCoincidence13markCollapsedEP17SkCoincidentSpansP7SkOpPtT(%class.SkOpCoincidence* %0, %class.SkCoincidentSpans* %6, %class.SkOpPtT* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkOpCoincidence7releaseEPK11SkOpSegment(%class.SkOpCoincidence* nocapture, %class.SkOpSegment* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %0, i64 0, i32 0
  %4 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %3, align 8
  %5 = icmp eq %class.SkCoincidentSpans* %4, null
  br i1 %5, label %50, label %6

6:                                                ; preds = %2, %46
  %7 = phi %class.SkCoincidentSpans* [ %48, %46 ], [ %4, %2 ]
  %8 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %7, i64 0, i32 1
  %9 = load %class.SkOpPtT*, %class.SkOpPtT** %8, align 8
  %10 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %9) #10
  %11 = icmp eq %class.SkOpSegment* %10, %1
  br i1 %11, label %27, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %7, i64 0, i32 2
  %14 = load %class.SkOpPtT*, %class.SkOpPtT** %13, align 8
  %15 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %14) #10
  %16 = icmp eq %class.SkOpSegment* %15, %1
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %7, i64 0, i32 3
  %19 = load %class.SkOpPtT*, %class.SkOpPtT** %18, align 8
  %20 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %19) #10
  %21 = icmp eq %class.SkOpSegment* %20, %1
  br i1 %21, label %27, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %7, i64 0, i32 4
  %24 = load %class.SkOpPtT*, %class.SkOpPtT** %23, align 8
  %25 = tail call %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* %24) #10
  %26 = icmp eq %class.SkOpSegment* %25, %1
  br i1 %26, label %27, label %46

27:                                               ; preds = %22, %17, %12, %6
  %28 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %3, align 8
  %29 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %28, i64 0, i32 0
  %30 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %29, align 8
  %31 = icmp eq %class.SkCoincidentSpans* %28, %7
  br i1 %31, label %40, label %42

32:                                               ; preds = %42
  %33 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %43, i64 0, i32 0
  %34 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %33, align 8
  %35 = icmp eq %class.SkCoincidentSpans* %43, %7
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = icmp eq %class.SkCoincidentSpans* %44, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %44, i64 0, i32 0
  store %class.SkCoincidentSpans* %34, %class.SkCoincidentSpans** %39, align 8
  br label %46

40:                                               ; preds = %27, %36
  %41 = phi %class.SkCoincidentSpans* [ %34, %36 ], [ %30, %27 ]
  store %class.SkCoincidentSpans* %41, %class.SkCoincidentSpans** %3, align 8
  br label %46

42:                                               ; preds = %27, %32
  %43 = phi %class.SkCoincidentSpans* [ %34, %32 ], [ %30, %27 ]
  %44 = phi %class.SkCoincidentSpans* [ %43, %32 ], [ %28, %27 ]
  %45 = icmp eq %class.SkCoincidentSpans* %43, null
  br i1 %45, label %46, label %32

46:                                               ; preds = %42, %40, %38, %22
  %47 = getelementptr inbounds %class.SkCoincidentSpans, %class.SkCoincidentSpans* %7, i64 0, i32 0
  %48 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %47, align 8
  %49 = icmp eq %class.SkCoincidentSpans* %48, null
  br i1 %49, label %50, label %6

50:                                               ; preds = %46, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind readonly ssp uwtable
define internal { double, double } @_ZL15dline_dxdy_at_tPK7SkPointfd(%struct.SkPoint* nocapture readonly, float, double) #6 {
  %4 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %5 = load <2 x float>, <2 x float>* %4, align 4
  %6 = fpext <2 x float> %5 to <2 x double>
  %7 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %8 = bitcast float* %7 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 4
  %10 = fpext <2 x float> %9 to <2 x double>
  %11 = fsub <2 x double> %10, %6
  %12 = extractelement <2 x double> %11, i32 0
  %13 = insertvalue { double, double } undef, double %12, 0
  %14 = extractelement <2 x double> %11, i32 1
  %15 = insertvalue { double, double } %13, double %14, 1
  ret { double, double } %15
}

; Function Attrs: nounwind ssp uwtable
define internal { double, double } @_ZL15dquad_dxdy_at_tPK7SkPointfd(%struct.SkPoint* nocapture readonly, float, double) #0 {
  %4 = alloca %struct.SkDQuad, align 16
  %5 = bitcast %struct.SkDQuad* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #10
  %6 = getelementptr inbounds %struct.SkDQuad, %struct.SkDQuad* %4, i64 0, i32 0, i64 1, i32 0
  %7 = getelementptr inbounds %struct.SkDQuad, %struct.SkDQuad* %4, i64 0, i32 0, i64 2, i32 0
  %8 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 4
  %10 = fpext <2 x float> %9 to <2 x double>
  %11 = bitcast %struct.SkDQuad* %4 to <2 x double>*
  store <2 x double> %10, <2 x double>* %11, align 16
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %13 = bitcast float* %12 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  %15 = fpext <2 x float> %14 to <2 x double>
  %16 = bitcast double* %6 to <2 x double>*
  store <2 x double> %15, <2 x double>* %16, align 16
  %17 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %18 = bitcast float* %17 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  %20 = fpext <2 x float> %19 to <2 x double>
  %21 = bitcast double* %7 to <2 x double>*
  store <2 x double> %20, <2 x double>* %21, align 16
  %22 = call { double, double } @_ZNK7SkDQuad7dxdyAtTEd(%struct.SkDQuad* nonnull %4, double %2) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #10
  ret { double, double } %22
}

; Function Attrs: nounwind ssp uwtable
define internal { double, double } @_ZL16dconic_dxdy_at_tPK7SkPointfd(%struct.SkPoint* nocapture readonly, float, double) #0 {
  %4 = alloca %struct.SkDConic, align 16
  %5 = bitcast %struct.SkDConic* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %5, i8* align 8 bitcast ({ %struct.SkDQuad, float, [4 x i8] }* @__const._ZL19conic_intersect_rayPK7SkPointfRK7SkDLineP15SkIntersections.conic to i8*), i64 56, i1 false)
  %6 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = fpext <2 x float> %7 to <2 x double>
  %9 = bitcast %struct.SkDConic* %4 to <2 x double>*
  store <2 x double> %8, <2 x double>* %9, align 16
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %11 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %4, i64 0, i32 0, i32 0, i64 1, i32 0
  %12 = bitcast float* %10 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = fpext <2 x float> %13 to <2 x double>
  %15 = bitcast double* %11 to <2 x double>*
  store <2 x double> %14, <2 x double>* %15, align 16
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %17 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %4, i64 0, i32 0, i32 0, i64 2, i32 0
  %18 = bitcast float* %16 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  %20 = fpext <2 x float> %19 to <2 x double>
  %21 = bitcast double* %17 to <2 x double>*
  store <2 x double> %20, <2 x double>* %21, align 16
  %22 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %4, i64 0, i32 1
  store float %1, float* %22, align 16
  %23 = call { double, double } @_ZNK8SkDConic7dxdyAtTEd(%struct.SkDConic* nonnull %4, double %2) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #10
  ret { double, double } %23
}

; Function Attrs: nounwind ssp uwtable
define internal { double, double } @_ZL16dcubic_dxdy_at_tPK7SkPointfd(%struct.SkPoint* nocapture readonly, float, double) #0 {
  %4 = alloca %struct.SkDCubic, align 16
  %5 = bitcast %struct.SkDCubic* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #10
  %6 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = fpext <2 x float> %7 to <2 x double>
  %9 = bitcast %struct.SkDCubic* %4 to <2 x double>*
  store <2 x double> %8, <2 x double>* %9, align 16
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %11 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %4, i64 0, i32 0, i64 1, i32 0
  %12 = bitcast float* %10 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = fpext <2 x float> %13 to <2 x double>
  %15 = bitcast double* %11 to <2 x double>*
  store <2 x double> %14, <2 x double>* %15, align 16
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %17 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %4, i64 0, i32 0, i64 2, i32 0
  %18 = bitcast float* %16 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  %20 = fpext <2 x float> %19 to <2 x double>
  %21 = bitcast double* %17 to <2 x double>*
  store <2 x double> %20, <2 x double>* %21, align 16
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 3, i32 0
  %23 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %4, i64 0, i32 0, i64 3, i32 0
  %24 = bitcast float* %22 to <2 x float>*
  %25 = load <2 x float>, <2 x float>* %24, align 4
  %26 = fpext <2 x float> %25 to <2 x double>
  %27 = bitcast double* %23 to <2 x double>*
  store <2 x double> %26, <2 x double>* %27, align 16
  %28 = call { double, double } @_ZNK8SkDCubic7dxdyAtTEd(%struct.SkDCubic* nonnull %4, double %2) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #10
  ret { double, double } %28
}

declare { double, double } @_ZNK7SkDQuad7dxdyAtTEd(%struct.SkDQuad*, double) local_unnamed_addr #1

declare { double, double } @_ZNK8SkDConic7dxdyAtTEd(%struct.SkDConic*, double) local_unnamed_addr #1

declare { double, double } @_ZNK8SkDCubic7dxdyAtTEd(%struct.SkDCubic*, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL18line_intersect_rayPK7SkPointfRK7SkDLineP15SkIntersections(%struct.SkPoint* nocapture readonly, float, %struct.SkDLine* dereferenceable(32), %class.SkIntersections*) #0 {
  %5 = alloca %struct.SkDLine, align 16
  %6 = bitcast %struct.SkDLine* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  %7 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %5, i64 0, i32 0, i64 1, i32 0
  %8 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 4
  %10 = fpext <2 x float> %9 to <2 x double>
  %11 = bitcast %struct.SkDLine* %5 to <2 x double>*
  store <2 x double> %10, <2 x double>* %11, align 16
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %13 = bitcast float* %12 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  %15 = fpext <2 x float> %14 to <2 x double>
  %16 = bitcast double* %7 to <2 x double>*
  store <2 x double> %15, <2 x double>* %16, align 16
  %17 = call i32 @_ZN15SkIntersections12intersectRayERK7SkDLineS2_(%class.SkIntersections* %3, %struct.SkDLine* nonnull dereferenceable(32) %5, %struct.SkDLine* dereferenceable(32) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL18quad_intersect_rayPK7SkPointfRK7SkDLineP15SkIntersections(%struct.SkPoint* nocapture readonly, float, %struct.SkDLine* dereferenceable(32), %class.SkIntersections*) #0 {
  %5 = alloca %struct.SkDQuad, align 16
  %6 = bitcast %struct.SkDQuad* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #10
  %7 = getelementptr inbounds %struct.SkDQuad, %struct.SkDQuad* %5, i64 0, i32 0, i64 1, i32 0
  %8 = getelementptr inbounds %struct.SkDQuad, %struct.SkDQuad* %5, i64 0, i32 0, i64 2, i32 0
  %9 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = fpext <2 x float> %10 to <2 x double>
  %12 = bitcast %struct.SkDQuad* %5 to <2 x double>*
  store <2 x double> %11, <2 x double>* %12, align 16
  %13 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %14 = bitcast float* %13 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 4
  %16 = fpext <2 x float> %15 to <2 x double>
  %17 = bitcast double* %7 to <2 x double>*
  store <2 x double> %16, <2 x double>* %17, align 16
  %18 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %19 = bitcast float* %18 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = fpext <2 x float> %20 to <2 x double>
  %22 = bitcast double* %8 to <2 x double>*
  store <2 x double> %21, <2 x double>* %22, align 16
  %23 = call i32 @_ZN15SkIntersections12intersectRayERK7SkDQuadRK7SkDLine(%class.SkIntersections* %3, %struct.SkDQuad* nonnull dereferenceable(48) %5, %struct.SkDLine* dereferenceable(32) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL19conic_intersect_rayPK7SkPointfRK7SkDLineP15SkIntersections(%struct.SkPoint* nocapture readonly, float, %struct.SkDLine* dereferenceable(32), %class.SkIntersections*) #0 {
  %5 = alloca %struct.SkDConic, align 16
  %6 = bitcast %struct.SkDConic* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %6, i8* align 8 bitcast ({ %struct.SkDQuad, float, [4 x i8] }* @__const._ZL19conic_intersect_rayPK7SkPointfRK7SkDLineP15SkIntersections.conic to i8*), i64 56, i1 false)
  %7 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = fpext <2 x float> %8 to <2 x double>
  %10 = bitcast %struct.SkDConic* %5 to <2 x double>*
  store <2 x double> %9, <2 x double>* %10, align 16
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %12 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %5, i64 0, i32 0, i32 0, i64 1, i32 0
  %13 = bitcast float* %11 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  %15 = fpext <2 x float> %14 to <2 x double>
  %16 = bitcast double* %12 to <2 x double>*
  store <2 x double> %15, <2 x double>* %16, align 16
  %17 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %18 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %5, i64 0, i32 0, i32 0, i64 2, i32 0
  %19 = bitcast float* %17 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = fpext <2 x float> %20 to <2 x double>
  %22 = bitcast double* %18 to <2 x double>*
  store <2 x double> %21, <2 x double>* %22, align 16
  %23 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %5, i64 0, i32 1
  store float %1, float* %23, align 16
  %24 = call i32 @_ZN15SkIntersections12intersectRayERK8SkDConicRK7SkDLine(%class.SkIntersections* %3, %struct.SkDConic* nonnull dereferenceable(56) %5, %struct.SkDLine* dereferenceable(32) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL19cubic_intersect_rayPK7SkPointfRK7SkDLineP15SkIntersections(%struct.SkPoint* nocapture readonly, float, %struct.SkDLine* dereferenceable(32), %class.SkIntersections*) #0 {
  %5 = alloca %struct.SkDCubic, align 16
  %6 = bitcast %struct.SkDCubic* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #10
  %7 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = fpext <2 x float> %8 to <2 x double>
  %10 = bitcast %struct.SkDCubic* %5 to <2 x double>*
  store <2 x double> %9, <2 x double>* %10, align 16
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %12 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %5, i64 0, i32 0, i64 1, i32 0
  %13 = bitcast float* %11 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  %15 = fpext <2 x float> %14 to <2 x double>
  %16 = bitcast double* %12 to <2 x double>*
  store <2 x double> %15, <2 x double>* %16, align 16
  %17 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %18 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %5, i64 0, i32 0, i64 2, i32 0
  %19 = bitcast float* %17 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = fpext <2 x float> %20 to <2 x double>
  %22 = bitcast double* %18 to <2 x double>*
  store <2 x double> %21, <2 x double>* %22, align 16
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 3, i32 0
  %24 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %5, i64 0, i32 0, i64 3, i32 0
  %25 = bitcast float* %23 to <2 x float>*
  %26 = load <2 x float>, <2 x float>* %25, align 4
  %27 = fpext <2 x float> %26 to <2 x double>
  %28 = bitcast double* %24 to <2 x double>*
  store <2 x double> %27, <2 x double>* %28, align 16
  %29 = call i32 @_ZN15SkIntersections12intersectRayERK8SkDCubicRK7SkDLine(%class.SkIntersections* %3, %struct.SkDCubic* nonnull dereferenceable(64) %5, %struct.SkDLine* dereferenceable(32) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #10
  ret void
}

declare i32 @_ZN15SkIntersections12intersectRayERK7SkDLineS2_(%class.SkIntersections*, %struct.SkDLine* dereferenceable(32), %struct.SkDLine* dereferenceable(32)) local_unnamed_addr #1

declare i32 @_ZN15SkIntersections12intersectRayERK7SkDQuadRK7SkDLine(%class.SkIntersections*, %struct.SkDQuad* dereferenceable(48), %struct.SkDLine* dereferenceable(32)) local_unnamed_addr #1

declare i32 @_ZN15SkIntersections12intersectRayERK8SkDConicRK7SkDLine(%class.SkIntersections*, %struct.SkDConic* dereferenceable(56), %struct.SkDLine* dereferenceable(32)) local_unnamed_addr #1

declare i32 @_ZN15SkIntersections12intersectRayERK8SkDCubicRK7SkDLine(%class.SkIntersections*, %struct.SkDCubic* dereferenceable(64), %struct.SkDLine* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8SkDPoint18approximatelyEqualERKS_(%struct.SkDPoint*, %struct.SkDPoint* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %0, i64 0, i32 0
  %4 = load double, double* %3, align 8
  %5 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %1, i64 0, i32 0
  %6 = load double, double* %5, align 8
  %7 = fsub double %4, %6
  %8 = tail call double @llvm.fabs.f64(double %7) #10
  %9 = fcmp olt double %8, 0x3E80000000000000
  br i1 %9, label %10, label %18

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %0, i64 0, i32 1
  %12 = load double, double* %11, align 8
  %13 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %1, i64 0, i32 1
  %14 = load double, double* %13, align 8
  %15 = fsub double %12, %14
  %16 = tail call double @llvm.fabs.f64(double %15) #10
  %17 = fcmp olt double %16, 0x3E80000000000000
  br i1 %17, label %68, label %18

18:                                               ; preds = %10, %2
  %19 = fptrunc double %4 to float
  %20 = fptrunc double %6 to float
  %21 = tail call zeroext i1 @_Z16RoughlyEqualUlpsff(float %19, float %20) #10
  br i1 %21, label %22, label %68

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %0, i64 0, i32 1
  %24 = load double, double* %23, align 8
  %25 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %1, i64 0, i32 1
  %26 = load double, double* %25, align 8
  %27 = fptrunc double %24 to float
  %28 = fptrunc double %26 to float
  %29 = tail call zeroext i1 @_Z16RoughlyEqualUlpsff(float %27, float %28) #10
  br i1 %29, label %30, label %68

30:                                               ; preds = %22
  %31 = load double, double* %3, align 8
  %32 = load double, double* %5, align 8
  %33 = fsub double %31, %32
  %34 = load double, double* %23, align 8
  %35 = load double, double* %25, align 8
  %36 = fsub double %34, %35
  %37 = fmul double %33, %33
  %38 = fmul double %36, %36
  %39 = fadd double %37, %38
  %40 = tail call double @sqrt(double %39) #10
  %41 = load double, double* %5, align 8
  %42 = load double, double* %3, align 8
  %43 = fcmp olt double %41, %42
  %44 = load double, double* %23, align 8
  %45 = select i1 %43, double %41, double %42
  %46 = fcmp olt double %44, %45
  %47 = load double, double* %25, align 8
  %48 = select i1 %46, double %44, double %45
  %49 = fcmp olt double %47, %48
  %50 = select i1 %49, double %47, double %48
  %51 = fcmp olt double %42, %41
  %52 = load double, double* %5, align 8
  %53 = load double, double* %3, align 8
  %54 = select i1 %51, double %52, double %53
  %55 = fcmp olt double %54, %44
  %56 = load double, double* %23, align 8
  %57 = select i1 %55, double %56, double %54
  %58 = fcmp olt double %57, %47
  %59 = load double, double* %25, align 8
  %60 = select i1 %58, double %59, double %57
  %61 = fsub double -0.000000e+00, %50
  %62 = fcmp olt double %60, %61
  %63 = select i1 %62, double %61, double %60
  %64 = fadd double %40, %63
  %65 = fptrunc double %63 to float
  %66 = fptrunc double %64 to float
  %67 = tail call zeroext i1 @_Z16AlmostPequalUlpsff(float %65, float %66) #10
  br label %68

68:                                               ; preds = %18, %22, %10, %30
  %69 = phi i1 [ %67, %30 ], [ true, %10 ], [ false, %22 ], [ false, %18 ]
  ret i1 %69
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #7

declare zeroext i1 @_Z16RoughlyEqualUlpsff(float, float) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #8

declare zeroext i1 @_Z16AlmostPequalUlpsff(float, float) local_unnamed_addr #1

declare void @_ZNK12SkOpSpanBase13debugValidateEv(%class.SkOpSpanBase*) local_unnamed_addr #1

declare void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #9

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
