; ModuleID = '../../third_party/crc32c/src/src/crc32c.cc'
source_filename = "../../third_party/crc32c/src/src/crc32c.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@_ZZN6crc32c6ExtendEjPKhmE13can_use_sse42 = internal unnamed_addr global i8 0, align 1
@_ZGVZN6crc32c6ExtendEjPKhmE13can_use_sse42 = internal global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6crc32c6ExtendEjPKhm(i32, i8*, i64) local_unnamed_addr #0 {
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN6crc32c6ExtendEjPKhmE13can_use_sse42 to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %21, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN6crc32c6ExtendEjPKhmE13can_use_sse42) #3
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %6
  %10 = tail call { i32, i32, i32, i32 } asm "  xchgq  %rbx,${1:q}\0A  cpuid\0A  xchgq  %rbx,${1:q}", "={ax},=r,={cx},={dx},0,~{dirflag},~{fpsr},~{flags}"(i32 0) #4, !srcloc !3
  %11 = extractvalue { i32, i32, i32, i32 } %10, 0
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = tail call { i32, i32, i32, i32 } asm "  xchgq  %rbx,${1:q}\0A  cpuid\0A  xchgq  %rbx,${1:q}", "={ax},=r,={cx},={dx},0,~{dirflag},~{fpsr},~{flags}"(i32 1) #4, !srcloc !4
  %15 = extractvalue { i32, i32, i32, i32 } %14, 2
  %16 = lshr i32 %15, 20
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  br label %19

19:                                               ; preds = %9, %13
  %20 = phi i8 [ %18, %13 ], [ 0, %9 ]
  store i8 %20, i8* @_ZZN6crc32c6ExtendEjPKhmE13can_use_sse42, align 1
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN6crc32c6ExtendEjPKhmE13can_use_sse42) #3
  br label %21

21:                                               ; preds = %6, %19, %3
  %22 = load i8, i8* @_ZZN6crc32c6ExtendEjPKhmE13can_use_sse42, align 1, !range !5
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  %25 = tail call i32 @_ZN6crc32c11ExtendSse42EjPKhm(i32 %0, i8* %1, i64 %2) #3
  br label %28

26:                                               ; preds = %21
  %27 = tail call i32 @_ZN6crc32c14ExtendPortableEjPKhm(i32 %0, i8* %1, i64 %2) #3
  br label %28

28:                                               ; preds = %26, %24
  %29 = phi i32 [ %25, %24 ], [ %27, %26 ]
  ret i32 %29
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

declare i32 @_ZN6crc32c11ExtendSse42EjPKhm(i32, i8*, i64) local_unnamed_addr #2

declare i32 @_ZN6crc32c14ExtendPortableEjPKhm(i32, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @crc32c_extend(i32, i8*, i64) local_unnamed_addr #0 {
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN6crc32c6ExtendEjPKhmE13can_use_sse42 to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %21, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN6crc32c6ExtendEjPKhmE13can_use_sse42) #3
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %6
  %10 = tail call { i32, i32, i32, i32 } asm "  xchgq  %rbx,${1:q}\0A  cpuid\0A  xchgq  %rbx,${1:q}", "={ax},=r,={cx},={dx},0,~{dirflag},~{fpsr},~{flags}"(i32 0) #4, !srcloc !3
  %11 = extractvalue { i32, i32, i32, i32 } %10, 0
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = tail call { i32, i32, i32, i32 } asm "  xchgq  %rbx,${1:q}\0A  cpuid\0A  xchgq  %rbx,${1:q}", "={ax},=r,={cx},={dx},0,~{dirflag},~{fpsr},~{flags}"(i32 1) #4, !srcloc !4
  %15 = extractvalue { i32, i32, i32, i32 } %14, 2
  %16 = lshr i32 %15, 20
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  br label %19

19:                                               ; preds = %13, %9
  %20 = phi i8 [ %18, %13 ], [ 0, %9 ]
  store i8 %20, i8* @_ZZN6crc32c6ExtendEjPKhmE13can_use_sse42, align 1
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN6crc32c6ExtendEjPKhmE13can_use_sse42) #3
  br label %21

21:                                               ; preds = %19, %6, %3
  %22 = load i8, i8* @_ZZN6crc32c6ExtendEjPKhmE13can_use_sse42, align 1, !range !5
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  %25 = tail call i32 @_ZN6crc32c11ExtendSse42EjPKhm(i32 %0, i8* %1, i64 %2) #3
  br label %28

26:                                               ; preds = %21
  %27 = tail call i32 @_ZN6crc32c14ExtendPortableEjPKhm(i32 %0, i8* %1, i64 %2) #3
  br label %28

28:                                               ; preds = %24, %26
  %29 = phi i32 [ %25, %24 ], [ %27, %26 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @crc32c_value(i8*, i64) local_unnamed_addr #0 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN6crc32c6ExtendEjPKhmE13can_use_sse42 to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %20, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN6crc32c6ExtendEjPKhmE13can_use_sse42) #3
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %5
  %9 = tail call { i32, i32, i32, i32 } asm "  xchgq  %rbx,${1:q}\0A  cpuid\0A  xchgq  %rbx,${1:q}", "={ax},=r,={cx},={dx},0,~{dirflag},~{fpsr},~{flags}"(i32 0) #4, !srcloc !3
  %10 = extractvalue { i32, i32, i32, i32 } %9, 0
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = tail call { i32, i32, i32, i32 } asm "  xchgq  %rbx,${1:q}\0A  cpuid\0A  xchgq  %rbx,${1:q}", "={ax},=r,={cx},={dx},0,~{dirflag},~{fpsr},~{flags}"(i32 1) #4, !srcloc !4
  %14 = extractvalue { i32, i32, i32, i32 } %13, 2
  %15 = lshr i32 %14, 20
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  br label %18

18:                                               ; preds = %12, %8
  %19 = phi i8 [ %17, %12 ], [ 0, %8 ]
  store i8 %19, i8* @_ZZN6crc32c6ExtendEjPKhmE13can_use_sse42, align 1
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN6crc32c6ExtendEjPKhmE13can_use_sse42) #3
  br label %20

20:                                               ; preds = %18, %5, %2
  %21 = load i8, i8* @_ZZN6crc32c6ExtendEjPKhmE13can_use_sse42, align 1, !range !5
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = tail call i32 @_ZN6crc32c11ExtendSse42EjPKhm(i32 0, i8* %0, i64 %1) #3
  br label %27

25:                                               ; preds = %20
  %26 = tail call i32 @_ZN6crc32c14ExtendPortableEjPKhm(i32 0, i8* %0, i64 %1) #3
  br label %27

27:                                               ; preds = %23, %25
  %28 = phi i32 [ %24, %23 ], [ %26, %25 ]
  ret i32 %28
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i32 -2144637567, i32 -2144637531, i32 -2144637507}
!4 = !{i32 -2144637361, i32 -2144637325, i32 -2144637301}
!5 = !{i8 0, i8 2}
