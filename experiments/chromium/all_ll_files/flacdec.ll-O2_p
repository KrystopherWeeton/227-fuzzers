; ModuleID = '../../third_party/ffmpeg/libavformat/flacdec.c'
source_filename = "../../third_party/ffmpeg/libavformat/flacdec.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVCodecTag = type { i32, i32 }
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32, i32 }
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, {}*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVRational = type { i32, i32 }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, i8*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, i8*, %struct.AVProbeData, [17 x i64], i8*, i32, i32, i32, i32, i32, i32, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32, i64, i32 }
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVProfile = type { i32, i8* }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVStreamInternal = type { i32, %struct.AVBSFContext*, i32, %struct.AVCodecContext*, i32, i32, %struct.anon, i32, i32, %struct.FFFrac*, %struct.anon.0*, %struct.AVIndexEntry*, i32, i32, i64, i64, i32, i32, i32, i64, i64, i64, i32, i64, i64, i32, i32, [17 x i64], [17 x i8], [17 x i64], i64, i8, i8, i32, %struct.AVRational, %struct.AVProbeData, %struct.AVPacketList* }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.anon = type { %struct.AVBSFContext*, %struct.AVPacket*, i32 }
%struct.FFFrac = type { i64, i64, i64 }
%struct.anon.0 = type { i64, i64, i32, i64, [2 x [399 x double]]*, i64, i64, i32, i32, i64, i64, i32, i64, i32 }
%struct.AVIndexEntry = type { i64, i64, i32, i32 }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVDictionary = type opaque
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type { i32, %struct.AVPacketList*, %struct.AVPacketList*, i64, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, i32, i64, %struct.AVRational, i32, i32, i32, i64, i32, i32, %struct.AVDictionary*, i32, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal**, i32* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%struct.FLACDecContext = type { %struct.AVClass*, i32, i32 }
%struct.AVDictionaryEntry = type { i8*, i8* }

@.str = private unnamed_addr constant [5 x i8] c"flac\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"raw FLAC\00", align 1
@flac_demuxer_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([0 x %struct.AVOption], [0 x %struct.AVOption]* @ff_raw_options, i32 0, i32 0), i32 3687524, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null, %struct.AVClass* (i8**)* null }, align 8
@ff_flac_demuxer = hidden local_unnamed_addr global %struct.AVInputFormat { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), %struct.AVCodecTag** null, %struct.AVClass* @flac_demuxer_class, i8* null, %struct.AVInputFormat* null, i32 86028, i32 16, i32 (%struct.AVProbeData*)* @flac_probe, i32 (%struct.AVFormatContext*)* @flac_read_header, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @ff_raw_read_partial_packet, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*, i32, i64, i32)* @flac_seek, i64 (%struct.AVFormatContext*, i32, i64*, i64)* @flac_read_timestamp, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null }, align 8
@.str.2 = private unnamed_addr constant [13 x i8] c"flac demuxer\00", align 1
@ff_raw_options = external constant [0 x %struct.AVOption], align 8
@.str.3 = private unnamed_addr constant [5 x i8] c"fLaC\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"Error parsing attached picture.\0A\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"error parsing VorbisComment metadata\0A\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"WAVEFORMATEXTENSIBLE_CHANNEL_MASK\00", align 1
@.str.7 = private unnamed_addr constant [52 x i8] c"Invalid value of WAVEFORMATEXTENSIBLE_CHANNEL_MASK\0A\00", align 1

; Function Attrs: nounwind readonly ssp uwtable
define internal i32 @flac_probe(%struct.AVProbeData* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = bitcast i8* %3 to i16*
  %5 = load i16, i16* %4, align 1
  %6 = and i16 %5, -257
  %7 = icmp eq i16 %6, -1793
  br i1 %7, label %8, label %29

8:                                                ; preds = %1
  %9 = getelementptr inbounds i8, i8* %3, i64 2
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = and i32 %11, 240
  %13 = icmp eq i32 %12, 0
  %14 = and i32 %11, 15
  %15 = icmp eq i32 %14, 15
  %16 = or i1 %13, %15
  br i1 %16, label %87, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds i8, i8* %3, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = icmp ugt i8 %19, -81
  %22 = and i32 %20, 6
  %23 = icmp eq i32 %22, 6
  %24 = or i1 %21, %23
  br i1 %24, label %87, label %25

25:                                               ; preds = %17
  %26 = and i32 %20, 1
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i32 13, i32 0
  br label %87

29:                                               ; preds = %1
  %30 = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, 20
  br i1 %32, label %33, label %87

33:                                               ; preds = %29
  %34 = getelementptr inbounds i8, i8* %3, i64 8
  %35 = bitcast i8* %34 to i16*
  %36 = load i16, i16* %35, align 1
  %37 = tail call i16 @llvm.bswap.i16(i16 %36) #7
  %38 = getelementptr inbounds i8, i8* %3, i64 10
  %39 = bitcast i8* %38 to i16*
  %40 = load i16, i16* %39, align 1
  %41 = tail call i16 @llvm.bswap.i16(i16 %40) #7
  %42 = getelementptr inbounds i8, i8* %3, i64 18
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = shl nuw nsw i32 %44, 16
  %46 = getelementptr inbounds i8, i8* %3, i64 19
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 8
  %50 = or i32 %49, %45
  %51 = getelementptr inbounds i8, i8* %3, i64 20
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = or i32 %50, %53
  %55 = tail call i32 @bcmp(i8* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64 4)
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %87

57:                                               ; preds = %33
  %58 = getelementptr inbounds i8, i8* %3, i64 5
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = shl nuw nsw i32 %60, 16
  %62 = getelementptr inbounds i8, i8* %3, i64 6
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = shl nuw nsw i32 %64, 8
  %66 = or i32 %65, %61
  %67 = getelementptr inbounds i8, i8* %3, i64 7
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = or i32 %66, %69
  %71 = getelementptr inbounds i8, i8* %3, i64 4
  %72 = load i8, i8* %71, align 1
  %73 = and i8 %72, 127
  %74 = icmp eq i8 %73, 0
  %75 = icmp eq i32 %70, 34
  %76 = and i1 %74, %75
  %77 = icmp ugt i16 %37, 15
  %78 = and i1 %77, %76
  br i1 %78, label %79, label %86

79:                                               ; preds = %57
  %80 = icmp uge i16 %41, %37
  %81 = and i32 %54, 16777200
  %82 = icmp ne i32 %81, 0
  %83 = and i1 %80, %82
  %84 = icmp ult i32 %54, 10485616
  %85 = and i1 %84, %83
  br i1 %85, label %87, label %86

86:                                               ; preds = %79, %57
  br label %87

87:                                               ; preds = %25, %17, %8, %29, %86, %33, %79
  %88 = phi i32 [ 50, %86 ], [ 0, %33 ], [ 100, %79 ], [ 0, %29 ], [ 0, %8 ], [ 0, %17 ], [ %28, %25 ]
  ret i32 %88
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @flac_read_header(%struct.AVFormatContext*) #1 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to [4 x i8]*
  %4 = alloca i8*, align 8
  %5 = alloca [13 x i8], align 1
  %6 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #7
  %7 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 1
  %8 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 2
  %9 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 3
  %10 = bitcast i8** %4 to i8*
  store i32 -1431655766, i32* %2, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7
  store i8* null, i8** %4, align 8
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %12 = bitcast i8** %11 to %struct.FLACDecContext**
  %13 = load %struct.FLACDecContext*, %struct.FLACDecContext** %12, align 8
  %14 = tail call %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext* %0, %struct.AVCodec* null) #7
  %15 = icmp eq %struct.AVStream* %14, null
  br i1 %15, label %262, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %14, i64 0, i32 19
  %18 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %17, align 8
  %19 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %18, i64 0, i32 0
  store i32 1, i32* %19, align 8
  %20 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %17, align 8
  %21 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %20, i64 0, i32 1
  store i32 86028, i32* %21, align 4
  %22 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %14, i64 0, i32 28
  store i32 5, i32* %22, align 4
  %23 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %24 = load %struct.AVIOContext*, %struct.AVIOContext** %23, align 8
  %25 = tail call i32 @avio_rl32(%struct.AVIOContext* %24) #7
  %26 = icmp eq i32 %25, 1130450022
  %27 = load %struct.AVIOContext*, %struct.AVIOContext** %23, align 8
  br i1 %26, label %28, label %43

28:                                               ; preds = %16
  %29 = call i32 @avio_feof(%struct.AVIOContext* %27) #7
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %230

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.FLACDecContext, %struct.FLACDecContext* %13, i64 0, i32 2
  %33 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 15
  %34 = getelementptr inbounds [13 x i8], [13 x i8]* %5, i64 0, i64 0
  %35 = getelementptr inbounds [13 x i8], [13 x i8]* %5, i64 0, i64 12
  %36 = bitcast i8** %4 to i64*
  %37 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %14, i64 0, i32 4
  %38 = bitcast %struct.AVRational* %37 to i64*
  %39 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %14, i64 0, i32 6
  %40 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 29
  %41 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 37
  %42 = bitcast %struct.AVFormatContext* %0 to i8*
  br label %45

43:                                               ; preds = %16
  %44 = tail call i64 @avio_seek(%struct.AVIOContext* %27, i64 -4, i32 1) #7
  br label %262

45:                                               ; preds = %31, %224
  %46 = phi i32 [ 0, %31 ], [ %225, %224 ]
  %47 = load %struct.AVIOContext*, %struct.AVIOContext** %23, align 8
  %48 = call i32 @avio_read(%struct.AVIOContext* %47, i8* nonnull %6, i32 4) #7
  %49 = icmp eq i32 %48, 4
  br i1 %49, label %50, label %262

50:                                               ; preds = %45
  %51 = load i8, i8* %6, align 4
  %52 = zext i8 %51 to i32
  %53 = and i32 %52, 128
  %54 = and i32 %52, 127
  %55 = load i8, i8* %7, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw nsw i32 %56, 16
  %58 = load i8, i8* %8, align 2
  %59 = zext i8 %58 to i32
  %60 = shl nuw nsw i32 %59, 8
  %61 = or i32 %60, %57
  %62 = load i8, i8* %9, align 1
  %63 = zext i8 %62 to i32
  %64 = or i32 %61, %63
  switch i32 %54, label %74 [
    i32 0, label %65
    i32 5, label %65
    i32 6, label %65
    i32 4, label %65
    i32 3, label %65
  ]

65:                                               ; preds = %50, %50, %50, %50, %50
  %66 = add nuw nsw i32 %64, 64
  %67 = zext i32 %66 to i64
  %68 = call noalias i8* @av_mallocz(i64 %67) #7
  store i8* %68, i8** %4, align 8
  %69 = icmp eq i8* %68, null
  br i1 %69, label %262, label %70

70:                                               ; preds = %65
  %71 = load %struct.AVIOContext*, %struct.AVIOContext** %23, align 8
  %72 = call i32 @avio_read(%struct.AVIOContext* %71, i8* nonnull %68, i32 %64) #7
  %73 = icmp eq i32 %72, %64
  br i1 %73, label %80, label %257

74:                                               ; preds = %50
  %75 = load %struct.AVIOContext*, %struct.AVIOContext** %23, align 8
  %76 = zext i32 %64 to i64
  %77 = call i64 @avio_skip(%struct.AVIOContext* %75, i64 %76) #7
  %78 = trunc i64 %77 to i32
  %79 = icmp slt i32 %78, 0
  br i1 %79, label %260, label %80

80:                                               ; preds = %70, %74
  switch i32 %54, label %194 [
    i32 0, label %81
    i32 5, label %119
    i32 6, label %166
    i32 3, label %171
  ]

81:                                               ; preds = %80
  %82 = icmp eq i32 %46, 0
  %83 = icmp eq i32 %64, 34
  %84 = and i1 %82, %83
  br i1 %84, label %85, label %257

85:                                               ; preds = %81
  %86 = load i64, i64* %36, align 8
  %87 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %17, align 8
  %88 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %87, i64 0, i32 3
  %89 = bitcast i8** %88 to i64*
  store i64 %86, i64* %89, align 8
  %90 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %17, align 8
  %91 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %90, i64 0, i32 4
  store i32 34, i32* %91, align 8
  store i8* null, i8** %4, align 8
  %92 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %17, align 8
  %93 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %92, i64 0, i32 3
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 10
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  %98 = shl nuw nsw i32 %97, 16
  %99 = getelementptr inbounds i8, i8* %94, i64 11
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = shl nuw nsw i32 %101, 8
  %103 = or i32 %102, %98
  %104 = getelementptr inbounds i8, i8* %94, i64 12
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = or i32 %103, %106
  %108 = lshr i32 %107, 4
  %109 = getelementptr inbounds i8, i8* %94, i64 13
  %110 = bitcast i8* %109 to i64*
  %111 = load i64, i64* %110, align 1
  %112 = call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %111) #8, !srcloc !2
  %113 = lshr i64 %112, 24
  %114 = and i64 %113, 68719476735
  %115 = icmp eq i32 %108, 0
  br i1 %115, label %224, label %116

116:                                              ; preds = %85
  call void @avpriv_set_pts_info(%struct.AVStream* nonnull %14, i32 64, i32 1, i32 %108) #7
  %117 = icmp eq i64 %114, 0
  br i1 %117, label %224, label %118

118:                                              ; preds = %116
  store i64 %114, i64* %39, align 8
  br label %224

119:                                              ; preds = %80
  call void @llvm.lifetime.start.p0i8(i64 13, i8* nonnull %34) #7
  %120 = icmp ult i32 %64, 431
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %34, i8 -86, i64 13, i1 false)
  br i1 %120, label %164, label %121

121:                                              ; preds = %119
  %122 = load i8*, i8** %4, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 395
  %124 = getelementptr inbounds i8, i8* %122, i64 396
  %125 = load i8, i8* %123, align 1
  %126 = zext i8 %125 to i32
  %127 = add nsw i32 %126, -1
  %128 = icmp ult i8 %125, 2
  br i1 %128, label %164, label %129

129:                                              ; preds = %121
  %130 = icmp sgt i32 %127, 0
  br i1 %130, label %131, label %165

131:                                              ; preds = %129
  %132 = zext i32 %64 to i64
  %133 = icmp ult i32 %64, 432
  br i1 %133, label %164, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds i8, i8* %122, i64 432
  br label %136

136:                                              ; preds = %134, %155
  %137 = phi i8* [ %135, %134 ], [ %160, %155 ]
  %138 = phi i8* [ %124, %134 ], [ %158, %155 ]
  %139 = phi i32 [ 0, %134 ], [ %153, %155 ]
  %140 = getelementptr inbounds i8, i8* %138, i64 8
  %141 = bitcast i8* %138 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = getelementptr inbounds i8, i8* %138, i64 9
  %144 = load i8, i8* %140, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* align 1 %143, i64 12, i1 false) #7
  store i8 0, i8* %35, align 1
  %145 = getelementptr inbounds i8, i8* %138, i64 35
  %146 = load i8, i8* %145, align 1
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %164, label %148

148:                                              ; preds = %136
  %149 = zext i8 %144 to i32
  %150 = call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %142) #8, !srcloc !2
  %151 = load i64, i64* %38, align 8
  %152 = call %struct.AVChapter* @avpriv_new_chapter(%struct.AVFormatContext* %0, i32 %149, i64 %151, i64 %150, i64 -9223372036854775808, i8* nonnull %34) #7
  %153 = add nuw nsw i32 %139, 1
  %154 = icmp eq i32 %153, %127
  br i1 %154, label %165, label %155

155:                                              ; preds = %148
  %156 = zext i8 %146 to i64
  %157 = mul nuw nsw i64 %156, 12
  %158 = getelementptr inbounds i8, i8* %137, i64 %157
  %159 = load i64, i64* %36, align 8
  %160 = getelementptr inbounds i8, i8* %158, i64 36
  %161 = ptrtoint i8* %160 to i64
  %162 = sub i64 %161, %159
  %163 = icmp sgt i64 %162, %132
  br i1 %163, label %164, label %136

164:                                              ; preds = %119, %121, %131, %136, %155
  call void @llvm.lifetime.end.p0i8(i64 13, i8* nonnull %34) #7
  br label %257

165:                                              ; preds = %148, %129
  call void @av_freep(i8* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 13, i8* nonnull %34) #7
  br label %224

166:                                              ; preds = %80
  %167 = load i8*, i8** %4, align 8
  %168 = call i32 @ff_flac_parse_picture(%struct.AVFormatContext* %0, i8* %167, i32 %64, i32 1) #7
  call void @av_freep(i8* nonnull %10) #7
  %169 = icmp slt i32 %168, 0
  br i1 %169, label %170, label %224

170:                                              ; preds = %166
  call void (i8*, i32, i8*, ...) @av_log(i8* %42, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0)) #7
  br label %262

171:                                              ; preds = %80
  %172 = load i8*, i8** %4, align 8
  %173 = udiv i32 %64, 18
  store i32 1, i32* %32, align 4
  %174 = load i32, i32* %33, align 8
  %175 = and i32 %174, 524288
  %176 = icmp ne i32 %175, 0
  %177 = icmp ugt i32 %64, 17
  %178 = and i1 %176, %177
  br i1 %178, label %179, label %193

179:                                              ; preds = %171, %179
  %180 = phi i32 [ %191, %179 ], [ 0, %171 ]
  %181 = phi i8* [ %189, %179 ], [ %172, %171 ]
  %182 = getelementptr inbounds i8, i8* %181, i64 8
  %183 = bitcast i8* %181 to i64*
  %184 = load i64, i64* %183, align 1
  %185 = call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %184) #8, !srcloc !2
  %186 = bitcast i8* %182 to i64*
  %187 = load i64, i64* %186, align 1
  %188 = call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %187) #8, !srcloc !2
  %189 = getelementptr inbounds i8, i8* %181, i64 18
  %190 = call i32 @av_add_index_entry(%struct.AVStream* nonnull %14, i64 %188, i64 %185, i32 0, i32 0, i32 1) #7
  %191 = add nuw nsw i32 %180, 1
  %192 = icmp ult i32 %191, %173
  br i1 %192, label %179, label %193

193:                                              ; preds = %179, %171
  call void @av_freep(i8* nonnull %10) #7
  br label %224

194:                                              ; preds = %80
  %195 = icmp eq i32 %46, 0
  br i1 %195, label %257, label %196

196:                                              ; preds = %194
  %197 = icmp eq i32 %54, 4
  br i1 %197, label %198, label %223

198:                                              ; preds = %196
  %199 = load i8*, i8** %4, align 8
  %200 = call i32 @ff_vorbis_comment(%struct.AVFormatContext* %0, %struct.AVDictionary** %40, i8* %199, i32 %64, i32 1) #7
  %201 = icmp slt i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %198
  call void (i8*, i32, i8*, ...) @av_log(i8* %42, i32 24, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0)) #7
  br label %208

203:                                              ; preds = %198
  %204 = icmp eq i32 %200, 0
  br i1 %204, label %208, label %205

205:                                              ; preds = %203
  %206 = load i32, i32* %41, align 4
  %207 = or i32 %206, 1
  store i32 %207, i32* %41, align 4
  br label %208

208:                                              ; preds = %203, %205, %202
  %209 = load %struct.AVDictionary*, %struct.AVDictionary** %40, align 8
  %210 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %209, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0), %struct.AVDictionaryEntry* null, i32 0) #7
  %211 = icmp eq %struct.AVDictionaryEntry* %210, null
  br i1 %211, label %223, label %212

212:                                              ; preds = %208
  %213 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %210, i64 0, i32 1
  %214 = load i8*, i8** %213, align 8
  %215 = call i64 @strtol(i8* nocapture %214, i8** null, i32 0) #7
  %216 = add i64 %215, -1
  %217 = icmp ugt i64 %216, 262142
  br i1 %217, label %218, label %219

218:                                              ; preds = %212
  call void (i8*, i32, i8*, ...) @av_log(i8* %42, i32 24, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i64 0, i64 0)) #7
  br label %223

219:                                              ; preds = %212
  %220 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %17, align 8
  %221 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %220, i64 0, i32 21
  store i64 %215, i64* %221, align 8
  %222 = call i32 @av_dict_set(%struct.AVDictionary** %40, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0), i8* null, i32 0) #7
  br label %223

223:                                              ; preds = %208, %219, %218, %196
  call void @av_freep(i8* nonnull %10) #7
  br label %224

224:                                              ; preds = %118, %85, %116, %165, %193, %223, %166
  %225 = phi i32 [ %46, %165 ], [ %46, %166 ], [ %46, %193 ], [ %46, %223 ], [ 1, %116 ], [ 1, %85 ], [ 1, %118 ]
  %226 = load %struct.AVIOContext*, %struct.AVIOContext** %23, align 8
  %227 = call i32 @avio_feof(%struct.AVIOContext* %226) #7
  %228 = or i32 %227, %53
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %45, label %230

230:                                              ; preds = %224, %28
  %231 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 29
  %232 = load %struct.AVDictionary*, %struct.AVDictionary** %231, align 8
  %233 = call i32 @ff_replaygain_export(%struct.AVStream* nonnull %14, %struct.AVDictionary* %232) #7
  %234 = icmp slt i32 %233, 0
  br i1 %234, label %262, label %235

235:                                              ; preds = %230
  %236 = load %struct.AVIOContext*, %struct.AVIOContext** %23, align 8
  %237 = call i64 @avio_seek(%struct.AVIOContext* %236, i64 0, i32 1) #7
  %238 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %14, i64 0, i32 40
  %239 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %238, align 8
  %240 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %239, i64 0, i32 12
  %241 = load i32, i32* %240, align 8
  %242 = icmp sgt i32 %241, 0
  br i1 %242, label %243, label %262

243:                                              ; preds = %235, %243
  %244 = phi i64 [ %251, %243 ], [ 0, %235 ]
  %245 = phi %struct.AVStreamInternal* [ %252, %243 ], [ %239, %235 ]
  %246 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %245, i64 0, i32 11
  %247 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %246, align 8
  %248 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %247, i64 %244, i32 0
  %249 = load i64, i64* %248, align 8
  %250 = add nsw i64 %249, %237
  store i64 %250, i64* %248, align 8
  %251 = add nuw nsw i64 %244, 1
  %252 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %238, align 8
  %253 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %252, i64 0, i32 12
  %254 = load i32, i32* %253, align 8
  %255 = sext i32 %254 to i64
  %256 = icmp slt i64 %251, %255
  br i1 %256, label %243, label %262

257:                                              ; preds = %81, %194, %70, %164
  %258 = phi i32 [ -1094995529, %164 ], [ -1094995529, %81 ], [ -1094995529, %194 ], [ -5, %70 ]
  %259 = load i8*, i8** %4, align 8
  call void @av_free(i8* %259) #7
  br label %262

260:                                              ; preds = %74
  %261 = trunc i64 %77 to i32
  br label %262

262:                                              ; preds = %65, %45, %243, %260, %235, %230, %1, %257, %170, %43
  %263 = phi i32 [ 0, %43 ], [ %258, %257 ], [ %168, %170 ], [ -12, %1 ], [ %233, %230 ], [ 0, %235 ], [ %261, %260 ], [ 0, %243 ], [ -12, %65 ], [ 1094995529, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #7
  ret i32 %263
}

declare i32 @ff_raw_read_partial_packet(%struct.AVFormatContext*, %struct.AVPacket*) #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @flac_seek(%struct.AVFormatContext* nocapture readonly, i32, i64, i32) #1 {
  %5 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %6 = bitcast i8** %5 to %struct.FLACDecContext**
  %7 = load %struct.FLACDecContext*, %struct.FLACDecContext** %6, align 8
  %8 = getelementptr inbounds %struct.FLACDecContext, %struct.FLACDecContext* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %41, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 15
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 524288
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %41, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %18 = load %struct.AVStream**, %struct.AVStream*** %17, align 8
  %19 = load %struct.AVStream*, %struct.AVStream** %18, align 8
  %20 = tail call i32 @av_index_search_timestamp(%struct.AVStream* %19, i64 %2, i32 %3) #7
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %41, label %22

22:                                               ; preds = %16
  %23 = load %struct.AVStream**, %struct.AVStream*** %17, align 8
  %24 = load %struct.AVStream*, %struct.AVStream** %23, align 8
  %25 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %24, i64 0, i32 40
  %26 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %25, align 8
  %27 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %26, i64 0, i32 12
  %28 = load i32, i32* %27, align 8
  %29 = icmp slt i32 %20, %28
  br i1 %29, label %30, label %41

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %26, i64 0, i32 11
  %32 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %31, align 8
  %33 = sext i32 %20 to i64
  %34 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %32, i64 %33, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %37 = load %struct.AVIOContext*, %struct.AVIOContext** %36, align 8
  %38 = tail call i64 @avio_seek(%struct.AVIOContext* %37, i64 %35, i32 0) #7
  %39 = ashr i64 %38, 63
  %40 = trunc i64 %39 to i32
  br label %41

41:                                               ; preds = %30, %16, %22, %4, %11
  %42 = phi i32 [ -1, %11 ], [ -1, %4 ], [ -1, %22 ], [ -1, %16 ], [ %40, %30 ]
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @flac_read_timestamp(%struct.AVFormatContext*, i32, i64* nocapture, i64) #1 {
  %5 = alloca %struct.AVPacket, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = bitcast %struct.AVPacket* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %8) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 88, i1 false)
  %9 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %10 = load %struct.AVStream**, %struct.AVStream*** %9, align 8
  %11 = sext i32 %1 to i64
  %12 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %10, i64 %11
  %13 = load %struct.AVStream*, %struct.AVStream** %12, align 8
  %14 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %14, align 8
  %16 = load i64, i64* %2, align 8
  %17 = tail call i64 @avio_seek(%struct.AVIOContext* %15, i64 %16, i32 0) #7
  %18 = icmp slt i64 %17, 0
  br i1 %18, label %69, label %19

19:                                               ; preds = %4
  call void @av_init_packet(%struct.AVPacket* nonnull %5) #7
  %20 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %13, i64 0, i32 19
  %21 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %20, align 8
  %22 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = call %struct.AVCodecParserContext* @av_parser_init(i32 %23) #7
  %25 = icmp eq %struct.AVCodecParserContext* %24, null
  br i1 %25, label %69, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %24, i64 0, i32 16
  %28 = load i32, i32* %27, align 8
  %29 = or i32 %28, 4096
  store i32 %29, i32* %27, align 8
  %30 = bitcast i8** %6 to i8*
  %31 = bitcast i32* %7 to i8*
  %32 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %13, i64 0, i32 40
  %33 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %5, i64 0, i32 3
  %34 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %5, i64 0, i32 4
  %35 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %5, i64 0, i32 1
  %36 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %5, i64 0, i32 2
  %37 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %24, i64 0, i32 7
  br label %38

38:                                               ; preds = %66, %26
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #7
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #7
  store i32 -1431655766, i32* %7, align 4
  %39 = call i32 @ff_raw_read_partial_packet(%struct.AVFormatContext* %0, %struct.AVPacket* nonnull %5) #7
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %38
  %42 = icmp eq i32 %39, -11
  br i1 %42, label %66, label %43

43:                                               ; preds = %41
  call void @av_packet_unref(%struct.AVPacket* nonnull %5) #7
  br label %44

44:                                               ; preds = %43, %38
  %45 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %32, align 8
  %46 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %45, i64 0, i32 3
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %46, align 8
  %48 = load i8*, i8** %33, align 8
  %49 = load i32, i32* %34, align 8
  %50 = load i64, i64* %35, align 8
  %51 = load i64, i64* %36, align 8
  %52 = load i64, i64* %2, align 8
  %53 = call i32 @av_parser_parse2(%struct.AVCodecParserContext* nonnull %24, %struct.AVCodecContext* %47, i8** nonnull %6, i32* nonnull %7, i8* %48, i32 %49, i64 %50, i64 %51, i64 %52) #7
  call void @av_packet_unref(%struct.AVPacket* nonnull %5) #7
  %54 = load i32, i32* %7, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %44
  %57 = load i64, i64* %37, align 8
  %58 = icmp eq i64 %57, -9223372036854775808
  br i1 %58, label %66, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %24, i64 0, i32 4
  %61 = load i64, i64* %60, align 8
  %62 = sext i32 %54 to i64
  %63 = sub nsw i64 %61, %62
  store i64 %63, i64* %2, align 8
  %64 = load i64, i64* %37, align 8
  br label %67

65:                                               ; preds = %44
  br i1 %40, label %67, label %66

66:                                               ; preds = %65, %56, %41
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #7
  br label %38

67:                                               ; preds = %65, %59
  %68 = phi i64 [ %64, %59 ], [ -9223372036854775808, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #7
  call void @av_parser_close(%struct.AVCodecParserContext* nonnull %24) #7
  br label %69

69:                                               ; preds = %19, %4, %67
  %70 = phi i64 [ %68, %67 ], [ -9223372036854775808, %4 ], [ -9223372036854775808, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %8) #7
  ret i64 %70
}

declare i8* @av_default_item_name(i8*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext*, %struct.AVCodec*) local_unnamed_addr #2

declare i32 @avio_rl32(%struct.AVIOContext*) local_unnamed_addr #2

declare i64 @avio_seek(%struct.AVIOContext*, i64, i32) local_unnamed_addr #2

declare i32 @avio_feof(%struct.AVIOContext*) local_unnamed_addr #2

declare i32 @avio_read(%struct.AVIOContext*, i8*, i32) local_unnamed_addr #2

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #2

declare i64 @avio_skip(%struct.AVIOContext*, i64) local_unnamed_addr #2

declare void @avpriv_set_pts_info(%struct.AVStream*, i32, i32, i32) local_unnamed_addr #2

declare %struct.AVChapter* @avpriv_new_chapter(%struct.AVFormatContext*, i32, i64, i64, i64, i8*) local_unnamed_addr #2

declare void @av_freep(i8*) local_unnamed_addr #2

declare i32 @ff_flac_parse_picture(%struct.AVFormatContext*, i8*, i32, i32) local_unnamed_addr #2

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #2

declare i32 @av_add_index_entry(%struct.AVStream*, i64, i64, i32, i32, i32) local_unnamed_addr #2

declare i32 @ff_vorbis_comment(%struct.AVFormatContext*, %struct.AVDictionary**, i8*, i32, i32) local_unnamed_addr #2

declare %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary*, i8*, %struct.AVDictionaryEntry*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #4

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) local_unnamed_addr #2

declare i32 @ff_replaygain_export(%struct.AVStream*, %struct.AVDictionary*) local_unnamed_addr #2

declare void @av_free(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare i32 @av_index_search_timestamp(%struct.AVStream*, i64, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @av_init_packet(%struct.AVPacket*) local_unnamed_addr #2

declare %struct.AVCodecParserContext* @av_parser_init(i32) local_unnamed_addr #2

declare void @av_packet_unref(%struct.AVPacket*) local_unnamed_addr #2

declare i32 @av_parser_parse2(%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32, i64, i64, i64) local_unnamed_addr #2

declare void @av_parser_close(%struct.AVCodecParserContext*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #6

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 1778920}
