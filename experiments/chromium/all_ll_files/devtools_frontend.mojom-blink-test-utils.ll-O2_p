; ModuleID = 'gen/third_party/blink/public/mojom/devtools/devtools_frontend.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/devtools/devtools_frontend.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::DevToolsFrontendAsyncWaiter" = type { %"class.blink::mojom::blink::DevToolsFrontend"* }
%"class.blink::mojom::blink::DevToolsFrontend" = type { i32 (...)** }
%"class.blink::mojom::blink::DevToolsFrontendHostAsyncWaiter" = type { %"class.blink::mojom::blink::DevToolsFrontendHost"* }
%"class.blink::mojom::blink::DevToolsFrontendHost" = type { i32 (...)** }
%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting" = type { %"class.blink::mojom::blink::DevToolsFrontend" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::PendingAssociatedRemote" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.blink::mojom::blink::DevToolsFrontendHostInterceptorForTesting" = type { %"class.blink::mojom::blink::DevToolsFrontendHost" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"union.absl::variant_internal::DestructibleUnionImpl.5" }
%"union.absl::variant_internal::DestructibleUnionImpl.5" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

$_ZN5blink5mojom5blink16DevToolsFrontendD2Ev = comdat any

$_ZN5blink5mojom5blink37DevToolsFrontendInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom5blink20DevToolsFrontendHostD2Ev = comdat any

$_ZN5blink5mojom5blink41DevToolsFrontendHostInterceptorForTestingD0Ev = comdat any

@_ZTVN5blink5mojom5blink37DevToolsFrontendInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::DevToolsFrontend"*)* @_ZN5blink5mojom5blink16DevToolsFrontendD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*)* @_ZN5blink5mojom5blink37DevToolsFrontendInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*, %"class.WTF::String"*, %"class.mojo::PendingAssociatedRemote"*)* @_ZN5blink5mojom5blink37DevToolsFrontendInterceptorForTesting21SetupDevToolsFrontendERKN3WTF6StringEN4mojo23PendingAssociatedRemoteINS1_20DevToolsFrontendHostEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*, %"class.WTF::String"*)* @_ZN5blink5mojom5blink37DevToolsFrontendInterceptorForTesting25SetupDevToolsExtensionAPIERKN3WTF6StringE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom5blink41DevToolsFrontendHostInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::DevToolsFrontendHost"*)* @_ZN5blink5mojom5blink20DevToolsFrontendHostD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::DevToolsFrontendHostInterceptorForTesting"*)* @_ZN5blink5mojom5blink41DevToolsFrontendHostInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::DevToolsFrontendHostInterceptorForTesting"*, %"class.base::Value"*)* @_ZN5blink5mojom5blink41DevToolsFrontendHostInterceptorForTesting23DispatchEmbedderMessageEN4base5ValueE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink27DevToolsFrontendAsyncWaiterC1EPNS1_16DevToolsFrontendE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::DevToolsFrontendAsyncWaiter"*, %"class.blink::mojom::blink::DevToolsFrontend"*), void (%"class.blink::mojom::blink::DevToolsFrontendAsyncWaiter"*, %"class.blink::mojom::blink::DevToolsFrontend"*)* @_ZN5blink5mojom5blink27DevToolsFrontendAsyncWaiterC2EPNS1_16DevToolsFrontendE
@_ZN5blink5mojom5blink27DevToolsFrontendAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::DevToolsFrontendAsyncWaiter"*), void (%"class.blink::mojom::blink::DevToolsFrontendAsyncWaiter"*)* @_ZN5blink5mojom5blink27DevToolsFrontendAsyncWaiterD2Ev
@_ZN5blink5mojom5blink31DevToolsFrontendHostAsyncWaiterC1EPNS1_20DevToolsFrontendHostE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::DevToolsFrontendHostAsyncWaiter"*, %"class.blink::mojom::blink::DevToolsFrontendHost"*), void (%"class.blink::mojom::blink::DevToolsFrontendHostAsyncWaiter"*, %"class.blink::mojom::blink::DevToolsFrontendHost"*)* @_ZN5blink5mojom5blink31DevToolsFrontendHostAsyncWaiterC2EPNS1_20DevToolsFrontendHostE
@_ZN5blink5mojom5blink31DevToolsFrontendHostAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::DevToolsFrontendHostAsyncWaiter"*), void (%"class.blink::mojom::blink::DevToolsFrontendHostAsyncWaiter"*)* @_ZN5blink5mojom5blink31DevToolsFrontendHostAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink37DevToolsFrontendInterceptorForTesting21SetupDevToolsFrontendERKN3WTF6StringEN4mojo23PendingAssociatedRemoteINS1_20DevToolsFrontendHostEEE(%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8), %"class.mojo::PendingAssociatedRemote"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::PendingAssociatedRemote", align 8
  %5 = bitcast %"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"* %0 to %"class.blink::mojom::blink::DevToolsFrontend"* (%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::DevToolsFrontend"* (%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*)**, %"class.blink::mojom::blink::DevToolsFrontend"* (%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsFrontend"* (%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*)*, %"class.blink::mojom::blink::DevToolsFrontend"* (%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*)** %6, i64 4
  %8 = load %"class.blink::mojom::blink::DevToolsFrontend"* (%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*)*, %"class.blink::mojom::blink::DevToolsFrontend"* (%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::DevToolsFrontend"* %8(%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"* %0) #7
  %10 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %2, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %10, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %11) #7
  %12 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %2, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  store i32 %14, i32* %12, align 8
  %15 = bitcast %"class.blink::mojom::blink::DevToolsFrontend"* %9 to void (%"class.blink::mojom::blink::DevToolsFrontend"*, %"class.WTF::String"*, %"class.mojo::PendingAssociatedRemote"*)***
  %16 = load void (%"class.blink::mojom::blink::DevToolsFrontend"*, %"class.WTF::String"*, %"class.mojo::PendingAssociatedRemote"*)**, void (%"class.blink::mojom::blink::DevToolsFrontend"*, %"class.WTF::String"*, %"class.mojo::PendingAssociatedRemote"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::DevToolsFrontend"*, %"class.WTF::String"*, %"class.mojo::PendingAssociatedRemote"*)*, void (%"class.blink::mojom::blink::DevToolsFrontend"*, %"class.WTF::String"*, %"class.mojo::PendingAssociatedRemote"*)** %16, i64 2
  %18 = load void (%"class.blink::mojom::blink::DevToolsFrontend"*, %"class.WTF::String"*, %"class.mojo::PendingAssociatedRemote"*)*, void (%"class.blink::mojom::blink::DevToolsFrontend"*, %"class.WTF::String"*, %"class.mojo::PendingAssociatedRemote"*)** %17, align 8
  call void %18(%"class.blink::mojom::blink::DevToolsFrontend"* %9, %"class.WTF::String"* dereferenceable(8) %1, %"class.mojo::PendingAssociatedRemote"* nonnull %4) #7
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %10) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink37DevToolsFrontendInterceptorForTesting25SetupDevToolsExtensionAPIERKN3WTF6StringE(%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"* %0 to %"class.blink::mojom::blink::DevToolsFrontend"* (%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::DevToolsFrontend"* (%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*)**, %"class.blink::mojom::blink::DevToolsFrontend"* (%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsFrontend"* (%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*)*, %"class.blink::mojom::blink::DevToolsFrontend"* (%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*)** %4, i64 4
  %6 = load %"class.blink::mojom::blink::DevToolsFrontend"* (%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*)*, %"class.blink::mojom::blink::DevToolsFrontend"* (%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::DevToolsFrontend"* %6(%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"* %0) #7
  %8 = bitcast %"class.blink::mojom::blink::DevToolsFrontend"* %7 to void (%"class.blink::mojom::blink::DevToolsFrontend"*, %"class.WTF::String"*)***
  %9 = load void (%"class.blink::mojom::blink::DevToolsFrontend"*, %"class.WTF::String"*)**, void (%"class.blink::mojom::blink::DevToolsFrontend"*, %"class.WTF::String"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::DevToolsFrontend"*, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::DevToolsFrontend"*, %"class.WTF::String"*)** %9, i64 3
  %11 = load void (%"class.blink::mojom::blink::DevToolsFrontend"*, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::DevToolsFrontend"*, %"class.WTF::String"*)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::DevToolsFrontend"* %7, %"class.WTF::String"* dereferenceable(8) %1) #7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink27DevToolsFrontendAsyncWaiterC2EPNS1_16DevToolsFrontendE(%"class.blink::mojom::blink::DevToolsFrontendAsyncWaiter"* nocapture, %"class.blink::mojom::blink::DevToolsFrontend"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsFrontendAsyncWaiter", %"class.blink::mojom::blink::DevToolsFrontendAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::DevToolsFrontend"* %1, %"class.blink::mojom::blink::DevToolsFrontend"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink27DevToolsFrontendAsyncWaiterD2Ev(%"class.blink::mojom::blink::DevToolsFrontendAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink41DevToolsFrontendHostInterceptorForTesting23DispatchEmbedderMessageEN4base5ValueE(%"class.blink::mojom::blink::DevToolsFrontendHostInterceptorForTesting"*, %"class.base::Value"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Value", align 8
  %4 = bitcast %"class.blink::mojom::blink::DevToolsFrontendHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::DevToolsFrontendHost"* (%"class.blink::mojom::blink::DevToolsFrontendHostInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::DevToolsFrontendHost"* (%"class.blink::mojom::blink::DevToolsFrontendHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::DevToolsFrontendHost"* (%"class.blink::mojom::blink::DevToolsFrontendHostInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsFrontendHost"* (%"class.blink::mojom::blink::DevToolsFrontendHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::DevToolsFrontendHost"* (%"class.blink::mojom::blink::DevToolsFrontendHostInterceptorForTesting"*)** %5, i64 3
  %7 = load %"class.blink::mojom::blink::DevToolsFrontendHost"* (%"class.blink::mojom::blink::DevToolsFrontendHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::DevToolsFrontendHost"* (%"class.blink::mojom::blink::DevToolsFrontendHostInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::DevToolsFrontendHost"* %7(%"class.blink::mojom::blink::DevToolsFrontendHostInterceptorForTesting"* %0) #7
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #7
  %9 = bitcast %"class.blink::mojom::blink::DevToolsFrontendHost"* %8 to void (%"class.blink::mojom::blink::DevToolsFrontendHost"*, %"class.base::Value"*)***
  %10 = load void (%"class.blink::mojom::blink::DevToolsFrontendHost"*, %"class.base::Value"*)**, void (%"class.blink::mojom::blink::DevToolsFrontendHost"*, %"class.base::Value"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::mojom::blink::DevToolsFrontendHost"*, %"class.base::Value"*)*, void (%"class.blink::mojom::blink::DevToolsFrontendHost"*, %"class.base::Value"*)** %10, i64 2
  %12 = load void (%"class.blink::mojom::blink::DevToolsFrontendHost"*, %"class.base::Value"*)*, void (%"class.blink::mojom::blink::DevToolsFrontendHost"*, %"class.base::Value"*)** %11, align 8
  call void %12(%"class.blink::mojom::blink::DevToolsFrontendHost"* %8, %"class.base::Value"* nonnull %3) #7
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink31DevToolsFrontendHostAsyncWaiterC2EPNS1_20DevToolsFrontendHostE(%"class.blink::mojom::blink::DevToolsFrontendHostAsyncWaiter"* nocapture, %"class.blink::mojom::blink::DevToolsFrontendHost"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsFrontendHostAsyncWaiter", %"class.blink::mojom::blink::DevToolsFrontendHostAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::DevToolsFrontendHost"* %1, %"class.blink::mojom::blink::DevToolsFrontendHost"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink31DevToolsFrontendHostAsyncWaiterD2Ev(%"class.blink::mojom::blink::DevToolsFrontendHostAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink16DevToolsFrontendD2Ev(%"class.blink::mojom::blink::DevToolsFrontend"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink37DevToolsFrontendInterceptorForTestingD0Ev(%"class.blink::mojom::blink::DevToolsFrontendInterceptorForTesting"*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink20DevToolsFrontendHostD2Ev(%"class.blink::mojom::blink::DevToolsFrontendHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink41DevToolsFrontendHostInterceptorForTestingD0Ev(%"class.blink::mojom::blink::DevToolsFrontendHostInterceptorForTesting"*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8)) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
