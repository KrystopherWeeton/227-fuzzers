; ModuleID = '../../gpu/command_buffer/service/abstract_texture_impl.cc'
source_filename = "../../gpu/command_buffer/service/abstract_texture_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.gpu::gles2::AbstractTextureImpl" = type { %"class.gpu::gles2::AbstractTexture", i8, %"class.gpu::gles2::Texture"*, %"class.gl::GLApi"* }
%"class.gpu::gles2::AbstractTexture" = type { i32 (...)** }
%"class.gpu::gles2::Texture" = type <{ %"class.gpu::TextureBase", %"class.std::__1::vector", %"class.base::internal::flat_tree", i8, [7 x i8], %"class.gpu::gles2::TextureRef"*, i32, i8, [3 x i8], i32, i32, %"struct.gpu::gles2::SamplerState", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i8, i8, i8, i8, i32, i32, i8, [7 x i8], %"struct.gpu::gles2::Texture::CompatibilitySwizzle"*, i8, [7 x i8] }>
%"class.gpu::TextureBase" = type { i32 (...)**, i32, i32, %"class.gpu::MailboxManager"* }
%"class.gpu::MailboxManager" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gpu::gles2::Texture::FaceInfo"*, %"struct.gpu::gles2::Texture::FaceInfo"*, %"class.std::__1::__compressed_pair.3" }
%"struct.gpu::gles2::Texture::FaceInfo" = type { i32, %"class.std::__1::vector.0" }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"struct.gpu::gles2::Texture::LevelInfo"*, %"struct.gpu::gles2::Texture::LevelInfo"*, %"class.std::__1::__compressed_pair" }
%"struct.gpu::gles2::Texture::LevelInfo" = type <{ %"class.gfx::Rect", i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %class.scoped_refptr, i32, i32, i8, [7 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.scoped_refptr = type { %"class.gl::GLImage"* }
%"class.gl::GLImage" = type { i32 (...)**, %"class.base::RefCounted", %"class.gfx::ColorSpace" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.gpu::gles2::Texture::LevelInfo"* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.gpu::gles2::Texture::FaceInfo"* }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.8" }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.gpu::gles2::TextureRef"**, %"class.gpu::gles2::TextureRef"**, %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.gpu::gles2::TextureRef"** }
%"class.gpu::gles2::TextureRef" = type { %"class.base::RefCounted.10", %"class.gpu::gles2::TextureManager"*, %"class.gpu::gles2::Texture"*, i32, i32, i8, %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.107" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%"class.gpu::gles2::TextureManager" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.std::__1::unique_ptr", %"class.gpu::MemoryTracker"*, %class.scoped_refptr.23, %"class.std::__1::vector.46", %"class.std::__1::unordered_map", i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i8, [6 x i32], [6 x %class.scoped_refptr.72], %"class.std::__1::vector.73", i32, %"class.gl::ProgressReporter"*, %"class.gpu::ServiceDiscardableManager"* }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.gpu::MemoryTypeTracker"* }
%"class.gpu::MemoryTypeTracker" = type { %"class.gpu::MemoryTracker"*, i64, %"class.base::Lock", %class.scoped_refptr.13, %"class.base::WeakPtrFactory" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.scoped_refptr.13 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.15 }
%class.scoped_refptr.15 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.16", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.16" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.17" }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i8 }
%"class.gpu::MemoryTracker" = type { i32 (...)** }
%class.scoped_refptr.23 = type { %"class.gpu::gles2::FeatureInfo"* }
%"class.gpu::gles2::FeatureInfo" = type { %"class.base::RefCounted.24", i8, [3 x i8], %"struct.gpu::gles2::Validators", %"struct.gpu::gles2::DisallowedFeatures", i32, i8, %"class.base::internal::flat_tree.32", %"struct.gpu::gles2::FeatureInfo::FeatureFlags", %"class.gpu::GpuDriverBugWorkarounds", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.40" }
%"class.base::RefCounted.24" = type { %"class.base::subtle::RefCountedBase" }
%"struct.gpu::gles2::Validators" = type <{ %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::BackbufferAttachmentValidator", %"class.gpu::gles2::Validators::BlitFilterValidator", %"class.gpu::gles2::Validators::BufferModeValidator", %"class.gpu::gles2::Validators::BufferParameterValidator", %"class.gpu::gles2::Validators::BufferParameter64Validator", %"class.gpu::gles2::Validators::BufferTargetValidator", %"class.gpu::gles2::Validators::BufferUsageValidator", i8, %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::BufferfvValidator", %"class.gpu::gles2::Validators::BufferivValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::CmpFunctionValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::DrawModeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::FaceModeValidator", %"class.gpu::gles2::Validators::FaceTypeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::GetMaxIndexTypeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::HintModeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::IndexedBufferTargetValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::InternalFormatParameterValidator", %"class.gpu::gles2::Validators::MapBufferAccessValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::PixelStoreAlignmentValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::QueryObjectParameterValidator", %"class.gpu::gles2::Validators::QueryTargetValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::ResetStatusValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::ShaderPrecisionValidator", %"class.gpu::gles2::Validators::ShaderTypeValidator", %"class.gpu::gles2::Validators::SharedImageAccessModeValidator", [5 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::StencilOpValidator", %"class.gpu::gles2::Validators::StringTypeValidator", %"class.gpu::gles2::Validators::SwapBuffersFlagsValidator", [5 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::SyncParameterValidator", %"class.gpu::gles2::Validators::Texture3DTargetValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureCompareFuncValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureMagFilterModeValidator", %"class.gpu::gles2::Validators::TextureMinFilterModeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureSrgbDecodeExtValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureSwizzleValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureUsageValidator", %"class.gpu::gles2::Validators::TextureWrapModeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TransformFeedbackPrimitiveModeValidator", %"class.gpu::gles2::Validators::UniformBlockParameterValidator", %"class.gpu::gles2::Validators::UniformParameterValidator", %"class.gpu::gles2::Validators::VertexAttribITypeValidator", [4 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::WindowRectanglesModeValidator", [7 x i8] }>
%"class.gpu::gles2::Validators::BackbufferAttachmentValidator" = type { i8 }
%"class.gpu::gles2::Validators::BlitFilterValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferParameter64Validator" = type { i8 }
%"class.gpu::gles2::Validators::BufferTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferUsageValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferfvValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferivValidator" = type { i8 }
%"class.gpu::gles2::Validators::CmpFunctionValidator" = type { i8 }
%"class.gpu::gles2::Validators::DrawModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::FaceModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::FaceTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::GetMaxIndexTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::HintModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::IndexedBufferTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::InternalFormatParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::MapBufferAccessValidator" = type { i8 }
%"class.gpu::gles2::Validators::PixelStoreAlignmentValidator" = type { i8 }
%"class.gpu::gles2::Validators::QueryObjectParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::QueryTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::ResetStatusValidator" = type { i8 }
%"class.gpu::gles2::Validators::ShaderPrecisionValidator" = type { i8 }
%"class.gpu::gles2::Validators::ShaderTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::SharedImageAccessModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::StencilOpValidator" = type { i8 }
%"class.gpu::gles2::Validators::StringTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::SwapBuffersFlagsValidator" = type { i8 }
%"class.gpu::gles2::Validators::SyncParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::Texture3DTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureCompareFuncValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureMagFilterModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureMinFilterModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureSrgbDecodeExtValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureSwizzleValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureUsageValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureWrapModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TransformFeedbackPrimitiveModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::UniformBlockParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::UniformParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::VertexAttribITypeValidator" = type { i8 }
%"class.gpu::ValueValidator" = type { %"class.std::__1::vector.25" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { i32*, i32*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i32* }
%"class.gpu::gles2::Validators::WindowRectanglesModeValidator" = type { i8 }
%"struct.gpu::gles2::DisallowedFeatures" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.base::internal::flat_tree.32" = type { %"class.std::__1::vector.33" }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.35" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.base::BasicStringPiece"* }
%"struct.gpu::gles2::FeatureInfo::FeatureFlags" = type <{ %"struct.gpu::GpuMemoryBufferFormatSet", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"struct.gpu::GpuMemoryBufferFormatSet" = type { i32 }
%"class.gpu::GpuDriverBugWorkarounds" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32 }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.gl::GLVersionInfo"* }
%"struct.gl::GLVersionInfo" = type opaque
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.gpu::gles2::FramebufferManager"**, %"class.gpu::gles2::FramebufferManager"**, %"class.std::__1::__compressed_pair.48" }
%"class.gpu::gles2::FramebufferManager" = type opaque
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.gpu::gles2::FramebufferManager"** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.53", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.69", [4 x i8] }>
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55", %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { i64 }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { float }
%class.scoped_refptr.72 = type { %"class.gpu::gles2::TextureRef"* }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"class.gpu::gles2::TextureManager::DestructionObserver"**, %"class.gpu::gles2::TextureManager::DestructionObserver"**, %"class.std::__1::__compressed_pair.75" }
%"class.gpu::gles2::TextureManager::DestructionObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.gpu::gles2::TextureManager::DestructionObserver"** }
%"class.gl::ProgressReporter" = type opaque
%"class.gpu::ServiceDiscardableManager" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.gpu::SharedImageRepresentationGLTexture"* }
%"class.gpu::SharedImageRepresentationGLTexture" = type { %"class.gpu::SharedImageRepresentationGLTextureBase.base", [6 x i8] }
%"class.gpu::SharedImageRepresentationGLTextureBase.base" = type { %"class.gpu::SharedImageRepresentation.base" }
%"class.gpu::SharedImageRepresentation.base" = type <{ i32 (...)**, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, i8, i8 }>
%"class.gpu::SharedImageManager" = type <{ %"class.absl::optional", %"class.base::internal::flat_tree.83", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Lock" }
%"class.base::internal::flat_tree.83" = type { %"class.std::__1::vector.84" }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"*, %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::unique_ptr.86" = type opaque
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.std::__1::unique_ptr.86"* }
%"class.gpu::SharedImageBacking" = type { i32 (...)**, %"class.absl::optional", %"struct.gpu::Mailbox", i32, %"class.gfx::Size", %"class.gfx::ColorSpace", i32, i32, i32, i64, %"class.gpu::SharedImageFactory"*, i8, %"class.absl::optional.92", %"class.std::__1::vector.97" }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.gpu::SharedImageFactory" = type opaque
%"class.absl::optional.92" = type { %"class.absl::optional_internal::optional_data.93" }
%"class.absl::optional_internal::optional_data.93" = type { %"class.absl::optional_internal::optional_data_base.94" }
%"class.absl::optional_internal::optional_data_base.94" = type { %"class.absl::optional_internal::optional_data_dtor_base.95" }
%"class.absl::optional_internal::optional_data_dtor_base.95" = type { i8, %union.anon.96 }
%union.anon.96 = type { %"class.gpu::SharedImageBacking::ScopedWriteUMA" }
%"class.gpu::SharedImageBacking::ScopedWriteUMA" = type { i8 }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"**, %"class.std::__1::__compressed_pair.99" }
%"class.gpu::SharedImageRepresentation" = type <{ i32 (...)**, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.gpu::SharedImageRepresentation"** }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.gpu::SharedImageRepresentationGLTextureBase::ScopedAccess"* }
%"class.gpu::SharedImageRepresentationGLTextureBase::ScopedAccess" = type { %"class.gpu::SharedImageRepresentation::ScopedAccessBase" }
%"class.gpu::SharedImageRepresentation::ScopedAccessBase" = type { %"class.gpu::SharedImageRepresentationGLTextureBase"* }
%"class.gpu::SharedImageRepresentationGLTextureBase" = type { %"class.gpu::SharedImageRepresentation.base", [6 x i8] }
%"struct.gpu::gles2::SamplerState" = type { i32, i32, i32, i32, i32, i32, i32, float, float, float }
%"struct.gpu::gles2::Texture::CompatibilitySwizzle" = type { i32, i32, i32, i32, i32, i32 }
%"class.gl::GLApi" = type { i32 (...)** }
%"class.gpu::gles2::AbstractTextureImplPassthrough" = type { %"class.gpu::gles2::AbstractTexture", i8, %class.scoped_refptr.120, %"class.gl::GLApi"* }
%class.scoped_refptr.120 = type { %"class.gpu::gles2::TexturePassthrough"* }
%"class.gpu::gles2::TexturePassthrough" = type { %"class.gpu::TextureBase", %"class.base::RefCounted.121", %"class.base::SupportsWeakPtr", i32, i8, i8, i64, %"class.std::__1::vector.122" }
%"class.base::RefCounted.121" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"class.std::__1::vector.124"*, %"class.std::__1::vector.124"*, %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::vector.124" = type opaque
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.std::__1::vector.124"* }
%"class.gl::ScopedTextureBinder" = type { %"class.gl::GLStateRestorer"*, i32, i32 }
%"class.gl::GLStateRestorer" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.118 }
%class.scoped_refptr.118 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.119", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.119" = type { %"class.base::subtle::RefCountedThreadSafeBase" }

@_ZTVN3gpu5gles219AbstractTextureImplE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::gles2::AbstractTextureImpl"*)* @_ZN3gpu5gles219AbstractTextureImplD2Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::AbstractTextureImpl"*)* @_ZN3gpu5gles219AbstractTextureImplD0Ev to i8*), i8* bitcast (%"class.gpu::TextureBase"* (%"class.gpu::gles2::AbstractTextureImpl"*)* @_ZNK3gpu5gles219AbstractTextureImpl14GetTextureBaseEv to i8*), i8* bitcast (void (%"class.gpu::gles2::AbstractTextureImpl"*, i32, i32)* @_ZN3gpu5gles219AbstractTextureImpl13SetParameteriEji to i8*), i8* bitcast (void (%"class.gpu::gles2::AbstractTextureImpl"*, %"class.gl::GLImage"*, i32)* @_ZN3gpu5gles219AbstractTextureImpl22BindStreamTextureImageEPN2gl7GLImageEj to i8*), i8* bitcast (void (%"class.gpu::gles2::AbstractTextureImpl"*, %"class.gl::GLImage"*, i1)* @_ZN3gpu5gles219AbstractTextureImpl9BindImageEPN2gl7GLImageEb to i8*), i8* bitcast (%"class.gl::GLImage"* (%"class.gpu::gles2::AbstractTextureImpl"*)* @_ZNK3gpu5gles219AbstractTextureImpl8GetImageEv to i8*), i8* bitcast (void (%"class.gpu::gles2::AbstractTextureImpl"*)* @_ZN3gpu5gles219AbstractTextureImpl10SetClearedEv to i8*), i8* bitcast (void (%"class.gpu::gles2::AbstractTextureImpl"*, %"class.base::OnceCallback"*)* @_ZN3gpu5gles219AbstractTextureImpl18SetCleanupCallbackEN4base12OnceCallbackIFvPNS0_15AbstractTextureEEEE to i8*), i8* bitcast (void (%"class.gpu::gles2::AbstractTextureImpl"*)* @_ZN3gpu5gles219AbstractTextureImpl19NotifyOnContextLostEv to i8*)] }, align 8
@_ZN2gl24g_current_gl_context_tlsE = external local_unnamed_addr global %"class.base::ThreadLocalPointer"*, align 8
@_ZTVN3gpu5gles230AbstractTextureImplPassthroughE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::gles2::AbstractTextureImplPassthrough"*)* @_ZN3gpu5gles230AbstractTextureImplPassthroughD2Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::AbstractTextureImplPassthrough"*)* @_ZN3gpu5gles230AbstractTextureImplPassthroughD0Ev to i8*), i8* bitcast (%"class.gpu::TextureBase"* (%"class.gpu::gles2::AbstractTextureImplPassthrough"*)* @_ZNK3gpu5gles230AbstractTextureImplPassthrough14GetTextureBaseEv to i8*), i8* bitcast (void (%"class.gpu::gles2::AbstractTextureImplPassthrough"*, i32, i32)* @_ZN3gpu5gles230AbstractTextureImplPassthrough13SetParameteriEji to i8*), i8* bitcast (void (%"class.gpu::gles2::AbstractTextureImplPassthrough"*, %"class.gl::GLImage"*, i32)* @_ZN3gpu5gles230AbstractTextureImplPassthrough22BindStreamTextureImageEPN2gl7GLImageEj to i8*), i8* bitcast (void (%"class.gpu::gles2::AbstractTextureImplPassthrough"*, %"class.gl::GLImage"*, i1)* @_ZN3gpu5gles230AbstractTextureImplPassthrough9BindImageEPN2gl7GLImageEb to i8*), i8* bitcast (%"class.gl::GLImage"* (%"class.gpu::gles2::AbstractTextureImplPassthrough"*)* @_ZNK3gpu5gles230AbstractTextureImplPassthrough8GetImageEv to i8*), i8* bitcast (void (%"class.gpu::gles2::AbstractTextureImplPassthrough"*)* @_ZN3gpu5gles230AbstractTextureImplPassthrough10SetClearedEv to i8*), i8* bitcast (void (%"class.gpu::gles2::AbstractTextureImplPassthrough"*, %"class.base::OnceCallback"*)* @_ZN3gpu5gles230AbstractTextureImplPassthrough18SetCleanupCallbackEN4base12OnceCallbackIFvPNS0_15AbstractTextureEEEE to i8*), i8* bitcast (void (%"class.gpu::gles2::AbstractTextureImplPassthrough"*)* @_ZN3gpu5gles230AbstractTextureImplPassthrough19NotifyOnContextLostEv to i8*)] }, align 8

@_ZN3gpu5gles219AbstractTextureImplC1Ejjiiiijj = hidden unnamed_addr alias void (%"class.gpu::gles2::AbstractTextureImpl"*, i32, i32, i32, i32, i32, i32, i32, i32), void (%"class.gpu::gles2::AbstractTextureImpl"*, i32, i32, i32, i32, i32, i32, i32, i32)* @_ZN3gpu5gles219AbstractTextureImplC2Ejjiiiijj
@_ZN3gpu5gles219AbstractTextureImplD1Ev = hidden unnamed_addr alias void (%"class.gpu::gles2::AbstractTextureImpl"*), void (%"class.gpu::gles2::AbstractTextureImpl"*)* @_ZN3gpu5gles219AbstractTextureImplD2Ev
@_ZN3gpu5gles230AbstractTextureImplPassthroughC1Ejjiiiijj = hidden unnamed_addr alias void (%"class.gpu::gles2::AbstractTextureImplPassthrough"*, i32, i32, i32, i32, i32, i32, i32, i32), void (%"class.gpu::gles2::AbstractTextureImplPassthrough"*, i32, i32, i32, i32, i32, i32, i32, i32)* @_ZN3gpu5gles230AbstractTextureImplPassthroughC2Ejjiiiijj
@_ZN3gpu5gles230AbstractTextureImplPassthroughD1Ev = hidden unnamed_addr alias void (%"class.gpu::gles2::AbstractTextureImplPassthrough"*), void (%"class.gpu::gles2::AbstractTextureImplPassthrough"*)* @_ZN3gpu5gles230AbstractTextureImplPassthroughD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles219AbstractTextureImplC2Ejjiiiijj(%"class.gpu::gles2::AbstractTextureImpl"* nocapture, i32, i32, i32, i32, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %10 = alloca i32, align 4
  %11 = alloca %"class.gl::ScopedTextureBinder", align 8
  %12 = alloca %"class.gfx::Rect", align 4
  %13 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImpl", %"class.gpu::gles2::AbstractTextureImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3gpu5gles219AbstractTextureImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImpl", %"class.gpu::gles2::AbstractTextureImpl"* %0, i64 0, i32 1
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImpl", %"class.gpu::gles2::AbstractTextureImpl"* %0, i64 0, i32 3
  store %"class.gl::GLApi"* null, %"class.gl::GLApi"** %15, align 8
  %16 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #9
  store i32 0, i32* %10, align 4
  %17 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %18 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %17, i64 0, i32 0
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #9
  %20 = bitcast i8* %19 to %"class.gl::GLApi"**
  %21 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %20, align 8
  store %"class.gl::GLApi"* %21, %"class.gl::GLApi"** %15, align 8
  %22 = bitcast %"class.gl::GLApi"* %21 to void (%"class.gl::GLApi"*, i32, i32*)***
  %23 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %23, i64 156
  %25 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %24, align 8
  call void %25(%"class.gl::GLApi"* %21, i32 1, i32* nonnull %10) #9
  %26 = bitcast %"class.gl::ScopedTextureBinder"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  %27 = bitcast %"class.gl::ScopedTextureBinder"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false)
  %28 = load i32, i32* %10, align 4
  call void @_ZN2gl19ScopedTextureBinderC1Ejj(%"class.gl::ScopedTextureBinder"* nonnull %11, i32 %1, i32 %28) #9
  %29 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %15, align 8
  %30 = bitcast %"class.gl::GLApi"* %29 to void (%"class.gl::GLApi"*, i32, i32, i32)***
  %31 = load void (%"class.gl::GLApi"*, i32, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32, i32)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %31, i64 428
  %33 = load void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %32, align 8
  call void %33(%"class.gl::GLApi"* %29, i32 %1, i32 10241, i32 9729) #9
  %34 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %15, align 8
  %35 = bitcast %"class.gl::GLApi"* %34 to void (%"class.gl::GLApi"*, i32, i32, i32)***
  %36 = load void (%"class.gl::GLApi"*, i32, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32, i32)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %36, i64 428
  %38 = load void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %37, align 8
  call void %38(%"class.gl::GLApi"* %34, i32 %1, i32 10240, i32 9729) #9
  %39 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %15, align 8
  %40 = bitcast %"class.gl::GLApi"* %39 to void (%"class.gl::GLApi"*, i32, i32, i32)***
  %41 = load void (%"class.gl::GLApi"*, i32, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32, i32)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %41, i64 428
  %43 = load void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %42, align 8
  call void %43(%"class.gl::GLApi"* %39, i32 %1, i32 10242, i32 33071) #9
  %44 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %15, align 8
  %45 = bitcast %"class.gl::GLApi"* %44 to void (%"class.gl::GLApi"*, i32, i32, i32)***
  %46 = load void (%"class.gl::GLApi"*, i32, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32, i32)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %46, i64 428
  %48 = load void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %47, align 8
  call void %48(%"class.gl::GLApi"* %44, i32 %1, i32 10243, i32 33071) #9
  %49 = call i8* @_Znwm(i64 232) #10
  %50 = bitcast i8* %49 to %"class.gpu::gles2::Texture"*
  %51 = load i32, i32* %10, align 4
  call void @_ZN3gpu5gles27TextureC1Ej(%"class.gpu::gles2::Texture"* nonnull %50, i32 %51) #9
  %52 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImpl", %"class.gpu::gles2::AbstractTextureImpl"* %0, i64 0, i32 2
  %53 = bitcast %"class.gpu::gles2::Texture"** %52 to i8**
  store i8* %49, i8** %53, align 8
  call void @_ZN3gpu5gles27Texture17SetLightweightRefEv(%"class.gpu::gles2::Texture"* nonnull %50) #9
  %54 = load %"class.gpu::gles2::Texture"*, %"class.gpu::gles2::Texture"** %52, align 8
  call void @_ZN3gpu5gles27Texture9SetTargetEji(%"class.gpu::gles2::Texture"* %54, i32 %1, i32 1) #9
  %55 = load %"class.gpu::gles2::Texture"*, %"class.gpu::gles2::Texture"** %52, align 8
  %56 = getelementptr inbounds %"class.gpu::gles2::Texture", %"class.gpu::gles2::Texture"* %55, i64 0, i32 11, i32 0
  store i32 9729, i32* %56, align 8
  %57 = load %"class.gpu::gles2::Texture"*, %"class.gpu::gles2::Texture"** %52, align 8
  %58 = getelementptr inbounds %"class.gpu::gles2::Texture", %"class.gpu::gles2::Texture"* %57, i64 0, i32 11, i32 1
  store i32 9729, i32* %58, align 4
  %59 = load %"class.gpu::gles2::Texture"*, %"class.gpu::gles2::Texture"** %52, align 8
  %60 = getelementptr inbounds %"class.gpu::gles2::Texture", %"class.gpu::gles2::Texture"* %59, i64 0, i32 11, i32 4
  store i32 33071, i32* %60, align 8
  %61 = load %"class.gpu::gles2::Texture"*, %"class.gpu::gles2::Texture"** %52, align 8
  %62 = getelementptr inbounds %"class.gpu::gles2::Texture", %"class.gpu::gles2::Texture"* %61, i64 0, i32 11, i32 3
  store i32 33071, i32* %62, align 4
  %63 = bitcast %"class.gfx::Rect"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %63, i8 0, i64 16, i1 false) #9
  %64 = load %"class.gpu::gles2::Texture"*, %"class.gpu::gles2::Texture"** %52, align 8
  call void @_ZN3gpu5gles27Texture12SetLevelInfoEjijiiiijjRKN3gfx4RectE(%"class.gpu::gles2::Texture"* %64, i32 %1, i32 0, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, %"class.gfx::Rect"* nonnull dereferenceable(16) %12) #9
  %65 = load %"class.gpu::gles2::Texture"*, %"class.gpu::gles2::Texture"** %52, align 8
  call void @_ZN3gpu5gles27Texture12SetImmutableEbb(%"class.gpu::gles2::Texture"* %65, i1 zeroext true, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #9
  call void @_ZN2gl19ScopedTextureBinderD1Ev(%"class.gl::ScopedTextureBinder"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2gl19ScopedTextureBinderC1Ejj(%"class.gl::ScopedTextureBinder"*, i32, i32) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN3gpu5gles27TextureC1Ej(%"class.gpu::gles2::Texture"*, i32) unnamed_addr #2

declare void @_ZN3gpu5gles27Texture17SetLightweightRefEv(%"class.gpu::gles2::Texture"*) local_unnamed_addr #2

declare void @_ZN3gpu5gles27Texture9SetTargetEji(%"class.gpu::gles2::Texture"*, i32, i32) local_unnamed_addr #2

declare void @_ZN3gpu5gles27Texture12SetLevelInfoEjijiiiijjRKN3gfx4RectE(%"class.gpu::gles2::Texture"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3gpu5gles27Texture12SetImmutableEbb(%"class.gpu::gles2::Texture"*, i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN2gl19ScopedTextureBinderD1Ev(%"class.gl::ScopedTextureBinder"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles219AbstractTextureImplD2Ev(%"class.gpu::gles2::AbstractTextureImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImpl", %"class.gpu::gles2::AbstractTextureImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3gpu5gles219AbstractTextureImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImpl", %"class.gpu::gles2::AbstractTextureImpl"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImpl", %"class.gpu::gles2::AbstractTextureImpl"* %0, i64 0, i32 2
  %6 = load %"class.gpu::gles2::Texture"*, %"class.gpu::gles2::Texture"** %5, align 8
  %7 = icmp ne i8 %4, 0
  tail call void @_ZN3gpu5gles27Texture20RemoveLightweightRefEb(%"class.gpu::gles2::Texture"* %6, i1 zeroext %7) #9
  ret void
}

declare void @_ZN3gpu5gles27Texture20RemoveLightweightRefEb(%"class.gpu::gles2::Texture"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles219AbstractTextureImplD0Ev(%"class.gpu::gles2::AbstractTextureImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImpl", %"class.gpu::gles2::AbstractTextureImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3gpu5gles219AbstractTextureImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImpl", %"class.gpu::gles2::AbstractTextureImpl"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImpl", %"class.gpu::gles2::AbstractTextureImpl"* %0, i64 0, i32 2
  %6 = load %"class.gpu::gles2::Texture"*, %"class.gpu::gles2::Texture"** %5, align 8
  %7 = icmp ne i8 %4, 0
  tail call void @_ZN3gpu5gles27Texture20RemoveLightweightRefEb(%"class.gpu::gles2::Texture"* %6, i1 zeroext %7) #9
  %8 = bitcast %"class.gpu::gles2::AbstractTextureImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.gpu::TextureBase"* @_ZNK3gpu5gles219AbstractTextureImpl14GetTextureBaseEv(%"class.gpu::gles2::AbstractTextureImpl"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImpl", %"class.gpu::gles2::AbstractTextureImpl"* %0, i64 0, i32 2
  %3 = bitcast %"class.gpu::gles2::Texture"** %2 to %"class.gpu::TextureBase"**
  %4 = load %"class.gpu::TextureBase"*, %"class.gpu::TextureBase"** %3, align 8
  ret %"class.gpu::TextureBase"* %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu5gles219AbstractTextureImpl13SetParameteriEji(%"class.gpu::gles2::AbstractTextureImpl"* nocapture, i32, i32) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles219AbstractTextureImpl22BindStreamTextureImageEPN2gl7GLImageEj(%"class.gpu::gles2::AbstractTextureImpl"* nocapture readonly, %"class.gl::GLImage"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImpl", %"class.gpu::gles2::AbstractTextureImpl"* %0, i64 0, i32 2
  %5 = bitcast %"class.gpu::gles2::Texture"** %4 to %"class.gpu::TextureBase"**
  %6 = load %"class.gpu::TextureBase"*, %"class.gpu::TextureBase"** %5, align 8
  %7 = getelementptr inbounds %"class.gpu::TextureBase", %"class.gpu::TextureBase"* %6, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = bitcast %"class.gpu::TextureBase"* %6 to %"class.gpu::gles2::Texture"*
  tail call void @_ZN3gpu5gles27Texture26SetLevelStreamTextureImageEjiPN2gl7GLImageENS1_10ImageStateEj(%"class.gpu::gles2::Texture"* %9, i32 %8, i32 0, %"class.gl::GLImage"* %1, i32 0, i32 %2) #9
  %10 = load %"class.gpu::gles2::Texture"*, %"class.gpu::gles2::Texture"** %4, align 8
  tail call void @_ZN3gpu5gles27Texture15SetLevelClearedEjib(%"class.gpu::gles2::Texture"* %10, i32 %8, i32 0, i1 zeroext true) #9
  ret void
}

declare void @_ZN3gpu5gles27Texture26SetLevelStreamTextureImageEjiPN2gl7GLImageENS1_10ImageStateEj(%"class.gpu::gles2::Texture"*, i32, i32, %"class.gl::GLImage"*, i32, i32) local_unnamed_addr #2

declare void @_ZN3gpu5gles27Texture15SetLevelClearedEjib(%"class.gpu::gles2::Texture"*, i32, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu5gles219AbstractTextureImpl9BindImageEPN2gl7GLImageEb(%"class.gpu::gles2::AbstractTextureImpl"* nocapture, %"class.gl::GLImage"* nocapture, i1 zeroext) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.gl::GLImage"* @_ZNK3gpu5gles219AbstractTextureImpl8GetImageEv(%"class.gpu::gles2::AbstractTextureImpl"* nocapture readnone) unnamed_addr #7 align 2 {
  ret %"class.gl::GLImage"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu5gles219AbstractTextureImpl10SetClearedEv(%"class.gpu::gles2::AbstractTextureImpl"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu5gles219AbstractTextureImpl18SetCleanupCallbackEN4base12OnceCallbackIFvPNS0_15AbstractTextureEEEE(%"class.gpu::gles2::AbstractTextureImpl"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gpu5gles219AbstractTextureImpl19NotifyOnContextLostEv(%"class.gpu::gles2::AbstractTextureImpl"* nocapture) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImpl", %"class.gpu::gles2::AbstractTextureImpl"* %0, i64 0, i32 1
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles230AbstractTextureImplPassthroughC2Ejjiiiijj(%"class.gpu::gles2::AbstractTextureImplPassthrough"* nocapture, i32, i32, i32, i32, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImplPassthrough", %"class.gpu::gles2::AbstractTextureImplPassthrough"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3gpu5gles230AbstractTextureImplPassthroughE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImplPassthrough", %"class.gpu::gles2::AbstractTextureImplPassthrough"* %0, i64 0, i32 1
  store i8 1, i8* %13, align 8
  %14 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImplPassthrough", %"class.gpu::gles2::AbstractTextureImplPassthrough"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %class.scoped_refptr.120, %class.scoped_refptr.120* %14, i64 0, i32 0
  %16 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImplPassthrough", %"class.gpu::gles2::AbstractTextureImplPassthrough"* %0, i64 0, i32 3
  %17 = bitcast i32* %10 to i8*
  %18 = bitcast %class.scoped_refptr.120* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #9
  store i32 0, i32* %10, align 4
  %19 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %20 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %19, i64 0, i32 0
  %21 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %20) #9
  %22 = bitcast i8* %21 to %"class.gl::GLApi"**
  %23 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %22, align 8
  store %"class.gl::GLApi"* %23, %"class.gl::GLApi"** %16, align 8
  %24 = bitcast %"class.gl::GLApi"* %23 to void (%"class.gl::GLApi"*, i32, i32*)***
  %25 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %25, i64 156
  %27 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %26, align 8
  call void %27(%"class.gl::GLApi"* %23, i32 1, i32* nonnull %10) #9
  %28 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #9
  store i32 0, i32* %11, align 4
  %29 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %16, align 8
  %30 = call i32 @_ZN3gpu5gles222GetTextureBindingQueryEj(i32 %1) #9
  %31 = bitcast %"class.gl::GLApi"* %29 to void (%"class.gl::GLApi"*, i32, i32*)***
  %32 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %32, i64 193
  %34 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %33, align 8
  call void %34(%"class.gl::GLApi"* %29, i32 %30, i32* nonnull %11) #9
  %35 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %16, align 8
  %36 = load i32, i32* %10, align 4
  %37 = bitcast %"class.gl::GLApi"* %35 to void (%"class.gl::GLApi"*, i32, i32)***
  %38 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %38, i64 20
  %40 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %39, align 8
  call void %40(%"class.gl::GLApi"* %35, i32 %1, i32 %36) #9
  %41 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %16, align 8
  %42 = bitcast %"class.gl::GLApi"* %41 to void (%"class.gl::GLApi"*, i32, i32, i32)***
  %43 = load void (%"class.gl::GLApi"*, i32, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32, i32)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %43, i64 428
  %45 = load void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %44, align 8
  call void %45(%"class.gl::GLApi"* %41, i32 %1, i32 10241, i32 9729) #9
  %46 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %16, align 8
  %47 = bitcast %"class.gl::GLApi"* %46 to void (%"class.gl::GLApi"*, i32, i32, i32)***
  %48 = load void (%"class.gl::GLApi"*, i32, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32, i32)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %48, i64 428
  %50 = load void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %49, align 8
  call void %50(%"class.gl::GLApi"* %46, i32 %1, i32 10240, i32 9729) #9
  %51 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %16, align 8
  %52 = bitcast %"class.gl::GLApi"* %51 to void (%"class.gl::GLApi"*, i32, i32, i32)***
  %53 = load void (%"class.gl::GLApi"*, i32, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32, i32)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %53, i64 428
  %55 = load void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %54, align 8
  call void %55(%"class.gl::GLApi"* %51, i32 %1, i32 10242, i32 33071) #9
  %56 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %16, align 8
  %57 = bitcast %"class.gl::GLApi"* %56 to void (%"class.gl::GLApi"*, i32, i32, i32)***
  %58 = load void (%"class.gl::GLApi"*, i32, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32, i32)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %58, i64 428
  %60 = load void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %59, align 8
  call void %60(%"class.gl::GLApi"* %56, i32 %1, i32 10243, i32 33071) #9
  %61 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %62 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %61, i64 0, i32 0
  %63 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %62) #9
  %64 = bitcast i8* %63 to %"class.gl::GLApi"**
  %65 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %64, align 8
  %66 = load i32, i32* %11, align 4
  %67 = bitcast %"class.gl::GLApi"* %65 to void (%"class.gl::GLApi"*, i32, i32)***
  %68 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %68, i64 20
  %70 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %69, align 8
  call void %70(%"class.gl::GLApi"* %65, i32 %1, i32 %66) #9
  %71 = call i8* @_Znwm(i64 80) #10
  %72 = bitcast i8* %71 to %"class.gpu::gles2::TexturePassthrough"*
  %73 = load i32, i32* %10, align 4
  call void @_ZN3gpu5gles218TexturePassthroughC1Ejjjiiiijj(%"class.gpu::gles2::TexturePassthrough"* nonnull %72, i32 %73, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8) #9
  %74 = getelementptr inbounds i8, i8* %71, i64 24
  %75 = bitcast i8* %74 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %75) #9
  %76 = ptrtoint i8* %71 to i64
  %77 = bitcast %class.scoped_refptr.120* %14 to i64*
  %78 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %15, align 8
  store i64 %76, i64* %77, align 8
  %79 = icmp eq %"class.gpu::gles2::TexturePassthrough"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %9
  %81 = getelementptr inbounds %"class.gpu::gles2::TexturePassthrough", %"class.gpu::gles2::TexturePassthrough"* %78, i64 0, i32 1
  %82 = getelementptr inbounds %"class.base::RefCounted.121", %"class.base::RefCounted.121"* %81, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %82) #9
  %83 = getelementptr inbounds %"class.base::RefCounted.121", %"class.base::RefCounted.121"* %81, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.base::RefCounted.121", %"class.base::RefCounted.121"* %81, i64 -6
  %88 = bitcast %"class.base::RefCounted.121"* %87 to %"class.gpu::gles2::TexturePassthrough"*
  %89 = bitcast %"class.base::RefCounted.121"* %87 to void (%"class.gpu::gles2::TexturePassthrough"*)***
  %90 = load void (%"class.gpu::gles2::TexturePassthrough"*)**, void (%"class.gpu::gles2::TexturePassthrough"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.gpu::gles2::TexturePassthrough"*)*, void (%"class.gpu::gles2::TexturePassthrough"*)** %90, i64 1
  %92 = load void (%"class.gpu::gles2::TexturePassthrough"*)*, void (%"class.gpu::gles2::TexturePassthrough"*)** %91, align 8
  call void %92(%"class.gpu::gles2::TexturePassthrough"* nonnull %88) #9
  br label %93

93:                                               ; preds = %9, %80, %86
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #9
  ret void
}

declare i32 @_ZN3gpu5gles222GetTextureBindingQueryEj(i32) local_unnamed_addr #2

declare void @_ZN3gpu5gles218TexturePassthroughC1Ejjjiiiijj(%"class.gpu::gles2::TexturePassthrough"*, i32, i32, i32, i32, i32, i32, i32, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles230AbstractTextureImplPassthroughD2Ev(%"class.gpu::gles2::AbstractTextureImplPassthrough"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImplPassthrough", %"class.gpu::gles2::AbstractTextureImplPassthrough"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3gpu5gles230AbstractTextureImplPassthroughE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImplPassthrough", %"class.gpu::gles2::AbstractTextureImplPassthrough"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %3, align 8
  %5 = icmp eq %"class.gpu::gles2::TexturePassthrough"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gpu::gles2::TexturePassthrough", %"class.gpu::gles2::TexturePassthrough"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCounted.121", %"class.base::RefCounted.121"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #9
  %9 = getelementptr inbounds %"class.base::RefCounted.121", %"class.base::RefCounted.121"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.121", %"class.base::RefCounted.121"* %7, i64 -6
  %14 = bitcast %"class.base::RefCounted.121"* %13 to %"class.gpu::gles2::TexturePassthrough"*
  %15 = bitcast %"class.base::RefCounted.121"* %13 to void (%"class.gpu::gles2::TexturePassthrough"*)***
  %16 = load void (%"class.gpu::gles2::TexturePassthrough"*)**, void (%"class.gpu::gles2::TexturePassthrough"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.gpu::gles2::TexturePassthrough"*)*, void (%"class.gpu::gles2::TexturePassthrough"*)** %16, i64 1
  %18 = load void (%"class.gpu::gles2::TexturePassthrough"*)*, void (%"class.gpu::gles2::TexturePassthrough"*)** %17, align 8
  tail call void %18(%"class.gpu::gles2::TexturePassthrough"* nonnull %14) #9
  br label %19

19:                                               ; preds = %1, %6, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles230AbstractTextureImplPassthroughD0Ev(%"class.gpu::gles2::AbstractTextureImplPassthrough"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImplPassthrough", %"class.gpu::gles2::AbstractTextureImplPassthrough"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3gpu5gles230AbstractTextureImplPassthroughE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImplPassthrough", %"class.gpu::gles2::AbstractTextureImplPassthrough"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %3, align 8
  %5 = icmp eq %"class.gpu::gles2::TexturePassthrough"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gpu::gles2::TexturePassthrough", %"class.gpu::gles2::TexturePassthrough"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCounted.121", %"class.base::RefCounted.121"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #9
  %9 = getelementptr inbounds %"class.base::RefCounted.121", %"class.base::RefCounted.121"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.121", %"class.base::RefCounted.121"* %7, i64 -6
  %14 = bitcast %"class.base::RefCounted.121"* %13 to %"class.gpu::gles2::TexturePassthrough"*
  %15 = bitcast %"class.base::RefCounted.121"* %13 to void (%"class.gpu::gles2::TexturePassthrough"*)***
  %16 = load void (%"class.gpu::gles2::TexturePassthrough"*)**, void (%"class.gpu::gles2::TexturePassthrough"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.gpu::gles2::TexturePassthrough"*)*, void (%"class.gpu::gles2::TexturePassthrough"*)** %16, i64 1
  %18 = load void (%"class.gpu::gles2::TexturePassthrough"*)*, void (%"class.gpu::gles2::TexturePassthrough"*)** %17, align 8
  tail call void %18(%"class.gpu::gles2::TexturePassthrough"* nonnull %14) #9
  br label %19

19:                                               ; preds = %1, %6, %12
  %20 = bitcast %"class.gpu::gles2::AbstractTextureImplPassthrough"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.gpu::TextureBase"* @_ZNK3gpu5gles230AbstractTextureImplPassthrough14GetTextureBaseEv(%"class.gpu::gles2::AbstractTextureImplPassthrough"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImplPassthrough", %"class.gpu::gles2::AbstractTextureImplPassthrough"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %2, align 8
  %4 = getelementptr inbounds %"class.gpu::gles2::TexturePassthrough", %"class.gpu::gles2::TexturePassthrough"* %3, i64 0, i32 0
  ret %"class.gpu::TextureBase"* %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu5gles230AbstractTextureImplPassthrough13SetParameteriEji(%"class.gpu::gles2::AbstractTextureImplPassthrough"* nocapture, i32, i32) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles230AbstractTextureImplPassthrough22BindStreamTextureImageEPN2gl7GLImageEj(%"class.gpu::gles2::AbstractTextureImplPassthrough"* nocapture readonly, %"class.gl::GLImage"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImplPassthrough", %"class.gpu::gles2::AbstractTextureImplPassthrough"* %0, i64 0, i32 2, i32 0
  %5 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %4, align 8
  %6 = getelementptr inbounds %"class.gpu::gles2::TexturePassthrough", %"class.gpu::gles2::TexturePassthrough"* %5, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  tail call void @_ZN3gpu5gles218TexturePassthrough19SetStreamLevelImageEjiPN2gl7GLImageEj(%"class.gpu::gles2::TexturePassthrough"* %5, i32 %7, i32 0, %"class.gl::GLImage"* %1, i32 %2) #9
  %8 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %4, align 8
  %9 = getelementptr inbounds %"class.gpu::gles2::TexturePassthrough", %"class.gpu::gles2::TexturePassthrough"* %8, i64 0, i32 5
  store i8 1, i8* %9, align 1
  ret void
}

declare void @_ZN3gpu5gles218TexturePassthrough19SetStreamLevelImageEjiPN2gl7GLImageEj(%"class.gpu::gles2::TexturePassthrough"*, i32, i32, %"class.gl::GLImage"*, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu5gles230AbstractTextureImplPassthrough9BindImageEPN2gl7GLImageEb(%"class.gpu::gles2::AbstractTextureImplPassthrough"* nocapture, %"class.gl::GLImage"* nocapture, i1 zeroext) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.gl::GLImage"* @_ZNK3gpu5gles230AbstractTextureImplPassthrough8GetImageEv(%"class.gpu::gles2::AbstractTextureImplPassthrough"* nocapture readnone) unnamed_addr #7 align 2 {
  ret %"class.gl::GLImage"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu5gles230AbstractTextureImplPassthrough10SetClearedEv(%"class.gpu::gles2::AbstractTextureImplPassthrough"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu5gles230AbstractTextureImplPassthrough18SetCleanupCallbackEN4base12OnceCallbackIFvPNS0_15AbstractTextureEEEE(%"class.gpu::gles2::AbstractTextureImplPassthrough"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles230AbstractTextureImplPassthrough19NotifyOnContextLostEv(%"class.gpu::gles2::AbstractTextureImplPassthrough"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImplPassthrough", %"class.gpu::gles2::AbstractTextureImplPassthrough"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %2, align 8
  tail call void @_ZN3gpu5gles218TexturePassthrough15MarkContextLostEv(%"class.gpu::gles2::TexturePassthrough"* %3) #9
  %4 = getelementptr inbounds %"class.gpu::gles2::AbstractTextureImplPassthrough", %"class.gpu::gles2::AbstractTextureImplPassthrough"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  ret void
}

declare void @_ZN3gpu5gles218TexturePassthrough15MarkContextLostEv(%"class.gpu::gles2::TexturePassthrough"*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
