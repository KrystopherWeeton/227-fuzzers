; ModuleID = '../../ui/gl/init/gl_factory.cc'
source_filename = "../../ui/gl/init/gl_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { i32*, i32*, %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { i32* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.gl::GLImplementationParts" = type { i32, i32 }
%"class.base::CommandLine" = type { %"class.std::__1::vector.21", %"class.std::__1::map", i64 }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.53", [4 x i8] }>
%"struct.std::__1::atomic.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__cxx_atomic_impl.56" }
%"struct.std::__1::__cxx_atomic_impl.56" = type { %"struct.std::__1::__cxx_atomic_base_impl.57" }
%"struct.std::__1::__cxx_atomic_base_impl.57" = type { i32 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr", i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.16" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.gl::GLSurface" = type { i32 (...)**, %"class.base::RefCounted", %"class.base::SupportsWeakPtr" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gl::GLSurfaceFormat" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::__split_buffer" = type { i32*, i32*, i32*, %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.43", %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.std::__1::allocator.45"* }
%"class.std::__1::allocator.45" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN20trace_event_internal13AddTraceEventIRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_ = comdat any

$_ZNSt3__16vectorIN2gl16GLImplementationENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EEOS2_ = comdat any

$_ZNSt3__114__split_bufferIN2gl16GLImplementationERNS_9allocatorIS2_EEE9push_backEOS2_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZZN2gl4init18InitializeGLOneOffEvE28trace_event_unique_atomic136 = internal global i64 0, align 8
@.str = private unnamed_addr constant [12 x i8] c"gpu,startup\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"gl::init::InitializeOneOff\00", align 1
@_ZZN2gl4init30InitializeGLNoExtensionsOneOffEbE28trace_event_unique_atomic148 = internal global i64 0, align 8
@.str.2 = private unnamed_addr constant [39 x i8] c"gl::init::InitializeNoExtensionsOneOff\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"init_bindings\00", align 1
@_ZN2gl4init12_GLOBAL__N_118g_is_angle_enabledE = internal unnamed_addr global i1 false, align 1
@_ZZN2gl4init12_GLOBAL__N_132InitializeGLOneOffPlatformHelperEbE28trace_event_unique_atomic123 = internal global i64 0, align 8
@.str.4 = private unnamed_addr constant [43 x i8] c"gl::init::InitializeGLOneOffPlatformHelper\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"init_extensions\00", align 1
@_ZN8switches25kDisableGLDrawingForTestsE = external constant [0 x i8], align 1
@_ZN8switches6kUseGLE = external constant [0 x i8], align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"any\00", align 1
@_ZN8switches9kUseANGLEE = external constant [0 x i8], align 1
@_ZN2gl29kGLImplementationDisabledNameE = external constant [0 x i8], align 1
@_ZN8switches20kDisableES3GLContextE = external constant [0 x i8], align 1
@_ZN8switches30kDisableES3GLContextForTestingE = external constant [0 x i8], align 1
@.str.9 = private unnamed_addr constant [31 x i8] c"../../ui/gl/init/gl_factory.cc\00", align 1
@.str.10 = private unnamed_addr constant [45 x i8] c"List of allowed GL implementations is empty.\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"GPU.PreferredGLImplementation\00", align 1
@_ZN8switches33kOverrideUseSoftwareGLForHeadlessE = external constant [0 x i8], align 1
@_ZN8switches30kOverrideUseSoftwareGLForTestsE = external constant [0 x i8], align 1
@_ZN2gl32kGLImplementationSwiftShaderNameE = external constant [0 x i8], align 1
@_ZN2gl40kGLImplementationSwiftShaderForWebGLNameE = external constant [0 x i8], align 1
@_ZN2gl26kGLImplementationANGLENameE = external constant [0 x i8], align 1
@_ZN2gl35kANGLEImplementationSwiftShaderNameE = external constant [0 x i8], align 1
@_ZN2gl43kANGLEImplementationSwiftShaderForWebGLNameE = external constant [0 x i8], align 1
@.str.12 = private unnamed_addr constant [46 x i8] c"Requested GL implementation is not available.\00", align 1
@.str.13 = private unnamed_addr constant [30 x i8] c"GPU.RequestedGLImplementation\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZZN2gl4init12_GLOBAL__N_128GetRequestedGLImplementationEPbE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN2gl4init12_GLOBAL__N_128GetRequestedGLImplementationEPbE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN2gl4init12_GLOBAL__N_128GetRequestedGLImplementationEPbE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl4init18InitializeGLOneOffEv() local_unnamed_addr #0 {
  %1 = alloca %"class.base::TimeTicks", align 8
  %2 = load atomic i64, i64* @_ZZN2gl4init18InitializeGLOneOffEvE28trace_event_unique_atomic136 monotonic, align 8
  %3 = inttoptr i64 %2 to i8*
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %8, !prof !2

5:                                                ; preds = %0
  %6 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0)) #11
  %7 = ptrtoint i8* %6 to i64
  store atomic volatile i64 %7, i64* @_ZZN2gl4init18InitializeGLOneOffEvE28trace_event_unique_atomic136 monotonic, align 8
  br label %8

8:                                                ; preds = %5, %0
  %9 = phi i8* [ %6, %5 ], [ %3, %0 ]
  %10 = load i8, i8* %9, align 1
  %11 = and i8 %10, 25
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %19, label %13, !prof !3

13:                                               ; preds = %8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %15 = bitcast %"class.base::TimeTicks"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %17, i64* %16, align 8
  %18 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* %9, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %1, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  br label %19

19:                                               ; preds = %8, %13
  %20 = phi i64 [ -6148914691236517206, %8 ], [ %18, %13 ]
  %21 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %8 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), %13 ]
  %22 = phi i8* [ null, %8 ], [ %9, %13 ]
  %23 = call zeroext i1 @_ZN2gl4init32InitializeStaticGLBindingsOneOffEv()
  br i1 %23, label %24, label %29

24:                                               ; preds = %19
  %25 = call i32 @_ZN2gl19GetGLImplementationEv() #11
  %26 = icmp eq i32 %25, 8
  br i1 %26, label %29, label %27

27:                                               ; preds = %24
  %28 = call fastcc zeroext i1 @_ZN2gl4init12_GLOBAL__N_132InitializeGLOneOffPlatformHelperEb(i1 zeroext true)
  br label %29

29:                                               ; preds = %24, %19, %27
  %30 = phi i1 [ %28, %27 ], [ false, %19 ], [ true, %24 ]
  %31 = icmp eq i8* %22, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %29
  %33 = load i8, i8* %22, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %32
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %22, i8* %21, i64 %20) #11
  br label %36

36:                                               ; preds = %29, %32, %35
  ret i1 %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl4init32InitializeStaticGLBindingsOneOffEv() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::vector.40", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.logging::LogMessage", align 8
  %11 = bitcast i64* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = bitcast i64* %1 to %"struct.gl::GLImplementationParts"*
  %13 = bitcast i64* %7 to %"struct.gl::GLImplementationParts"*
  %14 = bitcast i64* %8 to %"struct.gl::GLImplementationParts"*
  %15 = bitcast i64* %9 to %"struct.gl::GLImplementationParts"*
  %16 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #11
  %17 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false) #11
  %20 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches6kUseGLE, i64 0, i64 0)) #11
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.base::CommandLine"* %16, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches6kUseGLE, i64 0, i64 0), i64 %20) #11
  %21 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false) #11
  %24 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches9kUseANGLEE, i64 0, i64 0)) #11
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.base::CommandLine"* %16, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches9kUseANGLEE, i64 0, i64 0), i64 %24) #11
  %25 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl29kGLImplementationDisabledNameE, i64 0, i64 0)) #11
  %26 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = load i64, i64* %19, align 8
  %31 = zext i8 %28 to i64
  %32 = select i1 %29, i64 %30, i64 %31
  %33 = icmp eq i64 %25, %32
  br i1 %33, label %34, label %38

34:                                               ; preds = %0
  %35 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl29kGLImplementationDisabledNameE, i64 0, i64 0), i64 %25) #11
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @_ZN2gl21GLImplementationPartsC1ENS_16GLImplementationE(%"struct.gl::GLImplementationParts"* nonnull %12, i32 8) #11
  br label %297

38:                                               ; preds = %34, %0
  %39 = bitcast %"class.std::__1::vector.40"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %4, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false) #11
  call void @_ZN2gl4init27GetAllowedGLImplementationsEv(%"class.std::__1::vector.40"* nonnull sret %4) #11
  %42 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %16, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches20kDisableES3GLContextE, i64 0, i64 0)) #11
  br i1 %42, label %43, label %69

43:                                               ; preds = %38
  %44 = load i32*, i32** %40, align 8
  %45 = load i32*, i32** %41, align 8
  %46 = icmp eq i32* %44, %45
  %47 = ptrtoint i32* %45 to i64
  br i1 %46, label %55, label %48

48:                                               ; preds = %43, %52
  %49 = phi i32* [ %53, %52 ], [ %44, %43 ]
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 2
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds i32, i32* %49, i64 1
  %54 = icmp eq i32* %53, %45
  br i1 %54, label %69, label %48

55:                                               ; preds = %48, %43
  %56 = phi i32* [ %44, %43 ], [ %49, %48 ]
  %57 = icmp eq i32* %56, %45
  br i1 %57, label %69, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds i32, i32* %56, i64 1
  %60 = ptrtoint i32* %59 to i64
  %61 = sub i64 %47, %60
  %62 = ashr exact i64 %61, 2
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %58
  %65 = bitcast i32* %56 to i8*
  %66 = bitcast i32* %59 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %66, i64 %61, i1 false) #11
  br label %67

67:                                               ; preds = %64, %58
  %68 = getelementptr inbounds i32, i32* %56, i64 %62
  store i32* %68, i32** %41, align 8
  br label %69

69:                                               ; preds = %52, %67, %55, %38
  %70 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %16, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches30kDisableES3GLContextForTestingE, i64 0, i64 0)) #11
  br i1 %70, label %71, label %72

71:                                               ; preds = %69
  call void @_ZN2gl13GLVersionInfo20DisableES3ForTestingEv() #11
  br label %72

72:                                               ; preds = %71, %69
  %73 = load i1, i1* @_ZN2gl4init12_GLOBAL__N_118g_is_angle_enabledE, align 1
  br i1 %73, label %106, label %74

74:                                               ; preds = %72
  %75 = call zeroext i1 @_ZN2gl28UsePassthroughCommandDecoderEPKN4base11CommandLineE(%"class.base::CommandLine"* %16) #11
  br i1 %75, label %76, label %106

76:                                               ; preds = %74
  %77 = load i32*, i32** %40, align 8
  %78 = load i32*, i32** %41, align 8
  %79 = icmp eq i32* %77, %78
  %80 = ptrtoint i32* %78 to i64
  br i1 %79, label %88, label %81

81:                                               ; preds = %76, %85
  %82 = phi i32* [ %86, %85 ], [ %77, %76 ]
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 9
  br i1 %84, label %88, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds i32, i32* %82, i64 1
  %87 = icmp eq i32* %86, %78
  br i1 %87, label %106, label %81

88:                                               ; preds = %81, %76
  %89 = phi i32* [ %77, %76 ], [ %82, %81 ]
  %90 = icmp eq i32* %89, %78
  br i1 %90, label %106, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds i32, i32* %89, i64 1
  %93 = ptrtoint i32* %92 to i64
  %94 = sub i64 %80, %93
  %95 = ashr exact i64 %94, 2
  %96 = icmp eq i64 %94, 0
  br i1 %96, label %101, label %97

97:                                               ; preds = %91
  %98 = bitcast i32* %89 to i8*
  %99 = bitcast i32* %92 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %98, i8* align 4 %99, i64 %94, i1 false) #11
  %100 = load i32*, i32** %40, align 8
  br label %101

101:                                              ; preds = %97, %91
  %102 = phi i32* [ %77, %91 ], [ %100, %97 ]
  %103 = getelementptr inbounds i32, i32* %89, i64 %95
  store i32* %103, i32** %41, align 8
  %104 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %104) #11
  store i32 9, i32* %5, align 4
  %105 = call i32* @_ZNSt3__16vectorIN2gl16GLImplementationENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EEOS2_(%"class.std::__1::vector.40"* nonnull %4, i32* %102, i32* nonnull dereferenceable(4) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %104) #11
  br label %106

106:                                              ; preds = %85, %101, %88, %74, %72
  %107 = load i32*, i32** %40, align 8
  %108 = load i32*, i32** %41, align 8
  %109 = icmp eq i32* %107, %108
  br i1 %109, label %110, label %118

110:                                              ; preds = %106
  %111 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #11
  br i1 %111, label %112, label %117

112:                                              ; preds = %110
  %113 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %113) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9, i64 0, i64 0), i32 77, i32 2) #11
  %114 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %115 = bitcast %"class.std::__1::basic_ostringstream"* %114 to %"class.std::__1::basic_ostream"*
  %116 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %115, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0), i64 44) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %113) #11
  br label %117

117:                                              ; preds = %112, %110
  call void @_ZN2gl21GLImplementationPartsC1ENS_16GLImplementationE(%"struct.gl::GLImplementationParts"* nonnull %12, i32 0) #11
  br label %288

118:                                              ; preds = %106
  %119 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #11
  %120 = bitcast i64* %7 to i32*
  store i32 -1431655766, i32* %120, align 8
  %121 = getelementptr inbounds %"struct.gl::GLImplementationParts", %"struct.gl::GLImplementationParts"* %13, i64 0, i32 1
  store i32 -1431655766, i32* %121, align 4
  %122 = load i32, i32* %107, align 4
  call void @_ZN2gl21GLImplementationPartsC1ENS_16GLImplementationE(%"struct.gl::GLImplementationParts"* nonnull %13, i32 %122) #11
  %123 = load atomic i64, i64* @_ZZN2gl4init12_GLOBAL__N_128GetRequestedGLImplementationEPbE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %124 = inttoptr i64 %123 to %"class.base::HistogramBase"*
  %125 = icmp eq i64 %123, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %118
  %127 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0), i32 1, i32 10, i32 11, i32 1) #11
  %128 = ptrtoint %"class.base::HistogramBase"* %127 to i64
  store atomic i64 %128, i64* @_ZZN2gl4init12_GLOBAL__N_128GetRequestedGLImplementationEPbE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %129

129:                                              ; preds = %126, %118
  %130 = phi %"class.base::HistogramBase"* [ %124, %118 ], [ %127, %126 ]
  %131 = load i32, i32* %120, align 8
  %132 = bitcast %"class.base::HistogramBase"* %130 to void (%"class.base::HistogramBase"*, i32)***
  %133 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %133, i64 6
  %135 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %134, align 8
  call void %135(%"class.base::HistogramBase"* %130, i32 %131) #11
  %136 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %16, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches33kOverrideUseSoftwareGLForHeadlessE, i64 0, i64 0)) #11
  br i1 %136, label %137, label %139

137:                                              ; preds = %129
  %138 = call i64 @_ZN2gl38GetSoftwareGLForHeadlessImplementationEv() #11
  store i64 %138, i64* %7, align 8
  br label %270

139:                                              ; preds = %129
  %140 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %16, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches30kOverrideUseSoftwareGLForTestsE, i64 0, i64 0)) #11
  br i1 %140, label %141, label %143

141:                                              ; preds = %139
  %142 = call i64 @_ZN2gl35GetSoftwareGLForTestsImplementationEv() #11
  store i64 %142, i64* %7, align 8
  br label %270

143:                                              ; preds = %139
  %144 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %16, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches6kUseGLE, i64 0, i64 0)) #11
  br i1 %144, label %145, label %270

145:                                              ; preds = %143
  %146 = load i8, i8* %27, align 1
  %147 = icmp slt i8 %146, 0
  %148 = load i64, i64* %19, align 8
  %149 = zext i8 %146 to i64
  %150 = select i1 %147, i64 %148, i64 %149
  %151 = icmp eq i64 %150, 3
  br i1 %151, label %152, label %159

152:                                              ; preds = %145
  %153 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i64 3) #11
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %270, label %155

155:                                              ; preds = %152
  %156 = load i8, i8* %27, align 1
  %157 = load i64, i64* %19, align 8
  %158 = zext i8 %156 to i64
  br label %159

159:                                              ; preds = %155, %145
  %160 = phi i64 [ %158, %155 ], [ %149, %145 ]
  %161 = phi i64 [ %157, %155 ], [ %148, %145 ]
  %162 = phi i8 [ %156, %155 ], [ %146, %145 ]
  %163 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl32kGLImplementationSwiftShaderNameE, i64 0, i64 0)) #11
  %164 = icmp slt i8 %162, 0
  %165 = select i1 %164, i64 %161, i64 %160
  %166 = icmp eq i64 %163, %165
  br i1 %166, label %167, label %174

167:                                              ; preds = %159
  %168 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl32kGLImplementationSwiftShaderNameE, i64 0, i64 0), i64 %163) #11
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %189, label %170

170:                                              ; preds = %167
  %171 = load i8, i8* %27, align 1
  %172 = load i64, i64* %19, align 8
  %173 = zext i8 %171 to i64
  br label %174

174:                                              ; preds = %170, %159
  %175 = phi i64 [ %173, %170 ], [ %160, %159 ]
  %176 = phi i64 [ %172, %170 ], [ %161, %159 ]
  %177 = phi i8 [ %171, %170 ], [ %162, %159 ]
  %178 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl40kGLImplementationSwiftShaderForWebGLNameE, i64 0, i64 0)) #11
  %179 = icmp slt i8 %177, 0
  %180 = select i1 %179, i64 %176, i64 %175
  %181 = icmp eq i64 %178, %180
  br i1 %181, label %182, label %192

182:                                              ; preds = %174
  %183 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl40kGLImplementationSwiftShaderForWebGLNameE, i64 0, i64 0), i64 %178) #11
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %189, label %185

185:                                              ; preds = %182
  %186 = load i8, i8* %27, align 1
  %187 = load i64, i64* %19, align 8
  %188 = zext i8 %186 to i64
  br label %192

189:                                              ; preds = %182, %167
  %190 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #11
  call void @_ZN2gl21GLImplementationPartsC1ENS_16GLImplementationE(%"struct.gl::GLImplementationParts"* nonnull %14, i32 3) #11
  %191 = load i64, i64* %8, align 8
  store i64 %191, i64* %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #11
  br label %270

192:                                              ; preds = %185, %174
  %193 = phi i64 [ %188, %185 ], [ %175, %174 ]
  %194 = phi i64 [ %187, %185 ], [ %176, %174 ]
  %195 = phi i8 [ %186, %185 ], [ %177, %174 ]
  %196 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl26kGLImplementationANGLENameE, i64 0, i64 0)) #11
  %197 = icmp slt i8 %195, 0
  %198 = select i1 %197, i64 %194, i64 %193
  %199 = icmp eq i64 %196, %198
  br i1 %199, label %200, label %234

200:                                              ; preds = %192
  %201 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl26kGLImplementationANGLENameE, i64 0, i64 0), i64 %196) #11
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %234

203:                                              ; preds = %200
  %204 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl35kANGLEImplementationSwiftShaderNameE, i64 0, i64 0)) #11
  %205 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %206 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %205, i64 0, i32 1, i32 0
  %207 = load i8, i8* %206, align 1
  %208 = icmp slt i8 %207, 0
  %209 = load i64, i64* %23, align 8
  %210 = zext i8 %207 to i64
  %211 = select i1 %208, i64 %209, i64 %210
  %212 = icmp eq i64 %204, %211
  br i1 %212, label %213, label %220

213:                                              ; preds = %203
  %214 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl35kANGLEImplementationSwiftShaderNameE, i64 0, i64 0), i64 %204) #11
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %231, label %216

216:                                              ; preds = %213
  %217 = load i8, i8* %206, align 1
  %218 = load i64, i64* %23, align 8
  %219 = zext i8 %217 to i64
  br label %220

220:                                              ; preds = %216, %203
  %221 = phi i64 [ %219, %216 ], [ %210, %203 ]
  %222 = phi i64 [ %218, %216 ], [ %209, %203 ]
  %223 = phi i8 [ %217, %216 ], [ %207, %203 ]
  %224 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl43kANGLEImplementationSwiftShaderForWebGLNameE, i64 0, i64 0)) #11
  %225 = icmp slt i8 %223, 0
  %226 = select i1 %225, i64 %222, i64 %221
  %227 = icmp eq i64 %224, %226
  br i1 %227, label %228, label %234

228:                                              ; preds = %220
  %229 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl43kANGLEImplementationSwiftShaderForWebGLNameE, i64 0, i64 0), i64 %224) #11
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %234

231:                                              ; preds = %228, %213
  %232 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %232) #11
  call void @_ZN2gl21GLImplementationPartsC1ENS_19ANGLEImplementationE(%"struct.gl::GLImplementationParts"* nonnull %15, i32 7) #11
  %233 = load i64, i64* %9, align 8
  store i64 %233, i64* %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232) #11
  br label %270

234:                                              ; preds = %228, %220, %200, %192
  %235 = call i64 @_ZN2gl24GetNamedGLImplementationERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #11
  store i64 %235, i64* %7, align 8
  %236 = load i32*, i32** %40, align 8
  %237 = load i32*, i32** %41, align 8
  %238 = icmp eq i32* %236, %237
  %239 = trunc i64 %235 to i32
  br i1 %238, label %247, label %240

240:                                              ; preds = %234, %244
  %241 = phi i32* [ %245, %244 ], [ %236, %234 ]
  %242 = load i32, i32* %241, align 4
  %243 = icmp eq i32 %242, %239
  br i1 %243, label %247, label %244

244:                                              ; preds = %240
  %245 = getelementptr inbounds i32, i32* %241, i64 1
  %246 = icmp eq i32* %245, %237
  br i1 %246, label %250, label %240

247:                                              ; preds = %240, %234
  %248 = phi i32* [ %236, %234 ], [ %241, %240 ]
  %249 = icmp eq i32* %248, %237
  br i1 %249, label %250, label %270

250:                                              ; preds = %244, %247
  %251 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #11
  br i1 %251, label %252, label %257

252:                                              ; preds = %250
  %253 = bitcast %"class.logging::LogMessage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %253) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %10, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9, i64 0, i64 0), i32 109, i32 2) #11
  %254 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %10, i64 0, i32 2
  %255 = bitcast %"class.std::__1::basic_ostringstream"* %254 to %"class.std::__1::basic_ostream"*
  %256 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %255, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.12, i64 0, i64 0), i64 45) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %253) #11
  br label %257

257:                                              ; preds = %252, %250
  %258 = load atomic i64, i64* @_ZZN2gl4init12_GLOBAL__N_128GetRequestedGLImplementationEPbE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %259 = inttoptr i64 %258 to %"class.base::HistogramBase"*
  %260 = icmp eq i64 %258, 0
  br i1 %260, label %261, label %264

261:                                              ; preds = %257
  %262 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13, i64 0, i64 0), i32 1, i32 10, i32 11, i32 1) #11
  %263 = ptrtoint %"class.base::HistogramBase"* %262 to i64
  store atomic i64 %263, i64* @_ZZN2gl4init12_GLOBAL__N_128GetRequestedGLImplementationEPbE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %264

264:                                              ; preds = %261, %257
  %265 = phi %"class.base::HistogramBase"* [ %259, %257 ], [ %262, %261 ]
  %266 = bitcast %"class.base::HistogramBase"* %265 to void (%"class.base::HistogramBase"*, i32)***
  %267 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %266, align 8
  %268 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %267, i64 6
  %269 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %268, align 8
  call void %269(%"class.base::HistogramBase"* %265, i32 0) #11
  call void @_ZN2gl21GLImplementationPartsC1ENS_16GLImplementationE(%"struct.gl::GLImplementationParts"* nonnull %12, i32 0) #11
  br label %286

270:                                              ; preds = %152, %247, %231, %189, %143, %141, %137
  %271 = phi i8 [ 0, %137 ], [ 0, %141 ], [ 0, %189 ], [ 0, %231 ], [ 0, %247 ], [ 0, %143 ], [ 1, %152 ]
  %272 = load atomic i64, i64* @_ZZN2gl4init12_GLOBAL__N_128GetRequestedGLImplementationEPbE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %273 = inttoptr i64 %272 to %"class.base::HistogramBase"*
  %274 = icmp eq i64 %272, 0
  br i1 %274, label %275, label %278

275:                                              ; preds = %270
  %276 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13, i64 0, i64 0), i32 1, i32 10, i32 11, i32 1) #11
  %277 = ptrtoint %"class.base::HistogramBase"* %276 to i64
  store atomic i64 %277, i64* @_ZZN2gl4init12_GLOBAL__N_128GetRequestedGLImplementationEPbE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %278

278:                                              ; preds = %275, %270
  %279 = phi %"class.base::HistogramBase"* [ %273, %270 ], [ %276, %275 ]
  %280 = load i32, i32* %120, align 8
  %281 = bitcast %"class.base::HistogramBase"* %279 to void (%"class.base::HistogramBase"*, i32)***
  %282 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %281, align 8
  %283 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %282, i64 6
  %284 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %283, align 8
  call void %284(%"class.base::HistogramBase"* %279, i32 %280) #11
  %285 = load i64, i64* %7, align 8
  store i64 %285, i64* %1, align 8
  br label %286

286:                                              ; preds = %278, %264
  %287 = phi i8 [ %271, %278 ], [ 0, %264 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #11
  br label %288

288:                                              ; preds = %286, %117
  %289 = phi i8 [ 0, %117 ], [ %287, %286 ]
  %290 = load i32*, i32** %40, align 8
  %291 = icmp eq i32* %290, null
  br i1 %291, label %296, label %292

292:                                              ; preds = %288
  %293 = ptrtoint i32* %290 to i64
  %294 = bitcast i32** %41 to i64*
  store i64 %293, i64* %294, align 8
  %295 = bitcast i32* %290 to i8*
  call void @_ZdlPv(i8* %295) #12
  br label %296

296:                                              ; preds = %292, %288
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #11
  br label %297

297:                                              ; preds = %296, %37
  %298 = phi i8 [ 0, %37 ], [ %289, %296 ]
  %299 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %300 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %299, i64 0, i32 1, i32 0
  %301 = load i8, i8* %300, align 1
  %302 = icmp slt i8 %301, 0
  br i1 %302, label %303, label %305

303:                                              ; preds = %297
  %304 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %304) #12
  br label %305

305:                                              ; preds = %303, %297
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  %306 = load i8, i8* %27, align 1
  %307 = icmp slt i8 %306, 0
  br i1 %307, label %308, label %310

308:                                              ; preds = %305
  %309 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %309) #12
  br label %310

310:                                              ; preds = %305, %308
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  %311 = load i64, i64* %1, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  %312 = trunc i64 %311 to i32
  switch i32 %312, label %314 [
    i32 8, label %313
    i32 0, label %317
  ]

313:                                              ; preds = %310
  call void @_ZN2gl19SetGLImplementationENS_16GLImplementationE(i32 8) #11
  br label %317

314:                                              ; preds = %310
  %315 = icmp ne i8 %298, 0
  %316 = call zeroext i1 @_ZN2gl4init40InitializeStaticGLBindingsImplementationENS_21GLImplementationPartsEb(i64 %311, i1 zeroext %315)
  br label %317

317:                                              ; preds = %310, %314, %313
  %318 = phi i1 [ true, %313 ], [ %316, %314 ], [ false, %310 ]
  ret i1 %318
}

declare i32 @_ZN2gl19GetGLImplementationEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2gl4init12_GLOBAL__N_132InitializeGLOneOffPlatformHelperEb(i1 zeroext) unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca i8, align 1
  %4 = zext i1 %0 to i8
  store i8 %4, i8* %3, align 1
  %5 = load atomic i64, i64* @_ZZN2gl4init12_GLOBAL__N_132InitializeGLOneOffPlatformHelperEbE28trace_event_unique_atomic123 monotonic, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %11, !prof !2

8:                                                ; preds = %1
  %9 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0)) #11
  %10 = ptrtoint i8* %9 to i64
  store atomic volatile i64 %10, i64* @_ZZN2gl4init12_GLOBAL__N_132InitializeGLOneOffPlatformHelperEbE28trace_event_unique_atomic123 monotonic, align 8
  br label %11

11:                                               ; preds = %8, %1
  %12 = phi i8* [ %9, %8 ], [ %6, %1 ]
  %13 = load i8, i8* %12, align 1
  %14 = and i8 %13, 25
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16, !prof !3

16:                                               ; preds = %11
  %17 = call i64 @_ZN20trace_event_internal13AddTraceEventIRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* %12, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8* nonnull dereferenceable(1) %3)
  br label %18

18:                                               ; preds = %11, %16
  %19 = phi i64 [ -6148914691236517206, %11 ], [ %17, %16 ]
  %20 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %11 ], [ getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i64 0, i64 0), %16 ]
  %21 = phi i8* [ null, %11 ], [ %12, %16 ]
  %22 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #11
  %23 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false) #11
  %25 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches6kUseGLE, i64 0, i64 0)) #11
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.base::CommandLine"* %22, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches6kUseGLE, i64 0, i64 0), i64 %25) #11
  %26 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %22, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches6kUseGLE, i64 0, i64 0)) #11
  br i1 %26, label %29, label %27

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %42

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = load i64, i64* %30, align 8
  %36 = zext i8 %33 to i64
  %37 = select i1 %34, i64 %35, i64 %36
  %38 = icmp eq i64 %37, 3
  br i1 %38, label %39, label %42

39:                                               ; preds = %29
  %40 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i64 3) #11
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %39, %29, %27
  %43 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %28, %27 ], [ %31, %29 ], [ %31, %39 ]
  br label %44

44:                                               ; preds = %42, %39
  %45 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %39 ], [ %43, %42 ]
  %46 = phi i1 [ true, %39 ], [ false, %42 ]
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %44
  %51 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %44, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  %53 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #11
  %54 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %53, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches25kDisableGLDrawingForTestsE, i64 0, i64 0)) #11
  %55 = load i8, i8* %3, align 1, !range !4
  %56 = icmp ne i8 %55, 0
  %57 = call zeroext i1 @_ZN2gl4init40InitializeGLOneOffPlatformImplementationEbbb(i1 zeroext %46, i1 zeroext %54, i1 zeroext %56)
  %58 = icmp eq i8* %21, null
  br i1 %58, label %63, label %59

59:                                               ; preds = %52
  %60 = load i8, i8* %21, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %59
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %21, i8* %20, i64 %19) #11
  br label %63

63:                                               ; preds = %52, %59, %62
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl4init30InitializeGLNoExtensionsOneOffEb(i1 zeroext) local_unnamed_addr #0 {
  %2 = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %2, align 1
  %4 = load atomic i64, i64* @_ZZN2gl4init30InitializeGLNoExtensionsOneOffEbE28trace_event_unique_atomic148 monotonic, align 8
  %5 = inttoptr i64 %4 to i8*
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %7, label %10, !prof !2

7:                                                ; preds = %1
  %8 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0)) #11
  %9 = ptrtoint i8* %8 to i64
  store atomic volatile i64 %9, i64* @_ZZN2gl4init30InitializeGLNoExtensionsOneOffEbE28trace_event_unique_atomic148 monotonic, align 8
  br label %10

10:                                               ; preds = %7, %1
  %11 = phi i8* [ %8, %7 ], [ %5, %1 ]
  %12 = load i8, i8* %11, align 1
  %13 = and i8 %12, 25
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %18, label %15, !prof !3

15:                                               ; preds = %10
  %16 = call i64 @_ZN20trace_event_internal13AddTraceEventIRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* %11, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i8* nonnull dereferenceable(1) %2)
  %17 = load i8, i8* %2, align 1, !range !4
  br label %18

18:                                               ; preds = %10, %15
  %19 = phi i8 [ %3, %10 ], [ %17, %15 ]
  %20 = phi i64 [ -6148914691236517206, %10 ], [ %16, %15 ]
  %21 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %10 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0), %15 ]
  %22 = phi i8* [ null, %10 ], [ %11, %15 ]
  %23 = icmp eq i8 %19, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %18
  %25 = call zeroext i1 @_ZN2gl4init32InitializeStaticGLBindingsOneOffEv()
  br i1 %25, label %26, label %31

26:                                               ; preds = %24
  %27 = call i32 @_ZN2gl19GetGLImplementationEv() #11
  %28 = icmp eq i32 %27, 8
  br i1 %28, label %31, label %29

29:                                               ; preds = %18, %26
  %30 = call fastcc zeroext i1 @_ZN2gl4init12_GLOBAL__N_132InitializeGLOneOffPlatformHelperEb(i1 zeroext false)
  br label %31

31:                                               ; preds = %26, %24, %29
  %32 = phi i1 [ %30, %29 ], [ false, %24 ], [ true, %26 ]
  %33 = icmp eq i8* %22, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %31
  %35 = load i8, i8* %22, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %34
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %22, i8* %21, i64 %20) #11
  br label %38

38:                                               ; preds = %31, %34, %37
  ret i1 %32
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i8* dereferenceable(1)) local_unnamed_addr #3 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #11
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 1, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = load i8, i8* %8, align 1, !range !4
  %21 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8*
  store i8 %20, i8* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #11
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #11
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #11
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #11
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #11
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret i64 %22
}

declare void @_ZN2gl19SetGLImplementationENS_16GLImplementationE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl4init40InitializeStaticGLBindingsImplementationENS_21GLImplementationPartsEb(i64, i1 zeroext) local_unnamed_addr #0 {
  %3 = tail call zeroext i1 @_ZN2gl26IsSoftwareGLImplementationENS_21GLImplementationPartsE(i64 %0) #11
  %4 = tail call zeroext i1 @_ZN2gl4init26InitializeStaticGLBindingsENS_21GLImplementationPartsE(i64 %0) #11
  %5 = xor i1 %1, true
  %6 = or i1 %3, %5
  %7 = or i1 %4, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  tail call void @_ZN2gl4init18ShutdownGLPlatformEv() #11
  tail call void @_ZN2gl23UnloadGLNativeLibrariesEb(i1 zeroext true) #11
  tail call void @_ZN2gl19SetGLImplementationENS_16GLImplementationE(i32 0) #11
  %9 = tail call i64 @_ZN2gl33GetLegacySoftwareGLImplementationEv() #11
  %10 = tail call zeroext i1 @_ZN2gl4init26InitializeStaticGLBindingsENS_21GLImplementationPartsE(i64 %9) #11
  br i1 %10, label %13, label %12

11:                                               ; preds = %2
  br i1 %4, label %13, label %12

12:                                               ; preds = %8, %11
  tail call void @_ZN2gl4init18ShutdownGLPlatformEv() #11
  tail call void @_ZN2gl23UnloadGLNativeLibrariesEb(i1 zeroext false) #11
  tail call void @_ZN2gl19SetGLImplementationENS_16GLImplementationE(i32 0) #11
  br label %13

13:                                               ; preds = %8, %11, %12
  %14 = phi i1 [ false, %12 ], [ true, %11 ], [ true, %8 ]
  ret i1 %14
}

declare zeroext i1 @_ZN2gl26IsSoftwareGLImplementationENS_21GLImplementationPartsE(i64) local_unnamed_addr #2

declare zeroext i1 @_ZN2gl4init26InitializeStaticGLBindingsENS_21GLImplementationPartsE(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl4init10ShutdownGLEb(i1 zeroext) local_unnamed_addr #0 {
  tail call void @_ZN2gl4init18ShutdownGLPlatformEv() #11
  tail call void @_ZN2gl23UnloadGLNativeLibrariesEb(i1 zeroext %0) #11
  tail call void @_ZN2gl19SetGLImplementationENS_16GLImplementationE(i32 0) #11
  ret void
}

declare i64 @_ZN2gl33GetLegacySoftwareGLImplementationEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl4init40InitializeGLOneOffPlatformImplementationEbbb(i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #0 {
  %4 = tail call dereferenceable(8) %"struct.gl::GLImplementationParts"* @_ZN2gl24GetGLImplementationPartsEv() #11
  %5 = bitcast %"struct.gl::GLImplementationParts"* %4 to i64*
  %6 = load i64, i64* %5, align 4
  %7 = tail call zeroext i1 @_ZN2gl26IsSoftwareGLImplementationENS_21GLImplementationPartsE(i64 %6) #11
  %8 = tail call zeroext i1 @_ZN2gl4init26InitializeGLOneOffPlatformEv() #11
  %9 = xor i1 %0, true
  %10 = or i1 %7, %9
  %11 = or i1 %8, %10
  br i1 %11, label %17, label %12

12:                                               ; preds = %3
  tail call void @_ZN2gl4init18ShutdownGLPlatformEv() #11
  tail call void @_ZN2gl23UnloadGLNativeLibrariesEb(i1 zeroext true) #11
  tail call void @_ZN2gl19SetGLImplementationENS_16GLImplementationE(i32 0) #11
  %13 = tail call i64 @_ZN2gl33GetLegacySoftwareGLImplementationEv() #11
  %14 = tail call zeroext i1 @_ZN2gl4init26InitializeStaticGLBindingsENS_21GLImplementationPartsE(i64 %13) #11
  br i1 %14, label %15, label %23

15:                                               ; preds = %12
  %16 = tail call zeroext i1 @_ZN2gl4init26InitializeGLOneOffPlatformEv() #11
  br label %17

17:                                               ; preds = %15, %3
  %18 = phi i1 [ %8, %3 ], [ %16, %15 ]
  %19 = and i1 %18, %2
  br i1 %19, label %20, label %22

20:                                               ; preds = %17
  %21 = tail call zeroext i1 @_ZN2gl4init41InitializeExtensionSettingsOneOffPlatformEv() #11
  br i1 %21, label %24, label %23

22:                                               ; preds = %17
  br i1 %18, label %24, label %23

23:                                               ; preds = %20, %12, %22
  tail call void @_ZN2gl4init18ShutdownGLPlatformEv() #11
  tail call void @_ZN2gl23UnloadGLNativeLibrariesEb(i1 zeroext false) #11
  tail call void @_ZN2gl19SetGLImplementationENS_16GLImplementationE(i32 0) #11
  br label %26

24:                                               ; preds = %20, %22
  br i1 %1, label %25, label %26

25:                                               ; preds = %24
  tail call void @_ZN2gl28InitializeNullDrawGLBindingsEv() #11
  br label %26

26:                                               ; preds = %23, %24, %25
  %27 = phi i1 [ false, %23 ], [ true, %24 ], [ true, %25 ]
  ret i1 %27
}

declare dereferenceable(8) %"struct.gl::GLImplementationParts"* @_ZN2gl24GetGLImplementationPartsEv() local_unnamed_addr #2

declare zeroext i1 @_ZN2gl4init26InitializeGLOneOffPlatformEv() local_unnamed_addr #2

declare zeroext i1 @_ZN2gl4init41InitializeExtensionSettingsOneOffPlatformEv() local_unnamed_addr #2

declare void @_ZN2gl28InitializeNullDrawGLBindingsEv() local_unnamed_addr #2

declare void @_ZN2gl4init18ShutdownGLPlatformEv() local_unnamed_addr #2

declare void @_ZN2gl23UnloadGLNativeLibrariesEb(i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::GLSurface"* @_ZN2gl4init24CreateOffscreenGLSurfaceERKN3gfx4SizeE(%"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #0 {
  %2 = alloca %"class.gl::GLSurfaceFormat", align 4
  call void @_ZN2gl15GLSurfaceFormatC1Ev(%"class.gl::GLSurfaceFormat"* nonnull %2) #11
  %3 = call %"class.gl::GLSurface"* @_ZN2gl4init34CreateOffscreenGLSurfaceWithFormatERKN3gfx4SizeENS_15GLSurfaceFormatE(%"class.gfx::Size"* dereferenceable(8) %0, %"class.gl::GLSurfaceFormat"* nonnull %2) #11
  call void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"* nonnull %2) #11
  ret %"class.gl::GLSurface"* %3
}

declare %"class.gl::GLSurface"* @_ZN2gl4init34CreateOffscreenGLSurfaceWithFormatERKN3gfx4SizeENS_15GLSurfaceFormatE(%"class.gfx::Size"* dereferenceable(8), %"class.gl::GLSurfaceFormat"*) local_unnamed_addr #2

declare void @_ZN2gl15GLSurfaceFormatC1Ev(%"class.gl::GLSurfaceFormat"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"*) unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl4init12DisableANGLEEv() local_unnamed_addr #5 {
  store i1 true, i1* @_ZN2gl4init12_GLOBAL__N_118g_is_angle_enabledE, align 1
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #2

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN2gl21GLImplementationPartsC1ENS_16GLImplementationE(%"struct.gl::GLImplementationParts"*, i32) unnamed_addr #2

declare void @_ZN2gl4init27GetAllowedGLImplementationsEv(%"class.std::__1::vector.40"* sret) local_unnamed_addr #2

declare void @_ZN2gl13GLVersionInfo20DisableES3ForTestingEv() local_unnamed_addr #2

declare zeroext i1 @_ZN2gl28UsePassthroughCommandDecoderEPKN4base11CommandLineE(%"class.base::CommandLine"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIN2gl16GLImplementationENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EEOS2_(%"class.std::__1::vector.40"*, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %8, %10
  %12 = ptrtoint i32* %8 to i64
  %13 = ptrtoint i32* %10 to i64
  br i1 %11, label %14, label %159

14:                                               ; preds = %3
  %15 = icmp eq i32* %8, %1
  br i1 %15, label %16, label %21

16:                                               ; preds = %14
  %17 = load i32, i32* %2, align 4
  store i32 %17, i32* %1, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = bitcast i32** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %302

21:                                               ; preds = %14
  %22 = getelementptr inbounds i32, i32* %1, i64 1
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = bitcast i32** %7 to i64*
  %28 = icmp ult i32* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i32, i32* %8, i64 %30
  %32 = bitcast i32* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 2
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i32* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i32* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %150

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i32, i32* %8, i64 %43
  %45 = bitcast i32* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 2
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i32, i32* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add i64 %52, 1
  %54 = getelementptr i32, i32* %1, i64 %53
  %55 = icmp ult i32* %8, %54
  %56 = icmp ult i32* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 9223372036854775800
  %60 = getelementptr i32, i32* %8, i64 %59
  %61 = getelementptr i32, i32* %26, i64 %59
  %62 = add nsw i64 %59, -8
  %63 = lshr exact i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 24
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i32, i32* %8, i64 %70
  %73 = getelementptr i32, i32* %26, i64 %70
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !alias.scope !5
  %76 = getelementptr i32, i32* %73, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !5
  %79 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %79, align 4, !alias.scope !8, !noalias !5
  %80 = getelementptr i32, i32* %72, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !8, !noalias !5
  %82 = or i64 %70, 8
  %83 = getelementptr i32, i32* %8, i64 %82
  %84 = getelementptr i32, i32* %26, i64 %82
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 4, !alias.scope !5
  %87 = getelementptr i32, i32* %84, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !5
  %90 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %90, align 4, !alias.scope !8, !noalias !5
  %91 = getelementptr i32, i32* %83, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %92, align 4, !alias.scope !8, !noalias !5
  %93 = or i64 %70, 16
  %94 = getelementptr i32, i32* %8, i64 %93
  %95 = getelementptr i32, i32* %26, i64 %93
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !5
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !5
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !8, !noalias !5
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !8, !noalias !5
  %104 = or i64 %70, 24
  %105 = getelementptr i32, i32* %8, i64 %104
  %106 = getelementptr i32, i32* %26, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !5
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !5
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !8, !noalias !5
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !8, !noalias !5
  %115 = add i64 %70, 32
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !10

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i32, i32* %8, i64 %122
  %125 = getelementptr i32, i32* %26, i64 %122
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !5
  %128 = getelementptr i32, i32* %125, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !5
  %131 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4, !alias.scope !8, !noalias !5
  %132 = getelementptr i32, i32* %124, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %133, align 4, !alias.scope !8, !noalias !5
  %134 = add i64 %122, 8
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !12

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %150, %137
  %140 = phi i32* [ %60, %137 ], [ %155, %150 ]
  %141 = ptrtoint i32* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i32, i32* %8, i64 %146
  %148 = bitcast i32* %147 to i8*
  %149 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 %24, i1 false) #11
  br label %157

150:                                              ; preds = %39, %150
  %151 = phi i32* [ %155, %150 ], [ %40, %39 ]
  %152 = phi i32* [ %154, %150 ], [ %41, %39 ]
  %153 = load i32, i32* %152, align 4
  store i32 %153, i32* %151, align 4
  %154 = getelementptr inbounds i32, i32* %152, i64 1
  %155 = getelementptr inbounds i32, i32* %151, i64 1
  %156 = icmp ult i32* %154, %8
  br i1 %156, label %150, label %139, !llvm.loop !14

157:                                              ; preds = %142, %145
  %158 = load i32, i32* %2, align 4
  store i32 %158, i32* %1, align 4
  br label %302

159:                                              ; preds = %3
  %160 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 2
  %161 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %161) #11
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %166 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %167 = bitcast i32** %7 to i64*
  %168 = bitcast %"class.std::__1::vector.40"* %0 to i64*
  %169 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 -86, i64 40, i1 false)
  %170 = load i64, i64* %168, align 8
  %171 = sub i64 %12, %170
  %172 = ashr exact i64 %171, 2
  %173 = add nsw i64 %172, 1
  %174 = icmp ugt i64 %173, 4611686018427387903
  br i1 %174, label %175, label %177

175:                                              ; preds = %159
  %176 = bitcast %"class.std::__1::vector.40"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %176) #13
  unreachable

177:                                              ; preds = %159
  %178 = bitcast i32** %9 to i64*
  %179 = sub i64 %13, %170
  %180 = ashr exact i64 %179, 2
  %181 = icmp ult i64 %180, 2305843009213693951
  br i1 %181, label %186, label %182

182:                                              ; preds = %177
  %183 = sub i64 %4, %170
  %184 = ashr exact i64 %183, 2
  store i32* null, i32** %165, align 8
  %185 = bitcast %"class.std::__1::allocator.45"** %166 to %"class.std::__1::__compressed_pair.42"**
  store %"class.std::__1::__compressed_pair.42"* %160, %"class.std::__1::__compressed_pair.42"** %185, align 8
  br label %197

186:                                              ; preds = %177
  %187 = ashr exact i64 %179, 1
  %188 = icmp ult i64 %187, %173
  %189 = select i1 %188, i64 %173, i64 %187
  %190 = sub i64 %4, %170
  %191 = ashr exact i64 %190, 2
  store i32* null, i32** %165, align 8
  %192 = bitcast %"class.std::__1::allocator.45"** %166 to %"class.std::__1::__compressed_pair.42"**
  store %"class.std::__1::__compressed_pair.42"* %160, %"class.std::__1::__compressed_pair.42"** %192, align 8
  %193 = icmp eq i64 %189, 0
  br i1 %193, label %203, label %194

194:                                              ; preds = %186
  %195 = icmp ugt i64 %189, 4611686018427387903
  br i1 %195, label %196, label %197

196:                                              ; preds = %194
  tail call void @abort() #13
  unreachable

197:                                              ; preds = %182, %194
  %198 = phi i64 [ 4611686018427387903, %182 ], [ %189, %194 ]
  %199 = phi i64 [ %184, %182 ], [ %191, %194 ]
  %200 = shl i64 %198, 2
  %201 = tail call i8* @_Znwm(i64 %200) #12
  %202 = bitcast i8* %201 to i32*
  br label %203

203:                                              ; preds = %186, %197
  %204 = phi i64 [ %199, %197 ], [ %191, %186 ]
  %205 = phi i64 [ %198, %197 ], [ 0, %186 ]
  %206 = phi i32* [ %202, %197 ], [ null, %186 ]
  store i32* %206, i32** %162, align 8
  %207 = getelementptr inbounds i32, i32* %206, i64 %204
  store i32* %207, i32** %164, align 8
  store i32* %207, i32** %163, align 8
  %208 = getelementptr inbounds i32, i32* %206, i64 %205
  store i32* %208, i32** %165, align 8
  call void @_ZNSt3__114__split_bufferIN2gl16GLImplementationERNS_9allocatorIS2_EEE9push_backEOS2_(%"struct.std::__1::__split_buffer"* nonnull %5, i32* dereferenceable(4) %2)
  %209 = load i32*, i32** %163, align 8
  %210 = load i32*, i32** %6, align 8
  %211 = ptrtoint i32* %210 to i64
  %212 = sub i64 %4, %211
  %213 = ashr exact i64 %212, 2
  %214 = sub nsw i64 0, %213
  %215 = getelementptr inbounds i32, i32* %209, i64 %214
  store i32* %215, i32** %163, align 8
  %216 = icmp sgt i64 %212, 0
  br i1 %216, label %217, label %220

217:                                              ; preds = %203
  %218 = bitcast i32* %215 to i8*
  %219 = bitcast i32* %210 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %218, i8* align 4 %219, i64 %212, i1 false) #11
  br label %220

220:                                              ; preds = %217, %203
  %221 = load i32*, i32** %7, align 8
  %222 = icmp eq i32* %221, %1
  br i1 %222, label %223, label %227

223:                                              ; preds = %220
  %224 = ptrtoint i32* %221 to i64
  %225 = bitcast i32** %164 to i64*
  %226 = load i64, i64* %225, align 8
  br label %276

227:                                              ; preds = %220
  %228 = load i32*, i32** %164, align 8
  %229 = getelementptr i32, i32* %221, i64 -1
  %230 = ptrtoint i32* %229 to i64
  %231 = sub i64 %230, %4
  %232 = lshr i64 %231, 2
  %233 = add nuw nsw i64 %232, 1
  %234 = and i64 %233, 3
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %246, label %236

236:                                              ; preds = %227, %236
  %237 = phi i32* [ %243, %236 ], [ %228, %227 ]
  %238 = phi i32* [ %241, %236 ], [ %1, %227 ]
  %239 = phi i64 [ %244, %236 ], [ %234, %227 ]
  %240 = load i32, i32* %238, align 4
  store i32 %240, i32* %237, align 4
  %241 = getelementptr inbounds i32, i32* %238, i64 1
  %242 = load i32*, i32** %164, align 8
  %243 = getelementptr inbounds i32, i32* %242, i64 1
  store i32* %243, i32** %164, align 8
  %244 = add i64 %239, -1
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %246, label %236, !llvm.loop !15

246:                                              ; preds = %236, %227
  %247 = phi i32* [ undef, %227 ], [ %243, %236 ]
  %248 = phi i32* [ %228, %227 ], [ %243, %236 ]
  %249 = phi i32* [ %1, %227 ], [ %241, %236 ]
  %250 = icmp ult i64 %231, 12
  br i1 %250, label %271, label %251

251:                                              ; preds = %246, %251
  %252 = phi i32* [ %269, %251 ], [ %248, %246 ]
  %253 = phi i32* [ %267, %251 ], [ %249, %246 ]
  %254 = load i32, i32* %253, align 4
  store i32 %254, i32* %252, align 4
  %255 = getelementptr inbounds i32, i32* %253, i64 1
  %256 = load i32*, i32** %164, align 8
  %257 = getelementptr inbounds i32, i32* %256, i64 1
  store i32* %257, i32** %164, align 8
  %258 = load i32, i32* %255, align 4
  store i32 %258, i32* %257, align 4
  %259 = getelementptr inbounds i32, i32* %253, i64 2
  %260 = load i32*, i32** %164, align 8
  %261 = getelementptr inbounds i32, i32* %260, i64 1
  store i32* %261, i32** %164, align 8
  %262 = load i32, i32* %259, align 4
  store i32 %262, i32* %261, align 4
  %263 = getelementptr inbounds i32, i32* %253, i64 3
  %264 = load i32*, i32** %164, align 8
  %265 = getelementptr inbounds i32, i32* %264, i64 1
  store i32* %265, i32** %164, align 8
  %266 = load i32, i32* %263, align 4
  store i32 %266, i32* %265, align 4
  %267 = getelementptr inbounds i32, i32* %253, i64 4
  %268 = load i32*, i32** %164, align 8
  %269 = getelementptr inbounds i32, i32* %268, i64 1
  store i32* %269, i32** %164, align 8
  %270 = icmp eq i32* %267, %221
  br i1 %270, label %271, label %251

271:                                              ; preds = %251, %246
  %272 = phi i32* [ %247, %246 ], [ %269, %251 ]
  %273 = ptrtoint i32* %272 to i64
  %274 = load i64, i64* %167, align 8
  %275 = bitcast i32** %164 to i64*
  br label %276

276:                                              ; preds = %223, %271
  %277 = phi i64* [ %225, %223 ], [ %275, %271 ]
  %278 = phi i64 [ %226, %223 ], [ %273, %271 ]
  %279 = phi i64 [ %224, %223 ], [ %274, %271 ]
  %280 = load i64, i64* %168, align 8
  %281 = bitcast i32** %163 to i64*
  %282 = load i64, i64* %281, align 8
  store i64 %282, i64* %168, align 8
  store i64 %280, i64* %281, align 8
  store i64 %278, i64* %167, align 8
  store i64 %279, i64* %277, align 8
  %283 = load i64, i64* %178, align 8
  %284 = bitcast i32** %165 to i64*
  %285 = load i64, i64* %284, align 8
  store i64 %285, i64* %178, align 8
  store i64 %283, i64* %284, align 8
  %286 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %280, i64* %286, align 8
  %287 = inttoptr i64 %280 to i32*
  %288 = inttoptr i64 %279 to i32*
  %289 = icmp eq i32* %288, %287
  br i1 %289, label %297, label %290

290:                                              ; preds = %276
  %291 = getelementptr i32, i32* %288, i64 -1
  %292 = ptrtoint i32* %291 to i64
  %293 = sub i64 %292, %280
  %294 = lshr i64 %293, 2
  %295 = xor i64 %294, -1
  %296 = getelementptr i32, i32* %288, i64 %295
  store i32* %296, i32** %164, align 8
  br label %297

297:                                              ; preds = %290, %276
  %298 = icmp eq i64 %280, 0
  br i1 %298, label %301, label %299

299:                                              ; preds = %297
  %300 = inttoptr i64 %280 to i8*
  call void @_ZdlPv(i8* %300) #12
  br label %301

301:                                              ; preds = %297, %299
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %161) #11
  br label %302

302:                                              ; preds = %16, %157, %301
  %303 = phi i32* [ %1, %16 ], [ %1, %157 ], [ %209, %301 ]
  ret i32* %303
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

declare i64 @_ZN2gl38GetSoftwareGLForHeadlessImplementationEv() local_unnamed_addr #2

declare i64 @_ZN2gl35GetSoftwareGLForTestsImplementationEv() local_unnamed_addr #2

declare void @_ZN2gl21GLImplementationPartsC1ENS_19ANGLEImplementationE(%"struct.gl::GLImplementationParts"*, i32) unnamed_addr #2

declare i64 @_ZN2gl24GetNamedGLImplementationERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN2gl16GLImplementationERNS_9allocatorIS2_EEE9push_backEOS2_(%"struct.std::__1::__split_buffer"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  %8 = ptrtoint i32* %6 to i64
  br i1 %7, label %9, label %229

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp ugt i32* %11, %14
  %16 = ptrtoint i32* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint i32* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 2
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32, i32* %11, i64 %22
  %24 = ptrtoint i32* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast i32* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %12, i64 %25, i1 false) #11
  %30 = load i32*, i32** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi i32* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds i32, i32* %23, i64 %26
  store i32* %33, i32** %3, align 8
  %34 = getelementptr inbounds i32, i32* %32, i64 %22
  store i32* %34, i32** %10, align 8
  br label %229

35:                                               ; preds = %9
  %36 = bitcast i32** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 1
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 4611686018427387903
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #13
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 2
  %47 = tail call i8* @_Znwm(i64 %46) #12
  %48 = bitcast i8* %47 to i32*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds i32, i32* %48, i64 %45
  %51 = ptrtoint i32* %50 to i64
  %52 = getelementptr inbounds i32, i32* %48, i64 %41
  %53 = ptrtoint i32* %52 to i64
  %54 = ptrtoint i32* %11 to i64
  %55 = ptrtoint i32* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds i32, i32* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %219, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -4
  %62 = lshr i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 8
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = and i64 %41, -4
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -4
  %69 = lshr i64 %68, 2
  %70 = and i64 %68, -4
  %71 = add i64 %66, %70
  %72 = add i64 %71, 4
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr i32, i32* %11, i64 %74
  %76 = bitcast i32* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 9223372036854775800
  %82 = getelementptr i32, i32* %50, i64 %81
  %83 = getelementptr i32, i32* %11, i64 %81
  %84 = add nsw i64 %81, -8
  %85 = lshr exact i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 24
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i32, i32* %50, i64 %92
  %95 = getelementptr i32, i32* %11, i64 %92
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !16
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !16
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !19, !noalias !16
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !19, !noalias !16
  %104 = or i64 %92, 8
  %105 = getelementptr i32, i32* %50, i64 %104
  %106 = getelementptr i32, i32* %11, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !16
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !16
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !19, !noalias !16
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !19, !noalias !16
  %115 = or i64 %92, 16
  %116 = getelementptr i32, i32* %50, i64 %115
  %117 = getelementptr i32, i32* %11, i64 %115
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !16
  %120 = getelementptr i32, i32* %117, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !16
  %123 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %123, align 4, !alias.scope !19, !noalias !16
  %124 = getelementptr i32, i32* %116, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %125, align 4, !alias.scope !19, !noalias !16
  %126 = or i64 %92, 24
  %127 = getelementptr i32, i32* %50, i64 %126
  %128 = getelementptr i32, i32* %11, i64 %126
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !16
  %131 = getelementptr i32, i32* %128, i64 4
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4, !alias.scope !16
  %134 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %134, align 4, !alias.scope !19, !noalias !16
  %135 = getelementptr i32, i32* %127, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %136, align 4, !alias.scope !19, !noalias !16
  %137 = add i64 %92, 32
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !21

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i32, i32* %50, i64 %144
  %147 = getelementptr i32, i32* %11, i64 %144
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4, !alias.scope !16
  %150 = getelementptr i32, i32* %147, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4, !alias.scope !16
  %153 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %153, align 4, !alias.scope !19, !noalias !16
  %154 = getelementptr i32, i32* %146, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %155, align 4, !alias.scope !19, !noalias !16
  %156 = add i64 %144, 8
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !22

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %216, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi i32* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi i32* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint i32* %162 to i64
  %165 = and i64 %41, -4
  %166 = add i64 %56, %165
  %167 = add i64 %166, -4
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 2
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %161, %175
  %176 = phi i32* [ %180, %175 ], [ %162, %161 ]
  %177 = phi i32* [ %181, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %182, %175 ], [ %173, %161 ]
  %179 = load i32, i32* %177, align 4
  store i32 %179, i32* %176, align 4
  %180 = getelementptr inbounds i32, i32* %176, i64 1
  %181 = getelementptr inbounds i32, i32* %177, i64 1
  %182 = add i64 %178, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !23

184:                                              ; preds = %175, %161
  %185 = phi i32* [ %162, %161 ], [ %180, %175 ]
  %186 = phi i32* [ %163, %161 ], [ %181, %175 ]
  %187 = icmp ult i8* %169, inttoptr (i64 28 to i8*)
  br i1 %187, label %216, label %188

188:                                              ; preds = %184, %188
  %189 = phi i32* [ %213, %188 ], [ %185, %184 ]
  %190 = phi i32* [ %214, %188 ], [ %186, %184 ]
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %189, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %190, i64 1
  %194 = load i32, i32* %193, align 4
  store i32 %194, i32* %192, align 4
  %195 = getelementptr inbounds i32, i32* %189, i64 2
  %196 = getelementptr inbounds i32, i32* %190, i64 2
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %195, align 4
  %198 = getelementptr inbounds i32, i32* %189, i64 3
  %199 = getelementptr inbounds i32, i32* %190, i64 3
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %198, align 4
  %201 = getelementptr inbounds i32, i32* %189, i64 4
  %202 = getelementptr inbounds i32, i32* %190, i64 4
  %203 = load i32, i32* %202, align 4
  store i32 %203, i32* %201, align 4
  %204 = getelementptr inbounds i32, i32* %189, i64 5
  %205 = getelementptr inbounds i32, i32* %190, i64 5
  %206 = load i32, i32* %205, align 4
  store i32 %206, i32* %204, align 4
  %207 = getelementptr inbounds i32, i32* %189, i64 6
  %208 = getelementptr inbounds i32, i32* %190, i64 6
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %207, align 4
  %210 = getelementptr inbounds i32, i32* %189, i64 7
  %211 = getelementptr inbounds i32, i32* %190, i64 7
  %212 = load i32, i32* %211, align 4
  store i32 %212, i32* %210, align 4
  %213 = getelementptr inbounds i32, i32* %189, i64 8
  %214 = getelementptr inbounds i32, i32* %190, i64 8
  %215 = icmp eq i32* %58, %213
  br i1 %215, label %216, label %188, !llvm.loop !24

216:                                              ; preds = %184, %188, %159
  %217 = ptrtoint i32* %58 to i64
  %218 = load i32*, i32** %13, align 8
  br label %219

219:                                              ; preds = %44, %216
  %220 = phi i32* [ %218, %216 ], [ %14, %44 ]
  %221 = phi i64 [ %217, %216 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %222 = bitcast i32** %10 to i64*
  store i64 %51, i64* %222, align 8
  %223 = bitcast i32** %3 to i64*
  store i64 %221, i64* %223, align 8
  store i64 %53, i64* %36, align 8
  %224 = icmp eq i32* %220, null
  %225 = inttoptr i64 %221 to i32*
  br i1 %224, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast i32* %220 to i8*
  tail call void @_ZdlPv(i8* %227) #12
  %228 = load i32*, i32** %3, align 8
  br label %229

229:                                              ; preds = %226, %219, %31, %2
  %230 = phi i32* [ %228, %226 ], [ %225, %219 ], [ %33, %31 ], [ %4, %2 ]
  %231 = load i32, i32* %1, align 4
  store i32 %231, i32* %230, align 4
  %232 = load i32*, i32** %3, align 8
  %233 = getelementptr inbounds i32, i32* %232, i64 1
  store i32* %233, i32** %3, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !11}
!15 = distinct !{!15, !13}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !11}
!22 = distinct !{!22, !13}
!23 = distinct !{!23, !13}
!24 = distinct !{!24, !11}
