; ModuleID = '../../content/browser/web_package/signed_exchange_certificate_chain.cc'
source_filename = "../../content/browser/web_package/signed_exchange_certificate_chain.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.base::NoDestructor" = type { [8 x i8] }
%"class.content::SignedExchangeCertificateChain" = type { %class.scoped_refptr, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr = type { %"class.net::X509Certificate"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.9", %"class.std::__1::vector.13" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::basic_string"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.std::__1::unique_ptr.9"*, %"class.std::__1::unique_ptr.9"*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::unique_ptr.9"* }
%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.24" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"*, %"class.std::__1::__compressed_pair.26" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.net::SHA256HashValue"* }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i64 }
%"class.content::SignedExchangeDevToolsProxy" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.60 }
%union.anon.60 = type { %"class.cbor::Value" }
%"class.cbor::Value" = type { i32, %union.anon.61 }
%union.anon.61 = type { %"class.std::__1::vector.62" }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { i8*, i8*, %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { i8* }
%"class.absl::optional.83" = type { %"class.absl::optional_internal::optional_data.84" }
%"class.absl::optional_internal::optional_data.84" = type { %"class.absl::optional_internal::optional_data_base.85" }
%"class.absl::optional_internal::optional_data_base.85" = type { %"class.absl::optional_internal::optional_data_dtor_base.86" }
%"class.absl::optional_internal::optional_data_dtor_base.86" = type { i8, %union.anon.87 }
%union.anon.87 = type { %"struct.std::__1::pair.88" }
%"struct.std::__1::pair.88" = type { i32, i32 }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.95" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.base::BasicStringPiece"* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.42" }
%"class.base::time_internal::TimeBase.42" = type { i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"class.cbor::Value"*, %"class.cbor::Value"*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.cbor::Value"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.75" }
%"class.base::internal::flat_tree.75" = type { %"class.std::__1::vector.76" }
%"class.std::__1::vector.76" = type { %"class.std::__1::__vector_base.77" }
%"class.std::__1::__vector_base.77" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.78" }
%"struct.std::__1::pair" = type { %"class.cbor::Value", %"class.cbor::Value" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.std::__1::pair"* }
%"struct.cbor::Value::Less" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* }
%"class.content::ContentClient" = type { i32 (...)**, %"class.content::ContentBrowserClient"*, %"class.content::ContentGpuClient"*, %"class.content::ContentRendererClient"*, %"class.content::ContentUtilityClient"* }
%"class.content::ContentBrowserClient" = type { i32 (...)** }
%"class.content::ContentGpuClient" = type opaque
%"class.content::ContentRendererClient" = type opaque
%"class.content::ContentUtilityClient" = type opaque

$_ZNK4cbor5Value4LessclERKS0_S3_ = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [38 x i8] c"SignedExchangeCertificateChain::Parse\00", align 1
@_ZZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList11GetInstanceEvE8instance = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList11GetInstanceEvE8instance = internal global i64 0, align 8
@_ZN7network8switches32kIgnoreCertificateErrorsSPKIListE = external constant [0 x i8], align 1
@.str.1 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"Failed to decode Value. CBOR error: %s\00", align 1
@.str.3 = private unnamed_addr constant [57 x i8] c"Expected top-level Value to be an array. Actual type: %d\00", align 1
@.str.4 = private unnamed_addr constant [79 x i8] c"Expected top-level array to have at least 2 elements.Actual element count: %zu\00", align 1
@_ZN7contentL19kCertChainCborMagicE = internal constant [8 x i8] c"\F0\9F\93\9C\E2\9B\93\00", align 1
@.str.5 = private unnamed_addr constant [66 x i8] c"First element of cert chain CBOR does not match the magic string.\00", align 1
@.str.6 = private unnamed_addr constant [73 x i8] c"Expected certificate map, got non-map type at index %zu. Actual type: %d\00", align 1
@_ZN7contentL8kCertKeyE = internal constant [5 x i8] c"cert\00", align 1
@.str.7 = private unnamed_addr constant [53 x i8] c"cert is not found or not a bytestring, at index %zu.\00", align 1
@_ZN7contentL8kOcspKeyE = internal constant [5 x i8] c"ocsp\00", align 1
@.str.8 = private unnamed_addr constant [62 x i8] c"ocsp is not a bytestring, or not found in the first cert map.\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"ocsp must not be empty.\00", align 1
@.str.10 = private unnamed_addr constant [57 x i8] c"ocsp value found in a subsequent cert map, at index %zu.\00", align 1
@_ZN7contentL7kSctKeyE = internal constant [4 x i8] c"sct\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"sct is not a bytestring.\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"sct must not be empty.\00", align 1
@.str.13 = private unnamed_addr constant [48 x i8] c"X509Certificate::CreateFromDERCertChain failed.\00", align 1

@_ZN7content30SignedExchangeCertificateChainC1E13scoped_refptrIN3net15X509CertificateEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_ = hidden unnamed_addr alias void (%"class.content::SignedExchangeCertificateChain"*, %"class.net::X509Certificate"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*), void (%"class.content::SignedExchangeCertificateChain"*, %"class.net::X509Certificate"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN7content30SignedExchangeCertificateChainC2E13scoped_refptrIN3net15X509CertificateEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_
@_ZN7content30SignedExchangeCertificateChainD1Ev = hidden unnamed_addr alias void (%"class.content::SignedExchangeCertificateChain"*), void (%"class.content::SignedExchangeCertificateChain"*)* @_ZN7content30SignedExchangeCertificateChainD2Ev
@_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIListC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"*, %"class.std::__1::basic_string"*), void (%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"*, %"class.std::__1::basic_string"*)* @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIListC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
@_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIListC1ERKN4base11CommandLineE = hidden unnamed_addr alias void (%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"*, %"class.base::CommandLine"*), void (%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"*, %"class.base::CommandLine"*)* @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIListC2ERKN4base11CommandLineE
@_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIListD1Ev = hidden unnamed_addr alias void (%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"*), void (%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"*)* @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIListD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.content::SignedExchangeCertificateChain"* @_ZN7content30SignedExchangeCertificateChain5ParseEN4base4spanIKhLm18446744073709551615EEEPNS_27SignedExchangeDevToolsProxyE(i64, i8*, %"class.content::SignedExchangeDevToolsProxy"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.absl::optional", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.absl::optional.83", align 4
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.absl::optional.83", align 4
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.absl::optional.83", align 4
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.absl::optional.83", align 4
  %14 = alloca %"class.std::__1::vector.93", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.absl::optional.83", align 4
  %17 = alloca %"class.cbor::Value", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.absl::optional.83", align 4
  %20 = alloca %"class.cbor::Value", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.absl::optional.83", align 4
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.absl::optional.83", align 4
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"class.absl::optional.83", align 4
  %28 = alloca %"class.cbor::Value", align 8
  %29 = alloca %"class.std::__1::basic_string", align 8
  %30 = alloca %"class.absl::optional.83", align 4
  %31 = alloca %"class.std::__1::basic_string", align 8
  %32 = alloca %"class.std::__1::basic_string", align 8
  %33 = alloca %"class.absl::optional.83", align 4
  %34 = alloca %"class.std::__1::basic_string", align 8
  %35 = alloca %"class.absl::optional.83", align 4
  %36 = alloca %"class.base::TimeTicks", align 8
  %37 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), align 16
  %38 = and i8 %37, 25
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %46, label %40, !prof !2

40:                                               ; preds = %3
  %41 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %42 = bitcast %"class.base::TimeTicks"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #11
  %43 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %36, i64 0, i32 0, i32 0
  %44 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %44, i64* %43, align 8
  %45 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %41, %"class.base::TimeTicks"* nonnull dereferenceable(8) %36, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #11
  br label %46

46:                                               ; preds = %3, %40
  %47 = phi i64 [ -6148914691236517206, %3 ], [ %45, %40 ]
  %48 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), %40 ]
  %49 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), %40 ]
  %50 = getelementptr inbounds %"class.absl::optional.83", %"class.absl::optional.83"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %50)
  %51 = getelementptr inbounds %"class.absl::optional.83", %"class.absl::optional.83"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %51)
  %52 = getelementptr inbounds %"class.absl::optional.83", %"class.absl::optional.83"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %52)
  %53 = getelementptr inbounds %"class.absl::optional.83", %"class.absl::optional.83"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %53)
  %54 = getelementptr inbounds %"class.absl::optional.83", %"class.absl::optional.83"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %54)
  %55 = getelementptr inbounds %"class.absl::optional.83", %"class.absl::optional.83"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %55)
  %56 = getelementptr inbounds %"class.absl::optional.83", %"class.absl::optional.83"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %56)
  %57 = getelementptr inbounds %"class.absl::optional.83", %"class.absl::optional.83"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %57)
  %58 = getelementptr inbounds %"class.absl::optional.83", %"class.absl::optional.83"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %58)
  %59 = getelementptr inbounds %"class.absl::optional.83", %"class.absl::optional.83"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %59)
  %60 = getelementptr inbounds %"class.absl::optional.83", %"class.absl::optional.83"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %60)
  %61 = getelementptr inbounds %"class.absl::optional.83", %"class.absl::optional.83"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %61)
  %62 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #11
  store i32 -1431655766, i32* %4, align 4
  %63 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %63) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 40, i1 false) #11
  call void @_ZN4cbor6Reader4ReadEN4base4spanIKhLm18446744073709551615EEEPNS0_12DecoderErrorEi(%"class.absl::optional"* nonnull sret %5, i64 %0, i8* %1, i32* nonnull %4, i32 16) #11
  %64 = load i8, i8* %63, align 8, !range !3
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %77

66:                                               ; preds = %46
  %67 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #11
  %68 = load i32, i32* %4, align 4
  %69 = call i8* @_ZN4cbor6Reader17ErrorCodeToStringENS0_12DecoderErrorE(i32 %68) #11
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %6, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0), i8* %69) #11
  store i8 0, i8* %50, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, %"class.absl::optional.83"* nonnull %7) #11
  %70 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %668

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #12
  br label %668

77:                                               ; preds = %46
  %78 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %79 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %78, i64 0, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 4
  br i1 %81, label %91, label %82

82:                                               ; preds = %77
  %83 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #11
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %8, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3, i64 0, i64 0), i32 %80) #11
  store i8 0, i8* %51, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, %"class.absl::optional.83"* nonnull %9) #11
  %84 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %668

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %90) #12
  br label %668

91:                                               ; preds = %77
  %92 = call dereferenceable(24) %"class.std::__1::vector.68"* @_ZNK4cbor5Value8GetArrayEv(%"class.cbor::Value"* %78) #11
  %93 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %92, i64 0, i32 0, i32 1
  %94 = bitcast %"class.cbor::Value"** %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.std::__1::vector.68"* %92 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %95, %97
  %99 = ashr exact i64 %98, 5
  %100 = icmp ult i64 %99, 2
  %101 = inttoptr i64 %97 to %"class.cbor::Value"*
  br i1 %100, label %102, label %111

102:                                              ; preds = %91
  %103 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #11
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %10, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.4, i64 0, i64 0), i64 %99) #11
  store i8 0, i8* %52, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, %"class.absl::optional.83"* nonnull %11) #11
  %104 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %668

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  call void @_ZdlPv(i8* %110) #12
  br label %668

111:                                              ; preds = %91
  %112 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %101, i64 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, 3
  br i1 %114, label %115, label %129

115:                                              ; preds = %111
  %116 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4cbor5Value9GetStringEv(%"class.cbor::Value"* %101) #11
  %117 = bitcast %"class.std::__1::basic_string"* %116 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = zext i8 %119 to i64
  %124 = select i1 %120, i64 %122, i64 %123
  %125 = icmp eq i64 %124, 7
  br i1 %125, label %126, label %129

126:                                              ; preds = %115
  %127 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %116, i64 0, i64 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN7contentL19kCertChainCborMagicE, i64 0, i64 0), i64 7) #11
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %142, label %129

129:                                              ; preds = %126, %115, %111
  %130 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130) #11
  %131 = call i8* @_Znwm(i64 80) #12
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %131, i8** %132, align 8
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %134 = bitcast i64* %133 to <2 x i64>*
  store <2 x i64> <i64 65, i64 -9223372036854775728>, <2 x i64>* %134, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %131, i8* align 1 getelementptr inbounds ([66 x i8], [66 x i8]* @.str.5, i64 0, i64 0), i64 65, i1 false) #11
  %135 = getelementptr inbounds i8, i8* %131, i64 65
  store i8 0, i8* %135, align 1
  store i8 0, i8* %53, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, %"class.absl::optional.83"* nonnull %13) #11
  %136 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  %138 = load i8, i8* %137, align 1
  %139 = icmp slt i8 %138, 0
  br i1 %139, label %140, label %668

140:                                              ; preds = %129
  %141 = load i8*, i8** %132, align 8
  call void @_ZdlPv(i8* %141) #12
  br label %668

142:                                              ; preds = %126
  %143 = bitcast %"class.std::__1::vector.93"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %143) #11
  %144 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %14, i64 0, i32 0, i32 0
  %145 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %14, i64 0, i32 0, i32 1
  %146 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %143, i8 0, i64 24, i1 false) #11
  %147 = load i64, i64* %94, align 8
  %148 = load i64, i64* %96, align 8
  %149 = sub i64 %147, %148
  %150 = ashr exact i64 %149, 5
  %151 = add nsw i64 %150, -1
  %152 = bitcast %"class.base::BasicStringPiece"** %146 to i64*
  %153 = bitcast %"class.std::__1::vector.93"* %14 to i64*
  %154 = icmp eq i64 %151, 0
  br i1 %154, label %581, label %155

155:                                              ; preds = %142
  %156 = icmp ugt i64 %151, 1152921504606846975
  br i1 %156, label %157, label %158

157:                                              ; preds = %155
  call void @abort() #13
  unreachable

158:                                              ; preds = %155
  %159 = bitcast %"class.base::BasicStringPiece"** %145 to i64*
  %160 = shl nsw i64 %151, 4
  %161 = call i8* @_Znwm(i64 %160) #12
  %162 = bitcast i8* %161 to %"class.base::BasicStringPiece"*
  %163 = ptrtoint i8* %161 to i64
  %164 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %162, i64 %151
  %165 = ptrtoint %"class.base::BasicStringPiece"* %164 to i64
  store i64 %163, i64* %153, align 8
  store i64 %163, i64* %159, align 8
  store i64 %165, i64* %152, align 8
  %166 = load i64, i64* %94, align 8
  %167 = load i64, i64* %96, align 8
  %168 = sub i64 %166, %167
  %169 = ashr exact i64 %168, 5
  %170 = icmp ugt i64 %169, 1
  br i1 %170, label %171, label %581

171:                                              ; preds = %158
  %172 = bitcast %"class.cbor::Value"* %17 to i8*
  %173 = bitcast %"class.base::BasicStringPiece"** %145 to i64*
  %174 = bitcast %"class.cbor::Value"* %20 to i8*
  %175 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %178 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %179 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %180 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %179, i64 0, i32 1, i32 0
  %181 = bitcast %"class.cbor::Value"* %28 to i8*
  %182 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %186 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %187 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %186, i64 0, i32 1, i32 0
  br label %188

188:                                              ; preds = %568, %171
  %189 = phi i64 [ %167, %171 ], [ %577, %568 ]
  %190 = phi i64 [ 1, %171 ], [ %575, %568 ]
  %191 = phi i8* [ null, %171 ], [ %574, %568 ]
  %192 = phi i64 [ 0, %171 ], [ %573, %568 ]
  %193 = phi i64 [ 0, %171 ], [ %572, %568 ]
  %194 = phi i8* [ null, %171 ], [ %571, %568 ]
  %195 = phi i64 [ 0, %171 ], [ %570, %568 ]
  %196 = phi i64 [ 0, %171 ], [ %569, %568 ]
  %197 = inttoptr i64 %189 to %"class.cbor::Value"*
  %198 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %197, i64 %190
  %199 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %198, i64 0, i32 0
  %200 = load i32, i32* %199, align 8
  %201 = icmp eq i32 %200, 5
  br i1 %201, label %212, label %202

202:                                              ; preds = %188
  %203 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %203) #11
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %15, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.6, i64 0, i64 0), i64 %190, i32 %200) #11
  store i8 0, i8* %54, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %15, %"class.absl::optional.83"* nonnull %16) #11
  %204 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %204, i64 0, i32 1, i32 0
  %206 = load i8, i8* %205, align 1
  %207 = icmp slt i8 %206, 0
  br i1 %207, label %208, label %211

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load i8*, i8** %209, align 8
  call void @_ZdlPv(i8* %210) #12
  br label %211

211:                                              ; preds = %208, %202
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %203) #11
  br label %646

212:                                              ; preds = %188
  %213 = call dereferenceable(24) %"class.base::flat_map"* @_ZNK4cbor5Value6GetMapEv(%"class.cbor::Value"* %198) #11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %172) #11
  call void @_ZN4cbor5ValueC1EPKcNS0_4TypeE(%"class.cbor::Value"* nonnull %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN7contentL8kCertKeyE, i64 0, i64 0), i32 3) #11
  %214 = bitcast %"class.base::flat_map"* %213 to %"struct.cbor::Value::Less"*
  %215 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %213, i64 0, i32 0, i32 0, i32 0, i32 0
  %216 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %215, align 8
  %217 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %213, i64 0, i32 0, i32 0, i32 0, i32 1
  %218 = bitcast %"struct.std::__1::pair"** %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = ptrtoint %"struct.std::__1::pair"* %216 to i64
  %221 = sub i64 %219, %220
  %222 = icmp eq i64 %221, 0
  %223 = inttoptr i64 %219 to %"struct.std::__1::pair"*
  br i1 %222, label %242, label %224

224:                                              ; preds = %212
  %225 = ashr exact i64 %221, 6
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi %"struct.std::__1::pair"* [ %216, %224 ], [ %237, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %236, %226 ]
  %229 = lshr i64 %228, 1
  %230 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %227, i64 %229
  %231 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %230, i64 0, i32 0
  %232 = call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* %214, %"class.cbor::Value"* dereferenceable(32) %231, %"class.cbor::Value"* nonnull dereferenceable(32) %17) #11
  %233 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %230, i64 1
  %234 = xor i64 %229, -1
  %235 = add i64 %228, %234
  %236 = select i1 %232, i64 %235, i64 %229
  %237 = select i1 %232, %"struct.std::__1::pair"* %233, %"struct.std::__1::pair"* %227
  %238 = icmp eq i64 %236, 0
  br i1 %238, label %239, label %226

239:                                              ; preds = %226
  %240 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %217, align 8
  %241 = ptrtoint %"struct.std::__1::pair"* %237 to i64
  br label %242

242:                                              ; preds = %239, %212
  %243 = phi i64 [ %241, %239 ], [ %220, %212 ]
  %244 = phi %"struct.std::__1::pair"* [ %240, %239 ], [ %223, %212 ]
  %245 = phi %"struct.std::__1::pair"* [ %237, %239 ], [ %216, %212 ]
  %246 = icmp eq %"struct.std::__1::pair"* %245, %244
  br i1 %246, label %253, label %247

247:                                              ; preds = %242
  %248 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %245, i64 0, i32 0
  %249 = call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* %214, %"class.cbor::Value"* nonnull dereferenceable(32) %17, %"class.cbor::Value"* dereferenceable(32) %248) #11
  br i1 %249, label %253, label %250

250:                                              ; preds = %247
  %251 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %245, i64 1
  %252 = ptrtoint %"struct.std::__1::pair"* %251 to i64
  br label %253

253:                                              ; preds = %250, %247, %242
  %254 = phi i64 [ %252, %250 ], [ %243, %242 ], [ %243, %247 ]
  %255 = inttoptr i64 %254 to %"struct.std::__1::pair"*
  %256 = icmp eq %"struct.std::__1::pair"* %245, %255
  %257 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %217, align 8
  %258 = select i1 %256, %"struct.std::__1::pair"* %257, %"struct.std::__1::pair"* %245
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %172) #11
  %259 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %217, align 8
  %260 = icmp eq %"struct.std::__1::pair"* %258, %259
  br i1 %260, label %266, label %261

261:                                              ; preds = %253
  %262 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %258, i64 0, i32 1
  %263 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %262, i64 0, i32 0
  %264 = load i32, i32* %263, align 8
  %265 = icmp eq i32 %264, 2
  br i1 %265, label %276, label %266

266:                                              ; preds = %261, %253
  %267 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %267) #11
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %18, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7, i64 0, i64 0), i64 %190) #11
  store i8 0, i8* %55, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %18, %"class.absl::optional.83"* nonnull %19) #11
  %268 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %269 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %268, i64 0, i32 1, i32 0
  %270 = load i8, i8* %269, align 1
  %271 = icmp slt i8 %270, 0
  br i1 %271, label %272, label %275

272:                                              ; preds = %266
  %273 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = load i8*, i8** %273, align 8
  call void @_ZdlPv(i8* %274) #12
  br label %275

275:                                              ; preds = %272, %266
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %267) #11
  br label %646

276:                                              ; preds = %261
  %277 = call { i8*, i64 } @_ZNK4cbor5Value21GetBytestringAsStringEv(%"class.cbor::Value"* %262) #11
  %278 = extractvalue { i8*, i64 } %277, 0
  %279 = extractvalue { i8*, i64 } %277, 1
  %280 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %145, align 8
  %281 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %146, align 8
  %282 = icmp ult %"class.base::BasicStringPiece"* %280, %281
  %283 = ptrtoint %"class.base::BasicStringPiece"* %281 to i64
  br i1 %282, label %284, label %289

284:                                              ; preds = %276
  %285 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %280, i64 0, i32 0
  store i8* %278, i8** %285, align 8
  %286 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %280, i64 0, i32 1
  store i64 %279, i64* %286, align 8
  %287 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %280, i64 1
  %288 = ptrtoint %"class.base::BasicStringPiece"* %287 to i64
  store i64 %288, i64* %173, align 8
  br label %334

289:                                              ; preds = %276
  %290 = ptrtoint %"class.base::BasicStringPiece"* %280 to i64
  %291 = load i64, i64* %153, align 8
  %292 = sub i64 %290, %291
  %293 = ashr exact i64 %292, 4
  %294 = add nsw i64 %293, 1
  %295 = icmp ugt i64 %294, 1152921504606846975
  br i1 %295, label %296, label %298

296:                                              ; preds = %289
  %297 = bitcast %"class.std::__1::vector.93"* %14 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %297) #13
  unreachable

298:                                              ; preds = %289
  %299 = sub i64 %283, %291
  %300 = ashr exact i64 %299, 4
  %301 = icmp ult i64 %300, 576460752303423487
  br i1 %301, label %302, label %310

302:                                              ; preds = %298
  %303 = ashr exact i64 %299, 3
  %304 = icmp ult i64 %303, %294
  %305 = select i1 %304, i64 %294, i64 %303
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %315, label %307

307:                                              ; preds = %302
  %308 = icmp ugt i64 %305, 1152921504606846975
  br i1 %308, label %309, label %310

309:                                              ; preds = %307
  call void @abort() #13
  unreachable

310:                                              ; preds = %307, %298
  %311 = phi i64 [ %305, %307 ], [ 1152921504606846975, %298 ]
  %312 = shl i64 %311, 4
  %313 = call i8* @_Znwm(i64 %312) #12
  %314 = bitcast i8* %313 to %"class.base::BasicStringPiece"*
  br label %315

315:                                              ; preds = %310, %302
  %316 = phi i64 [ %311, %310 ], [ 0, %302 ]
  %317 = phi i8* [ %313, %310 ], [ null, %302 ]
  %318 = phi %"class.base::BasicStringPiece"* [ %314, %310 ], [ null, %302 ]
  %319 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %318, i64 %293
  %320 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %318, i64 %316
  %321 = ptrtoint %"class.base::BasicStringPiece"* %320 to i64
  %322 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %319, i64 0, i32 0
  store i8* %278, i8** %322, align 8
  %323 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %318, i64 %293, i32 1
  store i64 %279, i64* %323, align 8
  %324 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %319, i64 1
  %325 = ptrtoint %"class.base::BasicStringPiece"* %324 to i64
  %326 = ptrtoint %"class.base::BasicStringPiece"* %318 to i64
  %327 = icmp sgt i64 %292, 0
  br i1 %327, label %328, label %330

328:                                              ; preds = %315
  %329 = inttoptr i64 %291 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %317, i8* align 8 %329, i64 %292, i1 false) #11
  br label %330

330:                                              ; preds = %328, %315
  store i64 %326, i64* %153, align 8
  store i64 %325, i64* %173, align 8
  store i64 %321, i64* %152, align 8
  %331 = icmp eq i64 %291, 0
  br i1 %331, label %334, label %332

332:                                              ; preds = %330
  %333 = inttoptr i64 %291 to i8*
  call void @_ZdlPv(i8* %333) #12
  br label %334

334:                                              ; preds = %332, %330, %284
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %174) #11
  call void @_ZN4cbor5ValueC1EPKcNS0_4TypeE(%"class.cbor::Value"* nonnull %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN7contentL8kOcspKeyE, i64 0, i64 0), i32 3) #11
  %335 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %215, align 8
  %336 = load i64, i64* %218, align 8
  %337 = ptrtoint %"struct.std::__1::pair"* %335 to i64
  %338 = sub i64 %336, %337
  %339 = icmp eq i64 %338, 0
  %340 = inttoptr i64 %336 to %"struct.std::__1::pair"*
  br i1 %339, label %359, label %341

341:                                              ; preds = %334
  %342 = ashr exact i64 %338, 6
  br label %343

343:                                              ; preds = %343, %341
  %344 = phi %"struct.std::__1::pair"* [ %335, %341 ], [ %354, %343 ]
  %345 = phi i64 [ %342, %341 ], [ %353, %343 ]
  %346 = lshr i64 %345, 1
  %347 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %344, i64 %346
  %348 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %347, i64 0, i32 0
  %349 = call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* %214, %"class.cbor::Value"* dereferenceable(32) %348, %"class.cbor::Value"* nonnull dereferenceable(32) %20) #11
  %350 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %347, i64 1
  %351 = xor i64 %346, -1
  %352 = add i64 %345, %351
  %353 = select i1 %349, i64 %352, i64 %346
  %354 = select i1 %349, %"struct.std::__1::pair"* %350, %"struct.std::__1::pair"* %344
  %355 = icmp eq i64 %353, 0
  br i1 %355, label %356, label %343

356:                                              ; preds = %343
  %357 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %217, align 8
  %358 = ptrtoint %"struct.std::__1::pair"* %354 to i64
  br label %359

359:                                              ; preds = %356, %334
  %360 = phi i64 [ %358, %356 ], [ %337, %334 ]
  %361 = phi %"struct.std::__1::pair"* [ %357, %356 ], [ %340, %334 ]
  %362 = phi %"struct.std::__1::pair"* [ %354, %356 ], [ %335, %334 ]
  %363 = icmp eq %"struct.std::__1::pair"* %362, %361
  br i1 %363, label %370, label %364

364:                                              ; preds = %359
  %365 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %362, i64 0, i32 0
  %366 = call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* %214, %"class.cbor::Value"* nonnull dereferenceable(32) %20, %"class.cbor::Value"* dereferenceable(32) %365) #11
  br i1 %366, label %370, label %367

367:                                              ; preds = %364
  %368 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %362, i64 1
  %369 = ptrtoint %"struct.std::__1::pair"* %368 to i64
  br label %370

370:                                              ; preds = %367, %364, %359
  %371 = phi i64 [ %369, %367 ], [ %360, %359 ], [ %360, %364 ]
  %372 = inttoptr i64 %371 to %"struct.std::__1::pair"*
  %373 = icmp eq %"struct.std::__1::pair"* %362, %372
  %374 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %217, align 8
  %375 = select i1 %373, %"struct.std::__1::pair"* %374, %"struct.std::__1::pair"* %362
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %174) #11
  %376 = icmp eq i64 %190, 1
  %377 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %217, align 8
  %378 = icmp eq %"struct.std::__1::pair"* %375, %377
  br i1 %376, label %379, label %448

379:                                              ; preds = %370
  br i1 %378, label %385, label %380

380:                                              ; preds = %379
  %381 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %375, i64 0, i32 1
  %382 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %381, i64 0, i32 0
  %383 = load i32, i32* %382, align 8
  %384 = icmp eq i32 %383, 2
  br i1 %384, label %399, label %385

385:                                              ; preds = %380, %379
  %386 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %386) #11
  %387 = call i8* @_Znwm(i64 64) #12
  %388 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %387, i8** %388, align 8
  %389 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %390 = bitcast i64* %389 to <2 x i64>*
  store <2 x i64> <i64 61, i64 -9223372036854775744>, <2 x i64>* %390, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %387, i8* align 1 getelementptr inbounds ([62 x i8], [62 x i8]* @.str.8, i64 0, i64 0), i64 61, i1 false) #11
  %391 = getelementptr inbounds i8, i8* %387, i64 61
  store i8 0, i8* %391, align 1
  store i8 0, i8* %56, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %21, %"class.absl::optional.83"* nonnull %22) #11
  %392 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %393 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %392, i64 0, i32 1, i32 0
  %394 = load i8, i8* %393, align 1
  %395 = icmp slt i8 %394, 0
  br i1 %395, label %396, label %398

396:                                              ; preds = %385
  %397 = load i8*, i8** %388, align 8
  call void @_ZdlPv(i8* %397) #12
  br label %398

398:                                              ; preds = %396, %385
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %386) #11
  br label %646

399:                                              ; preds = %380
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %175) #11
  %400 = call { i8*, i64 } @_ZNK4cbor5Value21GetBytestringAsStringEv(%"class.cbor::Value"* %381) #11
  %401 = extractvalue { i8*, i64 } %400, 0
  %402 = extractvalue { i8*, i64 } %400, 1
  %403 = icmp ugt i64 %402, -17
  br i1 %403, label %404, label %406

404:                                              ; preds = %399
  %405 = bitcast %"class.std::__1::basic_string"* %23 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %405) #13
  unreachable

406:                                              ; preds = %399
  %407 = icmp ult i64 %402, 23
  br i1 %407, label %413, label %408

408:                                              ; preds = %406
  %409 = add nuw i64 %402, 16
  %410 = and i64 %409, -16
  %411 = call i8* @_Znwm(i64 %410) #12
  store i8* %411, i8** %176, align 8, !alias.scope !4
  %412 = or i64 %410, -9223372036854775808
  store i64 %412, i64* %177, align 8, !alias.scope !4
  store i64 %402, i64* %178, align 8, !alias.scope !4
  br label %416

413:                                              ; preds = %406
  %414 = trunc i64 %402 to i8
  store i8 %414, i8* %180, align 1, !alias.scope !4
  %415 = icmp eq i64 %402, 0
  br i1 %415, label %418, label %416

416:                                              ; preds = %413, %408
  %417 = phi i8* [ %411, %408 ], [ %175, %413 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %417, i8* align 1 %401, i64 %402, i1 false) #11
  br label %418

418:                                              ; preds = %416, %413
  %419 = phi i8* [ %175, %413 ], [ %417, %416 ]
  %420 = getelementptr inbounds i8, i8* %419, i64 %402
  store i8 0, i8* %420, align 1
  %421 = lshr i64 %193, 56
  %422 = trunc i64 %421 to i8
  %423 = icmp slt i8 %422, 0
  br i1 %423, label %424, label %425

424:                                              ; preds = %418
  call void @_ZdlPv(i8* %191) #12
  br label %425

425:                                              ; preds = %424, %418
  %426 = load i8*, i8** %176, align 8
  %427 = load i64, i64* %178, align 8
  %428 = load i64, i64* %177, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %175) #11
  %429 = lshr i64 %428, 56
  %430 = trunc i64 %429 to i8
  %431 = icmp slt i8 %430, 0
  %432 = select i1 %431, i64 %427, i64 %429
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %459

434:                                              ; preds = %425
  %435 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %435) #11
  %436 = call i8* @_Znwm(i64 32) #12
  %437 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %436, i8** %437, align 8
  %438 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %439 = bitcast i64* %438 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %439, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %436, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0), i64 23, i1 false) #11
  %440 = getelementptr inbounds i8, i8* %436, i64 23
  store i8 0, i8* %440, align 1
  store i8 0, i8* %57, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %24, %"class.absl::optional.83"* nonnull %25) #11
  %441 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %442 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %441, i64 0, i32 1, i32 0
  %443 = load i8, i8* %442, align 1
  %444 = icmp slt i8 %443, 0
  br i1 %444, label %445, label %447

445:                                              ; preds = %434
  %446 = load i8*, i8** %437, align 8
  call void @_ZdlPv(i8* %446) #12
  br label %447

447:                                              ; preds = %445, %434
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %435) #11
  br label %646

448:                                              ; preds = %370
  br i1 %378, label %568, label %449

449:                                              ; preds = %448
  %450 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %450) #11
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %26, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.10, i64 0, i64 0), i64 %190) #11
  store i8 0, i8* %58, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %26, %"class.absl::optional.83"* nonnull %27) #11
  %451 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %452 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %451, i64 0, i32 1, i32 0
  %453 = load i8, i8* %452, align 1
  %454 = icmp slt i8 %453, 0
  br i1 %454, label %455, label %458

455:                                              ; preds = %449
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %457 = load i8*, i8** %456, align 8
  call void @_ZdlPv(i8* %457) #12
  br label %458

458:                                              ; preds = %455, %449
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %450) #11
  br label %646

459:                                              ; preds = %425
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %181) #11
  call void @_ZN4cbor5ValueC1EPKcNS0_4TypeE(%"class.cbor::Value"* nonnull %28, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN7contentL7kSctKeyE, i64 0, i64 0), i32 3) #11
  %460 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %215, align 8
  %461 = load i64, i64* %218, align 8
  %462 = ptrtoint %"struct.std::__1::pair"* %460 to i64
  %463 = sub i64 %461, %462
  %464 = icmp eq i64 %463, 0
  %465 = inttoptr i64 %461 to %"struct.std::__1::pair"*
  br i1 %464, label %484, label %466

466:                                              ; preds = %459
  %467 = ashr exact i64 %463, 6
  br label %468

468:                                              ; preds = %468, %466
  %469 = phi %"struct.std::__1::pair"* [ %460, %466 ], [ %479, %468 ]
  %470 = phi i64 [ %467, %466 ], [ %478, %468 ]
  %471 = lshr i64 %470, 1
  %472 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %469, i64 %471
  %473 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %472, i64 0, i32 0
  %474 = call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* %214, %"class.cbor::Value"* dereferenceable(32) %473, %"class.cbor::Value"* nonnull dereferenceable(32) %28) #11
  %475 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %472, i64 1
  %476 = xor i64 %471, -1
  %477 = add i64 %470, %476
  %478 = select i1 %474, i64 %477, i64 %471
  %479 = select i1 %474, %"struct.std::__1::pair"* %475, %"struct.std::__1::pair"* %469
  %480 = icmp eq i64 %478, 0
  br i1 %480, label %481, label %468

481:                                              ; preds = %468
  %482 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %217, align 8
  %483 = ptrtoint %"struct.std::__1::pair"* %479 to i64
  br label %484

484:                                              ; preds = %481, %459
  %485 = phi i64 [ %483, %481 ], [ %462, %459 ]
  %486 = phi %"struct.std::__1::pair"* [ %482, %481 ], [ %465, %459 ]
  %487 = phi %"struct.std::__1::pair"* [ %479, %481 ], [ %460, %459 ]
  %488 = icmp eq %"struct.std::__1::pair"* %487, %486
  br i1 %488, label %495, label %489

489:                                              ; preds = %484
  %490 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %487, i64 0, i32 0
  %491 = call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* %214, %"class.cbor::Value"* nonnull dereferenceable(32) %28, %"class.cbor::Value"* dereferenceable(32) %490) #11
  br i1 %491, label %495, label %492

492:                                              ; preds = %489
  %493 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %487, i64 1
  %494 = ptrtoint %"struct.std::__1::pair"* %493 to i64
  br label %495

495:                                              ; preds = %492, %489, %484
  %496 = phi i64 [ %494, %492 ], [ %485, %484 ], [ %485, %489 ]
  %497 = inttoptr i64 %496 to %"struct.std::__1::pair"*
  %498 = icmp eq %"struct.std::__1::pair"* %487, %497
  %499 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %217, align 8
  %500 = select i1 %498, %"struct.std::__1::pair"* %499, %"struct.std::__1::pair"* %487
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %181) #11
  %501 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %217, align 8
  %502 = icmp eq %"struct.std::__1::pair"* %500, %501
  br i1 %502, label %568, label %503

503:                                              ; preds = %495
  %504 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %500, i64 0, i32 1
  %505 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %504, i64 0, i32 0
  %506 = load i32, i32* %505, align 8
  %507 = icmp eq i32 %506, 2
  br i1 %507, label %522, label %508

508:                                              ; preds = %503
  %509 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %509) #11
  %510 = call i8* @_Znwm(i64 32) #12
  %511 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %510, i8** %511, align 8
  %512 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %513 = bitcast i64* %512 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %513, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %510, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0), i64 24, i1 false) #11
  %514 = getelementptr inbounds i8, i8* %510, i64 24
  store i8 0, i8* %514, align 1
  store i8 0, i8* %59, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %29, %"class.absl::optional.83"* nonnull %30) #11
  %515 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %516 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %515, i64 0, i32 1, i32 0
  %517 = load i8, i8* %516, align 1
  %518 = icmp slt i8 %517, 0
  br i1 %518, label %519, label %521

519:                                              ; preds = %508
  %520 = load i8*, i8** %511, align 8
  call void @_ZdlPv(i8* %520) #12
  br label %521

521:                                              ; preds = %519, %508
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %509) #11
  br label %646

522:                                              ; preds = %503
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %182) #11
  %523 = call { i8*, i64 } @_ZNK4cbor5Value21GetBytestringAsStringEv(%"class.cbor::Value"* %504) #11
  %524 = extractvalue { i8*, i64 } %523, 0
  %525 = extractvalue { i8*, i64 } %523, 1
  %526 = icmp ugt i64 %525, -17
  br i1 %526, label %527, label %529

527:                                              ; preds = %522
  %528 = bitcast %"class.std::__1::basic_string"* %31 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %528) #13
  unreachable

529:                                              ; preds = %522
  %530 = icmp ult i64 %525, 23
  br i1 %530, label %536, label %531

531:                                              ; preds = %529
  %532 = add nuw i64 %525, 16
  %533 = and i64 %532, -16
  %534 = call i8* @_Znwm(i64 %533) #12
  store i8* %534, i8** %183, align 8, !alias.scope !7
  %535 = or i64 %533, -9223372036854775808
  store i64 %535, i64* %184, align 8, !alias.scope !7
  store i64 %525, i64* %185, align 8, !alias.scope !7
  br label %539

536:                                              ; preds = %529
  %537 = trunc i64 %525 to i8
  store i8 %537, i8* %187, align 1, !alias.scope !7
  %538 = icmp eq i64 %525, 0
  br i1 %538, label %541, label %539

539:                                              ; preds = %536, %531
  %540 = phi i8* [ %534, %531 ], [ %182, %536 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %540, i8* align 1 %524, i64 %525, i1 false) #11
  br label %541

541:                                              ; preds = %539, %536
  %542 = phi i8* [ %182, %536 ], [ %540, %539 ]
  %543 = getelementptr inbounds i8, i8* %542, i64 %525
  store i8 0, i8* %543, align 1
  %544 = lshr i64 %196, 56
  %545 = trunc i64 %544 to i8
  %546 = icmp slt i8 %545, 0
  br i1 %546, label %547, label %548

547:                                              ; preds = %541
  call void @_ZdlPv(i8* %194) #12
  br label %548

548:                                              ; preds = %547, %541
  %549 = load i8*, i8** %183, align 8
  %550 = load i64, i64* %185, align 8
  %551 = load i64, i64* %184, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #11
  %552 = lshr i64 %551, 56
  %553 = trunc i64 %552 to i8
  %554 = icmp slt i8 %553, 0
  %555 = select i1 %554, i64 %550, i64 %552
  %556 = icmp eq i64 %555, 0
  br i1 %556, label %557, label %568

557:                                              ; preds = %548
  %558 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %558) #11
  %559 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %560 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %559, i64 0, i32 1, i32 0
  store i8 22, i8* %560, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %558, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i64 22, i1 false) #11
  %561 = getelementptr inbounds i8, i8* %558, i64 22
  store i8 0, i8* %561, align 2
  store i8 0, i8* %60, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %32, %"class.absl::optional.83"* nonnull %33) #11
  %562 = load i8, i8* %560, align 1
  %563 = icmp slt i8 %562, 0
  br i1 %563, label %564, label %567

564:                                              ; preds = %557
  %565 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %566 = load i8*, i8** %565, align 8
  call void @_ZdlPv(i8* %566) #12
  br label %567

567:                                              ; preds = %564, %557
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %558) #11
  br label %646

568:                                              ; preds = %548, %495, %448
  %569 = phi i64 [ %196, %448 ], [ %196, %495 ], [ %551, %548 ]
  %570 = phi i64 [ %195, %448 ], [ %195, %495 ], [ %550, %548 ]
  %571 = phi i8* [ %194, %448 ], [ %194, %495 ], [ %549, %548 ]
  %572 = phi i64 [ %193, %448 ], [ %428, %495 ], [ %428, %548 ]
  %573 = phi i64 [ %192, %448 ], [ %427, %495 ], [ %427, %548 ]
  %574 = phi i8* [ %191, %448 ], [ %426, %495 ], [ %426, %548 ]
  %575 = add nuw i64 %190, 1
  %576 = load i64, i64* %94, align 8
  %577 = load i64, i64* %96, align 8
  %578 = sub i64 %576, %577
  %579 = ashr exact i64 %578, 5
  %580 = icmp ult i64 %575, %579
  br i1 %580, label %188, label %581

581:                                              ; preds = %568, %142, %158
  %582 = phi i64 [ 0, %158 ], [ 0, %142 ], [ %569, %568 ]
  %583 = phi i64 [ 0, %158 ], [ 0, %142 ], [ %570, %568 ]
  %584 = phi i8* [ null, %158 ], [ null, %142 ], [ %571, %568 ]
  %585 = phi i64 [ 0, %158 ], [ 0, %142 ], [ %572, %568 ]
  %586 = phi i64 [ 0, %158 ], [ 0, %142 ], [ %573, %568 ]
  %587 = phi i8* [ null, %158 ], [ null, %142 ], [ %574, %568 ]
  %588 = call %"class.net::X509Certificate"* @_ZN3net15X509Certificate22CreateFromDERCertChainERKNSt3__16vectorIN4base16BasicStringPieceIcNS1_11char_traitsIcEEEENS1_9allocatorIS7_EEEE(%"class.std::__1::vector.93"* nonnull dereferenceable(24) %14) #11
  %589 = icmp eq %"class.net::X509Certificate"* %588, null
  br i1 %589, label %590, label %604

590:                                              ; preds = %581
  %591 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %591) #11
  %592 = call i8* @_Znwm(i64 48) #12
  %593 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %592, i8** %593, align 8
  %594 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %595 = bitcast i64* %594 to <2 x i64>*
  store <2 x i64> <i64 47, i64 -9223372036854775760>, <2 x i64>* %595, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %592, i8* align 1 getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13, i64 0, i64 0), i64 47, i1 false) #11
  %596 = getelementptr inbounds i8, i8* %592, i64 47
  store i8 0, i8* %596, align 1
  store i8 0, i8* %61, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %34, %"class.absl::optional.83"* nonnull %35) #11
  %597 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %598 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %597, i64 0, i32 1, i32 0
  %599 = load i8, i8* %598, align 1
  %600 = icmp slt i8 %599, 0
  br i1 %600, label %601, label %603

601:                                              ; preds = %590
  %602 = load i8*, i8** %593, align 8
  call void @_ZdlPv(i8* %602) #12
  br label %603

603:                                              ; preds = %601, %590
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %591) #11
  br label %646

604:                                              ; preds = %581
  %605 = call i8* @_Znwm(i64 56) #12
  %606 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %588, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %607 = atomicrmw add i32* %606, i32 1 monotonic
  %608 = bitcast i8* %605 to %"class.net::X509Certificate"**
  store %"class.net::X509Certificate"* %588, %"class.net::X509Certificate"** %608, align 8
  %609 = atomicrmw add i32* %606, i32 1 monotonic
  %610 = lshr i64 %585, 56
  %611 = trunc i64 %610 to i8
  %612 = icmp slt i8 %611, 0
  %613 = getelementptr inbounds i8, i8* %605, i64 8
  br i1 %612, label %620, label %614

614:                                              ; preds = %604
  %615 = bitcast i8* %613 to i8**
  store i8* %587, i8** %615, align 8
  %616 = getelementptr inbounds i8, i8* %605, i64 16
  %617 = bitcast i8* %616 to i64*
  store i64 %586, i64* %617, align 8
  %618 = getelementptr inbounds i8, i8* %605, i64 24
  %619 = bitcast i8* %618 to i64*
  store i64 %585, i64* %619, align 8
  br label %622

620:                                              ; preds = %604
  %621 = bitcast i8* %613 to %"class.std::__1::basic_string"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %621, i8* %587, i64 %586) #11
  br label %622

622:                                              ; preds = %620, %614
  %623 = lshr i64 %582, 56
  %624 = trunc i64 %623 to i8
  %625 = icmp slt i8 %624, 0
  %626 = getelementptr inbounds i8, i8* %605, i64 32
  br i1 %625, label %633, label %627

627:                                              ; preds = %622
  %628 = bitcast i8* %626 to i8**
  store i8* %584, i8** %628, align 8
  %629 = getelementptr inbounds i8, i8* %605, i64 40
  %630 = bitcast i8* %629 to i64*
  store i64 %583, i64* %630, align 8
  %631 = getelementptr inbounds i8, i8* %605, i64 48
  %632 = bitcast i8* %631 to i64*
  store i64 %582, i64* %632, align 8
  br label %635

633:                                              ; preds = %622
  %634 = bitcast i8* %626 to %"class.std::__1::basic_string"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %634, i8* %584, i64 %583) #11
  br label %635

635:                                              ; preds = %633, %627
  %636 = atomicrmw sub i32* %606, i32 1 acq_rel
  %637 = icmp eq i32 %636, 1
  br i1 %637, label %638, label %640

638:                                              ; preds = %635
  call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %588) #11
  %639 = bitcast %"class.net::X509Certificate"* %588 to i8*
  call void @_ZdlPv(i8* %639) #12
  br label %640

640:                                              ; preds = %638, %635
  %641 = ptrtoint i8* %605 to i64
  %642 = atomicrmw sub i32* %606, i32 1 acq_rel
  %643 = icmp eq i32 %642, 1
  br i1 %643, label %644, label %646

644:                                              ; preds = %640
  call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %588) #11
  %645 = bitcast %"class.net::X509Certificate"* %588 to i8*
  call void @_ZdlPv(i8* %645) #12
  br label %646

646:                                              ; preds = %644, %640, %603, %567, %521, %458, %447, %398, %275, %211
  %647 = phi i8* [ %587, %603 ], [ %587, %640 ], [ %587, %644 ], [ %191, %211 ], [ %426, %521 ], [ %426, %567 ], [ %191, %458 ], [ %426, %447 ], [ %191, %398 ], [ %191, %275 ]
  %648 = phi i64 [ %585, %603 ], [ %585, %640 ], [ %585, %644 ], [ %193, %211 ], [ %428, %521 ], [ %428, %567 ], [ %193, %458 ], [ %428, %447 ], [ %193, %398 ], [ %193, %275 ]
  %649 = phi i8* [ %584, %603 ], [ %584, %640 ], [ %584, %644 ], [ %194, %211 ], [ %194, %521 ], [ %549, %567 ], [ %194, %458 ], [ %194, %447 ], [ %194, %398 ], [ %194, %275 ]
  %650 = phi i64 [ %582, %603 ], [ %582, %640 ], [ %582, %644 ], [ %196, %211 ], [ %196, %521 ], [ %551, %567 ], [ %196, %458 ], [ %196, %447 ], [ %196, %398 ], [ %196, %275 ]
  %651 = phi i64 [ 0, %603 ], [ %641, %640 ], [ %641, %644 ], [ 0, %211 ], [ 0, %521 ], [ 0, %567 ], [ 0, %458 ], [ 0, %447 ], [ 0, %398 ], [ 0, %275 ]
  %652 = lshr i64 %650, 56
  %653 = trunc i64 %652 to i8
  %654 = icmp slt i8 %653, 0
  br i1 %654, label %655, label %656

655:                                              ; preds = %646
  call void @_ZdlPv(i8* %649) #12
  br label %656

656:                                              ; preds = %655, %646
  %657 = lshr i64 %648, 56
  %658 = trunc i64 %657 to i8
  %659 = icmp slt i8 %658, 0
  br i1 %659, label %660, label %661

660:                                              ; preds = %656
  call void @_ZdlPv(i8* %647) #12
  br label %661

661:                                              ; preds = %660, %656
  %662 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %144, align 8
  %663 = icmp eq %"class.base::BasicStringPiece"* %662, null
  br i1 %663, label %668, label %664

664:                                              ; preds = %661
  %665 = ptrtoint %"class.base::BasicStringPiece"* %662 to i64
  %666 = bitcast %"class.base::BasicStringPiece"** %145 to i64*
  store i64 %665, i64* %666, align 8
  %667 = bitcast %"class.base::BasicStringPiece"* %662 to i8*
  call void @_ZdlPv(i8* %667) #12
  br label %668

668:                                              ; preds = %661, %664, %129, %140, %102, %108, %82, %88, %66, %74
  %669 = phi i8* [ %67, %74 ], [ %67, %66 ], [ %83, %88 ], [ %83, %82 ], [ %103, %108 ], [ %103, %102 ], [ %130, %140 ], [ %130, %129 ], [ %143, %664 ], [ %143, %661 ]
  %670 = phi i64 [ 0, %74 ], [ 0, %66 ], [ 0, %88 ], [ 0, %82 ], [ 0, %108 ], [ 0, %102 ], [ 0, %140 ], [ 0, %129 ], [ %651, %664 ], [ %651, %661 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %669) #11
  %671 = load i8, i8* %63, align 8, !range !3
  %672 = icmp eq i8 %671, 0
  br i1 %672, label %675, label %673

673:                                              ; preds = %668
  %674 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* %674) #11
  store i8 0, i8* %63, align 8
  br label %675

675:                                              ; preds = %668, %673
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %63) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #11
  %676 = inttoptr i64 %670 to %"class.content::SignedExchangeCertificateChain"*
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %50)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %51)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %55)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %56)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %57)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %58)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %59)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %60)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %61)
  %677 = icmp eq i8* %49, null
  br i1 %677, label %682, label %678

678:                                              ; preds = %675
  %679 = load i8, i8* %49, align 1
  %680 = icmp eq i8 %679, 0
  br i1 %680, label %682, label %681

681:                                              ; preds = %678
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %49, i8* %48, i64 %47) #11
  br label %682

682:                                              ; preds = %675, %678, %681
  ret %"class.content::SignedExchangeCertificateChain"* %676
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content30SignedExchangeCertificateChainC2E13scoped_refptrIN3net15X509CertificateEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_(%"class.content::SignedExchangeCertificateChain"*, %"class.net::X509Certificate"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.content::SignedExchangeCertificateChain", %"class.content::SignedExchangeCertificateChain"* %0, i64 0, i32 0, i32 0
  store %"class.net::X509Certificate"* %1, %"class.net::X509Certificate"** %5, align 8
  %6 = icmp eq %"class.net::X509Certificate"* %1, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %4, %7
  %11 = getelementptr inbounds %"class.content::SignedExchangeCertificateChain", %"class.content::SignedExchangeCertificateChain"* %0, i64 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #11
  br label %24

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %21, i64 %23) #11
  br label %24

24:                                               ; preds = %16, %19
  %25 = getelementptr inbounds %"class.content::SignedExchangeCertificateChain", %"class.content::SignedExchangeCertificateChain"* %0, i64 0, i32 2
  %26 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %32 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false) #11
  br label %38

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %25, i8* %35, i64 %37) #11
  br label %38

38:                                               ; preds = %30, %33
  br i1 %6, label %45, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %1) #11
  %44 = bitcast %"class.net::X509Certificate"* %1 to i8*
  tail call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %38, %39, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content30SignedExchangeCertificateChainD2Ev(%"class.content::SignedExchangeCertificateChain"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::SignedExchangeCertificateChain", %"class.content::SignedExchangeCertificateChain"* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.content::SignedExchangeCertificateChain", %"class.content::SignedExchangeCertificateChain"* %0, i64 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"class.content::SignedExchangeCertificateChain", %"class.content::SignedExchangeCertificateChain"* %0, i64 0, i32 0, i32 0
  %21 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %20, align 8
  %22 = icmp eq %"class.net::X509Certificate"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %21) #11
  %28 = bitcast %"class.net::X509Certificate"* %21 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %19, %23, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7content30SignedExchangeCertificateChain18ShouldIgnoreErrorsEv(%"class.content::SignedExchangeCertificateChain"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::SignedExchangeCertificateChain", %"class.content::SignedExchangeCertificateChain"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %2, align 8
  %4 = icmp eq %"class.net::X509Certificate"* %3, null
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.21"* @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList11GetInstanceEv() #11
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"*, %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"** %7, align 8
  %9 = tail call zeroext i1 @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList26ShouldIgnoreErrorsInternalE13scoped_refptrIN3net15X509CertificateEE(%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* %8, %"class.net::X509Certificate"* null) #11
  br label %22

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  %13 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.21"* @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList11GetInstanceEv() #11
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"*, %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"** %14, align 8
  %16 = atomicrmw add i32* %11, i32 1 monotonic
  %17 = tail call zeroext i1 @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList26ShouldIgnoreErrorsInternalE13scoped_refptrIN3net15X509CertificateEE(%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* %15, %"class.net::X509Certificate"* nonnull %3) #11
  %18 = atomicrmw sub i32* %11, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %10
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %3) #11
  %21 = bitcast %"class.net::X509Certificate"* %3 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  br label %22

22:                                               ; preds = %5, %10, %20
  %23 = phi i1 [ %9, %5 ], [ %17, %10 ], [ %17, %20 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList18ShouldIgnoreErrorsE13scoped_refptrIN3net15X509CertificateEE(%"class.net::X509Certificate"*) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.21"* @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList11GetInstanceEv()
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"*, %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"** %3, align 8
  %5 = icmp eq %"class.net::X509Certificate"* %0, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = tail call zeroext i1 @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList26ShouldIgnoreErrorsInternalE13scoped_refptrIN3net15X509CertificateEE(%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* %4, %"class.net::X509Certificate"* null)
  br label %16

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  %11 = tail call zeroext i1 @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList26ShouldIgnoreErrorsInternalE13scoped_refptrIN3net15X509CertificateEE(%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* %4, %"class.net::X509Certificate"* nonnull %0)
  %12 = atomicrmw sub i32* %9, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %8
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %0) #11
  %15 = bitcast %"class.net::X509Certificate"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #12
  br label %16

16:                                               ; preds = %6, %8, %14
  %17 = phi i1 [ %7, %6 ], [ %11, %8 ], [ %11, %14 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.std::__1::unique_ptr.21"* @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList11GetInstanceEvE8instance to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %32, !prof !10

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList11GetInstanceEvE8instance) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %32, label %7

7:                                                ; preds = %4
  %8 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #11
  %9 = tail call i8* @_Znwm(i64 24) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #11
  %10 = tail call %"class.content::ContentClient"* @_ZN7content16GetContentClientEv() #11
  %11 = getelementptr inbounds %"class.content::ContentClient", %"class.content::ContentClient"* %10, i64 0, i32 1
  %12 = load %"class.content::ContentBrowserClient"*, %"class.content::ContentBrowserClient"** %11, align 8
  %13 = bitcast %"class.content::ContentBrowserClient"* %12 to i1 (%"class.content::ContentBrowserClient"*)***
  %14 = load i1 (%"class.content::ContentBrowserClient"*)**, i1 (%"class.content::ContentBrowserClient"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.content::ContentBrowserClient"*)*, i1 (%"class.content::ContentBrowserClient"*)** %14, i64 172
  %16 = load i1 (%"class.content::ContentBrowserClient"*)*, i1 (%"class.content::ContentBrowserClient"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.content::ContentBrowserClient"* %12) #11
  br i1 %17, label %18, label %30

18:                                               ; preds = %7
  %19 = bitcast i8* %9 to %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"*
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  %21 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7network8switches32kIgnoreCertificateErrorsSPKIListE, i64 0, i64 0)) #11
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %1, %"class.base::CommandLine"* %8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7network8switches32kIgnoreCertificateErrorsSPKIListE, i64 0, i64 0), i64 %21) #11
  call void @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList5ParseERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* nonnull %19, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %1) #11
  %22 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %26, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  br label %30

30:                                               ; preds = %29, %7
  %31 = ptrtoint i8* %9 to i64
  store i64 %31, i64* bitcast (%"class.base::NoDestructor"* @_ZZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList11GetInstanceEvE8instance to i64*), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList11GetInstanceEvE8instance) #11
  br label %32

32:                                               ; preds = %4, %30, %0
  ret %"class.std::__1::unique_ptr.21"* bitcast (%"class.base::NoDestructor"* @_ZZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList11GetInstanceEvE8instance to %"class.std::__1::unique_ptr.21"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList21SetInstanceForTestingENSt3__110unique_ptrIS1_NS2_14default_deleteIS1_EEEE(%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"*) local_unnamed_addr #0 align 2 {
  %2 = ptrtoint %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* %0 to i64
  %3 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.21"* @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList11GetInstanceEv()
  %4 = bitcast %"class.std::__1::unique_ptr.21"* %3 to i64*
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"*, %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"** %5, align 8
  store i64 %2, i64* %4, align 8
  ret %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIListC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* nocapture, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #11
  tail call void @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList5ParseERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList5ParseERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* nocapture, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::flat_tree", align 16
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = bitcast %"class.base::internal::flat_tree"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = select i1 %10, i8* %12, i8* %13
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %9 to i64
  %18 = select i1 %10, i64 %16, i64 %17
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %4, i8* %14, i64 %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1, i32 1, i32 0) #11
  call void @_ZN7network17CreateSPKIHashSetERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEE(%"class.base::internal::flat_tree"* nonnull sret %3, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #11
  %19 = getelementptr inbounds %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList", %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %19, align 8
  %21 = icmp eq %"struct.net::SHA256HashValue"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %2
  %23 = ptrtoint %"struct.net::SHA256HashValue"* %20 to i64
  %24 = getelementptr inbounds %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList", %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %"struct.net::SHA256HashValue"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %20, i64 0, i32 0, i64 0
  call void @_ZdlPv(i8* %26) #12
  %27 = bitcast %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #11
  br label %28

28:                                               ; preds = %2, %22
  %29 = bitcast %"class.base::internal::flat_tree"* %3 to <2 x i64>*
  %30 = load <2 x i64>, <2 x i64>* %29, align 16
  %31 = bitcast %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* %0 to <2 x i64>*
  store <2 x i64> %30, <2 x i64>* %31, align 8
  %32 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"struct.net::SHA256HashValue"** %32 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = getelementptr inbounds %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList", %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"struct.net::SHA256HashValue"** %35 to i64*
  store i64 %34, i64* %36, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 24, i1 false) #11
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %37, align 8
  %39 = icmp eq %"class.std::__1::basic_string"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %28
  %41 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %42, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %38
  br i1 %44, label %60, label %45

45:                                               ; preds = %40, %55
  %46 = phi %"class.std::__1::basic_string"* [ %47, %55 ], [ %43, %40 ]
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 -1
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %52, %45
  %56 = icmp eq %"class.std::__1::basic_string"* %47, %38
  br i1 %56, label %57, label %45

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::vector"* %4 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %57, %40
  %61 = phi i8* [ %59, %57 ], [ %41, %40 ]
  store %"class.std::__1::basic_string"* %38, %"class.std::__1::basic_string"** %42, align 8
  call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %28, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIListC2ERKN4base11CommandLineE(%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* nocapture, %"class.base::CommandLine"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #11
  %5 = tail call %"class.content::ContentClient"* @_ZN7content16GetContentClientEv() #11
  %6 = getelementptr inbounds %"class.content::ContentClient", %"class.content::ContentClient"* %5, i64 0, i32 1
  %7 = load %"class.content::ContentBrowserClient"*, %"class.content::ContentBrowserClient"** %6, align 8
  %8 = bitcast %"class.content::ContentBrowserClient"* %7 to i1 (%"class.content::ContentBrowserClient"*)***
  %9 = load i1 (%"class.content::ContentBrowserClient"*)**, i1 (%"class.content::ContentBrowserClient"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.content::ContentBrowserClient"*)*, i1 (%"class.content::ContentBrowserClient"*)** %9, i64 172
  %11 = load i1 (%"class.content::ContentBrowserClient"*)*, i1 (%"class.content::ContentBrowserClient"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.content::ContentBrowserClient"* %7) #11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7network8switches32kIgnoreCertificateErrorsSPKIListE, i64 0, i64 0)) #11
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.base::CommandLine"* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7network8switches32kIgnoreCertificateErrorsSPKIListE, i64 0, i64 0), i64 %15) #11
  call void @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList5ParseERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3)
  %16 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %13, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  br label %24

24:                                               ; preds = %2, %23
  ret void
}

declare %"class.content::ContentClient"* @_ZN7content16GetContentClientEv() local_unnamed_addr #3

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #3

declare void @_ZN7network17CreateSPKIHashSetERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEE(%"class.base::internal::flat_tree"* sret, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIListD2Ev(%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList", %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %2, align 8
  %4 = icmp eq %"struct.net::SHA256HashValue"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.net::SHA256HashValue"* %3 to i64
  %7 = getelementptr inbounds %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList", %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.net::SHA256HashValue"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %3, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content30SignedExchangeCertificateChain20IgnoreErrorsSPKIList26ShouldIgnoreErrorsInternalE13scoped_refptrIN3net15X509CertificateEE(%"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* nocapture readonly, %"class.net::X509Certificate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"struct.net::SHA256HashValue", align 1
  %5 = getelementptr inbounds %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList", %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %5, align 8
  %7 = getelementptr inbounds %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList", %"class.content::SignedExchangeCertificateChain::IgnoreErrorsSPKIList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %7, align 8
  %9 = icmp eq %"struct.net::SHA256HashValue"* %6, %8
  br i1 %9, label %68, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #11
  %12 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %12, align 8
  %14 = tail call { i8*, i64 } @_ZN3net9x509_util25CryptoBufferAsStringPieceEPK16crypto_buffer_st(%struct.crypto_buffer_st* %13) #11
  %15 = extractvalue { i8*, i64 } %14, 0
  %16 = extractvalue { i8*, i64 } %14, 1
  %17 = call zeroext i1 @_ZN3net4asn122ExtractSPKIFromDERCertEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPS6_(i8* %15, i64 %16, %"class.base::BasicStringPiece"* nonnull %3) #11
  br i1 %17, label %18, label %66

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %21, i8 -86, i64 32, i1 false)
  %22 = load i8*, i8** %19, align 8
  %23 = load i64, i64* %20, align 8
  call void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPvm(i8* %22, i64 %23, i8* nonnull %21, i64 32) #11
  %24 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %5, align 8
  %25 = bitcast %"struct.net::SHA256HashValue"** %7 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = ptrtoint %"struct.net::SHA256HashValue"* %24 to i64
  %28 = sub i64 %26, %27
  %29 = icmp eq i64 %28, 0
  %30 = inttoptr i64 %26 to %"struct.net::SHA256HashValue"*
  br i1 %29, label %49, label %31

31:                                               ; preds = %18
  %32 = ashr exact i64 %28, 5
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi %"struct.net::SHA256HashValue"* [ %24, %31 ], [ %45, %33 ]
  %35 = phi i64 [ %32, %31 ], [ %44, %33 ]
  %36 = lshr i64 %35, 1
  %37 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %34, i64 %36
  %38 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %37, i64 0, i32 0, i64 0
  %39 = call i32 @memcmp(i8* %38, i8* nonnull %21, i64 32) #14
  %40 = icmp slt i32 %39, 0
  %41 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %37, i64 1
  %42 = xor i64 %36, -1
  %43 = add i64 %35, %42
  %44 = select i1 %40, i64 %43, i64 %36
  %45 = select i1 %40, %"struct.net::SHA256HashValue"* %41, %"struct.net::SHA256HashValue"* %34
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %47, label %33

47:                                               ; preds = %33
  %48 = ptrtoint %"struct.net::SHA256HashValue"* %45 to i64
  br label %49

49:                                               ; preds = %47, %18
  %50 = phi i64 [ %48, %47 ], [ %27, %18 ]
  %51 = phi %"struct.net::SHA256HashValue"* [ %45, %47 ], [ %24, %18 ]
  %52 = icmp eq %"struct.net::SHA256HashValue"* %51, %30
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %51, i64 0, i32 0, i64 0
  %55 = call i32 @memcmp(i8* nonnull %21, i8* %54, i64 32) #14
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %51, i64 1
  %59 = ptrtoint %"struct.net::SHA256HashValue"* %58 to i64
  br label %60

60:                                               ; preds = %49, %53, %57
  %61 = phi i64 [ %59, %57 ], [ %50, %49 ], [ %50, %53 ]
  %62 = inttoptr i64 %61 to %"struct.net::SHA256HashValue"*
  %63 = icmp eq %"struct.net::SHA256HashValue"* %51, %62
  %64 = select i1 %63, %"struct.net::SHA256HashValue"* %30, %"struct.net::SHA256HashValue"* %51
  %65 = icmp ne %"struct.net::SHA256HashValue"* %64, %30
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #11
  br label %66

66:                                               ; preds = %10, %60
  %67 = phi i1 [ %65, %60 ], [ false, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  br label %68

68:                                               ; preds = %2, %66
  %69 = phi i1 [ %67, %66 ], [ false, %2 ]
  %70 = icmp eq %"class.net::X509Certificate"* %1, null
  br i1 %70, label %77, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw sub i32* %72, i32 1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %77

75:                                               ; preds = %71
  call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %1) #11
  %76 = bitcast %"class.net::X509Certificate"* %1 to i8*
  call void @_ZdlPv(i8* %76) #12
  br label %77

77:                                               ; preds = %68, %71, %75
  ret i1 %69
}

declare zeroext i1 @_ZN3net4asn122ExtractSPKIFromDERCertEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPS6_(i8*, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #3

declare { i8*, i64 } @_ZN3net9x509_util25CryptoBufferAsStringPieceEPK16crypto_buffer_st(%struct.crypto_buffer_st*) local_unnamed_addr #3

declare void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPvm(i8*, i64, i8*, i64) local_unnamed_addr #3

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4cbor6Reader4ReadEN4base4spanIKhLm18446744073709551615EEEPNS0_12DecoderErrorEi(%"class.absl::optional"* sret, i64, i8*, i32*, i32) local_unnamed_addr #3

declare void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.absl::optional.83"*) local_unnamed_addr #3

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #3

declare i8* @_ZN4cbor6Reader17ErrorCodeToStringENS0_12DecoderErrorE(i32) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::vector.68"* @_ZNK4cbor5Value8GetArrayEv(%"class.cbor::Value"*) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4cbor5Value9GetStringEv(%"class.cbor::Value"*) local_unnamed_addr #3

declare dereferenceable(24) %"class.base::flat_map"* @_ZNK4cbor5Value6GetMapEv(%"class.cbor::Value"*) local_unnamed_addr #3

declare void @_ZN4cbor5ValueC1EPKcNS0_4TypeE(%"class.cbor::Value"*, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"*) unnamed_addr #4

declare { i8*, i64 } @_ZNK4cbor5Value21GetBytestringAsStringEv(%"class.cbor::Value"*) local_unnamed_addr #3

declare %"class.net::X509Certificate"* @_ZN3net15X509Certificate22CreateFromDERCertChainERKNSt3__16vectorIN4base16BasicStringPieceIcNS1_11char_traitsIcEEEENS1_9allocatorIS7_EEEE(%"class.std::__1::vector.93"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"*, %"class.cbor::Value"* dereferenceable(32), %"class.cbor::Value"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = icmp slt i32 %5, %7
  br label %150

11:                                               ; preds = %3
  switch i32 %5, label %150 [
    i32 0, label %12
    i32 1, label %18
    i32 3, label %24
    i32 2, label %70
    i32 -2, label %110
  ]

12:                                               ; preds = %11
  %13 = tail call dereferenceable(8) i64* @_ZNK4cbor5Value10GetIntegerEv(%"class.cbor::Value"* %1) #11
  %14 = load i64, i64* %13, align 8
  %15 = tail call dereferenceable(8) i64* @_ZNK4cbor5Value10GetIntegerEv(%"class.cbor::Value"* %2) #11
  %16 = load i64, i64* %15, align 8
  %17 = icmp slt i64 %14, %16
  br label %150

18:                                               ; preds = %11
  %19 = tail call dereferenceable(8) i64* @_ZNK4cbor5Value10GetIntegerEv(%"class.cbor::Value"* %1) #11
  %20 = load i64, i64* %19, align 8
  %21 = tail call dereferenceable(8) i64* @_ZNK4cbor5Value10GetIntegerEv(%"class.cbor::Value"* %2) #11
  %22 = load i64, i64* %21, align 8
  %23 = icmp sgt i64 %20, %22
  br label %150

24:                                               ; preds = %11
  %25 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4cbor5Value9GetStringEv(%"class.cbor::Value"* %1) #11
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4cbor5Value9GetStringEv(%"class.cbor::Value"* %2) #11
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = zext i8 %37 to i64
  %42 = select i1 %38, i64 %40, i64 %41
  %43 = icmp ult i64 %33, %42
  br i1 %43, label %150, label %44

44:                                               ; preds = %24
  %45 = icmp ult i64 %42, %33
  br i1 %45, label %150, label %46

46:                                               ; preds = %44
  %47 = load i8, i8* %27, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %30, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = icmp ult i64 %42, %51
  %53 = select i1 %52, i64 %42, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %66, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %59 = select i1 %48, i8* %57, i8* %58
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %63 = select i1 %38, i8* %61, i8* %62
  %64 = tail call i32 @memcmp(i8* %59, i8* %63, i64 %53) #11
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %55, %46
  %67 = icmp ult i64 %51, %42
  br label %150

68:                                               ; preds = %55
  %69 = icmp slt i32 %64, 0
  br label %150

70:                                               ; preds = %11
  %71 = tail call dereferenceable(24) %"class.std::__1::vector.62"* @_ZNK4cbor5Value13GetBytestringEv(%"class.cbor::Value"* %1) #11
  %72 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %71, i64 0, i32 0, i32 1
  %73 = bitcast i8** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.std::__1::vector.62"* %71 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = tail call dereferenceable(24) %"class.std::__1::vector.62"* @_ZNK4cbor5Value13GetBytestringEv(%"class.cbor::Value"* %2) #11
  %79 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %78, i64 0, i32 0, i32 1
  %80 = bitcast i8** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.std::__1::vector.62"* %78 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = sub i64 %81, %83
  %85 = icmp ult i64 %77, %84
  %86 = inttoptr i64 %83 to i8*
  %87 = inttoptr i64 %81 to i8*
  br i1 %85, label %150, label %88

88:                                               ; preds = %70
  %89 = icmp ult i64 %84, %77
  br i1 %89, label %150, label %90

90:                                               ; preds = %88
  %91 = load i8*, i8** %72, align 8
  %92 = icmp eq i8* %86, %87
  br i1 %92, label %150, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %71, i64 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  br label %96

96:                                               ; preds = %106, %93
  %97 = phi i8* [ %107, %106 ], [ %95, %93 ]
  %98 = phi i8* [ %108, %106 ], [ %86, %93 ]
  %99 = icmp eq i8* %97, %91
  br i1 %99, label %150, label %100

100:                                              ; preds = %96
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %98, align 1
  %103 = icmp ult i8 %101, %102
  br i1 %103, label %150, label %104

104:                                              ; preds = %100
  %105 = icmp ult i8 %102, %101
  br i1 %105, label %150, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds i8, i8* %97, i64 1
  %108 = getelementptr inbounds i8, i8* %98, i64 1
  %109 = icmp eq i8* %108, %87
  br i1 %109, label %150, label %96

110:                                              ; preds = %11
  %111 = tail call dereferenceable(24) %"class.std::__1::vector.62"* @_ZNK4cbor5Value14GetInvalidUTF8Ev(%"class.cbor::Value"* %1) #11
  %112 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %111, i64 0, i32 0, i32 1
  %113 = bitcast i8** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::vector.62"* %111 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %114, %116
  %118 = tail call dereferenceable(24) %"class.std::__1::vector.62"* @_ZNK4cbor5Value14GetInvalidUTF8Ev(%"class.cbor::Value"* %2) #11
  %119 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %118, i64 0, i32 0, i32 1
  %120 = bitcast i8** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.std::__1::vector.62"* %118 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = sub i64 %121, %123
  %125 = icmp ult i64 %117, %124
  %126 = inttoptr i64 %123 to i8*
  %127 = inttoptr i64 %121 to i8*
  br i1 %125, label %150, label %128

128:                                              ; preds = %110
  %129 = icmp ult i64 %124, %117
  br i1 %129, label %150, label %130

130:                                              ; preds = %128
  %131 = load i8*, i8** %112, align 8
  %132 = icmp eq i8* %126, %127
  br i1 %132, label %150, label %133

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %111, i64 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  br label %136

136:                                              ; preds = %146, %133
  %137 = phi i8* [ %147, %146 ], [ %135, %133 ]
  %138 = phi i8* [ %148, %146 ], [ %126, %133 ]
  %139 = icmp eq i8* %137, %131
  br i1 %139, label %150, label %140

140:                                              ; preds = %136
  %141 = load i8, i8* %137, align 1
  %142 = load i8, i8* %138, align 1
  %143 = icmp ult i8 %141, %142
  br i1 %143, label %150, label %144

144:                                              ; preds = %140
  %145 = icmp ult i8 %142, %141
  br i1 %145, label %150, label %146

146:                                              ; preds = %144
  %147 = getelementptr inbounds i8, i8* %137, i64 1
  %148 = getelementptr inbounds i8, i8* %138, i64 1
  %149 = icmp eq i8* %148, %127
  br i1 %149, label %150, label %136

150:                                              ; preds = %146, %144, %140, %136, %106, %104, %100, %96, %130, %128, %110, %90, %88, %70, %68, %66, %44, %24, %11, %18, %12, %9
  %151 = phi i1 [ %10, %9 ], [ %23, %18 ], [ %17, %12 ], [ false, %11 ], [ true, %24 ], [ false, %44 ], [ %67, %66 ], [ %69, %68 ], [ true, %70 ], [ false, %88 ], [ false, %90 ], [ true, %110 ], [ false, %128 ], [ false, %130 ], [ true, %100 ], [ true, %96 ], [ false, %106 ], [ false, %104 ], [ true, %140 ], [ true, %136 ], [ false, %146 ], [ false, %144 ]
  ret i1 %151
}

declare dereferenceable(8) i64* @_ZNK4cbor5Value10GetIntegerEv(%"class.cbor::Value"*) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::vector.62"* @_ZNK4cbor5Value13GetBytestringEv(%"class.cbor::Value"*) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::vector.62"* @_ZNK4cbor5Value14GetInvalidUTF8Ev(%"class.cbor::Value"*) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!6 = distinct !{!6, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!10 = !{!"branch_weights", i32 1, i32 1048575}
