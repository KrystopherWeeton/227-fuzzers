; ModuleID = 'gen/services/viz/privileged/mojom/viz_main.mojom-test-utils.cc'
source_filename = "gen/services/viz/privileged/mojom/viz_main.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::mojom::VizDebugOutputAsyncWaiter" = type { %"class.viz::mojom::VizDebugOutput"* }
%"class.viz::mojom::VizDebugOutput" = type { i32 (...)** }
%"class.viz::mojom::VizMainAsyncWaiter" = type { %"class.viz::mojom::VizMain"* }
%"class.viz::mojom::VizMain" = type { i32 (...)** }
%"class.viz::mojom::VizDebugOutputInterceptorForTesting" = type { %"class.viz::mojom::VizDebugOutput" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.0" }
%"union.absl::variant_internal::DestructibleUnionImpl.0" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.viz::mojom::VizMainInterceptorForTesting" = type { %"class.viz::mojom::VizMain" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.viz::mojom::FrameSinkManagerParams"* }
%"class.viz::mojom::FrameSinkManagerParams" = type <{ i32, i8, [3 x i8], i32, [4 x i8], %"class.mojo::PendingReceiver", %"class.mojo::PendingRemote", %"struct.viz::DebugRendererSettings", [3 x i8] }>
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.34, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.36", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.33", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.33" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.34 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.35" }>
%"class.base::RefCountedThreadSafe.35" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl.39" }
%"struct.std::__1::__cxx_atomic_impl.39" = type { %"struct.std::__1::__cxx_atomic_base_impl.40" }
%"struct.std::__1::__cxx_atomic_base_impl.40" = type { i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"struct.viz::DebugRendererSettings" = type { i8, i8, i8, i8, i8 }
%"class.mojo::PendingReceiver.41" = type { %"struct.mojo::internal::PendingReceiverState" }
%"class.mojo::PendingRemote.42" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingRemote.43" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::ScopedHandleBase.44" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.mojo::StructPtr.45" = type { %"class.std::__1::unique_ptr.46" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.viz::mojom::VizDevToolsParams"* }
%"class.viz::mojom::VizDevToolsParams" = type <{ %"class.mojo::PendingRemote.49", i16, [2 x i8] }>
%"class.mojo::PendingRemote.49" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingRemote.53" = type { %"struct.mojo::internal::PendingRemoteState" }

$_ZN3viz5mojom14VizDebugOutputD2Ev = comdat any

$_ZN3viz5mojom35VizDebugOutputInterceptorForTestingD0Ev = comdat any

$_ZN3viz5mojom7VizMainD2Ev = comdat any

$_ZN3viz5mojom28VizMainInterceptorForTestingD0Ev = comdat any

@_ZTVN3viz5mojom35VizDebugOutputInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::mojom::VizDebugOutput"*)* @_ZN3viz5mojom14VizDebugOutputD2Ev to i8*), i8* bitcast (void (%"class.viz::mojom::VizDebugOutputInterceptorForTesting"*)* @_ZN3viz5mojom35VizDebugOutputInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.viz::mojom::VizDebugOutputInterceptorForTesting"*, %"class.base::Value"*)* @_ZN3viz5mojom35VizDebugOutputInterceptorForTesting8LogFrameEN4base5ValueE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN3viz5mojom28VizMainInterceptorForTestingE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::mojom::VizMain"*)* @_ZN3viz5mojom7VizMainD2Ev to i8*), i8* bitcast (void (%"class.viz::mojom::VizMainInterceptorForTesting"*)* @_ZN3viz5mojom28VizMainInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.viz::mojom::VizMainInterceptorForTesting"*, %"class.mojo::StructPtr"*)* @_ZN3viz5mojom28VizMainInterceptorForTesting22CreateFrameSinkManagerEN4mojo9StructPtrINS0_22FrameSinkManagerParamsEEE to i8*), i8* bitcast (void (%"class.viz::mojom::VizMainInterceptorForTesting"*, %"class.mojo::PendingReceiver.41"*, %"class.mojo::PendingRemote.42"*, %"class.mojo::PendingRemote.43"*, %"class.mojo::ScopedHandleBase.44"*, i32)* @_ZN3viz5mojom28VizMainInterceptorForTesting16CreateGpuServiceEN4mojo15PendingReceiverINS0_10GpuServiceEEENS2_13PendingRemoteINS0_7GpuHostEEENS6_IN18discardable_memory5mojom30DiscardableSharedMemoryManagerEEENS2_16ScopedHandleBaseINS2_18SharedBufferHandleEEEN3gfx16FontRenderParams17SubpixelRenderingE to i8*), i8* bitcast (void (%"class.viz::mojom::VizMainInterceptorForTesting"*, %"class.mojo::StructPtr.45"*)* @_ZN3viz5mojom28VizMainInterceptorForTesting17CreateVizDevToolsEN4mojo9StructPtrINS0_17VizDevToolsParamsEEE to i8*), i8* bitcast (void (%"class.viz::mojom::VizMainInterceptorForTesting"*, %"class.mojo::PendingRemote.53"*)* @_ZN3viz5mojom28VizMainInterceptorForTesting16StartDebugStreamEN4mojo13PendingRemoteINS0_14VizDebugOutputEEE to i8*), i8* bitcast (void (%"class.viz::mojom::VizMainInterceptorForTesting"*, %"class.base::Value"*)* @_ZN3viz5mojom28VizMainInterceptorForTesting17FilterDebugStreamEN4base5ValueE to i8*), i8* bitcast (void (%"class.viz::mojom::VizMainInterceptorForTesting"*)* @_ZN3viz5mojom28VizMainInterceptorForTesting15StopDebugStreamEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN3viz5mojom25VizDebugOutputAsyncWaiterC1EPNS0_14VizDebugOutputE = hidden unnamed_addr alias void (%"class.viz::mojom::VizDebugOutputAsyncWaiter"*, %"class.viz::mojom::VizDebugOutput"*), void (%"class.viz::mojom::VizDebugOutputAsyncWaiter"*, %"class.viz::mojom::VizDebugOutput"*)* @_ZN3viz5mojom25VizDebugOutputAsyncWaiterC2EPNS0_14VizDebugOutputE
@_ZN3viz5mojom25VizDebugOutputAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::VizDebugOutputAsyncWaiter"*), void (%"class.viz::mojom::VizDebugOutputAsyncWaiter"*)* @_ZN3viz5mojom25VizDebugOutputAsyncWaiterD2Ev
@_ZN3viz5mojom18VizMainAsyncWaiterC1EPNS0_7VizMainE = hidden unnamed_addr alias void (%"class.viz::mojom::VizMainAsyncWaiter"*, %"class.viz::mojom::VizMain"*), void (%"class.viz::mojom::VizMainAsyncWaiter"*, %"class.viz::mojom::VizMain"*)* @_ZN3viz5mojom18VizMainAsyncWaiterC2EPNS0_7VizMainE
@_ZN3viz5mojom18VizMainAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::VizMainAsyncWaiter"*), void (%"class.viz::mojom::VizMainAsyncWaiter"*)* @_ZN3viz5mojom18VizMainAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom35VizDebugOutputInterceptorForTesting8LogFrameEN4base5ValueE(%"class.viz::mojom::VizDebugOutputInterceptorForTesting"*, %"class.base::Value"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Value", align 8
  %4 = bitcast %"class.viz::mojom::VizDebugOutputInterceptorForTesting"* %0 to %"class.viz::mojom::VizDebugOutput"* (%"class.viz::mojom::VizDebugOutputInterceptorForTesting"*)***
  %5 = load %"class.viz::mojom::VizDebugOutput"* (%"class.viz::mojom::VizDebugOutputInterceptorForTesting"*)**, %"class.viz::mojom::VizDebugOutput"* (%"class.viz::mojom::VizDebugOutputInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.viz::mojom::VizDebugOutput"* (%"class.viz::mojom::VizDebugOutputInterceptorForTesting"*)*, %"class.viz::mojom::VizDebugOutput"* (%"class.viz::mojom::VizDebugOutputInterceptorForTesting"*)** %5, i64 3
  %7 = load %"class.viz::mojom::VizDebugOutput"* (%"class.viz::mojom::VizDebugOutputInterceptorForTesting"*)*, %"class.viz::mojom::VizDebugOutput"* (%"class.viz::mojom::VizDebugOutputInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.viz::mojom::VizDebugOutput"* %7(%"class.viz::mojom::VizDebugOutputInterceptorForTesting"* %0) #8
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #8
  %9 = bitcast %"class.viz::mojom::VizDebugOutput"* %8 to void (%"class.viz::mojom::VizDebugOutput"*, %"class.base::Value"*)***
  %10 = load void (%"class.viz::mojom::VizDebugOutput"*, %"class.base::Value"*)**, void (%"class.viz::mojom::VizDebugOutput"*, %"class.base::Value"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.viz::mojom::VizDebugOutput"*, %"class.base::Value"*)*, void (%"class.viz::mojom::VizDebugOutput"*, %"class.base::Value"*)** %10, i64 2
  %12 = load void (%"class.viz::mojom::VizDebugOutput"*, %"class.base::Value"*)*, void (%"class.viz::mojom::VizDebugOutput"*, %"class.base::Value"*)** %11, align 8
  call void %12(%"class.viz::mojom::VizDebugOutput"* %8, %"class.base::Value"* nonnull %3) #8
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz5mojom25VizDebugOutputAsyncWaiterC2EPNS0_14VizDebugOutputE(%"class.viz::mojom::VizDebugOutputAsyncWaiter"* nocapture, %"class.viz::mojom::VizDebugOutput"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.viz::mojom::VizDebugOutputAsyncWaiter", %"class.viz::mojom::VizDebugOutputAsyncWaiter"* %0, i64 0, i32 0
  store %"class.viz::mojom::VizDebugOutput"* %1, %"class.viz::mojom::VizDebugOutput"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz5mojom25VizDebugOutputAsyncWaiterD2Ev(%"class.viz::mojom::VizDebugOutputAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom28VizMainInterceptorForTesting22CreateFrameSinkManagerEN4mojo9StructPtrINS0_22FrameSinkManagerParamsEEE(%"class.viz::mojom::VizMainInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr", align 8
  %4 = bitcast %"class.viz::mojom::VizMainInterceptorForTesting"* %0 to %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)***
  %5 = load %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)**, %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)*, %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)** %5, i64 8
  %7 = load %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)*, %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.viz::mojom::VizMain"* %7(%"class.viz::mojom::VizMainInterceptorForTesting"* %0) #8
  %9 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %10 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 0, i64* %11, align 8
  %13 = bitcast %"class.viz::mojom::VizMain"* %8 to void (%"class.viz::mojom::VizMain"*, %"class.mojo::StructPtr"*)***
  %14 = load void (%"class.viz::mojom::VizMain"*, %"class.mojo::StructPtr"*)**, void (%"class.viz::mojom::VizMain"*, %"class.mojo::StructPtr"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.viz::mojom::VizMain"*, %"class.mojo::StructPtr"*)*, void (%"class.viz::mojom::VizMain"*, %"class.mojo::StructPtr"*)** %14, i64 2
  %16 = load void (%"class.viz::mojom::VizMain"*, %"class.mojo::StructPtr"*)*, void (%"class.viz::mojom::VizMain"*, %"class.mojo::StructPtr"*)** %15, align 8
  call void %16(%"class.viz::mojom::VizMain"* %8, %"class.mojo::StructPtr"* nonnull %3) #8
  %17 = load %"class.viz::mojom::FrameSinkManagerParams"*, %"class.viz::mojom::FrameSinkManagerParams"** %10, align 8
  store %"class.viz::mojom::FrameSinkManagerParams"* null, %"class.viz::mojom::FrameSinkManagerParams"** %10, align 8
  %18 = icmp eq %"class.viz::mojom::FrameSinkManagerParams"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  call void @_ZN3viz5mojom22FrameSinkManagerParamsD1Ev(%"class.viz::mojom::FrameSinkManagerParams"* nonnull %17) #8
  %20 = bitcast %"class.viz::mojom::FrameSinkManagerParams"* %17 to i8*
  call void @_ZdlPv(i8* %20) #9
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom28VizMainInterceptorForTesting16CreateGpuServiceEN4mojo15PendingReceiverINS0_10GpuServiceEEENS2_13PendingRemoteINS0_7GpuHostEEENS6_IN18discardable_memory5mojom30DiscardableSharedMemoryManagerEEENS2_16ScopedHandleBaseINS2_18SharedBufferHandleEEEN3gfx16FontRenderParams17SubpixelRenderingE(%"class.viz::mojom::VizMainInterceptorForTesting"*, %"class.mojo::PendingReceiver.41"*, %"class.mojo::PendingRemote.42"*, %"class.mojo::PendingRemote.43"*, %"class.mojo::ScopedHandleBase.44"* nocapture, i32) unnamed_addr #0 align 2 {
  %7 = alloca %"class.mojo::PendingReceiver.41", align 8
  %8 = alloca %"class.mojo::PendingRemote.42", align 4
  %9 = alloca %"class.mojo::PendingRemote.43", align 4
  %10 = alloca %"class.mojo::ScopedHandleBase.44", align 4
  %11 = bitcast %"class.viz::mojom::VizMainInterceptorForTesting"* %0 to %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)***
  %12 = load %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)**, %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)*, %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)** %12, i64 8
  %14 = load %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)*, %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)** %13, align 8
  %15 = tail call %"class.viz::mojom::VizMain"* %14(%"class.viz::mojom::VizMainInterceptorForTesting"* %0) #8
  %16 = getelementptr inbounds %"class.mojo::PendingReceiver.41", %"class.mojo::PendingReceiver.41"* %7, i64 0, i32 0
  %17 = getelementptr inbounds %"class.mojo::PendingReceiver.41", %"class.mojo::PendingReceiver.41"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %16, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %17) #8
  %18 = getelementptr inbounds %"class.mojo::PendingRemote.42", %"class.mojo::PendingRemote.42"* %8, i64 0, i32 0
  %19 = getelementptr inbounds %"class.mojo::PendingRemote.42", %"class.mojo::PendingRemote.42"* %2, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %18, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %19) #8
  %20 = getelementptr inbounds %"class.mojo::PendingRemote.43", %"class.mojo::PendingRemote.43"* %9, i64 0, i32 0
  %21 = getelementptr inbounds %"class.mojo::PendingRemote.43", %"class.mojo::PendingRemote.43"* %3, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %20, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %21) #8
  %22 = getelementptr inbounds %"class.mojo::ScopedHandleBase.44", %"class.mojo::ScopedHandleBase.44"* %10, i64 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.mojo::ScopedHandleBase.44", %"class.mojo::ScopedHandleBase.44"* %4, i64 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4, !noalias !2
  store i32 %24, i32* %22, align 4, !alias.scope !2
  store i32 0, i32* %23, align 4, !noalias !2
  %25 = bitcast %"class.viz::mojom::VizMain"* %15 to void (%"class.viz::mojom::VizMain"*, %"class.mojo::PendingReceiver.41"*, %"class.mojo::PendingRemote.42"*, %"class.mojo::PendingRemote.43"*, %"class.mojo::ScopedHandleBase.44"*, i32)***
  %26 = load void (%"class.viz::mojom::VizMain"*, %"class.mojo::PendingReceiver.41"*, %"class.mojo::PendingRemote.42"*, %"class.mojo::PendingRemote.43"*, %"class.mojo::ScopedHandleBase.44"*, i32)**, void (%"class.viz::mojom::VizMain"*, %"class.mojo::PendingReceiver.41"*, %"class.mojo::PendingRemote.42"*, %"class.mojo::PendingRemote.43"*, %"class.mojo::ScopedHandleBase.44"*, i32)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.viz::mojom::VizMain"*, %"class.mojo::PendingReceiver.41"*, %"class.mojo::PendingRemote.42"*, %"class.mojo::PendingRemote.43"*, %"class.mojo::ScopedHandleBase.44"*, i32)*, void (%"class.viz::mojom::VizMain"*, %"class.mojo::PendingReceiver.41"*, %"class.mojo::PendingRemote.42"*, %"class.mojo::PendingRemote.43"*, %"class.mojo::ScopedHandleBase.44"*, i32)** %26, i64 3
  %28 = load void (%"class.viz::mojom::VizMain"*, %"class.mojo::PendingReceiver.41"*, %"class.mojo::PendingRemote.42"*, %"class.mojo::PendingRemote.43"*, %"class.mojo::ScopedHandleBase.44"*, i32)*, void (%"class.viz::mojom::VizMain"*, %"class.mojo::PendingReceiver.41"*, %"class.mojo::PendingRemote.42"*, %"class.mojo::PendingRemote.43"*, %"class.mojo::ScopedHandleBase.44"*, i32)** %27, align 8
  call void %28(%"class.viz::mojom::VizMain"* %15, %"class.mojo::PendingReceiver.41"* nonnull %7, %"class.mojo::PendingRemote.42"* nonnull %8, %"class.mojo::PendingRemote.43"* nonnull %9, %"class.mojo::ScopedHandleBase.44"* nonnull %10, i32 %5) #8
  %29 = load i32, i32* %22, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %6
  %32 = call i32 @MojoClose(i32 %29) #8
  br label %33

33:                                               ; preds = %6, %31
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %20) #8
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %18) #8
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %16) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom28VizMainInterceptorForTesting17CreateVizDevToolsEN4mojo9StructPtrINS0_17VizDevToolsParamsEEE(%"class.viz::mojom::VizMainInterceptorForTesting"*, %"class.mojo::StructPtr.45"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr.45", align 8
  %4 = bitcast %"class.viz::mojom::VizMainInterceptorForTesting"* %0 to %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)***
  %5 = load %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)**, %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)*, %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)** %5, i64 8
  %7 = load %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)*, %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.viz::mojom::VizMain"* %7(%"class.viz::mojom::VizMainInterceptorForTesting"* %0) #8
  %9 = bitcast %"class.mojo::StructPtr.45"* %3 to i64*
  %10 = getelementptr inbounds %"class.mojo::StructPtr.45", %"class.mojo::StructPtr.45"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.mojo::StructPtr.45"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 0, i64* %11, align 8
  %13 = bitcast %"class.viz::mojom::VizMain"* %8 to void (%"class.viz::mojom::VizMain"*, %"class.mojo::StructPtr.45"*)***
  %14 = load void (%"class.viz::mojom::VizMain"*, %"class.mojo::StructPtr.45"*)**, void (%"class.viz::mojom::VizMain"*, %"class.mojo::StructPtr.45"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.viz::mojom::VizMain"*, %"class.mojo::StructPtr.45"*)*, void (%"class.viz::mojom::VizMain"*, %"class.mojo::StructPtr.45"*)** %14, i64 4
  %16 = load void (%"class.viz::mojom::VizMain"*, %"class.mojo::StructPtr.45"*)*, void (%"class.viz::mojom::VizMain"*, %"class.mojo::StructPtr.45"*)** %15, align 8
  call void %16(%"class.viz::mojom::VizMain"* %8, %"class.mojo::StructPtr.45"* nonnull %3) #8
  %17 = load %"class.viz::mojom::VizDevToolsParams"*, %"class.viz::mojom::VizDevToolsParams"** %10, align 8
  store %"class.viz::mojom::VizDevToolsParams"* null, %"class.viz::mojom::VizDevToolsParams"** %10, align 8
  %18 = icmp eq %"class.viz::mojom::VizDevToolsParams"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  call void @_ZN3viz5mojom17VizDevToolsParamsD1Ev(%"class.viz::mojom::VizDevToolsParams"* nonnull %17) #8
  %20 = bitcast %"class.viz::mojom::VizDevToolsParams"* %17 to i8*
  call void @_ZdlPv(i8* %20) #9
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom28VizMainInterceptorForTesting16StartDebugStreamEN4mojo13PendingRemoteINS0_14VizDebugOutputEEE(%"class.viz::mojom::VizMainInterceptorForTesting"*, %"class.mojo::PendingRemote.53"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingRemote.53", align 4
  %4 = bitcast %"class.viz::mojom::VizMainInterceptorForTesting"* %0 to %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)***
  %5 = load %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)**, %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)*, %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)** %5, i64 8
  %7 = load %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)*, %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.viz::mojom::VizMain"* %7(%"class.viz::mojom::VizMainInterceptorForTesting"* %0) #8
  %9 = getelementptr inbounds %"class.mojo::PendingRemote.53", %"class.mojo::PendingRemote.53"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingRemote.53", %"class.mojo::PendingRemote.53"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %9, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %10) #8
  %11 = bitcast %"class.viz::mojom::VizMain"* %8 to void (%"class.viz::mojom::VizMain"*, %"class.mojo::PendingRemote.53"*)***
  %12 = load void (%"class.viz::mojom::VizMain"*, %"class.mojo::PendingRemote.53"*)**, void (%"class.viz::mojom::VizMain"*, %"class.mojo::PendingRemote.53"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.viz::mojom::VizMain"*, %"class.mojo::PendingRemote.53"*)*, void (%"class.viz::mojom::VizMain"*, %"class.mojo::PendingRemote.53"*)** %12, i64 5
  %14 = load void (%"class.viz::mojom::VizMain"*, %"class.mojo::PendingRemote.53"*)*, void (%"class.viz::mojom::VizMain"*, %"class.mojo::PendingRemote.53"*)** %13, align 8
  call void %14(%"class.viz::mojom::VizMain"* %8, %"class.mojo::PendingRemote.53"* nonnull %3) #8
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %9) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom28VizMainInterceptorForTesting17FilterDebugStreamEN4base5ValueE(%"class.viz::mojom::VizMainInterceptorForTesting"*, %"class.base::Value"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Value", align 8
  %4 = bitcast %"class.viz::mojom::VizMainInterceptorForTesting"* %0 to %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)***
  %5 = load %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)**, %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)*, %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)** %5, i64 8
  %7 = load %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)*, %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.viz::mojom::VizMain"* %7(%"class.viz::mojom::VizMainInterceptorForTesting"* %0) #8
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #8
  %9 = bitcast %"class.viz::mojom::VizMain"* %8 to void (%"class.viz::mojom::VizMain"*, %"class.base::Value"*)***
  %10 = load void (%"class.viz::mojom::VizMain"*, %"class.base::Value"*)**, void (%"class.viz::mojom::VizMain"*, %"class.base::Value"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.viz::mojom::VizMain"*, %"class.base::Value"*)*, void (%"class.viz::mojom::VizMain"*, %"class.base::Value"*)** %10, i64 6
  %12 = load void (%"class.viz::mojom::VizMain"*, %"class.base::Value"*)*, void (%"class.viz::mojom::VizMain"*, %"class.base::Value"*)** %11, align 8
  call void %12(%"class.viz::mojom::VizMain"* %8, %"class.base::Value"* nonnull %3) #8
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom28VizMainInterceptorForTesting15StopDebugStreamEv(%"class.viz::mojom::VizMainInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.viz::mojom::VizMainInterceptorForTesting"* %0 to %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)***
  %3 = load %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)**, %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)*, %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)** %3, i64 8
  %5 = load %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)*, %"class.viz::mojom::VizMain"* (%"class.viz::mojom::VizMainInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.viz::mojom::VizMain"* %5(%"class.viz::mojom::VizMainInterceptorForTesting"* %0) #8
  %7 = bitcast %"class.viz::mojom::VizMain"* %6 to void (%"class.viz::mojom::VizMain"*)***
  %8 = load void (%"class.viz::mojom::VizMain"*)**, void (%"class.viz::mojom::VizMain"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.viz::mojom::VizMain"*)*, void (%"class.viz::mojom::VizMain"*)** %8, i64 7
  %10 = load void (%"class.viz::mojom::VizMain"*)*, void (%"class.viz::mojom::VizMain"*)** %9, align 8
  tail call void %10(%"class.viz::mojom::VizMain"* %6) #8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz5mojom18VizMainAsyncWaiterC2EPNS0_7VizMainE(%"class.viz::mojom::VizMainAsyncWaiter"* nocapture, %"class.viz::mojom::VizMain"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.viz::mojom::VizMainAsyncWaiter", %"class.viz::mojom::VizMainAsyncWaiter"* %0, i64 0, i32 0
  store %"class.viz::mojom::VizMain"* %1, %"class.viz::mojom::VizMain"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz5mojom18VizMainAsyncWaiterD2Ev(%"class.viz::mojom::VizMainAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom14VizDebugOutputD2Ev(%"class.viz::mojom::VizDebugOutput"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom35VizDebugOutputInterceptorForTestingD0Ev(%"class.viz::mojom::VizDebugOutputInterceptorForTesting"*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom7VizMainD2Ev(%"class.viz::mojom::VizMain"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom28VizMainInterceptorForTestingD0Ev(%"class.viz::mojom::VizMainInterceptorForTesting"*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN3viz5mojom22FrameSinkManagerParamsD1Ev(%"class.viz::mojom::FrameSinkManagerParams"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3viz5mojom17VizDevToolsParamsD1Ev(%"class.viz::mojom::VizDevToolsParams"*) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare i32 @MojoClose(i32) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4mojo16ScopedHandleBaseINS_18SharedBufferHandleEE7releaseEv: argument 0"}
!4 = distinct !{!4, !"_ZN4mojo16ScopedHandleBaseINS_18SharedBufferHandleEE7releaseEv"}
