; ModuleID = '../../third_party/blink/renderer/core/layout/column_balancer.cc'
source_filename = "../../third_party/blink/renderer/core/layout/column_balancer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::InitialColumnHeightFinder" = type { %"class.blink::ColumnBalancer.base", %"class.WTF::Vector.1730", %"class.WTF::Vector.1735", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::ColumnBalancer.base" = type <{ i32 (...)**, %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }>
%"class.WTF::Vector.1730" = type { %"class.WTF::VectorBuffer.1731" }
%"class.WTF::VectorBuffer.1731" = type { %"class.WTF::VectorBufferBase.1732", [256 x i8] }
%"class.WTF::VectorBufferBase.1732" = type { %"class.blink::InitialColumnHeightFinder::ContentRun"*, i32, i32 }
%"class.blink::InitialColumnHeightFinder::ContentRun" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1735" = type { %"class.WTF::VectorBuffer.1736" }
%"class.WTF::VectorBuffer.1736" = type { %"class.WTF::VectorBufferBase.1737", [128 x i8] }
%"class.WTF::VectorBufferBase.1737" = type { %"class.blink::LayoutUnit"*, i32, i32 }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::LayoutMultiColumnSet" = type { %"class.blink::LayoutBlockFlow", %"class.blink::MultiColumnFragmentainerGroupList", %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32 }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1667", %"class.std::__1::unique_ptr.1677" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1623, %"class.WTF::Vector.1624", %"class.std::__1::unique_ptr.1629", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1650, %"class.blink::Persistent.1651" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1772 }
%class.scoped_refptr.1772 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1773", %"class.WTF::Vector.630", %"class.WTF::Vector.1775", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1773" = type { %"class.base::RefCounted.1774" }
%"class.base::RefCounted.1774" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1775" = type { %"class.WTF::VectorBuffer.1776" }
%"class.WTF::VectorBuffer.1776" = type { %"class.WTF::VectorBufferBase.1777" }
%"class.WTF::VectorBufferBase.1777" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1778 }
%union.anon.1778 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1758" }
%"class.blink::Member.1758" = type { %"class.blink::MemberBase.1759" }
%"class.blink::MemberBase.1759" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1760" }
%"class.blink::Member.1760" = type { %"class.blink::MemberBase.1761" }
%"class.blink::MemberBase.1761" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1786 }
%class.scoped_refptr.1786 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.1796" }
%"class.blink::Member.1796" = type { %"class.blink::MemberBase.1797" }
%"class.blink::MemberBase.1797" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1792" }
%"class.blink::MemberBase.1792" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1793" }
%"class.blink::MemberBase.1793" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1794" }
%"class.blink::MemberBase.1794" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1795" }
%"class.blink::MemberBase.1795" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1787", %"class.WTF::Vector.1787" }
%"class.WTF::Vector.1787" = type { %"class.WTF::VectorBuffer.1788" }
%"class.WTF::VectorBuffer.1788" = type { %"class.WTF::VectorBufferBase.1789" }
%"class.WTF::VectorBufferBase.1789" = type { %class.scoped_refptr.1786*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1762" }
%"class.WTF::Vector.1762" = type { %"class.WTF::VectorBuffer.1763" }
%"class.WTF::VectorBuffer.1763" = type { %"class.WTF::VectorBufferBase.1764" }
%"class.WTF::VectorBufferBase.1764" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1767", %"class.absl::optional.1767", %"class.absl::optional.1767" }
%"class.absl::optional.1767" = type { %"class.absl::optional_internal::optional_data.1768" }
%"class.absl::optional_internal::optional_data.1768" = type { %"class.absl::optional_internal::optional_data_base.1769" }
%"class.absl::optional_internal::optional_data_base.1769" = type { %"class.absl::optional_internal::optional_data_dtor_base.1770" }
%"class.absl::optional_internal::optional_data_dtor_base.1770" = type { i8, %union.anon.1771 }
%union.anon.1771 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1782" }
%"class.WTF::VectorBuffer.1782" = type { %"class.WTF::VectorBufferBase.1783", [32 x i8] }
%"class.WTF::VectorBufferBase.1783" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1623 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1624" = type { %"class.WTF::VectorBuffer.1625" }
%"class.WTF::VectorBuffer.1625" = type { %"class.WTF::VectorBufferBase.1626", [8 x i8] }
%"class.WTF::VectorBufferBase.1626" = type { %class.scoped_refptr.1623*, i32, i32 }
%"class.std::__1::unique_ptr.1629" = type { %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1632", %"class.absl::optional.1637", %"class.absl::optional.1642" }
%"class.absl::optional.1632" = type { %"class.absl::optional_internal::optional_data.1633" }
%"class.absl::optional_internal::optional_data.1633" = type { %"class.absl::optional_internal::optional_data_base.1634" }
%"class.absl::optional_internal::optional_data_base.1634" = type { %"class.absl::optional_internal::optional_data_dtor_base.1635" }
%"class.absl::optional_internal::optional_data_dtor_base.1635" = type { i8, %union.anon.1636 }
%union.anon.1636 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1637" = type { %"class.absl::optional_internal::optional_data.1638" }
%"class.absl::optional_internal::optional_data.1638" = type { %"class.absl::optional_internal::optional_data_base.1639" }
%"class.absl::optional_internal::optional_data_base.1639" = type { %"class.absl::optional_internal::optional_data_dtor_base.1640" }
%"class.absl::optional_internal::optional_data_dtor_base.1640" = type { i8, [3 x i8], %union.anon.1641 }
%union.anon.1641 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1642" = type { %"class.absl::optional_internal::optional_data.1643" }
%"class.absl::optional_internal::optional_data.1643" = type { %"class.absl::optional_internal::optional_data_base.1644" }
%"class.absl::optional_internal::optional_data_base.1644" = type { %"class.absl::optional_internal::optional_data_dtor_base.1645" }
%"class.absl::optional_internal::optional_data_dtor_base.1645" = type { i8, %union.anon.1646 }
%union.anon.1646 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1650 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1651" = type { %"class.blink::PersistentBase.1652" }
%"class.blink::PersistentBase.1652" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1655", %"struct.blink::PhysicalRect", %"class.blink::Member.1665" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"class.WTF::HashSet.1658"* }
%"class.WTF::HashSet.1658" = type { %"class.WTF::HashTable.1659" }
%"class.WTF::HashTable.1659" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1665" = type { %"class.blink::MemberBase.1666" }
%"class.blink::MemberBase.1666" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1667" = type { %"class.blink::PersistentBase.1668" }
%"class.blink::PersistentBase.1668" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1671", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type <{ %"class.blink::LayoutFlowThread.base", [7 x i8], %"class.blink::FragmentationContext", %"class.blink::LayoutMultiColumnSet"*, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutFlowThread.base" = type <{ %"class.blink::LayoutBlockFlow", %"class.WTF::LinkedHashSet", %"class.WTF::PODIntervalTree.1723", i8 }>
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1713", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1713" = type { %"class.WTF::HashTable.1714" }
%"class.WTF::HashTable.1714" = type <{ %"struct.WTF::KeyValuePair.1717"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1717" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1718", i32, i32 }
%"class.WTF::Vector.1718" = type { %"class.WTF::VectorBuffer.1719" }
%"class.WTF::VectorBuffer.1719" = type { %"class.WTF::VectorBufferBase.1720" }
%"class.WTF::VectorBufferBase.1720" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.WTF::PODIntervalTree.1723" = type { %"class.WTF::PODRedBlackTree.base.1727", [7 x i8] }
%"class.WTF::PODRedBlackTree.base.1727" = type <{ i32 (...)**, %class.scoped_refptr.1725, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, i8 }>
%class.scoped_refptr.1725 = type { %"class.WTF::PODFreeListArena.1726"* }
%"class.WTF::PODFreeListArena.1726" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node" = type opaque
%"class.blink::FragmentationContext" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1671" = type { %"class.std::__1::__compressed_pair.1672" }
%"class.std::__1::__compressed_pair.1672" = type { %"struct.std::__1::__compressed_pair_elem.1673" }
%"struct.std::__1::__compressed_pair_elem.1673" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1680", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1680" = type { %"class.WTF::HashTable.1683", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1683" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1686", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1689, %"class.std::__1::unique_ptr.1690", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1689 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1728", i16, %class.scoped_refptr.1689 }
%"class.WTF::ThreadSafeRefCounted.1728" = type { %"class.base::RefCountedThreadSafe.1729" }
%"class.base::RefCountedThreadSafe.1729" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1690" = type { %"class.std::__1::__compressed_pair.1691" }
%"class.std::__1::__compressed_pair.1691" = type { %"struct.std::__1::__compressed_pair_elem.1692" }
%"struct.std::__1::__compressed_pair_elem.1692" = type { %"class.WTF::Vector.1693"* }
%"class.WTF::Vector.1693" = type { %"class.WTF::VectorBuffer.1694" }
%"class.WTF::VectorBuffer.1694" = type { %"class.WTF::VectorBufferBase.1695" }
%"class.WTF::VectorBufferBase.1695" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1704, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.1704 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::MultiColumnFragmentainerGroupList" = type { %"class.blink::LayoutMultiColumnSet"*, %"class.WTF::Vector.1708" }
%"class.WTF::Vector.1708" = type { %"class.WTF::VectorBuffer.1709" }
%"class.WTF::VectorBuffer.1709" = type { %"class.WTF::VectorBufferBase.1710", [32 x i8] }
%"class.WTF::VectorBufferBase.1710" = type { %"class.blink::MultiColumnFragmentainerGroup"*, i32, i32 }
%"class.blink::MultiColumnFragmentainerGroup" = type <{ %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.blink::LayoutFlowThread" = type <{ %"class.blink::LayoutBlockFlow", %"class.WTF::LinkedHashSet", %"class.WTF::PODIntervalTree.1723", i8, [7 x i8] }>
%"class.blink::MinimumSpaceShortageFinder" = type { %"class.blink::ColumnBalancer.base", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32 }
%"class.blink::ColumnBalancer" = type <{ i32 (...)**, %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8] }>
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZNK3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25InitialColumnHeightFinder10ContentRunEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZTVN5blink14ColumnBalancerE = comdat any

@_ZTVN5blink14ColumnBalancerE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink25InitialColumnHeightFinderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InitialColumnHeightFinder"*, %"class.blink::LayoutBox"*, i32, i32)* @_ZN5blink25InitialColumnHeightFinder23ExamineBoxAfterEnteringERKNS_9LayoutBoxENS_10LayoutUnitENS_13EBreakBetweenE to i8*), i8* bitcast (void (%"class.blink::InitialColumnHeightFinder"*, %"class.blink::LayoutBox"*, i32)* @_ZN5blink25InitialColumnHeightFinder23ExamineBoxBeforeLeavingERKNS_9LayoutBoxENS_10LayoutUnitE to i8*), i8* bitcast (void (%"class.blink::InitialColumnHeightFinder"*, %"class.blink::RootInlineBox"*)* @_ZN5blink25InitialColumnHeightFinder11ExamineLineERKNS_13RootInlineBoxE to i8*)] }, align 8
@_ZTVN5blink26MinimumSpaceShortageFinderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::MinimumSpaceShortageFinder"*, %"class.blink::LayoutBox"*, i32, i32)* @_ZN5blink26MinimumSpaceShortageFinder23ExamineBoxAfterEnteringERKNS_9LayoutBoxENS_10LayoutUnitENS_13EBreakBetweenE to i8*), i8* bitcast (void (%"class.blink::MinimumSpaceShortageFinder"*, %"class.blink::LayoutBox"*, i32)* @_ZN5blink26MinimumSpaceShortageFinder23ExamineBoxBeforeLeavingERKNS_9LayoutBoxENS_10LayoutUnitE to i8*), i8* bitcast (void (%"class.blink::MinimumSpaceShortageFinder"*, %"class.blink::RootInlineBox"*)* @_ZN5blink26MinimumSpaceShortageFinder11ExamineLineERKNS_13RootInlineBoxE to i8*)] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutUnit]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25InitialColumnHeightFinder10ContentRunEEEPKcv = private unnamed_addr constant [92 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InitialColumnHeightFinder::ContentRun]\00", align 1

@_ZN5blink25InitialColumnHeightFinderC1ERKNS_20LayoutMultiColumnSetENS_10LayoutUnitES4_ = hidden unnamed_addr alias void (%"class.blink::InitialColumnHeightFinder"*, %"class.blink::LayoutMultiColumnSet"*, i32, i32), void (%"class.blink::InitialColumnHeightFinder"*, %"class.blink::LayoutMultiColumnSet"*, i32, i32)* @_ZN5blink25InitialColumnHeightFinderC2ERKNS_20LayoutMultiColumnSetENS_10LayoutUnitES4_
@_ZN5blink26MinimumSpaceShortageFinderC1ERKNS_20LayoutMultiColumnSetENS_10LayoutUnitES4_ = hidden unnamed_addr alias void (%"class.blink::MinimumSpaceShortageFinder"*, %"class.blink::LayoutMultiColumnSet"*, i32, i32), void (%"class.blink::MinimumSpaceShortageFinder"*, %"class.blink::LayoutMultiColumnSet"*, i32, i32)* @_ZN5blink26MinimumSpaceShortageFinderC2ERKNS_20LayoutMultiColumnSetENS_10LayoutUnitES4_

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink14ColumnBalancerC2ERKNS_20LayoutMultiColumnSetENS_10LayoutUnitES4_(%"class.blink::ColumnBalancer"* nocapture, %"class.blink::LayoutMultiColumnSet"* dereferenceable(360), i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::ColumnBalancer", %"class.blink::ColumnBalancer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink14ColumnBalancerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::ColumnBalancer", %"class.blink::ColumnBalancer"* %0, i64 0, i32 1
  store %"class.blink::LayoutMultiColumnSet"* %1, %"class.blink::LayoutMultiColumnSet"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::ColumnBalancer", %"class.blink::ColumnBalancer"* %0, i64 0, i32 2, i32 0
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::ColumnBalancer", %"class.blink::ColumnBalancer"* %0, i64 0, i32 3, i32 0
  store i32 %3, i32* %8, align 4
  %9 = getelementptr inbounds %"class.blink::ColumnBalancer", %"class.blink::ColumnBalancer"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %9, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ColumnBalancer8TraverseEv(%"class.blink::ColumnBalancer"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::ColumnBalancer", %"class.blink::ColumnBalancer"* %0, i64 0, i32 1
  %3 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %3, i64 0, i32 2
  %5 = load %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutFlowThread"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %5, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink14ColumnBalancer15TraverseSubtreeERKNS_9LayoutBoxE(%"class.blink::ColumnBalancer"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ColumnBalancer15TraverseSubtreeERKNS_9LayoutBoxE(%"class.blink::ColumnBalancer"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %5 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %5, i64 24
  %7 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::LayoutObject"* %3) #8
  %9 = bitcast %"class.blink::LayoutBox"* %1 to %"class.blink::LayoutBlockFlow"*
  %10 = select i1 %8, %"class.blink::LayoutBlockFlow"* %9, %"class.blink::LayoutBlockFlow"* null
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = load i96, i96* %12, align 4
  %14 = and i96 %13, 17592186044416
  %15 = icmp ne i96 %14, 0
  %16 = icmp ne %"class.blink::LayoutBlockFlow"* %10, null
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %63

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %10, i64 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.blink::InlineFlowBox"** %19 to %"class.blink::RootInlineBox"**
  %21 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %20, align 8
  %22 = icmp eq %"class.blink::RootInlineBox"* %21, null
  br i1 %22, label %63, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::ColumnBalancer", %"class.blink::ColumnBalancer"* %0, i64 0, i32 4, i32 0
  %25 = getelementptr inbounds %"class.blink::ColumnBalancer", %"class.blink::ColumnBalancer"* %0, i64 0, i32 2, i32 0
  %26 = getelementptr inbounds %"class.blink::ColumnBalancer", %"class.blink::ColumnBalancer"* %0, i64 0, i32 3, i32 0
  %27 = bitcast %"class.blink::ColumnBalancer"* %0 to void (%"class.blink::ColumnBalancer"*, %"class.blink::RootInlineBox"*)***
  br label %28

28:                                               ; preds = %58, %23
  %29 = phi %"class.blink::RootInlineBox"* [ %21, %23 ], [ %61, %58 ]
  %30 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %29, i64 0, i32 7, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = load i32, i32* %24, align 4
  %33 = icmp slt i32 %31, 0
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %32, i32 %31) #8
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = select i1 %36, i32 %34, i32 %37, !prof !2
  %39 = load i32, i32* %25, align 8
  %40 = icmp slt i32 %38, %39
  br i1 %40, label %41, label %51

41:                                               ; preds = %28
  %42 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %29, i64 0, i32 8, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp slt i32 %43, 0
  %45 = select i1 %44, i32 -2147483648, i32 2147483647
  %46 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %32, i32 %43) #8
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 %45, i32 %48, !prof !2
  %50 = icmp sgt i32 %49, %39
  br i1 %50, label %51, label %58

51:                                               ; preds = %41, %28
  %52 = load i32, i32* %26, align 4
  %53 = icmp slt i32 %38, %52
  br i1 %53, label %54, label %63

54:                                               ; preds = %51
  %55 = load void (%"class.blink::ColumnBalancer"*, %"class.blink::RootInlineBox"*)**, void (%"class.blink::ColumnBalancer"*, %"class.blink::RootInlineBox"*)*** %27, align 8
  %56 = getelementptr inbounds void (%"class.blink::ColumnBalancer"*, %"class.blink::RootInlineBox"*)*, void (%"class.blink::ColumnBalancer"*, %"class.blink::RootInlineBox"*)** %55, i64 2
  %57 = load void (%"class.blink::ColumnBalancer"*, %"class.blink::RootInlineBox"*)*, void (%"class.blink::ColumnBalancer"*, %"class.blink::RootInlineBox"*)** %56, align 8
  tail call void %57(%"class.blink::ColumnBalancer"* %0, %"class.blink::RootInlineBox"* nonnull dereferenceable(160) %29) #8
  br label %58

58:                                               ; preds = %54, %41
  %59 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %29, i64 0, i32 0, i32 5
  %60 = bitcast %"class.blink::InlineFlowBox"** %59 to %"class.blink::RootInlineBox"**
  %61 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %60, align 8
  %62 = icmp eq %"class.blink::RootInlineBox"* %61, null
  br i1 %62, label %63, label %28

63:                                               ; preds = %58, %51, %18, %2
  tail call void @_ZN5blink14ColumnBalancer16TraverseChildrenERKNS_12LayoutObjectE(%"class.blink::ColumnBalancer"* %0, %"class.blink::LayoutObject"* dereferenceable(88) %3)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ColumnBalancer13TraverseLinesERKNS_15LayoutBlockFlowE(%"class.blink::ColumnBalancer"*, %"class.blink::LayoutBlockFlow"* nocapture readonly dereferenceable(280)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.blink::InlineFlowBox"** %3 to %"class.blink::RootInlineBox"**
  %5 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %4, align 8
  %6 = icmp eq %"class.blink::RootInlineBox"* %5, null
  br i1 %6, label %47, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::ColumnBalancer", %"class.blink::ColumnBalancer"* %0, i64 0, i32 4, i32 0
  %9 = getelementptr inbounds %"class.blink::ColumnBalancer", %"class.blink::ColumnBalancer"* %0, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %"class.blink::ColumnBalancer", %"class.blink::ColumnBalancer"* %0, i64 0, i32 3, i32 0
  %11 = bitcast %"class.blink::ColumnBalancer"* %0 to void (%"class.blink::ColumnBalancer"*, %"class.blink::RootInlineBox"*)***
  br label %12

12:                                               ; preds = %7, %42
  %13 = phi %"class.blink::RootInlineBox"* [ %5, %7 ], [ %45, %42 ]
  %14 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %13, i64 0, i32 7, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = load i32, i32* %8, align 4
  %17 = icmp slt i32 %15, 0
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %16, i32 %15) #8
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !2
  %23 = load i32, i32* %9, align 8
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %25, label %35

25:                                               ; preds = %12
  %26 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %13, i64 0, i32 8, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 0
  %29 = select i1 %28, i32 -2147483648, i32 2147483647
  %30 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %16, i32 %27) #8
  %31 = extractvalue { i32, i1 } %30, 1
  %32 = extractvalue { i32, i1 } %30, 0
  %33 = select i1 %31, i32 %29, i32 %32, !prof !2
  %34 = icmp sgt i32 %33, %23
  br i1 %34, label %35, label %42

35:                                               ; preds = %25, %12
  %36 = load i32, i32* %10, align 4
  %37 = icmp slt i32 %22, %36
  br i1 %37, label %38, label %47

38:                                               ; preds = %35
  %39 = load void (%"class.blink::ColumnBalancer"*, %"class.blink::RootInlineBox"*)**, void (%"class.blink::ColumnBalancer"*, %"class.blink::RootInlineBox"*)*** %11, align 8
  %40 = getelementptr inbounds void (%"class.blink::ColumnBalancer"*, %"class.blink::RootInlineBox"*)*, void (%"class.blink::ColumnBalancer"*, %"class.blink::RootInlineBox"*)** %39, i64 2
  %41 = load void (%"class.blink::ColumnBalancer"*, %"class.blink::RootInlineBox"*)*, void (%"class.blink::ColumnBalancer"*, %"class.blink::RootInlineBox"*)** %40, align 8
  tail call void %41(%"class.blink::ColumnBalancer"* %0, %"class.blink::RootInlineBox"* nonnull dereferenceable(160) %13) #8
  br label %42

42:                                               ; preds = %25, %38
  %43 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %13, i64 0, i32 0, i32 5
  %44 = bitcast %"class.blink::InlineFlowBox"** %43 to %"class.blink::RootInlineBox"**
  %45 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %44, align 8
  %46 = icmp eq %"class.blink::RootInlineBox"* %45, null
  br i1 %46, label %47, label %12

47:                                               ; preds = %42, %35, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ColumnBalancer16TraverseChildrenERKNS_12LayoutObjectE(%"class.blink::ColumnBalancer"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %4 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %4, i64 13
  %6 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %5, align 8
  %7 = tail call %"class.blink::LayoutObjectChildList"* %6(%"class.blink::LayoutObject"* %1) #8
  %8 = icmp eq %"class.blink::LayoutObjectChildList"* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %7, i64 0, i32 0
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = icmp eq %"class.blink::LayoutObject"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %15 = getelementptr inbounds %"class.blink::ColumnBalancer", %"class.blink::ColumnBalancer"* %0, i64 0, i32 4, i32 0
  %16 = getelementptr inbounds %"class.blink::ColumnBalancer", %"class.blink::ColumnBalancer"* %0, i64 0, i32 2, i32 0
  %17 = getelementptr inbounds %"class.blink::ColumnBalancer", %"class.blink::ColumnBalancer"* %0, i64 0, i32 3, i32 0
  %18 = bitcast %"class.blink::ColumnBalancer"* %0 to void (%"class.blink::ColumnBalancer"*, %"class.blink::LayoutBox"*, i32, i32)***
  %19 = bitcast %"class.blink::ColumnBalancer"* %0 to void (%"class.blink::ColumnBalancer"*, %"class.blink::LayoutBox"*, i32)***
  br label %21

20:                                               ; preds = %274, %2, %9
  ret void

21:                                               ; preds = %13, %274
  %22 = phi i32 [ 2, %13 ], [ %275, %274 ]
  %23 = phi %"class.blink::LayoutObject"* [ %11, %13 ], [ %277, %274 ]
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 4
  %25 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %24 to i96*
  %26 = load i96, i96* %25, align 4
  %27 = and i96 %26, 67108864
  %28 = icmp eq i96 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %21
  %30 = bitcast %"class.blink::LayoutObject"* %23 to i1 (%"class.blink::LayoutObject"*)***
  %31 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %31, i64 26
  %33 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::LayoutObject"* nonnull %23) #8
  br i1 %34, label %35, label %274

35:                                               ; preds = %29
  tail call void @_ZN5blink14ColumnBalancer16TraverseChildrenERKNS_12LayoutObjectE(%"class.blink::ColumnBalancer"* %0, %"class.blink::LayoutObject"* nonnull dereferenceable(88) %23)
  br label %274

36:                                               ; preds = %21
  %37 = bitcast %"class.blink::LayoutObject"* %23 to %"class.blink::LayoutBox"*
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 5, i32 0
  %39 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %39, i64 0, i32 0, i32 9
  %41 = bitcast [20 x i8]* %40 to i160*
  %42 = load i160, i160* %41, align 8
  %43 = and i160 %42, 15211807202738752817960438464512
  %44 = icmp eq i160 %43, 0
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 1, i32 4
  %46 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %45 to i32*
  %47 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 1, i32 1, i32 1
  %48 = bitcast i8* %47 to i32*
  %49 = select i1 %44, i32* %46, i32* %48
  %50 = load i32, i32* %49, align 4
  %51 = bitcast %"class.blink::LayoutObject"* %23 to i32 (%"class.blink::LayoutBox"*)***
  %52 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %51, align 8
  %53 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %52, i64 146
  %54 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %53, align 8
  %55 = tail call i32 %54(%"class.blink::LayoutBox"* nonnull %37) #8
  %56 = load i96, i96* %25, align 4
  %57 = and i96 %56, 8388608
  %58 = icmp eq i96 %57, 0
  br i1 %58, label %167, label %59

59:                                               ; preds = %36
  %60 = bitcast %"class.blink::LayoutObject"* %23 to %"class.blink::LayoutBoxModelObject"*
  %61 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %62 = icmp eq %"class.blink::ComputedStyle"* %61, null
  br i1 %62, label %63, label %65

63:                                               ; preds = %59
  %64 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %38, align 8, !noalias !3
  br label %65

65:                                               ; preds = %63, %59
  %66 = phi %"class.blink::ComputedStyle"* [ %64, %63 ], [ %61, %59 ]
  %67 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %66, i64 0, i32 0, i32 9
  %68 = bitcast [20 x i8]* %67 to i160*
  %69 = load i160, i160* %68, align 8, !noalias !3
  %70 = lshr i160 %69, 102
  %71 = trunc i160 %70 to i8
  %72 = and i8 %71, 3
  %73 = bitcast %"class.blink::LayoutObject"* %23 to i8*
  switch i8 %72, label %74 [
    i8 0, label %83
    i8 1, label %75
  ]

74:                                               ; preds = %65
  br label %75

75:                                               ; preds = %74, %65
  %76 = phi { i64, i64 } [ { i64 1033, i64 0 }, %74 ], [ { i64 1041, i64 0 }, %65 ]
  %77 = extractvalue { i64, i64 } %76, 0
  %78 = extractvalue { i64, i64 } %76, 1
  %79 = getelementptr inbounds i8, i8* %73, i64 %78
  %80 = bitcast i8* %79 to %"class.blink::LayoutBoxModelObject"*
  %81 = and i64 %77, 1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %93, label %83

83:                                               ; preds = %75, %65
  %84 = phi %"class.blink::LayoutBoxModelObject"* [ %80, %75 ], [ %60, %65 ]
  %85 = phi i8* [ %79, %75 ], [ %73, %65 ]
  %86 = phi i64 [ %77, %75 ], [ 1017, %65 ]
  %87 = bitcast i8* %85 to i8**
  %88 = load i8*, i8** %87, align 8
  %89 = add i64 %86, -1
  %90 = getelementptr i8, i8* %88, i64 %89
  %91 = bitcast i8* %90 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %92 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %91, align 8
  br label %95

93:                                               ; preds = %75
  %94 = inttoptr i64 %77 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %95

95:                                               ; preds = %83, %93
  %96 = phi %"class.blink::LayoutBoxModelObject"* [ %84, %83 ], [ %80, %93 ]
  %97 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %92, %83 ], [ %94, %93 ]
  %98 = tail call i32 %97(%"class.blink::LayoutBoxModelObject"* %96) #8
  %99 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %100 = icmp eq %"class.blink::ComputedStyle"* %99, null
  br i1 %100, label %101, label %103

101:                                              ; preds = %95
  %102 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %38, align 8, !noalias !6
  br label %103

103:                                              ; preds = %101, %95
  %104 = phi %"class.blink::ComputedStyle"* [ %102, %101 ], [ %99, %95 ]
  %105 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %104, i64 0, i32 0, i32 9
  %106 = bitcast [20 x i8]* %105 to i160*
  %107 = load i160, i160* %106, align 8, !noalias !6
  %108 = lshr i160 %107, 102
  %109 = trunc i160 %108 to i8
  %110 = and i8 %109, 3
  switch i8 %110, label %111 [
    i8 0, label %120
    i8 1, label %112
  ]

111:                                              ; preds = %103
  br label %112

112:                                              ; preds = %111, %103
  %113 = phi { i64, i64 } [ { i64 1041, i64 0 }, %111 ], [ { i64 1033, i64 0 }, %103 ]
  %114 = extractvalue { i64, i64 } %113, 0
  %115 = extractvalue { i64, i64 } %113, 1
  %116 = getelementptr inbounds i8, i8* %73, i64 %115
  %117 = bitcast i8* %116 to %"class.blink::LayoutBoxModelObject"*
  %118 = and i64 %114, 1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %130, label %120

120:                                              ; preds = %112, %103
  %121 = phi %"class.blink::LayoutBoxModelObject"* [ %117, %112 ], [ %60, %103 ]
  %122 = phi i8* [ %116, %112 ], [ %73, %103 ]
  %123 = phi i64 [ %114, %112 ], [ 1025, %103 ]
  %124 = bitcast i8* %122 to i8**
  %125 = load i8*, i8** %124, align 8
  %126 = add i64 %123, -1
  %127 = getelementptr i8, i8* %125, i64 %126
  %128 = bitcast i8* %127 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %129 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %128, align 8
  br label %132

130:                                              ; preds = %112
  %131 = inttoptr i64 %114 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %132

132:                                              ; preds = %120, %130
  %133 = phi %"class.blink::LayoutBoxModelObject"* [ %121, %120 ], [ %117, %130 ]
  %134 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %129, %120 ], [ %131, %130 ]
  %135 = tail call i32 %134(%"class.blink::LayoutBoxModelObject"* %133) #8
  %136 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %38, align 8
  %137 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %136, i64 0, i32 0, i32 9
  %138 = bitcast [20 x i8]* %137 to i160*
  %139 = load i160, i160* %138, align 8
  %140 = and i160 %139, 15211807202738752817960438464512
  %141 = icmp eq i160 %140, 0
  %142 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 1, i32 4, i32 0, i64 8
  %143 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 1, i32 4, i32 0, i64 4
  %144 = select i1 %141, i8* %142, i8* %143
  %145 = bitcast i8* %144 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = icmp slt i32 %135, 0
  %148 = select i1 %147, i32 -2147483648, i32 2147483647
  %149 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %146, i32 %135) #8
  %150 = extractvalue { i32, i1 } %149, 1
  %151 = extractvalue { i32, i1 } %149, 0
  %152 = select i1 %150, i32 %148, i32 %151, !prof !2
  %153 = icmp slt i32 %55, %152
  %154 = select i1 %153, i32 %152, i32 %55
  %155 = icmp sgt i32 %98, -1
  %156 = select i1 %155, i32 -2147483648, i32 2147483647
  %157 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %50, i32 %98) #8
  %158 = extractvalue { i32, i1 } %157, 1
  %159 = extractvalue { i32, i1 } %157, 0
  %160 = select i1 %158, i32 %156, i32 %159, !prof !2
  %161 = icmp slt i32 %98, 0
  %162 = select i1 %161, i32 -2147483648, i32 2147483647
  %163 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %154, i32 %98) #8
  %164 = extractvalue { i32, i1 } %163, 1
  %165 = extractvalue { i32, i1 } %163, 0
  %166 = select i1 %164, i32 %162, i32 %165, !prof !2
  br label %167

167:                                              ; preds = %36, %132
  %168 = phi i32 [ %166, %132 ], [ %55, %36 ]
  %169 = phi i32 [ %160, %132 ], [ %50, %36 ]
  %170 = phi i32 [ %98, %132 ], [ 0, %36 ]
  %171 = load i32, i32* %15, align 4
  %172 = icmp slt i32 %169, 0
  %173 = select i1 %172, i32 -2147483648, i32 2147483647
  %174 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %171, i32 %169) #8
  %175 = extractvalue { i32, i1 } %174, 1
  %176 = extractvalue { i32, i1 } %174, 0
  %177 = select i1 %175, i32 %173, i32 %176, !prof !2
  %178 = icmp slt i32 %168, 0
  %179 = select i1 %178, i32 -2147483648, i32 2147483647
  %180 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %177, i32 %168) #8
  %181 = extractvalue { i32, i1 } %180, 1
  %182 = extractvalue { i32, i1 } %180, 0
  %183 = select i1 %181, i32 %179, i32 %182, !prof !2
  %184 = load i32, i32* %16, align 8
  %185 = icmp sgt i32 %183, %184
  br i1 %185, label %186, label %274

186:                                              ; preds = %167
  %187 = load i32, i32* %17, align 4
  %188 = icmp slt i32 %177, %187
  br i1 %188, label %189, label %274

189:                                              ; preds = %186
  %190 = load i96, i96* %25, align 4
  %191 = and i96 %190, 113336795588871485128704
  %192 = icmp eq i96 %191, 75557863725914323419136
  br i1 %192, label %274, label %193

193:                                              ; preds = %189
  %194 = bitcast %"class.blink::ComputedStyle"** %38 to %"class.blink::ComputedStyleBase"**
  %195 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %194, align 8
  %196 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %195, i64 0, i32 3, i32 0, i32 0
  %197 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %196, align 8
  %198 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %197, i64 0, i32 2, i32 0, i32 0
  %199 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %198, align 8
  %200 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %199, i64 0, i32 2, i32 0, i32 0
  %201 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %200, align 8
  %202 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %201, i64 0, i32 45
  %203 = load i32, i32* %202, align 4
  %204 = and i32 %203, 536870912
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %213, label %206

206:                                              ; preds = %193
  %207 = bitcast %"class.blink::LayoutObject"* %23 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %208 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %207, align 8
  %209 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %208, i64 44
  %210 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %209, align 8
  %211 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %210(%"class.blink::LayoutObject"* nonnull %23) #8
  %212 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %211, null
  br i1 %212, label %213, label %274

213:                                              ; preds = %206, %193
  %214 = bitcast %"class.blink::LayoutObject"* %23 to i1 (%"class.blink::LayoutObject"*, i32)***
  %215 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %214, align 8
  %216 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %215, i64 92
  %217 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %216, align 8
  %218 = tail call zeroext i1 %217(%"class.blink::LayoutObject"* nonnull %23, i32 49) #8
  %219 = bitcast %"class.blink::LayoutObject"* %23 to i1 (%"class.blink::LayoutObject"*)***
  br i1 %218, label %220, label %225

220:                                              ; preds = %213
  %221 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %219, align 8
  %222 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %221, i64 28
  %223 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %222, align 8
  %224 = tail call zeroext i1 %223(%"class.blink::LayoutObject"* nonnull %23) #8
  br i1 %224, label %225, label %226

225:                                              ; preds = %213, %220
  br label %226

226:                                              ; preds = %220, %225
  %227 = phi i32 [ %169, %225 ], [ 0, %220 ]
  %228 = phi i32 [ %173, %225 ], [ 2147483647, %220 ]
  %229 = load i32, i32* %15, align 8
  %230 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %229, i32 %227) #8
  %231 = extractvalue { i32, i1 } %230, 1
  %232 = extractvalue { i32, i1 } %230, 0
  %233 = select i1 %231, i32 %228, i32 %232, !prof !2
  store i32 %233, i32* %15, align 4
  %234 = load void (%"class.blink::ColumnBalancer"*, %"class.blink::LayoutBox"*, i32, i32)**, void (%"class.blink::ColumnBalancer"*, %"class.blink::LayoutBox"*, i32, i32)*** %18, align 8
  %235 = load void (%"class.blink::ColumnBalancer"*, %"class.blink::LayoutBox"*, i32, i32)*, void (%"class.blink::ColumnBalancer"*, %"class.blink::LayoutBox"*, i32, i32)** %234, align 8
  tail call void %235(%"class.blink::ColumnBalancer"* %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %37, i32 %168, i32 %22) #8
  %236 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %219, align 8
  %237 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %236, i64 24
  %238 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %237, align 8
  %239 = tail call zeroext i1 %238(%"class.blink::LayoutObject"* nonnull %23) #8
  %240 = bitcast %"class.blink::LayoutObject"* %23 to %"class.blink::LayoutBlockFlow"*
  %241 = select i1 %239, %"class.blink::LayoutBlockFlow"* %240, %"class.blink::LayoutBlockFlow"* null
  %242 = bitcast %"class.blink::LayoutObject"* %23 to i32 (%"class.blink::LayoutBox"*, i32)***
  %243 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %242, align 8
  %244 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %243, i64 176
  %245 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %244, align 8
  %246 = tail call i32 %245(%"class.blink::LayoutBox"* %37, i32 0) #8
  %247 = icmp eq i32 %246, 1
  br i1 %247, label %266, label %248

248:                                              ; preds = %226
  %249 = icmp eq %"class.blink::LayoutBlockFlow"* %241, null
  br i1 %249, label %258, label %250

250:                                              ; preds = %248
  %251 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %241, i64 0, i32 2, i32 0, i32 0
  %252 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %251, align 8
  %253 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %252, null
  br i1 %253, label %258, label %254

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %252, i64 0, i32 3
  %256 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %255, align 8
  %257 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %256, null
  br i1 %257, label %258, label %266

258:                                              ; preds = %250, %254, %248
  %259 = load i32, i32* %15, align 8
  %260 = icmp slt i32 %170, 0
  %261 = select i1 %260, i32 -2147483648, i32 2147483647
  %262 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %259, i32 %170) #8
  %263 = extractvalue { i32, i1 } %262, 1
  %264 = extractvalue { i32, i1 } %262, 0
  %265 = select i1 %263, i32 %261, i32 %264, !prof !2
  store i32 %265, i32* %15, align 4
  tail call void @_ZN5blink14ColumnBalancer15TraverseSubtreeERKNS_9LayoutBoxE(%"class.blink::ColumnBalancer"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %37)
  store i32 %259, i32* %15, align 8
  br label %266

266:                                              ; preds = %254, %226, %258
  %267 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %51, align 8
  %268 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %267, i64 159
  %269 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %268, align 8
  %270 = tail call i32 %269(%"class.blink::LayoutBox"* %37) #8
  %271 = load void (%"class.blink::ColumnBalancer"*, %"class.blink::LayoutBox"*, i32)**, void (%"class.blink::ColumnBalancer"*, %"class.blink::LayoutBox"*, i32)*** %19, align 8
  %272 = getelementptr inbounds void (%"class.blink::ColumnBalancer"*, %"class.blink::LayoutBox"*, i32)*, void (%"class.blink::ColumnBalancer"*, %"class.blink::LayoutBox"*, i32)** %271, i64 1
  %273 = load void (%"class.blink::ColumnBalancer"*, %"class.blink::LayoutBox"*, i32)*, void (%"class.blink::ColumnBalancer"*, %"class.blink::LayoutBox"*, i32)** %272, align 8
  tail call void %273(%"class.blink::ColumnBalancer"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %37, i32 %168) #8
  store i32 %229, i32* %15, align 8
  br label %274

274:                                              ; preds = %266, %189, %167, %186, %206, %29, %35
  %275 = phi i32 [ %22, %35 ], [ %22, %29 ], [ %270, %266 ], [ %22, %167 ], [ %22, %186 ], [ %22, %206 ], [ %22, %189 ]
  %276 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 9
  %277 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %276, align 8
  %278 = icmp eq %"class.blink::LayoutObject"* %277, null
  br i1 %278, label %20, label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InitialColumnHeightFinderC2ERKNS_20LayoutMultiColumnSetENS_10LayoutUnitES4_(%"class.blink::InitialColumnHeightFinder"*, %"class.blink::LayoutMultiColumnSet"* dereferenceable(360), i32, i32) unnamed_addr #2 align 2 {
  %5 = bitcast %"class.blink::InitialColumnHeightFinder"* %0 to %"class.blink::ColumnBalancer"*
  %6 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 1
  store %"class.blink::LayoutMultiColumnSet"* %1, %"class.blink::LayoutMultiColumnSet"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 2, i32 0
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 3, i32 0
  store i32 %3, i32* %9, align 4
  %10 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %10, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink25InitialColumnHeightFinderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %11 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %13 = bitcast %"class.WTF::Vector.1730"* %11 to i8**
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 32, i32* %14, align 8
  %15 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 2, i32 0, i32 1, i64 0
  %18 = bitcast %"class.WTF::Vector.1735"* %16 to i8**
  store i8* %17, i8** %18, align 8
  %19 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store i32 32, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %1, i64 0, i32 2
  %24 = bitcast %"class.blink::LayoutFlowThread"** %23 to %"class.blink::LayoutMultiColumnFlowThread"**
  %25 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %25, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %54, label %29

29:                                               ; preds = %4
  %30 = bitcast i8* %17 to %"class.blink::LayoutUnit"*
  %31 = icmp ugt i32 %27, 32
  br i1 %31, label %32, label %36

32:                                               ; preds = %29
  tail call void @_ZN3WTF6VectorIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1735"* %16, i32 %27) #8
  %33 = load i32, i32* %20, align 4
  %34 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %16, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %34, align 8
  br label %36

36:                                               ; preds = %32, %29
  %37 = phi %"class.blink::LayoutUnit"* [ %35, %32 ], [ %30, %29 ]
  %38 = phi i32 [ %33, %32 ], [ 0, %29 ]
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %37, i64 %39
  %41 = icmp eq i32 %38, %27
  br i1 %41, label %55, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %16, i64 0, i32 0, i32 0, i32 0
  %44 = zext i32 %27 to i64
  %45 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %37, i64 %44
  %46 = bitcast %"class.blink::LayoutUnit"* %40 to i8*
  %47 = ptrtoint %"class.blink::LayoutUnit"* %40 to i64
  %48 = getelementptr %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %45, i64 -1, i32 0
  %49 = ptrtoint i32* %48 to i64
  %50 = sub i64 4, %47
  %51 = add i64 %50, %49
  %52 = and i64 %51, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 %52, i1 false) #8
  %53 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %43, align 8
  br label %55

54:                                               ; preds = %4
  store i32 %27, i32* %20, align 4
  br label %136

55:                                               ; preds = %36, %42
  %56 = phi %"class.blink::LayoutUnit"* [ %53, %42 ], [ %37, %36 ]
  store i32 %27, i32* %20, align 4
  %57 = zext i32 %27 to i64
  %58 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %56, i64 %57
  %59 = shl nuw nsw i64 %57, 2
  %60 = add nsw i64 %59, -4
  %61 = lshr exact i64 %60, 2
  %62 = add nuw nsw i64 %61, 1
  %63 = icmp ult i64 %62, 8
  br i1 %63, label %64, label %66

64:                                               ; preds = %134, %55
  %65 = phi %"class.blink::LayoutUnit"* [ %56, %55 ], [ %68, %134 ]
  br label %141

66:                                               ; preds = %55
  %67 = and i64 %62, 9223372036854775800
  %68 = getelementptr %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %56, i64 %67
  %69 = add nsw i64 %67, -8
  %70 = lshr exact i64 %69, 3
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 7
  %73 = icmp ult i64 %69, 56
  br i1 %73, label %121, label %74

74:                                               ; preds = %66
  %75 = sub nsw i64 %71, %72
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i64 [ 0, %74 ], [ %118, %76 ]
  %78 = phi i64 [ %75, %74 ], [ %119, %76 ]
  %79 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %56, i64 %77, i32 0
  %80 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %80, align 4
  %81 = getelementptr i32, i32* %79, i64 4
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %82, align 4
  %83 = or i64 %77, 8
  %84 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %56, i64 %83, i32 0
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %85, align 4
  %86 = getelementptr i32, i32* %84, i64 4
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %87, align 4
  %88 = or i64 %77, 16
  %89 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %56, i64 %88, i32 0
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %90, align 4
  %91 = getelementptr i32, i32* %89, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %92, align 4
  %93 = or i64 %77, 24
  %94 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %56, i64 %93, i32 0
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %95, align 4
  %96 = getelementptr i32, i32* %94, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %97, align 4
  %98 = or i64 %77, 32
  %99 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %56, i64 %98, i32 0
  %100 = bitcast i32* %99 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %100, align 4
  %101 = getelementptr i32, i32* %99, i64 4
  %102 = bitcast i32* %101 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %102, align 4
  %103 = or i64 %77, 40
  %104 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %56, i64 %103, i32 0
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %105, align 4
  %106 = getelementptr i32, i32* %104, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %107, align 4
  %108 = or i64 %77, 48
  %109 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %56, i64 %108, i32 0
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %110, align 4
  %111 = getelementptr i32, i32* %109, i64 4
  %112 = bitcast i32* %111 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %112, align 4
  %113 = or i64 %77, 56
  %114 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %56, i64 %113, i32 0
  %115 = bitcast i32* %114 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %115, align 4
  %116 = getelementptr i32, i32* %114, i64 4
  %117 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %117, align 4
  %118 = add i64 %77, 64
  %119 = add i64 %78, -8
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %76, !llvm.loop !9

121:                                              ; preds = %76, %66
  %122 = phi i64 [ 0, %66 ], [ %118, %76 ]
  %123 = icmp eq i64 %72, 0
  br i1 %123, label %134, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %131, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %132, %124 ], [ %72, %121 ]
  %127 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %56, i64 %125, i32 0
  %128 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %128, align 4
  %129 = getelementptr i32, i32* %127, i64 4
  %130 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %130, align 4
  %131 = add i64 %125, 8
  %132 = add i64 %126, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %124, !llvm.loop !11

134:                                              ; preds = %124, %121
  %135 = icmp eq i64 %62, %67
  br i1 %135, label %136, label %64

136:                                              ; preds = %141, %134, %54
  %137 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %7, align 8
  %138 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %137, i64 0, i32 2
  %139 = load %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutFlowThread"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %139, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink14ColumnBalancer15TraverseSubtreeERKNS_9LayoutBoxE(%"class.blink::ColumnBalancer"* %5, %"class.blink::LayoutBox"* dereferenceable(216) %140) #8
  tail call void @_ZN5blink25InitialColumnHeightFinder24DistributeImplicitBreaksEv(%"class.blink::InitialColumnHeightFinder"* %0)
  ret void

141:                                              ; preds = %64, %141
  %142 = phi %"class.blink::LayoutUnit"* [ %144, %141 ], [ %65, %64 ]
  %143 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %142, i64 0, i32 0
  store i32 2147483647, i32* %143, align 4
  %144 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %142, i64 1
  %145 = icmp eq %"class.blink::LayoutUnit"* %144, %58
  br i1 %145, label %136, label %141, !llvm.loop !13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InitialColumnHeightFinder24DistributeImplicitBreaksEv(%"class.blink::InitialColumnHeightFinder"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  tail call void @_ZN5blink25InitialColumnHeightFinder13AddContentRunENS_10LayoutUnitE(%"class.blink::InitialColumnHeightFinder"* %0, i32 %3)
  %4 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %8, i64 0, i32 2
  %10 = bitcast %"class.blink::LayoutFlowThread"** %9 to %"class.blink::LayoutMultiColumnFlowThread"**
  %11 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %11, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %6, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %1
  %16 = urem i32 %6, %13
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %90, label %20

18:                                               ; preds = %1
  %19 = icmp ult i32 %6, %13
  br i1 %19, label %20, label %90

20:                                               ; preds = %15, %18
  %21 = phi i32 [ %6, %18 ], [ %16, %15 ]
  %22 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 2, i32 0
  br label %23

23:                                               ; preds = %88, %20
  %24 = phi i32 [ %13, %20 ], [ %86, %88 ]
  %25 = phi i32 [ %6, %20 ], [ %89, %88 ]
  %26 = phi i32 [ %21, %20 ], [ %80, %88 ]
  %27 = load i32, i32* %22, align 8
  %28 = zext i32 %25 to i64
  %29 = icmp ugt i32 %25, %24
  br i1 %29, label %30, label %35

30:                                               ; preds = %23
  %31 = add i32 %25, -1
  %32 = urem i32 %31, %24
  %33 = sub i32 %31, %32
  %34 = zext i32 %33 to i64
  br label %35

35:                                               ; preds = %30, %23
  %36 = phi i64 [ %34, %30 ], [ 0, %23 ]
  %37 = icmp ult i64 %36, %28
  br i1 %37, label %38, label %74

38:                                               ; preds = %35, %38
  %39 = phi i32 [ %71, %38 ], [ 0, %35 ]
  %40 = phi i32 [ %46, %38 ], [ %27, %35 ]
  %41 = phi i64 [ %72, %38 ], [ %36, %35 ]
  %42 = phi i32 [ %70, %38 ], [ 0, %35 ]
  %43 = trunc i64 %41 to i32
  %44 = tail call dereferenceable(8) %"class.blink::InitialColumnHeightFinder::ContentRun"* @_ZNK3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1730"* %4, i32 %43) #8
  %45 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder::ContentRun", %"class.blink::InitialColumnHeightFinder::ContentRun"* %44, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %40, -1
  %48 = select i1 %47, i32 -2147483648, i32 2147483647
  %49 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %46, i32 %40) #8
  %50 = extractvalue { i32, i1 } %49, 1
  %51 = extractvalue { i32, i1 } %49, 0
  %52 = select i1 %50, i32 %48, i32 %51, !prof !2
  %53 = sitofp i32 %52 to float
  %54 = fmul float %53, 1.562500e-02
  %55 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder::ContentRun", %"class.blink::InitialColumnHeightFinder::ContentRun"* %44, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %56, 1
  %58 = uitofp i32 %57 to float
  %59 = fdiv float %54, %58
  %60 = fmul float %59, 6.400000e+01
  %61 = tail call float @llvm.ceil.f32(float %60) #8
  %62 = fcmp ult float %61, 0xC1E0000000000000
  %63 = fcmp ugt float %61, 0x41DFFFFFE0000000
  %64 = fcmp ogt float %61, 0xC1E0000000000000
  %65 = select i1 %64, float %61, float 0xC1E0000000000000
  %66 = fptosi float %65 to i32
  %67 = select i1 %62, i32 0, i32 2147483647
  %68 = select i1 %63, i32 %67, i32 %66
  %69 = icmp slt i32 %42, %68
  %70 = select i1 %69, i32 %68, i32 %42
  %71 = select i1 %69, i32 %43, i32 %39
  %72 = add nuw nsw i64 %41, 1
  %73 = icmp eq i64 %72, %28
  br i1 %73, label %74, label %38

74:                                               ; preds = %38, %35
  %75 = phi i32 [ 0, %35 ], [ %71, %38 ]
  %76 = tail call dereferenceable(8) %"class.blink::InitialColumnHeightFinder::ContentRun"* @_ZN3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1730"* %4, i32 %75) #8
  %77 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder::ContentRun", %"class.blink::InitialColumnHeightFinder::ContentRun"* %76, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %77, align 4
  %80 = add nuw i32 %26, 1
  %81 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %7, align 8
  %82 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %81, i64 0, i32 2
  %83 = bitcast %"class.blink::LayoutFlowThread"** %82 to %"class.blink::LayoutMultiColumnFlowThread"**
  %84 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %84, i64 0, i32 4
  %86 = load i32, i32* %85, align 8
  %87 = icmp ult i32 %80, %86
  br i1 %87, label %88, label %90

88:                                               ; preds = %74
  %89 = load i32, i32* %5, align 4
  br label %23

90:                                               ; preds = %74, %18, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink25InitialColumnHeightFinder28InitialMinimalBalancedHeightEv(%"class.blink::InitialColumnHeightFinder"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %7, i64 0, i32 2
  %9 = bitcast %"class.blink::LayoutFlowThread"** %8 to %"class.blink::LayoutMultiColumnFlowThread"**
  %10 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %10, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp ugt i32 %5, %12
  br i1 %13, label %14, label %69

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 2, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = uitofp i32 %12 to float
  br label %18

18:                                               ; preds = %32, %14
  %19 = phi i32 [ %5, %14 ], [ %68, %32 ]
  %20 = phi i32 [ %12, %14 ], [ %67, %32 ]
  %21 = phi i32 [ %16, %14 ], [ %37, %32 ]
  %22 = phi i32 [ 0, %14 ], [ %61, %32 ]
  %23 = phi i32 [ 0, %14 ], [ %33, %32 ]
  %24 = icmp ugt i32 %19, %20
  br i1 %24, label %25, label %29

25:                                               ; preds = %18
  %26 = add i32 %19, -1
  %27 = urem i32 %26, %20
  %28 = sub i32 %26, %27
  br label %29

29:                                               ; preds = %18, %25
  %30 = phi i32 [ %28, %25 ], [ 0, %18 ]
  %31 = icmp ult i32 %23, %30
  br i1 %31, label %32, label %69

32:                                               ; preds = %29
  %33 = add i32 %23, %12
  %34 = add i32 %33, -1
  %35 = tail call dereferenceable(8) %"class.blink::InitialColumnHeightFinder::ContentRun"* @_ZNK3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1730"* %3, i32 %34) #8
  %36 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder::ContentRun", %"class.blink::InitialColumnHeightFinder::ContentRun"* %35, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %21, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %37, i32 %21) #8
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !2
  %44 = sitofp i32 %43 to float
  %45 = fmul float %44, 1.562500e-02
  %46 = fdiv float %45, %17
  %47 = fmul float %46, 6.400000e+01
  %48 = tail call float @llvm.ceil.f32(float %47) #8
  %49 = fcmp ult float %48, 0xC1E0000000000000
  %50 = fcmp ugt float %48, 0x41DFFFFFE0000000
  %51 = fcmp ogt float %48, 0xC1E0000000000000
  %52 = select i1 %51, float %48, float 0xC1E0000000000000
  %53 = fptosi float %52 to i32
  %54 = select i1 %49, i32 0, i32 2147483647
  %55 = select i1 %50, i32 %54, i32 %53
  %56 = icmp slt i32 %55, 0
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %22, i32 %55) #8
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !2
  %62 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %6, align 8
  %63 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %62, i64 0, i32 2
  %64 = bitcast %"class.blink::LayoutFlowThread"** %63 to %"class.blink::LayoutMultiColumnFlowThread"**
  %65 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %65, i64 0, i32 4
  %67 = load i32, i32* %66, align 8
  %68 = load i32, i32* %4, align 4
  br label %18

69:                                               ; preds = %29, %1
  %70 = phi i32 [ %12, %1 ], [ %20, %29 ]
  %71 = phi i32 [ %5, %1 ], [ %19, %29 ]
  %72 = phi i32 [ 0, %1 ], [ %22, %29 ]
  %73 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 2, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = zext i32 %71 to i64
  %76 = icmp ugt i32 %71, %70
  br i1 %76, label %77, label %82

77:                                               ; preds = %69
  %78 = add i32 %71, -1
  %79 = urem i32 %78, %70
  %80 = sub i32 %78, %79
  %81 = zext i32 %80 to i64
  br label %82

82:                                               ; preds = %77, %69
  %83 = phi i64 [ %81, %77 ], [ 0, %69 ]
  %84 = icmp ult i64 %83, %75
  br i1 %84, label %85, label %127

85:                                               ; preds = %82, %85
  %86 = phi i32 [ %118, %85 ], [ 0, %82 ]
  %87 = phi i32 [ %93, %85 ], [ %74, %82 ]
  %88 = phi i64 [ %119, %85 ], [ %83, %82 ]
  %89 = phi i32 [ %117, %85 ], [ 0, %82 ]
  %90 = trunc i64 %88 to i32
  %91 = tail call dereferenceable(8) %"class.blink::InitialColumnHeightFinder::ContentRun"* @_ZNK3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1730"* %3, i32 %90) #8
  %92 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder::ContentRun", %"class.blink::InitialColumnHeightFinder::ContentRun"* %91, i64 0, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp sgt i32 %87, -1
  %95 = select i1 %94, i32 -2147483648, i32 2147483647
  %96 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %93, i32 %87) #8
  %97 = extractvalue { i32, i1 } %96, 1
  %98 = extractvalue { i32, i1 } %96, 0
  %99 = select i1 %97, i32 %95, i32 %98, !prof !2
  %100 = sitofp i32 %99 to float
  %101 = fmul float %100, 1.562500e-02
  %102 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder::ContentRun", %"class.blink::InitialColumnHeightFinder::ContentRun"* %91, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = add i32 %103, 1
  %105 = uitofp i32 %104 to float
  %106 = fdiv float %101, %105
  %107 = fmul float %106, 6.400000e+01
  %108 = tail call float @llvm.ceil.f32(float %107) #8
  %109 = fcmp ult float %108, 0xC1E0000000000000
  %110 = fcmp ugt float %108, 0x41DFFFFFE0000000
  %111 = fcmp ogt float %108, 0xC1E0000000000000
  %112 = select i1 %111, float %108, float 0xC1E0000000000000
  %113 = fptosi float %112 to i32
  %114 = select i1 %109, i32 0, i32 2147483647
  %115 = select i1 %110, i32 %114, i32 %113
  %116 = icmp slt i32 %89, %115
  %117 = select i1 %116, i32 %115, i32 %89
  %118 = select i1 %116, i32 %90, i32 %86
  %119 = add nuw nsw i64 %88, 1
  %120 = icmp eq i64 %119, %75
  br i1 %120, label %121, label %85

121:                                              ; preds = %85
  %122 = icmp eq i32 %118, 0
  br i1 %122, label %127, label %123

123:                                              ; preds = %121
  %124 = add i32 %118, -1
  %125 = tail call dereferenceable(8) %"class.blink::InitialColumnHeightFinder::ContentRun"* @_ZNK3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1730"* %3, i32 %124) #8
  %126 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder::ContentRun", %"class.blink::InitialColumnHeightFinder::ContentRun"* %125, i64 0, i32 0, i32 0
  br label %127

127:                                              ; preds = %121, %82, %123
  %128 = phi i32 [ %118, %123 ], [ 0, %82 ], [ 0, %121 ]
  %129 = phi i32* [ %126, %123 ], [ %73, %82 ], [ %73, %121 ]
  %130 = load i32, i32* %129, align 4
  %131 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %131)
  %132 = tail call dereferenceable(8) %"class.blink::InitialColumnHeightFinder::ContentRun"* @_ZNK3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1730"* %3, i32 %128) #8
  %133 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder::ContentRun", %"class.blink::InitialColumnHeightFinder::ContentRun"* %132, i64 0, i32 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp sgt i32 %130, -1
  %136 = select i1 %135, i32 -2147483648, i32 2147483647
  %137 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %134, i32 %130) #8
  %138 = extractvalue { i32, i1 } %137, 1
  %139 = extractvalue { i32, i1 } %137, 0
  %140 = select i1 %138, i32 %136, i32 %139, !prof !2
  %141 = sitofp i32 %140 to float
  %142 = fmul float %141, 1.562500e-02
  %143 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder::ContentRun", %"class.blink::InitialColumnHeightFinder::ContentRun"* %132, i64 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = add i32 %144, 1
  %146 = uitofp i32 %145 to float
  %147 = fdiv float %142, %146
  %148 = fmul float %147, 6.400000e+01
  %149 = tail call float @llvm.ceil.f32(float %148) #8
  %150 = fcmp ult float %149, 0xC1E0000000000000
  %151 = fcmp ugt float %149, 0x41DFFFFFE0000000
  %152 = fcmp ogt float %149, 0xC1E0000000000000
  %153 = select i1 %152, float %149, float 0xC1E0000000000000
  %154 = fptosi float %153 to i32
  %155 = select i1 %150, i32 0, i32 2147483647
  %156 = select i1 %151, i32 %155, i32 %154
  store i32 %156, i32* %2, align 4
  %157 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 3
  %158 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %157, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = icmp slt i32 %156, %159
  %161 = bitcast i32* %2 to %"class.blink::LayoutUnit"*
  %162 = select i1 %160, %"class.blink::LayoutUnit"* %157, %"class.blink::LayoutUnit"* %161
  %163 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %162, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = icmp slt i32 %164, 0
  %166 = select i1 %165, i32 -2147483648, i32 2147483647
  %167 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %72, i32 %164) #8
  %168 = extractvalue { i32, i1 } %167, 1
  %169 = extractvalue { i32, i1 } %167, 0
  %170 = select i1 %168, i32 %166, i32 %169, !prof !2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %131)
  ret i32 %170
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink25InitialColumnHeightFinder33ContentRunIndexWithTallestColumnsEv(%"class.blink::InitialColumnHeightFinder"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 2, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %9, i64 0, i32 2
  %11 = bitcast %"class.blink::LayoutFlowThread"** %10 to %"class.blink::LayoutMultiColumnFlowThread"**
  %12 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %12, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp ugt i32 %6, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %1
  %17 = add i32 %6, -1
  %18 = urem i32 %17, %14
  %19 = sub i32 %17, %18
  %20 = zext i32 %19 to i64
  br label %21

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ]
  %23 = icmp ult i64 %22, %7
  br i1 %23, label %26, label %24

24:                                               ; preds = %26, %21
  %25 = phi i32 [ 0, %21 ], [ %59, %26 ]
  ret i32 %25

26:                                               ; preds = %21, %26
  %27 = phi i32 [ %59, %26 ], [ 0, %21 ]
  %28 = phi i32 [ %34, %26 ], [ %3, %21 ]
  %29 = phi i64 [ %60, %26 ], [ %22, %21 ]
  %30 = phi i32 [ %58, %26 ], [ 0, %21 ]
  %31 = trunc i64 %29 to i32
  %32 = tail call dereferenceable(8) %"class.blink::InitialColumnHeightFinder::ContentRun"* @_ZNK3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1730"* %4, i32 %31) #8
  %33 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder::ContentRun", %"class.blink::InitialColumnHeightFinder::ContentRun"* %32, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %28, -1
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %34, i32 %28) #8
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !2
  %41 = sitofp i32 %40 to float
  %42 = fmul float %41, 1.562500e-02
  %43 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder::ContentRun", %"class.blink::InitialColumnHeightFinder::ContentRun"* %32, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, 1
  %46 = uitofp i32 %45 to float
  %47 = fdiv float %42, %46
  %48 = fmul float %47, 6.400000e+01
  %49 = tail call float @llvm.ceil.f32(float %48) #8
  %50 = fcmp ult float %49, 0xC1E0000000000000
  %51 = fcmp ugt float %49, 0x41DFFFFFE0000000
  %52 = fcmp ogt float %49, 0xC1E0000000000000
  %53 = select i1 %52, float %49, float 0xC1E0000000000000
  %54 = fptosi float %53 to i32
  %55 = select i1 %50, i32 0, i32 2147483647
  %56 = select i1 %51, i32 %55, i32 %54
  %57 = icmp slt i32 %30, %56
  %58 = select i1 %57, i32 %56, i32 %30
  %59 = select i1 %57, i32 %31, i32 %27
  %60 = add nuw nsw i64 %29, 1
  %61 = icmp eq i64 %60, %7
  br i1 %61, label %24, label %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InitialColumnHeightFinder23ExamineBoxAfterEnteringERKNS_9LayoutBoxENS_10LayoutUnitENS_13EBreakBetweenE(%"class.blink::InitialColumnHeightFinder"*, %"class.blink::LayoutBox"* dereferenceable(216), i32, i32) unnamed_addr #2 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %2, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 4, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 4, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, %8
  br i1 %11, label %12, label %13

12:                                               ; preds = %4
  store i32 0, i32* %9, align 4
  br label %13

13:                                               ; preds = %12, %4
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 12, i32 0, i32 0
  %15 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %14, align 8
  %16 = icmp eq %"struct.blink::LayoutBoxRareData"* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %15, i64 0, i32 8, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, -1
  br i1 %20, label %21, label %23

21:                                               ; preds = %13, %17
  %22 = phi i32 [ %19, %17 ], [ 0, %13 ]
  br label %23

23:                                               ; preds = %17, %21
  %24 = phi i32 [ %22, %21 ], [ %19, %17 ]
  %25 = phi i32 [ -2147483648, %21 ], [ 2147483647, %17 ]
  %26 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %8, i32 %24) #8
  %27 = extractvalue { i32, i1 } %26, 1
  %28 = extractvalue { i32, i1 } %26, 0
  %29 = select i1 %27, i32 %25, i32 %28, !prof !2
  %30 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 2, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %31, %29
  br i1 %32, label %68, label %33

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 3, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp sgt i32 %35, %29
  br i1 %36, label %37, label %68

37:                                               ; preds = %33
  %38 = tail call zeroext i1 @_ZNK5blink9LayoutBox22NeedsForcedBreakBeforeENS_13EBreakBetweenE(%"class.blink::LayoutBox"* %1, i32 %3) #8
  %39 = load i32, i32* %7, align 8
  br i1 %38, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZN5blink25InitialColumnHeightFinder13AddContentRunENS_10LayoutUnitE(%"class.blink::InitialColumnHeightFinder"* %0, i32 %39)
  br label %68

41:                                               ; preds = %37
  %42 = load i32, i32* %30, align 4
  %43 = icmp slt i32 %42, %39
  br i1 %43, label %44, label %68

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 1
  %46 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %45, align 8
  %47 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet41FragmentainerGroupIndexAtFlowThreadOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnSet"* %46, i32 %39, i32 1) #8
  %48 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %46, i64 0, i32 1, i32 1
  %49 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"* %48, i32 %47) #8
  %50 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %49, i64 0, i32 6
  %51 = load i8, i8* %50, align 4, !range !15
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %68, label %53

53:                                               ; preds = %44
  %54 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup25ColumnLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* %49, i32 %39) #8
  %55 = icmp eq i32 %54, %39
  br i1 %55, label %56, label %68

56:                                               ; preds = %53
  %57 = load i32, i32* %7, align 8
  %58 = load i32, i32* %9, align 4
  %59 = icmp eq i32 %58, %57
  br i1 %59, label %68, label %60

60:                                               ; preds = %56
  store i32 %57, i32* %9, align 4
  %61 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %14, align 8
  %62 = icmp eq %"struct.blink::LayoutBoxRareData"* %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %61, i64 0, i32 8, i32 0
  %65 = load i32, i32* %64, align 4
  br label %66

66:                                               ; preds = %60, %63
  %67 = phi i32 [ %65, %63 ], [ 0, %60 ]
  tail call void @_ZN5blink25InitialColumnHeightFinder23RecordStrutBeforeOffsetENS_10LayoutUnitES1_(%"class.blink::InitialColumnHeightFinder"* %0, i32 %57, i32 %67)
  br label %68

68:                                               ; preds = %56, %44, %41, %23, %53, %40, %66, %33
  %69 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*, i32)***
  %70 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %69, align 8
  %71 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %70, i64 176
  %72 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %71, align 8
  %73 = tail call i32 %72(%"class.blink::LayoutBox"* %1, i32 0) #8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %84, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 3
  %77 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %76, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp slt i32 %78, %2
  %80 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %81 = select i1 %79, %"class.blink::LayoutUnit"* %80, %"class.blink::LayoutUnit"* %76
  %82 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %81, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  store i32 %83, i32* %77, align 8
  br label %123

84:                                               ; preds = %68
  %85 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %86 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %87 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %86, align 8
  %88 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %87, i64 24
  %89 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %88, align 8
  %90 = tail call zeroext i1 %89(%"class.blink::LayoutObject"* %85) #8
  %91 = icmp eq %"class.blink::LayoutBox"* %1, null
  %92 = xor i1 %90, true
  %93 = or i1 %91, %92
  br i1 %93, label %123, label %94

94:                                               ; preds = %84
  %95 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 1, i32 0, i32 0, i32 6
  %96 = bitcast %"class.blink::UntracedMember"* %95 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"**
  %97 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %96, align 8
  %98 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %97, null
  br i1 %98, label %123, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %97, i64 0, i32 3
  %101 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %100, align 8
  %102 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %101, null
  br i1 %102, label %123, label %103

103:                                              ; preds = %99
  %104 = load i32, i32* %7, align 8
  %105 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %101, i64 0, i32 6, i32 0
  %106 = load i32, i32* %105, align 8
  %107 = icmp sgt i32 %106, -1
  %108 = select i1 %107, i32 -2147483648, i32 2147483647
  %109 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %104, i32 %106) #8
  %110 = extractvalue { i32, i1 } %109, 1
  %111 = extractvalue { i32, i1 } %109, 0
  %112 = select i1 %110, i32 %108, i32 %111, !prof !2
  %113 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %113)
  %114 = tail call i32 @_ZNK5blink27LayoutMultiColumnFlowThread31TallestUnbreakableLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnFlowThread"* nonnull %101, i32 %112) #8
  store i32 %114, i32* %6, align 4
  %115 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 3
  %116 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %115, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = icmp slt i32 %117, %114
  %119 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %120 = select i1 %118, %"class.blink::LayoutUnit"* %119, %"class.blink::LayoutUnit"* %115
  %121 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %120, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  store i32 %122, i32* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %113)
  br label %123

123:                                              ; preds = %94, %84, %99, %103, %75
  ret void
}

declare zeroext i1 @_ZNK5blink9LayoutBox22NeedsForcedBreakBeforeENS_13EBreakBetweenE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InitialColumnHeightFinder13AddContentRunENS_10LayoutUnitE(%"class.blink::InitialColumnHeightFinder"*, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::InitialColumnHeightFinder::ContentRun"*
  %5 = tail call i32 @_ZNK5blink25InitialColumnHeightFinder19SpaceUsedByStrutsAtENS_10LayoutUnitE(%"class.blink::InitialColumnHeightFinder"* %0, i32 %1)
  %6 = icmp sgt i32 %5, -1
  %7 = select i1 %6, i32 -2147483648, i32 2147483647
  %8 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1, i32 %5) #8
  %9 = extractvalue { i32, i1 } %8, 1
  %10 = extractvalue { i32, i1 } %8, 0
  %11 = select i1 %9, i32 %7, i32 %10, !prof !2
  %12 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %2
  %17 = add i32 %14, -1
  %18 = tail call dereferenceable(8) %"class.blink::InitialColumnHeightFinder::ContentRun"* @_ZN3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1730"* %12, i32 %17) #8
  %19 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder::ContentRun", %"class.blink::InitialColumnHeightFinder::ContentRun"* %18, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %11, %20
  br i1 %21, label %22, label %61

22:                                               ; preds = %16
  %23 = load i32, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %2
  %25 = phi i32 [ %23, %22 ], [ 0, %2 ]
  %26 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 1
  %27 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %27, i64 0, i32 2
  %29 = bitcast %"class.blink::LayoutFlowThread"** %28 to %"class.blink::LayoutMultiColumnFlowThread"**
  %30 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %30, i64 0, i32 4
  %32 = load i32, i32* %31, align 8
  %33 = icmp ult i32 %25, %32
  br i1 %33, label %42, label %34

34:                                               ; preds = %24
  %35 = tail call %"class.blink::FragmentationContext"* @_ZNK5blink27LayoutMultiColumnFlowThread29EnclosingFragmentationContextENS_16LayoutFlowThread24AncestorSearchConstraintE(%"class.blink::LayoutMultiColumnFlowThread"* %30, i32 1) #8
  %36 = icmp eq %"class.blink::FragmentationContext"* %35, null
  br i1 %36, label %61, label %37

37:                                               ; preds = %34
  %38 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %26, align 8
  %39 = tail call zeroext i1 @_ZNK5blink20LayoutMultiColumnSet29NewFragmentainerGroupsAllowedEv(%"class.blink::LayoutMultiColumnSet"* %38) #8
  br i1 %39, label %61, label %40

40:                                               ; preds = %37
  %41 = load i32, i32* %13, align 4
  br label %42

42:                                               ; preds = %40, %24
  %43 = phi i32 [ %41, %40 ], [ %25, %24 ]
  %44 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #8
  %45 = bitcast i64* %3 to i32*
  store i32 %11, i32* %45, align 8
  %46 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder::ContentRun", %"class.blink::InitialColumnHeightFinder::ContentRun"* %4, i64 0, i32 1
  store i32 0, i32* %46, align 4
  %47 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %43, %48
  br i1 %49, label %59, label %50, !prof !2

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %12, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::InitialColumnHeightFinder::ContentRun"*, %"class.blink::InitialColumnHeightFinder::ContentRun"** %51, align 8
  %53 = zext i32 %43 to i64
  %54 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder::ContentRun", %"class.blink::InitialColumnHeightFinder::ContentRun"* %52, i64 %53
  %55 = bitcast %"class.blink::InitialColumnHeightFinder::ContentRun"* %54 to i64*
  %56 = load i64, i64* %3, align 8
  store i64 %56, i64* %55, align 4
  %57 = load i32, i32* %13, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %13, align 4
  br label %60

59:                                               ; preds = %42
  call void @_ZN3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1730"* %12, %"class.blink::InitialColumnHeightFinder::ContentRun"* nonnull dereferenceable(8) %4) #8
  br label %60

60:                                               ; preds = %50, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #8
  br label %61

61:                                               ; preds = %16, %34, %37, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InitialColumnHeightFinder23RecordStrutBeforeOffsetENS_10LayoutUnitES1_(%"class.blink::InitialColumnHeightFinder"*, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = alloca i32, align 4
  store i32 %2, i32* %4, align 4
  %5 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %6, i64 0, i32 2
  %8 = bitcast %"class.blink::LayoutFlowThread"** %7 to %"class.blink::LayoutMultiColumnFlowThread"**
  %9 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %9, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet41FragmentainerGroupIndexAtFlowThreadOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnSet"* %6, i32 %1, i32 1) #8
  %13 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %6, i64 0, i32 1, i32 1
  %14 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"* %13, i32 %12) #8
  %15 = icmp sgt i32 %2, -1
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1, i32 %2) #8
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !2
  %21 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup19ColumnIndexAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::MultiColumnFragmentainerGroup"* %14, i32 %20, i32 0) #8
  %22 = icmp ult i32 %21, %11
  br i1 %22, label %23, label %35

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 2
  %25 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1735"* %24, i32 %21) #8
  %26 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, %2
  %29 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %30 = select i1 %28, %"class.blink::LayoutUnit"* %29, %"class.blink::LayoutUnit"* %25
  %31 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1735"* %24, i32 %21) #8
  %32 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %30, i64 0, i32 0
  %33 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %31, i64 0, i32 0
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %33, align 4
  br label %35

35:                                               ; preds = %3, %23
  ret void
}

declare i32 @_ZNK5blink27LayoutMultiColumnFlowThread31TallestUnbreakableLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnFlowThread"*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink25InitialColumnHeightFinder23ExamineBoxBeforeLeavingERKNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::InitialColumnHeightFinder"* nocapture, %"class.blink::LayoutBox"* nocapture dereferenceable(216), i32) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InitialColumnHeightFinder11ExamineLineERKNS_13RootInlineBoxE(%"class.blink::InitialColumnHeightFinder"*, %"class.blink::RootInlineBox"* dereferenceable(160)) unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 7, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 4, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %5, 0
  %9 = select i1 %8, i32 -2147483648, i32 2147483647
  %10 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %7, i32 %5) #8
  %11 = extractvalue { i32, i1 } %10, 1
  %12 = extractvalue { i32, i1 } %10, 0
  %13 = select i1 %11, i32 %9, i32 %12, !prof !2
  %14 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14)
  store i32 -1431655766, i32* %3, align 4
  %15 = tail call %"class.blink::LayoutObject"* @_ZNK5blink13RootInlineBox5BlockEv(%"class.blink::RootInlineBox"* %1) #8
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %19, i64 0, i32 21
  %21 = load i16, i16* %20, align 4
  %22 = sext i16 %21 to i32
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %19, i64 0, i32 22
  %24 = load i16, i16* %23, align 2
  %25 = sext i16 %24 to i32
  %26 = icmp ult i32 %22, %25
  %27 = select i1 %26, i32 %25, i32 %22
  %28 = icmp ne i32 %27, 0
  %29 = icmp ne %"class.blink::RootInlineBox"* %1, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %58

31:                                               ; preds = %2, %31
  %32 = phi i32 [ %54, %31 ], [ 0, %2 ]
  %33 = phi %"class.blink::RootInlineBox"* [ %53, %31 ], [ %1, %2 ]
  %34 = phi i32 [ %50, %31 ], [ 0, %2 ]
  %35 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %33, i64 0, i32 8, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %33, i64 0, i32 7, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = icmp sgt i32 %38, -1
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %36, i32 %38) #8
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !2
  %45 = icmp slt i32 %44, 0
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %34, i32 %44) #8
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !2
  %51 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %33, i64 0, i32 0, i32 4
  %52 = bitcast %"class.blink::InlineFlowBox"** %51 to %"class.blink::RootInlineBox"**
  %53 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %52, align 8
  %54 = add nuw i32 %32, 1
  %55 = icmp ult i32 %54, %27
  %56 = icmp ne %"class.blink::RootInlineBox"* %53, null
  %57 = and i1 %55, %56
  br i1 %57, label %31, label %58

58:                                               ; preds = %31, %2
  %59 = phi i32 [ 0, %2 ], [ %50, %31 ]
  %60 = icmp slt i32 %13, 0
  br i1 %60, label %61, label %66

61:                                               ; preds = %58
  %62 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %13) #8
  %63 = extractvalue { i32, i1 } %62, 1
  %64 = extractvalue { i32, i1 } %62, 0
  %65 = select i1 %63, i32 -2147483648, i32 %64, !prof !2
  br label %66

66:                                               ; preds = %61, %58
  %67 = phi i32 [ %65, %61 ], [ %59, %58 ]
  store i32 %67, i32* %3, align 4
  %68 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 3
  %69 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %68, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp slt i32 %70, %67
  %72 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %73 = select i1 %71, %"class.blink::LayoutUnit"* %72, %"class.blink::LayoutUnit"* %68
  %74 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  store i32 %75, i32* %69, align 8
  %76 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 2, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %77, %13
  br i1 %78, label %79, label %98

79:                                               ; preds = %66
  %80 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 1
  %81 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %80, align 8
  %82 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet41FragmentainerGroupIndexAtFlowThreadOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnSet"* %81, i32 %13, i32 1) #8
  %83 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %81, i64 0, i32 1, i32 1
  %84 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"* %83, i32 %82) #8
  %85 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %84, i64 0, i32 6
  %86 = load i8, i8* %85, align 4, !range !15
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %79
  %89 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup25ColumnLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* %84, i32 %13) #8
  %90 = icmp eq i32 %89, %13
  br i1 %90, label %91, label %98

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 4, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, %13
  br i1 %94, label %98, label %95

95:                                               ; preds = %91
  store i32 %13, i32* %92, align 4
  %96 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 10, i32 0
  %97 = load i32, i32* %96, align 4
  tail call void @_ZN5blink25InitialColumnHeightFinder23RecordStrutBeforeOffsetENS_10LayoutUnitES1_(%"class.blink::InitialColumnHeightFinder"* %0, i32 %13, i32 %97)
  br label %98

98:                                               ; preds = %91, %79, %66, %95, %88
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14)
  ret void
}

declare %"class.blink::LayoutObject"* @_ZNK5blink13RootInlineBox5BlockEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #3

declare i32 @_ZNK5blink29MultiColumnFragmentainerGroup19ColumnIndexAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::MultiColumnFragmentainerGroup"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink25InitialColumnHeightFinder19SpaceUsedByStrutsAtENS_10LayoutUnitE(%"class.blink::InitialColumnHeightFinder"*, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %3, align 8
  %5 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet41FragmentainerGroupIndexAtFlowThreadOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnSet"* %4, i32 %1, i32 1) #8
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %4, i64 0, i32 1, i32 1
  %7 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"* %6, i32 %5) #8
  %8 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup19ColumnIndexAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::MultiColumnFragmentainerGroup"* %7, i32 %1, i32 1) #8
  %9 = add i32 %8, 1
  %10 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %3, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %10, i64 0, i32 2
  %12 = bitcast %"class.blink::LayoutFlowThread"** %11 to %"class.blink::LayoutMultiColumnFlowThread"**
  %13 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %13, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %15, %9
  %17 = select i1 %16, i32 %15, i32 %9
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %0, i64 0, i32 2
  br label %23

21:                                               ; preds = %40, %2
  %22 = phi i32 [ 0, %2 ], [ %41, %40 ]
  ret i32 %22

23:                                               ; preds = %19, %40
  %24 = phi i32 [ 0, %19 ], [ %42, %40 ]
  %25 = phi i32 [ 0, %19 ], [ %41, %40 ]
  %26 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1735"* %20, i32 %24) #8
  %27 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 2147483647
  br i1 %29, label %40, label %30

30:                                               ; preds = %23
  %31 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1735"* %20, i32 %24) #8
  %32 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %31, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %33, 0
  %35 = select i1 %34, i32 -2147483648, i32 2147483647
  %36 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %25, i32 %33) #8
  %37 = extractvalue { i32, i1 } %36, 1
  %38 = extractvalue { i32, i1 } %36, 0
  %39 = select i1 %37, i32 %35, i32 %38, !prof !2
  br label %40

40:                                               ; preds = %23, %30
  %41 = phi i32 [ %39, %30 ], [ %25, %23 ]
  %42 = add nuw i32 %24, 1
  %43 = icmp ult i32 %42, %17
  br i1 %43, label %23, label %21
}

declare %"class.blink::FragmentationContext"* @_ZNK5blink27LayoutMultiColumnFlowThread29EnclosingFragmentationContextENS_16LayoutFlowThread24AncestorSearchConstraintE(%"class.blink::LayoutMultiColumnFlowThread"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink20LayoutMultiColumnSet29NewFragmentainerGroupsAllowedEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26MinimumSpaceShortageFinderC2ERKNS_20LayoutMultiColumnSetENS_10LayoutUnitES4_(%"class.blink::MinimumSpaceShortageFinder"*, %"class.blink::LayoutMultiColumnSet"* dereferenceable(360), i32, i32) unnamed_addr #2 align 2 {
  %5 = bitcast %"class.blink::MinimumSpaceShortageFinder"* %0 to %"class.blink::ColumnBalancer"*
  %6 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 0, i32 1
  store %"class.blink::LayoutMultiColumnSet"* %1, %"class.blink::LayoutMultiColumnSet"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 0, i32 2, i32 0
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 0, i32 3, i32 0
  store i32 %3, i32* %9, align 4
  %10 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 0, i32 4, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink26MinimumSpaceShortageFinderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %11 = bitcast i32* %10 to <4 x i32>*
  store <4 x i32> <i32 0, i32 2147483647, i32 -2147483648, i32 0>, <4 x i32>* %11, align 4
  %12 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %1, i64 0, i32 2
  %13 = load %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutFlowThread"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %13, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink14ColumnBalancer15TraverseSubtreeERKNS_9LayoutBoxE(%"class.blink::ColumnBalancer"* %5, %"class.blink::LayoutBox"* dereferenceable(216) %14) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26MinimumSpaceShortageFinder23ExamineBoxAfterEnteringERKNS_9LayoutBoxENS_10LayoutUnitENS_13EBreakBetweenE(%"class.blink::MinimumSpaceShortageFinder"* nocapture, %"class.blink::LayoutBox"* dereferenceable(216), i32, i32) unnamed_addr #2 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.blink::MinimumSpaceShortageFinder", align 8
  %9 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*, i32)***
  %10 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %10, i64 176
  %12 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %11, align 8
  %13 = tail call i32 %12(%"class.blink::LayoutBox"* %1, i32 0) #8
  %14 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 0, i32 4, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 12, i32 0, i32 0
  %17 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %16, align 8
  %18 = icmp eq %"struct.blink::LayoutBoxRareData"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %17, i64 0, i32 8, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, -1
  br i1 %22, label %23, label %25

23:                                               ; preds = %4, %19
  %24 = phi i32 [ %21, %19 ], [ 0, %4 ]
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi i32 [ %24, %23 ], [ %21, %19 ]
  %27 = phi i32 [ -2147483648, %23 ], [ 2147483647, %19 ]
  %28 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %15, i32 %26) #8
  %29 = extractvalue { i32, i1 } %28, 1
  %30 = extractvalue { i32, i1 } %28, 0
  %31 = select i1 %29, i32 %27, i32 %30, !prof !2
  %32 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 0, i32 2, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %33, %31
  br i1 %34, label %95, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 0, i32 3, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %37, %31
  br i1 %38, label %39, label %95

39:                                               ; preds = %35
  %40 = tail call zeroext i1 @_ZNK5blink9LayoutBox22NeedsForcedBreakBeforeENS_13EBreakBetweenE(%"class.blink::LayoutBox"* %1, i32 %3) #8
  br i1 %40, label %41, label %45

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = add i32 %43, 1
  store i32 %44, i32* %42, align 4
  br label %95

45:                                               ; preds = %39
  %46 = load i32, i32* %14, align 8
  %47 = load i32, i32* %32, align 4
  %48 = icmp slt i32 %47, %46
  br i1 %48, label %49, label %95

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 0, i32 1
  %51 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %50, align 8
  %52 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet41FragmentainerGroupIndexAtFlowThreadOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnSet"* %51, i32 %46, i32 1) #8
  %53 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %51, i64 0, i32 1, i32 1
  %54 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"* %53, i32 %52) #8
  %55 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %54, i64 0, i32 6
  %56 = load i8, i8* %55, align 4, !range !15
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %95, label %58

58:                                               ; preds = %49
  %59 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup25ColumnLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* %54, i32 %46) #8
  %60 = icmp eq i32 %59, %46
  br i1 %60, label %61, label %95

61:                                               ; preds = %58
  %62 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %16, align 8
  %63 = icmp eq %"struct.blink::LayoutBoxRareData"* %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %62, i64 0, i32 8, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp sgt i32 %66, -1
  br i1 %67, label %68, label %70

68:                                               ; preds = %61, %64
  %69 = phi i32 [ %66, %64 ], [ 0, %61 ]
  br label %70

70:                                               ; preds = %64, %68
  %71 = phi i32 [ %69, %68 ], [ %66, %64 ]
  %72 = phi i32 [ -2147483648, %68 ], [ 2147483647, %64 ]
  %73 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %2, i32 %71) #8
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %72, i32 %75, !prof !2
  %77 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77)
  store i32 %76, i32* %5, align 4
  %78 = icmp sgt i32 %76, 0
  br i1 %78, label %79, label %88

79:                                               ; preds = %70
  %80 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 1
  %81 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %80, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp sgt i32 %82, %76
  %84 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %85 = select i1 %83, %"class.blink::LayoutUnit"* %84, %"class.blink::LayoutUnit"* %80
  %86 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %85, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  store i32 %87, i32* %81, align 4
  br label %88

88:                                               ; preds = %70, %79
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77)
  %89 = icmp eq i32 %13, 1
  br i1 %89, label %149, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 2, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, -2147483648
  br i1 %93, label %94, label %97

94:                                               ; preds = %90
  store i32 %71, i32* %91, align 8
  br label %97

95:                                               ; preds = %49, %45, %25, %41, %58, %35
  %96 = icmp eq i32 %13, 1
  br i1 %96, label %149, label %97

97:                                               ; preds = %94, %90, %95
  %98 = load i32, i32* %14, align 8
  %99 = icmp slt i32 %2, 0
  %100 = select i1 %99, i32 -2147483648, i32 2147483647
  %101 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %98, i32 %2) #8
  %102 = extractvalue { i32, i1 } %101, 1
  %103 = extractvalue { i32, i1 } %101, 0
  %104 = select i1 %102, i32 %100, i32 %103, !prof !2
  %105 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 0, i32 1
  %106 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %105, align 8
  %107 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet41FragmentainerGroupIndexAtFlowThreadOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnSet"* %106, i32 %98, i32 1) #8
  %108 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %106, i64 0, i32 1, i32 1
  %109 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"* %108, i32 %107) #8
  %110 = load i32, i32* %14, align 8
  %111 = load i32, i32* %32, align 4
  %112 = icmp slt i32 %111, %110
  br i1 %112, label %113, label %124

113:                                              ; preds = %97
  %114 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %105, align 8
  %115 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet41FragmentainerGroupIndexAtFlowThreadOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnSet"* %114, i32 %110, i32 1) #8
  %116 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %114, i64 0, i32 1, i32 1
  %117 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"* %116, i32 %115) #8
  %118 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %117, i64 0, i32 6
  %119 = load i8, i8* %118, align 4, !range !15
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %124, label %121

121:                                              ; preds = %113
  %122 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup25ColumnLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* %117, i32 %110) #8
  %123 = icmp eq i32 %122, %110
  br i1 %123, label %129, label %124

124:                                              ; preds = %113, %97, %121
  %125 = load i32, i32* %14, align 8
  %126 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup25ColumnLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* %109, i32 %125) #8
  %127 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup25ColumnLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* %109, i32 %104) #8
  %128 = icmp eq i32 %126, %127
  br i1 %128, label %149, label %129

129:                                              ; preds = %124, %121
  %130 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup25ColumnLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* %109, i32 %104) #8
  %131 = icmp sgt i32 %130, -1
  %132 = select i1 %131, i32 -2147483648, i32 2147483647
  %133 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %104, i32 %130) #8
  %134 = extractvalue { i32, i1 } %133, 1
  %135 = extractvalue { i32, i1 } %133, 0
  %136 = select i1 %134, i32 %132, i32 %135, !prof !2
  %137 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %137)
  store i32 %136, i32* %6, align 4
  %138 = icmp sgt i32 %136, 0
  br i1 %138, label %139, label %148

139:                                              ; preds = %129
  %140 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 1
  %141 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %140, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = icmp sgt i32 %142, %136
  %144 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %145 = select i1 %143, %"class.blink::LayoutUnit"* %144, %"class.blink::LayoutUnit"* %140
  %146 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %145, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  store i32 %147, i32* %141, align 4
  br label %148

148:                                              ; preds = %129, %139
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %137)
  br label %149

149:                                              ; preds = %124, %88, %148, %95
  %150 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %151 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %152 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %151, align 8
  %153 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %152, i64 24
  %154 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %153, align 8
  %155 = tail call zeroext i1 %154(%"class.blink::LayoutObject"* %150) #8
  %156 = icmp eq %"class.blink::LayoutBox"* %1, null
  %157 = xor i1 %155, true
  %158 = or i1 %156, %157
  br i1 %158, label %203, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 1, i32 0, i32 0, i32 6
  %161 = bitcast %"class.blink::UntracedMember"* %160 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"**
  %162 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %161, align 8
  %163 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %162, null
  br i1 %163, label %203, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %162, i64 0, i32 3
  %166 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %165, align 8
  %167 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %166, null
  br i1 %167, label %203, label %168

168:                                              ; preds = %164
  %169 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink27LayoutMultiColumnFlowThread19FirstMultiColumnSetEv(%"class.blink::LayoutMultiColumnFlowThread"* nonnull %166) #8
  %170 = icmp eq %"class.blink::LayoutMultiColumnSet"* %169, null
  br i1 %170, label %203, label %171

171:                                              ; preds = %168
  %172 = bitcast %"class.blink::MinimumSpaceShortageFinder"* %8 to i8*
  %173 = bitcast %"class.blink::MinimumSpaceShortageFinder"* %8 to %"class.blink::ColumnBalancer"*
  %174 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %8, i64 0, i32 0, i32 0
  %175 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %8, i64 0, i32 0, i32 1
  %176 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %8, i64 0, i32 0, i32 2, i32 0
  %177 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %8, i64 0, i32 0, i32 3, i32 0
  %178 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %8, i64 0, i32 0, i32 4, i32 0
  %179 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %8, i64 0, i32 1, i32 0
  %180 = bitcast i32* %7 to i8*
  %181 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 1
  %182 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %181, i64 0, i32 0
  %183 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %184 = bitcast i32* %178 to <4 x i32>*
  br label %185

185:                                              ; preds = %171, %200
  %186 = phi %"class.blink::LayoutMultiColumnSet"* [ %169, %171 ], [ %201, %200 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %172) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 -86, i64 40, i1 false)
  %187 = call i32 @_ZNK5blink20LayoutMultiColumnSet22LogicalTopInFlowThreadEv(%"class.blink::LayoutMultiColumnSet"* nonnull %186) #8
  %188 = call i32 @_ZNK5blink20LayoutMultiColumnSet25LogicalBottomInFlowThreadEv(%"class.blink::LayoutMultiColumnSet"* nonnull %186) #8
  store %"class.blink::LayoutMultiColumnSet"* %186, %"class.blink::LayoutMultiColumnSet"** %175, align 8
  store i32 %187, i32* %176, align 8
  store i32 %188, i32* %177, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink26MinimumSpaceShortageFinderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %174, align 8
  store <4 x i32> <i32 0, i32 2147483647, i32 -2147483648, i32 0>, <4 x i32>* %184, align 8
  %189 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %186, i64 0, i32 2
  %190 = load %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutFlowThread"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %190, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink14ColumnBalancer15TraverseSubtreeERKNS_9LayoutBoxE(%"class.blink::ColumnBalancer"* nonnull %173, %"class.blink::LayoutBox"* dereferenceable(216) %191) #8
  %192 = load i32, i32* %179, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %180)
  store i32 %192, i32* %7, align 4
  %193 = icmp sgt i32 %192, 0
  br i1 %193, label %194, label %200

194:                                              ; preds = %185
  %195 = load i32, i32* %182, align 4
  %196 = icmp sgt i32 %195, %192
  %197 = select i1 %196, %"class.blink::LayoutUnit"* %183, %"class.blink::LayoutUnit"* %181
  %198 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %197, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  store i32 %199, i32* %182, align 4
  br label %200

200:                                              ; preds = %185, %194
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %180)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %172) #8
  %201 = call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet25NextSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"* nonnull %186) #8
  %202 = icmp eq %"class.blink::LayoutMultiColumnSet"* %201, null
  br i1 %202, label %203, label %185

203:                                              ; preds = %200, %168, %159, %164, %149
  ret void
}

declare i32 @_ZNK5blink29MultiColumnFragmentainerGroup25ColumnLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"*, i32) local_unnamed_addr #3

declare %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink27LayoutMultiColumnFlowThread19FirstMultiColumnSetEv(%"class.blink::LayoutMultiColumnFlowThread"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @_ZNK5blink20LayoutMultiColumnSet22LogicalTopInFlowThreadEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #3

declare i32 @_ZNK5blink20LayoutMultiColumnSet25LogicalBottomInFlowThreadEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #3

declare %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet25NextSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26MinimumSpaceShortageFinder23ExamineBoxBeforeLeavingERKNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::MinimumSpaceShortageFinder"* nocapture, %"class.blink::LayoutBox"* dereferenceable(216), i32) unnamed_addr #2 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, -2147483648
  br i1 %7, label %55, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*, i32)***
  %10 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %10, i64 176
  %12 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %11, align 8
  %13 = tail call i32 %12(%"class.blink::LayoutBox"* %1, i32 0) #8
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %55

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 0, i32 4, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 0, i32 1
  %19 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %18, align 8
  %20 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet41FragmentainerGroupIndexAtFlowThreadOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnSet"* %19, i32 %17, i32 1) #8
  %21 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %19, i64 0, i32 1, i32 1
  %22 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"* %21, i32 %20) #8
  %23 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup25ColumnLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* %22, i32 %17) #8
  %24 = icmp sgt i32 %23, -1
  %25 = select i1 %24, i32 -2147483648, i32 2147483647
  %26 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %17, i32 %23) #8
  %27 = extractvalue { i32, i1 } %26, 1
  %28 = extractvalue { i32, i1 } %26, 0
  %29 = select i1 %27, i32 %25, i32 %28, !prof !2
  %30 = icmp slt i32 %2, 0
  %31 = select i1 %30, i32 -2147483648, i32 2147483647
  %32 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %29, i32 %2) #8
  %33 = extractvalue { i32, i1 } %32, 1
  %34 = extractvalue { i32, i1 } %32, 0
  %35 = select i1 %33, i32 %31, i32 %34, !prof !2
  %36 = load i32, i32* %5, align 4
  %37 = icmp sgt i32 %36, -1
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %35, i32 %36) #8
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 %38, i32 %41, !prof !2
  %43 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43)
  store i32 %42, i32* %4, align 4
  %44 = icmp sgt i32 %42, 0
  br i1 %44, label %45, label %54

45:                                               ; preds = %15
  %46 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 1
  %47 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %46, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp sgt i32 %48, %42
  %50 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %51 = select i1 %49, %"class.blink::LayoutUnit"* %50, %"class.blink::LayoutUnit"* %46
  %52 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %47, align 4
  br label %54

54:                                               ; preds = %15, %45
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43)
  store i32 -2147483648, i32* %5, align 8
  br label %55

55:                                               ; preds = %3, %8, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26MinimumSpaceShortageFinder11ExamineLineERKNS_13RootInlineBoxE(%"class.blink::MinimumSpaceShortageFinder"* nocapture, %"class.blink::RootInlineBox"* nocapture readonly dereferenceable(160)) unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 7, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 0, i32 4, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %7, 0
  %11 = select i1 %10, i32 -2147483648, i32 2147483647
  %12 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %9, i32 %7) #8
  %13 = extractvalue { i32, i1 } %12, 1
  %14 = extractvalue { i32, i1 } %12, 0
  %15 = select i1 %13, i32 %11, i32 %14, !prof !2
  %16 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 8, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %7, -1
  %19 = select i1 %18, i32 -2147483648, i32 2147483647
  %20 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %17, i32 %7) #8
  %21 = extractvalue { i32, i1 } %20, 1
  %22 = extractvalue { i32, i1 } %20, 0
  %23 = select i1 %21, i32 %19, i32 %22, !prof !2
  %24 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 2, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, -2147483648
  br i1 %26, label %65, label %27

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 0, i32 1
  %29 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %28, align 8
  %30 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet41FragmentainerGroupIndexAtFlowThreadOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnSet"* %29, i32 %15, i32 1) #8
  %31 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %29, i64 0, i32 1, i32 1
  %32 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"* %31, i32 %30) #8
  %33 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup25ColumnLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* %32, i32 %15) #8
  %34 = icmp sgt i32 %33, -1
  %35 = select i1 %34, i32 -2147483648, i32 2147483647
  %36 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %15, i32 %33) #8
  %37 = extractvalue { i32, i1 } %36, 1
  %38 = extractvalue { i32, i1 } %36, 0
  %39 = select i1 %37, i32 %35, i32 %38, !prof !2
  %40 = icmp slt i32 %23, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %39, i32 %23) #8
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = select i1 %43, i32 %41, i32 %44, !prof !2
  %46 = load i32, i32* %24, align 4
  %47 = icmp sgt i32 %46, -1
  %48 = select i1 %47, i32 -2147483648, i32 2147483647
  %49 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %45, i32 %46) #8
  %50 = extractvalue { i32, i1 } %49, 1
  %51 = extractvalue { i32, i1 } %49, 0
  %52 = select i1 %50, i32 %48, i32 %51, !prof !2
  %53 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53)
  store i32 %52, i32* %3, align 4
  %54 = icmp sgt i32 %52, 0
  br i1 %54, label %55, label %64

55:                                               ; preds = %27
  %56 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 1
  %57 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %56, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp sgt i32 %58, %52
  %60 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %61 = select i1 %59, %"class.blink::LayoutUnit"* %60, %"class.blink::LayoutUnit"* %56
  %62 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %61, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %57, align 4
  br label %64

64:                                               ; preds = %27, %55
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53)
  store i32 -2147483648, i32* %24, align 8
  br label %143

65:                                               ; preds = %2
  %66 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 0, i32 2, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %67, %15
  br i1 %68, label %69, label %102

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 0, i32 1
  %71 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %70, align 8
  %72 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet41FragmentainerGroupIndexAtFlowThreadOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnSet"* %71, i32 %15, i32 1) #8
  %73 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %71, i64 0, i32 1, i32 1
  %74 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"* %73, i32 %72) #8
  %75 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %74, i64 0, i32 6
  %76 = load i8, i8* %75, align 4, !range !15
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %102, label %78

78:                                               ; preds = %69
  %79 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup25ColumnLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* %74, i32 %15) #8
  %80 = icmp eq i32 %79, %15
  br i1 %80, label %81, label %102

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 10, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = icmp sgt i32 %83, -1
  %85 = select i1 %84, i32 -2147483648, i32 2147483647
  %86 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %23, i32 %83) #8
  %87 = extractvalue { i32, i1 } %86, 1
  %88 = extractvalue { i32, i1 } %86, 0
  %89 = select i1 %87, i32 %85, i32 %88, !prof !2
  %90 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %90)
  store i32 %89, i32* %4, align 4
  %91 = icmp sgt i32 %89, 0
  br i1 %91, label %92, label %101

92:                                               ; preds = %81
  %93 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 1
  %94 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %93, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = icmp sgt i32 %95, %89
  %97 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %98 = select i1 %96, %"class.blink::LayoutUnit"* %97, %"class.blink::LayoutUnit"* %93
  %99 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %98, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  store i32 %100, i32* %94, align 4
  br label %101

101:                                              ; preds = %81, %92
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %90)
  br label %102

102:                                              ; preds = %69, %65, %101, %78
  %103 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 0, i32 1
  %104 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %103, align 8
  %105 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet41FragmentainerGroupIndexAtFlowThreadOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnSet"* %104, i32 %15, i32 1) #8
  %106 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %104, i64 0, i32 1, i32 1
  %107 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"* %106, i32 %105) #8
  %108 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 6, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = icmp slt i32 %109, 0
  %111 = select i1 %110, i32 -2147483648, i32 2147483647
  %112 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %15, i32 %109) #8
  %113 = extractvalue { i32, i1 } %112, 1
  %114 = extractvalue { i32, i1 } %112, 0
  %115 = select i1 %113, i32 %111, i32 %114, !prof !2
  %116 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %115, i32 %7) #8
  %117 = extractvalue { i32, i1 } %116, 1
  %118 = extractvalue { i32, i1 } %116, 0
  %119 = select i1 %117, i32 %19, i32 %118, !prof !2
  %120 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup25ColumnLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* %107, i32 %15) #8
  %121 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup25ColumnLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* %107, i32 %119) #8
  %122 = icmp eq i32 %120, %121
  br i1 %122, label %143, label %123

123:                                              ; preds = %102
  %124 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup25ColumnLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* %107, i32 %119) #8
  %125 = icmp sgt i32 %124, -1
  %126 = select i1 %125, i32 -2147483648, i32 2147483647
  %127 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %119, i32 %124) #8
  %128 = extractvalue { i32, i1 } %127, 1
  %129 = extractvalue { i32, i1 } %127, 0
  %130 = select i1 %128, i32 %126, i32 %129, !prof !2
  %131 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %131)
  store i32 %130, i32* %5, align 4
  %132 = icmp sgt i32 %130, 0
  br i1 %132, label %133, label %142

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %0, i64 0, i32 1
  %135 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %134, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, %130
  %138 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %139 = select i1 %137, %"class.blink::LayoutUnit"* %138, %"class.blink::LayoutUnit"* %134
  %140 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %139, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  store i32 %141, i32* %135, align 4
  br label %142

142:                                              ; preds = %123, %133
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %131)
  br label %143

143:                                              ; preds = %102, %142, %64
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #5

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #5

declare i32 @_ZNK5blink20LayoutMultiColumnSet41FragmentainerGroupIndexAtFlowThreadOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnSet"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %24, i64 %25
  ret %"class.blink::MultiColumnFragmentainerGroup"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1735"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !16

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %31, align 8
  %33 = icmp eq %"class.blink::LayoutUnit"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 32
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64 %37) #8
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv, i64 0, i64 0)) #8
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1735"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 2
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1735"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 32, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1735"* %0, i32 %27) #8
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1735"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp ult i32 %1, 33
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %5, align 8
  %7 = icmp eq %"class.blink::LayoutUnit"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::LayoutUnit"*
  %10 = icmp eq %"class.blink::LayoutUnit"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1735"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1735"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::LayoutUnit"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #8
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1736"* %19, %"class.blink::LayoutUnit"* nonnull %6) #8
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64 %30) #8
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv, i64 0, i64 0)) #8
  %33 = lshr i64 %31, 2
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::LayoutUnit"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !16

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::LayoutUnit"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #8
  %46 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::LayoutUnit"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::LayoutUnit"*
  %51 = icmp eq %"class.blink::LayoutUnit"* %48, %50
  br i1 %51, label %54, label %52, !prof !16

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1736"* %53, %"class.blink::LayoutUnit"* %48) #8
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1735"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1736"*, %"class.blink::LayoutUnit"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutUnit"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::InitialColumnHeightFinder::ContentRun"* @_ZNK3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1730"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::InitialColumnHeightFinder::ContentRun"*, %"class.blink::InitialColumnHeightFinder::ContentRun"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder::ContentRun", %"class.blink::InitialColumnHeightFinder::ContentRun"* %24, i64 %25
  ret %"class.blink::InitialColumnHeightFinder::ContentRun"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1735"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %24, i64 %25
  ret %"class.blink::LayoutUnit"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1735"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %24, i64 %25
  ret %"class.blink::LayoutUnit"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::InitialColumnHeightFinder::ContentRun"* @_ZN3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1730"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::InitialColumnHeightFinder::ContentRun"*, %"class.blink::InitialColumnHeightFinder::ContentRun"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder::ContentRun", %"class.blink::InitialColumnHeightFinder::ContentRun"* %24, i64 %25
  ret %"class.blink::InitialColumnHeightFinder::ContentRun"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1730"*, %"class.blink::InitialColumnHeightFinder::ContentRun"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::InitialColumnHeightFinder::ContentRun"*, %"class.blink::InitialColumnHeightFinder::ContentRun"** %6, align 8
  %8 = icmp ugt %"class.blink::InitialColumnHeightFinder::ContentRun"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder::ContentRun", %"class.blink::InitialColumnHeightFinder::ContentRun"* %7, i64 %10
  %12 = icmp ugt %"class.blink::InitialColumnHeightFinder::ContentRun"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1730"* %0, i32 %5) #8
  %14 = load %"class.blink::InitialColumnHeightFinder::ContentRun"*, %"class.blink::InitialColumnHeightFinder::ContentRun"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::InitialColumnHeightFinder::ContentRun"* %1 to i64
  %17 = ptrtoint %"class.blink::InitialColumnHeightFinder::ContentRun"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1730"* %0, i32 %5) #8
  %20 = load %"class.blink::InitialColumnHeightFinder::ContentRun"*, %"class.blink::InitialColumnHeightFinder::ContentRun"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder::ContentRun", %"class.blink::InitialColumnHeightFinder::ContentRun"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::InitialColumnHeightFinder::ContentRun"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::InitialColumnHeightFinder::ContentRun"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder::ContentRun", %"class.blink::InitialColumnHeightFinder::ContentRun"* %23, i64 %26
  %28 = bitcast %"class.blink::InitialColumnHeightFinder::ContentRun"* %24 to i64*
  %29 = bitcast %"class.blink::InitialColumnHeightFinder::ContentRun"* %27 to i64*
  %30 = load i64, i64* %28, align 4
  store i64 %30, i64* %29, align 4
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1730"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !16

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::InitialColumnHeightFinder::ContentRun"*, %"class.blink::InitialColumnHeightFinder::ContentRun"** %31, align 8
  %33 = icmp eq %"class.blink::InitialColumnHeightFinder::ContentRun"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 32
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25InitialColumnHeightFinder10ContentRunEEEmm(i64 %37) #8
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25InitialColumnHeightFinder10ContentRunEEEPKcv, i64 0, i64 0)) #8
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1730"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1730"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 32, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1730"* %0, i32 %27) #8
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1730"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp ult i32 %1, 33
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::InitialColumnHeightFinder::ContentRun"*, %"class.blink::InitialColumnHeightFinder::ContentRun"** %5, align 8
  %7 = icmp eq %"class.blink::InitialColumnHeightFinder::ContentRun"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::InitialColumnHeightFinder::ContentRun"*
  %10 = icmp eq %"class.blink::InitialColumnHeightFinder::ContentRun"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1730"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1730"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::InitialColumnHeightFinder::ContentRun"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #8
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1731"* %19, %"class.blink::InitialColumnHeightFinder::ContentRun"* nonnull %6) #8
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25InitialColumnHeightFinder10ContentRunEEEmm(i64 %30) #8
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25InitialColumnHeightFinder10ContentRunEEEPKcv, i64 0, i64 0)) #8
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::InitialColumnHeightFinder::ContentRun"*, %"class.blink::InitialColumnHeightFinder::ContentRun"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::InitialColumnHeightFinder::ContentRun"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !16

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::InitialColumnHeightFinder::ContentRun"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #8
  %46 = load %"class.blink::InitialColumnHeightFinder::ContentRun"*, %"class.blink::InitialColumnHeightFinder::ContentRun"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::InitialColumnHeightFinder::ContentRun"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::InitialColumnHeightFinder::ContentRun"*
  %51 = icmp eq %"class.blink::InitialColumnHeightFinder::ContentRun"* %48, %50
  br i1 %51, label %54, label %52, !prof !16

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1731"* %53, %"class.blink::InitialColumnHeightFinder::ContentRun"* %48) #8
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1730"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25InitialColumnHeightFinder10ContentRunEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1731"*, %"class.blink::InitialColumnHeightFinder::ContentRun"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"class.blink::InitialColumnHeightFinder::ContentRun"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #8
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !14, !10}
!14 = !{!"llvm.loop.unroll.runtime.disable"}
!15 = !{i8 0, i8 2}
!16 = !{!"branch_weights", i32 2000, i32 1}
