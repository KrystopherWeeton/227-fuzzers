; ModuleID = '../../services/network/public/cpp/cross_origin_opener_policy_parser.cc'
source_filename = "../../services/network/public/cpp/cross_origin_opener_policy_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%union.anon.13 = type { %"struct.net::structured_headers::ParameterizedItem" }
%"struct.net::structured_headers::ParameterizedItem" = type { %"class.net::structured_headers::Item", %"class.std::__1::vector.14" }
%"class.net::structured_headers::Item" = type <{ i32, [4 x i8], i64, %"class.std::__1::basic_string", double, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"struct.std::__1::pair.16"*, %"struct.std::__1::pair.16"*, %"class.std::__1::__compressed_pair.17" }
%"struct.std::__1::pair.16" = type { %"class.std::__1::basic_string", %"class.net::structured_headers::Item" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::pair.16"* }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional", i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.7 }
%union.anon.7 = type { %"class.std::__1::basic_string" }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::vector", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional", i32, %"class.absl::optional" }
%"struct.std::__1::pair" = type { i32, %"class.absl::optional" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.absl::optional.9" = type { %"class.absl::optional_internal::optional_data.10" }
%"class.absl::optional_internal::optional_data.10" = type { %"class.absl::optional_internal::optional_data_base.11" }
%"class.absl::optional_internal::optional_data_base.11" = type { %"class.absl::optional_internal::optional_data_dtor_base.12" }
%"class.absl::optional_internal::optional_data_dtor_base.12" = type { i8, %union.anon.13 }

@_ZN7network8features24kCrossOriginOpenerPolicyE = external global %"struct.base::Feature", align 8
@_ZN7network12_GLOBAL__N_130kCrossOriginOpenerPolicyHeaderE = internal constant [27 x i8] c"Cross-Origin-Opener-Policy\00", align 16
@_ZN7network8features33kCrossOriginOpenerPolicyByDefaultE = external global %"struct.base::Feature", align 8
@_ZN7network12_GLOBAL__N_140kCrossOriginOpenerPolicyHeaderReportOnlyE = internal constant [39 x i8] c"Cross-Origin-Opener-Policy-Report-Only\00", align 16
@__const._ZN7network12_GLOBAL__N_111ParseHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE.item = private unnamed_addr constant { { { { i8, [7 x i8], %union.anon.13 } } } } { { { { i8, [7 x i8], %union.anon.13 } } } { { { i8, [7 x i8], %union.anon.13 } } { { i8, [7 x i8], %union.anon.13 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.13 { %"struct.net::structured_headers::ParameterizedItem" { %"class.net::structured_headers::Item" <{ i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.2" { %"struct.std::__1::__compressed_pair_elem.3" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, double 0xFFFFFFFFFFFFFFFF, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %"class.std::__1::vector.14" { %"class.std::__1::__vector_base.15" { %"struct.std::__1::pair.16"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.16"*), %"struct.std::__1::pair.16"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.16"*), %"class.std::__1::__compressed_pair.17" { %"struct.std::__1::__compressed_pair_elem.18" { %"struct.std::__1::pair.16"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.16"*) } } } } } } } } } }, align 8
@_ZN7network12_GLOBAL__N_111kSameOriginE = internal constant [12 x i8] c"same-origin\00", align 1
@_ZN7network12_GLOBAL__N_122kSameOriginAllowPopupsE = internal constant [25 x i8] c"same-origin-allow-popups\00", align 16
@_ZN7network12_GLOBAL__N_19kReportToE = internal constant [10 x i8] c"report-to\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network28ParseCrossOriginOpenerPolicyERKN3net19HttpResponseHeadersERKNS_25CrossOriginEmbedderPolicyE(%"struct.network::CrossOriginOpenerPolicy"* noalias sret, %"class.net::HttpResponseHeaders"* dereferenceable(64), %"struct.network::CrossOriginEmbedderPolicy"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"struct.std::__1::pair", align 8
  %6 = alloca %"struct.std::__1::pair", align 8
  %7 = bitcast %"struct.network::CrossOriginOpenerPolicy"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 80, i1 false)
  tail call void @_ZN7network23CrossOriginOpenerPolicyC1Ev(%"struct.network::CrossOriginOpenerPolicy"* %0) #6
  %8 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN7network8features24kCrossOriginOpenerPolicyE) #6
  br i1 %8, label %9, label %160

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #6
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #6
  %13 = call zeroext i1 @_ZNK3net19HttpResponseHeaders19GetNormalizedHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @_ZN7network12_GLOBAL__N_130kCrossOriginOpenerPolicyHeaderE, i64 0, i64 0), i64 26, %"class.std::__1::basic_string"* nonnull %4) #6
  br i1 %13, label %14, label %77

14:                                               ; preds = %9
  %15 = bitcast %"struct.std::__1::pair"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #6
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = load i8*, i8** %11, align 8
  %21 = select i1 %19, i8* %20, i8* %10
  %22 = load i64, i64* %12, align 8
  %23 = zext i8 %18 to i64
  %24 = select i1 %19, i64 %22, i64 %23
  call fastcc void @_ZN7network12_GLOBAL__N_111ParseHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.std::__1::pair"* nonnull sret %5, i8* %21, i64 %24)
  %25 = getelementptr inbounds %"struct.network::CrossOriginOpenerPolicy", %"struct.network::CrossOriginOpenerPolicy"* %0, i64 0, i32 0
  %26 = getelementptr inbounds %"struct.network::CrossOriginOpenerPolicy", %"struct.network::CrossOriginOpenerPolicy"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  store i32 %28, i32* %25, align 8
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %54, label %32

32:                                               ; preds = %14
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  %37 = getelementptr inbounds %"struct.network::CrossOriginOpenerPolicy", %"struct.network::CrossOriginOpenerPolicy"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %36, label %51, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #7
  br label %46

46:                                               ; preds = %43, %38
  %47 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #6
  %49 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  store i8 0, i8* %50, align 1
  store i8 0, i8* %48, align 8
  br label %67

51:                                               ; preds = %32
  %52 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #6
  store i8 1, i8* %34, align 8
  br label %67

54:                                               ; preds = %14
  %55 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %69, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"struct.network::CrossOriginOpenerPolicy", %"struct.network::CrossOriginOpenerPolicy"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %60 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %66) #7
  br label %67

67:                                               ; preds = %51, %46, %58, %64
  %68 = phi i8* [ %55, %64 ], [ %55, %58 ], [ %29, %46 ], [ %29, %51 ]
  store i8 0, i8* %68, align 8
  br label %69

69:                                               ; preds = %67, %54
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #6
  %70 = load i32, i32* %25, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %81

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginEmbedderPolicy"* %2, i64 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = call zeroext i1 @_ZN7network33CompatibleWithCrossOriginIsolatedENS_5mojom30CrossOriginEmbedderPolicyValueE(i32 %74) #6
  br i1 %75, label %76, label %81

76:                                               ; preds = %72
  store i32 3, i32* %25, align 8
  br label %81

77:                                               ; preds = %9
  %78 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN7network8features33kCrossOriginOpenerPolicyByDefaultE) #6
  br i1 %78, label %79, label %81

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"struct.network::CrossOriginOpenerPolicy", %"struct.network::CrossOriginOpenerPolicy"* %0, i64 0, i32 0
  store i32 1, i32* %80, align 8
  br label %81

81:                                               ; preds = %77, %79, %69, %72, %76
  %82 = call zeroext i1 @_ZNK3net19HttpResponseHeaders19GetNormalizedHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* %1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @_ZN7network12_GLOBAL__N_140kCrossOriginOpenerPolicyHeaderReportOnlyE, i64 0, i64 0), i64 38, %"class.std::__1::basic_string"* nonnull %4) #6
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %152

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::pair"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %86) #6
  %87 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  %91 = load i8*, i8** %11, align 8
  %92 = select i1 %90, i8* %91, i8* %10
  %93 = load i64, i64* %12, align 8
  %94 = zext i8 %89 to i64
  %95 = select i1 %90, i64 %93, i64 %94
  call fastcc void @_ZN7network12_GLOBAL__N_111ParseHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.std::__1::pair"* nonnull sret %6, i8* %92, i64 %95)
  %96 = getelementptr inbounds %"struct.network::CrossOriginOpenerPolicy", %"struct.network::CrossOriginOpenerPolicy"* %0, i64 0, i32 2
  %97 = getelementptr inbounds %"struct.network::CrossOriginOpenerPolicy", %"struct.network::CrossOriginOpenerPolicy"* %0, i64 0, i32 3
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 0
  %99 = load i32, i32* %98, align 8
  store i32 %99, i32* %96, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %101 = load i8, i8* %100, align 8, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %125, label %103

103:                                              ; preds = %85
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %105 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp eq i8 %106, 0
  %108 = getelementptr inbounds %"struct.network::CrossOriginOpenerPolicy", %"struct.network::CrossOriginOpenerPolicy"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %107, label %122, label %109

109:                                              ; preds = %103
  %110 = bitcast %"class.std::__1::basic_string"* %108 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  call void @_ZdlPv(i8* %116) #7
  br label %117

117:                                              ; preds = %114, %109
  %118 = bitcast %"class.std::__1::basic_string"* %108 to i8*
  %119 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 24, i1 false) #6
  %120 = bitcast %"class.std::__1::basic_string"* %104 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  store i8 0, i8* %121, align 1
  store i8 0, i8* %119, align 8
  br label %138

122:                                              ; preds = %103
  %123 = bitcast %"class.std::__1::basic_string"* %108 to i8*
  %124 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 24, i1 false) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 24, i1 false) #6
  store i8 1, i8* %105, align 8
  br label %138

125:                                              ; preds = %85
  %126 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8, i8* %126, align 8, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %140, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"struct.network::CrossOriginOpenerPolicy", %"struct.network::CrossOriginOpenerPolicy"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %131 = bitcast %"class.std::__1::basic_string"* %130 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %130, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  call void @_ZdlPv(i8* %137) #7
  br label %138

138:                                              ; preds = %122, %117, %129, %135
  %139 = phi i8* [ %126, %135 ], [ %126, %129 ], [ %100, %117 ], [ %100, %122 ]
  store i8 0, i8* %139, align 8
  br label %140

140:                                              ; preds = %138, %125
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %86) #6
  %141 = load i32, i32* %96, align 8
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %152

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginEmbedderPolicy"* %2, i64 0, i32 0
  %145 = load i32, i32* %144, align 8
  %146 = call zeroext i1 @_ZN7network33CompatibleWithCrossOriginIsolatedENS_5mojom30CrossOriginEmbedderPolicyValueE(i32 %145) #6
  br i1 %146, label %151, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginEmbedderPolicy"* %2, i64 0, i32 2
  %149 = load i32, i32* %148, align 8
  %150 = call zeroext i1 @_ZN7network33CompatibleWithCrossOriginIsolatedENS_5mojom30CrossOriginEmbedderPolicyValueE(i32 %149) #6
  br i1 %150, label %151, label %152

151:                                              ; preds = %147, %143
  store i32 3, i32* %96, align 8
  br label %152

152:                                              ; preds = %83, %140, %147, %151
  %153 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %84, %83 ], [ %87, %140 ], [ %87, %147 ], [ %87, %151 ]
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %153, i64 0, i32 1, i32 0
  %155 = load i8, i8* %154, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %152
  %158 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %158) #7
  br label %159

159:                                              ; preds = %152, %157
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #6
  br label %160

160:                                              ; preds = %159, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN7network23CrossOriginOpenerPolicyC1Ev(%"struct.network::CrossOriginOpenerPolicy"*) unnamed_addr #2

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK3net19HttpResponseHeaders19GetNormalizedHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"*, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN7network12_GLOBAL__N_111ParseHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.std::__1::pair"* noalias nocapture sret, i8*, i64) unnamed_addr #0 {
  %4 = alloca %"class.absl::optional", align 8
  %5 = alloca %"class.absl::optional.9", align 8
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #6
  %7 = bitcast %"class.absl::optional"* %4 to i64*
  store i64 -6148914691236517206, i64* %7, align 8
  store i8 0, i8* %6, align 8
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %union.anon.7* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #6
  %10 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %10) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 getelementptr inbounds ({ { { { i8, [7 x i8], %union.anon.13 } } } }, { { { { i8, [7 x i8], %union.anon.13 } } } }* @__const._ZN7network12_GLOBAL__N_111ParseHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE.item, i64 0, i32 0, i32 0, i32 0, i32 0), i64 88, i1 false)
  call void @_ZN3net18structured_headers9ParseItemEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.absl::optional.9"* nonnull sret %5, i8* %1, i64 %2) #6
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %142, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 4
  br i1 %16, label %17, label %142

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 3
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp eq i64 %26, 11
  br i1 %27, label %28, label %35

28:                                               ; preds = %17
  %29 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %18, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN7network12_GLOBAL__N_111kSameOriginE, i64 0, i64 0), i64 11) #6
  %30 = icmp eq i32 %29, 0
  %31 = select i1 %30, i32 0, i32 2
  %32 = load i8, i8* %20, align 1
  %33 = load i64, i64* %23, align 8
  %34 = zext i8 %32 to i64
  br label %35

35:                                               ; preds = %28, %17
  %36 = phi i64 [ %34, %28 ], [ %25, %17 ]
  %37 = phi i64 [ %33, %28 ], [ %24, %17 ]
  %38 = phi i8 [ %32, %28 ], [ %21, %17 ]
  %39 = phi i32 [ %31, %28 ], [ 2, %17 ]
  %40 = icmp slt i8 %38, 0
  %41 = select i1 %40, i64 %37, i64 %36
  %42 = icmp eq i64 %41, 24
  br i1 %42, label %43, label %47

43:                                               ; preds = %35
  %44 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %18, i64 0, i64 -1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZN7network12_GLOBAL__N_122kSameOriginAllowPopupsE, i64 0, i64 0), i64 24) #6
  %45 = icmp eq i32 %44, 0
  %46 = select i1 %45, i32 1, i32 %39
  br label %47

47:                                               ; preds = %43, %35
  %48 = phi i32 [ %39, %35 ], [ %46, %43 ]
  %49 = load i8, i8* %10, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %52, !prof !3

51:                                               ; preds = %47
  call void @llvm.trap() #6
  unreachable

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %54 = load %"struct.std::__1::pair.16"*, %"struct.std::__1::pair.16"** %53, align 8
  %55 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %56 = load %"struct.std::__1::pair.16"*, %"struct.std::__1::pair.16"** %55, align 8
  %57 = icmp eq %"struct.std::__1::pair.16"* %54, %56
  br i1 %57, label %81, label %58

58:                                               ; preds = %52, %73
  %59 = phi %"struct.std::__1::pair.16"* [ %74, %73 ], [ %54, %52 ]
  %60 = bitcast %"struct.std::__1::pair.16"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  %64 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = zext i8 %62 to i64
  %67 = select i1 %63, i64 %65, i64 %66
  %68 = icmp eq i64 %67, 9
  br i1 %68, label %69, label %73

69:                                               ; preds = %58
  %70 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %59, i64 0, i32 0
  %71 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %70, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN7network12_GLOBAL__N_19kReportToE, i64 0, i64 0), i64 9) #6
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %69, %58
  %74 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %59, i64 1
  %75 = icmp eq %"struct.std::__1::pair.16"* %74, %56
  br i1 %75, label %76, label %58

76:                                               ; preds = %69, %73
  %77 = phi %"struct.std::__1::pair.16"* [ %56, %73 ], [ %59, %69 ]
  %78 = load i8, i8* %10, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %81, !prof !3

80:                                               ; preds = %76
  call void @llvm.trap() #6
  unreachable

81:                                               ; preds = %52, %76
  %82 = phi %"struct.std::__1::pair.16"* [ %77, %76 ], [ %54, %52 ]
  %83 = load %"struct.std::__1::pair.16"*, %"struct.std::__1::pair.16"** %55, align 8
  %84 = icmp eq %"struct.std::__1::pair.16"* %82, %83
  br i1 %84, label %142, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %82, i64 0, i32 1, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 3
  br i1 %88, label %89, label %142

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %82, i64 0, i32 1, i32 3
  %91 = load i8, i8* %6, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  %93 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %92, label %125, label %94

94:                                               ; preds = %89
  %95 = icmp eq %"class.std::__1::basic_string"* %93, %90
  br i1 %95, label %139, label %96

96:                                               ; preds = %94
  %97 = bitcast %"class.std::__1::basic_string"* %93 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  %101 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %100, label %115, label %105

105:                                              ; preds = %96
  br i1 %104, label %109, label %106

106:                                              ; preds = %105
  %107 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  %108 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 24, i1 false) #6
  br label %142

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %82, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %93, i8* %111, i64 %113) #6
  br label %142

115:                                              ; preds = %96
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %82, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  %121 = zext i8 %103 to i64
  %122 = select i1 %104, i8* %117, i8* %120
  %123 = select i1 %104, i64 %119, i64 %121
  %124 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %93, i8* %122, i64 %123) #6
  br label %142

125:                                              ; preds = %89
  %126 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %133, label %130

130:                                              ; preds = %125
  %131 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  %132 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 24, i1 false) #6
  br label %138

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  %136 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %82, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %137 = load i64, i64* %136, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %93, i8* %135, i64 %137) #6
  br label %138

138:                                              ; preds = %133, %130
  store i8 1, i8* %6, align 8
  br label %139

139:                                              ; preds = %94, %138
  %140 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  store i32 %48, i32* %140, align 8, !alias.scope !4
  %141 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 32, i1 false) #6, !alias.scope !4
  br label %148

142:                                              ; preds = %81, %3, %85, %106, %109, %115, %13
  %143 = phi i32 [ %48, %85 ], [ %48, %106 ], [ %48, %109 ], [ %48, %115 ], [ %48, %81 ], [ 2, %3 ], [ 2, %13 ]
  %144 = load i8, i8* %6, align 8, !noalias !4
  %145 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  store i32 %143, i32* %145, align 8, !alias.scope !4
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 32, i1 false) #6, !alias.scope !4
  %147 = icmp eq i8 %144, 0
  br i1 %147, label %155, label %148

148:                                              ; preds = %139, %142
  %149 = phi i8 [ 1, %139 ], [ %144, %142 ]
  %150 = phi i8* [ %141, %139 ], [ %146, %142 ]
  %151 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %152 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %153 = bitcast %"class.std::__1::basic_string"* %152 to i8*
  %154 = bitcast %"class.std::__1::basic_string"* %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 24, i1 false) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 24, i1 false) #6, !noalias !4
  store i8 1, i8* %150, align 8, !alias.scope !4
  br label %155

155:                                              ; preds = %142, %148
  %156 = phi i8 [ 0, %142 ], [ %149, %148 ]
  %157 = load i8, i8* %10, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %162, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net18structured_headers17ParameterizedItemD1Ev(%"struct.net::structured_headers::ParameterizedItem"* %160) #6
  store i8 0, i8* %10, align 8
  %161 = load i8, i8* %6, align 8, !range !2
  br label %162

162:                                              ; preds = %155, %159
  %163 = phi i8 [ %156, %155 ], [ %161, %159 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %10) #6
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %175, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %167 = bitcast %"class.std::__1::basic_string"* %166 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %168 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %167, i64 0, i32 1, i32 0
  %169 = load i8, i8* %168, align 1
  %170 = icmp slt i8 %169, 0
  br i1 %170, label %171, label %174

171:                                              ; preds = %165
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %166, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load i8*, i8** %172, align 8
  call void @_ZdlPv(i8* %173) #7
  br label %174

174:                                              ; preds = %171, %165
  store i8 0, i8* %6, align 8
  br label %175

175:                                              ; preds = %162, %174
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN7network33CompatibleWithCrossOriginIsolatedENS_5mojom30CrossOriginEmbedderPolicyValueE(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3net18structured_headers9ParseItemEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.absl::optional.9"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net18structured_headers17ParameterizedItemD1Ev(%"struct.net::structured_headers::ParameterizedItem"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__19make_pairIRN7network5mojom28CrossOriginOpenerPolicyValueEN4absl8optionalINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSF_IT0_E4typeEEEOSG_OSJ_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__19make_pairIRN7network5mojom28CrossOriginOpenerPolicyValueEN4absl8optionalINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSF_IT0_E4typeEEEOSG_OSJ_"}
