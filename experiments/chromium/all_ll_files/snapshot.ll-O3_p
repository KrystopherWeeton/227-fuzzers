; ModuleID = '../../v8/src/snapshot/snapshot.cc'
source_filename = "../../v8/src/snapshot/snapshot.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::base::Flags" = type { i32 }
%"struct.std::__1::atomic.1254" = type { %"struct.std::__1::__atomic_base.1255" }
%"struct.std::__1::__atomic_base.1255" = type { %"struct.std::__1::__atomic_base.1256" }
%"struct.std::__1::__atomic_base.1256" = type { %"struct.std::__1::__cxx_atomic_impl.1257" }
%"struct.std::__1::__cxx_atomic_impl.1257" = type { %"struct.std::__1::__cxx_atomic_base_impl.1258" }
%"struct.std::__1::__cxx_atomic_base_impl.1258" = type { i32 }
%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.543" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.550", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.556", %"class.std::__1::unordered_map.582", %"class.std::__1::unordered_map.556", %"class.std::__1::unordered_map.606", %"class.std::__1::vector.634", i8, %"class.std::__1::unique_ptr.641", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.647", %"class.std::__1::unique_ptr.668", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.678", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.818", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.831", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.841", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.853", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.928", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.971"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.981", i32, i8, i8, i32, i32, %"class.std::__1::vector.987", %"class.std::__1::vector.987", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.994", i64, %"class.std::__1::unordered_map.995", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.543", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1047", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1085", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1119", %"class.std::__1::vector.1123", %"class.std::__1::vector.1123", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.647" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.648", %"class.std::__1::unique_ptr.662" }
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.651" }
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.std::__1::unique_ptr.653"*, %"class.std::__1::unique_ptr.653"*, %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.1249" }
%"class.std::__1::__compressed_pair.1249" = type { %"struct.std::__1::__compressed_pair_elem.1250" }
%"struct.std::__1::__compressed_pair_elem.1250" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.std::__1::unique_ptr.653"* }
%"class.std::__1::unique_ptr.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.668" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.671", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.671" = type { %"struct.std::__1::__atomic_base.672" }
%"struct.std::__1::__atomic_base.672" = type { %"struct.std::__1::__cxx_atomic_impl.673" }
%"struct.std::__1::__cxx_atomic_impl.673" = type { %"struct.std::__1::__cxx_atomic_base_impl.674" }
%"struct.std::__1::__cxx_atomic_base_impl.674" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.678" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.679", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.679" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.680", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.680" = type { %"class.std::__1::__vector_base.681" }
%"class.std::__1::__vector_base.681" = type { %"class.std::__1::unique_ptr.682"*, %"class.std::__1::unique_ptr.682"*, %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::unique_ptr.682" = type opaque
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.std::__1::unique_ptr.682"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.688 }
%union.anon.688 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.689", %"class.std::__1::unique_ptr.695", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.701", %"class.std::__1::unique_ptr.707", %"class.std::__1::unique_ptr.713", %"class.std::__1::unique_ptr.719", %"class.std::__1::unique_ptr.725", %"class.std::__1::set.731", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.695" = type { %"class.std::__1::__compressed_pair.696" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.707" = type { %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.713" = type { %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.719" = type { %"class.std::__1::__compressed_pair.720" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.731" = type { %"class.std::__1::__tree.732" }
%"class.std::__1::__tree.732" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.733", %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.740" }
%"class.v8::internal::TaggedImpl.740" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.739" }
%"class.v8::internal::TaggedImpl.739" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.747", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type { %"class.v8::internal::HeapObjectToIndexHashMap"* }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.753", %"class.v8::internal::DetachableVector.754", %"class.v8::internal::DetachableVector.753", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.754" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.753" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.741", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.755", %"class.std::__1::vector.761", %"class.std::__1::unique_ptr.768", %"class.std::__1::vector.775", %"class.std::__1::unique_ptr.782", i64, %"class.std::__1::vector.788", %"class.std::__1::vector.796", %"class.std::__1::vector.804", i8, i8, i32 }
%"class.std::__1::unique_ptr.755" = type { %"class.std::__1::__compressed_pair.756" }
%"class.std::__1::__compressed_pair.756" = type { %"struct.std::__1::__compressed_pair_elem.757" }
%"struct.std::__1::__compressed_pair_elem.757" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.761" = type { %"class.std::__1::__vector_base.762" }
%"class.std::__1::__vector_base.762" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.763" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.768" = type { %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { %"class.v8::internal::GlobalHandles::NodeSpace.771"* }
%"class.v8::internal::GlobalHandles::NodeSpace.771" = type opaque
%"class.std::__1::vector.775" = type { %"class.std::__1::__vector_base.776" }
%"class.std::__1::__vector_base.776" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.777" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.782" = type { %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.788" = type { %"class.std::__1::__vector_base.789" }
%"class.std::__1::__vector_base.789" = type { %"struct.std::__1::pair.790"*, %"struct.std::__1::pair.790"*, %"class.std::__1::__compressed_pair.791" }
%"struct.std::__1::pair.790" = type opaque
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"struct.std::__1::pair.790"* }
%"class.std::__1::vector.796" = type { %"class.std::__1::__vector_base.797" }
%"class.std::__1::__vector_base.797" = type { %"struct.std::__1::pair.798"*, %"struct.std::__1::pair.798"*, %"class.std::__1::__compressed_pair.799" }
%"struct.std::__1::pair.798" = type opaque
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"struct.std::__1::pair.798"* }
%"class.std::__1::vector.804" = type { %"class.std::__1::__vector_base.805" }
%"class.std::__1::__vector_base.805" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.806" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.811", %"class.std::__1::vector.818" }
%"class.std::__1::vector.811" = type { %"class.std::__1::__vector_base.812" }
%"class.std::__1::__vector_base.812" = type { i64**, i64**, %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.825" }
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.818" = type { %"class.std::__1::__vector_base.819" }
%"class.std::__1::__vector_base.819" = type { i32*, i32*, %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.831" = type { %"struct.std::__1::__atomic_base.832" }
%"struct.std::__1::__atomic_base.832" = type { %"struct.std::__1::__cxx_atomic_impl.833" }
%"struct.std::__1::__cxx_atomic_impl.833" = type { %"struct.std::__1::__cxx_atomic_base_impl.834" }
%"struct.std::__1::__cxx_atomic_base_impl.834" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.841" = type { %"struct.std::__1::__atomic_base.842" }
%"struct.std::__1::__atomic_base.842" = type { %"struct.std::__1::__cxx_atomic_impl.843" }
%"struct.std::__1::__cxx_atomic_impl.843" = type { %"struct.std::__1::__cxx_atomic_base_impl.844" }
%"struct.std::__1::__cxx_atomic_base_impl.844" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.846" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.848 }
%union.anon.848 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.853" = type { %"class.std::__1::__hash_table.854" }
%"class.std::__1::__hash_table.854" = type <{ %"class.std::__1::unique_ptr.855", %"class.std::__1::__compressed_pair.865", %"class.std::__1::__compressed_pair.870", %"class.std::__1::__compressed_pair.873", [4 x i8] }>
%"class.std::__1::unique_ptr.855" = type { %"class.std::__1::__compressed_pair.856" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.857", %"struct.std::__1::__compressed_pair_elem.859" }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"struct.std::__1::__hash_node_base.858"** }
%"struct.std::__1::__hash_node_base.858" = type { %"struct.std::__1::__hash_node_base.858"* }
%"struct.std::__1::__compressed_pair_elem.859" = type { %"class.std::__1::__bucket_list_deallocator.860" }
%"class.std::__1::__bucket_list_deallocator.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"struct.std::__1::__hash_node_base.858" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.879", %"class.v8::internal::Handle.885", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.886", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.879" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.885" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.886" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.887", %"class.std::__1::vector.893", %"class.std::__1::unique_ptr.901", %"class.std::__1::unique_ptr.907", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.913", %"class.std::__1::vector.919", %"struct.std::__1::pair.927" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.887" = type { %"class.std::__1::__compressed_pair.888" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.893" = type { %"class.std::__1::__vector_base.894" }
%"class.std::__1::__vector_base.894" = type { %"class.std::__1::unique_ptr.895"*, %"class.std::__1::unique_ptr.895"*, %"class.std::__1::__compressed_pair.896" }
%"class.std::__1::unique_ptr.895" = type opaque
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.897" }
%"struct.std::__1::__compressed_pair_elem.897" = type { %"class.std::__1::unique_ptr.895"* }
%"class.std::__1::unique_ptr.901" = type { %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.909" }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.913" = type { %"class.std::__1::__compressed_pair.914" }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.919" = type { %"class.std::__1::__vector_base.920" }
%"class.std::__1::__vector_base.920" = type { %"struct.std::__1::pair.921"*, %"struct.std::__1::pair.921"*, %"class.std::__1::__compressed_pair.922" }
%"struct.std::__1::pair.921" = type opaque
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::pair.921"* }
%"struct.std::__1::pair.927" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.928" = type { %"class.std::__1::__compressed_pair.929" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.931", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.931" = type { %"class.std::__1::__hash_table.932" }
%"class.std::__1::__hash_table.932" = type <{ %"class.std::__1::unique_ptr.933", %"class.std::__1::__compressed_pair.943", %"class.std::__1::__compressed_pair.948", %"class.std::__1::__compressed_pair.952", [4 x i8] }>
%"class.std::__1::unique_ptr.933" = type { %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935", %"struct.std::__1::__compressed_pair_elem.937" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"struct.std::__1::__hash_node_base.936"** }
%"struct.std::__1::__hash_node_base.936" = type { %"struct.std::__1::__hash_node_base.936"* }
%"struct.std::__1::__compressed_pair_elem.937" = type { %"class.std::__1::__bucket_list_deallocator.938" }
%"class.std::__1::__bucket_list_deallocator.938" = type { %"class.std::__1::__compressed_pair.939" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.944" = type { %"struct.std::__1::__hash_node_base.936" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.966" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.960"**, %"struct.std::__1::pair.960"**, %"struct.std::__1::pair.960"**, %"class.std::__1::__compressed_pair.961" }
%"struct.std::__1::pair.960" = type opaque
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.962" }
%"struct.std::__1::__compressed_pair_elem.962" = type { %"struct.std::__1::pair.960"** }
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.971" = type { %"class.std::__1::__vector_base.972" }
%"class.std::__1::__vector_base.972" = type { %"class.v8::internal::Handle.973"*, %"class.v8::internal::Handle.973"*, %"class.std::__1::__compressed_pair.974" }
%"class.v8::internal::Handle.973" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.974" = type { %"struct.std::__1::__compressed_pair_elem.975" }
%"struct.std::__1::__compressed_pair_elem.975" = type { %"class.v8::internal::Handle.973"* }
%"class.v8::internal::AddressToIndexHashMap" = type { %"class.v8::internal::PointerToIndexHashMap.979" }
%"class.v8::internal::PointerToIndexHashMap.979" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<unsigned long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<unsigned long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ i64, i32, i32, i8, [7 x i8] }>
%"class.v8::internal::HeapObjectToIndexHashMap" = type { %"class.v8::internal::PointerToIndexHashMap" }
%"class.v8::internal::PointerToIndexHashMap" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.980", [128 x i8] }
%"class.v8::internal::Vector.980" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.836", i32, %"class.v8::Local.0" }
%"class.v8::Local.836" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.981" = type { %"class.std::__1::__compressed_pair.982" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.811", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.987" = type { %"class.std::__1::__vector_base.988" }
%"class.std::__1::__vector_base.988" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.994" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.995" = type { %"class.std::__1::__hash_table.996" }
%"class.std::__1::__hash_table.996" = type <{ %"class.std::__1::unique_ptr.997", %"class.std::__1::__compressed_pair.1007", %"class.std::__1::__compressed_pair.1012", %"class.std::__1::__compressed_pair.1015", [4 x i8] }>
%"class.std::__1::unique_ptr.997" = type { %"class.std::__1::__compressed_pair.998" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.999", %"struct.std::__1::__compressed_pair_elem.1001" }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"struct.std::__1::__hash_node_base.1000"** }
%"struct.std::__1::__hash_node_base.1000" = type { %"struct.std::__1::__hash_node_base.1000"* }
%"struct.std::__1::__compressed_pair_elem.1001" = type { %"class.std::__1::__bucket_list_deallocator.1002" }
%"class.std::__1::__bucket_list_deallocator.1002" = type { %"class.std::__1::__compressed_pair.1003" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.1008" }
%"struct.std::__1::__compressed_pair_elem.1008" = type { %"struct.std::__1::__hash_node_base.1000" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1015" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1019", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1044", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1045", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1019" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.538, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.538 = type { i64 }
%"class.std::__1::weak_ptr.1044" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1045" = type { %"class.v8::PersistentBase.1046" }
%"class.v8::PersistentBase.1046" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1020", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1020" = type { %"class.std::__1::__hash_table.1021" }
%"class.std::__1::__hash_table.1021" = type <{ %"class.std::__1::unique_ptr.1022", %"class.std::__1::__compressed_pair.1032", %"class.std::__1::__compressed_pair.1037", %"class.std::__1::__compressed_pair.1040", [4 x i8] }>
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024", %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"struct.std::__1::__hash_node_base.1025"** }
%"struct.std::__1::__hash_node_base.1025" = type { %"struct.std::__1::__hash_node_base.1025"* }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"class.std::__1::__bucket_list_deallocator.1027" }
%"class.std::__1::__bucket_list_deallocator.1027" = type { %"class.std::__1::__compressed_pair.1028" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"struct.std::__1::__hash_node_base.1025" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1047" = type { %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1076", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1052", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1056", %"class.std::__1::unique_ptr.1062", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1068", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1052" = type { %"struct.std::__1::__atomic_base.1053" }
%"struct.std::__1::__atomic_base.1053" = type { %"struct.std::__1::__cxx_atomic_impl.1054" }
%"struct.std::__1::__cxx_atomic_impl.1054" = type { %"struct.std::__1::__cxx_atomic_base_impl.1055" }
%"struct.std::__1::__cxx_atomic_base_impl.1055" = type { i32 }
%"class.std::__1::unique_ptr.1056" = type { %"class.std::__1::__compressed_pair.1057" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.811" }
%"class.std::__1::unique_ptr.1062" = type { %"class.std::__1::__compressed_pair.1063" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.1064" }
%"struct.std::__1::__compressed_pair_elem.1064" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1068" = type { %"class.std::__1::__vector_base.1069" }
%"class.std::__1::__vector_base.1069" = type { %"struct.std::__1::pair.1070"*, %"struct.std::__1::pair.1070"*, %"class.std::__1::__compressed_pair.1071" }
%"struct.std::__1::pair.1070" = type opaque
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.1072" }
%"struct.std::__1::__compressed_pair_elem.1072" = type { %"struct.std::__1::pair.1070"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1076" = type { %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1085" = type { %"class.std::__1::__compressed_pair.1086" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.837", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.837" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1093" }
%"class.std::__1::unordered_map.1093" = type { %"class.std::__1::__hash_table.1094" }
%"class.std::__1::__hash_table.1094" = type <{ %"class.std::__1::unique_ptr.1095", %"class.std::__1::__compressed_pair.1105", %"class.std::__1::__compressed_pair.1110", %"class.std::__1::__compressed_pair.1113", [4 x i8] }>
%"class.std::__1::unique_ptr.1095" = type { %"class.std::__1::__compressed_pair.1096" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097", %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"struct.std::__1::__hash_node_base.1098"** }
%"struct.std::__1::__hash_node_base.1098" = type { %"struct.std::__1::__hash_node_base.1098"* }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"class.std::__1::__bucket_list_deallocator.1100" }
%"class.std::__1::__bucket_list_deallocator.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"struct.std::__1::__hash_node_base.1098" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.1119" = type { %"struct.std::__1::__atomic_base.1120" }
%"struct.std::__1::__atomic_base.1120" = type { %"struct.std::__1::__cxx_atomic_impl.1121" }
%"struct.std::__1::__cxx_atomic_impl.1121" = type { %"struct.std::__1::__cxx_atomic_base_impl.1122" }
%"struct.std::__1::__cxx_atomic_base_impl.1122" = type { %"class.std::__1::vector.1123"* }
%"class.std::__1::vector.1123" = type { %"class.std::__1::__vector_base.1124" }
%"class.std::__1::__vector_base.1124" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1125" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.1126" }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type <{ %"class.v8::internal::GlobalSafepoint::Barrier", %"class.v8::internal::Heap"*, %"class.v8::base::Mutex", %"class.v8::internal::LocalHeap"*, i32, [4 x i8] }>
%"class.v8::internal::GlobalSafepoint::Barrier" = type { %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", %"class.v8::base::ConditionVariable", i8, i32 }
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.543", %"class.std::__1::vector.543" }
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.582" = type { %"class.std::__1::__hash_table.583" }
%"class.std::__1::__hash_table.583" = type <{ %"class.std::__1::unique_ptr.584", %"class.std::__1::__compressed_pair.594", %"class.std::__1::__compressed_pair.599", %"class.std::__1::__compressed_pair.602", [4 x i8] }>
%"class.std::__1::unique_ptr.584" = type { %"class.std::__1::__compressed_pair.585" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586", %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"struct.std::__1::__hash_node_base.587"** }
%"struct.std::__1::__hash_node_base.587" = type { %"struct.std::__1::__hash_node_base.587"* }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.std::__1::__bucket_list_deallocator.589" }
%"class.std::__1::__bucket_list_deallocator.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"struct.std::__1::__hash_node_base.587" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.556" = type { %"class.std::__1::__hash_table.557" }
%"class.std::__1::__hash_table.557" = type <{ %"class.std::__1::unique_ptr.558", %"class.std::__1::__compressed_pair.568", %"class.std::__1::__compressed_pair.573", %"class.std::__1::__compressed_pair.576", [4 x i8] }>
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560", %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"struct.std::__1::__hash_node_base.561"** }
%"struct.std::__1::__hash_node_base.561" = type { %"struct.std::__1::__hash_node_base.561"* }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.std::__1::__bucket_list_deallocator.563" }
%"class.std::__1::__bucket_list_deallocator.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"struct.std::__1::__hash_node_base.561" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.606" = type { %"class.std::__1::__hash_table.607" }
%"class.std::__1::__hash_table.607" = type <{ %"class.std::__1::unique_ptr.608", %"class.std::__1::__compressed_pair.618", %"class.std::__1::__compressed_pair.623", %"class.std::__1::__compressed_pair.628", [4 x i8] }>
%"class.std::__1::unique_ptr.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610", %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"struct.std::__1::__hash_node_base.611"** }
%"struct.std::__1::__hash_node_base.611" = type { %"struct.std::__1::__hash_node_base.611"* }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.std::__1::__bucket_list_deallocator.613" }
%"class.std::__1::__bucket_list_deallocator.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"struct.std::__1::__hash_node_base.611" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.634" = type { %"class.std::__1::__vector_base.635" }
%"class.std::__1::__vector_base.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.543" = type { %"class.std::__1::__vector_base.544" }
%"class.std::__1::__vector_base.544" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::SnapshotData" = type { %"class.v8::internal::SerializedData.base", [3 x i8] }
%"class.v8::internal::SerializedData.base" = type <{ i32 (...)**, i8*, i32, i8 }>
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::internal::SerializedData" = type <{ i32 (...)**, i8*, i32, i8, [3 x i8] }>
%"class.std::__1::vector.1132" = type { %"class.std::__1::__vector_base.1133" }
%"class.std::__1::__vector_base.1133" = type { %"class.v8::internal::Handle.1134"*, %"class.v8::internal::Handle.1134"*, %"class.std::__1::__compressed_pair.1135" }
%"class.v8::internal::Handle.1134" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1135" = type { %"struct.std::__1::__compressed_pair_elem.1136" }
%"struct.std::__1::__compressed_pair_elem.1136" = type { %"class.v8::internal::Handle.1134"* }
%"class.v8::internal::HeapObjectIterator" = type { %"class.v8::internal::Heap"*, %"class.std::__1::unique_ptr.1140", i32, %"class.v8::internal::HeapObjectsFilter"*, %"class.v8::internal::SpaceIterator"*, %"class.std::__1::unique_ptr.1146" }
%"class.std::__1::unique_ptr.1140" = type { %"class.std::__1::__compressed_pair.1141" }
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.1142" }
%"struct.std::__1::__compressed_pair_elem.1142" = type { %"class.v8::internal::SafepointScope"* }
%"class.v8::internal::SafepointScope" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::HeapObjectsFilter" = type opaque
%"class.v8::internal::SpaceIterator" = type <{ i32 (...)**, %"class.v8::internal::Heap"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1146" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.v8::internal::ObjectIterator"* }
%"class.v8::internal::ObjectIterator" = type { i32 (...)** }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.std::__1::vector.1162" = type { %"class.std::__1::__vector_base.1163" }
%"class.std::__1::__vector_base.1163" = type { %"class.v8::internal::Context"*, %"class.v8::internal::Context"*, %"class.std::__1::__compressed_pair.1164" }
%"class.std::__1::__compressed_pair.1164" = type { %"struct.std::__1::__compressed_pair_elem.1165" }
%"struct.std::__1::__compressed_pair_elem.1165" = type { %"class.v8::internal::Context"* }
%"class.std::__1::vector.1169" = type { %"class.std::__1::__vector_base.1170" }
%"class.std::__1::__vector_base.1170" = type { %"struct.v8::SerializeInternalFieldsCallback"*, %"struct.v8::SerializeInternalFieldsCallback"*, %"class.std::__1::__compressed_pair.1171" }
%"struct.v8::SerializeInternalFieldsCallback" = type { { i8*, i32 } (%"class.v8::Object"*, i32, i8*)*, i8* }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.1172" }
%"struct.std::__1::__compressed_pair_elem.1172" = type { %"struct.v8::SerializeInternalFieldsCallback"* }
%"class.v8::ExtensionConfiguration" = type { i32, i8** }
%"struct.v8::DeserializeInternalFieldsCallback" = type { void (%"class.v8::Object"*, i32, i8*, i32, i8*)*, i8* }
%"class.v8::internal::CombinationAssertScope" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.1283" = type { %"class.std::__1::__vector_base.1284" }
%"class.std::__1::__vector_base.1284" = type { %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"*, %"class.std::__1::__compressed_pair.1285" }
%"class.std::__1::__compressed_pair.1285" = type { %"struct.std::__1::__compressed_pair_elem.1286" }
%"struct.std::__1::__compressed_pair_elem.1286" = type { %"class.v8::internal::SnapshotData"* }
%"class.std::__1::vector.1239" = type { %"class.std::__1::__vector_base.1240" }
%"class.std::__1::__vector_base.1240" = type { %"class.v8::internal::SnapshotData"**, %"class.v8::internal::SnapshotData"**, %"class.std::__1::__compressed_pair.1241" }
%"class.std::__1::__compressed_pair.1241" = type { %"struct.std::__1::__compressed_pair_elem.1242" }
%"struct.std::__1::__compressed_pair_elem.1242" = type { %"class.v8::internal::SnapshotData"** }
%"class.v8::internal::ReadOnlySerializer" = type { %"class.v8::internal::RootsSerializer.base", [7 x i8] }
%"class.v8::internal::RootsSerializer.base" = type <{ %"class.v8::internal::Serializer", i16, [6 x i8], %"class.std::__1::bitset", %"class.v8::internal::ObjectCacheIndexMap", i8 }>
%"class.v8::internal::Serializer" = type { %"class.v8::internal::SerializerDeserializer", %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::Isolate"*, %"class.v8::internal::Serializer::HotObjectsList", %"class.v8::internal::SerializerReferenceMap", %"class.v8::internal::ExternalReferenceEncoder", %"class.v8::internal::RootIndexMap", %"class.std::__1::unique_ptr.1212", %"class.std::__1::vector.1176", %"class.v8::internal::GlobalHandleVector.1228", i32, i32, i32, [4 x i8], %"class.v8::internal::IdentityMap.1233", i32, i32, %"class.v8::base::Flags", [4 x i64] }
%"class.v8::internal::SerializerDeserializer" = type { %"class.v8::internal::RootVisitor" }
%"class.v8::internal::RootVisitor" = type { i32 (...)** }
%"class.v8::internal::SnapshotByteSink" = type { %"class.std::__1::vector.1176" }
%"class.v8::internal::Serializer::HotObjectsList" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::StrongRootsEntry"*, [8 x i64], i32, [4 x i8] }>
%"class.v8::internal::SerializerReferenceMap" = type { %"class.v8::internal::IdentityMap.1183", %"class.std::__1::unordered_map.1184", i32, [4 x i8] }
%"class.v8::internal::IdentityMap.1183" = type { %"class.v8::internal::IdentityMapBase.base", %"class.v8::base::DefaultAllocationPolicy", [6 x i8] }
%"class.v8::internal::IdentityMapBase.base" = type <{ i32 (...)**, %"struct.v8::base::hash", [7 x i8], %"class.v8::internal::Heap"*, i32, i32, i32, i32, i64*, %"class.v8::internal::StrongRootsEntry"*, i64*, i8 }>
%"struct.v8::base::hash" = type { i8 }
%"class.v8::base::DefaultAllocationPolicy" = type { i8 }
%"class.std::__1::unordered_map.1184" = type { %"class.std::__1::__hash_table.1185" }
%"class.std::__1::__hash_table.1185" = type <{ %"class.std::__1::unique_ptr.1186", %"class.std::__1::__compressed_pair.1196", %"class.std::__1::__compressed_pair.1201", %"class.std::__1::__compressed_pair.1206", [4 x i8] }>
%"class.std::__1::unique_ptr.1186" = type { %"class.std::__1::__compressed_pair.1187" }
%"class.std::__1::__compressed_pair.1187" = type { %"struct.std::__1::__compressed_pair_elem.1188", %"struct.std::__1::__compressed_pair_elem.1190" }
%"struct.std::__1::__compressed_pair_elem.1188" = type { %"struct.std::__1::__hash_node_base.1189"** }
%"struct.std::__1::__hash_node_base.1189" = type { %"struct.std::__1::__hash_node_base.1189"* }
%"struct.std::__1::__compressed_pair_elem.1190" = type { %"class.std::__1::__bucket_list_deallocator.1191" }
%"class.std::__1::__bucket_list_deallocator.1191" = type { %"class.std::__1::__compressed_pair.1192" }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.1197" }
%"struct.std::__1::__compressed_pair_elem.1197" = type { %"struct.std::__1::__hash_node_base.1189" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1206" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::ExternalReferenceEncoder" = type { %"class.v8::internal::AddressToIndexHashMap"* }
%"class.std::__1::unique_ptr.1212" = type { %"class.std::__1::__compressed_pair.1213" }
%"class.std::__1::__compressed_pair.1213" = type { %"struct.std::__1::__compressed_pair_elem.1214" }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"class.v8::internal::CodeAddressMap"* }
%"class.v8::internal::CodeAddressMap" = type { %"class.v8::internal::CodeEventLogger", %"class.v8::internal::CodeAddressMap::NameMap" }
%"class.v8::internal::CodeEventLogger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1215" }
%"class.std::__1::unique_ptr.1215" = type { %"class.std::__1::__compressed_pair.1216" }
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.1217" }
%"struct.std::__1::__compressed_pair_elem.1217" = type { %"class.v8::internal::CodeEventLogger::NameBuffer"* }
%"class.v8::internal::CodeEventLogger::NameBuffer" = type opaque
%"class.v8::internal::CodeAddressMap::NameMap" = type { %"class.v8::base::PointerTemplateHashMapImpl" }
%"class.v8::base::PointerTemplateHashMapImpl" = type { %"class.v8::base::TemplateHashMapImpl.1221" }
%"class.v8::base::TemplateHashMapImpl.1221" = type { %"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry.1223"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry.1223" = type <{ i8*, i8*, i32, [4 x i8] }>
%"class.std::__1::vector.1176" = type { %"class.std::__1::__vector_base.1177" }
%"class.std::__1::__vector_base.1177" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1178" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { i8* }
%"class.v8::internal::GlobalHandleVector.1228" = type { %"class.std::__1::vector.1229" }
%"class.std::__1::vector.1229" = type { %"class.std::__1::__vector_base.1230" }
%"class.std::__1::__vector_base.1230" = type { i64*, i64*, %"class.std::__1::__compressed_pair.1231" }
%"class.std::__1::__compressed_pair.1231" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.1232" }
%"struct.std::__1::__compressed_pair_elem.1232" = type { %"class.v8::internal::StrongRootBlockAllocator" }
%"class.v8::internal::StrongRootBlockAllocator" = type { %"class.v8::internal::Heap"* }
%"class.v8::internal::IdentityMap.1233" = type { %"class.v8::internal::IdentityMapBase.base", %"class.v8::base::DefaultAllocationPolicy", [6 x i8] }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [11 x i64] }
%"class.v8::internal::ObjectCacheIndexMap" = type { %"class.v8::internal::IdentityMap.1235", i32, [4 x i8] }
%"class.v8::internal::IdentityMap.1235" = type { %"class.v8::internal::IdentityMapBase.base", %"class.v8::base::DefaultAllocationPolicy", [6 x i8] }
%"class.v8::internal::StartupSerializer" = type { %"class.v8::internal::RootsSerializer.base", %"class.v8::internal::ReadOnlySerializer"*, %"class.v8::internal::GlobalHandleVector.1237", %"class.v8::internal::GlobalHandleVector.1238" }
%"class.v8::internal::GlobalHandleVector.1237" = type { %"class.std::__1::vector.1229" }
%"class.v8::internal::GlobalHandleVector.1238" = type { %"class.std::__1::vector.1229" }
%"class.v8::internal::ContextSerializer" = type { %"class.v8::internal::Serializer", %"class.v8::internal::StartupSerializer"*, %"struct.v8::SerializeInternalFieldsCallback", i8, %"class.v8::internal::Context", %"class.v8::internal::SnapshotByteSink" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::ScriptCompiler::Source" = type { %"class.v8::Local.839", %"class.v8::Local.0", i32, i32, %"class.v8::ScriptOriginOptions", %"class.v8::Local.0", %"class.v8::Local.1294", %"struct.v8::ScriptCompiler::CachedData"* }
%"class.v8::Local.839" = type { %"class.v8::String"* }
%"class.v8::ScriptOriginOptions" = type { i32 }
%"class.v8::Local.1294" = type { %"class.v8::PrimitiveArray"* }
%"class.v8::PrimitiveArray" = type { i8 }
%"struct.v8::ScriptCompiler::CachedData" = type <{ i8*, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::Script" = type { i8 }

$_ZN2v88internal14SerializedDataD2Ev = comdat any

$_ZN2v88internal14SerializedDataD0Ev = comdat any

$_ZNSt3__16vectorIN2v88internal12SnapshotDataENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__16vectorIN2v88internal6HandleINS2_18SharedFunctionInfoEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRS4_RPNS2_7IsolateEEEEvDpOT_ = comdat any

$_ZTVN2v88internal14SerializedDataE = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [112 x i8] c"SnapshotImpl::kVersionStringOffset + SnapshotImpl::kVersionStringLength < static_cast<uint32_t>(data->raw_size)\00", align 1
@_ZN2v88internal28FLAG_profile_deserializationE = external local_unnamed_addr global i8, align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"VerifyChecksum(blob)\00", align 1
@.str.3 = private unnamed_addr constant [50 x i8] c"[Deserializing isolate (%d bytes) took %0.3f ms]\0A\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"[Deserializing context #%zu (%d bytes) took %0.3f ms]\0A\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"Snapshot::Initialize(new_isolate)\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"new_native_context->IsNativeContext()\00", align 1
@_ZN2v88internal8Snapshot23kDefaultSerializerFlagsE = hidden local_unnamed_addr constant %"class.v8::base::Flags" zeroinitializer, align 4
@_ZN2v88internal29FLAG_serialization_statisticsE = external local_unnamed_addr global i8, align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"Deserialization will allocate:\0A\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"%10d bytes per isolate\0A\00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c"%10d bytes per context #%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"Snapshot::VerifyChecksum(&result)\00", align 1
@.str.12 = private unnamed_addr constant [45 x i8] c"[Verifying snapshot checksum took %0.3f ms]\0A\00", align 1
@.str.13 = private unnamed_addr constant [75 x i8] c"SnapshotImpl::kRehashabilityOffset < static_cast<uint32_t>(data->raw_size)\00", align 1
@.str.14 = private unnamed_addr constant [46 x i8] c"rehashability != 0 implies rehashability == 1\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"<embedded>\00", align 1
@.str.16 = private unnamed_addr constant [70 x i8] c"cold_snapshot_blob.raw_size > 0 && cold_snapshot_blob.data != nullptr\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"(warmup_source) != nullptr\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"<warm-up>\00", align 1
@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1254", align 4
@_ZTVN2v88internal14SerializedDataE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::SerializedData"*)* @_ZN2v88internal14SerializedDataD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::SerializedData"*)* @_ZN2v88internal14SerializedDataD0Ev to i8*)] }, comdat, align 8
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@.str.19 = private unnamed_addr constant [51 x i8] c"Snapshot blob consists of:\0A%10d bytes for startup\0A\00", align 1
@.str.20 = private unnamed_addr constant [26 x i8] c"%10d bytes for read-only\0A\00", align 1
@.str.21 = private unnamed_addr constant [28 x i8] c"%10d bytes for context #%d\0A\00", align 1
@_ZTVN2v88internal12SnapshotDataE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.23 = private unnamed_addr constant [41 x i8] c"kNumberOfContextsOffset < data->raw_size\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"start_offset < end_offset\00", align 1
@.str.25 = private unnamed_addr constant [32 x i8] c"end_offset < snapshot->raw_size\00", align 1
@.str.26 = private unnamed_addr constant [21 x i8] c"index < num_contexts\00", align 1
@.str.28 = private unnamed_addr constant [55 x i8] c"context_offset < static_cast<uint32_t>(data->raw_size)\00", align 1
@.str.29 = private unnamed_addr constant [84 x i8] c"kVersionStringOffset + kVersionStringLength < static_cast<uint32_t>(data->raw_size)\00", align 1
@.str.30 = private unnamed_addr constant [169 x i8] c"Version mismatch between V8 binary and snapshot.\0A#   V8 binary version: %.*s\0A#    Snapshot version: %.*s\0A# The snapshot consists of %d bytes and contains %d context(s).\00", align 1
@.str.31 = private unnamed_addr constant [23 x i8] c"!try_catch.HasCaught()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15MaybeDecompressERKNS0_6VectorIKhEE(%"class.v8::internal::SnapshotData"* noalias sret, %"class.v8::internal::Vector"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %1, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN2v88internal19SnapshotCompression10DecompressENS0_6VectorIKhEE(%"class.v8::internal::SnapshotData"* sret %0, i8* %4, i64 %6) #10
  ret void
}

declare void @_ZN2v88internal19SnapshotCompression10DecompressENS0_6VectorIKhEE(%"class.v8::internal::SnapshotData"* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8Snapshot18HasContextSnapshotEPNS0_7IsolateEm(%"class.v8::internal::Isolate"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 102
  %4 = load %"class.v8::StartupData"*, %"class.v8::StartupData"** %3, align 8
  %5 = icmp eq %"class.v8::StartupData"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %4, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  %10 = bitcast i8* %8 to i32*
  br i1 %9, label %20, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %4, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %16, label %15, !prof !2

15:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

16:                                               ; preds = %11
  %17 = load i32, i32* %10, align 1
  %18 = zext i32 %17 to i64
  %19 = icmp ugt i64 %18, %1
  br label %20

20:                                               ; preds = %6, %2, %16
  %21 = phi i1 [ %19, %16 ], [ false, %2 ], [ false, %6 ]
  ret i1 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN2v88internal12_GLOBAL__N_112SnapshotImpl18ExtractNumContextsEPKNS_11StartupDataE(%"class.v8::StartupData"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %6, label %5, !prof !2

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

6:                                                ; preds = %1
  %7 = bitcast %"class.v8::StartupData"* %0 to i32**
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %8, align 1
  ret i32 %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8Snapshot14VersionIsValidEPKNS_11StartupDataE(%"class.v8::StartupData"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca [64 x i8], align 16
  %3 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3, i8 0, i64 64, i1 false)
  %4 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ugt i32 %5, 76
  br i1 %6, label %8, label %7, !prof !2

7:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @.str.1, i64 0, i64 0)) #11
  unreachable

8:                                                ; preds = %1
  call void @_ZN2v88internal7Version9GetStringENS0_6VectorIcEE(i8* nonnull %3, i64 64) #10
  %9 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %0, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 12
  %12 = call i32 @strncmp(i8* nonnull %3, i8* %11, i64 64) #12
  %13 = icmp eq i32 %12, 0
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #10
  ret i1 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

declare void @_ZN2v88internal7Version9GetStringENS0_6VectorIcEE(i8*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8Snapshot10InitializeEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::base::TimeDelta", align 8
  %3 = alloca [64 x i8], align 16
  %4 = alloca [64 x i8], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::SnapshotData", align 8
  %7 = alloca %"class.v8::internal::SnapshotData", align 8
  %8 = alloca %"class.v8::base::TimeDelta", align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 102
  %10 = load %"class.v8::StartupData"*, %"class.v8::StartupData"** %9, align 8
  %11 = icmp eq %"class.v8::StartupData"* %10, null
  br i1 %11, label %174, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %174, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 40, i1 false) #10
  %18 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1254", %"struct.std::__1::atomic.1254"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %26, label %20, !prof !2

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %24 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %24, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %25, %"class.v8::internal::RuntimeCallStats"** %21, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %25, %"class.v8::internal::RuntimeCallTimer"* %22, i32 148) #10
  br label %26

26:                                               ; preds = %16, %20
  %27 = load i8, i8* @_ZN2v88internal28FLAG_profile_deserializationE, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %26
  %30 = call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #10
  br label %31

31:                                               ; preds = %26, %29
  %32 = phi i64 [ 0, %26 ], [ %30, %29 ]
  %33 = load %"class.v8::StartupData"*, %"class.v8::StartupData"** %9, align 8
  %34 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %34) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 0, i64 64, i1 false) #10
  %35 = getelementptr %"class.v8::StartupData", %"class.v8::StartupData"* %33, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = icmp ugt i32 %36, 76
  br i1 %37, label %39, label %38, !prof !2

38:                                               ; preds = %31
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @.str.1, i64 0, i64 0)) #11
  unreachable

39:                                               ; preds = %31
  call void @_ZN2v88internal7Version9GetStringENS0_6VectorIcEE(i8* nonnull %34, i64 64) #10
  %40 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %33, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 12
  %43 = call i32 @strncmp(i8* nonnull %34, i8* %42, i64 64) #12
  %44 = icmp eq i32 %43, 0
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %34) #10
  br i1 %44, label %55, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %46) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %46, i8 0, i64 64, i1 false) #10
  %47 = load i32, i32* %35, align 8
  %48 = icmp ugt i32 %47, 76
  br i1 %48, label %50, label %49, !prof !2

49:                                               ; preds = %45
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.29, i64 0, i64 0)) #11
  unreachable

50:                                               ; preds = %45
  call void @_ZN2v88internal7Version9GetStringENS0_6VectorIcEE(i8* nonnull %46, i64 64) #10
  %51 = load i8*, i8** %40, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 12
  %53 = load i32, i32* %35, align 8
  %54 = call fastcc i32 @_ZN2v88internal12_GLOBAL__N_112SnapshotImpl18ExtractNumContextsEPKNS_11StartupDataE(%"class.v8::StartupData"* %33) #10
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([169 x i8], [169 x i8]* @.str.30, i64 0, i64 0), i32 64, i8* nonnull %46, i32 64, i8* %52, i32 %53, i32 %54) #11
  unreachable

55:                                               ; preds = %39
  %56 = load i8, i8* @_ZN2v88internal28FLAG_profile_deserializationE, align 1, !range !3
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %55
  %59 = call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #10
  br label %60

60:                                               ; preds = %58, %55
  %61 = phi i64 [ 0, %55 ], [ %59, %58 ]
  %62 = bitcast %"class.v8::StartupData"* %33 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 8
  %65 = inttoptr i64 %64 to i32*
  %66 = load i32, i32* %65, align 1
  %67 = inttoptr i64 %63 to i8*
  %68 = load i32, i32* %35, align 8
  %69 = getelementptr inbounds i8, i8* %67, i64 12
  %70 = add i32 %68, -12
  %71 = zext i32 %70 to i64
  %72 = call i32 @_ZN2v88internal8ChecksumENS0_6VectorIKhEE(i8* %69, i64 %71) #10
  %73 = load i8, i8* @_ZN2v88internal28FLAG_profile_deserializationE, align 1, !range !3
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %81, label %75

75:                                               ; preds = %60
  %76 = bitcast %"class.v8::base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #10
  %77 = call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #10
  %78 = sub nsw i64 %77, %61
  %79 = getelementptr inbounds %"class.v8::base::TimeDelta", %"class.v8::base::TimeDelta"* %2, i64 0, i32 0
  store i64 %78, i64* %79, align 8
  %80 = call double @_ZNK2v84base9TimeDelta15InMillisecondsFEv(%"class.v8::base::TimeDelta"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #10
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.12, i64 0, i64 0), double %80) #10
  br label %81

81:                                               ; preds = %60, %75
  %82 = icmp eq i32 %72, %66
  br i1 %82, label %84, label %83, !prof !2

83:                                               ; preds = %81
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0)) #11
  unreachable

84:                                               ; preds = %81
  %85 = load i32, i32* %35, align 8
  %86 = icmp sgt i32 %85, 0
  br i1 %86, label %88, label %87, !prof !2

87:                                               ; preds = %84
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

88:                                               ; preds = %84
  %89 = bitcast %"class.v8::StartupData"* %33 to i32**
  %90 = load i32*, i32** %89, align 8
  %91 = load i32, i32* %90, align 1
  %92 = shl i32 %91, 2
  %93 = add i32 %92, 87
  %94 = and i32 %93, -8
  %95 = ptrtoint i32* %90 to i64
  %96 = add i64 %95, 76
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 1
  %99 = icmp ugt i32 %98, %94
  %100 = bitcast i32* %90 to i8*
  br i1 %99, label %102, label %101, !prof !2

101:                                              ; preds = %88
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #11
  unreachable

102:                                              ; preds = %88
  %103 = icmp ugt i32 %85, %98
  br i1 %103, label %105, label %104, !prof !2

104:                                              ; preds = %102
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25, i64 0, i64 0)) #11
  unreachable

105:                                              ; preds = %102
  %106 = sub i32 %98, %94
  %107 = zext i32 %94 to i64
  %108 = getelementptr inbounds i8, i8* %100, i64 %107
  %109 = zext i32 %106 to i64
  %110 = add i64 %95, 80
  %111 = inttoptr i64 %110 to i32*
  %112 = load i32, i32* %111, align 1
  %113 = icmp ugt i32 %112, %98
  %114 = bitcast i32* %90 to i8*
  br i1 %113, label %116, label %115, !prof !2

115:                                              ; preds = %105
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #11
  unreachable

116:                                              ; preds = %105
  %117 = icmp ugt i32 %85, %112
  br i1 %117, label %119, label %118, !prof !2

118:                                              ; preds = %116
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25, i64 0, i64 0)) #11
  unreachable

119:                                              ; preds = %116
  %120 = sub i32 %112, %98
  %121 = zext i32 %98 to i64
  %122 = getelementptr inbounds i8, i8* %114, i64 %121
  %123 = zext i32 %120 to i64
  %124 = bitcast %"class.v8::internal::SnapshotData"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #10
  call void @_ZN2v88internal19SnapshotCompression10DecompressENS0_6VectorIKhEE(%"class.v8::internal::SnapshotData"* nonnull sret %6, i8* %108, i64 %109) #10
  %125 = bitcast %"class.v8::internal::SnapshotData"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #10
  call void @_ZN2v88internal19SnapshotCompression10DecompressENS0_6VectorIKhEE(%"class.v8::internal::SnapshotData"* nonnull sret %7, i8* %122, i64 %123) #10
  %126 = load i32, i32* %35, align 8
  %127 = icmp ugt i32 %126, 4
  br i1 %127, label %129, label %128, !prof !2

128:                                              ; preds = %119
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13, i64 0, i64 0)) #11
  unreachable

129:                                              ; preds = %119
  %130 = load i64, i64* %62, align 8
  %131 = add i64 %130, 4
  %132 = inttoptr i64 %131 to i32*
  %133 = load i32, i32* %132, align 1
  %134 = icmp ugt i32 %133, 1
  br i1 %134, label %135, label %136, !prof !4

135:                                              ; preds = %129
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.14, i64 0, i64 0)) #11
  unreachable

136:                                              ; preds = %129
  %137 = icmp ne i32 %133, 0
  %138 = call zeroext i1 @_ZN2v88internal7Isolate16InitWithSnapshotEPNS0_12SnapshotDataES3_b(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::SnapshotData"* nonnull %6, %"class.v8::internal::SnapshotData"* nonnull %7, i1 zeroext %137) #10
  %139 = load i8, i8* @_ZN2v88internal28FLAG_profile_deserializationE, align 1, !range !3
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %147, label %141

141:                                              ; preds = %136
  %142 = bitcast %"class.v8::base::TimeDelta"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #10
  %143 = call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #10
  %144 = sub nsw i64 %143, %32
  %145 = getelementptr inbounds %"class.v8::base::TimeDelta", %"class.v8::base::TimeDelta"* %8, i64 0, i32 0
  store i64 %144, i64* %145, align 8
  %146 = call double @_ZNK2v84base9TimeDelta15InMillisecondsFEv(%"class.v8::base::TimeDelta"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #10
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i32 %106, double %146) #10
  br label %147

147:                                              ; preds = %136, %141
  %148 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %7, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal14SerializedDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %7, i64 0, i32 0, i32 3
  %150 = load i8, i8* %149, align 4, !range !3
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %157, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %7, i64 0, i32 0, i32 1
  %154 = load i8*, i8** %153, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %157, label %156

156:                                              ; preds = %152
  call void @_ZdaPv(i8* nonnull %154) #13
  br label %157

157:                                              ; preds = %147, %152, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #10
  %158 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal14SerializedDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %6, i64 0, i32 0, i32 3
  %160 = load i8, i8* %159, align 4, !range !3
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %167, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %6, i64 0, i32 0, i32 1
  %164 = load i8*, i8** %163, align 8
  %165 = icmp eq i8* %164, null
  br i1 %165, label %167, label %166

166:                                              ; preds = %162
  call void @_ZdaPv(i8* nonnull %164) #13
  br label %167

167:                                              ; preds = %157, %162, %166
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #10
  %168 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %169 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %168, align 8
  %170 = icmp eq %"class.v8::internal::RuntimeCallStats"* %169, null
  br i1 %170, label %173, label %171, !prof !2

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %169, %"class.v8::internal::RuntimeCallTimer"* %172) #10
  br label %173

173:                                              ; preds = %167, %171
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #10
  br label %174

174:                                              ; preds = %12, %1, %173
  %175 = phi i1 [ %138, %173 ], [ false, %12 ], [ false, %1 ]
  ret i1 %175
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8Snapshot14VerifyChecksumEPKNS_11StartupDataE(%"class.v8::StartupData"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::base::TimeDelta", align 8
  %3 = load i8, i8* @_ZN2v88internal28FLAG_profile_deserializationE, align 1, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i64 [ 0, %1 ], [ %6, %5 ]
  %9 = bitcast %"class.v8::StartupData"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 8
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 1
  %14 = inttoptr i64 %10 to i8*
  %15 = getelementptr %"class.v8::StartupData", %"class.v8::StartupData"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds i8, i8* %14, i64 12
  %18 = add i32 %16, -12
  %19 = zext i32 %18 to i64
  %20 = tail call i32 @_ZN2v88internal8ChecksumENS0_6VectorIKhEE(i8* %17, i64 %19) #10
  %21 = load i8, i8* @_ZN2v88internal28FLAG_profile_deserializationE, align 1, !range !3
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %7
  %24 = bitcast %"class.v8::base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = tail call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #10
  %26 = sub nsw i64 %25, %8
  %27 = getelementptr inbounds %"class.v8::base::TimeDelta", %"class.v8::base::TimeDelta"* %2, i64 0, i32 0
  store i64 %26, i64* %27, align 8
  %28 = call double @_ZNK2v84base9TimeDelta15InMillisecondsFEv(%"class.v8::base::TimeDelta"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.12, i64 0, i64 0), double %28) #10
  br label %29

29:                                               ; preds = %7, %23
  %30 = icmp eq i32 %20, %13
  ret i1 %30
}

declare zeroext i1 @_ZN2v88internal7Isolate16InitWithSnapshotEPNS0_12SnapshotDataES3_b(%"class.v8::internal::Isolate"*, %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8Snapshot20ExtractRehashabilityEPKNS_11StartupDataE(%"class.v8::StartupData"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp ugt i32 %3, 4
  br i1 %4, label %6, label %5, !prof !2

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13, i64 0, i64 0)) #11
  unreachable

6:                                                ; preds = %1
  %7 = bitcast %"class.v8::StartupData"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 4
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 1
  %12 = icmp ugt i32 %11, 1
  br i1 %12, label %13, label %14, !prof !4

13:                                               ; preds = %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.14, i64 0, i64 0)) #11
  unreachable

14:                                               ; preds = %6
  %15 = icmp ne i32 %11, 0
  ret i1 %15
}

declare double @_ZNK2v84base9TimeDelta15InMillisecondsFEv(%"class.v8::base::TimeDelta"*) local_unnamed_addr #1

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14SerializedDataD2Ev(%"class.v8::internal::SerializedData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::SerializedData", %"class.v8::internal::SerializedData"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal14SerializedDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::SerializedData", %"class.v8::internal::SerializedData"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 4, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::SerializedData", %"class.v8::internal::SerializedData"* %0, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdaPv(i8* nonnull %8) #13
  br label %11

11:                                               ; preds = %10, %6, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal8Snapshot22NewContextFromSnapshotEPNS0_7IsolateENS0_6HandleINS0_13JSGlobalProxyEEEmNS_33DeserializeInternalFieldsCallbackE(%"class.v8::internal::Isolate"*, i64*, i64, void (%"class.v8::Object"*, i32, i8*, i32, i8*)*, i8*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %7 = alloca %"class.v8::internal::SnapshotData", align 8
  %8 = alloca %"class.v8::base::TimeDelta", align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 102
  %10 = load %"class.v8::StartupData"*, %"class.v8::StartupData"** %9, align 8
  %11 = icmp eq %"class.v8::StartupData"* %10, null
  br i1 %11, label %114, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %114, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 40, i1 false) #10
  %18 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1254", %"struct.std::__1::atomic.1254"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %26, label %20, !prof !2

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %24 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %24, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %25, %"class.v8::internal::RuntimeCallStats"** %21, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %25, %"class.v8::internal::RuntimeCallTimer"* %22, i32 147) #10
  br label %26

26:                                               ; preds = %16, %20
  %27 = load i8, i8* @_ZN2v88internal28FLAG_profile_deserializationE, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %26
  %30 = call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #10
  br label %31

31:                                               ; preds = %26, %29
  %32 = phi i64 [ 0, %26 ], [ %30, %29 ]
  %33 = load %"class.v8::StartupData"*, %"class.v8::StartupData"** %9, align 8
  %34 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = icmp ugt i32 %35, 4
  br i1 %36, label %38, label %37, !prof !2

37:                                               ; preds = %31
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13, i64 0, i64 0)) #11
  unreachable

38:                                               ; preds = %31
  %39 = bitcast %"class.v8::StartupData"* %33 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, 4
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 1
  %44 = icmp ugt i32 %43, 1
  %45 = inttoptr i64 %40 to i32*
  br i1 %44, label %46, label %47, !prof !4

46:                                               ; preds = %38
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.14, i64 0, i64 0)) #11
  unreachable

47:                                               ; preds = %38
  %48 = icmp ne i32 %43, 0
  %49 = trunc i64 %2 to i32
  %50 = icmp sgt i32 %35, 0
  br i1 %50, label %52, label %51, !prof !2

51:                                               ; preds = %47
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

52:                                               ; preds = %47
  %53 = load i32, i32* %45, align 1
  %54 = icmp ugt i32 %53, %49
  %55 = inttoptr i64 %40 to i8*
  br i1 %54, label %57, label %56, !prof !2

56:                                               ; preds = %52
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i64 0, i64 0)) #11
  unreachable

57:                                               ; preds = %52
  %58 = shl i32 %49, 2
  %59 = add i32 %58, 80
  %60 = zext i32 %59 to i64
  %61 = add i64 %40, %60
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 1
  %64 = icmp ult i32 %63, %35
  br i1 %64, label %66, label %65, !prof !2

65:                                               ; preds = %57
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.28, i64 0, i64 0)) #11
  unreachable

66:                                               ; preds = %57
  %67 = add i32 %53, -1
  %68 = icmp eq i32 %67, %49
  br i1 %68, label %77, label %69

69:                                               ; preds = %66
  %70 = add i32 %58, 84
  %71 = zext i32 %70 to i64
  %72 = add i64 %40, %71
  %73 = inttoptr i64 %72 to i32*
  %74 = load i32, i32* %73, align 1
  %75 = icmp ult i32 %74, %35
  br i1 %75, label %77, label %76, !prof !2

76:                                               ; preds = %69
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.28, i64 0, i64 0)) #11
  unreachable

77:                                               ; preds = %66, %69
  %78 = phi i32 [ %35, %66 ], [ %74, %69 ]
  %79 = zext i32 %63 to i64
  %80 = getelementptr inbounds i8, i8* %55, i64 %79
  %81 = sub i32 %78, %63
  %82 = zext i32 %81 to i64
  %83 = bitcast %"class.v8::internal::SnapshotData"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #10
  call void @_ZN2v88internal19SnapshotCompression10DecompressENS0_6VectorIKhEE(%"class.v8::internal::SnapshotData"* nonnull sret %7, i8* %80, i64 %82) #10
  %84 = call i64* @_ZN2v88internal19ContextDeserializer18DeserializeContextEPNS0_7IsolateEPKNS0_12SnapshotDataEbNS0_6HandleINS0_13JSGlobalProxyEEENS_33DeserializeInternalFieldsCallbackE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::SnapshotData"* nonnull %7, i1 zeroext %48, i64* %1, void (%"class.v8::Object"*, i32, i8*, i32, i8*)* %3, i8* %4) #10
  %85 = icmp eq i64* %84, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %77
  %87 = ptrtoint i64* %84 to i64
  %88 = load i8, i8* @_ZN2v88internal28FLAG_profile_deserializationE, align 1, !range !3
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %96, label %90

90:                                               ; preds = %86
  %91 = bitcast %"class.v8::base::TimeDelta"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #10
  %92 = call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #10
  %93 = sub nsw i64 %92, %32
  %94 = getelementptr inbounds %"class.v8::base::TimeDelta", %"class.v8::base::TimeDelta"* %8, i64 0, i32 0
  store i64 %93, i64* %94, align 8
  %95 = call double @_ZNK2v84base9TimeDelta15InMillisecondsFEv(%"class.v8::base::TimeDelta"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #10
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i64 %2, i32 %81, double %95) #10
  br label %96

96:                                               ; preds = %90, %86, %77
  %97 = phi i64 [ 0, %77 ], [ %87, %86 ], [ %87, %90 ]
  %98 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %7, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal14SerializedDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %7, i64 0, i32 0, i32 3
  %100 = load i8, i8* %99, align 4, !range !3
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %107, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %7, i64 0, i32 0, i32 1
  %104 = load i8*, i8** %103, align 8
  %105 = icmp eq i8* %104, null
  br i1 %105, label %107, label %106

106:                                              ; preds = %102
  call void @_ZdaPv(i8* nonnull %104) #13
  br label %107

107:                                              ; preds = %96, %102, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #10
  %108 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %109 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %108, align 8
  %110 = icmp eq %"class.v8::internal::RuntimeCallStats"* %109, null
  br i1 %110, label %113, label %111, !prof !2

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %109, %"class.v8::internal::RuntimeCallTimer"* %112) #10
  br label %113

113:                                              ; preds = %107, %111
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #10
  br label %114

114:                                              ; preds = %12, %5, %113
  %115 = phi i64 [ %97, %113 ], [ 0, %12 ], [ 0, %5 ]
  %116 = inttoptr i64 %115 to i64*
  ret i64* %116
}

declare i64* @_ZN2v88internal19ContextDeserializer18DeserializeContextEPNS0_7IsolateEPKNS0_12SnapshotDataEbNS0_6HandleINS0_13JSGlobalProxyEEENS_33DeserializeInternalFieldsCallbackE(%"class.v8::internal::Isolate"*, %"class.v8::internal::SnapshotData"*, i1 zeroext, i64*, void (%"class.v8::Object"*, i32, i8*, i32, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8Snapshot40ClearReconstructableDataForSerializationEPNS0_7IsolateEb(%"class.v8::internal::Isolate"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Map", align 8
  %4 = alloca %"class.v8::internal::Isolate"*, align 8
  %5 = alloca %"class.std::__1::vector.1132", align 8
  %6 = alloca %"class.v8::internal::HeapObjectIterator", align 8
  %7 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %8 = alloca %"class.v8::internal::HeapObjectIterator", align 8
  %9 = alloca %"class.v8::internal::JSFunction", align 8
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %4, align 8
  br i1 %1, label %10, label %347

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %12 = bitcast %"struct.v8::internal::HandleScopeData"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = bitcast %"class.std::__1::vector.1132"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #10
  %20 = bitcast %"class.v8::internal::HeapObjectIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  call void @_ZN2v88internal18HeapObjectIteratorC1EPNS0_4HeapENS1_20HeapObjectsFilteringE(%"class.v8::internal::HeapObjectIterator"* nonnull %6, %"class.v8::internal::Heap"* %21, i32 0) #10
  %22 = call i64 @_ZN2v88internal18HeapObjectIterator4NextEv(%"class.v8::internal::HeapObjectIterator"* nonnull %6) #10
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %10
  %26 = bitcast %"class.v8::internal::SharedFunctionInfo"* %7 to i8*
  %27 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::vector.1132", %"class.std::__1::vector.1132"* %5, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::vector.1132", %"class.std::__1::vector.1132"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.v8::internal::Handle.1134"** %28 to i64*
  br label %37

31:                                               ; preds = %312, %10
  call void @_ZN2v88internal18HeapObjectIteratorD1Ev(%"class.v8::internal::HeapObjectIterator"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %20) #10
  %32 = getelementptr inbounds %"class.std::__1::vector.1132", %"class.std::__1::vector.1132"* %5, i64 0, i32 0, i32 0
  %33 = load %"class.v8::internal::Handle.1134"*, %"class.v8::internal::Handle.1134"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.1132", %"class.std::__1::vector.1132"* %5, i64 0, i32 0, i32 1
  %35 = load %"class.v8::internal::Handle.1134"*, %"class.v8::internal::Handle.1134"** %34, align 8
  %36 = icmp eq %"class.v8::internal::Handle.1134"* %33, %35
  br i1 %36, label %318, label %340

37:                                               ; preds = %25, %312
  %38 = phi i64 [ %22, %25 ], [ %313, %312 ]
  %39 = and i64 %38, -4294967296
  %40 = add i64 %38, -1
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %39, %43
  %45 = add i64 %44, 7
  %46 = inttoptr i64 %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = icmp eq i16 %47, 179
  br i1 %48, label %49, label %241

49:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  store i64 %38, i64* %27, align 8
  %50 = add i64 %38, 15
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 acquire, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %39, %53
  %55 = add i64 %54, -1
  %56 = inttoptr i64 %55 to i32*
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %39, %58
  %60 = add i64 %59, 7
  %61 = inttoptr i64 %60 to i16*
  %62 = load atomic i16, i16* %61 monotonic, align 2
  %63 = icmp eq i16 %62, 100
  br i1 %63, label %64, label %72

64:                                               ; preds = %49
  %65 = add i64 %54, 11
  %66 = inttoptr i64 %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  %69 = or i64 %39, %68
  %70 = add i64 %69, -1
  %71 = inttoptr i64 %70 to i32*
  br label %72

72:                                               ; preds = %49, %64
  %73 = phi i32* [ %56, %49 ], [ %71, %64 ]
  %74 = phi i64 [ %54, %49 ], [ %69, %64 ]
  %75 = and i64 %74, -4294967296
  %76 = load atomic i32, i32* %73 monotonic, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %75, %77
  %79 = add i64 %78, 7
  %80 = inttoptr i64 %79 to i16*
  %81 = load atomic i16, i16* %80 monotonic, align 2
  %82 = icmp eq i16 %81, 112
  br i1 %82, label %83, label %113

83:                                               ; preds = %72
  %84 = load i64, i64* %27, align 8
  %85 = and i64 %84, -4294967296
  %86 = add i64 %84, 15
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 acquire, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %85, %89
  %91 = add i64 %90, -1
  %92 = inttoptr i64 %91 to i32*
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %85, %94
  %96 = add i64 %95, 7
  %97 = inttoptr i64 %96 to i16*
  %98 = load atomic i16, i16* %97 monotonic, align 2
  %99 = icmp eq i16 %98, 100
  br i1 %99, label %100, label %106

100:                                              ; preds = %83
  %101 = add i64 %90, 11
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = zext i32 %103 to i64
  %105 = or i64 %85, %104
  br label %106

106:                                              ; preds = %83, %100
  %107 = phi i64 [ %105, %100 ], [ %90, %83 ]
  %108 = add i64 %107, 23
  %109 = inttoptr i64 %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = and i32 %110, -2
  %112 = icmp eq i32 %111, 2
  br i1 %112, label %240, label %113

113:                                              ; preds = %72, %106
  %114 = load i64, i64* %27, align 8
  %115 = and i64 %114, -4294967296
  %116 = add i64 %114, 3
  %117 = inttoptr i64 %116 to i32*
  %118 = load atomic i32, i32* %117 acquire, align 4
  %119 = zext i32 %118 to i64
  %120 = and i64 %119, 1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %133, label %122

122:                                              ; preds = %113
  %123 = or i64 %115, %119
  %124 = add i64 %123, -1
  %125 = inttoptr i64 %124 to i32*
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = zext i32 %126 to i64
  %128 = or i64 %115, %127
  %129 = add i64 %128, 7
  %130 = inttoptr i64 %129 to i16*
  %131 = load atomic i16, i16* %130 monotonic, align 2
  %132 = icmp eq i16 %131, 92
  br i1 %132, label %209, label %133

133:                                              ; preds = %122, %113
  %134 = load i64, i64* %27, align 8
  %135 = and i64 %134, -4294967296
  %136 = add i64 %134, 3
  %137 = inttoptr i64 %136 to i32*
  %138 = load atomic i32, i32* %137 acquire, align 4
  %139 = zext i32 %138 to i64
  %140 = and i64 %139, 1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %169, label %142

142:                                              ; preds = %133
  %143 = or i64 %135, %139
  %144 = add i64 %143, -1
  %145 = inttoptr i64 %144 to i32*
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = zext i32 %146 to i64
  %148 = or i64 %135, %147
  %149 = add i64 %148, 7
  %150 = inttoptr i64 %149 to i16*
  %151 = load atomic i16, i16* %150 monotonic, align 2
  %152 = icmp eq i16 %151, 133
  br i1 %152, label %209, label %153

153:                                              ; preds = %142
  %154 = load atomic i32, i32* %145 monotonic, align 4
  %155 = zext i32 %154 to i64
  %156 = or i64 %135, %155
  %157 = add i64 %156, 7
  %158 = inttoptr i64 %157 to i16*
  %159 = load atomic i16, i16* %158 monotonic, align 2
  %160 = icmp eq i16 %159, 105
  br i1 %160, label %209, label %161

161:                                              ; preds = %153
  %162 = load atomic i32, i32* %145 monotonic, align 4
  %163 = zext i32 %162 to i64
  %164 = or i64 %135, %163
  %165 = add i64 %164, 7
  %166 = inttoptr i64 %165 to i16*
  %167 = load atomic i16, i16* %166 monotonic, align 2
  %168 = icmp eq i16 %167, 94
  br i1 %168, label %209, label %169

169:                                              ; preds = %161, %133
  %170 = load i64, i64* %27, align 8
  %171 = and i64 %170, -4294967296
  %172 = add i64 %170, 3
  %173 = inttoptr i64 %172 to i32*
  %174 = load atomic i32, i32* %173 acquire, align 4
  %175 = zext i32 %174 to i64
  %176 = and i64 %175, 1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %189, label %178

178:                                              ; preds = %169
  %179 = or i64 %171, %175
  %180 = add i64 %179, -1
  %181 = inttoptr i64 %180 to i32*
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = zext i32 %182 to i64
  %184 = or i64 %171, %183
  %185 = add i64 %184, 7
  %186 = inttoptr i64 %185 to i16*
  %187 = load atomic i16, i16* %186 monotonic, align 2
  %188 = icmp eq i16 %187, 157
  br i1 %188, label %209, label %189

189:                                              ; preds = %178, %169
  %190 = load i64, i64* %27, align 8
  %191 = and i64 %190, -4294967296
  %192 = add i64 %190, 3
  %193 = inttoptr i64 %192 to i32*
  %194 = load atomic i32, i32* %193 acquire, align 4
  %195 = zext i32 %194 to i64
  %196 = and i64 %195, 1
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %240, label %198

198:                                              ; preds = %189
  %199 = or i64 %191, %195
  %200 = add i64 %199, -1
  %201 = inttoptr i64 %200 to i32*
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = zext i32 %202 to i64
  %204 = or i64 %191, %203
  %205 = add i64 %204, 7
  %206 = inttoptr i64 %205 to i16*
  %207 = load atomic i16, i16* %206 monotonic, align 2
  %208 = icmp eq i16 %207, 94
  br i1 %208, label %209, label %240

209:                                              ; preds = %142, %153, %161, %178, %122, %198
  %210 = load %"class.v8::internal::Handle.1134"*, %"class.v8::internal::Handle.1134"** %28, align 8
  %211 = load %"class.v8::internal::Handle.1134"*, %"class.v8::internal::Handle.1134"** %29, align 8
  %212 = icmp ult %"class.v8::internal::Handle.1134"* %210, %211
  br i1 %212, label %213, label %239

213:                                              ; preds = %209
  %214 = load i64, i64* %27, align 8
  %215 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %216 = getelementptr inbounds %"class.v8::internal::Handle.1134", %"class.v8::internal::Handle.1134"* %210, i64 0, i32 0, i32 0
  %217 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %215, i64 0, i32 31, i32 4
  %218 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %217, align 8
  %219 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %218, null
  br i1 %219, label %222, label %220

220:                                              ; preds = %213
  %221 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %218, i64 %214) #10
  br label %235

222:                                              ; preds = %213
  %223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %215, i64 0, i32 31, i32 0
  %224 = load i64*, i64** %223, align 8
  %225 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %215, i64 0, i32 31, i32 1
  %226 = load i64*, i64** %225, align 8
  %227 = icmp eq i64* %224, %226
  br i1 %227, label %228, label %230

228:                                              ; preds = %222
  %229 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %215) #10
  br label %230

230:                                              ; preds = %228, %222
  %231 = phi i64* [ %229, %228 ], [ %224, %222 ]
  %232 = ptrtoint i64* %231 to i64
  %233 = add i64 %232, 8
  %234 = inttoptr i64 %233 to i64*
  store i64* %234, i64** %223, align 8
  store i64 %214, i64* %231, align 8
  br label %235

235:                                              ; preds = %230, %220
  %236 = phi i64* [ %221, %220 ], [ %231, %230 ]
  store i64* %236, i64** %216, align 8
  %237 = getelementptr inbounds %"class.v8::internal::Handle.1134", %"class.v8::internal::Handle.1134"* %210, i64 1
  %238 = ptrtoint %"class.v8::internal::Handle.1134"* %237 to i64
  store i64 %238, i64* %30, align 8
  br label %240

239:                                              ; preds = %209
  call void @_ZNSt3__16vectorIN2v88internal6HandleINS2_18SharedFunctionInfoEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRS4_RPNS2_7IsolateEEEEvDpOT_(%"class.std::__1::vector.1132"* nonnull %5, %"class.v8::internal::SharedFunctionInfo"* nonnull dereferenceable(8) %7, %"class.v8::internal::Isolate"** nonnull dereferenceable(8) %4) #10
  br label %240

240:                                              ; preds = %189, %239, %235, %198, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  br label %312

241:                                              ; preds = %37
  %242 = load atomic i32, i32* %41 monotonic, align 4
  %243 = zext i32 %242 to i64
  %244 = or i64 %39, %243
  %245 = add i64 %244, 7
  %246 = inttoptr i64 %245 to i16*
  %247 = load atomic i16, i16* %246 monotonic, align 2
  %248 = icmp eq i16 %247, 1102
  br i1 %248, label %249, label %312

249:                                              ; preds = %241
  %250 = add i64 %38, 11
  %251 = inttoptr i64 %250 to i32*
  %252 = load i32, i32* %251, align 4
  %253 = zext i32 %252 to i64
  %254 = or i64 %39, %253
  %255 = and i64 %253, 1
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %280, label %257

257:                                              ; preds = %249
  %258 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %259 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %258, null
  br i1 %259, label %266, label %260

260:                                              ; preds = %257
  %261 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %258, i64 0, i32 0, i32 1
  %262 = load i8, i8* %261, align 8, !range !3
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %266, label %264

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %258, i64 0, i32 1, i64 0
  br label %274

266:                                              ; preds = %260, %257
  %267 = and i64 %254, -262144
  %268 = or i64 %267, 16
  %269 = inttoptr i64 %268 to i64*
  %270 = load i64, i64* %269, align 16
  %271 = add i64 %270, -41416
  %272 = inttoptr i64 %271 to %"class.v8::internal::Isolate"*
  %273 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %272, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %274

274:                                              ; preds = %266, %264
  %275 = phi i64* [ %273, %266 ], [ %265, %264 ]
  %276 = getelementptr inbounds i64, i64* %275, i64 4
  %277 = load i64, i64* %276, align 8
  %278 = trunc i64 %277 to i32
  %279 = icmp eq i32 %252, %278
  br i1 %279, label %312, label %280

280:                                              ; preds = %274, %249
  %281 = add i64 %254, 7
  %282 = inttoptr i64 %281 to i32*
  %283 = load atomic i32, i32* %282 monotonic, align 4
  %284 = and i32 %283, -2
  %285 = icmp eq i32 %284, 4
  br i1 %285, label %286, label %312

286:                                              ; preds = %280
  %287 = add i64 %254, 19
  %288 = inttoptr i64 %287 to i32*
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = icmp eq i32 %289, -2
  br i1 %290, label %291, label %296

291:                                              ; preds = %286
  %292 = add i64 %254, 23
  %293 = inttoptr i64 %292 to i32*
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = icmp eq i32 %294, -2
  br i1 %295, label %312, label %296

296:                                              ; preds = %291, %286
  store atomic volatile i32 -2, i32* %288 monotonic, align 4
  %297 = load i32, i32* %251, align 4
  %298 = zext i32 %297 to i64
  %299 = or i64 %39, %298
  %300 = add i64 %299, 23
  %301 = inttoptr i64 %300 to i32*
  store atomic volatile i32 -2, i32* %301 monotonic, align 4
  %302 = load i32, i32* %251, align 4
  %303 = zext i32 %302 to i64
  %304 = or i64 %39, %303
  %305 = add i64 %304, 27
  %306 = inttoptr i64 %305 to i32*
  store atomic volatile i32 -2, i32* %306 monotonic, align 4
  %307 = load i32, i32* %251, align 4
  %308 = zext i32 %307 to i64
  %309 = or i64 %39, %308
  %310 = add i64 %309, 31
  %311 = inttoptr i64 %310 to i32*
  store atomic volatile i32 -2, i32* %311 monotonic, align 4
  br label %312

312:                                              ; preds = %291, %274, %280, %296, %240, %241
  %313 = call i64 @_ZN2v88internal18HeapObjectIterator4NextEv(%"class.v8::internal::HeapObjectIterator"* nonnull %6) #10
  %314 = trunc i64 %313 to i32
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %31, label %37

316:                                              ; preds = %340
  %317 = load %"class.v8::internal::Handle.1134"*, %"class.v8::internal::Handle.1134"** %32, align 8
  br label %318

318:                                              ; preds = %316, %31
  %319 = phi %"class.v8::internal::Handle.1134"* [ %317, %316 ], [ %33, %31 ]
  %320 = icmp eq %"class.v8::internal::Handle.1134"* %319, null
  br i1 %320, label %325, label %321

321:                                              ; preds = %318
  %322 = ptrtoint %"class.v8::internal::Handle.1134"* %319 to i64
  %323 = bitcast %"class.v8::internal::Handle.1134"** %34 to i64*
  store i64 %322, i64* %323, align 8
  %324 = bitcast %"class.v8::internal::Handle.1134"* %319 to i8*
  call void @_ZdlPv(i8* %324) #13
  br label %325

325:                                              ; preds = %318, %321
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  %326 = icmp eq %"class.v8::internal::Isolate"* %0, null
  br i1 %326, label %347, label %327

327:                                              ; preds = %325
  %328 = inttoptr i64 %13 to i64*
  %329 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %11, i64 0, i32 0
  %330 = load i64*, i64** %329, align 8
  store i64 %13, i64* %12, align 8
  %331 = load i32, i32* %16, align 8
  %332 = add nsw i32 %331, -1
  store i32 %332, i32* %16, align 8
  %333 = load i64*, i64** %14, align 8
  %334 = icmp eq i64* %333, %15
  br i1 %334, label %337, label %335

335:                                              ; preds = %327
  store i64* %15, i64** %14, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #10
  %336 = load i64*, i64** %329, align 8
  br label %337

337:                                              ; preds = %335, %327
  %338 = phi i64* [ %336, %335 ], [ %328, %327 ]
  %339 = phi i64* [ %15, %335 ], [ %330, %327 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %338, i64* %339) #10
  br label %347

340:                                              ; preds = %31, %340
  %341 = phi %"class.v8::internal::Handle.1134"* [ %345, %340 ], [ %33, %31 ]
  %342 = getelementptr inbounds %"class.v8::internal::Handle.1134", %"class.v8::internal::Handle.1134"* %341, i64 0, i32 0, i32 0
  %343 = load i64*, i64** %342, align 8
  %344 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  call void @_ZN2v88internal18SharedFunctionInfo15DiscardCompiledEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %344, i64* %343) #10
  %345 = getelementptr inbounds %"class.v8::internal::Handle.1134", %"class.v8::internal::Handle.1134"* %341, i64 1
  %346 = icmp eq %"class.v8::internal::Handle.1134"* %345, %35
  br i1 %346, label %316, label %340

347:                                              ; preds = %337, %325, %2
  %348 = bitcast %"class.v8::internal::HeapObjectIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %348) #10
  %349 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %350 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %349, i64 0, i32 2
  call void @_ZN2v88internal18HeapObjectIteratorC1EPNS0_4HeapENS1_20HeapObjectsFilteringE(%"class.v8::internal::HeapObjectIterator"* nonnull %8, %"class.v8::internal::Heap"* %350, i32 0) #10
  %351 = call i64 @_ZN2v88internal18HeapObjectIterator4NextEv(%"class.v8::internal::HeapObjectIterator"* nonnull %8) #10
  %352 = trunc i64 %351 to i32
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %359, label %354

354:                                              ; preds = %347
  %355 = bitcast %"class.v8::internal::JSFunction"* %9 to i8*
  %356 = getelementptr inbounds %"class.v8::internal::JSFunction", %"class.v8::internal::JSFunction"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = bitcast %"class.v8::internal::Map"* %3 to i8*
  %358 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %360

359:                                              ; preds = %585, %347
  call void @_ZN2v88internal18HeapObjectIteratorD1Ev(%"class.v8::internal::HeapObjectIterator"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %348) #10
  ret void

360:                                              ; preds = %354, %585
  %361 = phi i64 [ %351, %354 ], [ %586, %585 ]
  %362 = and i64 %361, -4294967296
  %363 = add i64 %361, -1
  %364 = inttoptr i64 %363 to i32*
  %365 = load atomic i32, i32* %364 monotonic, align 4
  %366 = zext i32 %365 to i64
  %367 = or i64 %362, %366
  %368 = add i64 %367, 7
  %369 = inttoptr i64 %368 to i16*
  %370 = load atomic i16, i16* %369 monotonic, align 2
  %371 = add i16 %370, -1059
  %372 = icmp ult i16 %371, 15
  br i1 %372, label %373, label %585

373:                                              ; preds = %360
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %355) #10
  store i64 %361, i64* %356, align 8
  %374 = load atomic i32, i32* %364 monotonic, align 4
  %375 = zext i32 %374 to i64
  %376 = or i64 %362, %375
  %377 = add i64 %376, 9
  %378 = inttoptr i64 %377 to i8*
  %379 = load atomic i8, i8* %378 monotonic, align 1
  %380 = icmp slt i8 %379, 0
  br i1 %380, label %381, label %423

381:                                              ; preds = %373
  %382 = add i64 %361, 27
  %383 = inttoptr i64 %382 to i32*
  %384 = load atomic i32, i32* %383 acquire, align 4
  %385 = zext i32 %384 to i64
  %386 = or i64 %362, %385
  %387 = add i64 %386, -1
  %388 = inttoptr i64 %387 to i32*
  %389 = load atomic i32, i32* %388 monotonic, align 4
  %390 = zext i32 %389 to i64
  %391 = or i64 %362, %390
  %392 = add i64 %391, 7
  %393 = inttoptr i64 %392 to i16*
  %394 = load atomic i16, i16* %393 monotonic, align 2
  %395 = icmp eq i16 %394, 172
  br i1 %395, label %396, label %423

396:                                              ; preds = %381
  %397 = load i64, i64* %356, align 8
  %398 = and i64 %397, -4294967296
  %399 = add i64 %397, 27
  %400 = inttoptr i64 %399 to i32*
  %401 = load atomic i32, i32* %400 acquire, align 4
  %402 = zext i32 %401 to i64
  %403 = or i64 %398, %402
  %404 = add i64 %403, 11
  %405 = inttoptr i64 %404 to i32*
  %406 = load atomic i32, i32* %405 monotonic, align 4
  %407 = icmp ugt i32 %406, 536870911
  br i1 %407, label %408, label %423

408:                                              ; preds = %396
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %357) #10
  %409 = load i64, i64* %356, align 8
  %410 = and i64 %409, -4294967296
  %411 = add i64 %409, 27
  %412 = inttoptr i64 %411 to i32*
  %413 = load atomic i32, i32* %412 acquire, align 4
  %414 = zext i32 %413 to i64
  %415 = or i64 %410, %414
  store i64 %415, i64* %358, align 8
  %416 = load i64, i64* %356, align 8
  %417 = and i64 %416, -262144
  %418 = or i64 %417, 16
  %419 = inttoptr i64 %418 to i64*
  %420 = load i64, i64* %419, align 16
  %421 = add i64 %420, -41416
  %422 = inttoptr i64 %421 to %"class.v8::internal::Isolate"*
  call void @_ZN2v88internal3Map29CompleteInobjectSlackTrackingEPNS0_7IsolateE(%"class.v8::internal::Map"* nonnull %3, %"class.v8::internal::Isolate"* %422) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %357) #10
  br label %423

423:                                              ; preds = %373, %381, %396, %408
  %424 = load i64, i64* %356, align 8
  %425 = add i64 %424, 11
  %426 = inttoptr i64 %425 to i32*
  %427 = load atomic i32, i32* %426 monotonic, align 4
  %428 = and i64 %424, -4294967296
  %429 = zext i32 %427 to i64
  %430 = or i64 %428, %429
  %431 = add i64 %430, 15
  %432 = inttoptr i64 %431 to i32*
  %433 = load atomic i32, i32* %432 acquire, align 4
  %434 = zext i32 %433 to i64
  %435 = or i64 %428, %434
  %436 = add i64 %435, -1
  %437 = inttoptr i64 %436 to i32*
  %438 = load atomic i32, i32* %437 monotonic, align 4
  %439 = zext i32 %438 to i64
  %440 = or i64 %428, %439
  %441 = add i64 %440, 7
  %442 = inttoptr i64 %441 to i16*
  %443 = load atomic i16, i16* %442 monotonic, align 2
  %444 = icmp eq i16 %443, 100
  br i1 %444, label %445, label %453

445:                                              ; preds = %423
  %446 = add i64 %435, 11
  %447 = inttoptr i64 %446 to i32*
  %448 = load i32, i32* %447, align 4
  %449 = zext i32 %448 to i64
  %450 = or i64 %428, %449
  %451 = add i64 %450, -1
  %452 = inttoptr i64 %451 to i32*
  br label %453

453:                                              ; preds = %423, %445
  %454 = phi i32* [ %437, %423 ], [ %452, %445 ]
  %455 = phi i64 [ %435, %423 ], [ %450, %445 ]
  %456 = and i64 %455, -4294967296
  %457 = load atomic i32, i32* %454 monotonic, align 4
  %458 = zext i32 %457 to i64
  %459 = or i64 %456, %458
  %460 = add i64 %459, 7
  %461 = inttoptr i64 %460 to i16*
  %462 = load atomic i16, i16* %461 monotonic, align 2
  %463 = icmp eq i16 %462, 112
  br i1 %463, label %464, label %490

464:                                              ; preds = %453
  %465 = load atomic i32, i32* %432 acquire, align 4
  %466 = zext i32 %465 to i64
  %467 = or i64 %428, %466
  %468 = add i64 %467, -1
  %469 = inttoptr i64 %468 to i32*
  %470 = load atomic i32, i32* %469 monotonic, align 4
  %471 = zext i32 %470 to i64
  %472 = or i64 %428, %471
  %473 = add i64 %472, 7
  %474 = inttoptr i64 %473 to i16*
  %475 = load atomic i16, i16* %474 monotonic, align 2
  %476 = icmp eq i16 %475, 100
  br i1 %476, label %477, label %483

477:                                              ; preds = %464
  %478 = add i64 %467, 11
  %479 = inttoptr i64 %478 to i32*
  %480 = load i32, i32* %479, align 4
  %481 = zext i32 %480 to i64
  %482 = or i64 %428, %481
  br label %483

483:                                              ; preds = %464, %477
  %484 = phi i64 [ %482, %477 ], [ %467, %464 ]
  %485 = add i64 %484, 23
  %486 = inttoptr i64 %485 to i32*
  %487 = load i32, i32* %486, align 4
  %488 = and i32 %487, -2
  %489 = icmp eq i32 %488, 2
  br i1 %489, label %584, label %490

490:                                              ; preds = %453, %483
  %491 = call zeroext i1 @_ZNK2v88internal10JSFunction18CanDiscardCompiledEv(%"class.v8::internal::JSFunction"* nonnull %9) #10
  br i1 %491, label %492, label %516

492:                                              ; preds = %490
  %493 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %494 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %493, i64 0, i32 41
  %495 = call i64* @_ZN2v88internal8Builtins14builtin_handleEi(%"class.v8::internal::Builtins"* %494, i32 85) #10
  %496 = load i64, i64* %495, align 8
  %497 = load i64, i64* %356, align 8
  %498 = add i64 %497, 23
  %499 = inttoptr i64 %498 to i32*
  %500 = trunc i64 %496 to i32
  store atomic volatile i32 %500, i32* %499 monotonic, align 4
  %501 = load i64, i64* %356, align 8
  %502 = add i64 %501, 23
  %503 = and i64 %496, 1
  %504 = icmp eq i64 %503, 0
  br i1 %504, label %516, label %505

505:                                              ; preds = %492
  %506 = and i64 %501, -262144
  %507 = or i64 %506, 8
  %508 = inttoptr i64 %507 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = and i64 %509, 262144
  %511 = icmp eq i64 %510, 0
  br i1 %511, label %516, label %512

512:                                              ; preds = %505
  %513 = or i64 %506, 16
  %514 = inttoptr i64 %513 to %"class.v8::internal::Heap"**
  %515 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %514, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %515, i64 %501, i64 %502, i64 %496) #10
  br label %516

516:                                              ; preds = %512, %505, %492, %490
  %517 = load i64, i64* %356, align 8
  %518 = and i64 %517, -4294967296
  %519 = add i64 %517, 19
  %520 = inttoptr i64 %519 to i32*
  %521 = load i32, i32* %520, align 4
  %522 = zext i32 %521 to i64
  %523 = or i64 %518, %522
  %524 = add i64 %523, 3
  %525 = inttoptr i64 %524 to i32*
  %526 = load i32, i32* %525, align 4
  %527 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %528 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %527, null
  br i1 %528, label %535, label %529

529:                                              ; preds = %516
  %530 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %527, i64 0, i32 0, i32 1
  %531 = load i8, i8* %530, align 8, !range !3
  %532 = icmp eq i8 %531, 0
  br i1 %532, label %535, label %533

533:                                              ; preds = %529
  %534 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %527, i64 0, i32 1, i64 0
  br label %545

535:                                              ; preds = %529, %516
  %536 = and i32 %526, -262144
  %537 = zext i32 %536 to i64
  %538 = or i64 %518, %537
  %539 = or i64 %538, 16
  %540 = inttoptr i64 %539 to i64*
  %541 = load i64, i64* %540, align 16
  %542 = add i64 %541, -41416
  %543 = inttoptr i64 %542 to %"class.v8::internal::Isolate"*
  %544 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %543, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %545

545:                                              ; preds = %533, %535
  %546 = phi i64* [ %544, %535 ], [ %534, %533 ]
  %547 = getelementptr inbounds i64, i64* %546, i64 4
  %548 = load i64, i64* %547, align 8
  %549 = trunc i64 %548 to i32
  %550 = icmp eq i32 %526, %549
  br i1 %550, label %584, label %551

551:                                              ; preds = %545
  %552 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %553 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %552, i64 0, i32 0, i32 7, i32 0, i64 4
  %554 = load i64, i64* %553, align 8
  %555 = trunc i64 %554 to i32
  store atomic volatile i32 %555, i32* %525 monotonic, align 4
  %556 = and i64 %554, 1
  %557 = icmp eq i64 %556, 0
  br i1 %557, label %569, label %558

558:                                              ; preds = %551
  %559 = and i64 %523, -262144
  %560 = or i64 %559, 8
  %561 = inttoptr i64 %560 to i64*
  %562 = load i64, i64* %561, align 8
  %563 = and i64 %562, 262144
  %564 = icmp eq i64 %563, 0
  br i1 %564, label %569, label %565

565:                                              ; preds = %558
  %566 = or i64 %559, 16
  %567 = inttoptr i64 %566 to %"class.v8::internal::Heap"**
  %568 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %567, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %568, i64 %523, i64 %524, i64 %554) #10
  br label %569

569:                                              ; preds = %565, %558, %551
  %570 = and i64 %554, -262144
  %571 = or i64 %570, 8
  %572 = inttoptr i64 %571 to i64*
  %573 = load i64, i64* %572, align 8
  %574 = and i64 %573, 24
  %575 = icmp eq i64 %574, 0
  br i1 %575, label %584, label %576

576:                                              ; preds = %569
  %577 = and i64 %523, -262144
  %578 = or i64 %577, 8
  %579 = inttoptr i64 %578 to i64*
  %580 = load i64, i64* %579, align 8
  %581 = and i64 %580, 24
  %582 = icmp eq i64 %581, 0
  br i1 %582, label %583, label %584

583:                                              ; preds = %576
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %523, i64 %524, i64 %554) #10
  br label %584

584:                                              ; preds = %583, %576, %569, %545, %483
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %355) #10
  br label %585

585:                                              ; preds = %584, %360
  %586 = call i64 @_ZN2v88internal18HeapObjectIterator4NextEv(%"class.v8::internal::HeapObjectIterator"* nonnull %8) #10
  %587 = trunc i64 %586 to i32
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %359, label %360
}

declare void @_ZN2v88internal18HeapObjectIteratorC1EPNS0_4HeapENS1_20HeapObjectsFilteringE(%"class.v8::internal::HeapObjectIterator"*, %"class.v8::internal::Heap"*, i32) unnamed_addr #1

declare i64 @_ZN2v88internal18HeapObjectIterator4NextEv(%"class.v8::internal::HeapObjectIterator"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88internal18HeapObjectIteratorD1Ev(%"class.v8::internal::HeapObjectIterator"*) unnamed_addr #5

declare void @_ZN2v88internal18SharedFunctionInfo15DiscardCompiledEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v88internal10JSFunction18CanDiscardCompiledEv(%"class.v8::internal::JSFunction"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal8Builtins14builtin_handleEi(%"class.v8::internal::Builtins"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8Snapshot39SerializeDeserializeAndVerifyForTestingEPNS0_7IsolateENS0_6HandleINS0_7ContextEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.1162", align 8
  %4 = alloca %"class.std::__1::vector.1169", align 8
  %5 = alloca %"class.v8::ExtensionConfiguration", align 8
  %6 = alloca %"struct.v8::DeserializeInternalFieldsCallback", align 8
  %7 = alloca %"class.v8::StartupData", align 8
  %8 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %9 = bitcast %"class.v8::StartupData"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap26CollectAllAvailableGarbageENS0_23GarbageCollectionReasonE(%"class.v8::internal::Heap"* %10, i32 20) #10
  %11 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #10
  %12 = load i64, i64* %1, align 8
  %13 = bitcast %"class.std::__1::vector.1162"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  %14 = tail call i8* @_Znwm(i64 8) #13
  %15 = getelementptr inbounds %"class.std::__1::vector.1162", %"class.std::__1::vector.1162"* %3, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::vector.1162"* %3 to i8**
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %14, i64 8
  %18 = getelementptr inbounds %"class.std::__1::vector.1162", %"class.std::__1::vector.1162"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"class.v8::internal::Context"** %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = bitcast %"class.v8::internal::Context"** %15 to i64*
  %21 = bitcast i8* %14 to i64*
  store i64 %12, i64* %21, align 8
  %22 = ptrtoint i8* %17 to i64
  store i64 %22, i64* %20, align 8
  %23 = bitcast %"class.std::__1::vector.1169"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #10
  %24 = tail call i8* @_Znwm(i64 16) #13
  %25 = getelementptr inbounds %"class.std::__1::vector.1169", %"class.std::__1::vector.1169"* %4, i64 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::vector.1169"* %4 to i8**
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %24, i64 16
  %28 = getelementptr inbounds %"class.std::__1::vector.1169", %"class.std::__1::vector.1169"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast %"struct.v8::SerializeInternalFieldsCallback"** %28 to i8**
  store i8* %27, i8** %29, align 8
  %30 = bitcast %"struct.v8::SerializeInternalFieldsCallback"** %25 to i64*
  %31 = ptrtoint i8* %27 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 16, i1 false) #10
  store i64 %31, i64* %30, align 8
  %32 = call { i8*, i32 } @_ZN2v88internal8Snapshot6CreateEPNS0_7IsolateEPNSt3__16vectorINS0_7ContextENS4_9allocatorIS6_EEEERKNS5_INS_31SerializeInternalFieldsCallbackENS7_ISB_EEEERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENSH_ILSI_1ELb0EEEEEENS_4base5FlagsINS1_14SerializerFlagEiEE(%"class.v8::internal::Isolate"* %0, %"class.std::__1::vector.1162"* nonnull %3, %"class.std::__1::vector.1169"* nonnull dereferenceable(24) %4, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %8, i32 7) #10
  call void @_ZdlPv(i8* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #10
  %33 = getelementptr inbounds %"class.std::__1::vector.1162", %"class.std::__1::vector.1162"* %3, i64 0, i32 0, i32 0
  %34 = load %"class.v8::internal::Context"*, %"class.v8::internal::Context"** %33, align 8
  %35 = icmp eq %"class.v8::internal::Context"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %2
  %37 = ptrtoint %"class.v8::internal::Context"* %34 to i64
  store i64 %37, i64* %20, align 8
  %38 = bitcast %"class.v8::internal::Context"* %34 to i8*
  call void @_ZdlPv(i8* %38) #13
  br label %39

39:                                               ; preds = %36, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  %40 = extractvalue { i8*, i32 } %32, 0
  %41 = extractvalue { i8*, i32 } %32, 1
  %42 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %7, i64 0, i32 0
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %7, i64 0, i32 1
  store i32 %41, i32* %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #10
  %44 = call %"class.v8::internal::Isolate"* @_ZN2v88internal7Isolate3NewEv() #10
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 61
  store i8 1, i8* %45, align 1
  call void @_ZN2v88internal7Isolate5EnterEv(%"class.v8::internal::Isolate"* %44) #10
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 102
  store %"class.v8::StartupData"* %7, %"class.v8::StartupData"** %46, align 8
  %47 = call %"class.v8::ArrayBuffer::Allocator"* @_ZN2v811ArrayBuffer9Allocator19NewDefaultAllocatorEv() #10
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 145
  store %"class.v8::ArrayBuffer::Allocator"* %47, %"class.v8::ArrayBuffer::Allocator"** %48, align 8
  %49 = call zeroext i1 @_ZN2v88internal8Snapshot10InitializeEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %44)
  br i1 %49, label %51, label %50, !prof !2

50:                                               ; preds = %39
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0)) #11
  unreachable

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 31
  %53 = bitcast %"struct.v8::internal::HandleScopeData"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 31, i32 1
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 31, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %57, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 11
  %61 = load %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::Bootstrapper"** %60, align 8
  %62 = bitcast %"struct.v8::DeserializeInternalFieldsCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62)
  %63 = bitcast %"class.v8::ExtensionConfiguration"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #10
  %64 = getelementptr inbounds %"class.v8::ExtensionConfiguration", %"class.v8::ExtensionConfiguration"* %5, i64 0, i32 0
  store i32 0, i32* %64, align 8
  %65 = getelementptr inbounds %"class.v8::ExtensionConfiguration", %"class.v8::ExtensionConfiguration"* %5, i64 0, i32 1
  store i8** null, i8*** %65, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 0, i64 16, i1 false) #10
  %66 = call i64* @_ZN2v88internal12Bootstrapper17CreateEnvironmentENS0_11MaybeHandleINS0_13JSGlobalProxyEEENS_5LocalINS_14ObjectTemplateEEEPNS_22ExtensionConfigurationEmNS_33DeserializeInternalFieldsCallbackEPNS_14MicrotaskQueueE(%"class.v8::internal::Bootstrapper"* %61, i64* null, %"class.v8::ObjectTemplate"* null, %"class.v8::ExtensionConfiguration"* nonnull %5, i64 0, %"struct.v8::DeserializeInternalFieldsCallback"* nonnull byval(%"struct.v8::DeserializeInternalFieldsCallback") align 8 %6, %"class.v8::MicrotaskQueue"* null) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62)
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, -4294967296
  %69 = add i64 %67, -1
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %68, %72
  %74 = add i64 %73, 7
  %75 = inttoptr i64 %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = icmp eq i16 %76, 144
  br i1 %77, label %79, label %78, !prof !2

78:                                               ; preds = %51
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #11
  unreachable

79:                                               ; preds = %51
  %80 = icmp eq %"class.v8::internal::Isolate"* %44, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %79
  %82 = inttoptr i64 %54 to i64*
  %83 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %52, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  store i64 %54, i64* %53, align 8
  %85 = load i32, i32* %57, align 8
  %86 = add nsw i32 %85, -1
  store i32 %86, i32* %57, align 8
  %87 = load i64*, i64** %55, align 8
  %88 = icmp eq i64* %87, %56
  br i1 %88, label %91, label %89

89:                                               ; preds = %81
  store i64* %56, i64** %55, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %44) #10
  %90 = load i64*, i64** %83, align 8
  br label %91

91:                                               ; preds = %89, %81
  %92 = phi i64* [ %90, %89 ], [ %82, %81 ]
  %93 = phi i64* [ %56, %89 ], [ %84, %81 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %92, i64* %93) #10
  br label %94

94:                                               ; preds = %79, %91
  call void @_ZN2v88internal7Isolate4ExitEv(%"class.v8::internal::Isolate"* %44) #10
  call void @_ZN2v88internal7Isolate6DeleteEPS1_(%"class.v8::internal::Isolate"* %44) #10
  %95 = icmp eq i8* %40, null
  br i1 %95, label %97, label %96

96:                                               ; preds = %94
  call void @_ZdaPv(i8* nonnull %40) #13
  br label %97

97:                                               ; preds = %94, %96
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  ret void
}

declare void @_ZN2v88internal4Heap26CollectAllAvailableGarbageENS0_23GarbageCollectionReasonE(%"class.v8::internal::Heap"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i32 } @_ZN2v88internal8Snapshot6CreateEPNS0_7IsolateENS0_7ContextERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS6_ILS7_1ELb0EEEEEENS_4base5FlagsINS1_14SerializerFlagEiEE(%"class.v8::internal::Isolate"*, i64, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.1162", align 8
  %6 = alloca %"class.std::__1::vector.1169", align 8
  %7 = bitcast %"class.std::__1::vector.1162"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = tail call i8* @_Znwm(i64 8) #13
  %9 = getelementptr inbounds %"class.std::__1::vector.1162", %"class.std::__1::vector.1162"* %5, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::vector.1162"* %5 to i8**
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = getelementptr inbounds %"class.std::__1::vector.1162", %"class.std::__1::vector.1162"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.v8::internal::Context"** %12 to i8**
  store i8* %11, i8** %13, align 8
  %14 = bitcast %"class.v8::internal::Context"** %9 to i64*
  %15 = bitcast i8* %8 to i64*
  store i64 %1, i64* %15, align 8
  %16 = ptrtoint i8* %11 to i64
  store i64 %16, i64* %14, align 8
  %17 = bitcast %"class.std::__1::vector.1169"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  %18 = tail call i8* @_Znwm(i64 16) #13
  %19 = getelementptr inbounds %"class.std::__1::vector.1169", %"class.std::__1::vector.1169"* %6, i64 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::vector.1169"* %6 to i8**
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %18, i64 16
  %22 = getelementptr inbounds %"class.std::__1::vector.1169", %"class.std::__1::vector.1169"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"struct.v8::SerializeInternalFieldsCallback"** %22 to i8**
  store i8* %21, i8** %23, align 8
  %24 = bitcast %"struct.v8::SerializeInternalFieldsCallback"** %19 to i64*
  %25 = ptrtoint i8* %21 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false)
  store i64 %25, i64* %24, align 8
  %26 = call { i8*, i32 } @_ZN2v88internal8Snapshot6CreateEPNS0_7IsolateEPNSt3__16vectorINS0_7ContextENS4_9allocatorIS6_EEEERKNS5_INS_31SerializeInternalFieldsCallbackENS7_ISB_EEEERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENSH_ILSI_1ELb0EEEEEENS_4base5FlagsINS1_14SerializerFlagEiEE(%"class.v8::internal::Isolate"* %0, %"class.std::__1::vector.1162"* nonnull %5, %"class.std::__1::vector.1169"* nonnull dereferenceable(24) %6, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1) %2, i32 %3)
  call void @_ZdlPv(i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  %27 = getelementptr inbounds %"class.std::__1::vector.1162", %"class.std::__1::vector.1162"* %5, i64 0, i32 0, i32 0
  %28 = load %"class.v8::internal::Context"*, %"class.v8::internal::Context"** %27, align 8
  %29 = icmp eq %"class.v8::internal::Context"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %4
  %31 = ptrtoint %"class.v8::internal::Context"* %28 to i64
  store i64 %31, i64* %14, align 8
  %32 = bitcast %"class.v8::internal::Context"* %28 to i8*
  call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %4, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret { i8*, i32 } %26
}

declare %"class.v8::internal::Isolate"* @_ZN2v88internal7Isolate3NewEv() local_unnamed_addr #1

declare void @_ZN2v88internal7Isolate5EnterEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare %"class.v8::ArrayBuffer::Allocator"* @_ZN2v811ArrayBuffer9Allocator19NewDefaultAllocatorEv() local_unnamed_addr #1

declare void @_ZN2v88internal7Isolate4ExitEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare void @_ZN2v88internal7Isolate6DeleteEPS1_(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i32 } @_ZN2v88internal8Snapshot6CreateEPNS0_7IsolateEPNSt3__16vectorINS0_7ContextENS4_9allocatorIS6_EEEERKNS5_INS_31SerializeInternalFieldsCallbackENS7_ISB_EEEERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENSH_ILSI_1ELb0EEEEEENS_4base5FlagsINS1_14SerializerFlagEiEE(%"class.v8::internal::Isolate"*, %"class.std::__1::vector.1162"*, %"class.std::__1::vector.1169"* nocapture readonly dereferenceable(24), %"class.v8::internal::CombinationAssertScope"* dereferenceable(1), i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::base::TimeDelta", align 8
  %7 = alloca %"class.v8::internal::SnapshotData", align 8
  %8 = alloca %"class.v8::internal::SnapshotData", align 8
  %9 = alloca %"class.std::__1::vector.1283", align 8
  %10 = alloca %"class.std::__1::vector.1239", align 8
  %11 = alloca %"class.v8::internal::SnapshotData", align 8
  %12 = alloca %"class.v8::internal::SafepointScope", align 8
  %13 = alloca %"class.v8::internal::ReadOnlySerializer", align 8
  %14 = alloca %"class.v8::internal::StartupSerializer", align 8
  %15 = alloca %"class.std::__1::vector.1239", align 16
  %16 = alloca %"class.std::__1::vector.818", align 8
  %17 = alloca %"class.v8::internal::ContextSerializer", align 8
  %18 = alloca %"class.v8::internal::SnapshotData", align 8
  %19 = alloca %"class.v8::internal::SnapshotData", align 8
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %21 = bitcast %"struct.v8::internal::HandleScopeData"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %25, align 8
  %28 = bitcast %"class.v8::internal::SafepointScope"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  call void @_ZN2v88internal14SafepointScopeC1EPNS0_4HeapE(%"class.v8::internal::SafepointScope"* nonnull %12, %"class.v8::internal::Heap"* %29) #10
  %30 = bitcast %"class.v8::internal::ReadOnlySerializer"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 648, i8* nonnull %30) #10
  call void @_ZN2v88internal18ReadOnlySerializerC1EPNS0_7IsolateENS_4base5FlagsINS0_8Snapshot14SerializerFlagEiEE(%"class.v8::internal::ReadOnlySerializer"* nonnull %13, %"class.v8::internal::Isolate"* %0, i32 %4) #10
  call void @_ZN2v88internal18ReadOnlySerializer22SerializeReadOnlyRootsEv(%"class.v8::internal::ReadOnlySerializer"* nonnull %13) #10
  %31 = bitcast %"class.v8::internal::StartupSerializer"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 720, i8* nonnull %31) #10
  call void @_ZN2v88internal17StartupSerializerC1EPNS0_7IsolateENS_4base5FlagsINS0_8Snapshot14SerializerFlagEiEEPNS0_18ReadOnlySerializerE(%"class.v8::internal::StartupSerializer"* nonnull %14, %"class.v8::internal::Isolate"* %0, i32 %4, %"class.v8::internal::ReadOnlySerializer"* nonnull %13) #10
  call void @_ZN2v88internal17StartupSerializer25SerializeStrongReferencesERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::StartupSerializer"* nonnull %14, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1) %3) #10
  %32 = getelementptr inbounds %"class.std::__1::vector.1162", %"class.std::__1::vector.1162"* %1, i64 0, i32 0, i32 1
  %33 = bitcast %"class.v8::internal::Context"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::vector.1162"* %1 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = lshr exact i64 %37, 3
  %39 = trunc i64 %38 to i32
  %40 = bitcast %"class.std::__1::vector.1239"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %40, i8 0, i64 24, i1 false) #10
  %41 = shl i64 %37, 29
  %42 = ashr exact i64 %41, 32
  %43 = getelementptr inbounds %"class.std::__1::vector.1239", %"class.std::__1::vector.1239"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast %"class.v8::internal::SnapshotData"*** %43 to i64*
  %45 = bitcast %"class.std::__1::vector.1239"* %15 to i64*
  %46 = icmp eq i64 %41, 0
  br i1 %46, label %60, label %47

47:                                               ; preds = %5
  %48 = icmp ugt i64 %42, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  call void @abort() #11
  unreachable

50:                                               ; preds = %47
  %51 = ashr exact i64 %41, 29
  %52 = call i8* @_Znwm(i64 %51) #13
  %53 = bitcast i8* %52 to %"class.v8::internal::SnapshotData"**
  %54 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %53, i64 %42
  %55 = ptrtoint %"class.v8::internal::SnapshotData"** %54 to i64
  %56 = insertelement <2 x i8*> undef, i8* %52, i32 0
  %57 = shufflevector <2 x i8*> %56, <2 x i8*> undef, <2 x i32> zeroinitializer
  %58 = ptrtoint <2 x i8*> %57 to <2 x i64>
  %59 = bitcast %"class.std::__1::vector.1239"* %15 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %59, align 16
  store i64 %55, i64* %44, align 16
  br label %60

60:                                               ; preds = %50, %5
  %61 = bitcast %"class.std::__1::vector.818"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 24, i1 false) #10
  %62 = icmp sgt i32 %39, 0
  br i1 %62, label %63, label %211

63:                                               ; preds = %60
  %64 = bitcast %"class.v8::internal::ContextSerializer"* %17 to i8*
  %65 = getelementptr inbounds %"class.std::__1::vector.1169", %"class.std::__1::vector.1169"* %2, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %17, i64 0, i32 3
  %67 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %17, i64 0, i32 0
  %68 = getelementptr inbounds %"class.std::__1::vector.1239", %"class.std::__1::vector.1239"* %15, i64 0, i32 0, i32 1
  %69 = bitcast %"class.v8::internal::SnapshotData"*** %68 to i64*
  %70 = getelementptr inbounds %"class.std::__1::vector.818", %"class.std::__1::vector.818"* %16, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.std::__1::vector.818", %"class.std::__1::vector.818"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  %72 = bitcast i32** %70 to i64*
  %73 = bitcast %"class.std::__1::vector.818"* %16 to i64*
  %74 = bitcast i32** %71 to i64*
  %75 = and i64 %38, 4294967295
  br label %77

76:                                               ; preds = %208
  call void @_ZN2v88internal17StartupSerializer34SerializeWeakReferencesAndDeferredEv(%"class.v8::internal::StartupSerializer"* nonnull %14) #10
  br i1 %97, label %212, label %220

77:                                               ; preds = %208, %63
  %78 = phi i64 [ 0, %63 ], [ %209, %208 ]
  %79 = phi i1 [ true, %63 ], [ %97, %208 ]
  call void @llvm.lifetime.start.p0i8(i64 528, i8* nonnull %64) #10
  %80 = load %"struct.v8::SerializeInternalFieldsCallback"*, %"struct.v8::SerializeInternalFieldsCallback"** %65, align 8
  %81 = getelementptr inbounds %"struct.v8::SerializeInternalFieldsCallback", %"struct.v8::SerializeInternalFieldsCallback"* %80, i64 %78, i32 0
  %82 = load { i8*, i32 } (%"class.v8::Object"*, i32, i8*)*, { i8*, i32 } (%"class.v8::Object"*, i32, i8*)** %81, align 8
  %83 = getelementptr inbounds %"struct.v8::SerializeInternalFieldsCallback", %"struct.v8::SerializeInternalFieldsCallback"* %80, i64 %78, i32 1
  %84 = load i8*, i8** %83, align 8
  call void @_ZN2v88internal17ContextSerializerC1EPNS0_7IsolateENS_4base5FlagsINS0_8Snapshot14SerializerFlagEiEEPNS0_17StartupSerializerENS_31SerializeInternalFieldsCallbackE(%"class.v8::internal::ContextSerializer"* nonnull %17, %"class.v8::internal::Isolate"* %0, i32 %4, %"class.v8::internal::StartupSerializer"* nonnull %14, { i8*, i32 } (%"class.v8::Object"*, i32, i8*)* %82, i8* %84) #10
  %85 = load i64, i64* %33, align 8
  %86 = load i64, i64* %35, align 8
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = icmp ugt i64 %88, %78
  br i1 %89, label %92, label %90

90:                                               ; preds = %77
  %91 = bitcast %"class.std::__1::vector.1162"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %91) #11
  unreachable

92:                                               ; preds = %77
  %93 = inttoptr i64 %86 to %"class.v8::internal::Context"*
  %94 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %93, i64 %78
  call void @_ZN2v88internal17ContextSerializer9SerializeEPNS0_7ContextERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS5_ILS6_1ELb0EEEEEE(%"class.v8::internal::ContextSerializer"* nonnull %17, %"class.v8::internal::Context"* %94, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1) %3) #10
  %95 = load i8, i8* %66, align 8
  %96 = icmp ne i8 %95, 0
  %97 = and i1 %79, %96
  %98 = call i8* @_Znwm(i64 24) #13
  %99 = bitcast i8* %98 to %"class.v8::internal::SnapshotData"*
  call void @_ZN2v88internal12SnapshotDataC1EPKNS0_10SerializerE(%"class.v8::internal::SnapshotData"* nonnull %99, %"class.v8::internal::Serializer"* nonnull %67) #10
  %100 = ptrtoint i8* %98 to i64
  %101 = load %"class.v8::internal::SnapshotData"**, %"class.v8::internal::SnapshotData"*** %68, align 8
  %102 = load %"class.v8::internal::SnapshotData"**, %"class.v8::internal::SnapshotData"*** %43, align 16
  %103 = icmp ult %"class.v8::internal::SnapshotData"** %101, %102
  %104 = ptrtoint %"class.v8::internal::SnapshotData"** %102 to i64
  br i1 %103, label %105, label %109

105:                                              ; preds = %92
  %106 = bitcast %"class.v8::internal::SnapshotData"** %101 to i64*
  store i64 %100, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %101, i64 1
  %108 = ptrtoint %"class.v8::internal::SnapshotData"** %107 to i64
  store i64 %108, i64* %69, align 8
  br label %153

109:                                              ; preds = %92
  %110 = ptrtoint %"class.v8::internal::SnapshotData"** %101 to i64
  %111 = load i64, i64* %45, align 16
  %112 = sub i64 %110, %111
  %113 = ashr exact i64 %112, 3
  %114 = add nsw i64 %113, 1
  %115 = icmp ugt i64 %114, 2305843009213693951
  br i1 %115, label %116, label %118

116:                                              ; preds = %109
  %117 = bitcast %"class.std::__1::vector.1239"* %15 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %117) #11
  unreachable

118:                                              ; preds = %109
  %119 = sub i64 %104, %111
  %120 = ashr exact i64 %119, 3
  %121 = icmp ult i64 %120, 1152921504606846975
  br i1 %121, label %122, label %130

122:                                              ; preds = %118
  %123 = ashr exact i64 %119, 2
  %124 = icmp ult i64 %123, %114
  %125 = select i1 %124, i64 %114, i64 %123
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %135, label %127

127:                                              ; preds = %122
  %128 = icmp ugt i64 %125, 2305843009213693951
  br i1 %128, label %129, label %130

129:                                              ; preds = %127
  call void @abort() #11
  unreachable

130:                                              ; preds = %127, %118
  %131 = phi i64 [ %125, %127 ], [ 2305843009213693951, %118 ]
  %132 = shl i64 %131, 3
  %133 = call i8* @_Znwm(i64 %132) #13
  %134 = bitcast i8* %133 to %"class.v8::internal::SnapshotData"**
  br label %135

135:                                              ; preds = %130, %122
  %136 = phi i64 [ %131, %130 ], [ 0, %122 ]
  %137 = phi i8* [ %133, %130 ], [ null, %122 ]
  %138 = phi %"class.v8::internal::SnapshotData"** [ %134, %130 ], [ null, %122 ]
  %139 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %138, i64 %113
  %140 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %138, i64 %136
  %141 = ptrtoint %"class.v8::internal::SnapshotData"** %140 to i64
  %142 = bitcast %"class.v8::internal::SnapshotData"** %139 to i64*
  store i64 %100, i64* %142, align 8
  %143 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %139, i64 1
  %144 = ptrtoint %"class.v8::internal::SnapshotData"** %143 to i64
  %145 = ptrtoint %"class.v8::internal::SnapshotData"** %138 to i64
  %146 = icmp sgt i64 %112, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %135
  %148 = inttoptr i64 %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 8 %148, i64 %112, i1 false) #10
  br label %149

149:                                              ; preds = %147, %135
  store i64 %145, i64* %45, align 16
  store i64 %144, i64* %69, align 8
  store i64 %141, i64* %44, align 16
  %150 = icmp eq i64 %111, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %111 to i8*
  call void @_ZdlPv(i8* %152) #13
  br label %153

153:                                              ; preds = %105, %149, %151
  %154 = load i8, i8* @_ZN2v88internal29FLAG_serialization_statisticsE, align 1, !range !3
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %208, label %156

156:                                              ; preds = %153
  %157 = call i32 @_ZNK2v88internal10Serializer19TotalAllocationSizeEv(%"class.v8::internal::Serializer"* nonnull %67) #10
  %158 = load i32*, i32** %70, align 8
  %159 = load i32*, i32** %71, align 8
  %160 = icmp ult i32* %158, %159
  %161 = ptrtoint i32* %159 to i64
  br i1 %160, label %162, label %165

162:                                              ; preds = %156
  store i32 %157, i32* %158, align 4
  %163 = getelementptr inbounds i32, i32* %158, i64 1
  %164 = ptrtoint i32* %163 to i64
  store i64 %164, i64* %72, align 8
  br label %208

165:                                              ; preds = %156
  %166 = ptrtoint i32* %158 to i64
  %167 = load i64, i64* %73, align 8
  %168 = sub i64 %166, %167
  %169 = ashr exact i64 %168, 2
  %170 = add nsw i64 %169, 1
  %171 = icmp ugt i64 %170, 4611686018427387903
  br i1 %171, label %172, label %174

172:                                              ; preds = %165
  %173 = bitcast %"class.std::__1::vector.818"* %16 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %173) #11
  unreachable

174:                                              ; preds = %165
  %175 = sub i64 %161, %167
  %176 = ashr exact i64 %175, 2
  %177 = icmp ult i64 %176, 2305843009213693951
  br i1 %177, label %178, label %186

178:                                              ; preds = %174
  %179 = ashr exact i64 %175, 1
  %180 = icmp ult i64 %179, %170
  %181 = select i1 %180, i64 %170, i64 %179
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %191, label %183

183:                                              ; preds = %178
  %184 = icmp ugt i64 %181, 4611686018427387903
  br i1 %184, label %185, label %186

185:                                              ; preds = %183
  call void @abort() #11
  unreachable

186:                                              ; preds = %183, %174
  %187 = phi i64 [ %181, %183 ], [ 4611686018427387903, %174 ]
  %188 = shl i64 %187, 2
  %189 = call i8* @_Znwm(i64 %188) #13
  %190 = bitcast i8* %189 to i32*
  br label %191

191:                                              ; preds = %186, %178
  %192 = phi i64 [ %187, %186 ], [ 0, %178 ]
  %193 = phi i8* [ %189, %186 ], [ null, %178 ]
  %194 = phi i32* [ %190, %186 ], [ null, %178 ]
  %195 = getelementptr inbounds i32, i32* %194, i64 %169
  %196 = getelementptr inbounds i32, i32* %194, i64 %192
  %197 = ptrtoint i32* %196 to i64
  store i32 %157, i32* %195, align 4
  %198 = getelementptr inbounds i32, i32* %195, i64 1
  %199 = ptrtoint i32* %198 to i64
  %200 = ptrtoint i32* %194 to i64
  %201 = icmp sgt i64 %168, 0
  br i1 %201, label %202, label %204

202:                                              ; preds = %191
  %203 = inttoptr i64 %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %193, i8* align 4 %203, i64 %168, i1 false) #10
  br label %204

204:                                              ; preds = %202, %191
  store i64 %200, i64* %73, align 8
  store i64 %199, i64* %72, align 8
  store i64 %197, i64* %74, align 8
  %205 = icmp eq i64 %167, 0
  br i1 %205, label %208, label %206

206:                                              ; preds = %204
  %207 = inttoptr i64 %167 to i8*
  call void @_ZdlPv(i8* %207) #13
  br label %208

208:                                              ; preds = %206, %204, %162, %153
  call void @_ZN2v88internal17ContextSerializerD1Ev(%"class.v8::internal::ContextSerializer"* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 528, i8* nonnull %64) #10
  %209 = add nuw nsw i64 %78, 1
  %210 = icmp eq i64 %209, %75
  br i1 %210, label %76, label %77

211:                                              ; preds = %60
  call void @_ZN2v88internal17StartupSerializer34SerializeWeakReferencesAndDeferredEv(%"class.v8::internal::StartupSerializer"* nonnull %14) #10
  br label %212

212:                                              ; preds = %211, %76
  %213 = getelementptr inbounds %"class.v8::internal::StartupSerializer", %"class.v8::internal::StartupSerializer"* %14, i64 0, i32 0, i32 5
  %214 = load i8, i8* %213, align 8, !range !3
  %215 = icmp eq i8 %214, 0
  call void @_ZN2v88internal17StartupSerializer34CheckNoDirtyFinalizationRegistriesEv(%"class.v8::internal::StartupSerializer"* nonnull %14) #10
  call void @_ZN2v88internal18ReadOnlySerializer21FinalizeSerializationEv(%"class.v8::internal::ReadOnlySerializer"* nonnull %13) #10
  br i1 %215, label %221, label %216

216:                                              ; preds = %212
  %217 = getelementptr inbounds %"class.v8::internal::ReadOnlySerializer", %"class.v8::internal::ReadOnlySerializer"* %13, i64 0, i32 0, i32 5
  %218 = load i8, i8* %217, align 8, !range !3
  %219 = icmp ne i8 %218, 0
  br label %221

220:                                              ; preds = %76
  call void @_ZN2v88internal17StartupSerializer34CheckNoDirtyFinalizationRegistriesEv(%"class.v8::internal::StartupSerializer"* nonnull %14) #10
  call void @_ZN2v88internal18ReadOnlySerializer21FinalizeSerializationEv(%"class.v8::internal::ReadOnlySerializer"* nonnull %13) #10
  br label %221

221:                                              ; preds = %212, %220, %216
  %222 = phi i1 [ false, %212 ], [ %219, %216 ], [ false, %220 ]
  %223 = load i8, i8* @_ZN2v88internal29FLAG_serialization_statisticsE, align 1, !range !3
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %243, label %225

225:                                              ; preds = %221
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #10
  %226 = getelementptr inbounds %"class.v8::internal::ReadOnlySerializer", %"class.v8::internal::ReadOnlySerializer"* %13, i64 0, i32 0, i32 0
  %227 = call i32 @_ZNK2v88internal10Serializer19TotalAllocationSizeEv(%"class.v8::internal::Serializer"* nonnull %226) #10
  %228 = getelementptr inbounds %"class.v8::internal::StartupSerializer", %"class.v8::internal::StartupSerializer"* %14, i64 0, i32 0, i32 0
  %229 = call i32 @_ZNK2v88internal10Serializer19TotalAllocationSizeEv(%"class.v8::internal::Serializer"* nonnull %228) #10
  %230 = add nsw i32 %229, %227
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i32 %230) #10
  br i1 %62, label %231, label %234

231:                                              ; preds = %225
  %232 = getelementptr inbounds %"class.std::__1::vector.818", %"class.std::__1::vector.818"* %16, i64 0, i32 0, i32 0
  %233 = and i64 %38, 4294967295
  br label %235

234:                                              ; preds = %235, %225
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  br label %243

235:                                              ; preds = %235, %231
  %236 = phi i64 [ 0, %231 ], [ %241, %235 ]
  %237 = load i32*, i32** %232, align 8
  %238 = getelementptr inbounds i32, i32* %237, i64 %236
  %239 = load i32, i32* %238, align 4
  %240 = trunc i64 %236 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i64 0, i64 0), i32 %239, i32 %240) #10
  %241 = add nuw nsw i64 %236, 1
  %242 = icmp eq i64 %241, %233
  br i1 %242, label %234, label %235

243:                                              ; preds = %221, %234
  %244 = bitcast %"class.v8::internal::SnapshotData"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %244) #10
  %245 = getelementptr inbounds %"class.v8::internal::ReadOnlySerializer", %"class.v8::internal::ReadOnlySerializer"* %13, i64 0, i32 0, i32 0
  call void @_ZN2v88internal12SnapshotDataC1EPKNS0_10SerializerE(%"class.v8::internal::SnapshotData"* nonnull %18, %"class.v8::internal::Serializer"* nonnull %245) #10
  %246 = bitcast %"class.v8::internal::SnapshotData"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %246) #10
  %247 = getelementptr inbounds %"class.v8::internal::StartupSerializer", %"class.v8::internal::StartupSerializer"* %14, i64 0, i32 0, i32 0
  call void @_ZN2v88internal12SnapshotDataC1EPKNS0_10SerializerE(%"class.v8::internal::SnapshotData"* nonnull %19, %"class.v8::internal::Serializer"* nonnull %247) #10
  %248 = bitcast %"class.v8::internal::SnapshotData"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %248) #10
  call void @_ZN2v88internal19SnapshotCompression8CompressEPKNS0_12SnapshotDataE(%"class.v8::internal::SnapshotData"* nonnull sret %7, %"class.v8::internal::SnapshotData"* nonnull %19) #10
  %249 = bitcast %"class.v8::internal::SnapshotData"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %249) #10
  call void @_ZN2v88internal19SnapshotCompression8CompressEPKNS0_12SnapshotDataE(%"class.v8::internal::SnapshotData"* nonnull sret %8, %"class.v8::internal::SnapshotData"* nonnull %18) #10
  %250 = bitcast %"class.std::__1::vector.1283"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %250) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %250, i8 0, i64 24, i1 false) #10
  %251 = getelementptr inbounds %"class.std::__1::vector.1239", %"class.std::__1::vector.1239"* %15, i64 0, i32 0, i32 1
  %252 = bitcast %"class.v8::internal::SnapshotData"*** %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = load i64, i64* %45, align 16
  %255 = sub i64 %253, %254
  %256 = ashr exact i64 %255, 3
  %257 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %258 = bitcast %"class.v8::internal::SnapshotData"** %257 to i64*
  %259 = bitcast %"class.std::__1::vector.1283"* %9 to i64*
  %260 = icmp eq i64 %255, 0
  br i1 %260, label %273, label %261

261:                                              ; preds = %243
  %262 = icmp ugt i64 %256, 768614336404564650
  br i1 %262, label %263, label %264

263:                                              ; preds = %261
  call void @abort() #11
  unreachable

264:                                              ; preds = %261
  %265 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %9, i64 0, i32 0, i32 1
  %266 = bitcast %"class.v8::internal::SnapshotData"** %265 to i64*
  %267 = mul i64 %256, 24
  %268 = call i8* @_Znwm(i64 %267) #13
  %269 = bitcast i8* %268 to %"class.v8::internal::SnapshotData"*
  %270 = ptrtoint i8* %268 to i64
  %271 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %269, i64 %256
  %272 = ptrtoint %"class.v8::internal::SnapshotData"* %271 to i64
  store i64 %270, i64* %259, align 8
  store i64 %270, i64* %266, align 8
  store i64 %272, i64* %258, align 8
  br label %273

273:                                              ; preds = %264, %243
  %274 = bitcast %"class.std::__1::vector.1239"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %274) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %274, i8 0, i64 24, i1 false) #10
  %275 = icmp eq i64 %253, %254
  br i1 %275, label %296, label %276

276:                                              ; preds = %273
  %277 = bitcast %"class.v8::internal::SnapshotData"* %11 to i8*
  %278 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %9, i64 0, i32 0, i32 1
  %279 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %11, i64 0, i32 0, i32 1
  %280 = bitcast i8** %279 to i64*
  %281 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %11, i64 0, i32 0, i32 2
  %282 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %11, i64 0, i32 0, i32 3
  %283 = bitcast %"class.v8::internal::SnapshotData"** %278 to i64*
  %284 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %11, i64 0, i32 0, i32 0
  %285 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %9, i64 0, i32 0, i32 0
  %286 = getelementptr inbounds %"class.std::__1::vector.1239", %"class.std::__1::vector.1239"* %10, i64 0, i32 0, i32 1
  %287 = getelementptr inbounds %"class.std::__1::vector.1239", %"class.std::__1::vector.1239"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %288 = bitcast %"class.v8::internal::SnapshotData"*** %286 to i64*
  %289 = bitcast %"class.std::__1::vector.1239"* %10 to i64*
  %290 = bitcast %"class.v8::internal::SnapshotData"*** %287 to i64*
  br label %345

291:                                              ; preds = %430
  %292 = load i64, i64* %288, align 8
  %293 = load i64, i64* %289, align 8
  %294 = inttoptr i64 %293 to %"class.v8::internal::SnapshotData"**
  %295 = inttoptr i64 %292 to %"class.v8::internal::SnapshotData"**
  br label %296

296:                                              ; preds = %273, %291
  %297 = phi %"class.v8::internal::SnapshotData"** [ %295, %291 ], [ null, %273 ]
  %298 = phi %"class.v8::internal::SnapshotData"** [ %294, %291 ], [ null, %273 ]
  %299 = phi i64 [ %293, %291 ], [ 0, %273 ]
  %300 = phi i64 [ %292, %291 ], [ 0, %273 ]
  %301 = getelementptr inbounds %"class.std::__1::vector.1239", %"class.std::__1::vector.1239"* %10, i64 0, i32 0, i32 1
  %302 = bitcast %"class.v8::internal::SnapshotData"*** %301 to i64*
  %303 = sub i64 %300, %299
  %304 = lshr exact i64 %303, 3
  %305 = trunc i64 %304 to i32
  %306 = lshr exact i64 %303, 1
  %307 = trunc i64 %306 to i32
  %308 = add i32 %307, 87
  %309 = and i32 %308, -8
  %310 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %7, i64 0, i32 0, i32 1
  %311 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %7, i64 0, i32 0, i32 2
  %312 = load i32, i32* %311, align 8
  %313 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %8, i64 0, i32 0, i32 1
  %314 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %8, i64 0, i32 0, i32 2
  %315 = load i32, i32* %314, align 8
  %316 = add i32 %315, %312
  %317 = add i32 %316, %309
  %318 = getelementptr inbounds %"class.std::__1::vector.1239", %"class.std::__1::vector.1239"* %10, i64 0, i32 0, i32 0
  %319 = icmp eq %"class.v8::internal::SnapshotData"** %298, %297
  br i1 %319, label %438, label %320

320:                                              ; preds = %296
  %321 = ptrtoint %"class.v8::internal::SnapshotData"** %298 to i64
  %322 = getelementptr %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %297, i64 -1
  %323 = ptrtoint %"class.v8::internal::SnapshotData"** %322 to i64
  %324 = sub i64 %323, %321
  %325 = lshr i64 %324, 3
  %326 = add nuw nsw i64 %325, 1
  %327 = and i64 %326, 7
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %340, label %329

329:                                              ; preds = %320, %329
  %330 = phi i32 [ %336, %329 ], [ %317, %320 ]
  %331 = phi %"class.v8::internal::SnapshotData"** [ %337, %329 ], [ %298, %320 ]
  %332 = phi i64 [ %338, %329 ], [ %327, %320 ]
  %333 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %331, align 8
  %334 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %333, i64 0, i32 0, i32 2
  %335 = load i32, i32* %334, align 8
  %336 = add i32 %335, %330
  %337 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %331, i64 1
  %338 = add i64 %332, -1
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %329, !llvm.loop !5

340:                                              ; preds = %329, %320
  %341 = phi i32 [ undef, %320 ], [ %336, %329 ]
  %342 = phi i32 [ %317, %320 ], [ %336, %329 ]
  %343 = phi %"class.v8::internal::SnapshotData"** [ %298, %320 ], [ %337, %329 ]
  %344 = icmp ult i64 %324, 56
  br i1 %344, label %438, label %523

345:                                              ; preds = %430, %276
  %346 = phi i64 [ %254, %276 ], [ %434, %430 ]
  %347 = phi i64 [ 0, %276 ], [ %432, %430 ]
  %348 = phi i32 [ 0, %276 ], [ %431, %430 ]
  %349 = inttoptr i64 %346 to %"class.v8::internal::SnapshotData"**
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %277) #10
  %350 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %349, i64 %347
  %351 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %350, align 8
  call void @_ZN2v88internal19SnapshotCompression8CompressEPKNS0_12SnapshotDataE(%"class.v8::internal::SnapshotData"* nonnull sret %11, %"class.v8::internal::SnapshotData"* %351) #10
  %352 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %278, align 8
  %353 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %257, align 8
  %354 = icmp ult %"class.v8::internal::SnapshotData"* %352, %353
  br i1 %354, label %355, label %366

355:                                              ; preds = %345
  %356 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %352, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal14SerializedDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %356, align 8
  %357 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %352, i64 0, i32 0, i32 1
  %358 = load i64, i64* %280, align 8
  %359 = bitcast i8** %357 to i64*
  store i64 %358, i64* %359, align 8
  %360 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %352, i64 0, i32 0, i32 2
  %361 = load i32, i32* %281, align 8
  store i32 %361, i32* %360, align 8
  %362 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %352, i64 0, i32 0, i32 3
  %363 = load i8, i8* %282, align 4, !range !3
  store i8 %363, i8* %362, align 4
  store i8 0, i8* %282, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal12SnapshotDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %356, align 8
  %364 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %352, i64 1
  %365 = ptrtoint %"class.v8::internal::SnapshotData"* %364 to i64
  store i64 %365, i64* %283, align 8
  br label %367

366:                                              ; preds = %345
  call void @_ZNSt3__16vectorIN2v88internal12SnapshotDataENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.1283"* nonnull %9, %"class.v8::internal::SnapshotData"* nonnull dereferenceable(24) %11) #10
  br label %367

367:                                              ; preds = %366, %355
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal14SerializedDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %284, align 8
  %368 = load i8, i8* %282, align 4, !range !3
  %369 = icmp eq i8 %368, 0
  br i1 %369, label %374, label %370

370:                                              ; preds = %367
  %371 = load i8*, i8** %279, align 8
  %372 = icmp eq i8* %371, null
  br i1 %372, label %374, label %373

373:                                              ; preds = %370
  call void @_ZdaPv(i8* nonnull %371) #13
  br label %374

374:                                              ; preds = %373, %370, %367
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %277) #10
  %375 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %285, align 8
  %376 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %375, i64 %347
  %377 = ptrtoint %"class.v8::internal::SnapshotData"* %376 to i64
  %378 = load %"class.v8::internal::SnapshotData"**, %"class.v8::internal::SnapshotData"*** %286, align 8
  %379 = load %"class.v8::internal::SnapshotData"**, %"class.v8::internal::SnapshotData"*** %287, align 8
  %380 = icmp ult %"class.v8::internal::SnapshotData"** %378, %379
  %381 = ptrtoint %"class.v8::internal::SnapshotData"** %379 to i64
  br i1 %380, label %382, label %386

382:                                              ; preds = %374
  %383 = bitcast %"class.v8::internal::SnapshotData"** %378 to i64*
  store i64 %377, i64* %383, align 8
  %384 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %378, i64 1
  %385 = ptrtoint %"class.v8::internal::SnapshotData"** %384 to i64
  store i64 %385, i64* %288, align 8
  br label %430

386:                                              ; preds = %374
  %387 = ptrtoint %"class.v8::internal::SnapshotData"** %378 to i64
  %388 = load i64, i64* %289, align 8
  %389 = sub i64 %387, %388
  %390 = ashr exact i64 %389, 3
  %391 = add nsw i64 %390, 1
  %392 = icmp ugt i64 %391, 2305843009213693951
  br i1 %392, label %393, label %395

393:                                              ; preds = %386
  %394 = bitcast %"class.std::__1::vector.1239"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %394) #11
  unreachable

395:                                              ; preds = %386
  %396 = sub i64 %381, %388
  %397 = ashr exact i64 %396, 3
  %398 = icmp ult i64 %397, 1152921504606846975
  br i1 %398, label %399, label %407

399:                                              ; preds = %395
  %400 = ashr exact i64 %396, 2
  %401 = icmp ult i64 %400, %391
  %402 = select i1 %401, i64 %391, i64 %400
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %412, label %404

404:                                              ; preds = %399
  %405 = icmp ugt i64 %402, 2305843009213693951
  br i1 %405, label %406, label %407

406:                                              ; preds = %404
  call void @abort() #11
  unreachable

407:                                              ; preds = %404, %395
  %408 = phi i64 [ %402, %404 ], [ 2305843009213693951, %395 ]
  %409 = shl i64 %408, 3
  %410 = call i8* @_Znwm(i64 %409) #13
  %411 = bitcast i8* %410 to %"class.v8::internal::SnapshotData"**
  br label %412

412:                                              ; preds = %407, %399
  %413 = phi i64 [ %408, %407 ], [ 0, %399 ]
  %414 = phi i8* [ %410, %407 ], [ null, %399 ]
  %415 = phi %"class.v8::internal::SnapshotData"** [ %411, %407 ], [ null, %399 ]
  %416 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %415, i64 %390
  %417 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %415, i64 %413
  %418 = ptrtoint %"class.v8::internal::SnapshotData"** %417 to i64
  %419 = bitcast %"class.v8::internal::SnapshotData"** %416 to i64*
  store i64 %377, i64* %419, align 8
  %420 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %416, i64 1
  %421 = ptrtoint %"class.v8::internal::SnapshotData"** %420 to i64
  %422 = ptrtoint %"class.v8::internal::SnapshotData"** %415 to i64
  %423 = icmp sgt i64 %389, 0
  br i1 %423, label %424, label %426

424:                                              ; preds = %412
  %425 = inttoptr i64 %388 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %414, i8* align 8 %425, i64 %389, i1 false) #10
  br label %426

426:                                              ; preds = %424, %412
  store i64 %422, i64* %289, align 8
  store i64 %421, i64* %288, align 8
  store i64 %418, i64* %290, align 8
  %427 = icmp eq i64 %388, 0
  br i1 %427, label %430, label %428

428:                                              ; preds = %426
  %429 = inttoptr i64 %388 to i8*
  call void @_ZdlPv(i8* %429) #13
  br label %430

430:                                              ; preds = %428, %426, %382
  %431 = add i32 %348, 1
  %432 = zext i32 %431 to i64
  %433 = load i64, i64* %252, align 8
  %434 = load i64, i64* %45, align 16
  %435 = sub i64 %433, %434
  %436 = ashr exact i64 %435, 3
  %437 = icmp ugt i64 %436, %432
  br i1 %437, label %345, label %291

438:                                              ; preds = %340, %523, %296
  %439 = phi i32 [ %317, %296 ], [ %341, %340 ], [ %564, %523 ]
  %440 = zext i32 %439 to i64
  %441 = call i8* @_Znam(i64 %440) #13
  %442 = zext i32 %309 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %441, i8 0, i64 %442, i1 false) #10
  %443 = ptrtoint i8* %441 to i64
  %444 = bitcast i8* %441 to i32*
  store i32 %305, i32* %444, align 1
  %445 = zext i1 %222 to i32
  %446 = add i64 %443, 4
  %447 = inttoptr i64 %446 to i32*
  store i32 %445, i32* %447, align 1
  %448 = getelementptr inbounds i8, i8* %441, i64 12
  call void @llvm.memset.p0i8.i64(i8* align 1 %448, i8 0, i64 64, i1 false) #10
  call void @_ZN2v88internal7Version9GetStringENS0_6VectorIcEE(i8* %448, i64 64) #10
  %449 = load i8*, i8** %310, align 8
  %450 = load i32, i32* %311, align 8
  %451 = zext i32 %450 to i64
  %452 = getelementptr inbounds i8, i8* %441, i64 %442
  %453 = icmp eq i32 %450, 0
  br i1 %453, label %520, label %454

454:                                              ; preds = %438
  %455 = icmp ult i32 %450, 8
  br i1 %455, label %456, label %506

456:                                              ; preds = %454
  %457 = add nsw i64 %451, -1
  %458 = and i64 %451, 7
  %459 = icmp eq i64 %458, 0
  br i1 %459, label %471, label %460

460:                                              ; preds = %456, %460
  %461 = phi i8* [ %466, %460 ], [ %449, %456 ]
  %462 = phi i64 [ %465, %460 ], [ %451, %456 ]
  %463 = phi i8* [ %468, %460 ], [ %452, %456 ]
  %464 = phi i64 [ %469, %460 ], [ %458, %456 ]
  %465 = add nsw i64 %462, -1
  %466 = getelementptr inbounds i8, i8* %461, i64 1
  %467 = load i8, i8* %461, align 1
  %468 = getelementptr inbounds i8, i8* %463, i64 1
  store i8 %467, i8* %463, align 1
  %469 = add i64 %464, -1
  %470 = icmp eq i64 %469, 0
  br i1 %470, label %471, label %460, !llvm.loop !7

471:                                              ; preds = %460, %456
  %472 = phi i8* [ %449, %456 ], [ %466, %460 ]
  %473 = phi i64 [ %451, %456 ], [ %465, %460 ]
  %474 = phi i8* [ %452, %456 ], [ %468, %460 ]
  %475 = icmp ult i64 %457, 7
  br i1 %475, label %520, label %476

476:                                              ; preds = %471, %476
  %477 = phi i8* [ %502, %476 ], [ %472, %471 ]
  %478 = phi i64 [ %501, %476 ], [ %473, %471 ]
  %479 = phi i8* [ %504, %476 ], [ %474, %471 ]
  %480 = getelementptr inbounds i8, i8* %477, i64 1
  %481 = load i8, i8* %477, align 1
  %482 = getelementptr inbounds i8, i8* %479, i64 1
  store i8 %481, i8* %479, align 1
  %483 = getelementptr inbounds i8, i8* %477, i64 2
  %484 = load i8, i8* %480, align 1
  %485 = getelementptr inbounds i8, i8* %479, i64 2
  store i8 %484, i8* %482, align 1
  %486 = getelementptr inbounds i8, i8* %477, i64 3
  %487 = load i8, i8* %483, align 1
  %488 = getelementptr inbounds i8, i8* %479, i64 3
  store i8 %487, i8* %485, align 1
  %489 = getelementptr inbounds i8, i8* %477, i64 4
  %490 = load i8, i8* %486, align 1
  %491 = getelementptr inbounds i8, i8* %479, i64 4
  store i8 %490, i8* %488, align 1
  %492 = getelementptr inbounds i8, i8* %477, i64 5
  %493 = load i8, i8* %489, align 1
  %494 = getelementptr inbounds i8, i8* %479, i64 5
  store i8 %493, i8* %491, align 1
  %495 = getelementptr inbounds i8, i8* %477, i64 6
  %496 = load i8, i8* %492, align 1
  %497 = getelementptr inbounds i8, i8* %479, i64 6
  store i8 %496, i8* %494, align 1
  %498 = getelementptr inbounds i8, i8* %477, i64 7
  %499 = load i8, i8* %495, align 1
  %500 = getelementptr inbounds i8, i8* %479, i64 7
  store i8 %499, i8* %497, align 1
  %501 = add nsw i64 %478, -8
  %502 = getelementptr inbounds i8, i8* %477, i64 8
  %503 = load i8, i8* %498, align 1
  %504 = getelementptr inbounds i8, i8* %479, i64 8
  store i8 %503, i8* %500, align 1
  %505 = icmp eq i64 %501, 0
  br i1 %505, label %520, label %476, !llvm.loop !8

506:                                              ; preds = %454
  switch i32 %450, label %519 [
    i32 16, label %518
    i32 15, label %517
    i32 14, label %516
    i32 13, label %515
    i32 12, label %514
    i32 11, label %513
    i32 10, label %512
    i32 8, label %507
    i32 9, label %511
  ]

507:                                              ; preds = %506
  %508 = bitcast i8* %449 to i64*
  %509 = bitcast i8* %452 to i64*
  %510 = load i64, i64* %508, align 1
  store i64 %510, i64* %509, align 1
  br label %520

511:                                              ; preds = %506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %452, i8* align 1 %449, i64 9, i1 false) #10
  br label %520

512:                                              ; preds = %506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %452, i8* align 1 %449, i64 10, i1 false) #10
  br label %520

513:                                              ; preds = %506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %452, i8* align 1 %449, i64 11, i1 false) #10
  br label %520

514:                                              ; preds = %506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %452, i8* align 1 %449, i64 12, i1 false) #10
  br label %520

515:                                              ; preds = %506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %452, i8* align 1 %449, i64 13, i1 false) #10
  br label %520

516:                                              ; preds = %506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %452, i8* align 1 %449, i64 14, i1 false) #10
  br label %520

517:                                              ; preds = %506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %452, i8* align 1 %449, i64 15, i1 false) #10
  br label %520

518:                                              ; preds = %506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %452, i8* align 1 %449, i64 16, i1 false) #10
  br label %520

519:                                              ; preds = %506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %452, i8* align 1 %449, i64 %451, i1 false) #10
  br label %520

520:                                              ; preds = %471, %476, %519, %518, %517, %516, %515, %514, %513, %512, %511, %507, %438
  %521 = load i8, i8* @_ZN2v88internal29FLAG_serialization_statisticsE, align 1, !range !3
  %522 = icmp eq i8 %521, 0
  br i1 %522, label %568, label %567

523:                                              ; preds = %340, %523
  %524 = phi i32 [ %564, %523 ], [ %342, %340 ]
  %525 = phi %"class.v8::internal::SnapshotData"** [ %565, %523 ], [ %343, %340 ]
  %526 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %525, align 8
  %527 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %526, i64 0, i32 0, i32 2
  %528 = load i32, i32* %527, align 8
  %529 = add i32 %528, %524
  %530 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %525, i64 1
  %531 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %530, align 8
  %532 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %531, i64 0, i32 0, i32 2
  %533 = load i32, i32* %532, align 8
  %534 = add i32 %533, %529
  %535 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %525, i64 2
  %536 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %535, align 8
  %537 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %536, i64 0, i32 0, i32 2
  %538 = load i32, i32* %537, align 8
  %539 = add i32 %538, %534
  %540 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %525, i64 3
  %541 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %540, align 8
  %542 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %541, i64 0, i32 0, i32 2
  %543 = load i32, i32* %542, align 8
  %544 = add i32 %543, %539
  %545 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %525, i64 4
  %546 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %545, align 8
  %547 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %546, i64 0, i32 0, i32 2
  %548 = load i32, i32* %547, align 8
  %549 = add i32 %548, %544
  %550 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %525, i64 5
  %551 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %550, align 8
  %552 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %551, i64 0, i32 0, i32 2
  %553 = load i32, i32* %552, align 8
  %554 = add i32 %553, %549
  %555 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %525, i64 6
  %556 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %555, align 8
  %557 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %556, i64 0, i32 0, i32 2
  %558 = load i32, i32* %557, align 8
  %559 = add i32 %558, %554
  %560 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %525, i64 7
  %561 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %560, align 8
  %562 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %561, i64 0, i32 0, i32 2
  %563 = load i32, i32* %562, align 8
  %564 = add i32 %563, %559
  %565 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %525, i64 8
  %566 = icmp eq %"class.v8::internal::SnapshotData"** %565, %297
  br i1 %566, label %438, label %523

567:                                              ; preds = %520
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.19, i64 0, i64 0), i32 %450) #10
  br label %568

568:                                              ; preds = %567, %520
  %569 = add i32 %450, %309
  %570 = add i64 %443, 76
  %571 = inttoptr i64 %570 to i32*
  store i32 %569, i32* %571, align 1
  %572 = load i8*, i8** %313, align 8
  %573 = load i32, i32* %314, align 8
  %574 = zext i32 %573 to i64
  %575 = zext i32 %569 to i64
  %576 = getelementptr inbounds i8, i8* %441, i64 %575
  %577 = icmp eq i32 %573, 0
  br i1 %577, label %644, label %578

578:                                              ; preds = %568
  %579 = icmp ult i32 %573, 8
  br i1 %579, label %580, label %630

580:                                              ; preds = %578
  %581 = add nsw i64 %574, -1
  %582 = and i64 %574, 7
  %583 = icmp eq i64 %582, 0
  br i1 %583, label %595, label %584

584:                                              ; preds = %580, %584
  %585 = phi i8* [ %590, %584 ], [ %572, %580 ]
  %586 = phi i64 [ %589, %584 ], [ %574, %580 ]
  %587 = phi i8* [ %592, %584 ], [ %576, %580 ]
  %588 = phi i64 [ %593, %584 ], [ %582, %580 ]
  %589 = add nsw i64 %586, -1
  %590 = getelementptr inbounds i8, i8* %585, i64 1
  %591 = load i8, i8* %585, align 1
  %592 = getelementptr inbounds i8, i8* %587, i64 1
  store i8 %591, i8* %587, align 1
  %593 = add i64 %588, -1
  %594 = icmp eq i64 %593, 0
  br i1 %594, label %595, label %584, !llvm.loop !10

595:                                              ; preds = %584, %580
  %596 = phi i8* [ %572, %580 ], [ %590, %584 ]
  %597 = phi i64 [ %574, %580 ], [ %589, %584 ]
  %598 = phi i8* [ %576, %580 ], [ %592, %584 ]
  %599 = icmp ult i64 %581, 7
  br i1 %599, label %644, label %600

600:                                              ; preds = %595, %600
  %601 = phi i8* [ %626, %600 ], [ %596, %595 ]
  %602 = phi i64 [ %625, %600 ], [ %597, %595 ]
  %603 = phi i8* [ %628, %600 ], [ %598, %595 ]
  %604 = getelementptr inbounds i8, i8* %601, i64 1
  %605 = load i8, i8* %601, align 1
  %606 = getelementptr inbounds i8, i8* %603, i64 1
  store i8 %605, i8* %603, align 1
  %607 = getelementptr inbounds i8, i8* %601, i64 2
  %608 = load i8, i8* %604, align 1
  %609 = getelementptr inbounds i8, i8* %603, i64 2
  store i8 %608, i8* %606, align 1
  %610 = getelementptr inbounds i8, i8* %601, i64 3
  %611 = load i8, i8* %607, align 1
  %612 = getelementptr inbounds i8, i8* %603, i64 3
  store i8 %611, i8* %609, align 1
  %613 = getelementptr inbounds i8, i8* %601, i64 4
  %614 = load i8, i8* %610, align 1
  %615 = getelementptr inbounds i8, i8* %603, i64 4
  store i8 %614, i8* %612, align 1
  %616 = getelementptr inbounds i8, i8* %601, i64 5
  %617 = load i8, i8* %613, align 1
  %618 = getelementptr inbounds i8, i8* %603, i64 5
  store i8 %617, i8* %615, align 1
  %619 = getelementptr inbounds i8, i8* %601, i64 6
  %620 = load i8, i8* %616, align 1
  %621 = getelementptr inbounds i8, i8* %603, i64 6
  store i8 %620, i8* %618, align 1
  %622 = getelementptr inbounds i8, i8* %601, i64 7
  %623 = load i8, i8* %619, align 1
  %624 = getelementptr inbounds i8, i8* %603, i64 7
  store i8 %623, i8* %621, align 1
  %625 = add nsw i64 %602, -8
  %626 = getelementptr inbounds i8, i8* %601, i64 8
  %627 = load i8, i8* %622, align 1
  %628 = getelementptr inbounds i8, i8* %603, i64 8
  store i8 %627, i8* %624, align 1
  %629 = icmp eq i64 %625, 0
  br i1 %629, label %644, label %600, !llvm.loop !11

630:                                              ; preds = %578
  switch i32 %573, label %643 [
    i32 16, label %642
    i32 15, label %641
    i32 14, label %640
    i32 13, label %639
    i32 12, label %638
    i32 11, label %637
    i32 10, label %636
    i32 8, label %631
    i32 9, label %635
  ]

631:                                              ; preds = %630
  %632 = bitcast i8* %572 to i64*
  %633 = bitcast i8* %576 to i64*
  %634 = load i64, i64* %632, align 1
  store i64 %634, i64* %633, align 1
  br label %644

635:                                              ; preds = %630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %576, i8* align 1 %572, i64 9, i1 false) #10
  br label %644

636:                                              ; preds = %630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %576, i8* align 1 %572, i64 10, i1 false) #10
  br label %644

637:                                              ; preds = %630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %576, i8* align 1 %572, i64 11, i1 false) #10
  br label %644

638:                                              ; preds = %630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %576, i8* align 1 %572, i64 12, i1 false) #10
  br label %644

639:                                              ; preds = %630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %576, i8* align 1 %572, i64 13, i1 false) #10
  br label %644

640:                                              ; preds = %630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %576, i8* align 1 %572, i64 14, i1 false) #10
  br label %644

641:                                              ; preds = %630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %576, i8* align 1 %572, i64 15, i1 false) #10
  br label %644

642:                                              ; preds = %630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %576, i8* align 1 %572, i64 16, i1 false) #10
  br label %644

643:                                              ; preds = %630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %576, i8* align 1 %572, i64 %574, i1 false) #10
  br label %644

644:                                              ; preds = %595, %600, %643, %642, %641, %640, %639, %638, %637, %636, %635, %631, %568
  %645 = load i8, i8* @_ZN2v88internal29FLAG_serialization_statisticsE, align 1, !range !3
  %646 = icmp eq i8 %645, 0
  br i1 %646, label %648, label %647

647:                                              ; preds = %644
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.20, i64 0, i64 0), i32 %573) #10
  br label %648

648:                                              ; preds = %647, %644
  %649 = icmp eq i32 %305, 0
  br i1 %649, label %653, label %650

650:                                              ; preds = %648
  %651 = add i32 %573, %569
  %652 = and i64 %304, 4294967295
  br label %656

653:                                              ; preds = %747, %648
  %654 = load i8, i8* @_ZN2v88internal29FLAG_serialization_statisticsE, align 1, !range !3
  %655 = icmp eq i8 %654, 0
  br i1 %655, label %752, label %751

656:                                              ; preds = %747, %650
  %657 = phi i64 [ 0, %650 ], [ %749, %747 ]
  %658 = phi i32 [ %651, %650 ], [ %748, %747 ]
  %659 = trunc i64 %657 to i32
  %660 = shl i64 %657, 2
  %661 = add nuw nsw i64 %660, 80
  %662 = and i64 %661, 4294967292
  %663 = add i64 %662, %443
  %664 = inttoptr i64 %663 to i32*
  store i32 %658, i32* %664, align 1
  %665 = load %"class.v8::internal::SnapshotData"**, %"class.v8::internal::SnapshotData"*** %318, align 8
  %666 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %665, i64 %657
  %667 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %666, align 8
  %668 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %667, i64 0, i32 0, i32 1
  %669 = load i8*, i8** %668, align 8
  %670 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %667, i64 0, i32 0, i32 2
  %671 = load i32, i32* %670, align 8
  %672 = zext i32 %671 to i64
  %673 = zext i32 %658 to i64
  %674 = getelementptr inbounds i8, i8* %441, i64 %673
  %675 = icmp eq i32 %671, 0
  br i1 %675, label %743, label %676

676:                                              ; preds = %656
  %677 = icmp ult i32 %671, 8
  br i1 %677, label %678, label %729

678:                                              ; preds = %676
  %679 = zext i32 %671 to i64
  %680 = add nsw i64 %679, -1
  %681 = and i64 %679, 7
  %682 = icmp eq i64 %681, 0
  br i1 %682, label %694, label %683

683:                                              ; preds = %678, %683
  %684 = phi i8* [ %689, %683 ], [ %669, %678 ]
  %685 = phi i64 [ %688, %683 ], [ %672, %678 ]
  %686 = phi i8* [ %691, %683 ], [ %674, %678 ]
  %687 = phi i64 [ %692, %683 ], [ %681, %678 ]
  %688 = add nsw i64 %685, -1
  %689 = getelementptr inbounds i8, i8* %684, i64 1
  %690 = load i8, i8* %684, align 1
  %691 = getelementptr inbounds i8, i8* %686, i64 1
  store i8 %690, i8* %686, align 1
  %692 = add i64 %687, -1
  %693 = icmp eq i64 %692, 0
  br i1 %693, label %694, label %683, !llvm.loop !12

694:                                              ; preds = %683, %678
  %695 = phi i8* [ %669, %678 ], [ %689, %683 ]
  %696 = phi i64 [ %672, %678 ], [ %688, %683 ]
  %697 = phi i8* [ %674, %678 ], [ %691, %683 ]
  %698 = icmp ult i64 %680, 7
  br i1 %698, label %743, label %699

699:                                              ; preds = %694, %699
  %700 = phi i8* [ %725, %699 ], [ %695, %694 ]
  %701 = phi i64 [ %724, %699 ], [ %696, %694 ]
  %702 = phi i8* [ %727, %699 ], [ %697, %694 ]
  %703 = getelementptr inbounds i8, i8* %700, i64 1
  %704 = load i8, i8* %700, align 1
  %705 = getelementptr inbounds i8, i8* %702, i64 1
  store i8 %704, i8* %702, align 1
  %706 = getelementptr inbounds i8, i8* %700, i64 2
  %707 = load i8, i8* %703, align 1
  %708 = getelementptr inbounds i8, i8* %702, i64 2
  store i8 %707, i8* %705, align 1
  %709 = getelementptr inbounds i8, i8* %700, i64 3
  %710 = load i8, i8* %706, align 1
  %711 = getelementptr inbounds i8, i8* %702, i64 3
  store i8 %710, i8* %708, align 1
  %712 = getelementptr inbounds i8, i8* %700, i64 4
  %713 = load i8, i8* %709, align 1
  %714 = getelementptr inbounds i8, i8* %702, i64 4
  store i8 %713, i8* %711, align 1
  %715 = getelementptr inbounds i8, i8* %700, i64 5
  %716 = load i8, i8* %712, align 1
  %717 = getelementptr inbounds i8, i8* %702, i64 5
  store i8 %716, i8* %714, align 1
  %718 = getelementptr inbounds i8, i8* %700, i64 6
  %719 = load i8, i8* %715, align 1
  %720 = getelementptr inbounds i8, i8* %702, i64 6
  store i8 %719, i8* %717, align 1
  %721 = getelementptr inbounds i8, i8* %700, i64 7
  %722 = load i8, i8* %718, align 1
  %723 = getelementptr inbounds i8, i8* %702, i64 7
  store i8 %722, i8* %720, align 1
  %724 = add nsw i64 %701, -8
  %725 = getelementptr inbounds i8, i8* %700, i64 8
  %726 = load i8, i8* %721, align 1
  %727 = getelementptr inbounds i8, i8* %702, i64 8
  store i8 %726, i8* %723, align 1
  %728 = icmp eq i64 %724, 0
  br i1 %728, label %743, label %699, !llvm.loop !13

729:                                              ; preds = %676
  switch i32 %671, label %742 [
    i32 16, label %741
    i32 15, label %740
    i32 14, label %739
    i32 13, label %738
    i32 12, label %737
    i32 11, label %736
    i32 10, label %735
    i32 8, label %730
    i32 9, label %734
  ]

730:                                              ; preds = %729
  %731 = bitcast i8* %669 to i64*
  %732 = bitcast i8* %674 to i64*
  %733 = load i64, i64* %731, align 1
  store i64 %733, i64* %732, align 1
  br label %743

734:                                              ; preds = %729
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %674, i8* align 1 %669, i64 9, i1 false) #10
  br label %743

735:                                              ; preds = %729
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %674, i8* align 1 %669, i64 10, i1 false) #10
  br label %743

736:                                              ; preds = %729
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %674, i8* align 1 %669, i64 11, i1 false) #10
  br label %743

737:                                              ; preds = %729
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %674, i8* align 1 %669, i64 12, i1 false) #10
  br label %743

738:                                              ; preds = %729
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %674, i8* align 1 %669, i64 13, i1 false) #10
  br label %743

739:                                              ; preds = %729
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %674, i8* align 1 %669, i64 14, i1 false) #10
  br label %743

740:                                              ; preds = %729
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %674, i8* align 1 %669, i64 15, i1 false) #10
  br label %743

741:                                              ; preds = %729
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %674, i8* align 1 %669, i64 16, i1 false) #10
  br label %743

742:                                              ; preds = %729
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %674, i8* align 1 %669, i64 %672, i1 false) #10
  br label %743

743:                                              ; preds = %694, %699, %742, %741, %740, %739, %738, %737, %736, %735, %734, %730, %656
  %744 = load i8, i8* @_ZN2v88internal29FLAG_serialization_statisticsE, align 1, !range !3
  %745 = icmp eq i8 %744, 0
  br i1 %745, label %747, label %746

746:                                              ; preds = %743
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i64 0, i64 0), i32 %671, i32 %659) #10
  br label %747

747:                                              ; preds = %746, %743
  %748 = add i32 %671, %658
  %749 = add nuw nsw i64 %657, 1
  %750 = icmp eq i64 %749, %652
  br i1 %750, label %653, label %656

751:                                              ; preds = %653
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  br label %752

752:                                              ; preds = %751, %653
  %753 = add i32 %439, -12
  %754 = zext i32 %753 to i64
  %755 = call i32 @_ZN2v88internal8ChecksumENS0_6VectorIKhEE(i8* %448, i64 %754) #10
  %756 = add i64 %443, 8
  %757 = inttoptr i64 %756 to i32*
  store i32 %755, i32* %757, align 1
  %758 = load %"class.v8::internal::SnapshotData"**, %"class.v8::internal::SnapshotData"*** %318, align 8
  %759 = icmp eq %"class.v8::internal::SnapshotData"** %758, null
  br i1 %759, label %763, label %760

760:                                              ; preds = %752
  %761 = ptrtoint %"class.v8::internal::SnapshotData"** %758 to i64
  store i64 %761, i64* %302, align 8
  %762 = bitcast %"class.v8::internal::SnapshotData"** %758 to i8*
  call void @_ZdlPv(i8* %762) #13
  br label %763

763:                                              ; preds = %760, %752
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %274) #10
  %764 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %9, i64 0, i32 0, i32 0
  %765 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %764, align 8
  %766 = icmp eq %"class.v8::internal::SnapshotData"* %765, null
  br i1 %766, label %784, label %767

767:                                              ; preds = %763
  %768 = bitcast %"class.v8::internal::SnapshotData"* %765 to i8*
  %769 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %9, i64 0, i32 0, i32 1
  %770 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %769, align 8
  %771 = icmp eq %"class.v8::internal::SnapshotData"* %770, %765
  br i1 %771, label %782, label %772

772:                                              ; preds = %767, %772
  %773 = phi %"class.v8::internal::SnapshotData"* [ %774, %772 ], [ %770, %767 ]
  %774 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %773, i64 -1
  %775 = bitcast %"class.v8::internal::SnapshotData"* %774 to void (%"class.v8::internal::SnapshotData"*)***
  %776 = load void (%"class.v8::internal::SnapshotData"*)**, void (%"class.v8::internal::SnapshotData"*)*** %775, align 8
  %777 = load void (%"class.v8::internal::SnapshotData"*)*, void (%"class.v8::internal::SnapshotData"*)** %776, align 8
  call void %777(%"class.v8::internal::SnapshotData"* %774) #10
  %778 = icmp eq %"class.v8::internal::SnapshotData"* %774, %765
  br i1 %778, label %779, label %772

779:                                              ; preds = %772
  %780 = bitcast %"class.std::__1::vector.1283"* %9 to i8**
  %781 = load i8*, i8** %780, align 8
  br label %782

782:                                              ; preds = %779, %767
  %783 = phi i8* [ %781, %779 ], [ %768, %767 ]
  store %"class.v8::internal::SnapshotData"* %765, %"class.v8::internal::SnapshotData"** %769, align 8
  call void @_ZdlPv(i8* %783) #13
  br label %784

784:                                              ; preds = %782, %763
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %250) #10
  %785 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal14SerializedDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %785, align 8
  %786 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %8, i64 0, i32 0, i32 3
  %787 = load i8, i8* %786, align 4, !range !3
  %788 = icmp eq i8 %787, 0
  br i1 %788, label %793, label %789

789:                                              ; preds = %784
  %790 = load i8*, i8** %313, align 8
  %791 = icmp eq i8* %790, null
  br i1 %791, label %793, label %792

792:                                              ; preds = %789
  call void @_ZdaPv(i8* nonnull %790) #13
  br label %793

793:                                              ; preds = %792, %789, %784
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %249) #10
  %794 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %7, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal14SerializedDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %794, align 8
  %795 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %7, i64 0, i32 0, i32 3
  %796 = load i8, i8* %795, align 4, !range !3
  %797 = icmp eq i8 %796, 0
  br i1 %797, label %802, label %798

798:                                              ; preds = %793
  %799 = load i8*, i8** %310, align 8
  %800 = icmp eq i8* %799, null
  br i1 %800, label %802, label %801

801:                                              ; preds = %798
  call void @_ZdaPv(i8* nonnull %799) #13
  br label %802

802:                                              ; preds = %793, %798, %801
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %248) #10
  %803 = insertvalue { i8*, i32 } undef, i8* %441, 0
  %804 = insertvalue { i8*, i32 } %803, i32 %439, 1
  %805 = getelementptr inbounds %"class.std::__1::vector.1239", %"class.std::__1::vector.1239"* %15, i64 0, i32 0, i32 0
  %806 = load %"class.v8::internal::SnapshotData"**, %"class.v8::internal::SnapshotData"*** %805, align 16
  %807 = load %"class.v8::internal::SnapshotData"**, %"class.v8::internal::SnapshotData"*** %251, align 8
  %808 = icmp eq %"class.v8::internal::SnapshotData"** %806, %807
  br i1 %808, label %809, label %828

809:                                              ; preds = %837, %802
  %810 = load i8, i8* @_ZN2v88internal28FLAG_profile_deserializationE, align 1, !range !3
  %811 = icmp eq i8 %810, 0
  br i1 %811, label %814, label %812

812:                                              ; preds = %809
  %813 = call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #10
  br label %814

814:                                              ; preds = %812, %809
  %815 = phi i64 [ 0, %809 ], [ %813, %812 ]
  %816 = load i32, i32* %757, align 1
  %817 = call i32 @_ZN2v88internal8ChecksumENS0_6VectorIKhEE(i8* %448, i64 %754) #10
  %818 = load i8, i8* @_ZN2v88internal28FLAG_profile_deserializationE, align 1, !range !3
  %819 = icmp eq i8 %818, 0
  br i1 %819, label %826, label %820

820:                                              ; preds = %814
  %821 = bitcast %"class.v8::base::TimeDelta"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %821) #10
  %822 = call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #10
  %823 = sub nsw i64 %822, %815
  %824 = getelementptr inbounds %"class.v8::base::TimeDelta", %"class.v8::base::TimeDelta"* %6, i64 0, i32 0
  store i64 %823, i64* %824, align 8
  %825 = call double @_ZNK2v84base9TimeDelta15InMillisecondsFEv(%"class.v8::base::TimeDelta"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %821) #10
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.12, i64 0, i64 0), double %825) #10
  br label %826

826:                                              ; preds = %814, %820
  %827 = icmp eq i32 %817, %816
  br i1 %827, label %841, label %840, !prof !2

828:                                              ; preds = %802, %837
  %829 = phi %"class.v8::internal::SnapshotData"** [ %838, %837 ], [ %806, %802 ]
  %830 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %829, align 8
  %831 = icmp eq %"class.v8::internal::SnapshotData"* %830, null
  br i1 %831, label %837, label %832

832:                                              ; preds = %828
  %833 = bitcast %"class.v8::internal::SnapshotData"* %830 to void (%"class.v8::internal::SnapshotData"*)***
  %834 = load void (%"class.v8::internal::SnapshotData"*)**, void (%"class.v8::internal::SnapshotData"*)*** %833, align 8
  %835 = getelementptr inbounds void (%"class.v8::internal::SnapshotData"*)*, void (%"class.v8::internal::SnapshotData"*)** %834, i64 1
  %836 = load void (%"class.v8::internal::SnapshotData"*)*, void (%"class.v8::internal::SnapshotData"*)** %835, align 8
  call void %836(%"class.v8::internal::SnapshotData"* nonnull %830) #10
  br label %837

837:                                              ; preds = %832, %828
  %838 = getelementptr inbounds %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %829, i64 1
  %839 = icmp eq %"class.v8::internal::SnapshotData"** %838, %807
  br i1 %839, label %809, label %828

840:                                              ; preds = %826
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0)) #11
  unreachable

841:                                              ; preds = %826
  %842 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %19, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal14SerializedDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %842, align 8
  %843 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %19, i64 0, i32 0, i32 3
  %844 = load i8, i8* %843, align 4, !range !3
  %845 = icmp eq i8 %844, 0
  br i1 %845, label %851, label %846

846:                                              ; preds = %841
  %847 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %19, i64 0, i32 0, i32 1
  %848 = load i8*, i8** %847, align 8
  %849 = icmp eq i8* %848, null
  br i1 %849, label %851, label %850

850:                                              ; preds = %846
  call void @_ZdaPv(i8* nonnull %848) #13
  br label %851

851:                                              ; preds = %841, %846, %850
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %246) #10
  %852 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %18, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal14SerializedDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %852, align 8
  %853 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %18, i64 0, i32 0, i32 3
  %854 = load i8, i8* %853, align 4, !range !3
  %855 = icmp eq i8 %854, 0
  br i1 %855, label %861, label %856

856:                                              ; preds = %851
  %857 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %18, i64 0, i32 0, i32 1
  %858 = load i8*, i8** %857, align 8
  %859 = icmp eq i8* %858, null
  br i1 %859, label %861, label %860

860:                                              ; preds = %856
  call void @_ZdaPv(i8* nonnull %858) #13
  br label %861

861:                                              ; preds = %851, %856, %860
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %244) #10
  %862 = getelementptr inbounds %"class.std::__1::vector.818", %"class.std::__1::vector.818"* %16, i64 0, i32 0, i32 0
  %863 = load i32*, i32** %862, align 8
  %864 = icmp eq i32* %863, null
  br i1 %864, label %870, label %865

865:                                              ; preds = %861
  %866 = ptrtoint i32* %863 to i64
  %867 = getelementptr inbounds %"class.std::__1::vector.818", %"class.std::__1::vector.818"* %16, i64 0, i32 0, i32 1
  %868 = bitcast i32** %867 to i64*
  store i64 %866, i64* %868, align 8
  %869 = bitcast i32* %863 to i8*
  call void @_ZdlPv(i8* %869) #13
  br label %870

870:                                              ; preds = %861, %865
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #10
  %871 = load %"class.v8::internal::SnapshotData"**, %"class.v8::internal::SnapshotData"*** %805, align 16
  %872 = icmp eq %"class.v8::internal::SnapshotData"** %871, null
  br i1 %872, label %876, label %873

873:                                              ; preds = %870
  %874 = ptrtoint %"class.v8::internal::SnapshotData"** %871 to i64
  store i64 %874, i64* %252, align 8
  %875 = bitcast %"class.v8::internal::SnapshotData"** %871 to i8*
  call void @_ZdlPv(i8* %875) #13
  br label %876

876:                                              ; preds = %870, %873
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #10
  call void @_ZN2v88internal17StartupSerializerD1Ev(%"class.v8::internal::StartupSerializer"* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 720, i8* nonnull %31) #10
  call void @_ZN2v88internal18ReadOnlySerializerD1Ev(%"class.v8::internal::ReadOnlySerializer"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 648, i8* nonnull %30) #10
  call void @_ZN2v88internal14SafepointScopeD1Ev(%"class.v8::internal::SafepointScope"* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  %877 = icmp eq %"class.v8::internal::Isolate"* %0, null
  br i1 %877, label %891, label %878

878:                                              ; preds = %876
  %879 = inttoptr i64 %22 to i64*
  %880 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %20, i64 0, i32 0
  %881 = load i64*, i64** %880, align 8
  store i64 %22, i64* %21, align 8
  %882 = load i32, i32* %25, align 8
  %883 = add nsw i32 %882, -1
  store i32 %883, i32* %25, align 8
  %884 = load i64*, i64** %23, align 8
  %885 = icmp eq i64* %884, %24
  br i1 %885, label %888, label %886

886:                                              ; preds = %878
  store i64* %24, i64** %23, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #10
  %887 = load i64*, i64** %880, align 8
  br label %888

888:                                              ; preds = %886, %878
  %889 = phi i64* [ %887, %886 ], [ %879, %878 ]
  %890 = phi i64* [ %24, %886 ], [ %881, %878 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %889, i64* %890) #10
  br label %891

891:                                              ; preds = %876, %888
  ret { i8*, i32 } %804
}

declare void @_ZN2v88internal14SafepointScopeC1EPNS0_4HeapE(%"class.v8::internal::SafepointScope"*, %"class.v8::internal::Heap"*) unnamed_addr #1

declare void @_ZN2v88internal18ReadOnlySerializerC1EPNS0_7IsolateENS_4base5FlagsINS0_8Snapshot14SerializerFlagEiEE(%"class.v8::internal::ReadOnlySerializer"*, %"class.v8::internal::Isolate"*, i32) unnamed_addr #1

declare void @_ZN2v88internal18ReadOnlySerializer22SerializeReadOnlyRootsEv(%"class.v8::internal::ReadOnlySerializer"*) local_unnamed_addr #1

declare void @_ZN2v88internal17StartupSerializerC1EPNS0_7IsolateENS_4base5FlagsINS0_8Snapshot14SerializerFlagEiEEPNS0_18ReadOnlySerializerE(%"class.v8::internal::StartupSerializer"*, %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::ReadOnlySerializer"*) unnamed_addr #1

declare void @_ZN2v88internal17StartupSerializer25SerializeStrongReferencesERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::StartupSerializer"*, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1)) local_unnamed_addr #1

declare void @_ZN2v88internal17ContextSerializerC1EPNS0_7IsolateENS_4base5FlagsINS0_8Snapshot14SerializerFlagEiEEPNS0_17StartupSerializerENS_31SerializeInternalFieldsCallbackE(%"class.v8::internal::ContextSerializer"*, %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::StartupSerializer"*, { i8*, i32 } (%"class.v8::Object"*, i32, i8*)*, i8*) unnamed_addr #1

declare void @_ZN2v88internal17ContextSerializer9SerializeEPNS0_7ContextERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS5_ILS6_1ELb0EEEEEE(%"class.v8::internal::ContextSerializer"*, %"class.v8::internal::Context"*, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1)) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN2v88internal12SnapshotDataC1EPKNS0_10SerializerE(%"class.v8::internal::SnapshotData"*, %"class.v8::internal::Serializer"*) unnamed_addr #1

declare i32 @_ZNK2v88internal10Serializer19TotalAllocationSizeEv(%"class.v8::internal::Serializer"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88internal17ContextSerializerD1Ev(%"class.v8::internal::ContextSerializer"*) unnamed_addr #5

declare void @_ZN2v88internal17StartupSerializer34SerializeWeakReferencesAndDeferredEv(%"class.v8::internal::StartupSerializer"*) local_unnamed_addr #1

declare void @_ZN2v88internal17StartupSerializer34CheckNoDirtyFinalizationRegistriesEv(%"class.v8::internal::StartupSerializer"*) local_unnamed_addr #1

declare void @_ZN2v88internal18ReadOnlySerializer21FinalizeSerializationEv(%"class.v8::internal::ReadOnlySerializer"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88internal17StartupSerializerD1Ev(%"class.v8::internal::StartupSerializer"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2v88internal18ReadOnlySerializerD1Ev(%"class.v8::internal::ReadOnlySerializer"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2v88internal14SafepointScopeD1Ev(%"class.v8::internal::SafepointScope"*) unnamed_addr #5

declare i32 @_ZN2v88internal8ChecksumENS0_6VectorIKhEE(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i32 } @_ZN2v88internal30CreateSnapshotDataBlobInternalENS_15SnapshotCreator20FunctionCodeHandlingEPKcPNS_7IsolateE(i32, i8*, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::SnapshotCreator", align 8
  %5 = alloca %"class.v8::HandleScope", align 8
  %6 = icmp eq %"class.v8::Isolate"* %2, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate8AllocateEv() #10
  br label %9

9:                                                ; preds = %7, %3
  %10 = phi %"class.v8::Isolate"* [ %8, %7 ], [ %2, %3 ]
  %11 = bitcast %"class.v8::SnapshotCreator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  call void @_ZN2v815SnapshotCreatorC1EPNS_7IsolateEPKlPNS_11StartupDataE(%"class.v8::SnapshotCreator"* nonnull %4, %"class.v8::Isolate"* %10, i64* null, %"class.v8::StartupData"* null) #10
  %12 = bitcast %"class.v8::HandleScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %5, %"class.v8::Isolate"* %10) #10
  %13 = call %"class.v8::Context"* @_ZN2v87Context3NewEPNS_7IsolateEPNS_22ExtensionConfigurationENS_10MaybeLocalINS_14ObjectTemplateEEENS5_INS_5ValueEEENS_33DeserializeInternalFieldsCallbackEPNS_14MicrotaskQueueE(%"class.v8::Isolate"* %10, %"class.v8::ExtensionConfiguration"* null, %"class.v8::ObjectTemplate"* null, %"class.v8::Value"* null, void (%"class.v8::Object"*, i32, i8*, i32, i8*)* null, i8* null, %"class.v8::MicrotaskQueue"* null) #10
  %14 = icmp eq i8* %1, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_112RunExtraCodeEPNS_7IsolateENS_5LocalINS_7ContextEEEPKcS8_(%"class.v8::Isolate"* %10, %"class.v8::Context"* %13, i8* nonnull %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0))
  br i1 %16, label %17, label %21

17:                                               ; preds = %9, %15
  call void @_ZN2v815SnapshotCreator17SetDefaultContextENS_5LocalINS_7ContextEEENS_31SerializeInternalFieldsCallbackE(%"class.v8::SnapshotCreator"* nonnull %4, %"class.v8::Context"* %13, { i8*, i32 } (%"class.v8::Object"*, i32, i8*)* null, i8* null) #10
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  %18 = call { i8*, i32 } @_ZN2v815SnapshotCreator10CreateBlobENS0_20FunctionCodeHandlingE(%"class.v8::SnapshotCreator"* nonnull %4, i32 %0) #10
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  br label %22

21:                                               ; preds = %15
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  br label %22

22:                                               ; preds = %21, %17
  %23 = phi i8* [ %19, %17 ], [ null, %21 ]
  %24 = phi i32 [ %20, %17 ], [ 0, %21 ]
  call void @_ZN2v815SnapshotCreatorD1Ev(%"class.v8::SnapshotCreator"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  %25 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  ret { i8*, i32 } %26
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate8AllocateEv() local_unnamed_addr #1

declare void @_ZN2v815SnapshotCreatorC1EPNS_7IsolateEPKlPNS_11StartupDataE(%"class.v8::SnapshotCreator"*, %"class.v8::Isolate"*, i64*, %"class.v8::StartupData"*) unnamed_addr #1

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Context3NewEPNS_7IsolateEPNS_22ExtensionConfigurationENS_10MaybeLocalINS_14ObjectTemplateEEENS5_INS_5ValueEEENS_33DeserializeInternalFieldsCallbackEPNS_14MicrotaskQueueE(%"class.v8::Isolate"*, %"class.v8::ExtensionConfiguration"*, %"class.v8::ObjectTemplate"*, %"class.v8::Value"*, void (%"class.v8::Object"*, i32, i8*, i32, i8*)*, i8*, %"class.v8::MicrotaskQueue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_112RunExtraCodeEPNS_7IsolateENS_5LocalINS_7ContextEEEPKcS8_(%"class.v8::Isolate"*, %"class.v8::Context"*, i8*, i8*) unnamed_addr #0 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.v8::ScriptCompiler::Source", align 8
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %1) #10
  %7 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #10
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #10
  %8 = call %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* %2, i32 0, i32 -1) #10
  %9 = icmp eq %"class.v8::String"* %8, null
  br i1 %9, label %41, label %10

10:                                               ; preds = %4
  %11 = call %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* %3, i32 0, i32 -1) #10
  %12 = icmp eq %"class.v8::String"* %11, null
  br i1 %12, label %13, label %14, !prof !4

13:                                               ; preds = %10
  call void @_ZN2v82V812ToLocalEmptyEv() #10
  br label %14

14:                                               ; preds = %10, %13
  %15 = ptrtoint %"class.v8::String"* %11 to i64
  %16 = bitcast %"class.v8::ScriptCompiler::Source"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.v8::ScriptCompiler::Source", %"class.v8::ScriptCompiler::Source"* %6, i64 0, i32 0, i32 0
  store %"class.v8::String"* %8, %"class.v8::String"** %17, align 8
  %18 = getelementptr inbounds %"class.v8::ScriptCompiler::Source", %"class.v8::ScriptCompiler::Source"* %6, i64 0, i32 1, i32 0
  %19 = bitcast %"class.v8::Value"** %18 to i64*
  store i64 %15, i64* %19, align 8
  %20 = getelementptr inbounds %"class.v8::ScriptCompiler::Source", %"class.v8::ScriptCompiler::Source"* %6, i64 0, i32 2
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.v8::ScriptCompiler::Source", %"class.v8::ScriptCompiler::Source"* %6, i64 0, i32 3
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.v8::ScriptCompiler::Source", %"class.v8::ScriptCompiler::Source"* %6, i64 0, i32 4, i32 0
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.v8::ScriptCompiler::Source", %"class.v8::ScriptCompiler::Source"* %6, i64 0, i32 5, i32 0
  %24 = getelementptr inbounds %"class.v8::ScriptCompiler::Source", %"class.v8::ScriptCompiler::Source"* %6, i64 0, i32 7
  %25 = bitcast %"class.v8::Value"** %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false)
  %26 = call %"class.v8::Script"* @_ZN2v814ScriptCompiler7CompileENS_5LocalINS_7ContextEEEPNS0_6SourceENS0_14CompileOptionsENS0_13NoCacheReasonE(%"class.v8::Context"* %1, %"class.v8::ScriptCompiler::Source"* nonnull %6, i32 0, i32 0) #10
  %27 = icmp eq %"class.v8::Script"* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %14
  %29 = call %"class.v8::Value"* @_ZN2v86Script3RunENS_5LocalINS_7ContextEEE(%"class.v8::Script"* nonnull %26, %"class.v8::Context"* %1) #10
  %30 = icmp eq %"class.v8::Value"* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* nonnull %5) #10
  br i1 %32, label %33, label %34, !prof !4

33:                                               ; preds = %31
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i64 0, i64 0)) #11
  unreachable

34:                                               ; preds = %14, %31, %28
  %35 = phi i1 [ false, %14 ], [ false, %28 ], [ true, %31 ]
  %36 = load %"struct.v8::ScriptCompiler::CachedData"*, %"struct.v8::ScriptCompiler::CachedData"** %24, align 8
  %37 = icmp eq %"struct.v8::ScriptCompiler::CachedData"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  call void @_ZN2v814ScriptCompiler10CachedDataD1Ev(%"struct.v8::ScriptCompiler::CachedData"* nonnull %36) #10
  %39 = bitcast %"struct.v8::ScriptCompiler::CachedData"* %36 to i8*
  call void @_ZdlPv(i8* %39) #13
  br label %40

40:                                               ; preds = %34, %38
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %16) #10
  br label %41

41:                                               ; preds = %4, %40
  %42 = phi i1 [ %35, %40 ], [ false, %4 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #10
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %1) #10
  ret i1 %42
}

declare void @_ZN2v815SnapshotCreator17SetDefaultContextENS_5LocalINS_7ContextEEENS_31SerializeInternalFieldsCallbackE(%"class.v8::SnapshotCreator"*, %"class.v8::Context"*, { i8*, i32 } (%"class.v8::Object"*, i32, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #5

declare { i8*, i32 } @_ZN2v815SnapshotCreator10CreateBlobENS0_20FunctionCodeHandlingE(%"class.v8::SnapshotCreator"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v815SnapshotCreatorD1Ev(%"class.v8::SnapshotCreator"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i32 } @_ZN2v88internal30WarmUpSnapshotDataBlobInternalENS_11StartupDataEPKc(i8*, i32, i8*) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::StartupData", align 8
  %5 = alloca %"class.v8::SnapshotCreator", align 8
  %6 = alloca %"class.v8::HandleScope", align 8
  %7 = alloca %"class.v8::HandleScope", align 8
  %8 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %4, i64 0, i32 0
  store i8* %0, i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %4, i64 0, i32 1
  store i32 %1, i32* %9, align 8
  %10 = icmp slt i32 %1, 1
  %11 = icmp eq i8* %0, null
  %12 = or i1 %11, %10
  br i1 %12, label %13, label %14, !prof !4

13:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0)) #11
  unreachable

14:                                               ; preds = %3
  %15 = icmp eq i8* %2, null
  br i1 %15, label %16, label %17, !prof !4

16:                                               ; preds = %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0)) #11
  unreachable

17:                                               ; preds = %14
  %18 = bitcast %"class.v8::SnapshotCreator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  call void @_ZN2v815SnapshotCreatorC1EPKlPNS_11StartupDataE(%"class.v8::SnapshotCreator"* nonnull %5, i64* null, %"class.v8::StartupData"* nonnull %4) #10
  %19 = call %"class.v8::Isolate"* @_ZN2v815SnapshotCreator10GetIsolateEv(%"class.v8::SnapshotCreator"* nonnull %5) #10
  %20 = bitcast %"class.v8::HandleScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %6, %"class.v8::Isolate"* %19) #10
  %21 = call %"class.v8::Context"* @_ZN2v87Context3NewEPNS_7IsolateEPNS_22ExtensionConfigurationENS_10MaybeLocalINS_14ObjectTemplateEEENS5_INS_5ValueEEENS_33DeserializeInternalFieldsCallbackEPNS_14MicrotaskQueueE(%"class.v8::Isolate"* %19, %"class.v8::ExtensionConfiguration"* null, %"class.v8::ObjectTemplate"* null, %"class.v8::Value"* null, void (%"class.v8::Object"*, i32, i8*, i32, i8*)* null, i8* null, %"class.v8::MicrotaskQueue"* null) #10
  %22 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_112RunExtraCodeEPNS_7IsolateENS_5LocalINS_7ContextEEEPKcS8_(%"class.v8::Isolate"* %19, %"class.v8::Context"* %21, i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0))
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  br i1 %22, label %23, label %30

23:                                               ; preds = %17
  %24 = bitcast %"class.v8::HandleScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #10
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %7, %"class.v8::Isolate"* %19) #10
  %25 = call i32 @_ZN2v87Isolate27ContextDisposedNotificationEb(%"class.v8::Isolate"* %19, i1 zeroext false) #10
  %26 = call %"class.v8::Context"* @_ZN2v87Context3NewEPNS_7IsolateEPNS_22ExtensionConfigurationENS_10MaybeLocalINS_14ObjectTemplateEEENS5_INS_5ValueEEENS_33DeserializeInternalFieldsCallbackEPNS_14MicrotaskQueueE(%"class.v8::Isolate"* %19, %"class.v8::ExtensionConfiguration"* null, %"class.v8::ObjectTemplate"* null, %"class.v8::Value"* null, void (%"class.v8::Object"*, i32, i8*, i32, i8*)* null, i8* null, %"class.v8::MicrotaskQueue"* null) #10
  call void @_ZN2v815SnapshotCreator17SetDefaultContextENS_5LocalINS_7ContextEEENS_31SerializeInternalFieldsCallbackE(%"class.v8::SnapshotCreator"* nonnull %5, %"class.v8::Context"* %26, { i8*, i32 } (%"class.v8::Object"*, i32, i8*)* null, i8* null) #10
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #10
  %27 = call { i8*, i32 } @_ZN2v815SnapshotCreator10CreateBlobENS0_20FunctionCodeHandlingE(%"class.v8::SnapshotCreator"* nonnull %5, i32 1) #10
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  br label %30

30:                                               ; preds = %17, %23
  %31 = phi i8* [ %28, %23 ], [ null, %17 ]
  %32 = phi i32 [ %29, %23 ], [ 0, %17 ]
  call void @_ZN2v815SnapshotCreatorD1Ev(%"class.v8::SnapshotCreator"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %33 = insertvalue { i8*, i32 } undef, i8* %31, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  ret { i8*, i32 } %34
}

declare void @_ZN2v815SnapshotCreatorC1EPKlPNS_11StartupDataE(%"class.v8::SnapshotCreator"*, i64*, %"class.v8::StartupData"*) unnamed_addr #1

declare %"class.v8::Isolate"* @_ZN2v815SnapshotCreator10GetIsolateEv(%"class.v8::SnapshotCreator"*) local_unnamed_addr #1

declare i32 @_ZN2v87Isolate27ContextDisposedNotificationEb(%"class.v8::Isolate"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #1

declare i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14SerializedDataD0Ev(%"class.v8::internal::SerializedData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::SerializedData", %"class.v8::internal::SerializedData"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal14SerializedDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::SerializedData", %"class.v8::internal::SerializedData"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 4, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::SerializedData", %"class.v8::internal::SerializedData"* %0, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdaPv(i8* nonnull %8) #13
  br label %11

11:                                               ; preds = %1, %6, %10
  %12 = bitcast %"class.v8::internal::SerializedData"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #1

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #1

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #1

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #1

declare void @_ZN2v88internal3Map29CompleteInobjectSlackTrackingEPNS0_7IsolateE(%"class.v8::internal::Map"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal12Bootstrapper17CreateEnvironmentENS0_11MaybeHandleINS0_13JSGlobalProxyEEENS_5LocalINS_14ObjectTemplateEEEPNS_22ExtensionConfigurationEmNS_33DeserializeInternalFieldsCallbackEPNS_14MicrotaskQueueE(%"class.v8::internal::Bootstrapper"*, i64*, %"class.v8::ObjectTemplate"*, %"class.v8::ExtensionConfiguration"*, i64, %"struct.v8::DeserializeInternalFieldsCallback"* byval(%"struct.v8::DeserializeInternalFieldsCallback") align 8, %"class.v8::MicrotaskQueue"*) local_unnamed_addr #1

declare void @_ZN2v88internal19SnapshotCompression8CompressEPKNS0_12SnapshotDataE(%"class.v8::internal::SnapshotData"* sret, %"class.v8::internal::SnapshotData"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal12SnapshotDataENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.1283"*, %"class.v8::internal::SnapshotData"* dereferenceable(24)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.v8::internal::SnapshotData"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1283"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1283"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8::internal::SnapshotData"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.v8::internal::SnapshotData"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.v8::internal::SnapshotData"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %33, i64 %9
  %35 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %33, i64 %32
  %36 = ptrtoint %"class.v8::internal::SnapshotData"* %35 to i64
  %37 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %34, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal14SerializedDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %33, i64 %9, i32 0, i32 1
  %39 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %1, i64 0, i32 0, i32 1
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast i8** %38 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %33, i64 %9, i32 0, i32 2
  %44 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %1, i64 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 8
  store i32 %45, i32* %43, align 8
  %46 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %33, i64 %9, i32 0, i32 3
  %47 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %1, i64 0, i32 0, i32 3
  %48 = load i8, i8* %47, align 4, !range !3
  store i8 %48, i8* %46, align 4
  store i8 0, i8* %47, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal12SnapshotDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %49 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %34, i64 1
  %50 = ptrtoint %"class.v8::internal::SnapshotData"* %49 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %0, i64 0, i32 0, i32 0
  %52 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %51, align 8
  %53 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %3, align 8
  %54 = icmp eq %"class.v8::internal::SnapshotData"* %53, %52
  br i1 %54, label %55, label %57

55:                                               ; preds = %31
  %56 = ptrtoint %"class.v8::internal::SnapshotData"* %52 to i64
  br label %78

57:                                               ; preds = %31, %57
  %58 = phi %"class.v8::internal::SnapshotData"* [ %73, %57 ], [ %34, %31 ]
  %59 = phi %"class.v8::internal::SnapshotData"* [ %60, %57 ], [ %53, %31 ]
  %60 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %59, i64 -1
  %61 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %58, i64 -1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal14SerializedDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %58, i64 -1, i32 0, i32 1
  %63 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %59, i64 -1, i32 0, i32 1
  %64 = bitcast i8** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast i8** %62 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %58, i64 -1, i32 0, i32 2
  %68 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %59, i64 -1, i32 0, i32 2
  %69 = load i32, i32* %68, align 8
  store i32 %69, i32* %67, align 8
  %70 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %58, i64 -1, i32 0, i32 3
  %71 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %59, i64 -1, i32 0, i32 3
  %72 = load i8, i8* %71, align 4, !range !3
  store i8 %72, i8* %70, align 4
  store i8 0, i8* %71, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal12SnapshotDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %73 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %58, i64 -1
  %74 = icmp eq %"class.v8::internal::SnapshotData"* %60, %52
  br i1 %74, label %75, label %57

75:                                               ; preds = %57
  %76 = load i64, i64* %6, align 8
  %77 = load %"class.v8::internal::SnapshotData"*, %"class.v8::internal::SnapshotData"** %3, align 8
  br label %78

78:                                               ; preds = %55, %75
  %79 = phi %"class.v8::internal::SnapshotData"* [ %52, %55 ], [ %77, %75 ]
  %80 = phi %"class.v8::internal::SnapshotData"* [ %34, %55 ], [ %73, %75 ]
  %81 = phi i64 [ %56, %55 ], [ %76, %75 ]
  %82 = ptrtoint %"class.v8::internal::SnapshotData"* %80 to i64
  store i64 %82, i64* %6, align 8
  store i64 %50, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %83 = inttoptr i64 %81 to %"class.v8::internal::SnapshotData"*
  %84 = icmp eq %"class.v8::internal::SnapshotData"* %79, %83
  br i1 %84, label %92, label %85

85:                                               ; preds = %78, %85
  %86 = phi %"class.v8::internal::SnapshotData"* [ %87, %85 ], [ %79, %78 ]
  %87 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %86, i64 -1
  %88 = bitcast %"class.v8::internal::SnapshotData"* %87 to void (%"class.v8::internal::SnapshotData"*)***
  %89 = load void (%"class.v8::internal::SnapshotData"*)**, void (%"class.v8::internal::SnapshotData"*)*** %88, align 8
  %90 = load void (%"class.v8::internal::SnapshotData"*)*, void (%"class.v8::internal::SnapshotData"*)** %89, align 8
  tail call void %90(%"class.v8::internal::SnapshotData"* %87) #10
  %91 = icmp eq %"class.v8::internal::SnapshotData"* %87, %83
  br i1 %91, label %92, label %85

92:                                               ; preds = %85, %78
  %93 = icmp eq i64 %81, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %92
  %95 = inttoptr i64 %81 to i8*
  tail call void @_ZdlPv(i8* %95) #13
  br label %96

96:                                               ; preds = %92, %94
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::Script"* @_ZN2v814ScriptCompiler7CompileENS_5LocalINS_7ContextEEEPNS0_6SourceENS0_14CompileOptionsENS0_13NoCacheReasonE(%"class.v8::Context"*, %"class.v8::ScriptCompiler::Source"*, i32, i32) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Script3RunENS_5LocalINS_7ContextEEE(%"class.v8::Script"*, %"class.v8::Context"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #5

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v814ScriptCompiler10CachedDataD1Ev(%"struct.v8::ScriptCompiler::CachedData"*) unnamed_addr #5

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal6HandleINS2_18SharedFunctionInfoEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRS4_RPNS2_7IsolateEEEEvDpOT_(%"class.std::__1::vector.1132"*, %"class.v8::internal::SharedFunctionInfo"* dereferenceable(8), %"class.v8::internal::Isolate"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.1132", %"class.std::__1::vector.1132"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.v8::internal::Handle.1134"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.1132"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 2305843009213693951
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.1132"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #11
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.1132", %"class.std::__1::vector.1132"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.v8::internal::Handle.1134"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 3
  %21 = icmp ult i64 %20, 1152921504606846975
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 2
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 2305843009213693951
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #11
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 2305843009213693951, %15 ]
  %32 = shl i64 %31, 3
  %33 = tail call i8* @_Znwm(i64 %32) #13
  %34 = bitcast i8* %33 to %"class.v8::internal::Handle.1134"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"class.v8::internal::Handle.1134"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"class.v8::internal::Handle.1134", %"class.v8::internal::Handle.1134"* %37, i64 %10
  %39 = getelementptr inbounds %"class.v8::internal::Handle.1134", %"class.v8::internal::Handle.1134"* %37, i64 %36
  %40 = ptrtoint %"class.v8::internal::Handle.1134"* %39 to i64
  %41 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Handle.1134", %"class.v8::internal::Handle.1134"* %38, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %43, i64 0, i32 31, i32 4
  %46 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %45, align 8
  %47 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %35
  %49 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %46, i64 %42) #10
  br label %63

50:                                               ; preds = %35
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %43, i64 0, i32 31, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %43, i64 0, i32 31, i32 1
  %54 = load i64*, i64** %53, align 8
  %55 = icmp eq i64* %52, %54
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %43) #10
  br label %58

58:                                               ; preds = %56, %50
  %59 = phi i64* [ %57, %56 ], [ %52, %50 ]
  %60 = ptrtoint i64* %59 to i64
  %61 = add i64 %60, 8
  %62 = inttoptr i64 %61 to i64*
  store i64* %62, i64** %51, align 8
  store i64 %42, i64* %59, align 8
  br label %63

63:                                               ; preds = %48, %58
  %64 = phi i64* [ %49, %48 ], [ %59, %58 ]
  store i64* %64, i64** %44, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Handle.1134", %"class.v8::internal::Handle.1134"* %38, i64 1
  %66 = ptrtoint %"class.v8::internal::Handle.1134"* %65 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector.1132", %"class.std::__1::vector.1132"* %0, i64 0, i32 0, i32 0
  %68 = load %"class.v8::internal::Handle.1134"*, %"class.v8::internal::Handle.1134"** %67, align 8
  %69 = load i64, i64* %5, align 8
  %70 = ptrtoint %"class.v8::internal::Handle.1134"* %68 to i64
  %71 = sub i64 %69, %70
  %72 = ashr exact i64 %71, 3
  %73 = sub nsw i64 0, %72
  %74 = getelementptr inbounds %"class.v8::internal::Handle.1134", %"class.v8::internal::Handle.1134"* %38, i64 %73
  %75 = ptrtoint %"class.v8::internal::Handle.1134"* %74 to i64
  %76 = icmp sgt i64 %71, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %63
  %78 = bitcast %"class.v8::internal::Handle.1134"* %74 to i8*
  %79 = bitcast %"class.v8::internal::Handle.1134"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 %71, i1 false) #10
  %80 = load %"class.v8::internal::Handle.1134"*, %"class.v8::internal::Handle.1134"** %67, align 8
  br label %81

81:                                               ; preds = %63, %77
  %82 = phi %"class.v8::internal::Handle.1134"* [ %68, %63 ], [ %80, %77 ]
  store i64 %75, i64* %7, align 8
  store i64 %66, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %83 = icmp eq %"class.v8::internal::Handle.1134"* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = bitcast %"class.v8::internal::Handle.1134"* %82 to i8*
  tail call void @_ZdlPv(i8* %85) #13
  br label %86

86:                                               ; preds = %81, %84
  ret void
}

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #1

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !6}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !6}
!13 = distinct !{!13, !9}
