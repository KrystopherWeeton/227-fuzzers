; ModuleID = '../../ui/base/accelerators/menu_label_accelerator_util.cc'
source_filename = "../../ui/base/accelerators/menu_label_accelerator_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }

@_ZZN2ui25EscapeMenuLabelAmpersandsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEE5kAmps = internal constant [2 x i16] [i16 38, i16 0], align 2
@_ZZN2ui25EscapeMenuLabelAmpersandsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEE8kTwoAmps = internal constant [3 x i16] [i16 38, i16 38, i16 0], align 2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZN2ui11GetMnemonicERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca [2 x i16], align 2
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i16* %9, i16* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = ptrtoint i16* %14 to i64
  br label %17

17:                                               ; preds = %81, %1
  %18 = phi i64 [ 0, %1 ], [ %82, %81 ]
  %19 = icmp ugt i64 %15, %18
  br i1 %19, label %20, label %84

20:                                               ; preds = %17
  %21 = sub i64 %15, %18
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %84, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds i16, i16* %14, i64 %18
  br label %25

25:                                               ; preds = %30, %23
  %26 = phi i64 [ %32, %30 ], [ %21, %23 ]
  %27 = phi i16* [ %31, %30 ], [ %24, %23 ]
  %28 = load i16, i16* %27, align 2
  %29 = icmp eq i16 %28, 38
  br i1 %29, label %34, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds i16, i16* %27, i64 1
  %32 = add i64 %26, -1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %84, label %25

34:                                               ; preds = %25
  %35 = icmp eq i16* %27, null
  %36 = ptrtoint i16* %27 to i64
  %37 = sub i64 %36, %16
  %38 = icmp eq i64 %37, -2
  %39 = or i1 %35, %38
  br i1 %39, label %84, label %40

40:                                               ; preds = %34
  %41 = ashr exact i64 %37, 1
  %42 = add nsw i64 %41, 1
  %43 = icmp eq i64 %42, %15
  br i1 %43, label %81, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds i16, i16* %14, i64 %42
  %46 = load i16, i16* %45, align 2
  %47 = icmp eq i16 %46, 38
  br i1 %47, label %48, label %50

48:                                               ; preds = %44
  %49 = add nsw i64 %41, 2
  br label %81

50:                                               ; preds = %44
  %51 = getelementptr inbounds i16, i16* %14, i64 %42
  %52 = bitcast [2 x i16]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #4
  %53 = getelementptr inbounds [2 x i16], [2 x i16]* %2, i64 0, i64 0
  store i16 -21846, i16* %53, align 2
  %54 = getelementptr inbounds [2 x i16], [2 x i16]* %2, i64 0, i64 1
  store i16 -21846, i16* %54, align 2
  %55 = load i16, i16* %51, align 2
  store i16 %55, i16* %53, align 2
  store i16 0, i16* %54, align 2
  %56 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #4
  %57 = icmp eq i16 %55, 0
  br i1 %57, label %65, label %58

58:                                               ; preds = %50, %58
  %59 = phi i64 [ %61, %58 ], [ 0, %50 ]
  %60 = phi i16* [ %62, %58 ], [ %53, %50 ]
  %61 = add i64 %59, 1
  %62 = getelementptr inbounds i16, i16* %60, i64 1
  %63 = load i16, i16* %62, align 2
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %58

65:                                               ; preds = %58, %50
  %66 = phi i64 [ 0, %50 ], [ %61, %58 ]
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %3, i16* nonnull %53, i64 %66) #4
  %67 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %67, i64 0, i32 1, i32 1
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %65
  %72 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %73 = load i16, i16* %72, align 8
  br label %79

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i16*, i16** %75, align 8
  %77 = load i16, i16* %76, align 2
  %78 = bitcast i16* %76 to i8*
  call void @_ZdlPv(i8* %78) #5
  br label %79

79:                                               ; preds = %71, %74
  %80 = phi i16 [ %73, %71 ], [ %77, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #4
  br label %84

81:                                               ; preds = %48, %40
  %82 = phi i64 [ %49, %48 ], [ %42, %40 ]
  %83 = icmp eq i64 %82, -1
  br i1 %83, label %84, label %17

84:                                               ; preds = %20, %34, %17, %81, %30, %79
  %85 = phi i16 [ %80, %79 ], [ 0, %30 ], [ 0, %81 ], [ 0, %17 ], [ 0, %34 ], [ 0, %20 ]
  ret i16 %85
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui25EscapeMenuLabelAmpersandsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #4
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i16*, i16** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %6 to i64
  %13 = icmp slt i8 %6, 0
  %14 = select i1 %13, i16* %8, i16* %9
  %15 = select i1 %13, i64 %11, i64 %12
  %16 = tail call zeroext i1 @_ZN4base12ReplaceCharsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_S4_PNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %14, i64 %15, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZZN2ui25EscapeMenuLabelAmpersandsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEE5kAmps, i64 0, i64 0), i64 1, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZZN2ui25EscapeMenuLabelAmpersandsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEE8kTwoAmps, i64 0, i64 0), i64 2, %"class.std::__1::basic_string"* %0) #4
  ret void
}

declare zeroext i1 @_ZN4base12ReplaceCharsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_S4_PNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16*, i64, i16*, i64, i16*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
