; ModuleID = '../../net/disk_cache/blockfile/mapped_file_posix.cc'
source_filename = "../../net/disk_cache/blockfile/mapped_file_posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.disk_cache::MappedFile" = type { %"class.disk_cache::File", i8, i8*, i64 }
%"class.disk_cache::File" = type { i32 (...)**, %"class.base::RefCounted", i8, i8, [2 x i8], %"class.base::File", %"class.base::File" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }

@_ZTVN10disk_cache10MappedFileE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.disk_cache::MappedFile"*)* @_ZN10disk_cache10MappedFileD2Ev to i8*), i8* bitcast (void (%"class.disk_cache::MappedFile"*)* @_ZN10disk_cache10MappedFileD0Ev to i8*)] }, align 8

@_ZN10disk_cache10MappedFileD1Ev = hidden unnamed_addr alias void (%"class.disk_cache::MappedFile"*), void (%"class.disk_cache::MappedFile"*)* @_ZN10disk_cache10MappedFileD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN10disk_cache10MappedFile4InitERKN4base8FilePathEm(%"class.disk_cache::MappedFile"*, %"class.base::FilePath"* dereferenceable(24), i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.disk_cache::MappedFile", %"class.disk_cache::MappedFile"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %30

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.disk_cache::MappedFile", %"class.disk_cache::MappedFile"* %0, i64 0, i32 0
  %9 = tail call zeroext i1 @_ZN10disk_cache4File4InitERKN4base8FilePathE(%"class.disk_cache::File"* %8, %"class.base::FilePath"* dereferenceable(24) %1) #6
  br i1 %9, label %10, label %30

10:                                               ; preds = %7
  %11 = icmp ne i64 %2, 0
  %12 = select i1 %11, i64 %2, i64 4096
  br i1 %11, label %15, label %13

13:                                               ; preds = %10
  %14 = tail call i64 @_ZN10disk_cache4File9GetLengthEv(%"class.disk_cache::File"* %8) #6
  br label %15

15:                                               ; preds = %13, %10
  %16 = phi i64 [ %2, %10 ], [ %14, %13 ]
  %17 = tail call i32 @_ZNK10disk_cache4File13platform_fileEv(%"class.disk_cache::File"* %8) #6
  %18 = tail call i8* @mmap64(i8* null, i64 %16, i32 3, i32 1, i32 %17, i64 0) #6
  %19 = getelementptr inbounds %"class.disk_cache::MappedFile", %"class.disk_cache::MappedFile"* %0, i64 0, i32 2
  store i8* %18, i8** %19, align 8
  store i8 1, i8* %4, align 8
  %20 = getelementptr inbounds %"class.disk_cache::MappedFile", %"class.disk_cache::MappedFile"* %0, i64 0, i32 3
  store i64 %16, i64* %20, align 8
  %21 = icmp eq i8* %18, inttoptr (i64 -1 to i8*)
  br i1 %21, label %22, label %23

22:                                               ; preds = %15
  store i8* null, i8** %19, align 8
  br label %23

23:                                               ; preds = %22, %15
  %24 = tail call i8* @_Znam(i64 %12) #7
  %25 = tail call zeroext i1 @_ZN10disk_cache4File4ReadEPvmm(%"class.disk_cache::File"* %8, i8* nonnull %24, i64 %12, i64 0) #6
  br i1 %25, label %26, label %28

26:                                               ; preds = %23
  %27 = load i8*, i8** %19, align 8
  br label %28

28:                                               ; preds = %23, %26
  %29 = phi i8* [ %27, %26 ], [ null, %23 ]
  tail call void @_ZdaPv(i8* nonnull %24) #7
  br label %30

30:                                               ; preds = %7, %3, %28
  %31 = phi i8* [ %29, %28 ], [ null, %3 ], [ null, %7 ]
  ret i8* %31
}

declare zeroext i1 @_ZN10disk_cache4File4InitERKN4base8FilePathE(%"class.disk_cache::File"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #1

declare i64 @_ZN10disk_cache4File9GetLengthEv(%"class.disk_cache::File"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i8* @mmap64(i8*, i64, i32, i32, i32, i64) local_unnamed_addr #2

declare i32 @_ZNK10disk_cache4File13platform_fileEv(%"class.disk_cache::File"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #3

declare zeroext i1 @_ZN10disk_cache4File4ReadEPvmm(%"class.disk_cache::File"*, i8*, i64, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10disk_cache10MappedFile5FlushEv(%"class.disk_cache::MappedFile"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache10MappedFileD2Ev(%"class.disk_cache::MappedFile"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.disk_cache::MappedFile", %"class.disk_cache::MappedFile"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN10disk_cache10MappedFileE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.disk_cache::MappedFile", %"class.disk_cache::MappedFile"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.disk_cache::MappedFile", %"class.disk_cache::MappedFile"* %0, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.disk_cache::MappedFile", %"class.disk_cache::MappedFile"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = tail call i32 @munmap(i8* nonnull %8, i64 %12) #6
  br label %14

14:                                               ; preds = %10, %6, %1
  %15 = getelementptr inbounds %"class.disk_cache::MappedFile", %"class.disk_cache::MappedFile"* %0, i64 0, i32 0
  tail call void @_ZN10disk_cache4FileD2Ev(%"class.disk_cache::File"* %15) #6
  ret void
}

; Function Attrs: nounwind
declare i32 @munmap(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10disk_cache4FileD2Ev(%"class.disk_cache::File"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache10MappedFileD0Ev(%"class.disk_cache::MappedFile"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.disk_cache::MappedFile", %"class.disk_cache::MappedFile"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN10disk_cache10MappedFileE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.disk_cache::MappedFile", %"class.disk_cache::MappedFile"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.disk_cache::MappedFile", %"class.disk_cache::MappedFile"* %0, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.disk_cache::MappedFile", %"class.disk_cache::MappedFile"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = tail call i32 @munmap(i8* nonnull %8, i64 %12) #6
  br label %14

14:                                               ; preds = %1, %6, %10
  %15 = getelementptr inbounds %"class.disk_cache::MappedFile", %"class.disk_cache::MappedFile"* %0, i64 0, i32 0
  tail call void @_ZN10disk_cache4FileD2Ev(%"class.disk_cache::File"* %15) #6
  %16 = bitcast %"class.disk_cache::MappedFile"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
