; ModuleID = '../../ui/gfx/x/property_cache.cc'
source_filename = "../../ui/gfx/x/property_cache.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::nothrow_t" = type { i8 }
%"class.x11::PropertyCache" = type { %"class.x11::EventObserver", %"class.x11::Connection"*, i32, %"class.x11::XScopedEventSelector", %"class.base::flat_map.264", %"class.base::WeakPtrFactory" }
%"class.x11::EventObserver" = type { i32 (...)** }
%"class.x11::XScopedEventSelector" = type { i32, i32, %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.257 }
%class.scoped_refptr.257 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.258", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.258" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.259" }
%"struct.std::__1::atomic.259" = type { %"struct.std::__1::__atomic_base.260" }
%"struct.std::__1::__atomic_base.260" = type { %"struct.std::__1::__atomic_base.261" }
%"struct.std::__1::__atomic_base.261" = type { %"struct.std::__1::__cxx_atomic_impl.262" }
%"struct.std::__1::__cxx_atomic_impl.262" = type { %"struct.std::__1::__cxx_atomic_base_impl.263" }
%"struct.std::__1::__cxx_atomic_base_impl.263" = type { i8 }
%"class.base::flat_map.264" = type { %"class.base::internal::flat_tree.265" }
%"class.base::internal::flat_tree.265" = type { %"class.std::__1::vector.266" }
%"class.std::__1::vector.266" = type { %"class.std::__1::__vector_base.267" }
%"class.std::__1::__vector_base.267" = type { %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.268" = type { i32, %"struct.x11::PropertyCache::PropertyValue" }
%"struct.x11::PropertyCache::PropertyValue" = type { %"class.x11::Future", %"class.absl::optional.275" }
%"class.x11::Future" = type { %"class.std::__1::unique_ptr.269" }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.x11::Connection::FutureImpl"* }
%"class.x11::Connection::FutureImpl" = type { %"class.x11::Connection"*, i32, i8, i8* }
%"class.absl::optional.275" = type { %"class.absl::optional_internal::optional_data.276" }
%"class.absl::optional_internal::optional_data.276" = type { %"class.absl::optional_internal::optional_data_base.277" }
%"class.absl::optional_internal::optional_data_base.277" = type { %"class.absl::optional_internal::optional_data_dtor_base.278" }
%"class.absl::optional_internal::optional_data_dtor_base.278" = type { i8, %union.anon.279 }
%union.anon.279 = type { %"struct.x11::Response" }
%"struct.x11::Response" = type { %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.249" }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.x11::GetPropertyReply"* }
%"struct.x11::GetPropertyReply" = type { i8, i16, i32, i32, i32, %class.scoped_refptr.247 }
%class.scoped_refptr.247 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.248", [4 x i8] }>
%"class.base::RefCountedThreadSafe.248" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.268"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.295 }
%class.scoped_refptr.295 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.175", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.188", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.234", %"class.base::circular_deque", %"class.base::ObserverList.240", %"class.x11::Event"*, %"class.base::circular_deque.244", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.256" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.181" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.178" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.181" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.182", i64, i32, [4 x i8] }>
%"class.base::LinkedList.182" = type { %"class.base::LinkNode.183" }
%"class.base::LinkNode.183" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.199", %"class.std::__1::vector.206" }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.201" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.208" }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.210" }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.227" }
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.229" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.240" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.241", i64, i32, [4 x i8] }>
%"class.base::LinkedList.241" = type { %"class.base::LinkNode.242" }
%"class.base::LinkNode.242" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type { i16, i32, void (i8*)*, i8*, i32* }
%"class.base::circular_deque.244" = type { %"class.base::internal::VectorBuffer.245", i64, i64 }
%"class.base::internal::VectorBuffer.245" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.247, %"class.std::__1::unique_ptr.249" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.255 }
%union.anon.255 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.256" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.296" = type { %"class.std::__1::__vector_base.297" }
%"class.std::__1::__vector_base.297" = type { i32*, i32*, %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.x11::GetPropertyRequest" = type { i8, i32, i32, i32, i32, i32 }
%"class.base::OnceCallback.303" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtr.304" = type { %"class.base::internal::WeakPtrBase" }
%"struct.x11::PropertyNotifyEvent" = type { i8, i16, i32, i32, i32, i32 }
%"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare" = type { i8 }
%"class.std::__1::reverse_iterator.313" = type { %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter" }
%"class.std::__1::__wrap_iter" = type { %"struct.std::__1::pair.268"* }
%class.anon = type { i8 }
%"struct.x11::ReadBuffer" = type { %class.scoped_refptr.247, i64, i32* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZN4base8internal9flat_treeIN3x114AtomENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS2_13PropertyCache13PropertyValueEEENS5_9allocatorISC_EEEEE15sort_and_uniqueENS5_11__wrap_iterIPSC_EESJ_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeEl = comdat any

$_ZNSt3__116__insertion_sortIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_T_ = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeE = comdat any

$_ZNSt3__119__merge_move_assignIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareEPSD_SK_NS_11__wrap_iterISK_EEEEvT0_SN_T1_SO_T2_T_ = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_SN_T_NS_15iterator_traitsISN_E15difference_typeESR_PNSQ_10value_typeEl = comdat any

$_ZNSt3__14swapIN3x1113PropertyCache13PropertyValueEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_ = comdat any

$_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_PNS_15iterator_traitsISN_E10value_typeET_ = comdat any

$_ZNSt3__122__merge_move_constructIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EESM_EEvT0_SN_T1_SO_PNS_15iterator_traitsISN_E10value_typeET_ = comdat any

$_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_SN_T_NS_15iterator_traitsISN_E15difference_typeESR_PNSQ_10value_typeE = comdat any

$_ZNSt3__120__half_inplace_mergeIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareEPSD_NS_11__wrap_iterISK_EESM_EEvT0_SN_T1_SO_T2_T_ = comdat any

$_ZNSt3__120__half_inplace_mergeINS_8__invertIRN4base8internal9flat_treeIN3x114AtomENS3_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS5_13PropertyCache13PropertyValueEEENS_9allocatorISE_EEEEE13value_compareEEENS_16reverse_iteratorIPSE_EENSM_INS_11__wrap_iterISN_EEEESR_EEvT0_SS_T1_ST_T2_T_ = comdat any

$_ZNSt3__16vectorINS_4pairIN3x114AtomENS2_13PropertyCache13PropertyValueEEENS_9allocatorIS6_EEE5eraseENS_11__wrap_iterIPKS6_EESD_ = comdat any

$_ZN4base8internal9flat_treeIN3x114AtomENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS2_13PropertyCache13PropertyValueEEENS5_9allocatorISC_EEEEEaSEOSG_ = comdat any

$_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIZN3x116FutureINS3_16GetPropertyReplyEE10OnResponseENS_12OnceCallbackIFvNS3_8ResponseIS5_EEEEEEUlSB_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS3_5ErrorENSF_14default_deleteISH_EEEEE_JSB_EEEFvSE_SK_EE7RunOnceEPNS0_13BindStateBaseEOSE_OSK_ = comdat any

$_ZZN3x116FutureINS_16GetPropertyReplyEE10OnResponseEN4base12OnceCallbackIFvNS_8ResponseIS1_EEEEEENKUlS8_13scoped_refptrINS3_16RefCountedMemoryEENSt3__110unique_ptrINS_5ErrorENSC_14default_deleteISE_EEEEE_clES8_SB_SH_ = comdat any

$_ZN4base8internal9BindStateIZN3x116FutureINS2_16GetPropertyReplyEE10OnResponseENS_12OnceCallbackIFvNS2_8ResponseIS4_EEEEEEUlSA_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS2_5ErrorENSE_14default_deleteISG_EEEEE_JSA_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3x1113PropertyCacheEFvPNS4_13PropertyValueENS3_8ResponseINS3_16GetPropertyReplyEEEEJNS_7WeakPtrIS4_EES6_EEEFvS9_EE7RunOnceEPNS0_13BindStateBaseEOS9_ = comdat any

$_ZN4base8internal9BindStateIMN3x1113PropertyCacheEFvPNS3_13PropertyValueENS2_8ResponseINS2_16GetPropertyReplyEEEEJNS_7WeakPtrIS3_EES5_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3x1113PropertyCacheEFvPNS4_13PropertyValueENS3_8ResponseINS3_16GetPropertyReplyEEEEJNS_7WeakPtrIS4_EES6_EEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE = comdat any

@_ZTVN3x1113PropertyCacheE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.x11::PropertyCache"*, %"class.x11::Event"*)* @_ZN3x1113PropertyCache7OnEventERKNS_5EventE to i8*), i8* bitcast (void (%"class.x11::PropertyCache"*)* @_ZN3x1113PropertyCacheD2Ev to i8*), i8* bitcast (void (%"class.x11::PropertyCache"*)* @_ZN3x1113PropertyCacheD0Ev to i8*)] }, align 8
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN3x1113PropertyCacheC1EPNS_10ConnectionENS_6WindowERKNSt3__16vectorINS_4AtomENS4_9allocatorIS6_EEEE = hidden unnamed_addr alias void (%"class.x11::PropertyCache"*, %"class.x11::Connection"*, i32, %"class.std::__1::vector.296"*), void (%"class.x11::PropertyCache"*, %"class.x11::Connection"*, i32, %"class.std::__1::vector.296"*)* @_ZN3x1113PropertyCacheC2EPNS_10ConnectionENS_6WindowERKNSt3__16vectorINS_4AtomENS4_9allocatorIS6_EEEE
@_ZN3x1113PropertyCacheD1Ev = hidden unnamed_addr alias void (%"class.x11::PropertyCache"*), void (%"class.x11::PropertyCache"*)* @_ZN3x1113PropertyCacheD2Ev
@_ZN3x1113PropertyCache13PropertyValueC1Ev = hidden unnamed_addr alias void (%"struct.x11::PropertyCache::PropertyValue"*), void (%"struct.x11::PropertyCache::PropertyValue"*)* @_ZN3x1113PropertyCache13PropertyValueC2Ev
@_ZN3x1113PropertyCache13PropertyValueC1EOS1_ = hidden unnamed_addr alias void (%"struct.x11::PropertyCache::PropertyValue"*, %"struct.x11::PropertyCache::PropertyValue"*), void (%"struct.x11::PropertyCache::PropertyValue"*, %"struct.x11::PropertyCache::PropertyValue"*)* @_ZN3x1113PropertyCache13PropertyValueC2EOS1_
@_ZN3x1113PropertyCache13PropertyValueD1Ev = hidden unnamed_addr alias void (%"struct.x11::PropertyCache::PropertyValue"*), void (%"struct.x11::PropertyCache::PropertyValue"*)* @_ZN3x1113PropertyCache13PropertyValueD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x1113PropertyCacheC2EPNS_10ConnectionENS_6WindowERKNSt3__16vectorINS_4AtomENS4_9allocatorIS6_EEEE(%"class.x11::PropertyCache"*, %"class.x11::Connection"*, i32, %"class.std::__1::vector.296"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.266", align 8
  %6 = alloca %"class.base::flat_map.264", align 8
  %7 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3x1113PropertyCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 1
  store %"class.x11::Connection"* %1, %"class.x11::Connection"** %9, align 8
  %10 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 2
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 3
  tail call void @_ZN3x1120XScopedEventSelectorC1ENS_6WindowENS_9EventMaskE(%"class.x11::XScopedEventSelector"* %11, i32 %2, i32 4194304) #10
  %12 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 4
  %13 = bitcast %"class.base::flat_map.264"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #10
  %14 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 5, i32 0
  %15 = ptrtoint %"class.x11::PropertyCache"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %14, i64 %15) #10
  %16 = load %"class.x11::Connection"*, %"class.x11::Connection"** %9, align 8
  tail call void @_ZN3x1110Connection16AddEventObserverEPNS_13EventObserverE(%"class.x11::Connection"* %16, %"class.x11::EventObserver"* %7) #10
  %17 = bitcast %"class.std::__1::vector.266"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.std::__1::vector.266", %"class.std::__1::vector.266"* %5, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector.266", %"class.std::__1::vector.266"* %5, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector.266", %"class.std::__1::vector.266"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector.296", %"class.std::__1::vector.296"* %3, i64 0, i32 0, i32 1
  %22 = bitcast i32** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.296"* %3 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = ashr exact i64 %26, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #10
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %54, label %29

29:                                               ; preds = %4
  %30 = icmp ugt i64 %27, 461168601842738790
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::vector.266"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %32) #11
  unreachable

33:                                               ; preds = %29
  %34 = mul i64 %27, 40
  %35 = tail call i8* @_Znwm(i64 %34) #12
  %36 = bitcast i8* %35 to %"struct.std::__1::pair.268"*
  %37 = bitcast %"struct.std::__1::pair.268"** %19 to i8**
  store i8* %35, i8** %37, align 8
  %38 = bitcast %"class.std::__1::vector.266"* %5 to i8**
  store i8* %35, i8** %38, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %36, i64 %27
  store %"struct.std::__1::pair.268"* %39, %"struct.std::__1::pair.268"** %20, align 8
  %40 = ptrtoint i8* %35 to i64
  br label %41

41:                                               ; preds = %41, %33
  %42 = phi %"struct.std::__1::pair.268"* [ %47, %41 ], [ %36, %33 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %42, i64 0, i32 0
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %42, i64 0, i32 1
  %45 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %44 to i64*
  store i64 0, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %42, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %42, i64 1
  %48 = icmp eq %"struct.std::__1::pair.268"* %47, %39
  br i1 %48, label %49, label %41

49:                                               ; preds = %41
  %50 = bitcast %"struct.std::__1::pair.268"** %19 to i64*
  %51 = ptrtoint %"struct.std::__1::pair.268"* %39 to i64
  store i64 %51, i64* %50, align 8
  %52 = load i64, i64* %22, align 8
  %53 = load i64, i64* %24, align 8
  br label %54

54:                                               ; preds = %4, %49
  %55 = phi i64 [ 0, %4 ], [ %51, %49 ]
  %56 = phi i64 [ 0, %4 ], [ %40, %49 ]
  %57 = phi %"struct.std::__1::pair.268"* [ null, %4 ], [ %36, %49 ]
  %58 = phi i64 [ %25, %4 ], [ %53, %49 ]
  %59 = phi i64 [ %23, %4 ], [ %52, %49 ]
  %60 = icmp eq i64 %59, %58
  br i1 %60, label %67, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.std::__1::vector.296", %"class.std::__1::vector.296"* %3, i64 0, i32 0, i32 0
  br label %200

63:                                               ; preds = %200
  %64 = ptrtoint %"struct.std::__1::pair.268"* %211 to i64
  %65 = bitcast %"struct.std::__1::pair.268"** %19 to i64*
  %66 = load i64, i64* %65, align 8
  br label %67

67:                                               ; preds = %54, %63
  %68 = phi i64 [ %66, %63 ], [ %55, %54 ]
  %69 = phi i64 [ %64, %63 ], [ %56, %54 ]
  %70 = bitcast %"class.base::flat_map.264"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #10
  %71 = getelementptr inbounds %"class.base::flat_map.264", %"class.base::flat_map.264"* %6, i64 0, i32 0
  %72 = bitcast %"class.base::flat_map.264"* %6 to i64*
  store i64 %69, i64* %72, align 8
  %73 = getelementptr inbounds %"class.base::flat_map.264", %"class.base::flat_map.264"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %74 = bitcast %"struct.std::__1::pair.268"** %73 to i64*
  store i64 %68, i64* %74, align 8
  %75 = bitcast %"struct.std::__1::pair.268"** %20 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.base::flat_map.264", %"class.base::flat_map.264"* %6, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %78 = bitcast %"struct.std::__1::pair.268"** %77 to i64*
  store i64 %76, i64* %78, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #10
  %79 = getelementptr inbounds %"class.base::flat_map.264", %"class.base::flat_map.264"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = inttoptr i64 %69 to %"struct.std::__1::pair.268"*
  %81 = inttoptr i64 %68 to %"struct.std::__1::pair.268"*
  call void @_ZN4base8internal9flat_treeIN3x114AtomENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS2_13PropertyCache13PropertyValueEEENS5_9allocatorISC_EEEEE15sort_and_uniqueENS5_11__wrap_iterIPSC_EESJ_(%"class.base::internal::flat_tree.265"* nonnull %71, %"struct.std::__1::pair.268"* %80, %"struct.std::__1::pair.268"* %81) #10
  %82 = getelementptr inbounds %"class.base::flat_map.264", %"class.base::flat_map.264"* %12, i64 0, i32 0
  %83 = call dereferenceable(24) %"class.base::internal::flat_tree.265"* @_ZN4base8internal9flat_treeIN3x114AtomENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS2_13PropertyCache13PropertyValueEEENS5_9allocatorISC_EEEEEaSEOSG_(%"class.base::internal::flat_tree.265"* %82, %"class.base::internal::flat_tree.265"* nonnull dereferenceable(24) %71) #10
  %84 = load %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"** %79, align 8
  %85 = icmp eq %"struct.std::__1::pair.268"* %84, null
  br i1 %85, label %141, label %86

86:                                               ; preds = %67
  %87 = bitcast %"struct.std::__1::pair.268"* %84 to i8*
  %88 = load %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"** %73, align 8
  %89 = icmp eq %"struct.std::__1::pair.268"* %88, %84
  br i1 %89, label %139, label %90

90:                                               ; preds = %86, %134
  %91 = phi %"struct.std::__1::pair.268"* [ %92, %134 ], [ %88, %86 ]
  %92 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %91, i64 -1
  %93 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %91, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %94 = load i8, i8* %93, align 8, !range !2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %128, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %91, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %98 = load %"class.x11::Error"*, %"class.x11::Error"** %97, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %97, align 8
  %99 = icmp eq %"class.x11::Error"* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = bitcast %"class.x11::Error"* %98 to void (%"class.x11::Error"*)***
  %102 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %102, i64 1
  %104 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %103, align 8
  call void %104(%"class.x11::Error"* nonnull %98) #10
  br label %105

105:                                              ; preds = %100, %96
  %106 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %91, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load %"struct.x11::GetPropertyReply"*, %"struct.x11::GetPropertyReply"** %106, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %106, align 8
  %108 = icmp eq %"struct.x11::GetPropertyReply"* %107, null
  br i1 %108, label %127, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %107, i64 0, i32 5, i32 0
  %111 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %110, align 8
  %112 = icmp eq %"class.base::RefCountedMemory"* %111, null
  br i1 %112, label %125, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %111, i64 0, i32 1
  %115 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = atomicrmw sub i32* %115, i32 1 acq_rel
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %125

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %114, i64 -2
  %120 = bitcast %"class.base::RefCountedThreadSafe.248"* %119 to %"class.base::RefCountedMemory"*
  %121 = bitcast %"class.base::RefCountedThreadSafe.248"* %119 to void (%"class.base::RefCountedMemory"*)***
  %122 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %122, i64 3
  %124 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %123, align 8
  call void %124(%"class.base::RefCountedMemory"* nonnull %120) #10
  br label %125

125:                                              ; preds = %118, %113, %109
  %126 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %107, i64 0, i32 0
  call void @_ZdlPv(i8* %126) #12
  br label %127

127:                                              ; preds = %125, %105
  store i8 0, i8* %93, align 8
  br label %128

128:                                              ; preds = %127, %90
  %129 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %91, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %129, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %129, align 8
  %131 = icmp eq %"class.x11::Connection::FutureImpl"* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast %"class.x11::Connection::FutureImpl"* %130 to i8*
  call void @_ZdlPv(i8* %133) #12
  br label %134

134:                                              ; preds = %132, %128
  %135 = icmp eq %"struct.std::__1::pair.268"* %92, %84
  br i1 %135, label %136, label %90

136:                                              ; preds = %134
  %137 = bitcast %"class.base::flat_map.264"* %6 to i8**
  %138 = load i8*, i8** %137, align 8
  br label %139

139:                                              ; preds = %86, %136
  %140 = phi i8* [ %138, %136 ], [ %87, %86 ]
  store %"struct.std::__1::pair.268"* %84, %"struct.std::__1::pair.268"** %73, align 8
  call void @_ZdlPv(i8* %140) #12
  br label %141

141:                                              ; preds = %67, %139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #10
  %142 = load %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"** %18, align 8
  %143 = icmp eq %"struct.std::__1::pair.268"* %142, null
  br i1 %143, label %199, label %144

144:                                              ; preds = %141
  %145 = bitcast %"struct.std::__1::pair.268"* %142 to i8*
  %146 = load %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"** %19, align 8
  %147 = icmp eq %"struct.std::__1::pair.268"* %146, %142
  br i1 %147, label %197, label %148

148:                                              ; preds = %144, %192
  %149 = phi %"struct.std::__1::pair.268"* [ %150, %192 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %149, i64 -1
  %151 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %149, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %152 = load i8, i8* %151, align 8, !range !2
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %186, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %149, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %156 = load %"class.x11::Error"*, %"class.x11::Error"** %155, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %155, align 8
  %157 = icmp eq %"class.x11::Error"* %156, null
  br i1 %157, label %163, label %158

158:                                              ; preds = %154
  %159 = bitcast %"class.x11::Error"* %156 to void (%"class.x11::Error"*)***
  %160 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %160, i64 1
  %162 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %161, align 8
  call void %162(%"class.x11::Error"* nonnull %156) #10
  br label %163

163:                                              ; preds = %158, %154
  %164 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %149, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load %"struct.x11::GetPropertyReply"*, %"struct.x11::GetPropertyReply"** %164, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %164, align 8
  %166 = icmp eq %"struct.x11::GetPropertyReply"* %165, null
  br i1 %166, label %185, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %165, i64 0, i32 5, i32 0
  %169 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %168, align 8
  %170 = icmp eq %"class.base::RefCountedMemory"* %169, null
  br i1 %170, label %183, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %169, i64 0, i32 1
  %173 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = atomicrmw sub i32* %173, i32 1 acq_rel
  %175 = icmp eq i32 %174, 1
  br i1 %175, label %176, label %183

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %172, i64 -2
  %178 = bitcast %"class.base::RefCountedThreadSafe.248"* %177 to %"class.base::RefCountedMemory"*
  %179 = bitcast %"class.base::RefCountedThreadSafe.248"* %177 to void (%"class.base::RefCountedMemory"*)***
  %180 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %179, align 8
  %181 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %180, i64 3
  %182 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %181, align 8
  call void %182(%"class.base::RefCountedMemory"* nonnull %178) #10
  br label %183

183:                                              ; preds = %176, %171, %167
  %184 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %165, i64 0, i32 0
  call void @_ZdlPv(i8* %184) #12
  br label %185

185:                                              ; preds = %183, %163
  store i8 0, i8* %151, align 8
  br label %186

186:                                              ; preds = %185, %148
  %187 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %149, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %187, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %187, align 8
  %189 = icmp eq %"class.x11::Connection::FutureImpl"* %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"class.x11::Connection::FutureImpl"* %188 to i8*
  call void @_ZdlPv(i8* %191) #12
  br label %192

192:                                              ; preds = %190, %186
  %193 = icmp eq %"struct.std::__1::pair.268"* %150, %142
  br i1 %193, label %194, label %148

194:                                              ; preds = %192
  %195 = bitcast %"class.std::__1::vector.266"* %5 to i8**
  %196 = load i8*, i8** %195, align 8
  br label %197

197:                                              ; preds = %144, %194
  %198 = phi i8* [ %196, %194 ], [ %145, %144 ]
  store %"struct.std::__1::pair.268"* %142, %"struct.std::__1::pair.268"** %19, align 8
  call void @_ZdlPv(i8* %198) #12
  br label %199

199:                                              ; preds = %141, %197
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  ret void

200:                                              ; preds = %61, %200
  %201 = phi %"struct.std::__1::pair.268"* [ %57, %61 ], [ %211, %200 ]
  %202 = phi i64 [ %58, %61 ], [ %215, %200 ]
  %203 = phi i64 [ 0, %61 ], [ %213, %200 ]
  %204 = inttoptr i64 %202 to i32*
  %205 = getelementptr inbounds i32, i32* %204, i64 %203
  %206 = load i32, i32* %205, align 4
  %207 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %201, i64 %203, i32 0
  store i32 %206, i32* %207, align 8
  %208 = load i32*, i32** %62, align 8
  %209 = getelementptr inbounds i32, i32* %208, i64 %203
  %210 = load i32, i32* %209, align 4
  %211 = load %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"** %18, align 8
  %212 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %211, i64 %203, i32 1
  tail call void @_ZN3x1113PropertyCache13FetchPropertyENS_4AtomEPNS0_13PropertyValueE(%"class.x11::PropertyCache"* %0, i32 %210, %"struct.x11::PropertyCache::PropertyValue"* %212)
  %213 = add nuw i64 %203, 1
  %214 = load i64, i64* %22, align 8
  %215 = load i64, i64* %24, align 8
  %216 = sub i64 %214, %215
  %217 = ashr exact i64 %216, 2
  %218 = icmp ult i64 %213, %217
  br i1 %218, label %200, label %63
}

declare void @_ZN3x1120XScopedEventSelectorC1ENS_6WindowENS_9EventMaskE(%"class.x11::XScopedEventSelector"*, i32, i32) unnamed_addr #1

declare void @_ZN3x1110Connection16AddEventObserverEPNS_13EventObserverE(%"class.x11::Connection"*, %"class.x11::EventObserver"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x1113PropertyCache13FetchPropertyENS_4AtomEPNS0_13PropertyValueE(%"class.x11::PropertyCache"*, i32, %"struct.x11::PropertyCache::PropertyValue"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"struct.x11::GetPropertyRequest", align 4
  %7 = alloca %"class.base::OnceCallback.303", align 8
  %8 = alloca %"class.base::WeakPtr.304", align 8
  %9 = ptrtoint %"struct.x11::PropertyCache::PropertyValue"* %2 to i64
  %10 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 1
  %11 = bitcast %"class.x11::Connection"** %10 to %"class.x11::XProto"**
  %12 = load %"class.x11::XProto"*, %"class.x11::XProto"** %11, align 8
  %13 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  store i8 0, i8* %13, align 4
  %14 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %6, i64 0, i32 1
  %15 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %14, align 4
  %17 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %6, i64 0, i32 2
  store i32 %1, i32* %17, align 4
  %18 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %6, i64 0, i32 3
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %6, i64 0, i32 4
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %6, i64 0, i32 5
  store i32 -1, i32* %20, align 4
  %21 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto11GetPropertyERKNS_18GetPropertyRequestE(%"class.x11::XProto"* %12, %"struct.x11::GetPropertyRequest"* nonnull dereferenceable(24) %6) #10
  %22 = ptrtoint %"class.x11::Connection::FutureImpl"* %21 to i64
  %23 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %23, align 8
  %25 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %2 to i64*
  store i64 %22, i64* %25, align 8
  %26 = icmp eq %"class.x11::Connection::FutureImpl"* %24, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %3
  %28 = bitcast %"class.x11::Connection::FutureImpl"* %24 to i8*
  call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %27, %3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  %30 = bitcast %"class.base::WeakPtr.304"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #10
  %31 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10, !noalias !3
  %32 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 5, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %32) #10, !noalias !3
  %33 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 5, i32 0, i32 1
  %34 = load i64, i64* %33, align 8, !noalias !3
  %35 = getelementptr inbounds %"class.base::WeakPtr.304", %"class.base::WeakPtr.304"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %35, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %34) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10, !noalias !3
  %36 = call i8* @_Znwm(i64 72) #12, !noalias !6
  %37 = bitcast i8* %36 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %37, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"struct.x11::Response"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3x1113PropertyCacheEFvPNS4_13PropertyValueENS3_8ResponseINS3_16GetPropertyReplyEEEEJNS_7WeakPtrIS4_EES6_EEEFvS9_EE7RunOnceEPNS0_13BindStateBaseEOS9_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3x1113PropertyCacheEFvPNS3_13PropertyValueENS2_8ResponseINS2_16GetPropertyReplyEEEEJNS_7WeakPtrIS3_EES5_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3x1113PropertyCacheEFvPNS4_13PropertyValueENS3_8ResponseINS3_16GetPropertyReplyEEEEJNS_7WeakPtrIS4_EES6_EEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE) #10, !noalias !6
  %38 = getelementptr inbounds i8, i8* %36, i64 32
  %39 = bitcast i8* %38 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.x11::PropertyCache"*, %"struct.x11::PropertyCache::PropertyValue"*, %"struct.x11::GetPropertyReply"*, %"class.x11::Error"*)* @_ZN3x1113PropertyCache21OnGetPropertyResponseEPNS0_13PropertyValueENS_8ResponseINS_16GetPropertyReplyEEE to i64), i64 0>, <2 x i64>* %39, align 8, !noalias !6
  %40 = getelementptr inbounds i8, i8* %36, i64 48
  %41 = bitcast i8* %40 to %"class.base::internal::WeakReference"*
  %42 = getelementptr inbounds %"class.base::WeakPtr.304", %"class.base::WeakPtr.304"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %41, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %42) #10, !noalias !6
  %43 = getelementptr inbounds i8, i8* %36, i64 56
  %44 = bitcast i8* %43 to i64*
  %45 = getelementptr inbounds %"class.base::WeakPtr.304", %"class.base::WeakPtr.304"* %8, i64 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8, !noalias !6
  store i64 %46, i64* %44, align 8, !noalias !6
  %47 = getelementptr inbounds i8, i8* %36, i64 64
  %48 = bitcast i8* %47 to i64*
  store i64 %9, i64* %48, align 8, !noalias !6
  %49 = bitcast %"class.base::OnceCallback.303"* %7 to i8**
  store i8* %36, i8** %49, align 8, !alias.scope !6
  %50 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  %51 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %23, align 8
  %52 = icmp eq %"class.x11::Connection::FutureImpl"* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %29
  %54 = call i8* @_Znwm(i64 48) #12, !noalias !11
  %55 = bitcast i8* %54 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %55, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.scoped_refptr.247*, %"class.std::__1::unique_ptr.249"*)* @_ZN4base8internal7InvokerINS0_9BindStateIZN3x116FutureINS3_16GetPropertyReplyEE10OnResponseENS_12OnceCallbackIFvNS3_8ResponseIS5_EEEEEEUlSB_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS3_5ErrorENSF_14default_deleteISH_EEEEE_JSB_EEEFvSE_SK_EE7RunOnceEPNS0_13BindStateBaseEOSE_OSK_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIZN3x116FutureINS2_16GetPropertyReplyEE10OnResponseENS_12OnceCallbackIFvNS2_8ResponseIS4_EEEEEEUlSA_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS2_5ErrorENSE_14default_deleteISG_EEEEE_JSA_EE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !11
  %56 = getelementptr inbounds i8, i8* %54, i64 40
  %57 = getelementptr inbounds %"class.base::OnceCallback.303", %"class.base::OnceCallback.303"* %7, i64 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.base::OnceCallback.303"* %7 to i64*
  %59 = load i64, i64* %58, align 8, !noalias !11
  %60 = bitcast i8* %56 to i64*
  store i64 %59, i64* %60, align 8, !noalias !11
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %57, align 8, !noalias !11
  %61 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %54, i8** %61, align 8, !alias.scope !11
  call void @_ZN3x1110Connection10FutureImpl10OnResponseEN4base12OnceCallbackIFv13scoped_refptrINS2_16RefCountedMemoryEENSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEEEEE(%"class.x11::Connection::FutureImpl"* nonnull %51, %"class.base::OnceCallback"* nonnull %5) #10
  %62 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %62) #10
  br label %63

63:                                               ; preds = %29, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  %64 = getelementptr inbounds %"class.base::OnceCallback.303", %"class.base::OnceCallback.303"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %64) #10
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %35) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x1113PropertyCacheD2Ev(%"class.x11::PropertyCache"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3x1113PropertyCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 1
  %4 = load %"class.x11::Connection"*, %"class.x11::Connection"** %3, align 8
  %5 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 0
  tail call void @_ZN3x1110Connection19RemoveEventObserverEPNS_13EventObserverE(%"class.x11::Connection"* %4, %"class.x11::EventObserver"* %5) #10
  %6 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %6) #10
  %7 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 4, i32 0
  %8 = getelementptr inbounds %"class.base::internal::flat_tree.265", %"class.base::internal::flat_tree.265"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair.268"* %9, null
  br i1 %10, label %67, label %11

11:                                               ; preds = %1
  %12 = bitcast %"struct.std::__1::pair.268"* %9 to i8*
  %13 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %14 = load %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"** %13, align 8
  %15 = icmp eq %"struct.std::__1::pair.268"* %14, %9
  br i1 %15, label %65, label %16

16:                                               ; preds = %11, %60
  %17 = phi %"struct.std::__1::pair.268"* [ %18, %60 ], [ %14, %11 ]
  %18 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %17, i64 -1
  %19 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %17, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %54, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %17, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.x11::Error"*, %"class.x11::Error"** %23, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %23, align 8
  %25 = icmp eq %"class.x11::Error"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.x11::Error"* %24 to void (%"class.x11::Error"*)***
  %28 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %28, i64 1
  %30 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %29, align 8
  tail call void %30(%"class.x11::Error"* nonnull %24) #10
  br label %31

31:                                               ; preds = %26, %22
  %32 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %17, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.x11::GetPropertyReply"*, %"struct.x11::GetPropertyReply"** %32, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %32, align 8
  %34 = icmp eq %"struct.x11::GetPropertyReply"* %33, null
  br i1 %34, label %53, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %33, i64 0, i32 5, i32 0
  %37 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %36, align 8
  %38 = icmp eq %"class.base::RefCountedMemory"* %37, null
  br i1 %38, label %51, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %37, i64 0, i32 1
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw sub i32* %41, i32 1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %51

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %40, i64 -2
  %46 = bitcast %"class.base::RefCountedThreadSafe.248"* %45 to %"class.base::RefCountedMemory"*
  %47 = bitcast %"class.base::RefCountedThreadSafe.248"* %45 to void (%"class.base::RefCountedMemory"*)***
  %48 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %48, i64 3
  %50 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %49, align 8
  tail call void %50(%"class.base::RefCountedMemory"* nonnull %46) #10
  br label %51

51:                                               ; preds = %44, %39, %35
  %52 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %33, i64 0, i32 0
  tail call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %51, %31
  store i8 0, i8* %19, align 8
  br label %54

54:                                               ; preds = %53, %16
  %55 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %17, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %55, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %55, align 8
  %57 = icmp eq %"class.x11::Connection::FutureImpl"* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.x11::Connection::FutureImpl"* %56 to i8*
  tail call void @_ZdlPv(i8* %59) #12
  br label %60

60:                                               ; preds = %58, %54
  %61 = icmp eq %"struct.std::__1::pair.268"* %18, %9
  br i1 %61, label %62, label %16

62:                                               ; preds = %60
  %63 = bitcast %"class.base::internal::flat_tree.265"* %7 to i8**
  %64 = load i8*, i8** %63, align 8
  br label %65

65:                                               ; preds = %11, %62
  %66 = phi i8* [ %64, %62 ], [ %12, %11 ]
  store %"struct.std::__1::pair.268"* %9, %"struct.std::__1::pair.268"** %13, align 8
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %1, %65
  %68 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 3
  tail call void @_ZN3x1120XScopedEventSelectorD1Ev(%"class.x11::XScopedEventSelector"* %68) #10
  ret void
}

declare void @_ZN3x1110Connection19RemoveEventObserverEPNS_13EventObserverE(%"class.x11::Connection"*, %"class.x11::EventObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3x1120XScopedEventSelectorD1Ev(%"class.x11::XScopedEventSelector"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x1113PropertyCacheD0Ev(%"class.x11::PropertyCache"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3x1113PropertyCacheD2Ev(%"class.x11::PropertyCache"* %0) #10
  %2 = bitcast %"class.x11::PropertyCache"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"struct.x11::Response"* @_ZN3x1113PropertyCache3GetENS_4AtomE(%"class.x11::PropertyCache"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"** %3, align 8
  %5 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.268"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.268"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.268"*
  br i1 %10, label %30, label %12

12:                                               ; preds = %2
  %13 = sdiv exact i64 %9, 40
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"struct.std::__1::pair.268"* [ %4, %12 ], [ %26, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %25, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %15, i64 %17
  %19 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp ult i32 %20, %1
  %22 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %18, i64 1
  %23 = xor i64 %17, -1
  %24 = add i64 %16, %23
  %25 = select i1 %21, i64 %24, i64 %17
  %26 = select i1 %21, %"struct.std::__1::pair.268"* %22, %"struct.std::__1::pair.268"* %15
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %14

28:                                               ; preds = %14
  %29 = ptrtoint %"struct.std::__1::pair.268"* %26 to i64
  br label %30

30:                                               ; preds = %28, %2
  %31 = phi i64 [ %29, %28 ], [ %8, %2 ]
  %32 = phi %"struct.std::__1::pair.268"* [ %26, %28 ], [ %4, %2 ]
  %33 = icmp eq %"struct.std::__1::pair.268"* %32, %11
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %32, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp ugt i32 %36, %1
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %32, i64 1
  %40 = ptrtoint %"struct.std::__1::pair.268"* %39 to i64
  br label %41

41:                                               ; preds = %30, %34, %38
  %42 = phi i64 [ %40, %38 ], [ %31, %30 ], [ %31, %34 ]
  %43 = inttoptr i64 %42 to %"struct.std::__1::pair.268"*
  %44 = icmp eq %"struct.std::__1::pair.268"* %32, %43
  %45 = select i1 %44, %"struct.std::__1::pair.268"* %11, %"struct.std::__1::pair.268"* %32
  %46 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %45, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %57

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %45, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %50, align 8
  %52 = icmp eq %"class.x11::Connection::FutureImpl"* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  tail call void @_ZN3x1110Connection10FutureImpl4WaitEv(%"class.x11::Connection::FutureImpl"* nonnull %51) #10
  %54 = load i8, i8* %46, align 8
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %49, %53
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #11
  unreachable

57:                                               ; preds = %41, %53
  %58 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %45, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  ret %"struct.x11::Response"* %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x1113PropertyCache7OnEventERKNS_5EventE(%"class.x11::PropertyCache"*, %"class.x11::Event"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 73
  br i1 %5, label %6, label %118

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %8 = bitcast i8** %7 to %"struct.x11::PropertyNotifyEvent"**
  %9 = load %"struct.x11::PropertyNotifyEvent"*, %"struct.x11::PropertyNotifyEvent"** %8, align 8
  %10 = icmp eq %"struct.x11::PropertyNotifyEvent"* %9, null
  br i1 %10, label %118, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"struct.x11::PropertyNotifyEvent", %"struct.x11::PropertyNotifyEvent"* %9, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %118

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.x11::PropertyNotifyEvent", %"struct.x11::PropertyNotifyEvent"* %9, i64 0, i32 3
  %19 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"** %19, align 8
  %21 = getelementptr inbounds %"class.x11::PropertyCache", %"class.x11::PropertyCache"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast %"struct.std::__1::pair.268"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = ptrtoint %"struct.std::__1::pair.268"* %20 to i64
  %25 = sub i64 %23, %24
  %26 = icmp eq i64 %25, 0
  %27 = inttoptr i64 %23 to %"struct.std::__1::pair.268"*
  br i1 %26, label %47, label %28

28:                                               ; preds = %17
  %29 = sdiv exact i64 %25, 40
  %30 = load i32, i32* %18, align 4
  br label %31

31:                                               ; preds = %31, %28
  %32 = phi %"struct.std::__1::pair.268"* [ %20, %28 ], [ %43, %31 ]
  %33 = phi i64 [ %29, %28 ], [ %42, %31 ]
  %34 = lshr i64 %33, 1
  %35 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %32, i64 %34
  %36 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp ult i32 %37, %30
  %39 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %35, i64 1
  %40 = xor i64 %34, -1
  %41 = add i64 %33, %40
  %42 = select i1 %38, i64 %41, i64 %34
  %43 = select i1 %38, %"struct.std::__1::pair.268"* %39, %"struct.std::__1::pair.268"* %32
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %45, label %31

45:                                               ; preds = %31
  %46 = ptrtoint %"struct.std::__1::pair.268"* %43 to i64
  br label %47

47:                                               ; preds = %45, %17
  %48 = phi i64 [ %46, %45 ], [ %24, %17 ]
  %49 = phi %"struct.std::__1::pair.268"* [ %43, %45 ], [ %20, %17 ]
  %50 = icmp eq %"struct.std::__1::pair.268"* %49, %27
  br i1 %50, label %59, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %49, i64 0, i32 0
  %53 = load i32, i32* %18, align 4
  %54 = load i32, i32* %52, align 4
  %55 = icmp ult i32 %53, %54
  br i1 %55, label %59, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %49, i64 1
  %58 = ptrtoint %"struct.std::__1::pair.268"* %57 to i64
  br label %59

59:                                               ; preds = %47, %51, %56
  %60 = phi i64 [ %58, %56 ], [ %48, %47 ], [ %48, %51 ]
  %61 = inttoptr i64 %60 to %"struct.std::__1::pair.268"*
  %62 = icmp eq %"struct.std::__1::pair.268"* %49, %61
  %63 = select i1 %62, %"struct.std::__1::pair.268"* %27, %"struct.std::__1::pair.268"* %49
  %64 = icmp eq %"struct.std::__1::pair.268"* %63, %27
  br i1 %64, label %118, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"struct.x11::PropertyNotifyEvent", %"struct.x11::PropertyNotifyEvent"* %9, i64 0, i32 5
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %63, i64 0, i32 1
  tail call void @_ZN3x1113PropertyCache13FetchPropertyENS_4AtomEPNS0_13PropertyValueE(%"class.x11::PropertyCache"* %0, i32 %71, %"struct.x11::PropertyCache::PropertyValue"* %72)
  br label %118

73:                                               ; preds = %65
  %74 = tail call i8* @_Znwm(i64 24) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 24, i1 false) #10
  %75 = ptrtoint i8* %74 to i64
  %76 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %63, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %77 = load i8, i8* %76, align 8, !range !2
  %78 = icmp eq i8 %77, 0
  %79 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %63, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %78, label %114, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"struct.x11::GetPropertyReply"*, %"struct.x11::GetPropertyReply"** %81, align 8
  %83 = bitcast %"struct.x11::Response"* %79 to i64*
  store i64 %75, i64* %83, align 8
  %84 = icmp eq %"struct.x11::GetPropertyReply"* %82, null
  br i1 %84, label %103, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %82, i64 0, i32 5, i32 0
  %87 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %86, align 8
  %88 = icmp eq %"class.base::RefCountedMemory"* %87, null
  br i1 %88, label %101, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %87, i64 0, i32 1
  %91 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw sub i32* %91, i32 1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %101

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %90, i64 -2
  %96 = bitcast %"class.base::RefCountedThreadSafe.248"* %95 to %"class.base::RefCountedMemory"*
  %97 = bitcast %"class.base::RefCountedThreadSafe.248"* %95 to void (%"class.base::RefCountedMemory"*)***
  %98 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %98, i64 3
  %100 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %99, align 8
  tail call void %100(%"class.base::RefCountedMemory"* nonnull %96) #10
  br label %101

101:                                              ; preds = %94, %89, %85
  %102 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %82, i64 0, i32 0
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %101, %80
  %104 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %63, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.x11::Error"*, %"class.x11::Error"** %105, align 8
  %107 = bitcast %"class.std::__1::unique_ptr.249"* %104 to i64*
  store i64 0, i64* %107, align 8
  %108 = icmp eq %"class.x11::Error"* %106, null
  br i1 %108, label %118, label %109

109:                                              ; preds = %103
  %110 = bitcast %"class.x11::Error"* %106 to void (%"class.x11::Error"*)***
  %111 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %111, i64 1
  %113 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %112, align 8
  tail call void %113(%"class.x11::Error"* nonnull %106) #10
  br label %118

114:                                              ; preds = %73
  %115 = bitcast %"struct.x11::Response"* %79 to i64*
  store i64 %75, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %63, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %117 = bitcast %"class.std::__1::unique_ptr.249"* %116 to i64*
  store i64 0, i64* %117, align 8
  store i8 1, i8* %76, align 8
  br label %118

118:                                              ; preds = %2, %59, %69, %103, %109, %114, %11, %6
  ret void
}

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto11GetPropertyERKNS_18GetPropertyRequestE(%"class.x11::XProto"*, %"struct.x11::GetPropertyRequest"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x1113PropertyCache21OnGetPropertyResponseEPNS0_13PropertyValueENS_8ResponseINS_16GetPropertyReplyEEE(%"class.x11::PropertyCache"* nocapture readnone, %"struct.x11::PropertyCache::PropertyValue"* nocapture, %"struct.x11::GetPropertyReply"*, %"class.x11::Error"*) #0 align 2 {
  %5 = ptrtoint %"struct.x11::GetPropertyReply"* %2 to i64
  %6 = ptrtoint %"class.x11::Error"* %3 to i64
  %7 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %9, label %45, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.x11::GetPropertyReply"*, %"struct.x11::GetPropertyReply"** %12, align 8
  %14 = bitcast %"struct.x11::Response"* %10 to i64*
  store i64 %5, i64* %14, align 8
  %15 = icmp eq %"struct.x11::GetPropertyReply"* %13, null
  br i1 %15, label %34, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %13, i64 0, i32 5, i32 0
  %18 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %17, align 8
  %19 = icmp eq %"class.base::RefCountedMemory"* %18, null
  br i1 %19, label %32, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %18, i64 0, i32 1
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %32

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %21, i64 -2
  %27 = bitcast %"class.base::RefCountedThreadSafe.248"* %26 to %"class.base::RefCountedMemory"*
  %28 = bitcast %"class.base::RefCountedThreadSafe.248"* %26 to void (%"class.base::RefCountedMemory"*)***
  %29 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %29, i64 3
  %31 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %30, align 8
  tail call void %31(%"class.base::RefCountedMemory"* nonnull %27) #10
  br label %32

32:                                               ; preds = %25, %20, %16
  %33 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %13, i64 0, i32 0
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %32, %11
  %35 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.x11::Error"*, %"class.x11::Error"** %36, align 8
  %38 = bitcast %"class.std::__1::unique_ptr.249"* %35 to i64*
  store i64 %6, i64* %38, align 8
  %39 = icmp eq %"class.x11::Error"* %37, null
  br i1 %39, label %49, label %40

40:                                               ; preds = %34
  %41 = bitcast %"class.x11::Error"* %37 to void (%"class.x11::Error"*)***
  %42 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %42, i64 1
  %44 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %43, align 8
  tail call void %44(%"class.x11::Error"* nonnull %37) #10
  br label %49

45:                                               ; preds = %4
  %46 = bitcast %"struct.x11::Response"* %10 to i64*
  store i64 %5, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %48 = bitcast %"class.std::__1::unique_ptr.249"* %47 to i64*
  store i64 %6, i64* %48, align 8
  store i8 1, i8* %7, align 8
  br label %49

49:                                               ; preds = %34, %40, %45
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3x1113PropertyCache13PropertyValueC2Ev(%"struct.x11::PropertyCache::PropertyValue"* nocapture) unnamed_addr #5 align 2 {
  %2 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %0 to i64*
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x1113PropertyCache13PropertyValueC2EOS1_(%"struct.x11::PropertyCache::PropertyValue"* nocapture, %"struct.x11::PropertyCache::PropertyValue"* nocapture dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %3, align 8
  %6 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #10
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"struct.x11::Response"* %12 to i64*
  %16 = load i64, i64* %15, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %14, align 8
  %17 = bitcast %"struct.x11::Response"* %13 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr.249"* %19 to i64*
  %22 = load i64, i64* %21, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %20, align 8
  %23 = bitcast %"class.std::__1::unique_ptr.249"* %18 to i64*
  store i64 %22, i64* %23, align 8
  store i8 1, i8* %7, align 8
  br label %24

24:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.x11::PropertyCache::PropertyValue"* @_ZN3x1113PropertyCache13PropertyValueaSEOS1_(%"struct.x11::PropertyCache::PropertyValue"* returned, %"struct.x11::PropertyCache::PropertyValue"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %3, align 8
  %6 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %6, align 8
  %8 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = icmp eq %"class.x11::Connection::FutureImpl"* %7, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.x11::Connection::FutureImpl"* %7 to i8*
  tail call void @_ZdlPv(i8* %11) #12
  br label %12

12:                                               ; preds = %2, %10
  %13 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %0, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %1, i64 0, i32 1, i32 0
  %15 = tail call dereferenceable(24) %"class.absl::optional_internal::optional_data.276"* @_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_(%"class.absl::optional_internal::optional_data.276"* %13, %"class.absl::optional_internal::optional_data.276"* dereferenceable(24) %14) #10
  ret %"struct.x11::PropertyCache::PropertyValue"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x1113PropertyCache13PropertyValueD2Ev(%"struct.x11::PropertyCache::PropertyValue"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %37, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.x11::Error"*, %"class.x11::Error"** %6, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %6, align 8
  %8 = icmp eq %"class.x11::Error"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.x11::Error"* %7 to void (%"class.x11::Error"*)***
  %11 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %11, i64 1
  %13 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %12, align 8
  tail call void %13(%"class.x11::Error"* nonnull %7) #10
  br label %14

14:                                               ; preds = %9, %5
  %15 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"struct.x11::GetPropertyReply"*, %"struct.x11::GetPropertyReply"** %15, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %15, align 8
  %17 = icmp eq %"struct.x11::GetPropertyReply"* %16, null
  br i1 %17, label %36, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %16, i64 0, i32 5, i32 0
  %20 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %19, align 8
  %21 = icmp eq %"class.base::RefCountedMemory"* %20, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %20, i64 0, i32 1
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %34

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %23, i64 -2
  %29 = bitcast %"class.base::RefCountedThreadSafe.248"* %28 to %"class.base::RefCountedMemory"*
  %30 = bitcast %"class.base::RefCountedThreadSafe.248"* %28 to void (%"class.base::RefCountedMemory"*)***
  %31 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %31, i64 3
  %33 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %32, align 8
  tail call void %33(%"class.base::RefCountedMemory"* nonnull %29) #10
  br label %34

34:                                               ; preds = %27, %22, %18
  %35 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %16, i64 0, i32 0
  tail call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %34, %14
  store i8 0, i8* %2, align 8
  br label %37

37:                                               ; preds = %1, %36
  %38 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %38, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %38, align 8
  %40 = icmp eq %"class.x11::Connection::FutureImpl"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.x11::Connection::FutureImpl"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeIN3x114AtomENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS2_13PropertyCache13PropertyValueEEENS5_9allocatorISC_EEEEE15sort_and_uniqueENS5_11__wrap_iterIPSC_EESJ_(%"class.base::internal::flat_tree.265"*, %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare", align 1
  %5 = ptrtoint %"struct.std::__1::pair.268"* %2 to i64
  %6 = getelementptr inbounds %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare", %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  %7 = ptrtoint %"struct.std::__1::pair.268"* %1 to i64
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = icmp sgt i64 %8, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %3
  %12 = icmp slt i64 %9, 230584300921369395
  %13 = select i1 %12, i64 %9, i64 230584300921369395
  br label %14

14:                                               ; preds = %19, %11
  %15 = phi i64 [ %20, %19 ], [ %13, %11 ]
  %16 = mul i64 %15, 40
  %17 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %16, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #10
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = lshr i64 %15, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %14

22:                                               ; preds = %19, %3
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeEl(%"struct.std::__1::pair.268"* %1, %"struct.std::__1::pair.268"* %2, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"struct.std::__1::pair.268"* null, i64 0) #10
  br label %25

23:                                               ; preds = %14
  %24 = bitcast i8* %17 to %"struct.std::__1::pair.268"*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeEl(%"struct.std::__1::pair.268"* %1, %"struct.std::__1::pair.268"* %2, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"struct.std::__1::pair.268"* nonnull %24, i64 %15) #10
  call void @_ZdlPv(i8* nonnull %17) #12
  br label %25

25:                                               ; preds = %22, %23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  %26 = icmp eq %"struct.std::__1::pair.268"* %1, %2
  br i1 %26, label %85, label %27

27:                                               ; preds = %25, %31
  %28 = phi %"struct.std::__1::pair.268"* [ %29, %31 ], [ %1, %25 ]
  %29 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %28, i64 1
  %30 = icmp eq %"struct.std::__1::pair.268"* %29, %2
  br i1 %30, label %85, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %28, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %29, i64 0, i32 0
  %34 = load i32, i32* %32, align 4
  %35 = load i32, i32* %33, align 4
  %36 = icmp ult i32 %34, %35
  br i1 %36, label %27, label %37

37:                                               ; preds = %31
  %38 = ptrtoint %"struct.std::__1::pair.268"* %28 to i64
  %39 = icmp eq %"struct.std::__1::pair.268"* %28, %2
  br i1 %39, label %85, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %28, i64 2
  %42 = icmp eq %"struct.std::__1::pair.268"* %41, %2
  br i1 %42, label %81, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %28, i64 1
  br label %45

45:                                               ; preds = %74, %43
  %46 = phi %"struct.std::__1::pair.268"* [ %78, %74 ], [ %28, %43 ]
  %47 = phi %"struct.std::__1::pair.268"* [ %76, %74 ], [ %41, %43 ]
  %48 = phi %"struct.std::__1::pair.268"* [ %47, %74 ], [ %44, %43 ]
  %49 = phi i64 [ %75, %74 ], [ %38, %43 ]
  %50 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %46, i64 0, i32 0
  %51 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %47, i64 0, i32 0
  %52 = load i32, i32* %50, align 4
  %53 = load i32, i32* %51, align 4
  %54 = icmp ult i32 %52, %53
  br i1 %54, label %55, label %74

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %46, i64 1
  %57 = ptrtoint %"struct.std::__1::pair.268"* %56 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %56, i64 0, i32 0
  store i32 %53, i32* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %48, i64 1, i32 1
  %60 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %46, i64 1, i32 1
  %61 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %59 to i64*
  %63 = load i64, i64* %62, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %61, align 8
  %64 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %64, align 8
  %66 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %60 to i64*
  store i64 %63, i64* %66, align 8
  %67 = icmp eq %"class.x11::Connection::FutureImpl"* %65, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %55
  %69 = bitcast %"class.x11::Connection::FutureImpl"* %65 to i8*
  call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %68, %55
  %71 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %46, i64 1, i32 1, i32 1, i32 0
  %72 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %48, i64 1, i32 1, i32 1, i32 0
  %73 = call dereferenceable(24) %"class.absl::optional_internal::optional_data.276"* @_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_(%"class.absl::optional_internal::optional_data.276"* %71, %"class.absl::optional_internal::optional_data.276"* dereferenceable(24) %72) #10
  br label %74

74:                                               ; preds = %70, %45
  %75 = phi i64 [ %49, %45 ], [ %57, %70 ]
  %76 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %47, i64 1
  %77 = icmp eq %"struct.std::__1::pair.268"* %76, %2
  %78 = inttoptr i64 %75 to %"struct.std::__1::pair.268"*
  br i1 %77, label %79, label %45

79:                                               ; preds = %74
  %80 = inttoptr i64 %75 to %"struct.std::__1::pair.268"*
  br label %81

81:                                               ; preds = %79, %40
  %82 = phi %"struct.std::__1::pair.268"* [ %28, %40 ], [ %80, %79 ]
  %83 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %82, i64 1
  %84 = ptrtoint %"struct.std::__1::pair.268"* %83 to i64
  br label %85

85:                                               ; preds = %27, %25, %37, %81
  %86 = phi i64 [ %84, %81 ], [ %38, %37 ], [ %5, %25 ], [ %5, %27 ]
  %87 = inttoptr i64 %86 to %"struct.std::__1::pair.268"*
  %88 = getelementptr inbounds %"class.base::internal::flat_tree.265", %"class.base::internal::flat_tree.265"* %0, i64 0, i32 0
  %89 = call %"struct.std::__1::pair.268"* @_ZNSt3__16vectorINS_4pairIN3x114AtomENS2_13PropertyCache13PropertyValueEEENS_9allocatorIS6_EEE5eraseENS_11__wrap_iterIPKS6_EESD_(%"class.std::__1::vector.266"* %88, %"struct.std::__1::pair.268"* %87, %"struct.std::__1::pair.268"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeEl(%"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1), i64, %"struct.std::__1::pair.268"*, i64) local_unnamed_addr #0 comdat {
  switch i64 %3, label %16 [
    i64 0, label %78
    i64 1, label %78
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %1, i64 -1, i32 0
  %9 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 0
  %10 = load i32, i32* %8, align 4
  %11 = load i32, i32* %9, align 4
  %12 = icmp ult i32 %10, %11
  br i1 %12, label %13, label %78

13:                                               ; preds = %7
  store i32 %10, i32* %9, align 4
  store i32 %11, i32* %8, align 4
  %14 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %1, i64 -1, i32 1
  tail call void @_ZNSt3__14swapIN3x1113PropertyCache13PropertyValueEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.x11::PropertyCache::PropertyValue"* dereferenceable(32) %14, %"struct.x11::PropertyCache::PropertyValue"* dereferenceable(32) %15) #10
  br label %78

16:                                               ; preds = %6
  %17 = icmp slt i64 %3, 1
  br i1 %17, label %18, label %19

18:                                               ; preds = %16
  tail call void @_ZNSt3__116__insertion_sortIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_T_(%"struct.std::__1::pair.268"* %0, %"struct.std::__1::pair.268"* %1, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1) %2)
  br label %78

19:                                               ; preds = %16
  %20 = lshr i64 %3, 1
  %21 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 %20
  %22 = icmp sgt i64 %3, %5
  br i1 %22, label %76, label %23

23:                                               ; preds = %19
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeE(%"struct.std::__1::pair.268"* %0, %"struct.std::__1::pair.268"* %21, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1) %2, i64 %20, %"struct.std::__1::pair.268"* %4)
  %24 = sub nsw i64 %3, %20
  %25 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 %20
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeE(%"struct.std::__1::pair.268"* %21, %"struct.std::__1::pair.268"* %1, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1) %2, i64 %24, %"struct.std::__1::pair.268"* %25)
  %26 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 %3
  tail call void @_ZNSt3__119__merge_move_assignIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareEPSD_SK_NS_11__wrap_iterISK_EEEEvT0_SN_T1_SO_T2_T_(%"struct.std::__1::pair.268"* %4, %"struct.std::__1::pair.268"* %25, %"struct.std::__1::pair.268"* %25, %"struct.std::__1::pair.268"* %26, %"struct.std::__1::pair.268"* %0, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1) %2)
  %27 = icmp eq %"struct.std::__1::pair.268"* %4, null
  br i1 %27, label %78, label %28

28:                                               ; preds = %23, %72
  %29 = phi i64 [ %73, %72 ], [ 0, %23 ]
  %30 = phi %"struct.std::__1::pair.268"* [ %74, %72 ], [ %4, %23 ]
  %31 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %30, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %66, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %30, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.x11::Error"*, %"class.x11::Error"** %35, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %35, align 8
  %37 = icmp eq %"class.x11::Error"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.x11::Error"* %36 to void (%"class.x11::Error"*)***
  %40 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %40, i64 1
  %42 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %41, align 8
  tail call void %42(%"class.x11::Error"* nonnull %36) #10
  br label %43

43:                                               ; preds = %38, %34
  %44 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %30, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"struct.x11::GetPropertyReply"*, %"struct.x11::GetPropertyReply"** %44, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %44, align 8
  %46 = icmp eq %"struct.x11::GetPropertyReply"* %45, null
  br i1 %46, label %65, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %45, i64 0, i32 5, i32 0
  %49 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %48, align 8
  %50 = icmp eq %"class.base::RefCountedMemory"* %49, null
  br i1 %50, label %63, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %49, i64 0, i32 1
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw sub i32* %53, i32 1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %63

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %52, i64 -2
  %58 = bitcast %"class.base::RefCountedThreadSafe.248"* %57 to %"class.base::RefCountedMemory"*
  %59 = bitcast %"class.base::RefCountedThreadSafe.248"* %57 to void (%"class.base::RefCountedMemory"*)***
  %60 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %60, i64 3
  %62 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %61, align 8
  tail call void %62(%"class.base::RefCountedMemory"* nonnull %58) #10
  br label %63

63:                                               ; preds = %56, %51, %47
  %64 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %45, i64 0, i32 0
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %63, %43
  store i8 0, i8* %31, align 8
  br label %66

66:                                               ; preds = %65, %28
  %67 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %30, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %67, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %67, align 8
  %69 = icmp eq %"class.x11::Connection::FutureImpl"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %66
  %71 = bitcast %"class.x11::Connection::FutureImpl"* %68 to i8*
  tail call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %70, %66
  %73 = add nuw i64 %29, 1
  %74 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %30, i64 1
  %75 = icmp eq i64 %73, %3
  br i1 %75, label %78, label %28

76:                                               ; preds = %19
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeEl(%"struct.std::__1::pair.268"* %0, %"struct.std::__1::pair.268"* %21, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1) %2, i64 %20, %"struct.std::__1::pair.268"* %4, i64 %5)
  %77 = sub nsw i64 %3, %20
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeEl(%"struct.std::__1::pair.268"* %21, %"struct.std::__1::pair.268"* %1, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1) %2, i64 %77, %"struct.std::__1::pair.268"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_SN_T_NS_15iterator_traitsISN_E15difference_typeESR_PNSQ_10value_typeEl(%"struct.std::__1::pair.268"* %0, %"struct.std::__1::pair.268"* %21, %"struct.std::__1::pair.268"* %1, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1) %2, i64 %20, i64 %77, %"struct.std::__1::pair.268"* %4, i64 %5)
  ret void

78:                                               ; preds = %72, %23, %7, %13, %6, %6, %18
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__insertion_sortIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_T_(%"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.std::__1::pair.268", align 8
  %5 = icmp eq %"struct.std::__1::pair.268"* %0, %1
  br i1 %5, label %124, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 1
  %8 = icmp eq %"struct.std::__1::pair.268"* %7, %1
  br i1 %8, label %124, label %9

9:                                                ; preds = %6
  %10 = bitcast %"struct.std::__1::pair.268"* %4 to i8*
  %11 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 1
  %13 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %12 to i64*
  %14 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %16 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 1, i32 1, i32 0
  %18 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.std::__1::pair.268"* %4 to i64*
  %22 = bitcast %"struct.x11::Response"* %15 to <2 x i64>*
  br label %23

23:                                               ; preds = %9, %102
  %24 = phi %"struct.std::__1::pair.268"* [ %7, %9 ], [ %103, %102 ]
  %25 = phi %"struct.std::__1::pair.268"* [ %0, %9 ], [ %24, %102 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #10
  store i64 -6148914691236517206, i64* %21, align 8
  %26 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %24, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %11, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %25, i64 1, i32 1
  %29 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %28 to i64*
  %31 = load i64, i64* %30, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %29, align 8
  store i64 %31, i64* %13, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %25, i64 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #10
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %23
  %36 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %25, i64 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"struct.x11::Response"* %36 to <2 x i64>*
  %39 = load <2 x i64>, <2 x i64>* %38, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %37, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %25, i64 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.x11::Error"* null, %"class.x11::Error"** %40, align 8
  store <2 x i64> %39, <2 x i64>* %22, align 8
  store i8 1, i8* %14, align 8
  br label %41

41:                                               ; preds = %23, %35
  %42 = icmp eq %"struct.std::__1::pair.268"* %24, %0
  br i1 %42, label %50, label %43

43:                                               ; preds = %41, %118
  %44 = phi i32 [ %123, %118 ], [ %27, %41 ]
  %45 = phi %"struct.std::__1::pair.268"* [ %46, %118 ], [ %24, %41 ]
  %46 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %45, i64 -1
  %47 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %46, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp ult i32 %44, %48
  br i1 %49, label %105, label %50

50:                                               ; preds = %118, %43, %41
  %51 = phi i32 [ %27, %41 ], [ %44, %43 ], [ %123, %118 ]
  %52 = phi %"struct.std::__1::pair.268"* [ %0, %41 ], [ %45, %43 ], [ %0, %118 ]
  %53 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %52, i64 0, i32 0
  store i32 %51, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %52, i64 0, i32 1
  %55 = load i64, i64* %13, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %16, align 8
  %56 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %56, align 8
  %58 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %54 to i64*
  store i64 %55, i64* %58, align 8
  %59 = icmp eq %"class.x11::Connection::FutureImpl"* %57, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %50
  %61 = bitcast %"class.x11::Connection::FutureImpl"* %57 to i8*
  call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %50, %60
  %63 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %52, i64 0, i32 1, i32 1, i32 0
  %64 = call dereferenceable(24) %"class.absl::optional_internal::optional_data.276"* @_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_(%"class.absl::optional_internal::optional_data.276"* %63, %"class.absl::optional_internal::optional_data.276"* dereferenceable(24) %17) #10
  %65 = load i8, i8* %14, align 8, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %97, label %67

67:                                               ; preds = %62
  %68 = load %"class.x11::Error"*, %"class.x11::Error"** %18, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %18, align 8
  %69 = icmp eq %"class.x11::Error"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %67
  %71 = bitcast %"class.x11::Error"* %68 to void (%"class.x11::Error"*)***
  %72 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %72, i64 1
  %74 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %73, align 8
  call void %74(%"class.x11::Error"* nonnull %68) #10
  br label %75

75:                                               ; preds = %70, %67
  %76 = load %"struct.x11::GetPropertyReply"*, %"struct.x11::GetPropertyReply"** %19, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %19, align 8
  %77 = icmp eq %"struct.x11::GetPropertyReply"* %76, null
  br i1 %77, label %96, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %76, i64 0, i32 5, i32 0
  %80 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %79, align 8
  %81 = icmp eq %"class.base::RefCountedMemory"* %80, null
  br i1 %81, label %94, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %80, i64 0, i32 1
  %84 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw sub i32* %84, i32 1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %94

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %83, i64 -2
  %89 = bitcast %"class.base::RefCountedThreadSafe.248"* %88 to %"class.base::RefCountedMemory"*
  %90 = bitcast %"class.base::RefCountedThreadSafe.248"* %88 to void (%"class.base::RefCountedMemory"*)***
  %91 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %91, i64 3
  %93 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %92, align 8
  call void %93(%"class.base::RefCountedMemory"* nonnull %89) #10
  br label %94

94:                                               ; preds = %87, %82, %78
  %95 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %76, i64 0, i32 0
  call void @_ZdlPv(i8* %95) #12
  br label %96

96:                                               ; preds = %94, %75
  store i8 0, i8* %14, align 8
  br label %97

97:                                               ; preds = %96, %62
  %98 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %20, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %20, align 8
  %99 = icmp eq %"class.x11::Connection::FutureImpl"* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %97
  %101 = bitcast %"class.x11::Connection::FutureImpl"* %98 to i8*
  call void @_ZdlPv(i8* %101) #12
  br label %102

102:                                              ; preds = %97, %100
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #10
  %103 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %24, i64 1
  %104 = icmp eq %"struct.std::__1::pair.268"* %103, %1
  br i1 %104, label %124, label %23

105:                                              ; preds = %43
  %106 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %45, i64 0, i32 0
  store i32 %48, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %45, i64 -1, i32 1
  %108 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %45, i64 0, i32 1
  %109 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %107 to i64*
  %111 = load i64, i64* %110, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %109, align 8
  %112 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %112, align 8
  %114 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %108 to i64*
  store i64 %111, i64* %114, align 8
  %115 = icmp eq %"class.x11::Connection::FutureImpl"* %113, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %105
  %117 = bitcast %"class.x11::Connection::FutureImpl"* %113 to i8*
  call void @_ZdlPv(i8* %117) #12
  br label %118

118:                                              ; preds = %105, %116
  %119 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %45, i64 0, i32 1, i32 1, i32 0
  %120 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %45, i64 -1, i32 1, i32 1, i32 0
  %121 = call dereferenceable(24) %"class.absl::optional_internal::optional_data.276"* @_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_(%"class.absl::optional_internal::optional_data.276"* %119, %"class.absl::optional_internal::optional_data.276"* dereferenceable(24) %120) #10
  %122 = icmp eq %"struct.std::__1::pair.268"* %46, %0
  %123 = load i32, i32* %11, align 8
  br i1 %122, label %50, label %43

124:                                              ; preds = %102, %6, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeE(%"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1), i64, %"struct.std::__1::pair.268"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %140 [
    i64 0, label %148
    i64 1, label %6
    i64 2, label %33
  ]

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %11 to i64*
  %14 = load i64, i64* %13, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %12, align 8
  %15 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %10 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #10
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %148, label %20

20:                                               ; preds = %6
  %21 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = bitcast %"struct.x11::Response"* %21 to i64*
  %25 = load i64, i64* %24, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %23, align 8
  %26 = bitcast %"struct.x11::Response"* %22 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %28 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.std::__1::unique_ptr.249"* %28 to i64*
  %31 = load i64, i64* %30, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %29, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.249"* %27 to i64*
  store i64 %31, i64* %32, align 8
  store i8 1, i8* %16, align 8
  br label %148

33:                                               ; preds = %5
  %34 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %1, i64 -1, i32 0
  %35 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 0
  %36 = load i32, i32* %34, align 4
  %37 = load i32, i32* %35, align 4
  %38 = icmp ult i32 %36, %37
  %39 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 0
  br i1 %38, label %40, label %90

40:                                               ; preds = %33
  store i32 %36, i32* %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %1, i64 -1, i32 1
  %43 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %42 to i64*
  %45 = load i64, i64* %44, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %43, align 8
  %46 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %41 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %1, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #10
  %49 = load i8, i8* %48, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %1, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %53 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %54 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = bitcast %"struct.x11::Response"* %52 to i64*
  %56 = load i64, i64* %55, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %54, align 8
  %57 = bitcast %"struct.x11::Response"* %53 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %59 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %1, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.std::__1::unique_ptr.249"* %59 to i64*
  %62 = load i64, i64* %61, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %60, align 8
  %63 = bitcast %"class.std::__1::unique_ptr.249"* %58 to i64*
  store i64 %62, i64* %63, align 8
  store i8 1, i8* %47, align 8
  br label %64

64:                                               ; preds = %40, %51
  %65 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 1, i32 0
  %66 = load i32, i32* %35, align 8
  store i32 %66, i32* %65, align 8
  %67 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 1, i32 1
  %68 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 1
  %69 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %69, align 8
  %72 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %67 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #10
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %148, label %77

77:                                               ; preds = %64
  %78 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %79 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %80 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %78, i64 0, i32 0, i32 0, i32 0, i32 0
  %81 = bitcast %"struct.x11::Response"* %78 to i64*
  %82 = load i64, i64* %81, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %80, align 8
  %83 = bitcast %"struct.x11::Response"* %79 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %85 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = bitcast %"class.std::__1::unique_ptr.249"* %85 to i64*
  %88 = load i64, i64* %87, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %86, align 8
  %89 = bitcast %"class.std::__1::unique_ptr.249"* %84 to i64*
  store i64 %88, i64* %89, align 8
  store i8 1, i8* %73, align 8
  br label %148

90:                                               ; preds = %33
  store i32 %37, i32* %39, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 1
  %92 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 1
  %93 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %93, align 8
  %96 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 24, i1 false) #10
  %99 = load i8, i8* %98, align 8, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %114, label %101

101:                                              ; preds = %90
  %102 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %103 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %104 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %102, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = bitcast %"struct.x11::Response"* %102 to i64*
  %106 = load i64, i64* %105, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %104, align 8
  %107 = bitcast %"struct.x11::Response"* %103 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %109 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %109, i64 0, i32 0, i32 0, i32 0
  %111 = bitcast %"class.std::__1::unique_ptr.249"* %109 to i64*
  %112 = load i64, i64* %111, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %110, align 8
  %113 = bitcast %"class.std::__1::unique_ptr.249"* %108 to i64*
  store i64 %112, i64* %113, align 8
  store i8 1, i8* %97, align 8
  br label %114

114:                                              ; preds = %90, %101
  %115 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 1, i32 0
  %116 = load i32, i32* %34, align 8
  store i32 %116, i32* %115, align 8
  %117 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 1, i32 1
  %118 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %1, i64 -1, i32 1
  %119 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %118 to i64*
  %121 = load i64, i64* %120, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %119, align 8
  %122 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %117 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %124 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %1, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 24, i1 false) #10
  %125 = load i8, i8* %124, align 8, !range !2
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %148, label %127

127:                                              ; preds = %114
  %128 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %1, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %129 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %130 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  %131 = bitcast %"struct.x11::Response"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %130, align 8
  %133 = bitcast %"struct.x11::Response"* %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %135 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %1, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %135, i64 0, i32 0, i32 0, i32 0
  %137 = bitcast %"class.std::__1::unique_ptr.249"* %135 to i64*
  %138 = load i64, i64* %137, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %136, align 8
  %139 = bitcast %"class.std::__1::unique_ptr.249"* %134 to i64*
  store i64 %138, i64* %139, align 8
  store i8 1, i8* %123, align 8
  br label %148

140:                                              ; preds = %5
  %141 = icmp slt i64 %3, 9
  br i1 %141, label %142, label %143

142:                                              ; preds = %140
  tail call void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_PNS_15iterator_traitsISN_E10value_typeET_(%"struct.std::__1::pair.268"* %0, %"struct.std::__1::pair.268"* %1, %"struct.std::__1::pair.268"* %4, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1) %2)
  br label %148

143:                                              ; preds = %140
  %144 = lshr i64 %3, 1
  %145 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 %144
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeEl(%"struct.std::__1::pair.268"* %0, %"struct.std::__1::pair.268"* %145, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1) %2, i64 %144, %"struct.std::__1::pair.268"* %4, i64 %144)
  %146 = sub nsw i64 %3, %144
  %147 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %4, i64 %144
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeEl(%"struct.std::__1::pair.268"* %145, %"struct.std::__1::pair.268"* %1, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1) %2, i64 %146, %"struct.std::__1::pair.268"* %147, i64 %146)
  tail call void @_ZNSt3__122__merge_move_constructIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EESM_EEvT0_SN_T1_SO_PNS_15iterator_traitsISN_E10value_typeET_(%"struct.std::__1::pair.268"* %0, %"struct.std::__1::pair.268"* %145, %"struct.std::__1::pair.268"* %145, %"struct.std::__1::pair.268"* %1, %"struct.std::__1::pair.268"* %4, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1) %2)
  br label %148

148:                                              ; preds = %127, %114, %77, %64, %20, %6, %5, %143, %142
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__119__merge_move_assignIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareEPSD_SK_NS_11__wrap_iterISK_EEEEvT0_SN_T1_SO_T2_T_(%"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"struct.std::__1::pair.268"* %0, %1
  br i1 %7, label %8, label %12

8:                                                ; preds = %84, %6
  %9 = phi %"struct.std::__1::pair.268"* [ %4, %6 ], [ %87, %84 ]
  %10 = phi %"struct.std::__1::pair.268"* [ %2, %6 ], [ %85, %84 ]
  %11 = icmp eq %"struct.std::__1::pair.268"* %10, %3
  br i1 %11, label %113, label %89

12:                                               ; preds = %6, %84
  %13 = phi %"struct.std::__1::pair.268"* [ %86, %84 ], [ %0, %6 ]
  %14 = phi %"struct.std::__1::pair.268"* [ %85, %84 ], [ %2, %6 ]
  %15 = phi %"struct.std::__1::pair.268"* [ %87, %84 ], [ %4, %6 ]
  %16 = icmp eq %"struct.std::__1::pair.268"* %14, %3
  br i1 %16, label %17, label %43

17:                                               ; preds = %12
  %18 = icmp eq %"struct.std::__1::pair.268"* %13, %1
  br i1 %18, label %113, label %19

19:                                               ; preds = %17, %36
  %20 = phi %"struct.std::__1::pair.268"* [ %40, %36 ], [ %13, %17 ]
  %21 = phi %"struct.std::__1::pair.268"* [ %41, %36 ], [ %15, %17 ]
  %22 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %20, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %21, i64 0, i32 0
  store i32 %23, i32* %24, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %20, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %21, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %25 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %27, align 8
  %30 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %30, align 8
  %32 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %26 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.x11::Connection::FutureImpl"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %19
  %35 = bitcast %"class.x11::Connection::FutureImpl"* %31 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %19, %34
  %37 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %21, i64 0, i32 1, i32 1, i32 0
  %38 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %20, i64 0, i32 1, i32 1, i32 0
  %39 = tail call dereferenceable(24) %"class.absl::optional_internal::optional_data.276"* @_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_(%"class.absl::optional_internal::optional_data.276"* %37, %"class.absl::optional_internal::optional_data.276"* dereferenceable(24) %38) #10
  %40 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %20, i64 1
  %41 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %21, i64 1
  %42 = icmp eq %"struct.std::__1::pair.268"* %40, %1
  br i1 %42, label %113, label %19

43:                                               ; preds = %12
  %44 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %14, i64 0, i32 0
  %45 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %13, i64 0, i32 0
  %46 = load i32, i32* %44, align 4
  %47 = load i32, i32* %45, align 4
  %48 = icmp ult i32 %46, %47
  %49 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %15, i64 0, i32 0
  br i1 %48, label %50, label %67

50:                                               ; preds = %43
  store i32 %46, i32* %49, align 8
  %51 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %14, i64 0, i32 1
  %52 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %15, i64 0, i32 1
  %53 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %53, align 8
  %56 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %56, align 8
  %58 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %52 to i64*
  store i64 %55, i64* %58, align 8
  %59 = icmp eq %"class.x11::Connection::FutureImpl"* %57, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %50
  %61 = bitcast %"class.x11::Connection::FutureImpl"* %57 to i8*
  tail call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %50, %60
  %63 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %15, i64 0, i32 1, i32 1, i32 0
  %64 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %14, i64 0, i32 1, i32 1, i32 0
  %65 = tail call dereferenceable(24) %"class.absl::optional_internal::optional_data.276"* @_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_(%"class.absl::optional_internal::optional_data.276"* %63, %"class.absl::optional_internal::optional_data.276"* dereferenceable(24) %64) #10
  %66 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %14, i64 1
  br label %84

67:                                               ; preds = %43
  store i32 %47, i32* %49, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %13, i64 0, i32 1
  %69 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %15, i64 0, i32 1
  %70 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %68 to i64*
  %72 = load i64, i64* %71, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %70, align 8
  %73 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %73, align 8
  %75 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %69 to i64*
  store i64 %72, i64* %75, align 8
  %76 = icmp eq %"class.x11::Connection::FutureImpl"* %74, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %67
  %78 = bitcast %"class.x11::Connection::FutureImpl"* %74 to i8*
  tail call void @_ZdlPv(i8* %78) #12
  br label %79

79:                                               ; preds = %67, %77
  %80 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %15, i64 0, i32 1, i32 1, i32 0
  %81 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %13, i64 0, i32 1, i32 1, i32 0
  %82 = tail call dereferenceable(24) %"class.absl::optional_internal::optional_data.276"* @_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_(%"class.absl::optional_internal::optional_data.276"* %80, %"class.absl::optional_internal::optional_data.276"* dereferenceable(24) %81) #10
  %83 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %13, i64 1
  br label %84

84:                                               ; preds = %62, %79
  %85 = phi %"struct.std::__1::pair.268"* [ %66, %62 ], [ %14, %79 ]
  %86 = phi %"struct.std::__1::pair.268"* [ %13, %62 ], [ %83, %79 ]
  %87 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %15, i64 1
  %88 = icmp eq %"struct.std::__1::pair.268"* %86, %1
  br i1 %88, label %8, label %12

89:                                               ; preds = %8, %106
  %90 = phi %"struct.std::__1::pair.268"* [ %110, %106 ], [ %10, %8 ]
  %91 = phi %"struct.std::__1::pair.268"* [ %111, %106 ], [ %9, %8 ]
  %92 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %90, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %91, i64 0, i32 0
  store i32 %93, i32* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %90, i64 0, i32 1
  %96 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %91, i64 0, i32 1
  %97 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %95 to i64*
  %99 = load i64, i64* %98, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %97, align 8
  %100 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %100, align 8
  %102 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %96 to i64*
  store i64 %99, i64* %102, align 8
  %103 = icmp eq %"class.x11::Connection::FutureImpl"* %101, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %89
  %105 = bitcast %"class.x11::Connection::FutureImpl"* %101 to i8*
  tail call void @_ZdlPv(i8* %105) #12
  br label %106

106:                                              ; preds = %89, %104
  %107 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %91, i64 0, i32 1, i32 1, i32 0
  %108 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %90, i64 0, i32 1, i32 1, i32 0
  %109 = tail call dereferenceable(24) %"class.absl::optional_internal::optional_data.276"* @_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_(%"class.absl::optional_internal::optional_data.276"* %107, %"class.absl::optional_internal::optional_data.276"* dereferenceable(24) %108) #10
  %110 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %90, i64 1
  %111 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %91, i64 1
  %112 = icmp eq %"struct.std::__1::pair.268"* %110, %3
  br i1 %112, label %113, label %89

113:                                              ; preds = %36, %106, %17, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_SN_T_NS_15iterator_traitsISN_E15difference_typeESR_PNSQ_10value_typeEl(%"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1), i64, i64, %"struct.std::__1::pair.268"*, i64) local_unnamed_addr #0 comdat {
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %197, label %10

10:                                               ; preds = %8
  %11 = ptrtoint %"struct.std::__1::pair.268"* %1 to i64
  %12 = ptrtoint %"struct.std::__1::pair.268"* %0 to i64
  br label %13

13:                                               ; preds = %10, %190
  %14 = phi %"struct.std::__1::pair.268"* [ %195, %190 ], [ %2, %10 ]
  %15 = phi i64 [ %194, %190 ], [ %4, %10 ]
  %16 = phi i64 [ %193, %190 ], [ %5, %10 ]
  %17 = phi i64 [ %192, %190 ], [ %11, %10 ]
  %18 = phi i64 [ %191, %190 ], [ %12, %10 ]
  %19 = icmp sgt i64 %15, %7
  %20 = icmp sgt i64 %16, %7
  %21 = and i1 %20, %19
  br i1 %21, label %22, label %28

22:                                               ; preds = %13
  %23 = icmp eq i64 %15, 0
  br i1 %23, label %197, label %24

24:                                               ; preds = %22
  %25 = inttoptr i64 %17 to %"struct.std::__1::pair.268"*
  %26 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br label %31

28:                                               ; preds = %13
  %29 = inttoptr i64 %18 to %"struct.std::__1::pair.268"*
  %30 = inttoptr i64 %17 to %"struct.std::__1::pair.268"*
  tail call void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_SN_T_NS_15iterator_traitsISN_E15difference_typeESR_PNSQ_10value_typeE(%"struct.std::__1::pair.268"* %29, %"struct.std::__1::pair.268"* %30, %"struct.std::__1::pair.268"* %14, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1) %3, i64 %15, i64 %16, %"struct.std::__1::pair.268"* %6)
  br label %197

31:                                               ; preds = %24, %38
  %32 = phi i64 [ %15, %24 ], [ %41, %38 ]
  %33 = phi i64 [ %18, %24 ], [ %40, %38 ]
  %34 = inttoptr i64 %33 to %"struct.std::__1::pair.268"*
  %35 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp ult i32 %27, %36
  br i1 %37, label %43, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %34, i64 1
  %40 = ptrtoint %"struct.std::__1::pair.268"* %39 to i64
  %41 = add nsw i64 %32, -1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %197, label %31

43:                                               ; preds = %31
  %44 = inttoptr i64 %33 to %"struct.std::__1::pair.268"*
  %45 = icmp slt i64 %32, %16
  br i1 %45, label %46, label %75

46:                                               ; preds = %43
  %47 = sdiv i64 %16, 2
  %48 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %25, i64 %47
  %49 = ptrtoint %"struct.std::__1::pair.268"* %48 to i64
  %50 = sub i64 %17, %33
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %70, label %52

52:                                               ; preds = %46
  %53 = sdiv exact i64 %50, 40
  %54 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %48, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br label %56

56:                                               ; preds = %56, %52
  %57 = phi %"struct.std::__1::pair.268"* [ %44, %52 ], [ %68, %56 ]
  %58 = phi i64 [ %53, %52 ], [ %67, %56 ]
  %59 = lshr i64 %58, 1
  %60 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %57, i64 %59
  %61 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %60, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp ult i32 %55, %62
  %64 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %60, i64 1
  %65 = xor i64 %59, -1
  %66 = add i64 %58, %65
  %67 = select i1 %63, i64 %59, i64 %66
  %68 = select i1 %63, %"struct.std::__1::pair.268"* %57, %"struct.std::__1::pair.268"* %64
  %69 = icmp eq i64 %67, 0
  br i1 %69, label %70, label %56

70:                                               ; preds = %56, %46
  %71 = phi %"struct.std::__1::pair.268"* [ %44, %46 ], [ %68, %56 ]
  %72 = ptrtoint %"struct.std::__1::pair.268"* %71 to i64
  %73 = sub i64 %72, %33
  %74 = sdiv exact i64 %73, 40
  br label %113

75:                                               ; preds = %43
  %76 = icmp eq i64 %32, 1
  br i1 %76, label %77, label %83

77:                                               ; preds = %75
  %78 = inttoptr i64 %17 to %"struct.std::__1::pair.268"*
  %79 = inttoptr i64 %33 to %"struct.std::__1::pair.268"*
  %80 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %79, i64 0, i32 0
  store i32 %27, i32* %80, align 4
  store i32 %36, i32* %26, align 4
  %81 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %79, i64 0, i32 1
  %82 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %78, i64 0, i32 1
  tail call void @_ZNSt3__14swapIN3x1113PropertyCache13PropertyValueEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.x11::PropertyCache::PropertyValue"* dereferenceable(32) %81, %"struct.x11::PropertyCache::PropertyValue"* dereferenceable(32) %82) #10
  br label %197

83:                                               ; preds = %75
  %84 = sdiv i64 %32, 2
  %85 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %44, i64 %84
  %86 = ptrtoint %"struct.std::__1::pair.268"* %85 to i64
  %87 = ptrtoint %"struct.std::__1::pair.268"* %14 to i64
  %88 = sub i64 %87, %17
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %108, label %90

90:                                               ; preds = %83
  %91 = sdiv exact i64 %88, 40
  %92 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br label %94

94:                                               ; preds = %94, %90
  %95 = phi %"struct.std::__1::pair.268"* [ %25, %90 ], [ %106, %94 ]
  %96 = phi i64 [ %91, %90 ], [ %105, %94 ]
  %97 = lshr i64 %96, 1
  %98 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %95, i64 %97
  %99 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %98, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp ult i32 %100, %93
  %102 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %98, i64 1
  %103 = xor i64 %97, -1
  %104 = add i64 %96, %103
  %105 = select i1 %101, i64 %104, i64 %97
  %106 = select i1 %101, %"struct.std::__1::pair.268"* %102, %"struct.std::__1::pair.268"* %95
  %107 = icmp eq i64 %105, 0
  br i1 %107, label %108, label %94

108:                                              ; preds = %94, %83
  %109 = phi %"struct.std::__1::pair.268"* [ %25, %83 ], [ %106, %94 ]
  %110 = ptrtoint %"struct.std::__1::pair.268"* %109 to i64
  %111 = sub i64 %110, %17
  %112 = sdiv exact i64 %111, 40
  br label %113

113:                                              ; preds = %108, %70
  %114 = phi i64 [ %72, %70 ], [ %86, %108 ]
  %115 = phi i64 [ %49, %70 ], [ %110, %108 ]
  %116 = phi i64 [ %47, %70 ], [ %112, %108 ]
  %117 = phi i64 [ %74, %70 ], [ %84, %108 ]
  %118 = sub nsw i64 %32, %117
  %119 = sub nsw i64 %16, %116
  %120 = inttoptr i64 %114 to %"struct.std::__1::pair.268"*
  %121 = inttoptr i64 %115 to %"struct.std::__1::pair.268"*
  %122 = icmp eq %"struct.std::__1::pair.268"* %120, %25
  br i1 %122, label %182, label %123

123:                                              ; preds = %113
  %124 = icmp eq %"struct.std::__1::pair.268"* %25, %121
  br i1 %124, label %182, label %125

125:                                              ; preds = %123
  %126 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %120, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  store i32 %27, i32* %126, align 4
  store i32 %127, i32* %26, align 4
  %128 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %120, i64 0, i32 1
  %129 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %25, i64 0, i32 1
  tail call void @_ZNSt3__14swapIN3x1113PropertyCache13PropertyValueEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.x11::PropertyCache::PropertyValue"* dereferenceable(32) %128, %"struct.x11::PropertyCache::PropertyValue"* dereferenceable(32) %129) #10
  %130 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %120, i64 1
  %131 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %25, i64 1
  %132 = icmp eq %"struct.std::__1::pair.268"* %131, %121
  br i1 %132, label %153, label %133

133:                                              ; preds = %125, %133
  %134 = phi %"struct.std::__1::pair.268"* [ %150, %133 ], [ %25, %125 ]
  %135 = phi %"struct.std::__1::pair.268"* [ %148, %133 ], [ %131, %125 ]
  %136 = phi %"struct.std::__1::pair.268"* [ %147, %133 ], [ %130, %125 ]
  %137 = phi i64 [ %140, %133 ], [ %17, %125 ]
  %138 = ptrtoint %"struct.std::__1::pair.268"* %135 to i64
  %139 = icmp eq %"struct.std::__1::pair.268"* %136, %134
  %140 = select i1 %139, i64 %138, i64 %137
  %141 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %136, i64 0, i32 0
  %142 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %135, i64 0, i32 0
  %143 = load i32, i32* %141, align 4
  %144 = load i32, i32* %142, align 4
  store i32 %144, i32* %141, align 4
  store i32 %143, i32* %142, align 4
  %145 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %136, i64 0, i32 1
  %146 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %135, i64 0, i32 1
  tail call void @_ZNSt3__14swapIN3x1113PropertyCache13PropertyValueEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.x11::PropertyCache::PropertyValue"* dereferenceable(32) %145, %"struct.x11::PropertyCache::PropertyValue"* dereferenceable(32) %146) #10
  %147 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %136, i64 1
  %148 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %135, i64 1
  %149 = icmp eq %"struct.std::__1::pair.268"* %148, %121
  %150 = inttoptr i64 %140 to %"struct.std::__1::pair.268"*
  br i1 %149, label %151, label %133

151:                                              ; preds = %133
  %152 = inttoptr i64 %140 to %"struct.std::__1::pair.268"*
  br label %153

153:                                              ; preds = %151, %125
  %154 = phi i64 [ %17, %125 ], [ %140, %151 ]
  %155 = phi %"struct.std::__1::pair.268"* [ %130, %125 ], [ %147, %151 ]
  %156 = phi %"struct.std::__1::pair.268"* [ %25, %125 ], [ %152, %151 ]
  %157 = icmp eq %"struct.std::__1::pair.268"* %155, %156
  br i1 %157, label %182, label %158

158:                                              ; preds = %153
  %159 = inttoptr i64 %154 to %"struct.std::__1::pair.268"*
  br label %160

160:                                              ; preds = %158, %179
  %161 = phi i64 [ %154, %158 ], [ %181, %179 ]
  %162 = phi %"struct.std::__1::pair.268"* [ %155, %158 ], [ %174, %179 ]
  %163 = phi %"struct.std::__1::pair.268"* [ %159, %158 ], [ %175, %179 ]
  %164 = inttoptr i64 %161 to %"struct.std::__1::pair.268"*
  br label %165

165:                                              ; preds = %160, %178
  %166 = phi %"struct.std::__1::pair.268"* [ %174, %178 ], [ %162, %160 ]
  %167 = phi %"struct.std::__1::pair.268"* [ %164, %178 ], [ %163, %160 ]
  %168 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %166, i64 0, i32 0
  %169 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %167, i64 0, i32 0
  %170 = load i32, i32* %168, align 4
  %171 = load i32, i32* %169, align 4
  store i32 %171, i32* %168, align 4
  store i32 %170, i32* %169, align 4
  %172 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %166, i64 0, i32 1
  %173 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %167, i64 0, i32 1
  tail call void @_ZNSt3__14swapIN3x1113PropertyCache13PropertyValueEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.x11::PropertyCache::PropertyValue"* dereferenceable(32) %172, %"struct.x11::PropertyCache::PropertyValue"* dereferenceable(32) %173) #10
  %174 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %166, i64 1
  %175 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %167, i64 1
  %176 = icmp eq %"struct.std::__1::pair.268"* %175, %121
  %177 = icmp eq %"struct.std::__1::pair.268"* %174, %164
  br i1 %176, label %178, label %179

178:                                              ; preds = %165
  br i1 %177, label %182, label %165

179:                                              ; preds = %165
  %180 = ptrtoint %"struct.std::__1::pair.268"* %175 to i64
  %181 = select i1 %177, i64 %180, i64 %161
  br label %160

182:                                              ; preds = %178, %113, %123, %153
  %183 = phi %"struct.std::__1::pair.268"* [ %120, %123 ], [ %121, %113 ], [ %155, %153 ], [ %155, %178 ]
  %184 = add nsw i64 %117, %116
  %185 = add nsw i64 %118, %119
  %186 = icmp slt i64 %184, %185
  br i1 %186, label %187, label %189

187:                                              ; preds = %182
  %188 = ptrtoint %"struct.std::__1::pair.268"* %183 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_SN_T_NS_15iterator_traitsISN_E15difference_typeESR_PNSQ_10value_typeEl(%"struct.std::__1::pair.268"* %44, %"struct.std::__1::pair.268"* %120, %"struct.std::__1::pair.268"* %183, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1) %3, i64 %117, i64 %116, %"struct.std::__1::pair.268"* %6, i64 %7)
  br label %190

189:                                              ; preds = %182
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_SN_T_NS_15iterator_traitsISN_E15difference_typeESR_PNSQ_10value_typeEl(%"struct.std::__1::pair.268"* %183, %"struct.std::__1::pair.268"* %121, %"struct.std::__1::pair.268"* %14, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1) %3, i64 %118, i64 %119, %"struct.std::__1::pair.268"* %6, i64 %7)
  br label %190

190:                                              ; preds = %187, %189
  %191 = phi i64 [ %188, %187 ], [ %33, %189 ]
  %192 = phi i64 [ %115, %187 ], [ %114, %189 ]
  %193 = phi i64 [ %119, %187 ], [ %116, %189 ]
  %194 = phi i64 [ %118, %187 ], [ %117, %189 ]
  %195 = phi %"struct.std::__1::pair.268"* [ %14, %187 ], [ %183, %189 ]
  %196 = icmp eq i64 %193, 0
  br i1 %196, label %197, label %13

197:                                              ; preds = %190, %22, %38, %8, %77, %28
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN3x1113PropertyCache13PropertyValueEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.x11::PropertyCache::PropertyValue"* dereferenceable(32), %"struct.x11::PropertyCache::PropertyValue"* dereferenceable(32)) local_unnamed_addr #7 comdat {
  %3 = alloca %"struct.x11::PropertyCache::PropertyValue", align 8
  %4 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %5, align 8
  %8 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %3 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #10
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %16 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"struct.x11::Response"* %14 to <2 x i64>*
  %18 = load <2 x i64>, <2 x i64>* %17, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %16, align 8
  %19 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.x11::Error"* null, %"class.x11::Error"** %19, align 8
  %20 = bitcast %"struct.x11::Response"* %15 to <2 x i64>*
  store <2 x i64> %18, <2 x i64>* %20, align 8
  store i8 1, i8* %9, align 8
  br label %21

21:                                               ; preds = %2, %13
  %22 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %1 to i64*
  %24 = load i64, i64* %23, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %22, align 8
  %25 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  store i64 %24, i64* %6, align 8
  %26 = icmp eq %"class.x11::Connection::FutureImpl"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.x11::Connection::FutureImpl"* %25 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %21, %27
  %30 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %0, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %1, i64 0, i32 1, i32 0
  %32 = tail call dereferenceable(24) %"class.absl::optional_internal::optional_data.276"* @_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_(%"class.absl::optional_internal::optional_data.276"* %30, %"class.absl::optional_internal::optional_data.276"* dereferenceable(24) %31) #10
  %33 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %33, align 8
  %34 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %22, align 8
  store i64 %7, i64* %23, align 8
  %35 = icmp eq %"class.x11::Connection::FutureImpl"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %29
  %37 = bitcast %"class.x11::Connection::FutureImpl"* %34 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %29, %36
  %39 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %3, i64 0, i32 1, i32 0
  %40 = call dereferenceable(24) %"class.absl::optional_internal::optional_data.276"* @_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_(%"class.absl::optional_internal::optional_data.276"* %31, %"class.absl::optional_internal::optional_data.276"* dereferenceable(24) %39) #10
  %41 = load i8, i8* %9, align 8, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %75, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.x11::Error"*, %"class.x11::Error"** %44, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %44, align 8
  %46 = icmp eq %"class.x11::Error"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.x11::Error"* %45 to void (%"class.x11::Error"*)***
  %49 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %49, i64 1
  %51 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %50, align 8
  call void %51(%"class.x11::Error"* nonnull %45) #10
  br label %52

52:                                               ; preds = %47, %43
  %53 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"struct.x11::GetPropertyReply"*, %"struct.x11::GetPropertyReply"** %53, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %53, align 8
  %55 = icmp eq %"struct.x11::GetPropertyReply"* %54, null
  br i1 %55, label %74, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %54, i64 0, i32 5, i32 0
  %58 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %57, align 8
  %59 = icmp eq %"class.base::RefCountedMemory"* %58, null
  br i1 %59, label %72, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %58, i64 0, i32 1
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw sub i32* %62, i32 1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %72

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %61, i64 -2
  %67 = bitcast %"class.base::RefCountedThreadSafe.248"* %66 to %"class.base::RefCountedMemory"*
  %68 = bitcast %"class.base::RefCountedThreadSafe.248"* %66 to void (%"class.base::RefCountedMemory"*)***
  %69 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %69, i64 3
  %71 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %70, align 8
  call void %71(%"class.base::RefCountedMemory"* nonnull %67) #10
  br label %72

72:                                               ; preds = %65, %60, %56
  %73 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %54, i64 0, i32 0
  call void @_ZdlPv(i8* %73) #12
  br label %74

74:                                               ; preds = %72, %52
  store i8 0, i8* %9, align 8
  br label %75

75:                                               ; preds = %74, %38
  %76 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %33, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %33, align 8
  %77 = icmp eq %"class.x11::Connection::FutureImpl"* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.x11::Connection::FutureImpl"* %76 to i8*
  call void @_ZdlPv(i8* %79) #12
  br label %80

80:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_PNS_15iterator_traitsISN_E10value_typeET_(%"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"struct.std::__1::pair.268"* %0, %1
  br i1 %5, label %139, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %2, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %2, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %11 to i64*
  %14 = load i64, i64* %13, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %12, align 8
  %15 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %10 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %2, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #10
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %33, label %20

20:                                               ; preds = %6
  %21 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %2, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = bitcast %"struct.x11::Response"* %21 to i64*
  %25 = load i64, i64* %24, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %23, align 8
  %26 = bitcast %"struct.x11::Response"* %22 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %2, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %28 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.std::__1::unique_ptr.249"* %28 to i64*
  %31 = load i64, i64* %30, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %29, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.249"* %27 to i64*
  store i64 %31, i64* %32, align 8
  store i8 1, i8* %16, align 8
  br label %33

33:                                               ; preds = %6, %20
  %34 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %0, i64 1
  %35 = icmp eq %"struct.std::__1::pair.268"* %34, %1
  br i1 %35, label %139, label %36

36:                                               ; preds = %33, %136
  %37 = phi %"struct.std::__1::pair.268"* [ %137, %136 ], [ %34, %33 ]
  %38 = phi %"struct.std::__1::pair.268"* [ %40, %136 ], [ %2, %33 ]
  %39 = phi %"struct.std::__1::pair.268"* [ %37, %136 ], [ %0, %33 ]
  %40 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %38, i64 1
  %41 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %37, i64 0, i32 0
  %42 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %38, i64 0, i32 0
  %43 = load i32, i32* %41, align 4
  %44 = load i32, i32* %42, align 4
  %45 = icmp ult i32 %43, %44
  %46 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %40, i64 0, i32 0
  br i1 %45, label %47, label %112

47:                                               ; preds = %36
  store i32 %44, i32* %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %38, i64 1, i32 1
  %49 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %38, i64 0, i32 1
  %50 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %49 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %50, align 8
  %53 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %48 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %38, i64 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %38, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #10
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %38, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %60 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %38, i64 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %61 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = bitcast %"struct.x11::Response"* %59 to <2 x i64>*
  %63 = load <2 x i64>, <2 x i64>* %62, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %61, align 8
  %64 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %38, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.x11::Error"* null, %"class.x11::Error"** %64, align 8
  %65 = bitcast %"struct.x11::Response"* %60 to <2 x i64>*
  store <2 x i64> %63, <2 x i64>* %65, align 8
  store i8 1, i8* %54, align 8
  br label %66

66:                                               ; preds = %47, %58
  %67 = icmp eq %"struct.std::__1::pair.268"* %38, %2
  br i1 %67, label %93, label %68

68:                                               ; preds = %66, %88
  %69 = phi %"struct.std::__1::pair.268"* [ %70, %88 ], [ %38, %66 ]
  %70 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %69, i64 -1
  %71 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %70, i64 0, i32 0
  %72 = load i32, i32* %41, align 4
  %73 = load i32, i32* %71, align 4
  %74 = icmp ult i32 %72, %73
  br i1 %74, label %75, label %93

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %69, i64 0, i32 0
  store i32 %73, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %69, i64 -1, i32 1
  %78 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %69, i64 0, i32 1
  %79 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %77 to i64*
  %81 = load i64, i64* %80, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %79, align 8
  %82 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %82, align 8
  %84 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %78 to i64*
  store i64 %81, i64* %84, align 8
  %85 = icmp eq %"class.x11::Connection::FutureImpl"* %83, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %75
  %87 = bitcast %"class.x11::Connection::FutureImpl"* %83 to i8*
  tail call void @_ZdlPv(i8* %87) #12
  br label %88

88:                                               ; preds = %75, %86
  %89 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %69, i64 0, i32 1, i32 1, i32 0
  %90 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %69, i64 -1, i32 1, i32 1, i32 0
  %91 = tail call dereferenceable(24) %"class.absl::optional_internal::optional_data.276"* @_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_(%"class.absl::optional_internal::optional_data.276"* %89, %"class.absl::optional_internal::optional_data.276"* dereferenceable(24) %90) #10
  %92 = icmp eq %"struct.std::__1::pair.268"* %70, %2
  br i1 %92, label %93, label %68

93:                                               ; preds = %68, %88, %66
  %94 = phi %"struct.std::__1::pair.268"* [ %2, %66 ], [ %2, %88 ], [ %69, %68 ]
  %95 = load i32, i32* %41, align 4
  %96 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %94, i64 0, i32 0
  store i32 %95, i32* %96, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %39, i64 1, i32 1
  %98 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %94, i64 0, i32 1
  %99 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %97 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %99, align 8
  %102 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %102, align 8
  %104 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %98 to i64*
  store i64 %101, i64* %104, align 8
  %105 = icmp eq %"class.x11::Connection::FutureImpl"* %103, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %93
  %107 = bitcast %"class.x11::Connection::FutureImpl"* %103 to i8*
  tail call void @_ZdlPv(i8* %107) #12
  br label %108

108:                                              ; preds = %93, %106
  %109 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %94, i64 0, i32 1, i32 1, i32 0
  %110 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %39, i64 1, i32 1, i32 1, i32 0
  %111 = tail call dereferenceable(24) %"class.absl::optional_internal::optional_data.276"* @_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_(%"class.absl::optional_internal::optional_data.276"* %109, %"class.absl::optional_internal::optional_data.276"* dereferenceable(24) %110) #10
  br label %136

112:                                              ; preds = %36
  store i32 %43, i32* %46, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %38, i64 1, i32 1
  %114 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %39, i64 1, i32 1
  %115 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %114 to i64*
  %117 = load i64, i64* %116, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %115, align 8
  %118 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %113 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %38, i64 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %120 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %39, i64 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 24, i1 false) #10
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %136, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %39, i64 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %125 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %38, i64 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %126 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %124, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = bitcast %"struct.x11::Response"* %124 to i64*
  %128 = load i64, i64* %127, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %126, align 8
  %129 = bitcast %"struct.x11::Response"* %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %38, i64 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %131 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %39, i64 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %131, i64 0, i32 0, i32 0, i32 0
  %133 = bitcast %"class.std::__1::unique_ptr.249"* %131 to i64*
  %134 = load i64, i64* %133, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %132, align 8
  %135 = bitcast %"class.std::__1::unique_ptr.249"* %130 to i64*
  store i64 %134, i64* %135, align 8
  store i8 1, i8* %119, align 8
  br label %136

136:                                              ; preds = %123, %112, %108
  %137 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %37, i64 1
  %138 = icmp eq %"struct.std::__1::pair.268"* %137, %1
  br i1 %138, label %139, label %36

139:                                              ; preds = %136, %33, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__122__merge_move_constructIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EESM_EEvT0_SN_T1_SO_PNS_15iterator_traitsISN_E10value_typeET_(%"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"struct.std::__1::pair.268"* %0, %1
  br i1 %7, label %8, label %45

8:                                                ; preds = %144, %6
  %9 = phi %"struct.std::__1::pair.268"* [ %2, %6 ], [ %145, %144 ]
  %10 = phi %"struct.std::__1::pair.268"* [ %4, %6 ], [ %147, %144 ]
  %11 = icmp eq %"struct.std::__1::pair.268"* %9, %3
  br i1 %11, label %149, label %12

12:                                               ; preds = %8, %41
  %13 = phi %"struct.std::__1::pair.268"* [ %43, %41 ], [ %10, %8 ]
  %14 = phi %"struct.std::__1::pair.268"* [ %42, %41 ], [ %9, %8 ]
  %15 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %13, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %14, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %15, align 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %13, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %14, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %19 to i64*
  %22 = load i64, i64* %21, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %20, align 8
  %23 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %18 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %13, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %14, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #10
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %41, label %28

28:                                               ; preds = %12
  %29 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %14, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %30 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %13, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %31 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = bitcast %"struct.x11::Response"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %31, align 8
  %34 = bitcast %"struct.x11::Response"* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %13, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %36 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %14, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr.249"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %37, align 8
  %40 = bitcast %"class.std::__1::unique_ptr.249"* %35 to i64*
  store i64 %39, i64* %40, align 8
  store i8 1, i8* %24, align 8
  br label %41

41:                                               ; preds = %12, %28
  %42 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %14, i64 1
  %43 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %13, i64 1
  %44 = icmp eq %"struct.std::__1::pair.268"* %42, %3
  br i1 %44, label %149, label %12

45:                                               ; preds = %6, %144
  %46 = phi %"struct.std::__1::pair.268"* [ %147, %144 ], [ %4, %6 ]
  %47 = phi %"struct.std::__1::pair.268"* [ %146, %144 ], [ %0, %6 ]
  %48 = phi %"struct.std::__1::pair.268"* [ %145, %144 ], [ %2, %6 ]
  %49 = icmp eq %"struct.std::__1::pair.268"* %48, %3
  br i1 %49, label %50, label %85

50:                                               ; preds = %45
  %51 = icmp eq %"struct.std::__1::pair.268"* %47, %1
  br i1 %51, label %149, label %52

52:                                               ; preds = %50, %81
  %53 = phi %"struct.std::__1::pair.268"* [ %83, %81 ], [ %46, %50 ]
  %54 = phi %"struct.std::__1::pair.268"* [ %82, %81 ], [ %47, %50 ]
  %55 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %53, i64 0, i32 0
  %56 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %54, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  store i32 %57, i32* %55, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %53, i64 0, i32 1
  %59 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %54, i64 0, i32 1
  %60 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %59 to i64*
  %62 = load i64, i64* %61, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %60, align 8
  %63 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %58 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %53, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %54, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #10
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %81, label %68

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %54, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %70 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %53, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %69, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = bitcast %"struct.x11::Response"* %69 to i64*
  %73 = load i64, i64* %72, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %71, align 8
  %74 = bitcast %"struct.x11::Response"* %70 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %53, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %76 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %54, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = bitcast %"class.std::__1::unique_ptr.249"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %77, align 8
  %80 = bitcast %"class.std::__1::unique_ptr.249"* %75 to i64*
  store i64 %79, i64* %80, align 8
  store i8 1, i8* %64, align 8
  br label %81

81:                                               ; preds = %52, %68
  %82 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %54, i64 1
  %83 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %53, i64 1
  %84 = icmp eq %"struct.std::__1::pair.268"* %82, %1
  br i1 %84, label %149, label %52

85:                                               ; preds = %45
  %86 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %48, i64 0, i32 0
  %87 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %47, i64 0, i32 0
  %88 = load i32, i32* %86, align 4
  %89 = load i32, i32* %87, align 4
  %90 = icmp ult i32 %88, %89
  %91 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %46, i64 0, i32 0
  br i1 %90, label %92, label %118

92:                                               ; preds = %85
  store i32 %88, i32* %91, align 8
  %93 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %46, i64 0, i32 1
  %94 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %48, i64 0, i32 1
  %95 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %95, align 8
  %98 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %93 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %46, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %48, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #10
  %101 = load i8, i8* %100, align 8, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %116, label %103

103:                                              ; preds = %92
  %104 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %48, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %105 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %46, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %106 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %104, i64 0, i32 0, i32 0, i32 0, i32 0
  %107 = bitcast %"struct.x11::Response"* %104 to i64*
  %108 = load i64, i64* %107, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %106, align 8
  %109 = bitcast %"struct.x11::Response"* %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %46, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %111 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %48, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %111, i64 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.std::__1::unique_ptr.249"* %111 to i64*
  %114 = load i64, i64* %113, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %112, align 8
  %115 = bitcast %"class.std::__1::unique_ptr.249"* %110 to i64*
  store i64 %114, i64* %115, align 8
  store i8 1, i8* %99, align 8
  br label %116

116:                                              ; preds = %92, %103
  %117 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %48, i64 1
  br label %144

118:                                              ; preds = %85
  store i32 %89, i32* %91, align 8
  %119 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %46, i64 0, i32 1
  %120 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %47, i64 0, i32 1
  %121 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %120 to i64*
  %123 = load i64, i64* %122, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %121, align 8
  %124 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %119 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %46, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %126 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %47, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 24, i1 false) #10
  %127 = load i8, i8* %126, align 8, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %142, label %129

129:                                              ; preds = %118
  %130 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %47, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %131 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %46, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %132 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %130, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = bitcast %"struct.x11::Response"* %130 to i64*
  %134 = load i64, i64* %133, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %132, align 8
  %135 = bitcast %"struct.x11::Response"* %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %46, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %137 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %47, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %137, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.std::__1::unique_ptr.249"* %137 to i64*
  %140 = load i64, i64* %139, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %138, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.249"* %136 to i64*
  store i64 %140, i64* %141, align 8
  store i8 1, i8* %125, align 8
  br label %142

142:                                              ; preds = %118, %129
  %143 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %47, i64 1
  br label %144

144:                                              ; preds = %116, %142
  %145 = phi %"struct.std::__1::pair.268"* [ %117, %116 ], [ %48, %142 ]
  %146 = phi %"struct.std::__1::pair.268"* [ %47, %116 ], [ %143, %142 ]
  %147 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %46, i64 1
  %148 = icmp eq %"struct.std::__1::pair.268"* %146, %1
  br i1 %148, label %8, label %45

149:                                              ; preds = %81, %41, %50, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareENS_11__wrap_iterIPSD_EEEEvT0_SN_SN_T_NS_15iterator_traitsISN_E15difference_typeESR_PNSQ_10value_typeE(%"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1), i64, i64, %"struct.std::__1::pair.268"*) local_unnamed_addr #0 comdat {
  %8 = alloca %"class.std::__1::reverse_iterator.313", align 8
  %9 = alloca %"class.std::__1::reverse_iterator.313", align 8
  %10 = icmp sgt i64 %4, %5
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = icmp eq %"struct.std::__1::pair.268"* %0, %1
  br i1 %12, label %15, label %18

13:                                               ; preds = %7
  %14 = icmp eq %"struct.std::__1::pair.268"* %1, %2
  br i1 %14, label %53, label %61

15:                                               ; preds = %48, %11
  %16 = phi i64 [ 0, %11 ], [ %49, %48 ]
  %17 = phi %"struct.std::__1::pair.268"* [ %6, %11 ], [ %51, %48 ]
  tail call void @_ZNSt3__120__half_inplace_mergeIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareEPSD_NS_11__wrap_iterISK_EESM_EEvT0_SN_T1_SO_T2_T_(%"struct.std::__1::pair.268"* %6, %"struct.std::__1::pair.268"* %17, %"struct.std::__1::pair.268"* %1, %"struct.std::__1::pair.268"* %2, %"struct.std::__1::pair.268"* %0, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1) %3)
  br label %96

18:                                               ; preds = %11, %48
  %19 = phi %"struct.std::__1::pair.268"* [ %51, %48 ], [ %6, %11 ]
  %20 = phi %"struct.std::__1::pair.268"* [ %50, %48 ], [ %0, %11 ]
  %21 = phi i64 [ %49, %48 ], [ 0, %11 ]
  %22 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %19, i64 0, i32 0
  %23 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %20, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %22, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %19, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %20, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %27, align 8
  %30 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %25 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %19, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %20, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #10
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %48, label %35

35:                                               ; preds = %18
  %36 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %20, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %19, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = bitcast %"struct.x11::Response"* %36 to i64*
  %40 = load i64, i64* %39, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %38, align 8
  %41 = bitcast %"struct.x11::Response"* %37 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %19, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %43 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %20, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr.249"* %43 to i64*
  %46 = load i64, i64* %45, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %44, align 8
  %47 = bitcast %"class.std::__1::unique_ptr.249"* %42 to i64*
  store i64 %46, i64* %47, align 8
  store i8 1, i8* %31, align 8
  br label %48

48:                                               ; preds = %18, %35
  %49 = add nuw nsw i64 %21, 1
  %50 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %20, i64 1
  %51 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %19, i64 1
  %52 = icmp eq %"struct.std::__1::pair.268"* %50, %1
  br i1 %52, label %15, label %18

53:                                               ; preds = %91, %13
  %54 = phi i64 [ 0, %13 ], [ %92, %91 ]
  %55 = phi %"struct.std::__1::pair.268"* [ %6, %13 ], [ %94, %91 ]
  %56 = getelementptr inbounds %"class.std::__1::reverse_iterator.313", %"class.std::__1::reverse_iterator.313"* %8, i64 0, i32 0, i32 0
  store %"struct.std::__1::pair.268"* %0, %"struct.std::__1::pair.268"** %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::reverse_iterator.313", %"class.std::__1::reverse_iterator.313"* %8, i64 0, i32 1, i32 0
  store %"struct.std::__1::pair.268"* %0, %"struct.std::__1::pair.268"** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::reverse_iterator.313", %"class.std::__1::reverse_iterator.313"* %9, i64 0, i32 0, i32 0
  store %"struct.std::__1::pair.268"* %2, %"struct.std::__1::pair.268"** %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::reverse_iterator.313", %"class.std::__1::reverse_iterator.313"* %9, i64 0, i32 1, i32 0
  store %"struct.std::__1::pair.268"* %2, %"struct.std::__1::pair.268"** %59, align 8
  %60 = ptrtoint %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* %3 to i64
  tail call void @_ZNSt3__120__half_inplace_mergeINS_8__invertIRN4base8internal9flat_treeIN3x114AtomENS3_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS5_13PropertyCache13PropertyValueEEENS_9allocatorISE_EEEEE13value_compareEEENS_16reverse_iteratorIPSE_EENSM_INS_11__wrap_iterISN_EEEESR_EEvT0_SS_T1_ST_T2_T_(%"struct.std::__1::pair.268"* %55, %"struct.std::__1::pair.268"* %55, %"struct.std::__1::pair.268"* %6, %"struct.std::__1::pair.268"* %6, %"struct.std::__1::pair.268"* %1, %"struct.std::__1::pair.268"* %1, %"class.std::__1::reverse_iterator.313"* nonnull byval(%"class.std::__1::reverse_iterator.313") align 8 %8, %"class.std::__1::reverse_iterator.313"* nonnull byval(%"class.std::__1::reverse_iterator.313") align 8 %9, i64 %60)
  br label %96

61:                                               ; preds = %13, %91
  %62 = phi %"struct.std::__1::pair.268"* [ %94, %91 ], [ %6, %13 ]
  %63 = phi %"struct.std::__1::pair.268"* [ %93, %91 ], [ %1, %13 ]
  %64 = phi i64 [ %92, %91 ], [ 0, %13 ]
  %65 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %62, i64 0, i32 0
  %66 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %63, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  store i32 %67, i32* %65, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %62, i64 0, i32 1
  %69 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %63, i64 0, i32 1
  %70 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %69 to i64*
  %72 = load i64, i64* %71, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %70, align 8
  %73 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %68 to i64*
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %62, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %63, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #10
  %76 = load i8, i8* %75, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %91, label %78

78:                                               ; preds = %61
  %79 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %63, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %80 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %62, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %81 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast %"struct.x11::Response"* %79 to i64*
  %83 = load i64, i64* %82, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %81, align 8
  %84 = bitcast %"struct.x11::Response"* %80 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %62, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %86 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %63, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.249"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.249"* %85 to i64*
  store i64 %89, i64* %90, align 8
  store i8 1, i8* %74, align 8
  br label %91

91:                                               ; preds = %61, %78
  %92 = add nuw nsw i64 %64, 1
  %93 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %63, i64 1
  %94 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %62, i64 1
  %95 = icmp eq %"struct.std::__1::pair.268"* %93, %2
  br i1 %95, label %53, label %61

96:                                               ; preds = %53, %15
  %97 = phi i64 [ %54, %53 ], [ %16, %15 ]
  %98 = icmp eq %"struct.std::__1::pair.268"* %6, null
  %99 = icmp eq i64 %97, 0
  %100 = or i1 %98, %99
  br i1 %100, label %149, label %101

101:                                              ; preds = %96, %145
  %102 = phi i64 [ %146, %145 ], [ 0, %96 ]
  %103 = phi %"struct.std::__1::pair.268"* [ %147, %145 ], [ %6, %96 ]
  %104 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %103, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %105 = load i8, i8* %104, align 8, !range !2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %139, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %103, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.x11::Error"*, %"class.x11::Error"** %108, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %108, align 8
  %110 = icmp eq %"class.x11::Error"* %109, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %107
  %112 = bitcast %"class.x11::Error"* %109 to void (%"class.x11::Error"*)***
  %113 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %113, i64 1
  %115 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %114, align 8
  tail call void %115(%"class.x11::Error"* nonnull %109) #10
  br label %116

116:                                              ; preds = %111, %107
  %117 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %103, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"struct.x11::GetPropertyReply"*, %"struct.x11::GetPropertyReply"** %117, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %117, align 8
  %119 = icmp eq %"struct.x11::GetPropertyReply"* %118, null
  br i1 %119, label %138, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %118, i64 0, i32 5, i32 0
  %122 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %121, align 8
  %123 = icmp eq %"class.base::RefCountedMemory"* %122, null
  br i1 %123, label %136, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %122, i64 0, i32 1
  %126 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = atomicrmw sub i32* %126, i32 1 acq_rel
  %128 = icmp eq i32 %127, 1
  br i1 %128, label %129, label %136

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %125, i64 -2
  %131 = bitcast %"class.base::RefCountedThreadSafe.248"* %130 to %"class.base::RefCountedMemory"*
  %132 = bitcast %"class.base::RefCountedThreadSafe.248"* %130 to void (%"class.base::RefCountedMemory"*)***
  %133 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %133, i64 3
  %135 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %134, align 8
  tail call void %135(%"class.base::RefCountedMemory"* nonnull %131) #10
  br label %136

136:                                              ; preds = %129, %124, %120
  %137 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %118, i64 0, i32 0
  tail call void @_ZdlPv(i8* %137) #12
  br label %138

138:                                              ; preds = %136, %116
  store i8 0, i8* %104, align 8
  br label %139

139:                                              ; preds = %138, %101
  %140 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %103, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %140, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %140, align 8
  %142 = icmp eq %"class.x11::Connection::FutureImpl"* %141, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %139
  %144 = bitcast %"class.x11::Connection::FutureImpl"* %141 to i8*
  tail call void @_ZdlPv(i8* %144) #12
  br label %145

145:                                              ; preds = %143, %139
  %146 = add nuw nsw i64 %102, 1
  %147 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %103, i64 1
  %148 = icmp eq i64 %146, %97
  br i1 %148, label %149, label %101

149:                                              ; preds = %145, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__half_inplace_mergeIRN4base8internal9flat_treeIN3x114AtomENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_NS4_13PropertyCache13PropertyValueEEENS_9allocatorISD_EEEEE13value_compareEPSD_NS_11__wrap_iterISK_EESM_EEvT0_SN_T1_SO_T2_T_(%"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.base::internal::flat_tree<x11::Atom, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue>, std::__1::allocator<std::__1::pair<x11::Atom, x11::PropertyCache::PropertyValue> > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"struct.std::__1::pair.268"* %0, %1
  br i1 %7, label %83, label %8

8:                                                ; preds = %6, %78
  %9 = phi %"struct.std::__1::pair.268"* [ %80, %78 ], [ %0, %6 ]
  %10 = phi %"struct.std::__1::pair.268"* [ %81, %78 ], [ %4, %6 ]
  %11 = phi %"struct.std::__1::pair.268"* [ %79, %78 ], [ %2, %6 ]
  %12 = icmp eq %"struct.std::__1::pair.268"* %11, %3
  br i1 %12, label %13, label %37

13:                                               ; preds = %8, %30
  %14 = phi %"struct.std::__1::pair.268"* [ %35, %30 ], [ %10, %8 ]
  %15 = phi %"struct.std::__1::pair.268"* [ %34, %30 ], [ %9, %8 ]
  %16 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %14, i64 0, i32 0
  store i32 %17, i32* %18, align 8
  %19 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %15, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %14, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %19 to i64*
  %23 = load i64, i64* %22, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %21, align 8
  %24 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %24, align 8
  %26 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %20 to i64*
  store i64 %23, i64* %26, align 8
  %27 = icmp eq %"class.x11::Connection::FutureImpl"* %25, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %13
  %29 = bitcast %"class.x11::Connection::FutureImpl"* %25 to i8*
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %28, %13
  %31 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %14, i64 0, i32 1, i32 1, i32 0
  %32 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %15, i64 0, i32 1, i32 1, i32 0
  %33 = tail call dereferenceable(24) %"class.absl::optional_internal::optional_data.276"* @_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_(%"class.absl::optional_internal::optional_data.276"* %31, %"class.absl::optional_internal::optional_data.276"* dereferenceable(24) %32) #10
  %34 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %15, i64 1
  %35 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %14, i64 1
  %36 = icmp eq %"struct.std::__1::pair.268"* %34, %1
  br i1 %36, label %83, label %13

37:                                               ; preds = %8
  %38 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %11, i64 0, i32 0
  %39 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %9, i64 0, i32 0
  %40 = load i32, i32* %38, align 4
  %41 = load i32, i32* %39, align 4
  %42 = icmp ult i32 %40, %41
  %43 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %10, i64 0, i32 0
  br i1 %42, label %44, label %61

44:                                               ; preds = %37
  store i32 %40, i32* %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %11, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %10, i64 0, i32 1
  %47 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %45 to i64*
  %49 = load i64, i64* %48, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %47, align 8
  %50 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %50, align 8
  %52 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %46 to i64*
  store i64 %49, i64* %52, align 8
  %53 = icmp eq %"class.x11::Connection::FutureImpl"* %51, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %44
  %55 = bitcast %"class.x11::Connection::FutureImpl"* %51 to i8*
  tail call void @_ZdlPv(i8* %55) #12
  br label %56

56:                                               ; preds = %44, %54
  %57 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %10, i64 0, i32 1, i32 1, i32 0
  %58 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %11, i64 0, i32 1, i32 1, i32 0
  %59 = tail call dereferenceable(24) %"class.absl::optional_internal::optional_data.276"* @_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_(%"class.absl::optional_internal::optional_data.276"* %57, %"class.absl::optional_internal::optional_data.276"* dereferenceable(24) %58) #10
  %60 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %11, i64 1
  br label %78

61:                                               ; preds = %37
  store i32 %41, i32* %43, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %9, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %10, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %64, align 8
  %67 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %67, align 8
  %69 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %63 to i64*
  store i64 %66, i64* %69, align 8
  %70 = icmp eq %"class.x11::Connection::FutureImpl"* %68, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %61
  %72 = bitcast %"class.x11::Connection::FutureImpl"* %68 to i8*
  tail call void @_ZdlPv(i8* %72) #12
  br label %73

73:                                               ; preds = %61, %71
  %74 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %10, i64 0, i32 1, i32 1, i32 0
  %75 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %9, i64 0, i32 1, i32 1, i32 0
  %76 = tail call dereferenceable(24) %"class.absl::optional_internal::optional_data.276"* @_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_(%"class.absl::optional_internal::optional_data.276"* %74, %"class.absl::optional_internal::optional_data.276"* dereferenceable(24) %75) #10
  %77 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %9, i64 1
  br label %78

78:                                               ; preds = %56, %73
  %79 = phi %"struct.std::__1::pair.268"* [ %60, %56 ], [ %11, %73 ]
  %80 = phi %"struct.std::__1::pair.268"* [ %9, %56 ], [ %77, %73 ]
  %81 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %10, i64 1
  %82 = icmp eq %"struct.std::__1::pair.268"* %80, %1
  br i1 %82, label %83, label %8

83:                                               ; preds = %78, %30, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__half_inplace_mergeINS_8__invertIRN4base8internal9flat_treeIN3x114AtomENS3_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS6_NS5_13PropertyCache13PropertyValueEEENS_9allocatorISE_EEEEE13value_compareEEENS_16reverse_iteratorIPSE_EENSM_INS_11__wrap_iterISN_EEEESR_EEvT0_SS_T1_ST_T2_T_(%"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"class.std::__1::reverse_iterator.313"* byval(%"class.std::__1::reverse_iterator.313") align 8, %"class.std::__1::reverse_iterator.313"* byval(%"class.std::__1::reverse_iterator.313") align 8, i64) local_unnamed_addr #0 comdat {
  %10 = icmp eq %"struct.std::__1::pair.268"* %1, %3
  br i1 %10, label %89, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.std::__1::reverse_iterator.313", %"class.std::__1::reverse_iterator.313"* %6, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.std::__1::reverse_iterator.313", %"class.std::__1::reverse_iterator.313"* %7, i64 0, i32 1, i32 0
  br label %14

14:                                               ; preds = %11, %79
  %15 = phi %"struct.std::__1::pair.268"* [ %1, %11 ], [ %82, %79 ]
  %16 = phi %"struct.std::__1::pair.268"* [ %5, %11 ], [ %81, %79 ]
  %17 = load %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"** %12, align 8
  %18 = icmp eq %"struct.std::__1::pair.268"* %16, %17
  br i1 %18, label %19, label %45

19:                                               ; preds = %14
  %20 = load %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"** %13, align 8
  br label %21

21:                                               ; preds = %19, %40
  %22 = phi %"struct.std::__1::pair.268"* [ %24, %40 ], [ %15, %19 ]
  %23 = phi %"struct.std::__1::pair.268"* [ %25, %40 ], [ %20, %19 ]
  %24 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %22, i64 -1
  %25 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %23, i64 -1
  %26 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %24, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %25, i64 0, i32 0
  store i32 %27, i32* %28, align 8
  %29 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %22, i64 -1, i32 1
  %30 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %23, i64 -1, i32 1
  %31 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %31, align 8
  %34 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %34, align 8
  %36 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %30 to i64*
  store i64 %33, i64* %36, align 8
  %37 = icmp eq %"class.x11::Connection::FutureImpl"* %35, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %21
  %39 = bitcast %"class.x11::Connection::FutureImpl"* %35 to i8*
  tail call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %38, %21
  %41 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %23, i64 -1, i32 1, i32 1, i32 0
  %42 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %22, i64 -1, i32 1, i32 1, i32 0
  %43 = tail call dereferenceable(24) %"class.absl::optional_internal::optional_data.276"* @_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_(%"class.absl::optional_internal::optional_data.276"* %41, %"class.absl::optional_internal::optional_data.276"* dereferenceable(24) %42) #10
  %44 = icmp eq %"struct.std::__1::pair.268"* %24, %3
  br i1 %44, label %89, label %21

45:                                               ; preds = %14
  %46 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %16, i64 -1
  %47 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %15, i64 -1
  %48 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %47, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %46, i64 0, i32 0
  %50 = load i32, i32* %48, align 4
  %51 = load i32, i32* %49, align 4
  %52 = icmp ult i32 %50, %51
  %53 = load %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"** %13, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %53, i64 -1, i32 0
  br i1 %52, label %55, label %67

55:                                               ; preds = %45
  store i32 %51, i32* %54, align 8
  %56 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %16, i64 -1, i32 1
  %57 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %53, i64 -1, i32 1
  %58 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %56 to i64*
  %60 = load i64, i64* %59, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %58, align 8
  %61 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %61, align 8
  %63 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %57 to i64*
  store i64 %60, i64* %63, align 8
  %64 = icmp eq %"class.x11::Connection::FutureImpl"* %62, null
  br i1 %64, label %79, label %65

65:                                               ; preds = %55
  %66 = bitcast %"class.x11::Connection::FutureImpl"* %62 to i8*
  tail call void @_ZdlPv(i8* %66) #12
  br label %79

67:                                               ; preds = %45
  store i32 %50, i32* %54, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %15, i64 -1, i32 1
  %69 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %53, i64 -1, i32 1
  %70 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %68 to i64*
  %72 = load i64, i64* %71, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %70, align 8
  %73 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %73, align 8
  %75 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %69 to i64*
  store i64 %72, i64* %75, align 8
  %76 = icmp eq %"class.x11::Connection::FutureImpl"* %74, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %67
  %78 = bitcast %"class.x11::Connection::FutureImpl"* %74 to i8*
  tail call void @_ZdlPv(i8* %78) #12
  br label %79

79:                                               ; preds = %77, %67, %65, %55
  %80 = phi %"struct.std::__1::pair.268"* [ %16, %55 ], [ %16, %65 ], [ %15, %67 ], [ %15, %77 ]
  %81 = phi %"struct.std::__1::pair.268"* [ %46, %55 ], [ %46, %65 ], [ %16, %67 ], [ %16, %77 ]
  %82 = phi %"struct.std::__1::pair.268"* [ %15, %55 ], [ %15, %65 ], [ %47, %67 ], [ %47, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %53, i64 -1, i32 1, i32 1, i32 0
  %84 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %80, i64 -1, i32 1, i32 1, i32 0
  %85 = tail call dereferenceable(24) %"class.absl::optional_internal::optional_data.276"* @_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_(%"class.absl::optional_internal::optional_data.276"* %83, %"class.absl::optional_internal::optional_data.276"* dereferenceable(24) %84) #10
  %86 = load %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"** %13, align 8
  %87 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %86, i64 -1
  store %"struct.std::__1::pair.268"* %87, %"struct.std::__1::pair.268"** %13, align 8
  %88 = icmp eq %"struct.std::__1::pair.268"* %82, %3
  br i1 %88, label %89, label %14

89:                                               ; preds = %79, %40, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.268"* @_ZNSt3__16vectorINS_4pairIN3x114AtomENS2_13PropertyCache13PropertyValueEEENS_9allocatorIS6_EEE5eraseENS_11__wrap_iterIPKS6_EESD_(%"class.std::__1::vector.266"*, %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %"struct.std::__1::pair.268"* %1, %2
  br i1 %4, label %86, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.std::__1::vector.266", %"class.std::__1::vector.266"* %0, i64 0, i32 0, i32 1
  %7 = load %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.268"* %7, %2
  br i1 %8, label %35, label %9

9:                                                ; preds = %5, %26
  %10 = phi %"struct.std::__1::pair.268"* [ %31, %26 ], [ %1, %5 ]
  %11 = phi %"struct.std::__1::pair.268"* [ %30, %26 ], [ %2, %5 ]
  %12 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %10, i64 0, i32 0
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %11, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %10, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %15 to i64*
  %19 = load i64, i64* %18, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %17, align 8
  %20 = getelementptr inbounds %"struct.x11::PropertyCache::PropertyValue", %"struct.x11::PropertyCache::PropertyValue"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %20, align 8
  %22 = bitcast %"struct.x11::PropertyCache::PropertyValue"* %16 to i64*
  store i64 %19, i64* %22, align 8
  %23 = icmp eq %"class.x11::Connection::FutureImpl"* %21, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %9
  %25 = bitcast %"class.x11::Connection::FutureImpl"* %21 to i8*
  tail call void @_ZdlPv(i8* %25) #12
  br label %26

26:                                               ; preds = %24, %9
  %27 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %10, i64 0, i32 1, i32 1, i32 0
  %28 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %11, i64 0, i32 1, i32 1, i32 0
  %29 = tail call dereferenceable(24) %"class.absl::optional_internal::optional_data.276"* @_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_(%"class.absl::optional_internal::optional_data.276"* %27, %"class.absl::optional_internal::optional_data.276"* dereferenceable(24) %28) #10
  %30 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %11, i64 1
  %31 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %10, i64 1
  %32 = icmp eq %"struct.std::__1::pair.268"* %30, %7
  br i1 %32, label %33, label %9

33:                                               ; preds = %26
  %34 = load %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"** %6, align 8
  br label %35

35:                                               ; preds = %33, %5
  %36 = phi %"struct.std::__1::pair.268"* [ %2, %5 ], [ %34, %33 ]
  %37 = phi %"struct.std::__1::pair.268"* [ %1, %5 ], [ %31, %33 ]
  %38 = icmp eq %"struct.std::__1::pair.268"* %36, %37
  br i1 %38, label %85, label %39

39:                                               ; preds = %35, %83
  %40 = phi %"struct.std::__1::pair.268"* [ %41, %83 ], [ %36, %35 ]
  %41 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %40, i64 -1
  %42 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %40, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %77, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %40, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.x11::Error"*, %"class.x11::Error"** %46, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %46, align 8
  %48 = icmp eq %"class.x11::Error"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.x11::Error"* %47 to void (%"class.x11::Error"*)***
  %51 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %51, i64 1
  %53 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %52, align 8
  tail call void %53(%"class.x11::Error"* nonnull %47) #10
  br label %54

54:                                               ; preds = %49, %45
  %55 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %40, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %"struct.x11::GetPropertyReply"*, %"struct.x11::GetPropertyReply"** %55, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %55, align 8
  %57 = icmp eq %"struct.x11::GetPropertyReply"* %56, null
  br i1 %57, label %76, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %56, i64 0, i32 5, i32 0
  %60 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %59, align 8
  %61 = icmp eq %"class.base::RefCountedMemory"* %60, null
  br i1 %61, label %74, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %60, i64 0, i32 1
  %64 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw sub i32* %64, i32 1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %74

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %63, i64 -2
  %69 = bitcast %"class.base::RefCountedThreadSafe.248"* %68 to %"class.base::RefCountedMemory"*
  %70 = bitcast %"class.base::RefCountedThreadSafe.248"* %68 to void (%"class.base::RefCountedMemory"*)***
  %71 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %71, i64 3
  %73 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %72, align 8
  tail call void %73(%"class.base::RefCountedMemory"* nonnull %69) #10
  br label %74

74:                                               ; preds = %67, %62, %58
  %75 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %56, i64 0, i32 0
  tail call void @_ZdlPv(i8* %75) #12
  br label %76

76:                                               ; preds = %74, %54
  store i8 0, i8* %42, align 8
  br label %77

77:                                               ; preds = %76, %39
  %78 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %40, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %78, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %78, align 8
  %80 = icmp eq %"class.x11::Connection::FutureImpl"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %77
  %82 = bitcast %"class.x11::Connection::FutureImpl"* %79 to i8*
  tail call void @_ZdlPv(i8* %82) #12
  br label %83

83:                                               ; preds = %81, %77
  %84 = icmp eq %"struct.std::__1::pair.268"* %41, %37
  br i1 %84, label %85, label %39

85:                                               ; preds = %83, %35
  store %"struct.std::__1::pair.268"* %37, %"struct.std::__1::pair.268"** %6, align 8
  br label %86

86:                                               ; preds = %3, %85
  ret %"struct.std::__1::pair.268"* %1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::internal::flat_tree.265"* @_ZN4base8internal9flat_treeIN3x114AtomENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS2_13PropertyCache13PropertyValueEEENS5_9allocatorISC_EEEEEaSEOSG_(%"class.base::internal::flat_tree.265"*, %"class.base::internal::flat_tree.265"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::flat_tree.265", %"class.base::internal::flat_tree.265"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair.268"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = bitcast %"struct.std::__1::pair.268"* %4 to i8*
  %8 = getelementptr inbounds %"class.base::internal::flat_tree.265", %"class.base::internal::flat_tree.265"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair.268"* %9, %4
  br i1 %10, label %60, label %11

11:                                               ; preds = %6, %55
  %12 = phi %"struct.std::__1::pair.268"* [ %13, %55 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %12, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %49, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %12, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.x11::Error"*, %"class.x11::Error"** %18, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %18, align 8
  %20 = icmp eq %"class.x11::Error"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.x11::Error"* %19 to void (%"class.x11::Error"*)***
  %23 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %23, i64 1
  %25 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %24, align 8
  tail call void %25(%"class.x11::Error"* nonnull %19) #10
  br label %26

26:                                               ; preds = %21, %17
  %27 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %12, i64 -1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.x11::GetPropertyReply"*, %"struct.x11::GetPropertyReply"** %27, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %27, align 8
  %29 = icmp eq %"struct.x11::GetPropertyReply"* %28, null
  br i1 %29, label %48, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %28, i64 0, i32 5, i32 0
  %32 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %31, align 8
  %33 = icmp eq %"class.base::RefCountedMemory"* %32, null
  br i1 %33, label %46, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %32, i64 0, i32 1
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw sub i32* %36, i32 1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %46

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %35, i64 -2
  %41 = bitcast %"class.base::RefCountedThreadSafe.248"* %40 to %"class.base::RefCountedMemory"*
  %42 = bitcast %"class.base::RefCountedThreadSafe.248"* %40 to void (%"class.base::RefCountedMemory"*)***
  %43 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %43, i64 3
  %45 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %44, align 8
  tail call void %45(%"class.base::RefCountedMemory"* nonnull %41) #10
  br label %46

46:                                               ; preds = %39, %34, %30
  %47 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %28, i64 0, i32 0
  tail call void @_ZdlPv(i8* %47) #12
  br label %48

48:                                               ; preds = %46, %26
  store i8 0, i8* %14, align 8
  br label %49

49:                                               ; preds = %48, %11
  %50 = getelementptr inbounds %"struct.std::__1::pair.268", %"struct.std::__1::pair.268"* %12, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %50, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %50, align 8
  %52 = icmp eq %"class.x11::Connection::FutureImpl"* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.x11::Connection::FutureImpl"* %51 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %53, %49
  %56 = icmp eq %"struct.std::__1::pair.268"* %13, %4
  br i1 %56, label %57, label %11

57:                                               ; preds = %55
  %58 = bitcast %"class.base::internal::flat_tree.265"* %0 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %57, %6
  %61 = phi i8* [ %59, %57 ], [ %7, %6 ]
  store %"struct.std::__1::pair.268"* %4, %"struct.std::__1::pair.268"** %8, align 8
  tail call void @_ZdlPv(i8* %61) #12
  %62 = bitcast %"class.base::internal::flat_tree.265"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #10
  br label %63

63:                                               ; preds = %2, %60
  %64 = bitcast %"class.base::internal::flat_tree.265"* %1 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.base::internal::flat_tree.265"* %0 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.base::internal::flat_tree.265", %"class.base::internal::flat_tree.265"* %1, i64 0, i32 0, i32 0, i32 1
  %68 = bitcast %"struct.std::__1::pair.268"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.base::internal::flat_tree.265", %"class.base::internal::flat_tree.265"* %0, i64 0, i32 0, i32 0, i32 1
  %71 = bitcast %"struct.std::__1::pair.268"** %70 to i64*
  store i64 %69, i64* %71, align 8
  %72 = getelementptr inbounds %"class.base::internal::flat_tree.265", %"class.base::internal::flat_tree.265"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %73 = bitcast %"struct.std::__1::pair.268"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.base::internal::flat_tree.265", %"class.base::internal::flat_tree.265"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %76 = bitcast %"struct.std::__1::pair.268"** %75 to i64*
  store i64 %74, i64* %76, align 8
  %77 = bitcast %"class.base::internal::flat_tree.265"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #10
  ret %"class.base::internal::flat_tree.265"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.absl::optional_internal::optional_data.276"* @_ZN4absl17optional_internal13optional_dataIN3x118ResponseINS2_16GetPropertyReplyEEELb0EEaSEOS6_(%"class.absl::optional_internal::optional_data.276"*, %"class.absl::optional_internal::optional_data.276"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional_internal::optional_data.276", %"class.absl::optional_internal::optional_data.276"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional_internal::optional_data.276", %"class.absl::optional_internal::optional_data.276"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data.276", %"class.absl::optional_internal::optional_data.276"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.absl::optional_internal::optional_data.276", %"class.absl::optional_internal::optional_data.276"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"struct.x11::Response"* %7 to i64*
  %14 = load i64, i64* %13, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %12, align 8
  br i1 %10, label %53, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"struct.x11::GetPropertyReply"*, %"struct.x11::GetPropertyReply"** %16, align 8
  %18 = bitcast %"struct.x11::Response"* %11 to i64*
  store i64 %14, i64* %18, align 8
  %19 = icmp eq %"struct.x11::GetPropertyReply"* %17, null
  br i1 %19, label %38, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %17, i64 0, i32 5, i32 0
  %22 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %21, align 8
  %23 = icmp eq %"class.base::RefCountedMemory"* %22, null
  br i1 %23, label %36, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %22, i64 0, i32 1
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw sub i32* %26, i32 1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %36

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %25, i64 -2
  %31 = bitcast %"class.base::RefCountedThreadSafe.248"* %30 to %"class.base::RefCountedMemory"*
  %32 = bitcast %"class.base::RefCountedThreadSafe.248"* %30 to void (%"class.base::RefCountedMemory"*)***
  %33 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %33, i64 3
  %35 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %34, align 8
  tail call void %35(%"class.base::RefCountedMemory"* nonnull %31) #10
  br label %36

36:                                               ; preds = %29, %24, %20
  %37 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %17, i64 0, i32 0
  tail call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %36, %15
  %39 = getelementptr inbounds %"class.absl::optional_internal::optional_data.276", %"class.absl::optional_internal::optional_data.276"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %40 = getelementptr inbounds %"class.absl::optional_internal::optional_data.276", %"class.absl::optional_internal::optional_data.276"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::unique_ptr.249"* %40 to i64*
  %43 = load i64, i64* %42, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %41, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %39, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.x11::Error"*, %"class.x11::Error"** %44, align 8
  %46 = bitcast %"class.std::__1::unique_ptr.249"* %39 to i64*
  store i64 %43, i64* %46, align 8
  %47 = icmp eq %"class.x11::Error"* %45, null
  br i1 %47, label %97, label %48

48:                                               ; preds = %38
  %49 = bitcast %"class.x11::Error"* %45 to void (%"class.x11::Error"*)***
  %50 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %50, i64 1
  %52 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %51, align 8
  tail call void %52(%"class.x11::Error"* nonnull %45) #10
  br label %97

53:                                               ; preds = %6
  %54 = bitcast %"struct.x11::Response"* %11 to i64*
  store i64 %14, i64* %54, align 8
  %55 = getelementptr inbounds %"class.absl::optional_internal::optional_data.276", %"class.absl::optional_internal::optional_data.276"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %56 = getelementptr inbounds %"class.absl::optional_internal::optional_data.276", %"class.absl::optional_internal::optional_data.276"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.std::__1::unique_ptr.249"* %56 to i64*
  %59 = load i64, i64* %58, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %57, align 8
  %60 = bitcast %"class.std::__1::unique_ptr.249"* %55 to i64*
  store i64 %59, i64* %60, align 8
  store i8 1, i8* %8, align 8
  br label %97

61:                                               ; preds = %2
  %62 = getelementptr inbounds %"class.absl::optional_internal::optional_data.276", %"class.absl::optional_internal::optional_data.276"* %0, i64 0, i32 0, i32 0, i32 0
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %97, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.absl::optional_internal::optional_data.276", %"class.absl::optional_internal::optional_data.276"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %67 = load %"class.x11::Error"*, %"class.x11::Error"** %66, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %66, align 8
  %68 = icmp eq %"class.x11::Error"* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %65
  %70 = bitcast %"class.x11::Error"* %67 to void (%"class.x11::Error"*)***
  %71 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %71, i64 1
  %73 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %72, align 8
  tail call void %73(%"class.x11::Error"* nonnull %67) #10
  br label %74

74:                                               ; preds = %69, %65
  %75 = getelementptr inbounds %"class.absl::optional_internal::optional_data.276", %"class.absl::optional_internal::optional_data.276"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"struct.x11::GetPropertyReply"*, %"struct.x11::GetPropertyReply"** %75, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %75, align 8
  %77 = icmp eq %"struct.x11::GetPropertyReply"* %76, null
  br i1 %77, label %96, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %76, i64 0, i32 5, i32 0
  %80 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %79, align 8
  %81 = icmp eq %"class.base::RefCountedMemory"* %80, null
  br i1 %81, label %94, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %80, i64 0, i32 1
  %84 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw sub i32* %84, i32 1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %94

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %83, i64 -2
  %89 = bitcast %"class.base::RefCountedThreadSafe.248"* %88 to %"class.base::RefCountedMemory"*
  %90 = bitcast %"class.base::RefCountedThreadSafe.248"* %88 to void (%"class.base::RefCountedMemory"*)***
  %91 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %91, i64 3
  %93 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %92, align 8
  tail call void %93(%"class.base::RefCountedMemory"* nonnull %89) #10
  br label %94

94:                                               ; preds = %87, %82, %78
  %95 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %76, i64 0, i32 0
  tail call void @_ZdlPv(i8* %95) #12
  br label %96

96:                                               ; preds = %94, %74
  store i8 0, i8* %62, align 8
  br label %97

97:                                               ; preds = %96, %61, %53, %48, %38
  ret %"class.absl::optional_internal::optional_data.276"* %0
}

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN3x1110Connection10FutureImpl4WaitEv(%"class.x11::Connection::FutureImpl"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #8

declare void @_ZN3x1110Connection10FutureImpl10OnResponseEN4base12OnceCallbackIFv13scoped_refptrINS2_16RefCountedMemoryEENSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEEEEE(%"class.x11::Connection::FutureImpl"*, %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIZN3x116FutureINS3_16GetPropertyReplyEE10OnResponseENS_12OnceCallbackIFvNS3_8ResponseIS5_EEEEEEUlSB_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS3_5ErrorENSF_14default_deleteISH_EEEEE_JSB_EEEFvSE_SK_EE7RunOnceEPNS0_13BindStateBaseEOSE_OSK_(%"class.base::internal::BindStateBase"*, %class.scoped_refptr.247* dereferenceable(8), %"class.std::__1::unique_ptr.249"* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.base::OnceCallback.303", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %6 = bitcast %"class.base::internal::BindStateBase"* %5 to %class.anon*
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %8 = bitcast %"class.base::OnceCallback.303"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = bitcast void ()** %7 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.303"* %4 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds %class.scoped_refptr.247, %class.scoped_refptr.247* %1, i64 0, i32 0
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.x11::Error"*, %"class.x11::Error"** %15, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %15, align 8
  call void @_ZZN3x116FutureINS_16GetPropertyReplyEE10OnResponseEN4base12OnceCallbackIFvNS_8ResponseIS1_EEEEEENKUlS8_13scoped_refptrINS3_16RefCountedMemoryEENSt3__110unique_ptrINS_5ErrorENSC_14default_deleteISE_EEEEE_clES8_SB_SH_(%class.anon* %6, %"class.base::OnceCallback.303"* nonnull %4, %"class.base::RefCountedMemory"* %14, %"class.x11::Error"* %16) #10
  %17 = getelementptr inbounds %"class.base::OnceCallback.303", %"class.base::OnceCallback.303"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN3x116FutureINS_16GetPropertyReplyEE10OnResponseEN4base12OnceCallbackIFvNS_8ResponseIS1_EEEEEENKUlS8_13scoped_refptrINS3_16RefCountedMemoryEENSt3__110unique_ptrINS_5ErrorENSC_14default_deleteISE_EEEEE_clES8_SB_SH_(%class.anon*, %"class.base::OnceCallback.303"*, %"class.base::RefCountedMemory"*, %"class.x11::Error"*) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"struct.x11::Response", align 8
  %6 = alloca %"class.base::OnceCallback.303", align 8
  %7 = alloca %"struct.x11::ReadBuffer", align 8
  %8 = icmp eq %"class.base::RefCountedMemory"* %2, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %4
  %10 = bitcast %"struct.x11::ReadBuffer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"struct.x11::ReadBuffer"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = atomicrmw add i32* %11, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %7, %"class.base::RefCountedMemory"* nonnull %2, i1 zeroext false) #10
  %14 = call %"struct.x11::GetPropertyReply"* @_ZN3x116detail9ReadReplyINS_16GetPropertyReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %7) #10
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  br label %15

15:                                               ; preds = %4, %9
  %16 = phi %"struct.x11::GetPropertyReply"* [ %14, %9 ], [ null, %4 ]
  %17 = bitcast %"struct.x11::Response"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17)
  %18 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.x11::GetPropertyReply"* %16, %"struct.x11::GetPropertyReply"** %18, align 8
  %19 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.x11::Error"* %3, %"class.x11::Error"** %19, align 8
  %20 = bitcast %"class.base::OnceCallback.303"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"class.base::OnceCallback.303", %"class.base::OnceCallback.303"* %1, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.base::OnceCallback.303"* %1 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.base::OnceCallback.303"* %6 to i64*
  store i64 %23, i64* %24, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %21, align 8
  %25 = getelementptr inbounds %"class.base::OnceCallback.303", %"class.base::OnceCallback.303"* %6, i64 0, i32 0
  %26 = inttoptr i64 %23 to %"class.base::internal::BindStateBase"*
  %27 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %26, i64 0, i32 1
  %28 = bitcast void ()** %27 to void (%"class.base::internal::BindStateBase"*, %"struct.x11::Response"*)**
  %29 = load void (%"class.base::internal::BindStateBase"*, %"struct.x11::Response"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.x11::Response"*)** %28, align 8
  call void %29(%"class.base::internal::BindStateBase"* %26, %"struct.x11::Response"* nonnull dereferenceable(16) %5) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  %30 = load %"class.x11::Error"*, %"class.x11::Error"** %19, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %19, align 8
  %31 = icmp eq %"class.x11::Error"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %15
  %33 = bitcast %"class.x11::Error"* %30 to void (%"class.x11::Error"*)***
  %34 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %34, i64 1
  %36 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %35, align 8
  call void %36(%"class.x11::Error"* nonnull %30) #10
  br label %37

37:                                               ; preds = %32, %15
  %38 = load %"struct.x11::GetPropertyReply"*, %"struct.x11::GetPropertyReply"** %18, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %18, align 8
  %39 = icmp eq %"struct.x11::GetPropertyReply"* %38, null
  br i1 %39, label %58, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %38, i64 0, i32 5, i32 0
  %42 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %43 = icmp eq %"class.base::RefCountedMemory"* %42, null
  br i1 %43, label %56, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %42, i64 0, i32 1
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw sub i32* %46, i32 1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %56

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %45, i64 -2
  %51 = bitcast %"class.base::RefCountedThreadSafe.248"* %50 to %"class.base::RefCountedMemory"*
  %52 = bitcast %"class.base::RefCountedThreadSafe.248"* %50 to void (%"class.base::RefCountedMemory"*)***
  %53 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %53, i64 3
  %55 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %54, align 8
  call void %55(%"class.base::RefCountedMemory"* nonnull %51) #10
  br label %56

56:                                               ; preds = %49, %44, %40
  %57 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %38, i64 0, i32 0
  call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %37, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17)
  br i1 %8, label %71, label %59

59:                                               ; preds = %58
  %60 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %2, i64 0, i32 1
  %61 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw sub i32* %61, i32 1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %71

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %60, i64 -2
  %66 = bitcast %"class.base::RefCountedThreadSafe.248"* %65 to %"class.base::RefCountedMemory"*
  %67 = bitcast %"class.base::RefCountedThreadSafe.248"* %65 to void (%"class.base::RefCountedMemory"*)***
  %68 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %68, i64 3
  %70 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %69, align 8
  call void %70(%"class.base::RefCountedMemory"* nonnull %66) #10
  br label %71

71:                                               ; preds = %58, %59, %64
  ret void
}

declare void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"*, %"class.base::RefCountedMemory"*, i1 zeroext) unnamed_addr #1

declare %"struct.x11::GetPropertyReply"* @_ZN3x116detail9ReadReplyINS_16GetPropertyReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIZN3x116FutureINS2_16GetPropertyReplyEE10OnResponseENS_12OnceCallbackIFvNS2_8ResponseIS4_EEEEEEUlSA_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS2_5ErrorENSE_14default_deleteISG_EEEEE_JSA_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3x1113PropertyCacheEFvPNS4_13PropertyValueENS3_8ResponseINS3_16GetPropertyReplyEEEEJNS_7WeakPtrIS4_EES6_EEEFvS9_EE7RunOnceEPNS0_13BindStateBaseEOS9_(%"class.base::internal::BindStateBase"*, %"struct.x11::Response"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"struct.x11::PropertyCache::PropertyValue"**
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %9 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #10
  br i1 %9, label %10, label %50

10:                                               ; preds = %2
  %11 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to %"class.x11::PropertyCache"**
  %13 = load %"class.x11::PropertyCache"*, %"class.x11::PropertyCache"** %12, align 8
  %14 = icmp eq %"class.x11::PropertyCache"* %13, null
  br i1 %14, label %50, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %19 = bitcast void ()** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #10
  br i1 %21, label %25, label %22

22:                                               ; preds = %15
  %23 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %22, %15
  %26 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #10
  %27 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = select i1 %26, i8* %28, i8* null
  %30 = getelementptr inbounds i8, i8* %29, i64 %20
  %31 = bitcast i8* %30 to %"class.x11::PropertyCache"*
  %32 = and i64 %17, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %25
  %35 = bitcast i8* %30 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = add i64 %17, -1
  %38 = getelementptr i8, i8* %36, i64 %37
  %39 = bitcast i8* %38 to void (%"class.x11::PropertyCache"*, %"struct.x11::PropertyCache::PropertyValue"*, %"struct.x11::GetPropertyReply"*, %"class.x11::Error"*)**
  %40 = load void (%"class.x11::PropertyCache"*, %"struct.x11::PropertyCache::PropertyValue"*, %"struct.x11::GetPropertyReply"*, %"class.x11::Error"*)*, void (%"class.x11::PropertyCache"*, %"struct.x11::PropertyCache::PropertyValue"*, %"struct.x11::GetPropertyReply"*, %"class.x11::Error"*)** %39, align 8
  br label %43

41:                                               ; preds = %25
  %42 = inttoptr i64 %17 to void (%"class.x11::PropertyCache"*, %"struct.x11::PropertyCache::PropertyValue"*, %"struct.x11::GetPropertyReply"*, %"class.x11::Error"*)*
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi void (%"class.x11::PropertyCache"*, %"struct.x11::PropertyCache::PropertyValue"*, %"struct.x11::GetPropertyReply"*, %"class.x11::Error"*)* [ %40, %34 ], [ %42, %41 ]
  %45 = load %"struct.x11::PropertyCache::PropertyValue"*, %"struct.x11::PropertyCache::PropertyValue"** %7, align 8
  %46 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"struct.x11::GetPropertyReply"*, %"struct.x11::GetPropertyReply"** %46, align 8
  store %"struct.x11::GetPropertyReply"* null, %"struct.x11::GetPropertyReply"** %46, align 8
  %48 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.x11::Error"*, %"class.x11::Error"** %48, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %48, align 8
  call void %44(%"class.x11::PropertyCache"* %31, %"struct.x11::PropertyCache::PropertyValue"* %45, %"struct.x11::GetPropertyReply"* %47, %"class.x11::Error"* %49) #10
  br label %50

50:                                               ; preds = %2, %10, %43
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3x1113PropertyCacheEFvPNS3_13PropertyValueENS2_8ResponseINS2_16GetPropertyReplyEEEEJNS_7WeakPtrIS3_EES5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3x1113PropertyCacheEFvPNS4_13PropertyValueENS3_8ResponseINS3_16GetPropertyReplyEEEEJNS_7WeakPtrIS4_EES6_EEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.x11::PropertyCache"**
  %9 = load %"class.x11::PropertyCache"*, %"class.x11::PropertyCache"** %8, align 8
  %10 = icmp ne %"class.x11::PropertyCache"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #10
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base14WeakPtrFactoryIN3x1113PropertyCacheEE10GetWeakPtrEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base14WeakPtrFactoryIN3x1113PropertyCacheEE10GetWeakPtrEv"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3x1113PropertyCacheEFvPNS4_13PropertyValueENS3_8ResponseINS3_16GetPropertyReplyEEEEJNS_7WeakPtrIS4_EERS6_EEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3x1113PropertyCacheEFvPNS4_13PropertyValueENS3_8ResponseINS3_16GetPropertyReplyEEEEJNS_7WeakPtrIS4_EERS6_EEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base8BindOnceIMN3x1113PropertyCacheEFvPNS2_13PropertyValueENS1_8ResponseINS1_16GetPropertyReplyEEEEJNS_7WeakPtrIS2_EERS4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8BindOnceIMN3x1113PropertyCacheEFvPNS2_13PropertyValueENS1_8ResponseINS1_16GetPropertyReplyEEEEJNS_7WeakPtrIS2_EERS4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZN4base8internal8BindImplINS_12OnceCallbackERZN3x116FutureINS3_16GetPropertyReplyEE10OnResponseENS2_IFvNS3_8ResponseIS5_EEEEEEUlSA_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS3_5ErrorENSE_14default_deleteISG_EEEEE_JSA_EEEDcOT0_DpOT1_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8internal8BindImplINS_12OnceCallbackERZN3x116FutureINS3_16GetPropertyReplyEE10OnResponseENS2_IFvNS3_8ResponseIS5_EEEEEEUlSA_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS3_5ErrorENSE_14default_deleteISG_EEEEE_JSA_EEEDcOT0_DpOT1_"}
!14 = distinct !{!14, !15, !"_ZN4base8BindOnceIRZN3x116FutureINS1_16GetPropertyReplyEE10OnResponseENS_12OnceCallbackIFvNS1_8ResponseIS3_EEEEEEUlS9_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS1_5ErrorENSD_14default_deleteISF_EEEEE_JS9_EEENS5_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8BindOnceIRZN3x116FutureINS1_16GetPropertyReplyEE10OnResponseENS_12OnceCallbackIFvNS1_8ResponseIS3_EEEEEEUlS9_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS1_5ErrorENSD_14default_deleteISF_EEEEE_JS9_EEENS5_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_"}
