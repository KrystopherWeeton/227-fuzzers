; ModuleID = '../../services/device/public/cpp/usb/usb_ids.cc'
source_filename = "../../services/device/public/cpp/usb/usb_ids.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.device::UsbVendor" = type { i8*, %"struct.device::UsbProduct"*, i16, i16 }
%"struct.device::UsbProduct" = type { i16, i8* }

@_ZN6device6UsbIds8vendors_E = external global [0 x %"struct.device::UsbVendor"], align 8
@_ZN6device6UsbIds12vendor_size_E = external local_unnamed_addr constant i64, align 8

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"struct.device::UsbVendor"* @_ZN6device6UsbIds10FindVendorEt(i16 zeroext) local_unnamed_addr #0 align 2 {
  %2 = load i64, i64* @_ZN6device6UsbIds12vendor_size_E, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %26, label %4

4:                                                ; preds = %1
  %5 = zext i16 %0 to i32
  br label %6

6:                                                ; preds = %4, %20
  %7 = phi i64 [ %22, %20 ], [ %2, %4 ]
  %8 = phi i64 [ %21, %20 ], [ 0, %4 ]
  %9 = add i64 %8, %7
  %10 = lshr i64 %9, 1
  %11 = getelementptr [0 x %"struct.device::UsbVendor"], [0 x %"struct.device::UsbVendor"]* @_ZN6device6UsbIds8vendors_E, i64 0, i64 %10, i32 2
  %12 = load i16, i16* %11, align 8
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %5, %13
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %6
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %10, 1
  br label %20

20:                                               ; preds = %18, %6
  %21 = phi i64 [ %19, %18 ], [ %8, %6 ]
  %22 = phi i64 [ %7, %18 ], [ %10, %6 ]
  %23 = icmp ult i64 %21, %22
  br i1 %23, label %6, label %26

24:                                               ; preds = %16
  %25 = getelementptr [0 x %"struct.device::UsbVendor"], [0 x %"struct.device::UsbVendor"]* @_ZN6device6UsbIds8vendors_E, i64 0, i64 %10
  br label %26

26:                                               ; preds = %20, %24, %1
  %27 = phi %"struct.device::UsbVendor"* [ null, %1 ], [ %25, %24 ], [ null, %20 ]
  ret %"struct.device::UsbVendor"* %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZN6device6UsbIds13GetVendorNameEt(i16 zeroext) local_unnamed_addr #1 align 2 {
  %2 = load i64, i64* @_ZN6device6UsbIds12vendor_size_E, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %30, label %4

4:                                                ; preds = %1
  %5 = zext i16 %0 to i32
  br label %6

6:                                                ; preds = %20, %4
  %7 = phi i64 [ %22, %20 ], [ %2, %4 ]
  %8 = phi i64 [ %21, %20 ], [ 0, %4 ]
  %9 = add i64 %8, %7
  %10 = lshr i64 %9, 1
  %11 = getelementptr [0 x %"struct.device::UsbVendor"], [0 x %"struct.device::UsbVendor"]* @_ZN6device6UsbIds8vendors_E, i64 0, i64 %10, i32 2
  %12 = load i16, i16* %11, align 8
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %5, %13
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %6
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %10, 1
  br label %20

20:                                               ; preds = %18, %6
  %21 = phi i64 [ %19, %18 ], [ %8, %6 ]
  %22 = phi i64 [ %7, %18 ], [ %10, %6 ]
  %23 = icmp ult i64 %21, %22
  br i1 %23, label %6, label %30

24:                                               ; preds = %16
  %25 = getelementptr [0 x %"struct.device::UsbVendor"], [0 x %"struct.device::UsbVendor"]* @_ZN6device6UsbIds8vendors_E, i64 0, i64 %10
  %26 = icmp eq %"struct.device::UsbVendor"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"struct.device::UsbVendor", %"struct.device::UsbVendor"* %25, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %20, %1, %24, %27
  %31 = phi i8* [ %29, %27 ], [ null, %24 ], [ null, %1 ], [ null, %20 ]
  ret i8* %31
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @_ZN6device6UsbIds14GetProductNameEtt(i16 zeroext, i16 zeroext) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* @_ZN6device6UsbIds12vendor_size_E, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %64, label %5

5:                                                ; preds = %2
  %6 = zext i16 %0 to i32
  br label %7

7:                                                ; preds = %21, %5
  %8 = phi i64 [ %23, %21 ], [ %3, %5 ]
  %9 = phi i64 [ %22, %21 ], [ 0, %5 ]
  %10 = add i64 %9, %8
  %11 = lshr i64 %10, 1
  %12 = getelementptr [0 x %"struct.device::UsbVendor"], [0 x %"struct.device::UsbVendor"]* @_ZN6device6UsbIds8vendors_E, i64 0, i64 %11, i32 2
  %13 = load i16, i16* %12, align 8
  %14 = zext i16 %13 to i32
  %15 = sub nsw i32 %6, %14
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %7
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %17
  %20 = add nuw i64 %11, 1
  br label %21

21:                                               ; preds = %19, %7
  %22 = phi i64 [ %20, %19 ], [ %9, %7 ]
  %23 = phi i64 [ %8, %19 ], [ %11, %7 ]
  %24 = icmp ult i64 %22, %23
  br i1 %24, label %7, label %64

25:                                               ; preds = %17
  %26 = getelementptr [0 x %"struct.device::UsbVendor"], [0 x %"struct.device::UsbVendor"]* @_ZN6device6UsbIds8vendors_E, i64 0, i64 %11
  %27 = icmp eq %"struct.device::UsbVendor"* %26, null
  br i1 %27, label %64, label %28

28:                                               ; preds = %25
  %29 = getelementptr [0 x %"struct.device::UsbVendor"], [0 x %"struct.device::UsbVendor"]* @_ZN6device6UsbIds8vendors_E, i64 0, i64 %11, i32 1
  %30 = bitcast %"struct.device::UsbProduct"** %29 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr [0 x %"struct.device::UsbVendor"], [0 x %"struct.device::UsbVendor"]* @_ZN6device6UsbIds8vendors_E, i64 0, i64 %11, i32 3
  %33 = load i16, i16* %32, align 2
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %64, label %35

35:                                               ; preds = %28
  %36 = zext i16 %33 to i64
  %37 = zext i16 %1 to i32
  br label %38

38:                                               ; preds = %35, %54
  %39 = phi i64 [ %56, %54 ], [ %36, %35 ]
  %40 = phi i64 [ %55, %54 ], [ 0, %35 ]
  %41 = add i64 %40, %39
  %42 = lshr i64 %41, 1
  %43 = shl i64 %42, 4
  %44 = getelementptr inbounds i8, i8* %31, i64 %43
  %45 = bitcast i8* %44 to i16*
  %46 = load i16, i16* %45, align 8
  %47 = zext i16 %46 to i32
  %48 = sub nsw i32 %37, %47
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %38
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %50
  %53 = add nuw i64 %42, 1
  br label %54

54:                                               ; preds = %52, %38
  %55 = phi i64 [ %53, %52 ], [ %40, %38 ]
  %56 = phi i64 [ %39, %52 ], [ %42, %38 ]
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %38, label %64

58:                                               ; preds = %50
  %59 = icmp eq i8* %44, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds i8, i8* %44, i64 8
  %62 = bitcast i8* %61 to i8**
  %63 = load i8*, i8** %62, align 8
  br label %64

64:                                               ; preds = %21, %54, %60, %58, %28, %2, %25
  %65 = phi i8* [ null, %25 ], [ null, %2 ], [ %63, %60 ], [ null, %58 ], [ null, %28 ], [ null, %54 ], [ null, %21 ]
  ret i8* %65
}

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
