; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_rtc_stats_response.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_rtc_stats_response.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.191" }
%"struct.std::__1::atomic.191" = type { %"struct.std::__1::__atomic_base.192" }
%"struct.std::__1::__atomic_base.192" = type { %"struct.std::__1::__atomic_base.193" }
%"struct.std::__1::__atomic_base.193" = type { %"struct.std::__1::__cxx_atomic_impl.194" }
%"struct.std::__1::__cxx_atomic_impl.194" = type { %"struct.std::__1::__cxx_atomic_base_impl.195" }
%"struct.std::__1::__cxx_atomic_base_impl.195" = type { i32 }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"struct.v8::NamedPropertyHandlerConfiguration" = type <{ void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)*, void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo"*)*, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo.209"*)*, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo.206"*)*, void (%"class.v8::PropertyCallbackInfo.210"*)*, void (%"class.v8::Name"*, %"class.v8::PropertyDescriptor"*, %"class.v8::PropertyCallbackInfo"*)*, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)*, %"class.v8::Local.202", i32, [4 x i8] }>
%"class.v8::Name" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.v8::PropertyCallbackInfo" = type { i64* }
%"class.v8::PropertyCallbackInfo.209" = type opaque
%"class.v8::PropertyCallbackInfo.206" = type { i64* }
%"class.v8::PropertyCallbackInfo.210" = type { i64* }
%"class.v8::PropertyDescriptor" = type { %"struct.v8::PropertyDescriptor::PrivateData"* }
%"struct.v8::PropertyDescriptor::PrivateData" = type opaque
%"class.v8::Local.202" = type { %"class.v8::Value"* }
%"struct.v8::IndexedPropertyHandlerConfiguration" = type <{ void (i32, %"class.v8::PropertyCallbackInfo"*)*, void (i32, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo"*)*, void (i32, %"class.v8::PropertyCallbackInfo.209"*)*, void (i32, %"class.v8::PropertyCallbackInfo.206"*)*, void (%"class.v8::PropertyCallbackInfo.210"*)*, void (i32, %"class.v8::PropertyDescriptor"*, %"class.v8::PropertyCallbackInfo"*)*, void (i32, %"class.v8::PropertyCallbackInfo"*)*, %"class.v8::Local.202", i32, [4 x i8] }>
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.190 }
%class.scoped_refptr.190 = type { %"class.WTF::StringImpl"* }
%"class.blink::RTCStatsResponse" = type { %"class.blink::RTCStatsResponseBase", %"class.blink::HeapVector", %"class.WTF::HashMap.185" }
%"class.blink::RTCStatsResponseBase" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.181" }
%"class.WTF::Vector.181" = type { %"class.WTF::VectorBuffer.182" }
%"class.WTF::VectorBuffer.182" = type { %"class.WTF::VectorBufferBase.183" }
%"class.WTF::VectorBufferBase.183" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::RTCLegacyStatsReport"* }
%"class.blink::RTCLegacyStatsReport" = type { %"class.blink::ScriptWrappable", %"class.WTF::String", %"class.WTF::String", double, %"class.WTF::HashMap.197" }
%"class.WTF::HashMap.197" = type { %"class.WTF::HashTable.198" }
%"class.WTF::HashTable.198" = type <{ %"struct.WTF::KeyValuePair.201"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.201" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::HashMap.185" = type { %"class.WTF::HashTable.186" }
%"class.WTF::HashTable.186" = type <{ %"struct.WTF::KeyValuePair.189"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.189" = type opaque
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.222, %"class.blink::Member.223", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.222 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.223" = type { %"class.blink::MemberBase.224" }
%"class.blink::MemberBase.224" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.225" }
%"class.blink::Persistent.225" = type { %"class.blink::PersistentBase.226" }
%"class.blink::PersistentBase.226" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.203" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.203" = type { %"class.v8::TracedReference.204" }
%"class.v8::TracedReference.204" = type { %"class.v8::BasicTracedReference.205" }
%"class.v8::BasicTracedReference.205" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::internal::Isolate" = type opaque
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.196", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.196" = type { %"class.v8::String"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.214" }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { i8* }
%"class.blink::HeapVector.233" = type { %"class.WTF::Vector.236" }
%"class.WTF::Vector.236" = type { %"class.WTF::VectorBuffer.237" }
%"class.WTF::VectorBuffer.237" = type { %"class.WTF::VectorBufferBase.238" }
%"class.WTF::VectorBufferBase.238" = type { %"class.blink::Member.239"*, i32, i32 }
%"class.blink::Member.239" = type { %"class.blink::MemberBase.240" }
%"class.blink::MemberBase.240" = type { %"class.blink::ScriptWrappable"* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::Int32" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.v8::Array" = type { i8 }

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_ = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink8bindings18ToV8HelperSequenceINS_15ScriptWrappableENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_ = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

@.str = private unnamed_addr constant [17 x i8] c"RTCStatsResponse\00", align 1
@_ZN5blink18V8RTCStatsResponse18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink18V8RTCStatsResponse24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* @_ZN5blink18V8RTCStatsResponse33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* null, i8 8 }, align 8
@_ZN5blink16RTCStatsResponse18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink18V8RTCStatsResponse18wrapper_type_info_E, align 8
@.str.1 = private unnamed_addr constant [40 x i8] c"Named property setter is not supported.\00", align 1
@_ZZN5blink18V8RTCStatsResponse30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_rtc_stats_response26NamedItemOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_rtc_stats_response23ResultOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }], align 16
@.str.2 = private unnamed_addr constant [10 x i8] c"namedItem\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"result\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.5 = private unnamed_addr constant [10 x i8] c"undefined\00", align 1
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.6 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@.str.9 = private unnamed_addr constant [65 x i8] c"../../third_party/blink/renderer/bindings/core/v8/to_v8_traits.h\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"script_wrappable\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18V8RTCStatsResponse24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = alloca %"struct.v8::NamedPropertyHandlerConfiguration", align 8
  %6 = alloca %"struct.v8::IndexedPropertyHandlerConfiguration", align 8
  %7 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %8 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %7) #8
  %9 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %7) #8
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink18V8RTCStatsResponse18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %8, %"class.v8::ObjectTemplate"* %9, %"class.v8::FunctionTemplate"* %7, %"class.v8::FunctionTemplate"* null) #8
  %10 = bitcast %"struct.v8::NamedPropertyHandlerConfiguration"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"struct.v8::NamedPropertyHandlerConfiguration", %"struct.v8::NamedPropertyHandlerConfiguration"* %5, i64 0, i32 0
  store void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* @_ZN5blink18V8RTCStatsResponse27NamedPropertyGetterCallbackEN2v85LocalINS1_4NameEEERKNS1_20PropertyCallbackInfoINS1_5ValueEEE, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)** %11, align 8
  %12 = getelementptr inbounds %"struct.v8::NamedPropertyHandlerConfiguration", %"struct.v8::NamedPropertyHandlerConfiguration"* %5, i64 0, i32 1
  store void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo"*)* @_ZN5blink18V8RTCStatsResponse27NamedPropertySetterCallbackEN2v85LocalINS1_4NameEEENS2_INS1_5ValueEEERKNS1_20PropertyCallbackInfoIS5_EE, void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo"*)** %12, align 8
  %13 = getelementptr inbounds %"struct.v8::NamedPropertyHandlerConfiguration", %"struct.v8::NamedPropertyHandlerConfiguration"* %5, i64 0, i32 2
  store void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo.209"*)* null, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo.209"*)** %13, align 8
  %14 = getelementptr inbounds %"struct.v8::NamedPropertyHandlerConfiguration", %"struct.v8::NamedPropertyHandlerConfiguration"* %5, i64 0, i32 3
  store void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo.206"*)* @_ZN5blink18V8RTCStatsResponse28NamedPropertyDeleterCallbackEN2v85LocalINS1_4NameEEERKNS1_20PropertyCallbackInfoINS1_7BooleanEEE, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo.206"*)** %14, align 8
  %15 = getelementptr inbounds %"struct.v8::NamedPropertyHandlerConfiguration", %"struct.v8::NamedPropertyHandlerConfiguration"* %5, i64 0, i32 4
  store void (%"class.v8::PropertyCallbackInfo.210"*)* null, void (%"class.v8::PropertyCallbackInfo.210"*)** %15, align 8
  %16 = getelementptr inbounds %"struct.v8::NamedPropertyHandlerConfiguration", %"struct.v8::NamedPropertyHandlerConfiguration"* %5, i64 0, i32 5
  store void (%"class.v8::Name"*, %"class.v8::PropertyDescriptor"*, %"class.v8::PropertyCallbackInfo"*)* @_ZN5blink18V8RTCStatsResponse28NamedPropertyDefinerCallbackEN2v85LocalINS1_4NameEEERKNS1_18PropertyDescriptorERKNS1_20PropertyCallbackInfoINS1_5ValueEEE, void (%"class.v8::Name"*, %"class.v8::PropertyDescriptor"*, %"class.v8::PropertyCallbackInfo"*)** %16, align 8
  %17 = getelementptr inbounds %"struct.v8::NamedPropertyHandlerConfiguration", %"struct.v8::NamedPropertyHandlerConfiguration"* %5, i64 0, i32 6
  store void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* @_ZN5blink18V8RTCStatsResponse31NamedPropertyDescriptorCallbackEN2v85LocalINS1_4NameEEERKNS1_20PropertyCallbackInfoINS1_5ValueEEE, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)** %17, align 8
  %18 = getelementptr inbounds %"struct.v8::NamedPropertyHandlerConfiguration", %"struct.v8::NamedPropertyHandlerConfiguration"* %5, i64 0, i32 7, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %18, align 8
  %19 = getelementptr inbounds %"struct.v8::NamedPropertyHandlerConfiguration", %"struct.v8::NamedPropertyHandlerConfiguration"* %5, i64 0, i32 8
  store i32 6, i32* %19, align 8
  call void @_ZN2v814ObjectTemplate10SetHandlerERKNS_33NamedPropertyHandlerConfigurationE(%"class.v8::ObjectTemplate"* %8, %"struct.v8::NamedPropertyHandlerConfiguration"* nonnull dereferenceable(72) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #8
  %20 = bitcast %"struct.v8::IndexedPropertyHandlerConfiguration"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %20) #8
  %21 = getelementptr inbounds %"struct.v8::IndexedPropertyHandlerConfiguration", %"struct.v8::IndexedPropertyHandlerConfiguration"* %6, i64 0, i32 0
  store void (i32, %"class.v8::PropertyCallbackInfo"*)* @_ZN5blink18V8RTCStatsResponse29IndexedPropertyGetterCallbackEjRKN2v820PropertyCallbackInfoINS1_5ValueEEE, void (i32, %"class.v8::PropertyCallbackInfo"*)** %21, align 8
  %22 = getelementptr inbounds %"struct.v8::IndexedPropertyHandlerConfiguration", %"struct.v8::IndexedPropertyHandlerConfiguration"* %6, i64 0, i32 1
  store void (i32, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo"*)* @_ZN5blink18V8RTCStatsResponse29IndexedPropertySetterCallbackEjN2v85LocalINS1_5ValueEEERKNS1_20PropertyCallbackInfoIS3_EE, void (i32, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo"*)** %22, align 8
  %23 = getelementptr inbounds %"struct.v8::IndexedPropertyHandlerConfiguration", %"struct.v8::IndexedPropertyHandlerConfiguration"* %6, i64 0, i32 2
  store void (i32, %"class.v8::PropertyCallbackInfo.209"*)* null, void (i32, %"class.v8::PropertyCallbackInfo.209"*)** %23, align 8
  %24 = getelementptr inbounds %"struct.v8::IndexedPropertyHandlerConfiguration", %"struct.v8::IndexedPropertyHandlerConfiguration"* %6, i64 0, i32 3
  store void (i32, %"class.v8::PropertyCallbackInfo.206"*)* @_ZN5blink18V8RTCStatsResponse30IndexedPropertyDeleterCallbackEjRKN2v820PropertyCallbackInfoINS1_7BooleanEEE, void (i32, %"class.v8::PropertyCallbackInfo.206"*)** %24, align 8
  %25 = getelementptr inbounds %"struct.v8::IndexedPropertyHandlerConfiguration", %"struct.v8::IndexedPropertyHandlerConfiguration"* %6, i64 0, i32 4
  store void (%"class.v8::PropertyCallbackInfo.210"*)* null, void (%"class.v8::PropertyCallbackInfo.210"*)** %25, align 8
  %26 = getelementptr inbounds %"struct.v8::IndexedPropertyHandlerConfiguration", %"struct.v8::IndexedPropertyHandlerConfiguration"* %6, i64 0, i32 5
  store void (i32, %"class.v8::PropertyDescriptor"*, %"class.v8::PropertyCallbackInfo"*)* @_ZN5blink18V8RTCStatsResponse30IndexedPropertyDefinerCallbackEjRKN2v818PropertyDescriptorERKNS1_20PropertyCallbackInfoINS1_5ValueEEE, void (i32, %"class.v8::PropertyDescriptor"*, %"class.v8::PropertyCallbackInfo"*)** %26, align 8
  %27 = getelementptr inbounds %"struct.v8::IndexedPropertyHandlerConfiguration", %"struct.v8::IndexedPropertyHandlerConfiguration"* %6, i64 0, i32 6
  store void (i32, %"class.v8::PropertyCallbackInfo"*)* @_ZN5blink18V8RTCStatsResponse33IndexedPropertyDescriptorCallbackEjRKN2v820PropertyCallbackInfoINS1_5ValueEEE, void (i32, %"class.v8::PropertyCallbackInfo"*)** %27, align 8
  %28 = getelementptr inbounds %"struct.v8::IndexedPropertyHandlerConfiguration", %"struct.v8::IndexedPropertyHandlerConfiguration"* %6, i64 0, i32 7, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %28, align 8
  %29 = getelementptr inbounds %"struct.v8::IndexedPropertyHandlerConfiguration", %"struct.v8::IndexedPropertyHandlerConfiguration"* %6, i64 0, i32 8
  store i32 0, i32* %29, align 8
  call void @_ZN2v814ObjectTemplate10SetHandlerERKNS_35IndexedPropertyHandlerConfigurationE(%"class.v8::ObjectTemplate"* %8, %"struct.v8::IndexedPropertyHandlerConfiguration"* nonnull dereferenceable(72) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %20) #8
  %30 = bitcast %"class.v8::ObjectTemplate"* %8 to %"class.v8::Template"*
  %31 = bitcast %"class.v8::ObjectTemplate"* %9 to %"class.v8::Template"*
  %32 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32)
  %33 = call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %7) #8
  %34 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 2, i64* %34, align 8
  %35 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink18V8RTCStatsResponse30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %35, align 8
  call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %30, %"class.v8::Template"* %31, %"class.v8::Template"* %2, %"class.v8::Signature"* %33, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18V8RTCStatsResponse33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE(%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"* nocapture readnone dereferenceable(32), %"class.v8::Object"* nocapture readnone, %"class.v8::Object"*, %"class.v8::Object"* nocapture readnone, %"class.v8::Template"* nocapture readnone, i64) #0 align 2 {
  %8 = trunc i64 %6 to i8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %7
  %11 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #8
  %12 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %11, i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i32 1, i32 11) #8
  %13 = icmp eq %"class.v8::String"* %12, null
  br i1 %13, label %14, label %15, !prof !2

14:                                               ; preds = %10
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %15

15:                                               ; preds = %10, %14
  %16 = bitcast %"class.v8::String"* %12 to %"class.v8::Value"*
  %17 = tail call i16 @_ZN2v86Object6DeleteENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %3, %"class.v8::Context"* %0, %"class.v8::Value"* %16) #8
  %18 = trunc i16 %17 to i8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %15
  tail call void @_ZN2v82V817FromJustIsNothingEv() #8
  br label %21

21:                                               ; preds = %7, %20, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18V8RTCStatsResponse27NamedPropertyGetterCallbackEN2v85LocalINS1_4NameEEERKNS1_20PropertyCallbackInfoINS1_5ValueEEE(%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load i16, i16* %15, align 2
  switch i16 %16, label %21 [
    i16 1057, label %17
    i16 1056, label %17
    i16 1040, label %17
  ]

17:                                               ; preds = %2, %2, %2
  %18 = add i64 %7, 19
  %19 = inttoptr i64 %18 to i8**
  %20 = load i8*, i8** %19, align 1
  br label %24

21:                                               ; preds = %2
  %22 = bitcast i64* %6 to %"class.v8::Object"*
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %22, i32 1) #8
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi i8* [ %20, %17 ], [ %23, %21 ]
  %26 = bitcast i8* %25 to %"class.blink::RTCStatsResponse"*
  %27 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = bitcast %"class.v8::Name"* %0 to %"class.v8::String"*
  %29 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* %28, i32 0) #8
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %30, align 8
  %31 = call %"class.blink::RTCLegacyStatsReport"* @_ZN5blink16RTCStatsResponse9namedItemERKN3WTF12AtomicStringE(%"class.blink::RTCStatsResponse"* %26, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #8
  %32 = icmp eq %"class.blink::RTCLegacyStatsReport"* %31, null
  br i1 %32, label %58, label %33

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.blink::RTCLegacyStatsReport", %"class.blink::RTCLegacyStatsReport"* %31, i64 0, i32 0
  %35 = load i64*, i64** %4, align 8
  %36 = getelementptr inbounds i64, i64* %35, i64 4
  %37 = bitcast i8* %25 to %"class.blink::ScriptWrappable"*
  %38 = getelementptr inbounds i64, i64* %35, i64 1
  %39 = bitcast i64* %38 to %"class.v8::Object"*
  %40 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %36, %"class.blink::ScriptWrappable"* nonnull %34, %"class.v8::Object"* %39, %"class.blink::ScriptWrappable"* %37) #8
  br i1 %40, label %58, label %41

41:                                               ; preds = %33
  %42 = load i64*, i64** %4, align 8
  %43 = getelementptr inbounds i64, i64* %42, i64 1
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  %45 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %44) #8
  %46 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %45) #8
  %47 = bitcast %"class.blink::RTCLegacyStatsReport"* %31 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %48 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %47, align 8
  %49 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %48, i64 7
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %49, align 8
  %51 = call %"class.v8::Value"* %50(%"class.blink::ScriptWrappable"* nonnull %34, %"class.blink::ScriptState"* %46) #8
  %52 = icmp eq %"class.v8::Value"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %41
  %54 = load i64*, i64** %4, align 8
  %55 = getelementptr inbounds i64, i64* %54, i64 4
  %56 = bitcast %"class.v8::Value"* %51 to i64*
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %55, align 8
  br label %58

58:                                               ; preds = %53, %41, %33, %24
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #8
  br label %74

74:                                               ; preds = %58, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::RTCLegacyStatsReport"* @_ZN5blink16RTCStatsResponse9namedItemERKN3WTF12AtomicStringE(%"class.blink::RTCStatsResponse"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18V8RTCStatsResponse27NamedPropertySetterCallbackEN2v85LocalINS1_4NameEEENS2_INS1_5ValueEEERKNS1_20PropertyCallbackInfoIS5_EE(%"class.v8::Name"*, %"class.v8::Value"* nocapture readnone, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %4 = alloca %"class.blink::ExceptionState", align 8
  tail call void @_ZN5blink18V8RTCStatsResponse27NamedPropertyGetterCallbackEN2v85LocalINS1_4NameEEERKNS1_20PropertyCallbackInfoINS1_5ValueEEE(%"class.v8::Name"* %0, %"class.v8::PropertyCallbackInfo"* dereferenceable(8) %2)
  %5 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %2, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 4
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i64, i64* %6, i64 2
  %10 = bitcast i64* %9 to %"class.v8::Isolate"**
  %11 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  %12 = ptrtoint %"class.v8::Isolate"* %11 to i64
  %13 = add i64 %12, 168
  %14 = inttoptr i64 %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %8, %15
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = add i64 %12, 160
  %19 = inttoptr i64 %18 to %"class.v8::Value"*
  br label %26

20:                                               ; preds = %3
  %21 = icmp eq i64* %7, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %20
  %23 = bitcast %"class.v8::Isolate"* %11 to %"class.v8::internal::Isolate"*
  %24 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %23, i64 %8) #8
  %25 = bitcast i64* %24 to %"class.v8::Value"*
  br label %26

26:                                               ; preds = %17, %20, %22
  %27 = phi %"class.v8::Value"* [ %19, %17 ], [ %25, %22 ], [ null, %20 ]
  %28 = bitcast %"class.v8::Value"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 3
  %31 = icmp eq i64 %30, 1
  br i1 %31, label %32, label %49

32:                                               ; preds = %26
  %33 = add i64 %29, -1
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = and i64 %29, -4294967296
  %37 = zext i32 %35 to i64
  %38 = or i64 %36, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load i16, i16* %40, align 2
  %42 = icmp eq i16 %41, 67
  br i1 %42, label %43, label %49

43:                                               ; preds = %32
  %44 = add i64 %29, 23
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, -2
  %48 = icmp eq i32 %47, 10
  br i1 %48, label %111, label %49

49:                                               ; preds = %32, %26, %43
  %50 = load i64*, i64** %5, align 8
  %51 = getelementptr inbounds i64, i64* %50, i64 4
  %52 = getelementptr inbounds i64, i64* %50, i64 2
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 176
  %55 = inttoptr i64 %54 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %51, align 8
  %57 = load i64*, i64** %5, align 8
  %58 = load i64, i64* %57, align 8
  switch i64 %58, label %66 [
    i64 4, label %59
    i64 2, label %111
  ]

59:                                               ; preds = %49
  %60 = getelementptr inbounds i64, i64* %57, i64 2
  %61 = bitcast i64* %60 to %"class.v8::internal::Isolate"**
  %62 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %61, align 8
  %63 = tail call zeroext i1 @_ZN2v88internal18ShouldThrowOnErrorEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %62) #8
  br i1 %63, label %64, label %111

64:                                               ; preds = %59
  %65 = load i64*, i64** %5, align 8
  br label %66

66:                                               ; preds = %64, %49
  %67 = phi i64* [ %65, %64 ], [ %57, %49 ]
  %68 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %68) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 72, i1 false)
  %69 = getelementptr inbounds i64, i64* %67, i64 2
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %72 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 14, i16* %72, align 8
  %73 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %73, align 2
  %74 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8** %74, align 8
  %75 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 3
  %76 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  %77 = bitcast i8** %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #8
  %78 = bitcast %"class.v8::Isolate"** %76 to i64*
  store i64 %70, i64* %78, align 8
  %79 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %79, align 8
  %80 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %81 = bitcast %"class.WTF::StringImpl"** %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 16, i1 false) #8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0)) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %82 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %83 = load i64*, i64** %82, align 8
  %84 = icmp eq i64* %83, null
  br i1 %84, label %94, label %85

85:                                               ; preds = %66
  %86 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %76, align 8
  %87 = bitcast %"class.v8::Isolate"* %86 to %"class.v8::internal::Isolate"*
  %88 = load i64, i64* %83, align 8
  %89 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %87, i64 %88) #8
  %90 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %86) #8
  br i1 %90, label %94, label %91

91:                                               ; preds = %85
  %92 = bitcast i64* %89 to %"class.v8::Value"*
  %93 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %86, %"class.v8::Value"* %92) #8
  br label %94

94:                                               ; preds = %91, %85, %66
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #8
  br label %110

110:                                              ; preds = %94, %106, %109
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %68) #8
  br label %111

111:                                              ; preds = %49, %43, %59, %110
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink18V8RTCStatsResponse28NamedPropertyDeleterCallbackEN2v85LocalINS1_4NameEEERKNS1_20PropertyCallbackInfoINS1_7BooleanEEE(%"class.v8::Name"* nocapture, %"class.v8::PropertyCallbackInfo.206"* nocapture dereferenceable(8)) #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18V8RTCStatsResponse28NamedPropertyDefinerCallbackEN2v85LocalINS1_4NameEEERKNS1_18PropertyDescriptorERKNS1_20PropertyCallbackInfoINS1_5ValueEEE(%"class.v8::Name"*, %"class.v8::PropertyDescriptor"* nocapture readnone dereferenceable(8), %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %4 = alloca %"class.blink::ExceptionState", align 8
  tail call void @_ZN5blink18V8RTCStatsResponse27NamedPropertyGetterCallbackEN2v85LocalINS1_4NameEEERKNS1_20PropertyCallbackInfoINS1_5ValueEEE(%"class.v8::Name"* %0, %"class.v8::PropertyCallbackInfo"* dereferenceable(8) %2)
  %5 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %2, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 4
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i64, i64* %6, i64 2
  %10 = bitcast i64* %9 to %"class.v8::Isolate"**
  %11 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  %12 = ptrtoint %"class.v8::Isolate"* %11 to i64
  %13 = add i64 %12, 168
  %14 = inttoptr i64 %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %8, %15
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = add i64 %12, 160
  %19 = inttoptr i64 %18 to %"class.v8::Value"*
  br label %26

20:                                               ; preds = %3
  %21 = icmp eq i64* %7, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %20
  %23 = bitcast %"class.v8::Isolate"* %11 to %"class.v8::internal::Isolate"*
  %24 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %23, i64 %8) #8
  %25 = bitcast i64* %24 to %"class.v8::Value"*
  br label %26

26:                                               ; preds = %17, %20, %22
  %27 = phi %"class.v8::Value"* [ %19, %17 ], [ %25, %22 ], [ null, %20 ]
  %28 = bitcast %"class.v8::Value"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 3
  %31 = icmp eq i64 %30, 1
  br i1 %31, label %32, label %49

32:                                               ; preds = %26
  %33 = add i64 %29, -1
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = and i64 %29, -4294967296
  %37 = zext i32 %35 to i64
  %38 = or i64 %36, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load i16, i16* %40, align 2
  %42 = icmp eq i16 %41, 67
  br i1 %42, label %43, label %49

43:                                               ; preds = %32
  %44 = add i64 %29, 23
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, -2
  %48 = icmp eq i32 %47, 10
  br i1 %48, label %111, label %49

49:                                               ; preds = %32, %26, %43
  %50 = load i64*, i64** %5, align 8
  %51 = getelementptr inbounds i64, i64* %50, i64 4
  %52 = getelementptr inbounds i64, i64* %50, i64 2
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 176
  %55 = inttoptr i64 %54 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %51, align 8
  %57 = load i64*, i64** %5, align 8
  %58 = load i64, i64* %57, align 8
  switch i64 %58, label %66 [
    i64 4, label %59
    i64 2, label %111
  ]

59:                                               ; preds = %49
  %60 = getelementptr inbounds i64, i64* %57, i64 2
  %61 = bitcast i64* %60 to %"class.v8::internal::Isolate"**
  %62 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %61, align 8
  %63 = tail call zeroext i1 @_ZN2v88internal18ShouldThrowOnErrorEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %62) #8
  br i1 %63, label %64, label %111

64:                                               ; preds = %59
  %65 = load i64*, i64** %5, align 8
  br label %66

66:                                               ; preds = %64, %49
  %67 = phi i64* [ %65, %64 ], [ %57, %49 ]
  %68 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %68) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 72, i1 false)
  %69 = getelementptr inbounds i64, i64* %67, i64 2
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %72 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 14, i16* %72, align 8
  %73 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %73, align 2
  %74 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8** %74, align 8
  %75 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 3
  %76 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  %77 = bitcast i8** %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #8
  %78 = bitcast %"class.v8::Isolate"** %76 to i64*
  store i64 %70, i64* %78, align 8
  %79 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %79, align 8
  %80 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %81 = bitcast %"class.WTF::StringImpl"** %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 16, i1 false) #8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0)) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %82 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %83 = load i64*, i64** %82, align 8
  %84 = icmp eq i64* %83, null
  br i1 %84, label %94, label %85

85:                                               ; preds = %66
  %86 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %76, align 8
  %87 = bitcast %"class.v8::Isolate"* %86 to %"class.v8::internal::Isolate"*
  %88 = load i64, i64* %83, align 8
  %89 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %87, i64 %88) #8
  %90 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %86) #8
  br i1 %90, label %94, label %91

91:                                               ; preds = %85
  %92 = bitcast i64* %89 to %"class.v8::Value"*
  %93 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %86, %"class.v8::Value"* %92) #8
  br label %94

94:                                               ; preds = %91, %85, %66
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #8
  br label %110

110:                                              ; preds = %94, %106, %109
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %68) #8
  br label %111

111:                                              ; preds = %49, %43, %59, %110
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18V8RTCStatsResponse31NamedPropertyDescriptorCallbackEN2v85LocalINS1_4NameEEERKNS1_20PropertyCallbackInfoINS1_5ValueEEE(%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.v8::PropertyDescriptor", align 8
  %4 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Object"*
  %8 = getelementptr inbounds i64, i64* %5, i64 2
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %10) #8
  %12 = tail call i64 @_ZN2v86Object46GetRealNamedPropertyAttributesInPrototypeChainENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"* %7, %"class.v8::Context"* %11, %"class.v8::Name"* %0) #8
  %13 = trunc i64 %12 to i8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %73

15:                                               ; preds = %2
  tail call void @_ZN5blink18V8RTCStatsResponse27NamedPropertyGetterCallbackEN2v85LocalINS1_4NameEEERKNS1_20PropertyCallbackInfoINS1_5ValueEEE(%"class.v8::Name"* %0, %"class.v8::PropertyCallbackInfo"* dereferenceable(8) %1)
  %16 = load i64*, i64** %4, align 8
  %17 = getelementptr inbounds i64, i64* %16, i64 4
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i64, i64* %16, i64 2
  %20 = bitcast i64* %19 to %"class.v8::Isolate"**
  %21 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %20, align 8
  %22 = ptrtoint %"class.v8::Isolate"* %21 to i64
  %23 = add i64 %22, 168
  %24 = inttoptr i64 %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %18, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %15
  %28 = add i64 %22, 160
  %29 = inttoptr i64 %28 to %"class.v8::Value"*
  br label %36

30:                                               ; preds = %15
  %31 = icmp eq i64* %17, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %30
  %33 = bitcast %"class.v8::Isolate"* %21 to %"class.v8::internal::Isolate"*
  %34 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %33, i64 %18) #8
  %35 = bitcast i64* %34 to %"class.v8::Value"*
  br label %36

36:                                               ; preds = %27, %30, %32
  %37 = phi %"class.v8::Value"* [ %29, %27 ], [ %35, %32 ], [ null, %30 ]
  %38 = bitcast %"class.v8::Value"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, 3
  %41 = icmp eq i64 %40, 1
  br i1 %41, label %42, label %59

42:                                               ; preds = %36
  %43 = add i64 %39, -1
  %44 = inttoptr i64 %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = and i64 %39, -4294967296
  %47 = zext i32 %45 to i64
  %48 = or i64 %46, %47
  %49 = add i64 %48, 7
  %50 = inttoptr i64 %49 to i16*
  %51 = load i16, i16* %50, align 2
  %52 = icmp eq i16 %51, 67
  br i1 %52, label %53, label %59

53:                                               ; preds = %42
  %54 = add i64 %39, 23
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = and i32 %56, -2
  %58 = icmp eq i32 %57, 10
  br i1 %58, label %73, label %59

59:                                               ; preds = %42, %36, %53
  %60 = bitcast %"class.v8::PropertyDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #8
  %61 = getelementptr inbounds %"class.v8::PropertyDescriptor", %"class.v8::PropertyDescriptor"* %3, i64 0, i32 0
  store %"struct.v8::PropertyDescriptor::PrivateData"* inttoptr (i64 -6148914691236517206 to %"struct.v8::PropertyDescriptor::PrivateData"*), %"struct.v8::PropertyDescriptor::PrivateData"** %61, align 8
  call void @_ZN2v818PropertyDescriptorC1ENS_5LocalINS_5ValueEEEb(%"class.v8::PropertyDescriptor"* nonnull %3, %"class.v8::Value"* %37, i1 zeroext false) #8
  call void @_ZN2v818PropertyDescriptor14set_enumerableEb(%"class.v8::PropertyDescriptor"* nonnull %3, i1 zeroext false) #8
  call void @_ZN2v818PropertyDescriptor16set_configurableEb(%"class.v8::PropertyDescriptor"* nonnull %3, i1 zeroext true) #8
  %62 = load i64*, i64** %4, align 8
  %63 = getelementptr inbounds i64, i64* %62, i64 4
  %64 = getelementptr inbounds i64, i64* %62, i64 2
  %65 = bitcast i64* %64 to %"class.v8::Isolate"**
  %66 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %65, align 8
  %67 = call %"class.v8::Object"* @_ZN5blink8bindings30CreatePropertyDescriptorObjectEPN2v87IsolateERKNS1_18PropertyDescriptorE(%"class.v8::Isolate"* %66, %"class.v8::PropertyDescriptor"* nonnull dereferenceable(8) %3) #8
  %68 = icmp eq %"class.v8::Object"* %67, null
  %69 = bitcast %"class.v8::Object"* %67 to i64*
  %70 = getelementptr inbounds i64, i64* %62, i64 3
  %71 = select i1 %68, i64* %70, i64* %69, !prof !2
  %72 = load i64, i64* %71, align 8
  store i64 %72, i64* %63, align 8
  call void @_ZN2v818PropertyDescriptorD1Ev(%"class.v8::PropertyDescriptor"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  br label %73

73:                                               ; preds = %2, %59, %53
  ret void
}

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare i64 @_ZN2v86Object46GetRealNamedPropertyAttributesInPrototypeChainENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*) local_unnamed_addr #2

declare void @_ZN2v818PropertyDescriptorC1ENS_5LocalINS_5ValueEEEb(%"class.v8::PropertyDescriptor"*, %"class.v8::Value"*, i1 zeroext) unnamed_addr #2

declare void @_ZN2v818PropertyDescriptor14set_enumerableEb(%"class.v8::PropertyDescriptor"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2v818PropertyDescriptor16set_configurableEb(%"class.v8::PropertyDescriptor"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v818PropertyDescriptorD1Ev(%"class.v8::PropertyDescriptor"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18V8RTCStatsResponse29IndexedPropertyGetterCallbackEjRKN2v820PropertyCallbackInfoINS1_5ValueEEE(i32, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %5 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 2
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 11
  %13 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 3
  %15 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false) #8
  store i8* %12, i8** %13, align 8
  %16 = urem i32 %0, 10
  %17 = udiv i32 %0, 10
  %18 = trunc i32 %16 to i8
  %19 = or i8 %18, 48
  store i8 %19, i8* %12, align 1
  %20 = icmp ugt i32 %0, 9
  br i1 %20, label %21, label %36

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 10
  store i8* %22, i8** %13, align 8
  %23 = urem i32 %17, 10
  %24 = trunc i32 %23 to i8
  %25 = or i8 %24, 48
  store i8 %25, i8* %22, align 2
  %26 = icmp ugt i32 %0, 99
  br i1 %26, label %27, label %34

27:                                               ; preds = %21
  %28 = udiv i32 %0, 100
  %29 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 9
  store i8* %29, i8** %13, align 8
  %30 = urem i32 %28, 10
  %31 = trunc i32 %30 to i8
  %32 = or i8 %31, 48
  store i8 %32, i8* %29, align 1
  %33 = icmp ugt i32 %0, 999
  br i1 %33, label %38, label %47

34:                                               ; preds = %21
  %35 = ptrtoint i8* %22 to i64
  br label %50

36:                                               ; preds = %2
  %37 = ptrtoint i8* %12 to i64
  br label %50

38:                                               ; preds = %27, %38
  %39 = phi i32 [ %41, %38 ], [ %28, %27 ]
  %40 = load i8*, i8** %13, align 8
  %41 = udiv i32 %39, 10
  %42 = getelementptr inbounds i8, i8* %40, i64 -1
  store i8* %42, i8** %13, align 8
  %43 = urem i32 %41, 10
  %44 = trunc i32 %43 to i8
  %45 = or i8 %44, 48
  store i8 %45, i8* %42, align 1
  %46 = icmp ugt i32 %39, 99
  br i1 %46, label %38, label %47

47:                                               ; preds = %38, %27
  %48 = bitcast i8** %13 to i64*
  %49 = load i64, i64* %48, align 8
  br label %50

50:                                               ; preds = %47, %34, %36
  %51 = phi i64 [ %37, %36 ], [ %49, %47 ], [ %35, %34 ]
  %52 = ptrtoint i8* %15 to i64
  %53 = sub i64 %52, %51
  %54 = trunc i64 %53 to i32
  store i32 %54, i32* %14, align 8
  %55 = inttoptr i64 %51 to i8*
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %3, i8* %55, i32 %54) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #8
  %56 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %50
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %66

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 1
  %65 = bitcast %"class.WTF::StringImpl"* %64 to i8*
  br label %66

66:                                               ; preds = %59, %61
  %67 = phi %"class.WTF::StringImpl"* [ %60, %59 ], [ %57, %61 ]
  %68 = phi i8* [ null, %59 ], [ %65, %61 ]
  %69 = phi i32 [ 0, %59 ], [ %63, %61 ]
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %66
  %75 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %9, i8* %68, i32 1, i32 %69) #8
  %76 = icmp eq %"class.v8::String"* %75, null
  br i1 %76, label %77, label %83, !prof !2

77:                                               ; preds = %74
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %83

78:                                               ; preds = %66
  %79 = bitcast i8* %68 to i16*
  %80 = call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %9, i16* %79, i32 1, i32 %69) #8
  %81 = icmp eq %"class.v8::String"* %80, null
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %78
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %83

83:                                               ; preds = %74, %77, %78, %82
  %84 = phi %"class.v8::String"* [ %75, %74 ], [ null, %77 ], [ %80, %78 ], [ null, %82 ]
  br i1 %58, label %98, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #8
  br label %98

98:                                               ; preds = %83, %94, %97
  %99 = bitcast %"class.v8::String"* %84 to %"class.v8::Name"*
  call void @_ZN5blink18V8RTCStatsResponse27NamedPropertyGetterCallbackEN2v85LocalINS1_4NameEEERKNS1_20PropertyCallbackInfoINS1_5ValueEEE(%"class.v8::Name"* %99, %"class.v8::PropertyCallbackInfo"* dereferenceable(8) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18V8RTCStatsResponse29IndexedPropertySetterCallbackEjN2v85LocalINS1_5ValueEEERKNS1_20PropertyCallbackInfoIS3_EE(i32, %"class.v8::Value"* nocapture readnone, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %2, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 2
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  %14 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %15 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %16 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false) #8
  store i8* %13, i8** %14, align 8
  %17 = urem i32 %0, 10
  %18 = udiv i32 %0, 10
  %19 = trunc i32 %17 to i8
  %20 = or i8 %19, 48
  store i8 %20, i8* %13, align 1
  %21 = icmp ugt i32 %0, 9
  br i1 %21, label %22, label %37

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %23, i8** %14, align 8
  %24 = urem i32 %18, 10
  %25 = trunc i32 %24 to i8
  %26 = or i8 %25, 48
  store i8 %26, i8* %23, align 2
  %27 = icmp ugt i32 %0, 99
  br i1 %27, label %28, label %35

28:                                               ; preds = %22
  %29 = udiv i32 %0, 100
  %30 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 9
  store i8* %30, i8** %14, align 8
  %31 = urem i32 %29, 10
  %32 = trunc i32 %31 to i8
  %33 = or i8 %32, 48
  store i8 %33, i8* %30, align 1
  %34 = icmp ugt i32 %0, 999
  br i1 %34, label %39, label %48

35:                                               ; preds = %22
  %36 = ptrtoint i8* %23 to i64
  br label %51

37:                                               ; preds = %3
  %38 = ptrtoint i8* %13 to i64
  br label %51

39:                                               ; preds = %28, %39
  %40 = phi i32 [ %42, %39 ], [ %29, %28 ]
  %41 = load i8*, i8** %14, align 8
  %42 = udiv i32 %40, 10
  %43 = getelementptr inbounds i8, i8* %41, i64 -1
  store i8* %43, i8** %14, align 8
  %44 = urem i32 %42, 10
  %45 = trunc i32 %44 to i8
  %46 = or i8 %45, 48
  store i8 %46, i8* %43, align 1
  %47 = icmp ugt i32 %40, 99
  br i1 %47, label %39, label %48

48:                                               ; preds = %39, %28
  %49 = bitcast i8** %14 to i64*
  %50 = load i64, i64* %49, align 8
  br label %51

51:                                               ; preds = %48, %35, %37
  %52 = phi i64 [ %38, %37 ], [ %50, %48 ], [ %36, %35 ]
  %53 = ptrtoint i8* %16 to i64
  %54 = sub i64 %53, %52
  %55 = trunc i64 %54 to i32
  store i32 %55, i32* %15, align 8
  %56 = inttoptr i64 %52 to i8*
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %4, i8* %56, i32 %55) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #8
  %57 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %60, label %62

60:                                               ; preds = %51
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %67

62:                                               ; preds = %51
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 1
  %66 = bitcast %"class.WTF::StringImpl"* %65 to i8*
  br label %67

67:                                               ; preds = %60, %62
  %68 = phi %"class.WTF::StringImpl"* [ %61, %60 ], [ %58, %62 ]
  %69 = phi i8* [ null, %60 ], [ %66, %62 ]
  %70 = phi i32 [ 0, %60 ], [ %64, %62 ]
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %67
  %76 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %10, i8* %69, i32 1, i32 %70) #8
  %77 = icmp eq %"class.v8::String"* %76, null
  br i1 %77, label %78, label %84, !prof !2

78:                                               ; preds = %75
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %84

79:                                               ; preds = %67
  %80 = bitcast i8* %69 to i16*
  %81 = call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %10, i16* %80, i32 1, i32 %70) #8
  %82 = icmp eq %"class.v8::String"* %81, null
  br i1 %82, label %83, label %84, !prof !2

83:                                               ; preds = %79
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %84

84:                                               ; preds = %75, %78, %79, %83
  %85 = phi %"class.v8::String"* [ %76, %75 ], [ null, %78 ], [ %81, %79 ], [ null, %83 ]
  br i1 %59, label %99, label %86

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #8
  br label %99

99:                                               ; preds = %84, %95, %98
  %100 = bitcast %"class.v8::String"* %85 to %"class.v8::Name"*
  call void @_ZN5blink18V8RTCStatsResponse27NamedPropertySetterCallbackEN2v85LocalINS1_4NameEEENS2_INS1_5ValueEEERKNS1_20PropertyCallbackInfoIS5_EE(%"class.v8::Name"* %100, %"class.v8::Value"* undef, %"class.v8::PropertyCallbackInfo"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18V8RTCStatsResponse30IndexedPropertyDeleterCallbackEjRKN2v820PropertyCallbackInfoINS1_7BooleanEEE(i32, %"class.v8::PropertyCallbackInfo.206"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %5 = getelementptr inbounds %"class.v8::PropertyCallbackInfo.206", %"class.v8::PropertyCallbackInfo.206"* %1, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 2
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 11
  %13 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 3
  %15 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false) #8
  store i8* %12, i8** %13, align 8
  %16 = urem i32 %0, 10
  %17 = udiv i32 %0, 10
  %18 = trunc i32 %16 to i8
  %19 = or i8 %18, 48
  store i8 %19, i8* %12, align 1
  %20 = icmp ugt i32 %0, 9
  br i1 %20, label %21, label %36

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 10
  store i8* %22, i8** %13, align 8
  %23 = urem i32 %17, 10
  %24 = trunc i32 %23 to i8
  %25 = or i8 %24, 48
  store i8 %25, i8* %22, align 2
  %26 = icmp ugt i32 %0, 99
  br i1 %26, label %27, label %34

27:                                               ; preds = %21
  %28 = udiv i32 %0, 100
  %29 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 9
  store i8* %29, i8** %13, align 8
  %30 = urem i32 %28, 10
  %31 = trunc i32 %30 to i8
  %32 = or i8 %31, 48
  store i8 %32, i8* %29, align 1
  %33 = icmp ugt i32 %0, 999
  br i1 %33, label %38, label %47

34:                                               ; preds = %21
  %35 = ptrtoint i8* %22 to i64
  br label %50

36:                                               ; preds = %2
  %37 = ptrtoint i8* %12 to i64
  br label %50

38:                                               ; preds = %27, %38
  %39 = phi i32 [ %41, %38 ], [ %28, %27 ]
  %40 = load i8*, i8** %13, align 8
  %41 = udiv i32 %39, 10
  %42 = getelementptr inbounds i8, i8* %40, i64 -1
  store i8* %42, i8** %13, align 8
  %43 = urem i32 %41, 10
  %44 = trunc i32 %43 to i8
  %45 = or i8 %44, 48
  store i8 %45, i8* %42, align 1
  %46 = icmp ugt i32 %39, 99
  br i1 %46, label %38, label %47

47:                                               ; preds = %38, %27
  %48 = bitcast i8** %13 to i64*
  %49 = load i64, i64* %48, align 8
  br label %50

50:                                               ; preds = %47, %34, %36
  %51 = phi i64 [ %37, %36 ], [ %49, %47 ], [ %35, %34 ]
  %52 = ptrtoint i8* %15 to i64
  %53 = sub i64 %52, %51
  %54 = trunc i64 %53 to i32
  store i32 %54, i32* %14, align 8
  %55 = inttoptr i64 %51 to i8*
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %3, i8* %55, i32 %54) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #8
  %56 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %50
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %66

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 1
  %65 = bitcast %"class.WTF::StringImpl"* %64 to i8*
  br label %66

66:                                               ; preds = %59, %61
  %67 = phi %"class.WTF::StringImpl"* [ %60, %59 ], [ %57, %61 ]
  %68 = phi i8* [ null, %59 ], [ %65, %61 ]
  %69 = phi i32 [ 0, %59 ], [ %63, %61 ]
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %66
  %75 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %9, i8* %68, i32 1, i32 %69) #8
  %76 = icmp eq %"class.v8::String"* %75, null
  br i1 %76, label %77, label %83, !prof !2

77:                                               ; preds = %74
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %83

78:                                               ; preds = %66
  %79 = bitcast i8* %68 to i16*
  %80 = call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %9, i16* %79, i32 1, i32 %69) #8
  %81 = icmp eq %"class.v8::String"* %80, null
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %78
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %83

83:                                               ; preds = %74, %77, %78, %82
  br i1 %58, label %97, label %84

84:                                               ; preds = %83
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #8
  br label %97

97:                                               ; preds = %83, %93, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18V8RTCStatsResponse30IndexedPropertyDefinerCallbackEjRKN2v818PropertyDescriptorERKNS1_20PropertyCallbackInfoINS1_5ValueEEE(i32, %"class.v8::PropertyDescriptor"* nocapture readnone dereferenceable(8), %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %2, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 2
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  %14 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %15 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %16 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false) #8
  store i8* %13, i8** %14, align 8
  %17 = urem i32 %0, 10
  %18 = udiv i32 %0, 10
  %19 = trunc i32 %17 to i8
  %20 = or i8 %19, 48
  store i8 %20, i8* %13, align 1
  %21 = icmp ugt i32 %0, 9
  br i1 %21, label %22, label %37

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %23, i8** %14, align 8
  %24 = urem i32 %18, 10
  %25 = trunc i32 %24 to i8
  %26 = or i8 %25, 48
  store i8 %26, i8* %23, align 2
  %27 = icmp ugt i32 %0, 99
  br i1 %27, label %28, label %35

28:                                               ; preds = %22
  %29 = udiv i32 %0, 100
  %30 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 9
  store i8* %30, i8** %14, align 8
  %31 = urem i32 %29, 10
  %32 = trunc i32 %31 to i8
  %33 = or i8 %32, 48
  store i8 %33, i8* %30, align 1
  %34 = icmp ugt i32 %0, 999
  br i1 %34, label %39, label %48

35:                                               ; preds = %22
  %36 = ptrtoint i8* %23 to i64
  br label %51

37:                                               ; preds = %3
  %38 = ptrtoint i8* %13 to i64
  br label %51

39:                                               ; preds = %28, %39
  %40 = phi i32 [ %42, %39 ], [ %29, %28 ]
  %41 = load i8*, i8** %14, align 8
  %42 = udiv i32 %40, 10
  %43 = getelementptr inbounds i8, i8* %41, i64 -1
  store i8* %43, i8** %14, align 8
  %44 = urem i32 %42, 10
  %45 = trunc i32 %44 to i8
  %46 = or i8 %45, 48
  store i8 %46, i8* %43, align 1
  %47 = icmp ugt i32 %40, 99
  br i1 %47, label %39, label %48

48:                                               ; preds = %39, %28
  %49 = bitcast i8** %14 to i64*
  %50 = load i64, i64* %49, align 8
  br label %51

51:                                               ; preds = %48, %35, %37
  %52 = phi i64 [ %38, %37 ], [ %50, %48 ], [ %36, %35 ]
  %53 = ptrtoint i8* %16 to i64
  %54 = sub i64 %53, %52
  %55 = trunc i64 %54 to i32
  store i32 %55, i32* %15, align 8
  %56 = inttoptr i64 %52 to i8*
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %4, i8* %56, i32 %55) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #8
  %57 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %60, label %62

60:                                               ; preds = %51
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %67

62:                                               ; preds = %51
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 1
  %66 = bitcast %"class.WTF::StringImpl"* %65 to i8*
  br label %67

67:                                               ; preds = %60, %62
  %68 = phi %"class.WTF::StringImpl"* [ %61, %60 ], [ %58, %62 ]
  %69 = phi i8* [ null, %60 ], [ %66, %62 ]
  %70 = phi i32 [ 0, %60 ], [ %64, %62 ]
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %67
  %76 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %10, i8* %69, i32 1, i32 %70) #8
  %77 = icmp eq %"class.v8::String"* %76, null
  br i1 %77, label %78, label %84, !prof !2

78:                                               ; preds = %75
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %84

79:                                               ; preds = %67
  %80 = bitcast i8* %69 to i16*
  %81 = call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %10, i16* %80, i32 1, i32 %70) #8
  %82 = icmp eq %"class.v8::String"* %81, null
  br i1 %82, label %83, label %84, !prof !2

83:                                               ; preds = %79
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %84

84:                                               ; preds = %75, %78, %79, %83
  %85 = phi %"class.v8::String"* [ %76, %75 ], [ null, %78 ], [ %81, %79 ], [ null, %83 ]
  br i1 %59, label %99, label %86

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #8
  br label %99

99:                                               ; preds = %84, %95, %98
  %100 = bitcast %"class.v8::String"* %85 to %"class.v8::Name"*
  call void @_ZN5blink18V8RTCStatsResponse28NamedPropertyDefinerCallbackEN2v85LocalINS1_4NameEEERKNS1_18PropertyDescriptorERKNS1_20PropertyCallbackInfoINS1_5ValueEEE(%"class.v8::Name"* %100, %"class.v8::PropertyDescriptor"* dereferenceable(8) undef, %"class.v8::PropertyCallbackInfo"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18V8RTCStatsResponse33IndexedPropertyDescriptorCallbackEjRKN2v820PropertyCallbackInfoINS1_5ValueEEE(i32, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %5 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 2
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 11
  %13 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 3
  %15 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false) #8
  store i8* %12, i8** %13, align 8
  %16 = urem i32 %0, 10
  %17 = udiv i32 %0, 10
  %18 = trunc i32 %16 to i8
  %19 = or i8 %18, 48
  store i8 %19, i8* %12, align 1
  %20 = icmp ugt i32 %0, 9
  br i1 %20, label %21, label %36

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 10
  store i8* %22, i8** %13, align 8
  %23 = urem i32 %17, 10
  %24 = trunc i32 %23 to i8
  %25 = or i8 %24, 48
  store i8 %25, i8* %22, align 2
  %26 = icmp ugt i32 %0, 99
  br i1 %26, label %27, label %34

27:                                               ; preds = %21
  %28 = udiv i32 %0, 100
  %29 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 9
  store i8* %29, i8** %13, align 8
  %30 = urem i32 %28, 10
  %31 = trunc i32 %30 to i8
  %32 = or i8 %31, 48
  store i8 %32, i8* %29, align 1
  %33 = icmp ugt i32 %0, 999
  br i1 %33, label %38, label %47

34:                                               ; preds = %21
  %35 = ptrtoint i8* %22 to i64
  br label %50

36:                                               ; preds = %2
  %37 = ptrtoint i8* %12 to i64
  br label %50

38:                                               ; preds = %27, %38
  %39 = phi i32 [ %41, %38 ], [ %28, %27 ]
  %40 = load i8*, i8** %13, align 8
  %41 = udiv i32 %39, 10
  %42 = getelementptr inbounds i8, i8* %40, i64 -1
  store i8* %42, i8** %13, align 8
  %43 = urem i32 %41, 10
  %44 = trunc i32 %43 to i8
  %45 = or i8 %44, 48
  store i8 %45, i8* %42, align 1
  %46 = icmp ugt i32 %39, 99
  br i1 %46, label %38, label %47

47:                                               ; preds = %38, %27
  %48 = bitcast i8** %13 to i64*
  %49 = load i64, i64* %48, align 8
  br label %50

50:                                               ; preds = %47, %34, %36
  %51 = phi i64 [ %37, %36 ], [ %49, %47 ], [ %35, %34 ]
  %52 = ptrtoint i8* %15 to i64
  %53 = sub i64 %52, %51
  %54 = trunc i64 %53 to i32
  store i32 %54, i32* %14, align 8
  %55 = inttoptr i64 %51 to i8*
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %3, i8* %55, i32 %54) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #8
  %56 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %50
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %66

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 1
  %65 = bitcast %"class.WTF::StringImpl"* %64 to i8*
  br label %66

66:                                               ; preds = %59, %61
  %67 = phi %"class.WTF::StringImpl"* [ %60, %59 ], [ %57, %61 ]
  %68 = phi i8* [ null, %59 ], [ %65, %61 ]
  %69 = phi i32 [ 0, %59 ], [ %63, %61 ]
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %66
  %75 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %9, i8* %68, i32 1, i32 %69) #8
  %76 = icmp eq %"class.v8::String"* %75, null
  br i1 %76, label %77, label %83, !prof !2

77:                                               ; preds = %74
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %83

78:                                               ; preds = %66
  %79 = bitcast i8* %68 to i16*
  %80 = call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %9, i16* %79, i32 1, i32 %69) #8
  %81 = icmp eq %"class.v8::String"* %80, null
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %78
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %83

83:                                               ; preds = %74, %77, %78, %82
  %84 = phi %"class.v8::String"* [ %75, %74 ], [ null, %77 ], [ %80, %78 ], [ null, %82 ]
  br i1 %58, label %98, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #8
  br label %98

98:                                               ; preds = %83, %94, %97
  %99 = bitcast %"class.v8::String"* %84 to %"class.v8::Name"*
  call void @_ZN5blink18V8RTCStatsResponse31NamedPropertyDescriptorCallbackEN2v85LocalINS1_4NameEEERKNS1_20PropertyCallbackInfoINS1_5ValueEEE(%"class.v8::Name"* %99, %"class.v8::PropertyCallbackInfo"* dereferenceable(8) %1)
  ret void
}

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN2v814ObjectTemplate10SetHandlerERKNS_33NamedPropertyHandlerConfigurationE(%"class.v8::ObjectTemplate"*, %"struct.v8::NamedPropertyHandlerConfiguration"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN2v814ObjectTemplate10SetHandlerERKNS_35IndexedPropertyHandlerConfigurationE(%"class.v8::ObjectTemplate"*, %"struct.v8::IndexedPropertyHandlerConfiguration"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18V8RTCStatsResponse30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %8 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %7) #8
  %9 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 2, i64* %9, align 8
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink18V8RTCStatsResponse30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %10, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %8, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_rtc_stats_response26NamedItemOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 -1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = and i64 %9, -4294967296
  %14 = zext i32 %12 to i64
  %15 = or i64 %13, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load i16, i16* %17, align 2
  switch i16 %18, label %23 [
    i16 1057, label %19
    i16 1056, label %19
    i16 1040, label %19
  ]

19:                                               ; preds = %1, %1, %1
  %20 = add i64 %9, 19
  %21 = inttoptr i64 %20 to i8**
  %22 = load i8*, i8** %21, align 1
  br label %26

23:                                               ; preds = %1
  %24 = bitcast i64* %8 to %"class.v8::Object"*
  %25 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %24, i32 1) #8
  br label %26

26:                                               ; preds = %19, %23
  %27 = phi i8* [ %22, %19 ], [ %25, %23 ]
  %28 = bitcast i8* %27 to %"class.blink::RTCStatsResponse"*
  %29 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = getelementptr inbounds i64, i64* %34, i64 1
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 160
  %38 = inttoptr i64 %37 to %"class.v8::Value"*
  br label %42

39:                                               ; preds = %26
  %40 = bitcast i64** %6 to %"class.v8::Value"**
  %41 = load %"class.v8::Value"*, %"class.v8::Value"** %40, align 8
  br label %42

42:                                               ; preds = %32, %39
  %43 = phi %"class.v8::Value"* [ %38, %32 ], [ %41, %39 ]
  %44 = bitcast %"class.v8::Value"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 3
  %47 = icmp eq i64 %46, 1
  br i1 %47, label %48, label %73, !prof !3

48:                                               ; preds = %42
  %49 = add i64 %45, -1
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = and i64 %45, -4294967296
  %53 = zext i32 %51 to i64
  %54 = or i64 %52, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load i16, i16* %56, align 2
  %58 = icmp ult i16 %57, 64
  br i1 %58, label %59, label %73, !prof !4

59:                                               ; preds = %48
  br i1 %31, label %67, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = getelementptr inbounds i64, i64* %62, i64 1
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 160
  %66 = inttoptr i64 %65 to %"class.v8::Value"*
  br label %70

67:                                               ; preds = %59
  %68 = bitcast i64** %6 to %"class.v8::Value"**
  %69 = load %"class.v8::Value"*, %"class.v8::Value"** %68, align 8
  br label %70

70:                                               ; preds = %60, %67
  %71 = phi %"class.v8::Value"* [ %66, %60 ], [ %69, %67 ]
  %72 = ptrtoint %"class.v8::Value"* %71 to i64
  br label %219

73:                                               ; preds = %42, %48
  br i1 %31, label %81, label %74

74:                                               ; preds = %73
  %75 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = getelementptr inbounds i64, i64* %76, i64 1
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, 160
  %80 = inttoptr i64 %79 to %"class.v8::Value"*
  br label %84

81:                                               ; preds = %73
  %82 = bitcast i64** %6 to %"class.v8::Value"**
  %83 = load %"class.v8::Value"*, %"class.v8::Value"** %82, align 8
  br label %84

84:                                               ; preds = %74, %81
  %85 = phi %"class.v8::Value"* [ %80, %74 ], [ %83, %81 ]
  %86 = bitcast %"class.v8::Value"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = and i64 %87, 3
  %89 = icmp eq i64 %88, 1
  br i1 %89, label %90, label %152

90:                                               ; preds = %84
  %91 = add i64 %87, -1
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = and i64 %87, -4294967296
  %95 = zext i32 %93 to i64
  %96 = or i64 %94, %95
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i16*
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %99, 67
  br i1 %100, label %101, label %152

101:                                              ; preds = %90
  %102 = add i64 %87, 23
  %103 = inttoptr i64 %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = and i32 %104, -2
  %106 = icmp eq i32 %105, 10
  br i1 %106, label %107, label %152

107:                                              ; preds = %101
  %108 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i64 9) #8
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %149, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %112
  %118 = ptrtoint %"class.WTF::StringImpl"* %110 to i64
  br label %134

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i33
  %123 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %122, i33 1) #8
  %124 = extractvalue { i33, i1 } %123, 1
  %125 = extractvalue { i33, i1 } %123, 0
  %126 = icmp slt i33 %125, 0
  %127 = or i1 %124, %126
  br i1 %127, label %128, label %129, !prof !2

128:                                              ; preds = %119
  call void @llvm.trap() #8
  unreachable

129:                                              ; preds = %119
  %130 = trunc i33 %125 to i32
  store i32 %130, i32* %120, align 4
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %132 = ptrtoint %"class.WTF::StringImpl"* %110 to i64
  %133 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %133, label %149, label %134

134:                                              ; preds = %117, %129
  %135 = phi i64 [ %118, %117 ], [ %132, %129 ]
  %136 = phi %"class.WTF::StringImpl"* [ %110, %117 ], [ %131, %129 ]
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %134
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %134
  %146 = phi i32 [ %144, %143 ], [ %142, %134 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #8
  br label %149

149:                                              ; preds = %107, %148, %145, %129
  %150 = phi i64 [ %132, %129 ], [ %135, %145 ], [ %135, %148 ], [ 0, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #8
  %151 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #8
  br label %228

152:                                              ; preds = %90, %84, %101
  %153 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = getelementptr inbounds i64, i64* %154, i64 1
  %156 = bitcast i64* %155 to %"class.v8::Isolate"**
  %157 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %156, align 8
  %158 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %158) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 -86, i64 56, i1 false)
  %159 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %159, align 8
  %160 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 6, i16* %160, align 8
  %161 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %161, align 2
  %162 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %163 = bitcast i8** %162 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)>, <2 x i8*>* %163, align 8
  %164 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %164, align 8
  %165 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  store %"class.v8::Isolate"* %157, %"class.v8::Isolate"** %165, align 8
  %166 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %166, align 8
  %167 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %168 = bitcast %"class.WTF::StringImpl"** %167 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 16, i1 false) #8
  %169 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %169) #8
  br i1 %31, label %174, label %170

170:                                              ; preds = %152
  %171 = load i64, i64* %155, align 8
  %172 = add i64 %171, 160
  %173 = inttoptr i64 %172 to %"class.v8::Value"*
  br label %177

174:                                              ; preds = %152
  %175 = bitcast i64** %6 to %"class.v8::Value"**
  %176 = load %"class.v8::Value"*, %"class.v8::Value"** %175, align 8
  br label %177

177:                                              ; preds = %170, %174
  %178 = phi %"class.v8::Value"* [ %173, %170 ], [ %176, %174 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %157, %"class.v8::Value"* %178, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #8
  %179 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %181, i64 0, i32 0, i32 0
  %183 = bitcast %"class.WTF::String"* %181 to i64*
  %184 = load i64, i64* %183, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %182, align 8
  %185 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1
  %186 = bitcast %"class.std::__1::unique_ptr.214"* %185 to i64*
  %187 = load i64, i64* %186, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %169) #8
  %188 = load i32, i32* %166, align 8
  %189 = icmp eq i32 %188, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %159, align 8
  %190 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %191 = load i64*, i64** %190, align 8
  %192 = icmp eq i64* %191, null
  br i1 %192, label %202, label %193

193:                                              ; preds = %177
  %194 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %165, align 8
  %195 = bitcast %"class.v8::Isolate"* %194 to %"class.v8::internal::Isolate"*
  %196 = load i64, i64* %191, align 8
  %197 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %195, i64 %196) #8
  %198 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %194) #8
  br i1 %198, label %202, label %199

199:                                              ; preds = %193
  %200 = bitcast i64* %197 to %"class.v8::Value"*
  %201 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %194, %"class.v8::Value"* %200) #8
  br label %202

202:                                              ; preds = %199, %193, %177
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %203, null
  br i1 %204, label %218, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  br i1 %209, label %212, label %214

212:                                              ; preds = %205
  %213 = add i32 %211, -1
  store i32 %213, i32* %210, align 4
  br label %214

214:                                              ; preds = %212, %205
  %215 = phi i32 [ %213, %212 ], [ %211, %205 ]
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %214
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %203) #8
  br label %218

218:                                              ; preds = %202, %214, %217
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %158) #8
  br i1 %189, label %219, label %314

219:                                              ; preds = %218, %70
  %220 = phi i64 [ 0, %70 ], [ %187, %218 ]
  %221 = phi i64 [ 0, %70 ], [ %184, %218 ]
  %222 = phi i64 [ %72, %70 ], [ %180, %218 ]
  %223 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %223) #8
  %224 = icmp eq i64 %222, 0
  br i1 %224, label %228, label %225, !prof !2

225:                                              ; preds = %219
  %226 = inttoptr i64 %222 to %"class.v8::String"*
  %227 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %226, i32 0) #8
  br label %257

228:                                              ; preds = %149, %219
  %229 = phi i8* [ %151, %149 ], [ %223, %219 ]
  %230 = phi i64 [ %150, %149 ], [ %221, %219 ]
  %231 = phi i64 [ 0, %149 ], [ %220, %219 ]
  %232 = inttoptr i64 %230 to %"class.WTF::StringImpl"*
  %233 = icmp eq i64 %230, 0
  br i1 %233, label %257, label %234

234:                                              ; preds = %228
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load atomic i32, i32* %235 acquire, align 4
  %237 = and i32 %236, 4
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %255, label %239

239:                                              ; preds = %234
  %240 = load atomic i32, i32* %235 monotonic, align 4
  %241 = and i32 %240, 2
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %257

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  %246 = zext i32 %245 to i33
  %247 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %246, i33 1) #8
  %248 = extractvalue { i33, i1 } %247, 1
  %249 = extractvalue { i33, i1 } %247, 0
  %250 = icmp slt i33 %249, 0
  %251 = or i1 %248, %250
  br i1 %251, label %252, label %253, !prof !2

252:                                              ; preds = %243
  call void @llvm.trap() #8
  unreachable

253:                                              ; preds = %243
  %254 = trunc i33 %249 to i32
  store i32 %254, i32* %244, align 4
  br label %257

255:                                              ; preds = %234
  %256 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %232) #8
  br label %257

257:                                              ; preds = %225, %228, %239, %253, %255
  %258 = phi i8* [ %223, %225 ], [ %229, %255 ], [ %229, %239 ], [ %229, %253 ], [ %229, %228 ]
  %259 = phi i64 [ %221, %225 ], [ %230, %255 ], [ %230, %239 ], [ %230, %253 ], [ 0, %228 ]
  %260 = phi i64 [ %220, %225 ], [ %231, %255 ], [ %231, %239 ], [ %231, %253 ], [ %231, %228 ]
  %261 = phi %"class.WTF::StringImpl"* [ %227, %225 ], [ %256, %255 ], [ %232, %239 ], [ %232, %253 ], [ null, %228 ]
  %262 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %261, %"class.WTF::StringImpl"** %262, align 8
  %263 = call %"class.blink::RTCLegacyStatsReport"* @_ZN5blink16RTCStatsResponse9namedItemERKN3WTF12AtomicStringE(%"class.blink::RTCStatsResponse"* %28, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #8
  %264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %262, align 8
  %265 = icmp eq %"class.WTF::StringImpl"* %264, null
  br i1 %265, label %279, label %266

266:                                              ; preds = %257
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load atomic i32, i32* %267 monotonic, align 4
  %269 = and i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 0
  %272 = load i32, i32* %271, align 4
  br i1 %270, label %273, label %275

273:                                              ; preds = %266
  %274 = add i32 %272, -1
  store i32 %274, i32* %271, align 4
  br label %275

275:                                              ; preds = %273, %266
  %276 = phi i32 [ %274, %273 ], [ %272, %266 ]
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %279

278:                                              ; preds = %275
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %264) #8
  br label %279

279:                                              ; preds = %257, %275, %278
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %258) #8
  %280 = getelementptr inbounds %"class.blink::RTCLegacyStatsReport", %"class.blink::RTCLegacyStatsReport"* %263, i64 0, i32 0
  %281 = icmp eq %"class.blink::RTCLegacyStatsReport"* %263, null
  %282 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %283 = load i64*, i64** %282, align 8
  %284 = getelementptr inbounds i64, i64* %283, i64 3
  br i1 %281, label %285, label %291, !prof !2

285:                                              ; preds = %279
  %286 = getelementptr inbounds i64, i64* %283, i64 1
  %287 = load i64, i64* %286, align 8
  %288 = add i64 %287, 176
  %289 = inttoptr i64 %288 to i64*
  %290 = load i64, i64* %289, align 8
  store i64 %290, i64* %284, align 8
  br label %314

291:                                              ; preds = %279
  %292 = bitcast i8* %27 to %"class.blink::ScriptWrappable"*
  %293 = load i64*, i64** %6, align 8
  %294 = getelementptr inbounds i64, i64* %293, i64 -1
  %295 = bitcast i64* %294 to %"class.v8::Object"*
  %296 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %284, %"class.blink::ScriptWrappable"* nonnull %280, %"class.v8::Object"* %295, %"class.blink::ScriptWrappable"* %292) #8
  br i1 %296, label %314, label %297

297:                                              ; preds = %291
  %298 = load i64*, i64** %6, align 8
  %299 = getelementptr inbounds i64, i64* %298, i64 -1
  %300 = bitcast i64* %299 to %"class.v8::Object"*
  %301 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %300) #8
  %302 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %301) #8
  %303 = bitcast %"class.blink::RTCLegacyStatsReport"* %263 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %304 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %303, align 8
  %305 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %304, i64 7
  %306 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %305, align 8
  %307 = call %"class.v8::Value"* %306(%"class.blink::ScriptWrappable"* nonnull %280, %"class.blink::ScriptState"* %302) #8
  %308 = icmp eq %"class.v8::Value"* %307, null
  br i1 %308, label %314, label %309

309:                                              ; preds = %297
  %310 = load i64*, i64** %282, align 8
  %311 = getelementptr inbounds i64, i64* %310, i64 3
  %312 = bitcast %"class.v8::Value"* %307 to i64*
  %313 = load i64, i64* %312, align 8
  store i64 %313, i64* %311, align 8
  br label %314

314:                                              ; preds = %309, %297, %291, %285, %218
  %315 = phi i64 [ %187, %218 ], [ %260, %285 ], [ %260, %291 ], [ %260, %297 ], [ %260, %309 ]
  %316 = phi i64 [ %184, %218 ], [ %259, %285 ], [ %259, %291 ], [ %259, %297 ], [ %259, %309 ]
  %317 = icmp eq i64 %315, 0
  br i1 %317, label %320, label %318

318:                                              ; preds = %314
  %319 = inttoptr i64 %315 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %319) #8
  br label %320

320:                                              ; preds = %318, %314
  %321 = inttoptr i64 %316 to %"class.WTF::StringImpl"*
  %322 = icmp eq i64 %316, 0
  br i1 %322, label %336, label %323

323:                                              ; preds = %320
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load atomic i32, i32* %324 monotonic, align 4
  %326 = and i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 0
  %329 = load i32, i32* %328, align 4
  br i1 %327, label %330, label %332

330:                                              ; preds = %323
  %331 = add i32 %329, -1
  store i32 %331, i32* %328, align 4
  br label %332

332:                                              ; preds = %330, %323
  %333 = phi i32 [ %331, %330 ], [ %329, %323 ]
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %336

335:                                              ; preds = %332
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %321) #8
  br label %336

336:                                              ; preds = %320, %332, %335
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_rtc_stats_response23ResultOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = bitcast i64* %4 to %"class.v8::Object"*
  %6 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %5) #8
  %7 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %6)
  %8 = load i64, i64* %4, align 8
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i64 %8, -4294967296
  %13 = zext i32 %11 to i64
  %14 = or i64 %12, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load i16, i16* %16, align 2
  switch i16 %17, label %22 [
    i16 1057, label %18
    i16 1056, label %18
    i16 1040, label %18
  ]

18:                                               ; preds = %1, %1, %1
  %19 = add i64 %8, 19
  %20 = inttoptr i64 %19 to i8**
  %21 = load i8*, i8** %20, align 1
  br label %24

22:                                               ; preds = %1
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %5, i32 1) #8
  br label %24

24:                                               ; preds = %18, %22
  %25 = phi i8* [ %21, %18 ], [ %23, %22 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to %"class.blink::HeapVector.233"*
  %28 = tail call %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_15ScriptWrappableENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"* %7, %"class.blink::HeapVector.233"* dereferenceable(16) %27) #8
  %29 = icmp eq %"class.v8::Value"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds i64, i64* %32, i64 3
  %34 = bitcast %"class.v8::Value"* %28 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %33, align 8
  br label %36

36:                                               ; preds = %24, %30
  ret void
}

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #2

declare i16 @_ZN2v86Object6DeleteENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink8bindings30CreatePropertyDescriptorObjectEPN2v87IsolateERKNS1_18PropertyDescriptorE(%"class.v8::Isolate"*, %"class.v8::PropertyDescriptor"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.214"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %54

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #8
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #8
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #8
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.214"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %54

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #8
  %38 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %39 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %38) #8
  %40 = icmp eq %"class.v8::String"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %43 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, i64 5
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %45, align 8
  call void %46(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %42) #8
  %47 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 152, i1 false)
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %39, %"class.v8::String"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr.214"* %51 to i64*
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %48, %41
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #8
  br label %54

54:                                               ; preds = %53, %28, %21
  ret void
}

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64*, %"class.blink::ScriptWrappable"*, %"class.v8::Object"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %8 = ptrtoint i64* %5 to i64
  %9 = sub i64 %7, %8
  %10 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %11 = icmp ult i64 %9, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %12 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %28, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %17, null
  %19 = icmp eq %"class.v8::Object"* %2, null
  %20 = or i1 %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.v8::Object"* %2 to i64*
  %23 = load i64, i64* %17, align 8
  %24 = load i64, i64* %22, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %28, label %37

26:                                               ; preds = %15
  %27 = and i1 %19, %18
  br i1 %27, label %28, label %37

28:                                               ; preds = %21, %26, %4
  %29 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %30, null
  %32 = getelementptr inbounds i64, i64* %0, i64 -1
  %33 = select i1 %31, i64* %32, i64* %30, !prof !2
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %0, align 8
  %35 = load i64*, i64** %29, align 8
  %36 = icmp ne i64* %35, null
  br label %80

37:                                               ; preds = %21, %26
  %38 = getelementptr inbounds i64, i64* %0, i64 -2
  %39 = bitcast i64* %38 to %"class.v8::Isolate"**
  %40 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %39, align 8
  %41 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %40) #8
  %42 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %41) #8
  %43 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %42, i64 0, i32 2, i32 0
  %44 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 8, !range !5
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %52, null
  %54 = getelementptr inbounds i64, i64* %0, i64 -1
  %55 = select i1 %53, i64* %54, i64* %52, !prof !2
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %0, align 8
  %57 = load i64*, i64** %51, align 8
  %58 = icmp ne i64* %57, null
  br label %80

59:                                               ; preds = %37
  %60 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0
  %61 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0
  %62 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %61, %"class.blink::ScriptWrappable"* %1) #8
  %63 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %62, 0
  %64 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0, i32 0
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %63, %69
  br i1 %70, label %80, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %75, label %78, !prof !2

75:                                               ; preds = %71
  %76 = getelementptr inbounds i64, i64* %0, i64 -1
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %0, align 8
  br label %80

78:                                               ; preds = %71
  %79 = load i64, i64* %73, align 8
  store i64 %79, i64* %0, align 8
  br label %80

80:                                               ; preds = %78, %75, %59, %50, %28
  %81 = phi i1 [ %36, %28 ], [ %58, %50 ], [ false, %59 ], [ true, %75 ], [ true, %78 ]
  ret i1 %81
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.6, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0)) #8
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.6, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0)) #8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_15ScriptWrappableENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"*, %"class.blink::HeapVector.233"* dereferenceable(16)) local_unnamed_addr #7 comdat {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %8 = icmp eq %"class.v8::Context"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::Isolate"* %5 to %"class.v8::internal::Isolate"*
  %11 = bitcast %"class.v8::Context"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %10, i64 %12) #8
  %14 = bitcast i64* %13 to %"class.v8::Context"*
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi %"class.v8::Context"* [ %14, %9 ], [ null, %2 ]
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %16) #8
  %17 = getelementptr inbounds %"class.blink::HeapVector.233", %"class.blink::HeapVector.233"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, -1
  br i1 %19, label %21, label %20, !prof !4

20:                                               ; preds = %15
  tail call void @llvm.trap() #8
  unreachable

21:                                               ; preds = %15
  %22 = tail call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %5, i32 %18) #8
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %16) #8
  %23 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %24 = icmp eq %"class.v8::Context"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %26, align 8
  %28 = bitcast %"class.v8::Context"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %27, i64 %29) #8
  %31 = bitcast i64* %30 to %"class.v8::Context"*
  br label %32

32:                                               ; preds = %21, %25
  %33 = phi %"class.v8::Context"* [ %31, %25 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.blink::HeapVector.233", %"class.blink::HeapVector.233"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Member.239"*, %"class.blink::Member.239"** %34, align 8
  %36 = load i32, i32* %17, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::Member.239", %"class.blink::Member.239"* %35, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %75, label %40

40:                                               ; preds = %32
  %41 = bitcast %"class.logging::CheckError"* %3 to i8*
  %42 = bitcast %"class.v8::Array"* %22 to %"class.v8::Object"*
  br label %43

43:                                               ; preds = %40, %71
  %44 = phi i32 [ 0, %40 ], [ %72, %71 ]
  %45 = phi %"class.blink::Member.239"* [ %35, %40 ], [ %73, %71 ]
  %46 = getelementptr inbounds %"class.blink::Member.239", %"class.blink::Member.239"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %46, align 8
  %48 = icmp eq %"class.blink::ScriptWrappable"* %47, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.9, i64 0, i64 0), i32 209, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0)) #8
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #8
  br label %51

51:                                               ; preds = %49, %43
  %52 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %53 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* %47, %"class.v8::Isolate"* %52) #8
  %54 = bitcast %"class.v8::Object"* %53 to %"class.v8::Value"*
  %55 = icmp eq %"class.v8::Object"* %53, null
  br i1 %55, label %56, label %62

56:                                               ; preds = %51
  %57 = bitcast %"class.blink::ScriptWrappable"* %47 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %58 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %57, align 8
  %59 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %58, i64 7
  %60 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %59, align 8
  %61 = call %"class.v8::Value"* %60(%"class.blink::ScriptWrappable"* %47, %"class.blink::ScriptState"* %0) #8
  br label %62

62:                                               ; preds = %51, %56
  %63 = phi %"class.v8::Value"* [ %61, %56 ], [ %54, %51 ]
  %64 = icmp eq %"class.v8::Value"* %63, null
  br i1 %64, label %77, label %65

65:                                               ; preds = %62
  %66 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %42, %"class.v8::Context"* %33, i32 %44, %"class.v8::Value"* nonnull %63) #8
  %67 = trunc i16 %66 to i8
  %68 = icmp eq i8 %67, 0
  %69 = icmp ult i16 %66, 256
  %70 = or i1 %69, %68
  br i1 %70, label %77, label %71, !prof !6

71:                                               ; preds = %65
  %72 = add i32 %44, 1
  %73 = getelementptr inbounds %"class.blink::Member.239", %"class.blink::Member.239"* %45, i64 1
  %74 = icmp eq %"class.blink::Member.239"* %73, %38
  br i1 %74, label %75, label %43

75:                                               ; preds = %71, %32
  %76 = bitcast %"class.v8::Array"* %22 to %"class.v8::Value"*
  br label %77

77:                                               ; preds = %62, %65, %75
  %78 = phi %"class.v8::Value"* [ %76, %75 ], [ null, %65 ], [ null, %62 ]
  ret %"class.v8::Value"* %78
}

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #8
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #8
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !5
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #8
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %47, %"class.blink::ScriptWrappable"* %0) #8
  %49 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #8
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

declare void @_ZN2v82V817FromJustIsNothingEv() local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal18ShouldThrowOnErrorEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"*, i8*, i32) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2146410443, i32 1073205}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{i8 0, i8 2}
!6 = !{!"branch_weights", i32 2002, i32 2000}
