; ModuleID = '../../third_party/skia/src/utils/SkShadowUtils.cpp'
source_filename = "../../third_party/skia/src/utils/SkShadowUtils.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPath = type <{ %class.sk_sp.116, i32, %"struct.std::__1::atomic.99", %"struct.std::__1::atomic.99", i8, i8 }>
%class.sk_sp.116 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.117, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.118, %class.SkTDArray.119, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.117 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.118 = type { i8*, i32, i32 }
%class.SkTDArray.119 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.120 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.99" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.120 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.121", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.121" = type { %"struct.std::__1::__atomic_base.122" }
%"struct.std::__1::__atomic_base.122" = type { %"struct.std::__1::__cxx_atomic_impl.123" }
%"struct.std::__1::__cxx_atomic_impl.123" = type { %"struct.std::__1::__cxx_atomic_base_impl.124" }
%"struct.std::__1::__cxx_atomic_base_impl.124" = type { i8 }
%"struct.std::__1::atomic.99" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__cxx_atomic_impl.102" }
%"struct.std::__1::__cxx_atomic_impl.102" = type { %"struct.std::__1::__cxx_atomic_base_impl.103" }
%"struct.std::__1::__cxx_atomic_base_impl.103" = type { i8 }
%class.SkMatrix = type { [9 x float], i32 }
%class.GrShape = type { %union.anon, i8, i8, i8, i8, [4 x i8] }
%union.anon = type { %class.SkRRect, [4 x i8] }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%class.SkStrokeRec = type { float, float, float, i32 }
%class.sk_sp.125 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkTLazy = type { [16 x i8], %class.SkPath* }
%class.GrStyle = type { %class.SkStrokeRec, %class.sk_sp.125, %"struct.GrStyle::DashInfo" }
%"struct.GrStyle::DashInfo" = type { i32, float, %class.SkAutoSTArray }
%class.SkAutoSTArray = type { i32, float*, [16 x i8] }
%"struct.SkRuntimeEffect::Result" = type { %class.sk_sp.57, %class.SkString }
%class.sk_sp.57 = type { %class.SkRuntimeEffect* }
%class.SkRuntimeEffect = type <{ %class.SkRefCnt.base, i32, %class.SkString, %"class.std::__1::unique_ptr.58", %"class.SkSL::FunctionDefinition"*, %"class.std::__1::vector", %"class.std::__1::vector.67", %"class.std::__1::vector.74", %"class.std::__1::unique_ptr.81", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.SkSL::Program"* }
%"struct.SkSL::Program" = type opaque
%"class.SkSL::FunctionDefinition" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"*, %"class.std::__1::__compressed_pair.64" }
%"struct.SkRuntimeEffect::Uniform" = type <{ %class.SkString, i64, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.SkRuntimeEffect::Uniform"* }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"*, %"class.std::__1::__compressed_pair.69" }
%"struct.SkRuntimeEffect::Child" = type { %class.SkString, i32, i32 }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.SkRuntimeEffect::Child"* }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"struct.SkSL::SampleUsage"*, %"struct.SkSL::SampleUsage"*, %"class.std::__1::__compressed_pair.76" }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.SkSL::SampleUsage"* }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %class.SkFilterColorProgram* }
%class.SkFilterColorProgram = type opaque
%class.SkString = type { %class.sk_sp.28 }
%class.sk_sp.28 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.SkPaint = type <{ %class.sk_sp.125, %class.sk_sp.129, %class.sk_sp.130, %class.sk_sp.1, %class.sk_sp.131, %struct.SkRGBA4f, float, float, %union.anon.132, [4 x i8] }>
%class.sk_sp.129 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.130 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.131 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.132 = type { %struct.anon }
%struct.anon = type { i32 }
%class.sk_sp = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type opaque
%class.SkGaussianColorFilter = type { %class.SkColorFilterBase.base, [4 x i8] }
%class.SkColorFilterBase.base = type { %class.SkColorFilter.base }
%class.SkColorFilter.base = type { %class.SkFlattenable.base }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrFragmentProcessor* }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.5", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.4 }
%class.sk_sp.4 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.8, %class.SkTHashMap, %class.SkTHashMap.16, %class.SkTArray.25, %class.SkTArray.27, i32, i8, [3 x i8] }>
%class.SkTArray.8 = type { %"class.std::__1::unique_ptr.9"*, i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.27, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.16 = type { %class.SkTHashTable.17 }
%class.SkTHashTable.17 = type { i32, i32, %class.SkAutoTArray.18 }
%class.SkAutoTArray.18 = type { %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.162" }
%"struct.std::__1::pair.162" = type { i32, %class.SkTArray.163* }
%class.SkTArray.163 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.25 = type { %"class.std::__1::unique_ptr.26"*, i64 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.163, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.27 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.41 }
%class.SkFibBlockSizes.41 = type { i32 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.GrColorInfo = type opaque
%"struct.SkRuntimeEffect::Options" = type { i8, i8 }
%class.GrRuntimeFPBuilder = type { %class.SkRuntimeEffectBuilder }
%class.SkRuntimeEffectBuilder = type { %class.sk_sp.57, %class.sk_sp.87, %"class.std::__1::vector.88" }
%class.sk_sp.87 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.std::__1::unique_ptr"* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.95, [384 x i64], %class.sk_sp.96, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.104", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.110" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.95 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.96 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type { %class.SkRefCnt.base, %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.97, i32, i32 }
%class.sk_sp.97 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.98, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.98 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.SkM44 = type { [16 x float] }
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%struct.SkPoint3 = type { float, float, float }
%struct.SkDrawShadowRec = type { %struct.SkPoint3, %struct.SkPoint3, float, i32, i32, i32 }
%class.sk_sp.181 = type { %class.SkIDChangeListener* }
%class.sk_sp.127 = type { %class.SkVertices* }
%class.SkVertices = type <{ %class.SkNVRefCnt.128, i32, %struct.SkPoint*, i16*, %struct.SkPoint*, i32*, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkNVRefCnt.128 = type { %"struct.std::__1::atomic" }
%"struct.(anonymous namespace)::FindContext" = type { %class.SkMatrix*, %class.sk_sp.127, %struct.SkPoint, %class.sk_sp.172, %"struct.(anonymous namespace)::AmbientVerticesFactory"* }
%class.sk_sp.172 = type { %"class.(anonymous namespace)::CachedTessellations"* }
%"class.(anonymous namespace)::CachedTessellations" = type { %class.SkRefCnt.base, %"class.(anonymous namespace)::CachedTessellations::Set", %"class.(anonymous namespace)::CachedTessellations::Set.173" }
%"class.(anonymous namespace)::CachedTessellations::Set" = type { [4 x %"struct.(anonymous namespace)::CachedTessellations::Set<(anonymous namespace)::AmbientVerticesFactory, 4>::Entry"], i32, i64, %class.SkRandom }
%"struct.(anonymous namespace)::CachedTessellations::Set<(anonymous namespace)::AmbientVerticesFactory, 4>::Entry" = type { %"struct.(anonymous namespace)::AmbientVerticesFactory", %class.sk_sp.127, %class.SkMatrix }
%"struct.(anonymous namespace)::AmbientVerticesFactory" = type { float, i8, %struct.SkPoint }
%class.SkRandom = type { i32, i32 }
%"class.(anonymous namespace)::CachedTessellations::Set.173" = type { [4 x %"struct.(anonymous namespace)::CachedTessellations::Set<(anonymous namespace)::SpotVerticesFactory, 4>::Entry"], i32, i64, %class.SkRandom }
%"struct.(anonymous namespace)::CachedTessellations::Set<(anonymous namespace)::SpotVerticesFactory, 4>::Entry" = type { %"struct.(anonymous namespace)::SpotVerticesFactory", %class.sk_sp.127, %class.SkMatrix }
%"struct.(anonymous namespace)::SpotVerticesFactory" = type { %struct.SkPoint, %struct.SkPoint, float, %struct.SkPoint3, float, i32 }
%class.SkAutoSTArray.174 = type { i32, i8*, [128 x i8] }
%"struct.(anonymous namespace)::FindContext.183" = type { %class.SkMatrix*, %class.sk_sp.127, %struct.SkPoint, %class.sk_sp.172, %"struct.(anonymous namespace)::SpotVerticesFactory"* }
%"class.(anonymous namespace)::ShadowedPath" = type { %class.SkPath*, %class.SkMatrix*, %class.GrStyledShape }
%class.GrStyledShape = type { %class.GrShape, %class.GrStyle, i32, i8, i8, %class.SkTLazy, %class.SkAutoSTArray.126 }
%class.SkAutoSTArray.126 = type { i32, i32*, [32 x i8] }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %class.SkVertices*, i32, %class.SkPaint*, float, float, i1)* }
%"struct.SkResourceCache::Key" = type { i32, i32, i32, i32, i8* }
%"struct.SkResourceCache::Rec" = type { i32 (...)**, %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"* }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.87*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.87*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.87*, %class.SkTypeface*, i8*)*, i8* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.121", [7 x i8] }>
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkColorFilterBase = type { %class.SkColorFilter.base, [4 x i8] }
%struct.SkRGBA4f.133 = type { float, float, float, float }
%struct.SkStageRec = type { %class.SkRasterPipeline*, %class.SkArenaAlloc*, i32, %class.SkColorSpace*, %class.SkPaint*, %class.SkMatrix*, %class.SkMatrixProvider* }
%class.SkRasterPipeline = type { %class.SkArenaAlloc*, %"struct.SkRasterPipeline::StageList"*, i32, i32 }
%"struct.SkRasterPipeline::StageList" = type { %"struct.SkRasterPipeline::StageList"*, i32, i8* }
%"class.skvm::Builder" = type <{ %class.SkTHashMap.134, %"class.std::__1::vector.143", %"class.std::__1::vector.150", %"struct.skvm::Features", [6 x i8] }>
%class.SkTHashMap.134 = type { %class.SkTHashTable.135 }
%class.SkTHashTable.135 = type { i32, i32, %class.SkAutoTArray.136 }
%class.SkAutoTArray.136 = type { %"class.std::__1::unique_ptr.137" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot" = type opaque
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"struct.skvm::Instruction"*, %"struct.skvm::Instruction"*, %"class.std::__1::__compressed_pair.145" }
%"struct.skvm::Instruction" = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.skvm::Instruction"* }
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { i32*, i32*, %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { i32* }
%"struct.skvm::Features" = type { i8, i8 }
%"struct.skvm::Color" = type { %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32" }
%"struct.skvm::F32" = type <{ %"class.skvm::Builder"*, i32, [4 x i8] }>
%"struct.skvm::Uniforms" = type { %"struct.skvm::Ptr", %"class.std::__1::vector.150" }
%"struct.skvm::Ptr" = type { i32 }
%"class.(anonymous namespace)::CachedTessellationsRec" = type { %"struct.SkResourceCache::Rec", %"class.std::__1::unique_ptr.175", %class.sk_sp.172 }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { i8* }
%class.SkDiscardableMemory = type opaque
%"class.(anonymous namespace)::ShadowInvalidator" = type { %class.SkIDChangeListener.base, %"class.std::__1::unique_ptr.175" }
%class.SkIDChangeListener.base = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.121" }

$_ZN21SkGaussianColorFilterD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK21SkGaussianColorFilter10getFactoryEv = comdat any

$_ZNK21SkGaussianColorFilter11getTypeNameEv = comdat any

$_ZNK21SkGaussianColorFilter7flattenER13SkWriteBuffer = comdat any

$_ZNK17SkColorFilterBase18getFlattenableTypeEv = comdat any

$_ZNK17SkColorFilterBase18onIsAlphaUnchangedEv = comdat any

$_ZNK21SkGaussianColorFilter14onAppendStagesERK10SkStageRecb = comdat any

$_ZNK21SkGaussianColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc = comdat any

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZN13GrStyledShapeC2ERK6SkPathRK7GrStyleNS_10DoSimplifyE = comdat any

$_ZN7GrStyleD2Ev = comdat any

$_ZN13GrStyledShapeD2Ev = comdat any

$_ZN15SkRuntimeEffect6ResultD2Ev = comdat any

$_ZN15SkResourceCache3Rec11canBePurgedEv = comdat any

$_ZN15SkResourceCache3Rec14postAddInstallEPv = comdat any

$_ZNK15SkResourceCache3Rec30diagnostic_only_getDiscardableEv = comdat any

$_ZZN7GrStyle10SimpleFillEvE5kFill = comdat any

$_ZGVZN7GrStyle10SimpleFillEvE5kFill = comdat any

@_ZZNK21SkGaussianColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfoE5kCode = internal constant [183 x i8] c"\0A        half4 main(half4 inColor) {\0A            half factor = 1 - inColor.a;\0A            factor = exp(-factor * factor * 4) - 0.018;\0A            return half4(factor);\0A        }\0A    \00", align 16
@__const._ZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRec.shadowedPath = private unnamed_addr constant { %class.SkPath*, %class.SkMatrix*, { %class.GrShape, { %class.SkStrokeRec, %class.sk_sp.125, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } }, i32, i8, i8, [2 x i8], %class.SkTLazy, { i32, [4 x i8], i32*, [32 x i8] } } } { %class.SkPath* inttoptr (i64 -6148914691236517206 to %class.SkPath*), %class.SkMatrix* inttoptr (i64 -6148914691236517206 to %class.SkMatrix*), { %class.GrShape, { %class.SkStrokeRec, %class.sk_sp.125, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } }, i32, i8, i8, [2 x i8], %class.SkTLazy, { i32, [4 x i8], i32*, [32 x i8] } } { %class.GrShape { %union.anon { %class.SkRRect { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x %struct.SkPoint] [%struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }], i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }, i8 -86, i8 -86, i8 -86, i8 -86, [4 x i8] c"\AA\AA\AA\AA" }, { %class.SkStrokeRec, %class.sk_sp.125, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } } { %class.SkStrokeRec { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766 }, %class.sk_sp.125 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } { i32 -1431655766, float 0xFFFFFFFFE0000000, { i32, [4 x i8], float*, [16 x i8] } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", float* inttoptr (i64 -6148914691236517206 to float*), [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } } }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %class.SkTLazy { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", %class.SkPath* inttoptr (i64 -6148914691236517206 to %class.SkPath*) }, { i32, [4 x i8], i32*, [32 x i8] } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i32* inttoptr (i64 -6148914691236517206 to i32*), [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } } }, align 8
@__const._ZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRec.factory = private unnamed_addr constant { float, i8, [3 x i8], %struct.SkPoint } { float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, align 4
@_ZTV21SkGaussianColorFilter = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkGaussianColorFilter*)* @_ZN21SkGaussianColorFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp*, %class.SkReadBuffer*)* (%class.SkGaussianColorFilter*)* @_ZNK21SkGaussianColorFilter10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkGaussianColorFilter*)* @_ZNK21SkGaussianColorFilter11getTypeNameEv to i8*), i8* bitcast (void (%class.SkGaussianColorFilter*, %class.SkWriteBuffer*)* @_ZNK21SkGaussianColorFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkColorFilterBase*)* @_ZNK17SkColorFilterBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*)* @_ZNK17SkColorFilterBase18onIsAlphaUnchangedEv to i8*), i8* bitcast ({ i8, %class.GrFragmentProcessor* } (%class.SkGaussianColorFilter*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)* @_ZNK21SkGaussianColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.133*, %class.SkColorSpace*)* @_ZNK17SkColorFilterBase15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*, float*)* @_ZNK17SkColorFilterBase16onAsAColorMatrixEPf to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*, i32*, i32*)* @_ZNK17SkColorFilterBase14onAsAColorModeEPjP11SkBlendMode to i8*), i8* bitcast (i1 (%class.SkGaussianColorFilter*, %struct.SkStageRec*, i1)* @_ZNK21SkGaussianColorFilter14onAppendStagesERK10SkStageRecb to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %class.SkGaussianColorFilter*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK21SkGaussianColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc to i8*)] }, align 8
@_ZZN7GrStyle10SimpleFillEvE5kFill = linkonce_odr hidden global %class.GrStyle zeroinitializer, comdat, align 8
@_ZGVZN7GrStyle10SimpleFillEvE5kFill = linkonce_odr hidden global i64 0, comdat, align 8
@__dso_handle = external hidden global i8
@.str = private unnamed_addr constant [22 x i8] c"SkGaussianColorFilter\00", align 1
@_ZZN18GrRuntimeFPBuilder4MakeIXadL_ZZNK21SkGaussianColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS2_14default_deleteIS4_EEEEP18GrRecordingContextRK11GrColorInfoE5kCodeEEXadL_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringEEEES_vE7gResult = internal global %"struct.SkRuntimeEffect::Result" zeroinitializer, align 8
@_ZGVZN18GrRuntimeFPBuilder4MakeIXadL_ZZNK21SkGaussianColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS2_14default_deleteIS4_EEEEP18GrRecordingContextRK11GrColorInfoE5kCodeEEXadL_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringEEEES_vE7gResult = internal global i64 0, align 8
@_ZN12_GLOBAL__N_110kNamespaceE = internal global i8* null, align 8
@_ZTVN12_GLOBAL__N_119CachedTessellationsE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CachedTessellations"*)* @_ZN12_GLOBAL__N_119CachedTessellationsD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CachedTessellations"*)* @_ZN12_GLOBAL__N_119CachedTessellationsD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*)] }, align 8
@_ZTVN12_GLOBAL__N_122CachedTessellationsRecE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CachedTessellationsRec"*)* @_ZN12_GLOBAL__N_122CachedTessellationsRecD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CachedTessellationsRec"*)* @_ZN12_GLOBAL__N_122CachedTessellationsRecD0Ev to i8*), i8* bitcast (%"struct.SkResourceCache::Key"* (%"class.(anonymous namespace)::CachedTessellationsRec"*)* @_ZNK12_GLOBAL__N_122CachedTessellationsRec6getKeyEv to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::CachedTessellationsRec"*)* @_ZNK12_GLOBAL__N_122CachedTessellationsRec9bytesUsedEv to i8*), i8* bitcast (i1 (%"struct.SkResourceCache::Rec"*)* @_ZN15SkResourceCache3Rec11canBePurgedEv to i8*), i8* bitcast (void (%"struct.SkResourceCache::Rec"*, i8*)* @_ZN15SkResourceCache3Rec14postAddInstallEPv to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::CachedTessellationsRec"*)* @_ZNK12_GLOBAL__N_122CachedTessellationsRec11getCategoryEv to i8*), i8* bitcast (%class.SkDiscardableMemory* (%"struct.SkResourceCache::Rec"*)* @_ZNK15SkResourceCache3Rec30diagnostic_only_getDiscardableEv to i8*)] }, align 8
@.str.5 = private unnamed_addr constant [25 x i8] c"tessellated shadow masks\00", align 1
@_ZTVN12_GLOBAL__N_117ShadowInvalidatorE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::ShadowInvalidator"*)* @_ZN12_GLOBAL__N_117ShadowInvalidatorD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::ShadowInvalidator"*)* @_ZN12_GLOBAL__N_117ShadowInvalidatorD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::ShadowInvalidator"*)* @_ZN12_GLOBAL__N_117ShadowInvalidator7changedEv to i8*)] }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRecE3$_0FvPK10SkVertices11SkBlendModeRK7SkPaintffbEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@__const._ZN12_GLOBAL__N_111draw_shadowINS_19SpotVerticesFactoryEEEbRKT_NSt3__18functionIFvPK10SkVertices11SkBlendModeRK7SkPaintffbEEERNS_12ShadowedPathEj.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.125 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.129 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.130 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.1 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.131 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon.132 { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@.str.6 = private unnamed_addr constant [51 x i8] c"../../third_party/skia/src/utils/SkShadowUtils.cpp\00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c"Uninitialized occluder type?\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkGaussianColorFilter10CreateProcER12SkReadBuffer(%class.sk_sp* noalias nocapture sret, %class.SkReadBuffer* nocapture readnone) #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 16) #16, !noalias !2
  %4 = getelementptr inbounds i8, i8* %3, i64 8
  %5 = bitcast i8* %4 to i32*
  store i32 1, i32* %5, align 4, !noalias !2
  %6 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21SkGaussianColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !noalias !2
  %7 = ptrtoint i8* %3 to i64
  %8 = bitcast %class.sk_sp* %0 to i64*
  store i64 %7, i64* %8, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN17SkColorFilterPriv12MakeGaussianEv(%class.sk_sp.1* noalias nocapture sret) local_unnamed_addr #2 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #16
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  store i32 1, i32* %4, align 4
  %5 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21SkGaussianColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = bitcast %class.sk_sp.1* %0 to i8**
  store i8* %2, i8** %6, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, %class.GrFragmentProcessor* } @_ZNK21SkGaussianColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo(%class.SkGaussianColorFilter* nocapture readnone, %class.GrFragmentProcessor*, %class.GrRecordingContext* nocapture readnone, %class.GrColorInfo* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = alloca %class.SkString, align 8
  %6 = alloca %"struct.SkRuntimeEffect::Options", align 1
  %7 = alloca %class.SkString, align 8
  %8 = alloca %class.sk_sp.57, align 8
  %9 = alloca %class.GrRuntimeFPBuilder, align 8
  %10 = bitcast %class.GrRuntimeFPBuilder* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #17
  %11 = bitcast %class.SkString* %7 to i8*
  %12 = bitcast %class.GrRuntimeFPBuilder* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 40, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %13 = bitcast %class.sk_sp.57* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load atomic i8, i8* bitcast (i64* @_ZGVZN18GrRuntimeFPBuilder4MakeIXadL_ZZNK21SkGaussianColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS2_14default_deleteIS4_EEEEP18GrRecordingContextRK11GrColorInfoE5kCodeEEXadL_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringEEEES_vE7gResult to i8*) acquire, align 8, !noalias !5
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %24, !prof !8

16:                                               ; preds = %4
  %17 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN18GrRuntimeFPBuilder4MakeIXadL_ZZNK21SkGaussianColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS2_14default_deleteIS4_EEEEP18GrRecordingContextRK11GrColorInfoE5kCodeEEXadL_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringEEEES_vE7gResult) #17
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %16
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %7, i8* getelementptr inbounds ([183 x i8], [183 x i8]* @_ZZNK21SkGaussianColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfoE5kCode, i64 0, i64 0)) #17
  %20 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17, !noalias !5
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %5, %class.SkString* nonnull dereferenceable(8) %7) #17, !noalias !9
  %21 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %21) #17, !noalias !12
  store i8 0, i8* %21, align 1, !noalias !12
  %22 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %6, i64 0, i32 1
  store i8 1, i8* %22, align 1, !noalias !12
  call void @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringRKNS_7OptionsE(%"struct.SkRuntimeEffect::Result"* nonnull sret @_ZZN18GrRuntimeFPBuilder4MakeIXadL_ZZNK21SkGaussianColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS2_14default_deleteIS4_EEEEP18GrRecordingContextRK11GrColorInfoE5kCodeEEXadL_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringEEEES_vE7gResult, %class.SkString* nonnull %5, %"struct.SkRuntimeEffect::Options"* nonnull dereferenceable(2) %6) #17
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %21) #17, !noalias !12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17, !noalias !5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #17
  %23 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"struct.SkRuntimeEffect::Result"*)* @_ZN15SkRuntimeEffect6ResultD2Ev to void (i8*)*), i8* bitcast (%"struct.SkRuntimeEffect::Result"* @_ZZN18GrRuntimeFPBuilder4MakeIXadL_ZZNK21SkGaussianColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS2_14default_deleteIS4_EEEEP18GrRecordingContextRK11GrColorInfoE5kCodeEEXadL_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringEEEES_vE7gResult to i8*), i8* nonnull @__dso_handle) #17
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN18GrRuntimeFPBuilder4MakeIXadL_ZZNK21SkGaussianColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS2_14default_deleteIS4_EEEEP18GrRecordingContextRK11GrColorInfoE5kCodeEEXadL_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringEEEES_vE7gResult) #17
  br label %24

24:                                               ; preds = %19, %16, %4
  %25 = getelementptr inbounds %class.sk_sp.57, %class.sk_sp.57* %8, i64 0, i32 0
  %26 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** getelementptr inbounds (%"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* @_ZZN18GrRuntimeFPBuilder4MakeIXadL_ZZNK21SkGaussianColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS2_14default_deleteIS4_EEEEP18GrRecordingContextRK11GrColorInfoE5kCodeEEXadL_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringEEEES_vE7gResult, i64 0, i32 0, i32 0), align 8, !noalias !5
  %27 = icmp eq %class.SkRuntimeEffect* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %26, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic
  br label %31

31:                                               ; preds = %28, %24
  store %class.SkRuntimeEffect* %26, %class.SkRuntimeEffect** %25, align 8, !noalias !5
  call void @_ZN18GrRuntimeFPBuilderC1E5sk_spI15SkRuntimeEffectE(%class.GrRuntimeFPBuilder* nonnull %9, %class.sk_sp.57* nonnull %8) #17
  %32 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %25, align 8, !noalias !5
  %33 = icmp eq %class.SkRuntimeEffect* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkRuntimeEffect* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkRuntimeEffect* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  call void %43(%class.SkRefCntBase* nonnull %39) #17
  br label %44

44:                                               ; preds = %38, %34, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  %45 = call %class.GrFragmentProcessor* @_ZN18GrRuntimeFPBuilder6makeFPEv(%class.GrRuntimeFPBuilder* nonnull %9) #17
  %46 = call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor7ComposeENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEES4_(%class.GrFragmentProcessor* %45, %class.GrFragmentProcessor* %1) #17
  %47 = insertvalue { i8, %class.GrFragmentProcessor* } { i8 1, %class.GrFragmentProcessor* undef }, %class.GrFragmentProcessor* %46, 1
  call void @_ZN18GrRuntimeFPBuilderD1Ev(%class.GrRuntimeFPBuilder* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #17
  ret { i8, %class.GrFragmentProcessor* } %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor7ComposeENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEES4_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN18GrRuntimeFPBuilder6makeFPEv(%class.GrRuntimeFPBuilder*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN18GrRuntimeFPBuilderD1Ev(%class.GrRuntimeFPBuilder*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN13SkShadowUtils18ComputeTonalColorsEjjPjS0_(i32, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #6 align 2 {
  %5 = and i32 %0, -16777216
  store i32 %5, i32* %2, align 4
  %6 = lshr i32 %1, 16
  %7 = and i32 %6, 255
  %8 = lshr i32 %1, 8
  %9 = and i32 %8, 255
  %10 = and i32 %1, 255
  %11 = icmp ult i32 %7, %9
  %12 = select i1 %11, i32 %9, i32 %7
  %13 = icmp slt i32 %12, %10
  %14 = select i1 %13, i32 %10, i32 %12
  %15 = icmp ult i32 %9, %7
  %16 = select i1 %15, i32 %9, i32 %7
  %17 = icmp slt i32 %10, %16
  %18 = select i1 %17, i32 %10, i32 %16
  %19 = add nuw nsw i32 %14, %18
  %20 = sitofp i32 %19 to float
  %21 = fmul float %20, 5.000000e-01
  %22 = lshr i32 %1, 24
  %23 = uitofp i32 %22 to float
  %24 = insertelement <2 x float> undef, float %23, i32 0
  %25 = insertelement <2 x float> %24, float %21, i32 1
  %26 = fdiv <2 x float> %25, <float 2.550000e+02, float 2.550000e+02>
  %27 = fmul <2 x float> %26, <float 0x3FF1111480000000, float 0x4002C5D640000000>
  %28 = fadd <2 x float> %27, <float 0xC005555720000000, float 0xC01390D280000000>
  %29 = fmul <2 x float> %26, %28
  %30 = fadd <2 x float> %29, <float 0x4004CCCCC0000000, float 0x400C5BAC20000000>
  %31 = fmul <2 x float> %26, %30
  %32 = extractelement <2 x float> %31, i32 0
  %33 = extractelement <2 x float> %31, i32 1
  %34 = fmul float %32, %33
  %35 = fcmp ogt float %34, 1.000000e+00
  %36 = select i1 %35, float 1.000000e+00, float %34
  %37 = fcmp ogt float %36, 0.000000e+00
  %38 = select i1 %37, float %36, float 0.000000e+00
  %39 = extractelement <2 x float> %26, i32 1
  %40 = fmul float %39, 0x3FD99999A0000000
  %41 = fsub float 1.000000e+00, %40
  %42 = extractelement <2 x float> %26, i32 0
  %43 = fmul float %42, %41
  %44 = fcmp ogt float %43, 1.000000e+00
  %45 = select i1 %44, float 1.000000e+00, float %43
  %46 = fcmp ogt float %45, 0.000000e+00
  %47 = select i1 %46, float %45, float 0.000000e+00
  %48 = fsub float 1.000000e+00, %47
  %49 = fmul float %48, %38
  %50 = fadd float %47, %49
  %51 = fdiv float %49, %50
  %52 = fmul float %50, 0x406FFFF7C0000000
  %53 = fptoui float %52 to i32
  %54 = sitofp i32 %7 to float
  %55 = fmul float %51, %54
  %56 = fptoui float %55 to i32
  %57 = sitofp i32 %9 to float
  %58 = fmul float %51, %57
  %59 = fptoui float %58 to i32
  %60 = sitofp i32 %10 to float
  %61 = fmul float %51, %60
  %62 = fptoui float %61 to i32
  %63 = shl i32 %53, 24
  %64 = shl i32 %56, 16
  %65 = shl i32 %59, 8
  %66 = or i32 %63, %62
  %67 = or i32 %66, %64
  %68 = or i32 %67, %65
  store i32 %68, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkShadowUtils10DrawShadowEP8SkCanvasRK6SkPathRK8SkPoint3S7_fjjj(%class.SkCanvas*, %class.SkPath* dereferenceable(16), %struct.SkPoint3* nocapture readonly dereferenceable(12), %struct.SkPoint3* nocapture readonly dereferenceable(12), float, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %9 = alloca %struct.SkPoint, align 4
  %10 = alloca %class.SkMatrix, align 16
  %11 = alloca %struct.SkDrawShadowRec, align 4
  %12 = alloca %class.SkMatrix, align 4
  %13 = bitcast %struct.SkDrawShadowRec* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #17
  %14 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %11, i64 0, i32 1, i32 0
  %15 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %11, i64 0, i32 1, i32 1
  %16 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %11, i64 0, i32 1, i32 2
  %17 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %11, i64 0, i32 2
  %18 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %11, i64 0, i32 3
  %19 = bitcast %struct.SkDrawShadowRec* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 -1, i64 28, i1 false)
  store i32 -1431655766, i32* %18, align 4
  %20 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %11, i64 0, i32 4
  store i32 -1431655766, i32* %20, align 4
  %21 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %11, i64 0, i32 5
  store i32 -1431655766, i32* %21, align 4
  %22 = bitcast %class.SkMatrix* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #17
  call void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* nonnull sret %12, %class.SkCanvas* %0) #17
  %23 = bitcast %struct.SkPoint* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #17
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 1
  %25 = bitcast %struct.SkPoint3* %3 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = bitcast %struct.SkPoint* %9 to i32*
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %3, i64 0, i32 1
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = bitcast float* %24 to i32*
  store i32 %30, i32* %31, align 4
  %32 = and i32 %7, 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %60

34:                                               ; preds = %8
  %35 = bitcast %class.SkMatrix* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #17
  %36 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 1
  %37 = bitcast %class.SkMatrix* %10 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %37, align 16
  %38 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %39, align 16
  %40 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %40, align 16
  store i32 16, i32* %36, align 4
  %41 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = trunc i32 %42 to i8
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %34
  %46 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %12) #17
  %47 = zext i8 %46 to i32
  store i32 %47, i32* %41, align 4
  br label %48

48:                                               ; preds = %45, %34
  %49 = phi i32 [ %47, %45 ], [ %42, %34 ]
  %50 = and i32 %49, 15
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %10) #17
  br label %56

54:                                               ; preds = %48
  %55 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* nonnull %12, %class.SkMatrix* nonnull %10) #17
  br i1 %55, label %56, label %59

56:                                               ; preds = %52, %54
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %10, %struct.SkPoint* nonnull %9, %struct.SkPoint* nonnull %9, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #17
  %57 = load i32, i32* %27, align 4
  %58 = load i32, i32* %31, align 4
  br label %60

59:                                               ; preds = %54
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #17
  br label %70

60:                                               ; preds = %8, %56
  %61 = phi i32 [ %30, %8 ], [ %58, %56 ]
  %62 = phi i32 [ %26, %8 ], [ %57, %56 ]
  %63 = bitcast %struct.SkPoint3* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %13, i8* align 4 %63, i64 12, i1 false) #17
  %64 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %3, i64 0, i32 2
  %65 = bitcast float* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = bitcast float* %14 to i32*
  store i32 %62, i32* %67, align 4
  %68 = bitcast float* %15 to i32*
  store i32 %61, i32* %68, align 4
  %69 = bitcast float* %16 to i32*
  store i32 %66, i32* %69, align 4
  store float %4, float* %17, align 4
  store i32 %5, i32* %18, align 4
  store i32 %6, i32* %20, align 4
  store i32 %7, i32* %21, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #17
  call void @_ZN8SkCanvas23private_draw_shadow_recERK6SkPathRK15SkDrawShadowRec(%class.SkCanvas* %0, %class.SkPath* dereferenceable(16) %1, %struct.SkDrawShadowRec* nonnull dereferenceable(40) %11) #17
  br label %70

70:                                               ; preds = %59, %60
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #17
  ret void
}

declare void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* sret, %class.SkCanvas*) local_unnamed_addr #3

declare void @_ZN8SkCanvas23private_draw_shadow_recERK6SkPathRK15SkDrawShadowRec(%class.SkCanvas*, %class.SkPath* dereferenceable(16), %struct.SkDrawShadowRec* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkShadowUtils14GetLocalBoundsERK8SkMatrixRK6SkPathRK8SkPoint3S8_fjP6SkRect(%class.SkMatrix* dereferenceable(40), %class.SkPath* dereferenceable(16), %struct.SkPoint3* nocapture readonly dereferenceable(12), %struct.SkPoint3* nocapture readonly dereferenceable(12), float, i32, %struct.SkRect*) local_unnamed_addr #0 align 2 {
  %8 = alloca %struct.SkPoint, align 4
  %9 = alloca %class.SkMatrix, align 16
  %10 = alloca %struct.SkDrawShadowRec, align 4
  %11 = bitcast %struct.SkDrawShadowRec* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #17
  %12 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %10, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %10, i64 0, i32 1, i32 1
  %14 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %10, i64 0, i32 1, i32 2
  %15 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %10, i64 0, i32 2
  %16 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %10, i64 0, i32 3
  %17 = bitcast %struct.SkDrawShadowRec* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 -1, i64 28, i1 false)
  store i32 -1431655766, i32* %16, align 4
  %18 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %10, i64 0, i32 4
  store i32 -1431655766, i32* %18, align 4
  %19 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %10, i64 0, i32 5
  store i32 -1431655766, i32* %19, align 4
  %20 = bitcast %struct.SkPoint* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 1
  %22 = bitcast %struct.SkPoint3* %3 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = bitcast %struct.SkPoint* %8 to i32*
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %3, i64 0, i32 1
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = bitcast float* %21 to i32*
  store i32 %27, i32* %28, align 4
  %29 = and i32 %5, 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %57

31:                                               ; preds = %7
  %32 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #17
  %33 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 1
  %34 = bitcast %class.SkMatrix* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %34, align 16
  %35 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %36, align 16
  %37 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %37, align 16
  store i32 16, i32* %33, align 4
  %38 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = trunc i32 %39 to i8
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %31
  %43 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %0) #17
  %44 = zext i8 %43 to i32
  store i32 %44, i32* %38, align 4
  br label %45

45:                                               ; preds = %42, %31
  %46 = phi i32 [ %44, %42 ], [ %39, %31 ]
  %47 = and i32 %46, 15
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %9) #17
  br label %53

51:                                               ; preds = %45
  %52 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %0, %class.SkMatrix* nonnull %9) #17
  br i1 %52, label %53, label %56

53:                                               ; preds = %49, %51
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %9, %struct.SkPoint* nonnull %8, %struct.SkPoint* nonnull %8, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #17
  %54 = load i32, i32* %24, align 4
  %55 = load i32, i32* %28, align 4
  br label %57

56:                                               ; preds = %51
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %67

57:                                               ; preds = %7, %53
  %58 = phi i32 [ %27, %7 ], [ %55, %53 ]
  %59 = phi i32 [ %23, %7 ], [ %54, %53 ]
  %60 = bitcast %struct.SkPoint3* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 4 %60, i64 12, i1 false) #17
  %61 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %3, i64 0, i32 2
  %62 = bitcast float* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = bitcast float* %12 to i32*
  store i32 %59, i32* %64, align 4
  %65 = bitcast float* %13 to i32*
  store i32 %58, i32* %65, align 4
  %66 = bitcast float* %14 to i32*
  store i32 %63, i32* %66, align 4
  store float %4, float* %15, align 4
  store i32 -16777216, i32* %16, align 4
  store i32 -16777216, i32* %18, align 4
  store i32 %5, i32* %19, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN19SkDrawShadowMetrics14GetLocalBoundsERK6SkPathRK15SkDrawShadowRecRK8SkMatrixP6SkRect(%class.SkPath* dereferenceable(16) %1, %struct.SkDrawShadowRec* nonnull dereferenceable(40) %10, %class.SkMatrix* dereferenceable(40) %0, %struct.SkRect* %6) #17
  br label %67

67:                                               ; preds = %56, %57
  %68 = phi i1 [ true, %57 ], [ false, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #17
  ret i1 %68
}

declare void @_ZN19SkDrawShadowMetrics14GetLocalBoundsERK6SkPathRK15SkDrawShadowRecRK8SkMatrixP6SkRect(%class.SkPath* dereferenceable(16), %struct.SkDrawShadowRec* dereferenceable(40), %class.SkMatrix* dereferenceable(40), %struct.SkRect*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRec(%class.SkBaseDevice*, %class.SkPath* dereferenceable(16), %struct.SkDrawShadowRec* nocapture readonly dereferenceable(40)) unnamed_addr #7 align 2 {
  %4 = alloca %class.sk_sp.181, align 8
  %5 = alloca %struct.SkPoint3, align 8
  %6 = alloca %class.SkMatrix, align 4
  %7 = alloca %class.sk_sp.127, align 8
  %8 = alloca %struct.SkPoint3, align 8
  %9 = alloca %class.SkMatrix, align 4
  %10 = alloca %"struct.(anonymous namespace)::FindContext", align 8
  %11 = alloca %class.SkAutoSTArray.174, align 8
  %12 = alloca %class.sk_sp.127, align 8
  %13 = alloca %class.SkPaint, align 8
  %14 = alloca %class.sk_sp.1, align 8
  %15 = alloca %class.sk_sp.1, align 8
  %16 = alloca %class.sk_sp.1, align 8
  %17 = alloca %class.sk_sp.181, align 8
  %18 = alloca %class.sk_sp.127, align 8
  %19 = alloca %"struct.(anonymous namespace)::FindContext.183", align 8
  %20 = alloca %class.SkAutoSTArray.174, align 8
  %21 = alloca %class.sk_sp.127, align 8
  %22 = alloca %class.SkPaint, align 8
  %23 = alloca %class.sk_sp.1, align 8
  %24 = alloca %class.sk_sp.1, align 8
  %25 = alloca %class.sk_sp.1, align 8
  %26 = alloca %class.SkMatrix, align 4
  %27 = alloca %"class.(anonymous namespace)::ShadowedPath", align 8
  %28 = alloca %struct.SkPoint3, align 4
  %29 = alloca %struct.SkPoint3, align 4
  %30 = alloca %class.sk_sp.127, align 8
  %31 = alloca %class.SkPaint, align 8
  %32 = alloca %class.sk_sp.1, align 8
  %33 = alloca %class.sk_sp.1, align 8
  %34 = alloca %class.sk_sp.1, align 8
  %35 = alloca %"struct.(anonymous namespace)::AmbientVerticesFactory", align 4
  %36 = alloca %"class.std::__1::function", align 8
  %37 = alloca %class.SkPath, align 8
  %38 = alloca %class.SkPaint, align 8
  %39 = alloca %class.sk_sp.130, align 8
  %40 = alloca %class.sk_sp.127, align 8
  %41 = alloca %class.SkPaint, align 8
  %42 = alloca %class.sk_sp.1, align 8
  %43 = alloca %class.sk_sp.1, align 8
  %44 = alloca %class.sk_sp.1, align 8
  %45 = alloca %"struct.(anonymous namespace)::SpotVerticesFactory", align 8
  %46 = alloca <2 x float>, align 8
  %47 = bitcast <2 x float>* %46 to %struct.SkPoint*
  %48 = alloca float, align 4
  %49 = alloca %struct.SkRect, align 4
  %50 = alloca %"class.std::__1::function", align 8
  %51 = alloca %class.SkMatrix, align 16
  %52 = alloca %class.SkPaint, align 8
  %53 = alloca %class.sk_sp.130, align 8
  %54 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %2, i64 0, i32 1, i32 0
  %55 = load float, float* %54, align 4
  %56 = fmul float %55, 0.000000e+00
  %57 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %2, i64 0, i32 1, i32 1
  %58 = load float, float* %57, align 4
  %59 = fmul float %56, %58
  %60 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %2, i64 0, i32 1, i32 2
  %61 = load float, float* %60, align 4
  %62 = fmul float %59, %61
  %63 = fcmp ord float %62, 0.000000e+00
  br i1 %63, label %64, label %1357

64:                                               ; preds = %3
  %65 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %2, i64 0, i32 0, i32 0
  %66 = load float, float* %65, align 4
  %67 = fmul float %66, 0.000000e+00
  %68 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %2, i64 0, i32 0, i32 1
  %69 = load float, float* %68, align 4
  %70 = fmul float %67, %69
  %71 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %2, i64 0, i32 0, i32 2
  %72 = load float, float* %71, align 4
  %73 = fmul float %70, %72
  %74 = fcmp ord float %73, 0.000000e+00
  br i1 %74, label %75, label %1357

75:                                               ; preds = %64
  %76 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %2, i64 0, i32 2
  %77 = bitcast float* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = and i32 %78, 2139095040
  %80 = icmp eq i32 %79, 2139095040
  br i1 %80, label %1357, label %81

81:                                               ; preds = %75
  %82 = bitcast %class.SkMatrix* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %82) #17
  %83 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 1
  %84 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2
  %85 = bitcast %class.SkMatrix* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %82, i8* align 4 %85, i64 40, i1 false)
  %86 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #17
  %87 = bitcast %class.SkMatrix* %84 to <4 x i32>*
  %88 = load <4 x i32>, <4 x i32>* %87, align 4
  %89 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 4
  %90 = bitcast float* %89 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4
  %92 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 8
  %93 = bitcast float* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = bitcast %class.SkMatrix* %86 to <4 x i32>*
  %96 = load <4 x i32>, <4 x i32>* %95, align 4
  %97 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %86, i64 0, i32 0, i64 4
  %98 = bitcast float* %97 to <4 x i32>*
  %99 = load <4 x i32>, <4 x i32>* %98, align 4
  %100 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %86, i64 0, i32 0, i64 8
  %101 = bitcast float* %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1
  %104 = bitcast %class.SkM44* %103 to i32*
  %105 = extractelement <4 x i32> %96, i32 0
  store i32 %105, i32* %104, align 8
  %106 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 1
  %107 = bitcast float* %106 to i32*
  %108 = extractelement <4 x i32> %96, i32 3
  store i32 %108, i32* %107, align 4
  %109 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %109, align 8
  %110 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 3
  %111 = bitcast float* %110 to i32*
  %112 = extractelement <4 x i32> %99, i32 2
  store i32 %112, i32* %111, align 4
  %113 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 4
  %114 = bitcast float* %113 to i32*
  %115 = extractelement <4 x i32> %96, i32 1
  store i32 %115, i32* %114, align 8
  %116 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 5
  %117 = bitcast float* %116 to i32*
  %118 = extractelement <4 x i32> %99, i32 0
  store i32 %118, i32* %117, align 4
  %119 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %119, align 8
  %120 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 7
  %121 = bitcast float* %120 to i32*
  %122 = extractelement <4 x i32> %99, i32 3
  store i32 %122, i32* %121, align 4
  %123 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 8
  %124 = bitcast float* %123 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %124, align 8
  %125 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 12
  %126 = bitcast float* %125 to i32*
  %127 = extractelement <4 x i32> %96, i32 2
  store i32 %127, i32* %126, align 8
  %128 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 13
  %129 = bitcast float* %128 to i32*
  %130 = extractelement <4 x i32> %99, i32 1
  store i32 %130, i32* %129, align 4
  %131 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %131, align 8
  %132 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 15
  %133 = bitcast float* %132 to i32*
  store i32 %102, i32* %133, align 4
  %134 = bitcast %class.SkMatrix* %84 to <4 x i32>*
  store <4 x i32> %96, <4 x i32>* %134, align 8
  %135 = bitcast float* %89 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %135, align 8
  store i32 %102, i32* %93, align 8
  %136 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 1
  store i32 128, i32* %136, align 4
  %137 = bitcast %"class.(anonymous namespace)::ShadowedPath"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %137) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %137, i8* align 8 bitcast ({ %class.SkPath*, %class.SkMatrix*, { %class.GrShape, { %class.SkStrokeRec, %class.sk_sp.125, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } }, i32, i8, i8, [2 x i8], %class.SkTLazy, { i32, [4 x i8], i32*, [32 x i8] } } }* @__const._ZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRec.shadowedPath to i8*), i64 224, i1 false)
  %138 = getelementptr inbounds %"class.(anonymous namespace)::ShadowedPath", %"class.(anonymous namespace)::ShadowedPath"* %27, i64 0, i32 0
  store %class.SkPath* %1, %class.SkPath** %138, align 8
  %139 = getelementptr inbounds %"class.(anonymous namespace)::ShadowedPath", %"class.(anonymous namespace)::ShadowedPath"* %27, i64 0, i32 1
  store %class.SkMatrix* %26, %class.SkMatrix** %139, align 8
  %140 = getelementptr inbounds %"class.(anonymous namespace)::ShadowedPath", %"class.(anonymous namespace)::ShadowedPath"* %27, i64 0, i32 2
  %141 = load atomic i8, i8* bitcast (i64* @_ZGVZN7GrStyle10SimpleFillEvE5kFill to i8*) acquire, align 8
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %143, label %148, !prof !8

143:                                              ; preds = %81
  %144 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN7GrStyle10SimpleFillEvE5kFill) #17
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %143
  call void @_ZN11SkStrokeRecC1ENS_9InitStyleE(%class.SkStrokeRec* getelementptr inbounds (%class.GrStyle, %class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill, i64 0, i32 0), i32 1) #17
  store float* null, float** getelementptr inbounds (%class.GrStyle, %class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill, i64 0, i32 2, i32 2, i32 1), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%class.SkPathEffect** getelementptr inbounds (%class.GrStyle, %class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill, i64 0, i32 1, i32 0) to i8*), i8 0, i64 20, i1 false) #17
  %147 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.GrStyle*)* @_ZN7GrStyleD2Ev to void (i8*)*), i8* bitcast (%class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill to i8*), i8* nonnull @__dso_handle) #17
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN7GrStyle10SimpleFillEvE5kFill) #17
  br label %148

148:                                              ; preds = %81, %143, %146
  call void @_ZN13GrStyledShapeC2ERK6SkPathRK7GrStyleNS_10DoSimplifyE(%class.GrStyledShape* %140, %class.SkPath* dereferenceable(16) %1, %class.GrStyle* nonnull dereferenceable(64) @_ZZN7GrStyle10SimpleFillEvE5kFill, i1 zeroext true) #17
  %149 = load float, float* %65, align 4
  %150 = call float @llvm.fabs.f32(float %149) #17
  %151 = fcmp ugt float %150, 0x3F30000000000000
  br i1 %151, label %156, label %152

152:                                              ; preds = %148
  %153 = load float, float* %68, align 4
  %154 = call float @llvm.fabs.f32(float %153) #17
  %155 = fcmp ugt float %154, 0x3F30000000000000
  br label %156

156:                                              ; preds = %148, %152
  %157 = phi i1 [ true, %148 ], [ %155, %152 ]
  %158 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %2, i64 0, i32 5
  %159 = load i32, i32* %158, align 4
  %160 = and i32 %159, 1
  %161 = icmp ne i32 %160, 0
  %162 = trunc i32 %160 to i8
  %163 = and i32 %159, 4
  %164 = icmp ne i32 %163, 0
  br i1 %157, label %170, label %165

165:                                              ; preds = %156
  %166 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %167 = load i8, i8* %166, align 2
  %168 = and i8 %167, 4
  %169 = icmp ne i8 %168, 0
  br label %170

170:                                              ; preds = %165, %156
  %171 = phi i1 [ true, %156 ], [ %169, %165 ]
  %172 = bitcast %struct.SkPoint3* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %172) #17
  %173 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %28, i64 0, i32 2
  %174 = bitcast %struct.SkDrawShadowRec* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %172, i8* align 4 %174, i64 12, i1 false)
  %175 = bitcast %struct.SkPoint3* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %175) #17
  %176 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %29, i64 0, i32 0
  %177 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %29, i64 0, i32 1
  %178 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %29, i64 0, i32 2
  %179 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %2, i64 0, i32 1
  %180 = bitcast %struct.SkPoint3* %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %175, i8* align 4 %180, i64 12, i1 false)
  br i1 %164, label %181, label %183

181:                                              ; preds = %170
  %182 = call zeroext i1 @_ZN8SkPoint39normalizeEv(%struct.SkPoint3* nonnull %29) #17
  br label %185

183:                                              ; preds = %170
  %184 = bitcast %struct.SkPoint3* %29 to %struct.SkPoint*
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %26, %struct.SkPoint* nonnull %184, %struct.SkPoint* nonnull %184, i32 1) #17
  br label %185

185:                                              ; preds = %183, %181
  %186 = load float, float* %76, align 4
  %187 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %2, i64 0, i32 3
  %188 = load i32, i32* %187, align 4
  %189 = icmp ugt i32 %188, 16777215
  br i1 %189, label %190, label %703

190:                                              ; preds = %185
  br i1 %171, label %191, label %263

191:                                              ; preds = %190
  %192 = bitcast %class.sk_sp.127* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %192) #17
  %193 = getelementptr inbounds %class.sk_sp.127, %class.sk_sp.127* %30, i64 0, i32 0
  store %class.SkVertices* inttoptr (i64 -6148914691236517206 to %class.SkVertices*), %class.SkVertices** %193, align 8
  call void @_ZN19SkShadowTessellator11MakeAmbientERK6SkPathRK8SkMatrixRK8SkPoint3b(%class.sk_sp.127* nonnull sret %30, %class.SkPath* dereferenceable(16) %1, %class.SkMatrix* nonnull dereferenceable(40) %26, %struct.SkPoint3* nonnull dereferenceable(12) %28, i1 zeroext %161) #17
  %194 = load %class.SkVertices*, %class.SkVertices** %193, align 8
  %195 = icmp eq %class.SkVertices* %194, null
  br i1 %195, label %262, label %196

196:                                              ; preds = %191
  %197 = bitcast %class.SkPaint* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %197) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %197, i8* align 8 bitcast (%class.SkPaint* @__const._ZN12_GLOBAL__N_111draw_shadowINS_19SpotVerticesFactoryEEEbRKT_NSt3__18functionIFvPK10SkVertices11SkBlendModeRK7SkPaintffbEEERNS_12ShadowedPathEj.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %31) #17
  %198 = bitcast %class.sk_sp.1* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #17
  %199 = load i32, i32* %187, align 4
  call void @_ZN14SkColorFilters5BlendEj11SkBlendMode(%class.sk_sp.1* nonnull sret %33, i32 %199, i32 13) #17
  %200 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %33, i64 0, i32 0
  %201 = load %class.SkColorFilter*, %class.SkColorFilter** %200, align 8
  %202 = call i8* @_Znwm(i64 16) #16, !noalias !13
  %203 = getelementptr inbounds i8, i8* %202, i64 8
  %204 = bitcast i8* %203 to i32*
  store i32 1, i32* %204, align 4, !noalias !13
  %205 = bitcast i8* %202 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21SkGaussianColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %205, align 8, !noalias !13
  %206 = bitcast %class.sk_sp.1* %34 to i8**
  store i8* %202, i8** %206, align 8, !alias.scope !13
  call void @_ZNK13SkColorFilter12makeComposedE5sk_spIS_E(%class.sk_sp.1* nonnull sret %32, %class.SkColorFilter* %201, %class.sk_sp.1* nonnull %34) #17
  call void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint* nonnull %31, %class.sk_sp.1* nonnull %32) #17
  %207 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %32, i64 0, i32 0
  %208 = load %class.SkColorFilter*, %class.SkColorFilter** %207, align 8
  %209 = icmp eq %class.SkColorFilter* %208, null
  br i1 %209, label %220, label %210

210:                                              ; preds = %196
  %211 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %208, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = atomicrmw add i32* %211, i32 -1 acq_rel
  %213 = icmp eq i32 %212, 1
  br i1 %213, label %214, label %220

214:                                              ; preds = %210
  %215 = bitcast %class.SkColorFilter* %208 to %class.SkRefCntBase*
  %216 = bitcast %class.SkColorFilter* %208 to void (%class.SkRefCntBase*)***
  %217 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %216, align 8
  %218 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %217, i64 2
  %219 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %218, align 8
  call void %219(%class.SkRefCntBase* nonnull %215) #17
  br label %220

220:                                              ; preds = %196, %210, %214
  %221 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %34, i64 0, i32 0
  %222 = load %class.SkColorFilter*, %class.SkColorFilter** %221, align 8
  %223 = icmp eq %class.SkColorFilter* %222, null
  br i1 %223, label %234, label %224

224:                                              ; preds = %220
  %225 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %222, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = atomicrmw add i32* %225, i32 -1 acq_rel
  %227 = icmp eq i32 %226, 1
  br i1 %227, label %228, label %234

228:                                              ; preds = %224
  %229 = bitcast %class.SkColorFilter* %222 to %class.SkRefCntBase*
  %230 = bitcast %class.SkColorFilter* %222 to void (%class.SkRefCntBase*)***
  %231 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %230, align 8
  %232 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %231, i64 2
  %233 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %232, align 8
  call void %233(%class.SkRefCntBase* nonnull %229) #17
  br label %234

234:                                              ; preds = %220, %224, %228
  %235 = load %class.SkColorFilter*, %class.SkColorFilter** %200, align 8
  %236 = icmp eq %class.SkColorFilter* %235, null
  br i1 %236, label %247, label %237

237:                                              ; preds = %234
  %238 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %235, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = atomicrmw add i32* %238, i32 -1 acq_rel
  %240 = icmp eq i32 %239, 1
  br i1 %240, label %241, label %247

241:                                              ; preds = %237
  %242 = bitcast %class.SkColorFilter* %235 to %class.SkRefCntBase*
  %243 = bitcast %class.SkColorFilter* %235 to void (%class.SkRefCntBase*)***
  %244 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %243, align 8
  %245 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %244, i64 2
  %246 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %245, align 8
  call void %246(%class.SkRefCntBase* nonnull %242) #17
  br label %247

247:                                              ; preds = %234, %237, %241
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #17
  %248 = load %class.SkVertices*, %class.SkVertices** %193, align 8
  %249 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)***
  %250 = load void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)*** %249, align 8
  %251 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)** %250, i64 35
  %252 = load void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)** %251, align 8
  call void %252(%class.SkBaseDevice* %0, %class.SkVertices* %248, i32 13, %class.SkPaint* nonnull dereferenceable(72) %31) #17
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %31) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %197) #17
  %253 = load %class.SkVertices*, %class.SkVertices** %193, align 8
  %254 = icmp eq %class.SkVertices* %253, null
  br i1 %254, label %261, label %255

255:                                              ; preds = %247
  %256 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %253, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = atomicrmw add i32* %256, i32 -1 acq_rel
  %258 = icmp eq i32 %257, 1
  br i1 %258, label %259, label %261

259:                                              ; preds = %255
  %260 = bitcast %class.SkVertices* %253 to i8*
  call void @_ZN10SkVerticesdlEPv(i8* nonnull %260) #17
  br label %261

261:                                              ; preds = %247, %255, %259
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %192) #17
  br label %703

262:                                              ; preds = %191
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %192) #17
  br label %263

263:                                              ; preds = %190, %262
  %264 = bitcast %"struct.(anonymous namespace)::AmbientVerticesFactory"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %264) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %264, i8* align 4 bitcast ({ float, i8, [3 x i8], %struct.SkPoint }* @__const._ZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRec.factory to i8*), i64 16, i1 false)
  %265 = bitcast float* %173 to i32*
  %266 = load i32, i32* %265, align 4
  %267 = bitcast %"struct.(anonymous namespace)::AmbientVerticesFactory"* %35 to i32*
  store i32 %266, i32* %267, align 4
  %268 = getelementptr inbounds %"struct.(anonymous namespace)::AmbientVerticesFactory", %"struct.(anonymous namespace)::AmbientVerticesFactory"* %35, i64 0, i32 1
  store i8 %162, i8* %268, align 4
  %269 = load i32, i32* %83, align 4
  %270 = and i32 %269, 192
  %271 = icmp eq i32 %270, 128
  br i1 %271, label %272, label %275

272:                                              ; preds = %263
  %273 = call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* nonnull %26) #17
  %274 = zext i8 %273 to i32
  store i32 %274, i32* %83, align 4
  br label %275

275:                                              ; preds = %263, %272
  %276 = phi i32 [ %274, %272 ], [ %269, %263 ]
  %277 = and i32 %276, 8
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %282, label %279

279:                                              ; preds = %275
  %280 = getelementptr inbounds %"struct.(anonymous namespace)::AmbientVerticesFactory", %"struct.(anonymous namespace)::AmbientVerticesFactory"* %35, i64 0, i32 2, i32 0
  store float 0.000000e+00, float* %280, align 4
  %281 = getelementptr inbounds %"struct.(anonymous namespace)::AmbientVerticesFactory", %"struct.(anonymous namespace)::AmbientVerticesFactory"* %35, i64 0, i32 2, i32 1
  store float 0.000000e+00, float* %281, align 4
  br label %293

282:                                              ; preds = %275
  %283 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 0, i64 2
  %284 = bitcast float* %283 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = getelementptr inbounds %"struct.(anonymous namespace)::AmbientVerticesFactory", %"struct.(anonymous namespace)::AmbientVerticesFactory"* %35, i64 0, i32 2, i32 0
  %287 = bitcast float* %286 to i32*
  store i32 %285, i32* %287, align 4
  %288 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 0, i64 5
  %289 = bitcast float* %288 to i32*
  %290 = load i32, i32* %289, align 4
  %291 = getelementptr inbounds %"struct.(anonymous namespace)::AmbientVerticesFactory", %"struct.(anonymous namespace)::AmbientVerticesFactory"* %35, i64 0, i32 2, i32 1
  %292 = bitcast float* %291 to i32*
  store i32 %290, i32* %292, align 4
  br label %293

293:                                              ; preds = %282, %279
  %294 = ptrtoint %class.SkBaseDevice* %0 to i64
  %295 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %36, i64 0, i32 0, i32 1, i32 0
  %296 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %36, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %class.SkVertices*, i32, %class.SkPaint*, float, float, i1)* @"_ZNSt3__110__function16__policy_invokerIFvPK10SkVertices11SkBlendModeRK7SkPaintffbEE11__call_implINS0_20__default_alloc_funcIZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRecE3$_0S9_EEEEvPKNS0_16__policy_storageES4_S5_S8_ffb", void (%"union.std::__1::__function::__policy_storage"*, %class.SkVertices*, i32, %class.SkPaint*, float, float, i1)** %295, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRecE3$_0FvPK10SkVertices11SkBlendModeRK7SkPaintffbEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %296, align 8
  %297 = bitcast %"class.std::__1::function"* %36 to i64*
  store i64 %294, i64* %297, align 8
  %298 = load i32, i32* %187, align 4
  %299 = bitcast %class.sk_sp.1* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %299)
  %300 = bitcast %class.sk_sp.1* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %300)
  %301 = bitcast %"struct.(anonymous namespace)::FindContext"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %301) #17
  %302 = getelementptr inbounds %"struct.(anonymous namespace)::FindContext", %"struct.(anonymous namespace)::FindContext"* %10, i64 0, i32 1, i32 0
  %303 = getelementptr inbounds %"struct.(anonymous namespace)::FindContext", %"struct.(anonymous namespace)::FindContext"* %10, i64 0, i32 2
  %304 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %303, i64 0, i32 0
  %305 = getelementptr inbounds %"struct.(anonymous namespace)::FindContext", %"struct.(anonymous namespace)::FindContext"* %10, i64 0, i32 2, i32 1
  %306 = getelementptr inbounds %"struct.(anonymous namespace)::FindContext", %"struct.(anonymous namespace)::FindContext"* %10, i64 0, i32 3, i32 0
  %307 = getelementptr inbounds %"struct.(anonymous namespace)::FindContext", %"struct.(anonymous namespace)::FindContext"* %10, i64 0, i32 4
  %308 = bitcast %class.SkMatrix** %139 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = bitcast %"struct.(anonymous namespace)::FindContext"* %10 to i64*
  store i64 %309, i64* %310, align 8
  %311 = bitcast %class.SkVertices** %302 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %311, i8 0, i64 24, i1 false) #17
  store %"struct.(anonymous namespace)::AmbientVerticesFactory"* %35, %"struct.(anonymous namespace)::AmbientVerticesFactory"** %307, align 8
  %312 = bitcast %class.SkAutoSTArray.174* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %312) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %312, i8 -86, i64 144, i1 false) #17
  %313 = getelementptr inbounds %class.SkAutoSTArray.174, %class.SkAutoSTArray.174* %11, i64 0, i32 1
  store i8* null, i8** %313, align 8
  %314 = getelementptr inbounds %class.SkAutoSTArray.174, %class.SkAutoSTArray.174* %11, i64 0, i32 0
  store i32 0, i32* %314, align 8
  %315 = call i32 @_ZNK13GrStyledShape15unstyledKeySizeEv(%class.GrStyledShape* %140) #17
  %316 = shl i32 %315, 2
  %317 = icmp sgt i32 %316, -1
  br i1 %317, label %318, label %511

318:                                              ; preds = %293
  %319 = sext i32 %316 to i64
  %320 = add nuw i32 %316, 24
  %321 = icmp sgt i32 %320, 128
  br i1 %321, label %322, label %325

322:                                              ; preds = %318
  %323 = sext i32 %320 to i64
  %324 = call i8* @_Z15sk_malloc_throwmm(i64 %323, i64 1) #17
  br label %329

325:                                              ; preds = %318
  %326 = icmp sgt i32 %320, 0
  %327 = getelementptr inbounds %class.SkAutoSTArray.174, %class.SkAutoSTArray.174* %11, i64 0, i32 2, i64 0
  %328 = select i1 %326, i8* %327, i8* null
  br label %329

329:                                              ; preds = %325, %322
  %330 = phi i8* [ %324, %322 ], [ %328, %325 ]
  store i8* %330, i8** %313, align 8
  store i32 %320, i32* %314, align 8
  %331 = bitcast i8* %330 to %"struct.SkResourceCache::Key"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %330, i8 0, i64 24, i1 false) #17
  %332 = load i8*, i8** %313, align 8
  %333 = getelementptr inbounds i8, i8* %332, i64 24
  %334 = bitcast i8* %333 to i32*
  call void @_ZNK13GrStyledShape16writeUnstyledKeyEPj(%class.GrStyledShape* %140, i32* %334) #17
  call void @_ZN15SkResourceCache3Key4initEPvmm(%"struct.SkResourceCache::Key"* %331, i8* bitcast (i8** @_ZN12_GLOBAL__N_110kNamespaceE to i8*), i64 2314981528777615475, i64 %319) #17
  %335 = call zeroext i1 @_ZN15SkResourceCache4FindERKNS_3KeyEPFbRKNS_3RecEPvES6_(%"struct.SkResourceCache::Key"* dereferenceable(24) %331, i1 (%"struct.SkResourceCache::Rec"*, i8*)* nonnull @_ZN12_GLOBAL__N_111FindVisitorINS_22AmbientVerticesFactoryEEEbRKN15SkResourceCache3RecEPv, i8* nonnull %301) #17
  %336 = load %class.SkVertices*, %class.SkVertices** %302, align 8
  %337 = icmp eq %class.SkVertices* %336, null
  br i1 %337, label %340, label %338

338:                                              ; preds = %329
  %339 = ptrtoint %class.SkVertices* %336 to i64
  store %class.SkVertices* null, %class.SkVertices** %302, align 8
  br label %547

340:                                              ; preds = %329
  %341 = icmp eq i8* %330, null
  br i1 %341, label %511, label %342

342:                                              ; preds = %340
  %343 = load %"class.(anonymous namespace)::CachedTessellations"*, %"class.(anonymous namespace)::CachedTessellations"** %306, align 8
  %344 = icmp eq %"class.(anonymous namespace)::CachedTessellations"* %343, null
  br i1 %344, label %347, label %345

345:                                              ; preds = %342
  %346 = ptrtoint %"class.(anonymous namespace)::CachedTessellations"* %343 to i64
  store %"class.(anonymous namespace)::CachedTessellations"* null, %"class.(anonymous namespace)::CachedTessellations"** %306, align 8
  br label %351

347:                                              ; preds = %342
  %348 = call i8* @_Znwm(i64 672) #16
  %349 = bitcast i8* %348 to %"class.(anonymous namespace)::CachedTessellations"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %348, i8 0, i64 672, i1 false) #17
  call fastcc void @_ZN12_GLOBAL__N_119CachedTessellationsC2Ev(%"class.(anonymous namespace)::CachedTessellations"* nonnull %349) #17
  %350 = ptrtoint i8* %348 to i64
  br label %351

351:                                              ; preds = %347, %345
  %352 = phi i64 [ %346, %345 ], [ %350, %347 ]
  %353 = inttoptr i64 %352 to %"class.(anonymous namespace)::CachedTessellations"*
  %354 = load %class.SkPath*, %class.SkPath** %138, align 8
  %355 = load %class.SkMatrix*, %class.SkMatrix** %139, align 8
  %356 = bitcast %class.sk_sp.127* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %356) #17, !noalias !16
  %357 = getelementptr inbounds %class.sk_sp.127, %class.sk_sp.127* %7, i64 0, i32 0
  store %class.SkVertices* inttoptr (i64 -6148914691236517206 to %class.SkVertices*), %class.SkVertices** %357, align 8, !noalias !16
  %358 = bitcast %struct.SkPoint3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %358) #17, !noalias !21
  %359 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %5, i64 0, i32 2
  %360 = load i32, i32* %267, align 4, !noalias !21
  %361 = bitcast %struct.SkPoint3* %5 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %361, align 8, !noalias !21
  %362 = bitcast float* %359 to i32*
  store i32 %360, i32* %362, align 8, !noalias !21
  %363 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %363) #17, !noalias !21
  %364 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %365 = bitcast %class.SkMatrix* %355 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %363, i8* align 4 %365, i64 40, i1 false) #17, !noalias !21
  %366 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %355, i64 0, i32 1
  %367 = load i32, i32* %366, align 4, !noalias !21
  %368 = and i32 %367, 192
  %369 = icmp eq i32 %368, 128
  br i1 %369, label %370, label %373

370:                                              ; preds = %351
  %371 = call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %355) #17, !noalias !16
  %372 = zext i8 %371 to i32
  store i32 %372, i32* %366, align 4, !noalias !21
  br label %373

373:                                              ; preds = %370, %351
  %374 = phi i32 [ %372, %370 ], [ %367, %351 ]
  %375 = and i32 %374, 8
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %380

377:                                              ; preds = %373
  %378 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 2
  store float 0.000000e+00, float* %378, align 4, !noalias !21
  store i32 128, i32* %364, align 4, !noalias !21
  %379 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 5
  store float 0.000000e+00, float* %379, align 4, !noalias !21
  br label %380

380:                                              ; preds = %377, %373
  %381 = getelementptr inbounds %"struct.(anonymous namespace)::AmbientVerticesFactory", %"struct.(anonymous namespace)::AmbientVerticesFactory"* %35, i64 0, i32 2
  %382 = bitcast %struct.SkPoint* %381 to i64*
  %383 = bitcast %struct.SkPoint* %303 to i64*
  %384 = load i64, i64* %382, align 4, !noalias !21
  store i64 %384, i64* %383, align 8, !noalias !21
  %385 = load i8, i8* %268, align 4, !range !24, !noalias !21
  %386 = icmp ne i8 %385, 0
  call void @_ZN19SkShadowTessellator11MakeAmbientERK6SkPathRK8SkMatrixRK8SkPoint3b(%class.sk_sp.127* nonnull sret %7, %class.SkPath* dereferenceable(16) %354, %class.SkMatrix* nonnull dereferenceable(40) %6, %struct.SkPoint3* nonnull dereferenceable(12) %5, i1 zeroext %386) #17, !noalias !16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %363) #17, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %358) #17, !noalias !21
  %387 = load %class.SkVertices*, %class.SkVertices** %357, align 8, !noalias !16
  %388 = icmp eq %class.SkVertices* %387, null
  br i1 %388, label %389, label %390

389:                                              ; preds = %380
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %356) #17, !noalias !16
  br label %499

390:                                              ; preds = %380
  %391 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %353, i64 0, i32 1, i32 1
  %392 = load i32, i32* %391, align 8, !noalias !16
  %393 = icmp slt i32 %392, 4
  br i1 %393, label %394, label %396

394:                                              ; preds = %390
  %395 = add nsw i32 %392, 1
  store i32 %395, i32* %391, align 8, !noalias !16
  br label %419

396:                                              ; preds = %390
  %397 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %353, i64 0, i32 1, i32 3, i32 0
  %398 = load i32, i32* %397, align 4, !noalias !16
  %399 = and i32 %398, 65535
  %400 = mul nuw nsw i32 %399, 30345
  %401 = lshr i32 %398, 16
  %402 = add nuw nsw i32 %400, %401
  store i32 %402, i32* %397, align 4, !noalias !16
  %403 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %353, i64 0, i32 1, i32 3, i32 1
  %404 = load i32, i32* %403, align 4, !noalias !16
  %405 = and i32 %404, 65535
  %406 = mul nuw nsw i32 %405, 18000
  %407 = lshr i32 %404, 16
  %408 = add nuw nsw i32 %406, %407
  store i32 %408, i32* %403, align 4, !noalias !16
  %409 = lshr i32 %402, 16
  %410 = add nuw nsw i32 %408, %409
  %411 = and i32 %410, 3
  %412 = zext i32 %411 to i64
  %413 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %353, i64 0, i32 1, i32 0, i64 %412, i32 1, i32 0
  %414 = load %class.SkVertices*, %class.SkVertices** %413, align 8, !noalias !16
  %415 = call i64 @_ZNK10SkVertices15approximateSizeEv(%class.SkVertices* %414) #17, !noalias !16
  %416 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %353, i64 0, i32 1, i32 2
  %417 = load i64, i64* %416, align 8, !noalias !16
  %418 = sub i64 %417, %415
  store i64 %418, i64* %416, align 8, !noalias !16
  br label %419

419:                                              ; preds = %396, %394
  %420 = phi i32 [ %392, %394 ], [ %411, %396 ]
  %421 = sext i32 %420 to i64
  %422 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %353, i64 0, i32 1, i32 0, i64 %421
  %423 = bitcast %"struct.(anonymous namespace)::CachedTessellations::Set<(anonymous namespace)::AmbientVerticesFactory, 4>::Entry"* %422 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %423, i8* nonnull align 4 %264, i64 16, i1 false) #17, !noalias !16
  %424 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %353, i64 0, i32 1, i32 0, i64 %421, i32 1
  %425 = icmp eq %class.sk_sp.127* %424, %7
  br i1 %425, label %442, label %426

426:                                              ; preds = %419
  %427 = load %class.SkVertices*, %class.SkVertices** %357, align 8, !noalias !16
  %428 = icmp eq %class.SkVertices* %427, null
  br i1 %428, label %432, label %429

429:                                              ; preds = %426
  %430 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %427, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %431 = atomicrmw add i32* %430, i32 1 monotonic, !noalias !16
  br label %432

432:                                              ; preds = %429, %426
  %433 = getelementptr inbounds %class.sk_sp.127, %class.sk_sp.127* %424, i64 0, i32 0
  %434 = load %class.SkVertices*, %class.SkVertices** %433, align 8, !noalias !16
  store %class.SkVertices* %427, %class.SkVertices** %433, align 8, !noalias !16
  %435 = icmp eq %class.SkVertices* %434, null
  br i1 %435, label %442, label %436

436:                                              ; preds = %432
  %437 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %434, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %438 = atomicrmw add i32* %437, i32 -1 acq_rel, !noalias !16
  %439 = icmp eq i32 %438, 1
  br i1 %439, label %440, label %442

440:                                              ; preds = %436
  %441 = bitcast %class.SkVertices* %434 to i8*
  call void @_ZN10SkVerticesdlEPv(i8* nonnull %441) #17, !noalias !16
  br label %442

442:                                              ; preds = %440, %436, %432, %419
  %443 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %353, i64 0, i32 1, i32 0, i64 %421, i32 2
  %444 = bitcast %class.SkMatrix* %443 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %444, i8* align 4 %365, i64 40, i1 false) #17, !noalias !16
  %445 = load %class.SkVertices*, %class.SkVertices** %357, align 8, !noalias !16
  %446 = call i64 @_ZNK10SkVertices15approximateSizeEv(%class.SkVertices* %445) #17, !noalias !16
  %447 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %353, i64 0, i32 1, i32 2
  %448 = load i64, i64* %447, align 8, !noalias !16
  %449 = add i64 %448, %446
  store i64 %449, i64* %447, align 8, !noalias !16
  %450 = bitcast %class.sk_sp.127* %7 to i64*
  %451 = load i64, i64* %450, align 8, !noalias !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %356) #17, !noalias !16
  %452 = icmp eq i64 %451, 0
  br i1 %452, label %499, label %453

453:                                              ; preds = %442
  %454 = call i8* @_Znwm(i64 40) #16
  %455 = bitcast i8* %454 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_122CachedTessellationsRecE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %455, align 8
  %456 = getelementptr inbounds i8, i8* %454, i64 24
  %457 = bitcast i8* %456 to i64*
  store i64 0, i64* %457, align 8
  %458 = getelementptr inbounds i8, i8* %454, i64 32
  %459 = bitcast i8* %458 to i64*
  store i64 %352, i64* %459, align 8
  %460 = bitcast i8* %330 to i32*
  %461 = load i32, i32* %460, align 8
  %462 = shl i32 %461, 2
  %463 = sext i32 %462 to i64
  %464 = call i8* @_Znam(i64 %463) #16
  %465 = bitcast i8* %456 to i8**
  store i8* %464, i8** %465, align 8
  %466 = load i32, i32* %460, align 8
  %467 = load %class.SkPath*, %class.SkPath** %138, align 8
  %468 = shl i32 %466, 2
  %469 = sext i32 %468 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %464, i8* nonnull align 8 %330, i64 %469, i1 false) #17
  %470 = call i8* @_Znwm(i64 24) #16, !noalias !25
  %471 = bitcast i8* %470 to %class.SkIDChangeListener*
  call void @_ZN18SkIDChangeListenerC2Ev(%class.SkIDChangeListener* nonnull %471) #17, !noalias !25
  %472 = bitcast i8* %470 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_117ShadowInvalidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %472, align 8, !noalias !25
  %473 = getelementptr inbounds i8, i8* %470, i64 16
  %474 = load i32, i32* %460, align 8, !noalias !25
  %475 = shl i32 %474, 2
  %476 = sext i32 %475 to i64
  %477 = call i8* @_Znam(i64 %476) #16, !noalias !25
  %478 = bitcast i8* %473 to i8**
  store i8* %477, i8** %478, align 8, !noalias !25
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %477, i8* nonnull align 8 %330, i64 %476, i1 false) #17, !noalias !25
  %479 = ptrtoint i8* %470 to i64
  %480 = bitcast %class.sk_sp.181* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %480) #17
  %481 = getelementptr inbounds %class.SkPath, %class.SkPath* %467, i64 0, i32 0, i32 0
  %482 = load %class.SkPathRef*, %class.SkPathRef** %481, align 8
  %483 = bitcast %class.sk_sp.181* %4 to i64*
  store i64 %479, i64* %483, align 8
  call void @_ZN9SkPathRef22addGenIDChangeListenerE5sk_spI18SkIDChangeListenerE(%class.SkPathRef* %482, %class.sk_sp.181* nonnull %4) #17
  %484 = getelementptr inbounds %class.sk_sp.181, %class.sk_sp.181* %4, i64 0, i32 0
  %485 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %484, align 8
  %486 = icmp eq %class.SkIDChangeListener* %485, null
  br i1 %486, label %497, label %487

487:                                              ; preds = %453
  %488 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %485, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %489 = atomicrmw add i32* %488, i32 -1 acq_rel
  %490 = icmp eq i32 %489, 1
  br i1 %490, label %491, label %497

491:                                              ; preds = %487
  %492 = bitcast %class.SkIDChangeListener* %485 to %class.SkRefCntBase*
  %493 = bitcast %class.SkIDChangeListener* %485 to void (%class.SkRefCntBase*)***
  %494 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %493, align 8
  %495 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %494, i64 2
  %496 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %495, align 8
  call void %496(%class.SkRefCntBase* nonnull %492) #17
  br label %497

497:                                              ; preds = %491, %487, %453
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %480) #17
  %498 = bitcast i8* %454 to %"struct.SkResourceCache::Rec"*
  call void @_ZN15SkResourceCache3AddEPNS_3RecEPv(%"struct.SkResourceCache::Rec"* nonnull %498, i8* null) #17
  br label %547

499:                                              ; preds = %442, %389
  %500 = icmp eq i64 %352, 0
  br i1 %500, label %623, label %501

501:                                              ; preds = %499
  %502 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %353, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %503 = atomicrmw add i32* %502, i32 -1 acq_rel
  %504 = icmp eq i32 %503, 1
  br i1 %504, label %505, label %623

505:                                              ; preds = %501
  %506 = inttoptr i64 %352 to %class.SkRefCntBase*
  %507 = inttoptr i64 %352 to void (%class.SkRefCntBase*)***
  %508 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %507, align 8
  %509 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %508, i64 2
  %510 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %509, align 8
  call void %510(%class.SkRefCntBase* nonnull %506) #17
  br label %623

511:                                              ; preds = %340, %293
  %512 = bitcast %class.sk_sp.127* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %512) #17
  %513 = load %class.SkPath*, %class.SkPath** %138, align 8
  %514 = load %class.SkMatrix*, %class.SkMatrix** %139, align 8
  %515 = bitcast %struct.SkPoint3* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %515) #17, !noalias !28
  %516 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %8, i64 0, i32 2
  %517 = load i32, i32* %267, align 4, !noalias !28
  %518 = bitcast %struct.SkPoint3* %8 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %518, align 8, !noalias !28
  %519 = bitcast float* %516 to i32*
  store i32 %517, i32* %519, align 8, !noalias !28
  %520 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %520) #17, !noalias !28
  %521 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 1
  %522 = bitcast %class.SkMatrix* %514 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %520, i8* align 4 %522, i64 40, i1 false) #17, !noalias !28
  %523 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %514, i64 0, i32 1
  %524 = load i32, i32* %523, align 4, !noalias !28
  %525 = and i32 %524, 192
  %526 = icmp eq i32 %525, 128
  br i1 %526, label %527, label %530

527:                                              ; preds = %511
  %528 = call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %514) #17
  %529 = zext i8 %528 to i32
  store i32 %529, i32* %523, align 4, !noalias !28
  br label %530

530:                                              ; preds = %527, %511
  %531 = phi i32 [ %529, %527 ], [ %524, %511 ]
  %532 = and i32 %531, 8
  %533 = icmp eq i32 %532, 0
  br i1 %533, label %534, label %537

534:                                              ; preds = %530
  %535 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 2
  store float 0.000000e+00, float* %535, align 4, !noalias !28
  store i32 128, i32* %521, align 4, !noalias !28
  %536 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 5
  store float 0.000000e+00, float* %536, align 4, !noalias !28
  br label %537

537:                                              ; preds = %534, %530
  %538 = getelementptr inbounds %"struct.(anonymous namespace)::AmbientVerticesFactory", %"struct.(anonymous namespace)::AmbientVerticesFactory"* %35, i64 0, i32 2
  %539 = bitcast %struct.SkPoint* %538 to i64*
  %540 = bitcast %struct.SkPoint* %303 to i64*
  %541 = load i64, i64* %539, align 4, !noalias !28
  store i64 %541, i64* %540, align 8, !noalias !28
  %542 = load i8, i8* %268, align 4, !range !24, !noalias !28
  %543 = icmp ne i8 %542, 0
  call void @_ZN19SkShadowTessellator11MakeAmbientERK6SkPathRK8SkMatrixRK8SkPoint3b(%class.sk_sp.127* nonnull sret %12, %class.SkPath* dereferenceable(16) %513, %class.SkMatrix* nonnull dereferenceable(40) %9, %struct.SkPoint3* nonnull dereferenceable(12) %8, i1 zeroext %543) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %520) #17, !noalias !28
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %515) #17, !noalias !28
  %544 = bitcast %class.sk_sp.127* %12 to i64*
  %545 = load i64, i64* %544, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %512) #17
  %546 = icmp eq i64 %545, 0
  br i1 %546, label %623, label %547

547:                                              ; preds = %537, %497, %338
  %548 = phi i64 [ %339, %338 ], [ %545, %537 ], [ %451, %497 ]
  %549 = bitcast %class.SkPaint* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %549) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %549, i8* align 8 bitcast (%class.SkPaint* @__const._ZN12_GLOBAL__N_111draw_shadowINS_19SpotVerticesFactoryEEEbRKT_NSt3__18functionIFvPK10SkVertices11SkBlendModeRK7SkPaintffbEEERNS_12ShadowedPathEj.paint to i8*), i64 72, i1 false) #17
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %13) #17
  %550 = bitcast %class.sk_sp.1* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %550) #17
  call void @_ZN14SkColorFilters5BlendEj11SkBlendMode(%class.sk_sp.1* nonnull sret %15, i32 %298, i32 13) #17
  %551 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %15, i64 0, i32 0
  %552 = load %class.SkColorFilter*, %class.SkColorFilter** %551, align 8
  %553 = call i8* @_Znwm(i64 16) #16, !noalias !31
  %554 = getelementptr inbounds i8, i8* %553, i64 8
  %555 = bitcast i8* %554 to i32*
  store i32 1, i32* %555, align 4, !noalias !31
  %556 = bitcast i8* %553 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21SkGaussianColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %556, align 8, !noalias !31
  %557 = bitcast %class.sk_sp.1* %16 to i8**
  store i8* %553, i8** %557, align 8, !alias.scope !31
  call void @_ZNK13SkColorFilter12makeComposedE5sk_spIS_E(%class.sk_sp.1* nonnull sret %14, %class.SkColorFilter* %552, %class.sk_sp.1* nonnull %16) #17
  call void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint* nonnull %13, %class.sk_sp.1* nonnull %14) #17
  %558 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %14, i64 0, i32 0
  %559 = load %class.SkColorFilter*, %class.SkColorFilter** %558, align 8
  %560 = icmp eq %class.SkColorFilter* %559, null
  br i1 %560, label %571, label %561

561:                                              ; preds = %547
  %562 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %559, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %563 = atomicrmw add i32* %562, i32 -1 acq_rel
  %564 = icmp eq i32 %563, 1
  br i1 %564, label %565, label %571

565:                                              ; preds = %561
  %566 = bitcast %class.SkColorFilter* %559 to %class.SkRefCntBase*
  %567 = bitcast %class.SkColorFilter* %559 to void (%class.SkRefCntBase*)***
  %568 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %567, align 8
  %569 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %568, i64 2
  %570 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %569, align 8
  call void %570(%class.SkRefCntBase* nonnull %566) #17
  br label %571

571:                                              ; preds = %565, %561, %547
  %572 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %16, i64 0, i32 0
  %573 = load %class.SkColorFilter*, %class.SkColorFilter** %572, align 8
  %574 = icmp eq %class.SkColorFilter* %573, null
  br i1 %574, label %585, label %575

575:                                              ; preds = %571
  %576 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %573, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %577 = atomicrmw add i32* %576, i32 -1 acq_rel
  %578 = icmp eq i32 %577, 1
  br i1 %578, label %579, label %585

579:                                              ; preds = %575
  %580 = bitcast %class.SkColorFilter* %573 to %class.SkRefCntBase*
  %581 = bitcast %class.SkColorFilter* %573 to void (%class.SkRefCntBase*)***
  %582 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %581, align 8
  %583 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %582, i64 2
  %584 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %583, align 8
  call void %584(%class.SkRefCntBase* nonnull %580) #17
  br label %585

585:                                              ; preds = %579, %575, %571
  %586 = load %class.SkColorFilter*, %class.SkColorFilter** %551, align 8
  %587 = icmp eq %class.SkColorFilter* %586, null
  br i1 %587, label %598, label %588

588:                                              ; preds = %585
  %589 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %586, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %590 = atomicrmw add i32* %589, i32 -1 acq_rel
  %591 = icmp eq i32 %590, 1
  br i1 %591, label %592, label %598

592:                                              ; preds = %588
  %593 = bitcast %class.SkColorFilter* %586 to %class.SkRefCntBase*
  %594 = bitcast %class.SkColorFilter* %586 to void (%class.SkRefCntBase*)***
  %595 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %594, align 8
  %596 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %595, i64 2
  %597 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %596, align 8
  call void %597(%class.SkRefCntBase* nonnull %593) #17
  br label %598

598:                                              ; preds = %592, %588, %585
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %550) #17
  %599 = inttoptr i64 %548 to %class.SkVertices*
  %600 = load float, float* %304, align 8
  %601 = load float, float* %305, align 4
  %602 = load %class.SkMatrix*, %class.SkMatrix** %139, align 8
  %603 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %602, i64 0, i32 1
  %604 = load i32, i32* %603, align 4
  %605 = and i32 %604, 192
  %606 = icmp eq i32 %605, 128
  br i1 %606, label %607, label %610

607:                                              ; preds = %598
  %608 = call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %602) #17
  %609 = zext i8 %608 to i32
  store i32 %609, i32* %603, align 4
  br label %610

610:                                              ; preds = %607, %598
  %611 = phi i32 [ %609, %607 ], [ %604, %598 ]
  %612 = and i32 %611, 8
  %613 = icmp ne i32 %612, 0
  %614 = load void (%"union.std::__1::__function::__policy_storage"*, %class.SkVertices*, i32, %class.SkPaint*, float, float, i1)*, void (%"union.std::__1::__function::__policy_storage"*, %class.SkVertices*, i32, %class.SkPaint*, float, float, i1)** %295, align 8
  %615 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %36, i64 0, i32 0, i32 0
  call void %614(%"union.std::__1::__function::__policy_storage"* nonnull %615, %class.SkVertices* %599, i32 13, %class.SkPaint* nonnull dereferenceable(72) %13, float %600, float %601, i1 zeroext %613) #17
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %13) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %549) #17
  %616 = icmp eq i64 %548, 0
  br i1 %616, label %623, label %617

617:                                              ; preds = %610
  %618 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %599, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %619 = atomicrmw add i32* %618, i32 -1 acq_rel
  %620 = icmp eq i32 %619, 1
  br i1 %620, label %621, label %623

621:                                              ; preds = %617
  %622 = inttoptr i64 %548 to i8*
  call void @_ZN10SkVerticesdlEPv(i8* nonnull %622) #17
  br label %623

623:                                              ; preds = %621, %617, %610, %537, %505, %501, %499
  %624 = phi i1 [ true, %610 ], [ true, %617 ], [ true, %621 ], [ false, %537 ], [ false, %499 ], [ false, %501 ], [ false, %505 ]
  %625 = load i8*, i8** %313, align 8
  %626 = load i32, i32* %314, align 8
  %627 = icmp eq i32 %626, 0
  br i1 %627, label %632, label %628

628:                                              ; preds = %623
  %629 = icmp sgt i32 %626, 128
  br i1 %629, label %630, label %631

630:                                              ; preds = %628
  call void @_Z7sk_freePv(i8* %625) #17
  br label %631

631:                                              ; preds = %630, %628
  store i8* null, i8** %313, align 8
  store i32 0, i32* %314, align 8
  br label %632

632:                                              ; preds = %631, %623
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %312) #17
  %633 = load %"class.(anonymous namespace)::CachedTessellations"*, %"class.(anonymous namespace)::CachedTessellations"** %306, align 8
  %634 = icmp eq %"class.(anonymous namespace)::CachedTessellations"* %633, null
  br i1 %634, label %645, label %635

635:                                              ; preds = %632
  %636 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %633, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %637 = atomicrmw add i32* %636, i32 -1 acq_rel
  %638 = icmp eq i32 %637, 1
  br i1 %638, label %639, label %645

639:                                              ; preds = %635
  %640 = bitcast %"class.(anonymous namespace)::CachedTessellations"* %633 to %class.SkRefCntBase*
  %641 = bitcast %"class.(anonymous namespace)::CachedTessellations"* %633 to void (%class.SkRefCntBase*)***
  %642 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %641, align 8
  %643 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %642, i64 2
  %644 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %643, align 8
  call void %644(%class.SkRefCntBase* nonnull %640) #17
  br label %645

645:                                              ; preds = %639, %635, %632
  %646 = load %class.SkVertices*, %class.SkVertices** %302, align 8
  %647 = icmp eq %class.SkVertices* %646, null
  br i1 %647, label %654, label %648

648:                                              ; preds = %645
  %649 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %646, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %650 = atomicrmw add i32* %649, i32 -1 acq_rel
  %651 = icmp eq i32 %650, 1
  br i1 %651, label %652, label %654

652:                                              ; preds = %648
  %653 = bitcast %class.SkVertices* %646 to i8*
  call void @_ZN10SkVerticesdlEPv(i8* nonnull %653) #17
  br label %654

654:                                              ; preds = %645, %648, %652
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %301) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %299)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %300)
  %655 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %296, align 8
  %656 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %655, i64 0, i32 1
  %657 = load void (i8*)*, void (i8*)** %656, align 8
  %658 = icmp eq void (i8*)* %657, null
  br i1 %658, label %662, label %659

659:                                              ; preds = %654
  %660 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %36, i64 0, i32 0, i32 0, i32 0
  %661 = load i8*, i8** %660, align 8
  call void %657(i8* %661) #17
  br label %662

662:                                              ; preds = %654, %659
  br i1 %624, label %702, label %663

663:                                              ; preds = %662
  %664 = bitcast %class.SkPath* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %664) #17
  %665 = getelementptr inbounds %class.SkPath, %class.SkPath* %37, i64 0, i32 4
  %666 = bitcast %class.SkPath* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %666, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %37) #17
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* %1, %class.SkMatrix* nonnull dereferenceable(40) %26, %class.SkPath* nonnull %37, i32 1) #17
  %667 = load i8, i8* %665, align 2
  %668 = or i8 %667, 4
  store i8 %668, i8* %665, align 2
  %669 = load float, float* %173, align 4
  %670 = fmul float %669, 7.812500e-03
  %671 = fmul float %670, 6.400000e+01
  %672 = fcmp ogt float %671, 1.500000e+02
  %673 = select i1 %672, float 1.500000e+02, float %671
  %674 = fcmp olt float %670, 0.000000e+00
  %675 = select i1 %674, float 0.000000e+00, float %670
  %676 = fadd float %675, 1.000000e+00
  %677 = fmul float %673, 5.000000e-01
  %678 = fmul float %676, %677
  %679 = fsub float %673, %678
  %680 = fmul float %679, 5.000000e-01
  %681 = bitcast %class.SkPaint* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %681) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %681, i8* align 8 bitcast (%class.SkPaint* @__const._ZN12_GLOBAL__N_111draw_shadowINS_19SpotVerticesFactoryEEEbRKT_NSt3__18functionIFvPK10SkVertices11SkBlendModeRK7SkPaintffbEEERNS_12ShadowedPathEj.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %38) #17
  %682 = load i32, i32* %187, align 4
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* nonnull %38, i32 %682) #17
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* nonnull %38, float %680) #17
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %38, i8 zeroext 2) #17
  %683 = call float @_ZN10SkBlurMask20ConvertRadiusToSigmaEf(float %678) #17
  call void @_ZN12SkMaskFilter8MakeBlurE11SkBlurStylefb(%class.sk_sp.130* nonnull sret %39, i32 0, float %683, i1 zeroext false) #17
  call void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint* nonnull %38, %class.sk_sp.130* nonnull %39) #17
  %684 = getelementptr inbounds %class.sk_sp.130, %class.sk_sp.130* %39, i64 0, i32 0
  %685 = load %class.SkMaskFilter*, %class.SkMaskFilter** %684, align 8
  %686 = icmp eq %class.SkMaskFilter* %685, null
  br i1 %686, label %697, label %687

687:                                              ; preds = %663
  %688 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %685, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %689 = atomicrmw add i32* %688, i32 -1 acq_rel
  %690 = icmp eq i32 %689, 1
  br i1 %690, label %691, label %697

691:                                              ; preds = %687
  %692 = bitcast %class.SkMaskFilter* %685 to %class.SkRefCntBase*
  %693 = bitcast %class.SkMaskFilter* %685 to void (%class.SkRefCntBase*)***
  %694 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %693, align 8
  %695 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %694, i64 2
  %696 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %695, align 8
  call void %696(%class.SkRefCntBase* nonnull %692) #17
  br label %697

697:                                              ; preds = %663, %687, %691
  %698 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)***
  %699 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)**, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*** %698, align 8
  %700 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %699, i64 32
  %701 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %700, align 8
  call void %701(%class.SkBaseDevice* %0, %class.SkPath* nonnull dereferenceable(16) %37, %class.SkPaint* nonnull dereferenceable(72) %38, i1 zeroext false) #17
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %38) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %681) #17
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %37) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %664) #17
  br label %702

702:                                              ; preds = %662, %697
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %264) #17
  br label %703

703:                                              ; preds = %261, %702, %185
  %704 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %2, i64 0, i32 4
  %705 = load i32, i32* %704, align 4
  %706 = icmp ugt i32 %705, 16777215
  br i1 %706, label %707, label %1345

707:                                              ; preds = %703
  br i1 %171, label %708, label %780

708:                                              ; preds = %707
  %709 = bitcast %class.sk_sp.127* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %709) #17
  %710 = getelementptr inbounds %class.sk_sp.127, %class.sk_sp.127* %40, i64 0, i32 0
  store %class.SkVertices* inttoptr (i64 -6148914691236517206 to %class.SkVertices*), %class.SkVertices** %710, align 8
  call void @_ZN19SkShadowTessellator8MakeSpotERK6SkPathRK8SkMatrixRK8SkPoint3S8_fbb(%class.sk_sp.127* nonnull sret %40, %class.SkPath* dereferenceable(16) %1, %class.SkMatrix* nonnull dereferenceable(40) %26, %struct.SkPoint3* nonnull dereferenceable(12) %28, %struct.SkPoint3* nonnull dereferenceable(12) %29, float %186, i1 zeroext %161, i1 zeroext %164) #17
  %711 = load %class.SkVertices*, %class.SkVertices** %710, align 8
  %712 = icmp eq %class.SkVertices* %711, null
  br i1 %712, label %779, label %713

713:                                              ; preds = %708
  %714 = bitcast %class.SkPaint* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %714) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %714, i8* align 8 bitcast (%class.SkPaint* @__const._ZN12_GLOBAL__N_111draw_shadowINS_19SpotVerticesFactoryEEEbRKT_NSt3__18functionIFvPK10SkVertices11SkBlendModeRK7SkPaintffbEEERNS_12ShadowedPathEj.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %41) #17
  %715 = bitcast %class.sk_sp.1* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %715) #17
  %716 = load i32, i32* %704, align 4
  call void @_ZN14SkColorFilters5BlendEj11SkBlendMode(%class.sk_sp.1* nonnull sret %43, i32 %716, i32 13) #17
  %717 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %43, i64 0, i32 0
  %718 = load %class.SkColorFilter*, %class.SkColorFilter** %717, align 8
  %719 = call i8* @_Znwm(i64 16) #16, !noalias !34
  %720 = getelementptr inbounds i8, i8* %719, i64 8
  %721 = bitcast i8* %720 to i32*
  store i32 1, i32* %721, align 4, !noalias !34
  %722 = bitcast i8* %719 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21SkGaussianColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %722, align 8, !noalias !34
  %723 = bitcast %class.sk_sp.1* %44 to i8**
  store i8* %719, i8** %723, align 8, !alias.scope !34
  call void @_ZNK13SkColorFilter12makeComposedE5sk_spIS_E(%class.sk_sp.1* nonnull sret %42, %class.SkColorFilter* %718, %class.sk_sp.1* nonnull %44) #17
  call void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint* nonnull %41, %class.sk_sp.1* nonnull %42) #17
  %724 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %42, i64 0, i32 0
  %725 = load %class.SkColorFilter*, %class.SkColorFilter** %724, align 8
  %726 = icmp eq %class.SkColorFilter* %725, null
  br i1 %726, label %737, label %727

727:                                              ; preds = %713
  %728 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %725, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %729 = atomicrmw add i32* %728, i32 -1 acq_rel
  %730 = icmp eq i32 %729, 1
  br i1 %730, label %731, label %737

731:                                              ; preds = %727
  %732 = bitcast %class.SkColorFilter* %725 to %class.SkRefCntBase*
  %733 = bitcast %class.SkColorFilter* %725 to void (%class.SkRefCntBase*)***
  %734 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %733, align 8
  %735 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %734, i64 2
  %736 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %735, align 8
  call void %736(%class.SkRefCntBase* nonnull %732) #17
  br label %737

737:                                              ; preds = %713, %727, %731
  %738 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %44, i64 0, i32 0
  %739 = load %class.SkColorFilter*, %class.SkColorFilter** %738, align 8
  %740 = icmp eq %class.SkColorFilter* %739, null
  br i1 %740, label %751, label %741

741:                                              ; preds = %737
  %742 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %739, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %743 = atomicrmw add i32* %742, i32 -1 acq_rel
  %744 = icmp eq i32 %743, 1
  br i1 %744, label %745, label %751

745:                                              ; preds = %741
  %746 = bitcast %class.SkColorFilter* %739 to %class.SkRefCntBase*
  %747 = bitcast %class.SkColorFilter* %739 to void (%class.SkRefCntBase*)***
  %748 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %747, align 8
  %749 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %748, i64 2
  %750 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %749, align 8
  call void %750(%class.SkRefCntBase* nonnull %746) #17
  br label %751

751:                                              ; preds = %737, %741, %745
  %752 = load %class.SkColorFilter*, %class.SkColorFilter** %717, align 8
  %753 = icmp eq %class.SkColorFilter* %752, null
  br i1 %753, label %764, label %754

754:                                              ; preds = %751
  %755 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %752, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %756 = atomicrmw add i32* %755, i32 -1 acq_rel
  %757 = icmp eq i32 %756, 1
  br i1 %757, label %758, label %764

758:                                              ; preds = %754
  %759 = bitcast %class.SkColorFilter* %752 to %class.SkRefCntBase*
  %760 = bitcast %class.SkColorFilter* %752 to void (%class.SkRefCntBase*)***
  %761 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %760, align 8
  %762 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %761, i64 2
  %763 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %762, align 8
  call void %763(%class.SkRefCntBase* nonnull %759) #17
  br label %764

764:                                              ; preds = %751, %754, %758
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %715) #17
  %765 = load %class.SkVertices*, %class.SkVertices** %710, align 8
  %766 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)***
  %767 = load void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)*** %766, align 8
  %768 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)** %767, i64 35
  %769 = load void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)** %768, align 8
  call void %769(%class.SkBaseDevice* %0, %class.SkVertices* %765, i32 13, %class.SkPaint* nonnull dereferenceable(72) %41) #17
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %41) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %714) #17
  %770 = load %class.SkVertices*, %class.SkVertices** %710, align 8
  %771 = icmp eq %class.SkVertices* %770, null
  br i1 %771, label %778, label %772

772:                                              ; preds = %764
  %773 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %770, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %774 = atomicrmw add i32* %773, i32 -1 acq_rel
  %775 = icmp eq i32 %774, 1
  br i1 %775, label %776, label %778

776:                                              ; preds = %772
  %777 = bitcast %class.SkVertices* %770 to i8*
  call void @_ZN10SkVerticesdlEPv(i8* nonnull %777) #17
  br label %778

778:                                              ; preds = %764, %772, %776
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %709) #17
  br label %1345

779:                                              ; preds = %708
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %709) #17
  br label %780

780:                                              ; preds = %707, %779
  %781 = bitcast %"struct.(anonymous namespace)::SpotVerticesFactory"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %781) #17
  %782 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %45, i64 0, i32 0, i32 0
  %783 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %45, i64 0, i32 0, i32 1
  %784 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %45, i64 0, i32 1
  %785 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %45, i64 0, i32 2
  %786 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %45, i64 0, i32 3
  %787 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %45, i64 0, i32 4
  %788 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %45, i64 0, i32 5
  %789 = bitcast %"struct.(anonymous namespace)::SpotVerticesFactory"* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %789, i8 -1, i64 16, i1 false)
  store i32 -1431655766, i32* %788, align 4
  %790 = bitcast float* %173 to i32*
  %791 = load i32, i32* %790, align 4
  %792 = bitcast float* %785 to i32*
  store i32 %791, i32* %792, align 8
  %793 = bitcast %struct.SkPoint3* %786 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %793, i8* nonnull align 4 %175, i64 12, i1 false)
  store float %186, float* %787, align 8
  %794 = bitcast <2 x float>* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %794) #17
  %795 = getelementptr inbounds <2 x float>, <2 x float>* %46, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %795, align 8
  %796 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %47, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %796, align 4
  %797 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %798 = load %class.SkPathRef*, %class.SkPathRef** %797, align 8
  %799 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %798, i64 0, i32 9
  %800 = load i8, i8* %799, align 8
  %801 = icmp eq i8 %800, 0
  br i1 %801, label %814, label %802

802:                                              ; preds = %780
  %803 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %798, i64 0, i32 1
  %804 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %798, i64 0, i32 3, i32 0
  %805 = load %struct.SkPoint*, %struct.SkPoint** %804, align 8
  %806 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %798, i64 0, i32 3, i32 2
  %807 = load i32, i32* %806, align 4
  %808 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %803, %struct.SkPoint* %805, i32 %807) #17
  %809 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %798, i64 0, i32 10
  %810 = zext i1 %808 to i8
  store i8 %810, i8* %809, align 1
  store i8 0, i8* %799, align 8
  %811 = load %class.SkPathRef*, %class.SkPathRef** %797, align 8
  %812 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %811, i64 0, i32 9
  %813 = load i8, i8* %812, align 8
  br label %814

814:                                              ; preds = %780, %802
  %815 = phi i8 [ 0, %780 ], [ %813, %802 ]
  %816 = phi %class.SkPathRef* [ %798, %780 ], [ %811, %802 ]
  %817 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %798, i64 0, i32 1, i32 0
  %818 = load float, float* %817, align 4
  %819 = fmul float %818, 5.000000e-01
  %820 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %798, i64 0, i32 1, i32 2
  %821 = load float, float* %820, align 4
  %822 = fmul float %821, 5.000000e-01
  %823 = fadd float %819, %822
  %824 = icmp eq i8 %815, 0
  br i1 %824, label %835, label %825

825:                                              ; preds = %814
  %826 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %816, i64 0, i32 9
  %827 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %816, i64 0, i32 1
  %828 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %816, i64 0, i32 3, i32 0
  %829 = load %struct.SkPoint*, %struct.SkPoint** %828, align 8
  %830 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %816, i64 0, i32 3, i32 2
  %831 = load i32, i32* %830, align 4
  %832 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %827, %struct.SkPoint* %829, i32 %831) #17
  %833 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %816, i64 0, i32 10
  %834 = zext i1 %832 to i8
  store i8 %834, i8* %833, align 1
  store i8 0, i8* %826, align 8
  br label %835

835:                                              ; preds = %814, %825
  %836 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %816, i64 0, i32 1, i32 1
  %837 = load float, float* %836, align 4
  %838 = fmul float %837, 5.000000e-01
  %839 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %816, i64 0, i32 1, i32 3
  %840 = load float, float* %839, align 4
  %841 = fmul float %840, 5.000000e-01
  %842 = fadd float %838, %841
  %843 = insertelement <2 x float> undef, float %823, i32 0
  %844 = insertelement <2 x float> %843, float %842, i32 1
  store <2 x float> %844, <2 x float>* %46, align 8
  %845 = bitcast %struct.SkPoint* %784 to <2 x float>*
  store <2 x float> %844, <2 x float>* %845, align 8
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %26, %struct.SkPoint* nonnull %47, %struct.SkPoint* nonnull %47, i32 1) #17
  %846 = bitcast float* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %846) #17
  store float 0xFFFFFFFFE0000000, float* %48, align 4
  %847 = load i32, i32* %158, align 4
  %848 = and i32 %847, 4
  %849 = icmp eq i32 %848, 0
  %850 = load float, float* %173, align 4
  %851 = load float, float* %176, align 4
  %852 = load float, float* %177, align 4
  br i1 %849, label %861, label %853

853:                                              ; preds = %835
  %854 = fmul float %186, %850
  store float %854, float* %48, align 4
  %855 = fsub float -0.000000e+00, %850
  %856 = insertelement <2 x float> undef, float %851, i32 0
  %857 = insertelement <2 x float> %856, float %852, i32 1
  %858 = insertelement <2 x float> undef, float %855, i32 0
  %859 = shufflevector <2 x float> %858, <2 x float> undef, <2 x i32> zeroinitializer
  %860 = fmul <2 x float> %857, %859
  br label %883

861:                                              ; preds = %835
  %862 = load <2 x float>, <2 x float>* %46, align 8
  %863 = insertelement <2 x float> undef, float %851, i32 0
  %864 = insertelement <2 x float> %863, float %852, i32 1
  %865 = fsub <2 x float> %864, %862
  %866 = load float, float* %178, align 4
  %867 = fsub float %866, %850
  %868 = fdiv float %850, %867
  %869 = fcmp ogt float %868, 0x3FEE666660000000
  %870 = select i1 %869, float 0x3FEE666660000000, float %868
  %871 = fcmp ogt float %870, 0.000000e+00
  %872 = select i1 %871, float %870, float 0.000000e+00
  %873 = fmul float %186, %872
  store float %873, float* %48, align 4
  %874 = fdiv float %866, %867
  %875 = fcmp ogt float %874, 0x3FFF333340000000
  %876 = select i1 %875, float 0x3FFF333340000000, float %874
  %877 = fcmp ogt float %876, 1.000000e+00
  %878 = select i1 %877, float %876, float 1.000000e+00
  %879 = fsub float -0.000000e+00, %872
  %880 = insertelement <2 x float> undef, float %879, i32 0
  %881 = shufflevector <2 x float> %880, <2 x float> undef, <2 x i32> zeroinitializer
  %882 = fmul <2 x float> %865, %881
  br label %883

883:                                              ; preds = %861, %853
  %884 = phi float [ 1.000000e+00, %853 ], [ %878, %861 ]
  %885 = phi <2 x float> [ %860, %853 ], [ %882, %861 ]
  %886 = bitcast %"struct.(anonymous namespace)::SpotVerticesFactory"* %45 to <2 x float>*
  store <2 x float> %885, <2 x float>* %886, align 8
  %887 = bitcast %struct.SkRect* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %887) #17
  %888 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %49, i64 0, i32 0
  %889 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %49, i64 0, i32 1
  %890 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %49, i64 0, i32 2
  %891 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %49, i64 0, i32 3
  %892 = bitcast %struct.SkRect* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %892, i8 -1, i64 16, i1 false)
  %893 = load %class.SkPathRef*, %class.SkPathRef** %797, align 8
  %894 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %893, i64 0, i32 9
  %895 = load i8, i8* %894, align 8
  %896 = icmp eq i8 %895, 0
  br i1 %896, label %906, label %897

897:                                              ; preds = %883
  %898 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %893, i64 0, i32 1
  %899 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %893, i64 0, i32 3, i32 0
  %900 = load %struct.SkPoint*, %struct.SkPoint** %899, align 8
  %901 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %893, i64 0, i32 3, i32 2
  %902 = load i32, i32* %901, align 4
  %903 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %898, %struct.SkPoint* %900, i32 %902) #17
  %904 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %893, i64 0, i32 10
  %905 = zext i1 %903 to i8
  store i8 %905, i8* %904, align 1
  store i8 0, i8* %894, align 8
  br label %906

906:                                              ; preds = %883, %897
  %907 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %893, i64 0, i32 1
  %908 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %26, %struct.SkRect* nonnull %49, %struct.SkRect* dereferenceable(16) %907, i32 1) #17
  %909 = and i32 %159, 5
  %910 = icmp eq i32 %909, 0
  %911 = select i1 %164, i32 3, i32 0
  br i1 %910, label %912, label %942

912:                                              ; preds = %906
  %913 = load float, float* %782, align 8
  %914 = fcmp olt float %913, 0.000000e+00
  %915 = fsub float -0.000000e+00, %913
  %916 = select i1 %914, float %915, float %913
  %917 = load float, float* %890, align 4
  %918 = load float, float* %888, align 4
  %919 = fsub float %917, %918
  %920 = fmul float %919, 5.000000e-01
  %921 = fcmp ogt float %916, %920
  br i1 %921, label %942, label %922

922:                                              ; preds = %912
  %923 = load float, float* %783, align 4
  %924 = fcmp olt float %923, 0.000000e+00
  %925 = fsub float -0.000000e+00, %923
  %926 = select i1 %924, float %925, float %923
  %927 = load float, float* %891, align 4
  %928 = load float, float* %889, align 4
  %929 = fsub float %927, %928
  %930 = fmul float %929, 5.000000e-01
  %931 = fcmp ogt float %926, %930
  br i1 %931, label %942, label %932

932:                                              ; preds = %922
  %933 = call float @_ZN7SkPoint6LengthEff(float %913, float %923) #17
  %934 = fmul float %884, %933
  %935 = fadd float %884, %934
  %936 = load float, float* %48, align 4
  %937 = fcmp olt float %935, %936
  br i1 %937, label %942, label %938

938:                                              ; preds = %932
  %939 = call i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath* %1) #17
  %940 = icmp eq i32 %939, 0
  %941 = zext i1 %940 to i32
  br label %942

942:                                              ; preds = %906, %938, %932, %912, %922
  %943 = phi i32 [ %911, %906 ], [ 0, %922 ], [ 0, %912 ], [ 2, %932 ], [ %941, %938 ]
  store i32 %943, i32* %788, align 4
  %944 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 0, i64 2
  %945 = load float, float* %944, align 4
  %946 = load float, float* %782, align 8
  %947 = fadd float %945, %946
  store float %947, float* %782, align 8
  %948 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 0, i64 5
  %949 = load float, float* %948, align 4
  %950 = load float, float* %783, align 4
  %951 = fadd float %949, %950
  store float %951, float* %783, align 4
  %952 = load i32, i32* %704, align 4
  %953 = ptrtoint %class.SkBaseDevice* %0 to i64
  %954 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %50, i64 0, i32 0, i32 1, i32 0
  %955 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %50, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %class.SkVertices*, i32, %class.SkPaint*, float, float, i1)* @"_ZNSt3__110__function16__policy_invokerIFvPK10SkVertices11SkBlendModeRK7SkPaintffbEE11__call_implINS0_20__default_alloc_funcIZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRecE3$_0S9_EEEEvPKNS0_16__policy_storageES4_S5_S8_ffb", void (%"union.std::__1::__function::__policy_storage"*, %class.SkVertices*, i32, %class.SkPaint*, float, float, i1)** %954, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRecE3$_0FvPK10SkVertices11SkBlendModeRK7SkPaintffbEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %955, align 8
  %956 = bitcast %"class.std::__1::function"* %50 to i64*
  store i64 %953, i64* %956, align 8
  %957 = bitcast %class.sk_sp.1* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %957)
  %958 = bitcast %class.sk_sp.1* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %958)
  %959 = bitcast %"struct.(anonymous namespace)::FindContext.183"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %959) #17
  %960 = getelementptr inbounds %"struct.(anonymous namespace)::FindContext.183", %"struct.(anonymous namespace)::FindContext.183"* %19, i64 0, i32 1, i32 0
  %961 = getelementptr inbounds %"struct.(anonymous namespace)::FindContext.183", %"struct.(anonymous namespace)::FindContext.183"* %19, i64 0, i32 2
  %962 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %961, i64 0, i32 0
  %963 = getelementptr inbounds %"struct.(anonymous namespace)::FindContext.183", %"struct.(anonymous namespace)::FindContext.183"* %19, i64 0, i32 2, i32 1
  %964 = getelementptr inbounds %"struct.(anonymous namespace)::FindContext.183", %"struct.(anonymous namespace)::FindContext.183"* %19, i64 0, i32 3, i32 0
  %965 = getelementptr inbounds %"struct.(anonymous namespace)::FindContext.183", %"struct.(anonymous namespace)::FindContext.183"* %19, i64 0, i32 4
  %966 = bitcast %class.SkMatrix** %139 to i64*
  %967 = load i64, i64* %966, align 8
  %968 = bitcast %"struct.(anonymous namespace)::FindContext.183"* %19 to i64*
  store i64 %967, i64* %968, align 8
  %969 = bitcast %class.SkVertices** %960 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %969, i8 0, i64 24, i1 false) #17
  store %"struct.(anonymous namespace)::SpotVerticesFactory"* %45, %"struct.(anonymous namespace)::SpotVerticesFactory"** %965, align 8
  %970 = bitcast %class.SkAutoSTArray.174* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %970) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %970, i8 -86, i64 144, i1 false) #17
  %971 = getelementptr inbounds %class.SkAutoSTArray.174, %class.SkAutoSTArray.174* %20, i64 0, i32 1
  store i8* null, i8** %971, align 8
  %972 = getelementptr inbounds %class.SkAutoSTArray.174, %class.SkAutoSTArray.174* %20, i64 0, i32 0
  store i32 0, i32* %972, align 8
  %973 = call i32 @_ZNK13GrStyledShape15unstyledKeySizeEv(%class.GrStyledShape* %140) #17
  %974 = shl i32 %973, 2
  %975 = icmp sgt i32 %974, -1
  br i1 %975, label %976, label %1141

976:                                              ; preds = %942
  %977 = sext i32 %974 to i64
  %978 = add nuw i32 %974, 24
  %979 = icmp sgt i32 %978, 128
  br i1 %979, label %980, label %983

980:                                              ; preds = %976
  %981 = sext i32 %978 to i64
  %982 = call i8* @_Z15sk_malloc_throwmm(i64 %981, i64 1) #17
  br label %987

983:                                              ; preds = %976
  %984 = icmp sgt i32 %978, 0
  %985 = getelementptr inbounds %class.SkAutoSTArray.174, %class.SkAutoSTArray.174* %20, i64 0, i32 2, i64 0
  %986 = select i1 %984, i8* %985, i8* null
  br label %987

987:                                              ; preds = %983, %980
  %988 = phi i8* [ %982, %980 ], [ %986, %983 ]
  store i8* %988, i8** %971, align 8
  store i32 %978, i32* %972, align 8
  %989 = bitcast i8* %988 to %"struct.SkResourceCache::Key"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %988, i8 0, i64 24, i1 false) #17
  %990 = load i8*, i8** %971, align 8
  %991 = getelementptr inbounds i8, i8* %990, i64 24
  %992 = bitcast i8* %991 to i32*
  call void @_ZNK13GrStyledShape16writeUnstyledKeyEPj(%class.GrStyledShape* %140, i32* %992) #17
  call void @_ZN15SkResourceCache3Key4initEPvmm(%"struct.SkResourceCache::Key"* %989, i8* bitcast (i8** @_ZN12_GLOBAL__N_110kNamespaceE to i8*), i64 2314981528777615475, i64 %977) #17
  %993 = call zeroext i1 @_ZN15SkResourceCache4FindERKNS_3KeyEPFbRKNS_3RecEPvES6_(%"struct.SkResourceCache::Key"* dereferenceable(24) %989, i1 (%"struct.SkResourceCache::Rec"*, i8*)* nonnull @_ZN12_GLOBAL__N_111FindVisitorINS_19SpotVerticesFactoryEEEbRKN15SkResourceCache3RecEPv, i8* nonnull %959) #17
  %994 = load %class.SkVertices*, %class.SkVertices** %960, align 8
  %995 = icmp eq %class.SkVertices* %994, null
  br i1 %995, label %998, label %996

996:                                              ; preds = %987
  %997 = ptrtoint %class.SkVertices* %994 to i64
  store %class.SkVertices* null, %class.SkVertices** %960, align 8
  br label %1148

998:                                              ; preds = %987
  %999 = icmp eq i8* %988, null
  br i1 %999, label %1141, label %1000

1000:                                             ; preds = %998
  %1001 = load %"class.(anonymous namespace)::CachedTessellations"*, %"class.(anonymous namespace)::CachedTessellations"** %964, align 8
  %1002 = icmp eq %"class.(anonymous namespace)::CachedTessellations"* %1001, null
  br i1 %1002, label %1005, label %1003

1003:                                             ; preds = %1000
  %1004 = ptrtoint %"class.(anonymous namespace)::CachedTessellations"* %1001 to i64
  store %"class.(anonymous namespace)::CachedTessellations"* null, %"class.(anonymous namespace)::CachedTessellations"** %964, align 8
  br label %1009

1005:                                             ; preds = %1000
  %1006 = call i8* @_Znwm(i64 672) #16
  %1007 = bitcast i8* %1006 to %"class.(anonymous namespace)::CachedTessellations"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1006, i8 0, i64 672, i1 false) #17
  call fastcc void @_ZN12_GLOBAL__N_119CachedTessellationsC2Ev(%"class.(anonymous namespace)::CachedTessellations"* nonnull %1007) #17
  %1008 = ptrtoint i8* %1006 to i64
  br label %1009

1009:                                             ; preds = %1005, %1003
  %1010 = phi i64 [ %1004, %1003 ], [ %1008, %1005 ]
  %1011 = inttoptr i64 %1010 to %"class.(anonymous namespace)::CachedTessellations"*
  %1012 = load %class.SkPath*, %class.SkPath** %138, align 8
  %1013 = load %class.SkMatrix*, %class.SkMatrix** %139, align 8
  %1014 = bitcast %class.sk_sp.127* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1014) #17, !noalias !37
  %1015 = getelementptr inbounds %class.sk_sp.127, %class.sk_sp.127* %18, i64 0, i32 0
  store %class.SkVertices* inttoptr (i64 -6148914691236517206 to %class.SkVertices*), %class.SkVertices** %1015, align 8, !noalias !37
  call fastcc void @_ZNK12_GLOBAL__N_119SpotVerticesFactory12makeVerticesERK6SkPathRK8SkMatrixP7SkPoint(%class.sk_sp.127* nonnull sret %18, %"struct.(anonymous namespace)::SpotVerticesFactory"* nonnull %45, %class.SkPath* dereferenceable(16) %1012, %class.SkMatrix* dereferenceable(40) %1013, %struct.SkPoint* %961) #17, !noalias !37
  %1016 = load %class.SkVertices*, %class.SkVertices** %1015, align 8, !noalias !37
  %1017 = icmp eq %class.SkVertices* %1016, null
  br i1 %1017, label %1018, label %1019

1018:                                             ; preds = %1009
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1014) #17, !noalias !37
  br label %1129

1019:                                             ; preds = %1009
  %1020 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %1011, i64 0, i32 2, i32 1
  %1021 = load i32, i32* %1020, align 8, !noalias !37
  %1022 = icmp slt i32 %1021, 4
  br i1 %1022, label %1023, label %1025

1023:                                             ; preds = %1019
  %1024 = add nsw i32 %1021, 1
  store i32 %1024, i32* %1020, align 8, !noalias !37
  br label %1048

1025:                                             ; preds = %1019
  %1026 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %1011, i64 0, i32 2, i32 3, i32 0
  %1027 = load i32, i32* %1026, align 4, !noalias !37
  %1028 = and i32 %1027, 65535
  %1029 = mul nuw nsw i32 %1028, 30345
  %1030 = lshr i32 %1027, 16
  %1031 = add nuw nsw i32 %1029, %1030
  store i32 %1031, i32* %1026, align 4, !noalias !37
  %1032 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %1011, i64 0, i32 2, i32 3, i32 1
  %1033 = load i32, i32* %1032, align 4, !noalias !37
  %1034 = and i32 %1033, 65535
  %1035 = mul nuw nsw i32 %1034, 18000
  %1036 = lshr i32 %1033, 16
  %1037 = add nuw nsw i32 %1035, %1036
  store i32 %1037, i32* %1032, align 4, !noalias !37
  %1038 = lshr i32 %1031, 16
  %1039 = add nuw nsw i32 %1037, %1038
  %1040 = and i32 %1039, 3
  %1041 = zext i32 %1040 to i64
  %1042 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %1011, i64 0, i32 2, i32 0, i64 %1041, i32 1, i32 0
  %1043 = load %class.SkVertices*, %class.SkVertices** %1042, align 8, !noalias !37
  %1044 = call i64 @_ZNK10SkVertices15approximateSizeEv(%class.SkVertices* %1043) #17, !noalias !37
  %1045 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %1011, i64 0, i32 2, i32 2
  %1046 = load i64, i64* %1045, align 8, !noalias !37
  %1047 = sub i64 %1046, %1044
  store i64 %1047, i64* %1045, align 8, !noalias !37
  br label %1048

1048:                                             ; preds = %1025, %1023
  %1049 = phi i32 [ %1021, %1023 ], [ %1040, %1025 ]
  %1050 = sext i32 %1049 to i64
  %1051 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %1011, i64 0, i32 2, i32 0, i64 %1050
  %1052 = bitcast %"struct.(anonymous namespace)::CachedTessellations::Set<(anonymous namespace)::SpotVerticesFactory, 4>::Entry"* %1051 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1052, i8* nonnull align 8 %781, i64 40, i1 false) #17, !noalias !37
  %1053 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %1011, i64 0, i32 2, i32 0, i64 %1050, i32 1
  %1054 = icmp eq %class.sk_sp.127* %1053, %18
  br i1 %1054, label %1071, label %1055

1055:                                             ; preds = %1048
  %1056 = load %class.SkVertices*, %class.SkVertices** %1015, align 8, !noalias !37
  %1057 = icmp eq %class.SkVertices* %1056, null
  br i1 %1057, label %1061, label %1058

1058:                                             ; preds = %1055
  %1059 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %1056, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1060 = atomicrmw add i32* %1059, i32 1 monotonic, !noalias !37
  br label %1061

1061:                                             ; preds = %1058, %1055
  %1062 = getelementptr inbounds %class.sk_sp.127, %class.sk_sp.127* %1053, i64 0, i32 0
  %1063 = load %class.SkVertices*, %class.SkVertices** %1062, align 8, !noalias !37
  store %class.SkVertices* %1056, %class.SkVertices** %1062, align 8, !noalias !37
  %1064 = icmp eq %class.SkVertices* %1063, null
  br i1 %1064, label %1071, label %1065

1065:                                             ; preds = %1061
  %1066 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %1063, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1067 = atomicrmw add i32* %1066, i32 -1 acq_rel, !noalias !37
  %1068 = icmp eq i32 %1067, 1
  br i1 %1068, label %1069, label %1071

1069:                                             ; preds = %1065
  %1070 = bitcast %class.SkVertices* %1063 to i8*
  call void @_ZN10SkVerticesdlEPv(i8* nonnull %1070) #17, !noalias !37
  br label %1071

1071:                                             ; preds = %1069, %1065, %1061, %1048
  %1072 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %1011, i64 0, i32 2, i32 0, i64 %1050, i32 2
  %1073 = bitcast %class.SkMatrix* %1072 to i8*
  %1074 = bitcast %class.SkMatrix* %1013 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1073, i8* align 4 %1074, i64 40, i1 false) #17, !noalias !37
  %1075 = load %class.SkVertices*, %class.SkVertices** %1015, align 8, !noalias !37
  %1076 = call i64 @_ZNK10SkVertices15approximateSizeEv(%class.SkVertices* %1075) #17, !noalias !37
  %1077 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %1011, i64 0, i32 2, i32 2
  %1078 = load i64, i64* %1077, align 8, !noalias !37
  %1079 = add i64 %1078, %1076
  store i64 %1079, i64* %1077, align 8, !noalias !37
  %1080 = bitcast %class.sk_sp.127* %18 to i64*
  %1081 = load i64, i64* %1080, align 8, !noalias !37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1014) #17, !noalias !37
  %1082 = icmp eq i64 %1081, 0
  br i1 %1082, label %1129, label %1083

1083:                                             ; preds = %1071
  %1084 = call i8* @_Znwm(i64 40) #16
  %1085 = bitcast i8* %1084 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_122CachedTessellationsRecE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1085, align 8
  %1086 = getelementptr inbounds i8, i8* %1084, i64 24
  %1087 = bitcast i8* %1086 to i64*
  store i64 0, i64* %1087, align 8
  %1088 = getelementptr inbounds i8, i8* %1084, i64 32
  %1089 = bitcast i8* %1088 to i64*
  store i64 %1010, i64* %1089, align 8
  %1090 = bitcast i8* %988 to i32*
  %1091 = load i32, i32* %1090, align 8
  %1092 = shl i32 %1091, 2
  %1093 = sext i32 %1092 to i64
  %1094 = call i8* @_Znam(i64 %1093) #16
  %1095 = bitcast i8* %1086 to i8**
  store i8* %1094, i8** %1095, align 8
  %1096 = load i32, i32* %1090, align 8
  %1097 = load %class.SkPath*, %class.SkPath** %138, align 8
  %1098 = shl i32 %1096, 2
  %1099 = sext i32 %1098 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1094, i8* nonnull align 8 %988, i64 %1099, i1 false) #17
  %1100 = call i8* @_Znwm(i64 24) #16, !noalias !42
  %1101 = bitcast i8* %1100 to %class.SkIDChangeListener*
  call void @_ZN18SkIDChangeListenerC2Ev(%class.SkIDChangeListener* nonnull %1101) #17, !noalias !42
  %1102 = bitcast i8* %1100 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_117ShadowInvalidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1102, align 8, !noalias !42
  %1103 = getelementptr inbounds i8, i8* %1100, i64 16
  %1104 = load i32, i32* %1090, align 8, !noalias !42
  %1105 = shl i32 %1104, 2
  %1106 = sext i32 %1105 to i64
  %1107 = call i8* @_Znam(i64 %1106) #16, !noalias !42
  %1108 = bitcast i8* %1103 to i8**
  store i8* %1107, i8** %1108, align 8, !noalias !42
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1107, i8* nonnull align 8 %988, i64 %1106, i1 false) #17, !noalias !42
  %1109 = ptrtoint i8* %1100 to i64
  %1110 = bitcast %class.sk_sp.181* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1110) #17
  %1111 = getelementptr inbounds %class.SkPath, %class.SkPath* %1097, i64 0, i32 0, i32 0
  %1112 = load %class.SkPathRef*, %class.SkPathRef** %1111, align 8
  %1113 = bitcast %class.sk_sp.181* %17 to i64*
  store i64 %1109, i64* %1113, align 8
  call void @_ZN9SkPathRef22addGenIDChangeListenerE5sk_spI18SkIDChangeListenerE(%class.SkPathRef* %1112, %class.sk_sp.181* nonnull %17) #17
  %1114 = getelementptr inbounds %class.sk_sp.181, %class.sk_sp.181* %17, i64 0, i32 0
  %1115 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %1114, align 8
  %1116 = icmp eq %class.SkIDChangeListener* %1115, null
  br i1 %1116, label %1127, label %1117

1117:                                             ; preds = %1083
  %1118 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %1115, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1119 = atomicrmw add i32* %1118, i32 -1 acq_rel
  %1120 = icmp eq i32 %1119, 1
  br i1 %1120, label %1121, label %1127

1121:                                             ; preds = %1117
  %1122 = bitcast %class.SkIDChangeListener* %1115 to %class.SkRefCntBase*
  %1123 = bitcast %class.SkIDChangeListener* %1115 to void (%class.SkRefCntBase*)***
  %1124 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1123, align 8
  %1125 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1124, i64 2
  %1126 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1125, align 8
  call void %1126(%class.SkRefCntBase* nonnull %1122) #17
  br label %1127

1127:                                             ; preds = %1121, %1117, %1083
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1110) #17
  %1128 = bitcast i8* %1084 to %"struct.SkResourceCache::Rec"*
  call void @_ZN15SkResourceCache3AddEPNS_3RecEPv(%"struct.SkResourceCache::Rec"* nonnull %1128, i8* null) #17
  br label %1148

1129:                                             ; preds = %1071, %1018
  %1130 = icmp eq i64 %1010, 0
  br i1 %1130, label %1224, label %1131

1131:                                             ; preds = %1129
  %1132 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %1011, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1133 = atomicrmw add i32* %1132, i32 -1 acq_rel
  %1134 = icmp eq i32 %1133, 1
  br i1 %1134, label %1135, label %1224

1135:                                             ; preds = %1131
  %1136 = inttoptr i64 %1010 to %class.SkRefCntBase*
  %1137 = inttoptr i64 %1010 to void (%class.SkRefCntBase*)***
  %1138 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1137, align 8
  %1139 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1138, i64 2
  %1140 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1139, align 8
  call void %1140(%class.SkRefCntBase* nonnull %1136) #17
  br label %1224

1141:                                             ; preds = %998, %942
  %1142 = bitcast %class.sk_sp.127* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1142) #17
  %1143 = load %class.SkPath*, %class.SkPath** %138, align 8
  %1144 = load %class.SkMatrix*, %class.SkMatrix** %139, align 8
  call fastcc void @_ZNK12_GLOBAL__N_119SpotVerticesFactory12makeVerticesERK6SkPathRK8SkMatrixP7SkPoint(%class.sk_sp.127* nonnull sret %21, %"struct.(anonymous namespace)::SpotVerticesFactory"* nonnull %45, %class.SkPath* dereferenceable(16) %1143, %class.SkMatrix* dereferenceable(40) %1144, %struct.SkPoint* %961) #17
  %1145 = bitcast %class.sk_sp.127* %21 to i64*
  %1146 = load i64, i64* %1145, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1142) #17
  %1147 = icmp eq i64 %1146, 0
  br i1 %1147, label %1224, label %1148

1148:                                             ; preds = %1141, %1127, %996
  %1149 = phi i64 [ %997, %996 ], [ %1146, %1141 ], [ %1081, %1127 ]
  %1150 = bitcast %class.SkPaint* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1150) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1150, i8* align 8 bitcast (%class.SkPaint* @__const._ZN12_GLOBAL__N_111draw_shadowINS_19SpotVerticesFactoryEEEbRKT_NSt3__18functionIFvPK10SkVertices11SkBlendModeRK7SkPaintffbEEERNS_12ShadowedPathEj.paint to i8*), i64 72, i1 false) #17
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %22) #17
  %1151 = bitcast %class.sk_sp.1* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1151) #17
  call void @_ZN14SkColorFilters5BlendEj11SkBlendMode(%class.sk_sp.1* nonnull sret %24, i32 %952, i32 13) #17
  %1152 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %24, i64 0, i32 0
  %1153 = load %class.SkColorFilter*, %class.SkColorFilter** %1152, align 8
  %1154 = call i8* @_Znwm(i64 16) #16, !noalias !45
  %1155 = getelementptr inbounds i8, i8* %1154, i64 8
  %1156 = bitcast i8* %1155 to i32*
  store i32 1, i32* %1156, align 4, !noalias !45
  %1157 = bitcast i8* %1154 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21SkGaussianColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1157, align 8, !noalias !45
  %1158 = bitcast %class.sk_sp.1* %25 to i8**
  store i8* %1154, i8** %1158, align 8, !alias.scope !45
  call void @_ZNK13SkColorFilter12makeComposedE5sk_spIS_E(%class.sk_sp.1* nonnull sret %23, %class.SkColorFilter* %1153, %class.sk_sp.1* nonnull %25) #17
  call void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint* nonnull %22, %class.sk_sp.1* nonnull %23) #17
  %1159 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %23, i64 0, i32 0
  %1160 = load %class.SkColorFilter*, %class.SkColorFilter** %1159, align 8
  %1161 = icmp eq %class.SkColorFilter* %1160, null
  br i1 %1161, label %1172, label %1162

1162:                                             ; preds = %1148
  %1163 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %1160, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1164 = atomicrmw add i32* %1163, i32 -1 acq_rel
  %1165 = icmp eq i32 %1164, 1
  br i1 %1165, label %1166, label %1172

1166:                                             ; preds = %1162
  %1167 = bitcast %class.SkColorFilter* %1160 to %class.SkRefCntBase*
  %1168 = bitcast %class.SkColorFilter* %1160 to void (%class.SkRefCntBase*)***
  %1169 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1168, align 8
  %1170 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1169, i64 2
  %1171 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1170, align 8
  call void %1171(%class.SkRefCntBase* nonnull %1167) #17
  br label %1172

1172:                                             ; preds = %1166, %1162, %1148
  %1173 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %25, i64 0, i32 0
  %1174 = load %class.SkColorFilter*, %class.SkColorFilter** %1173, align 8
  %1175 = icmp eq %class.SkColorFilter* %1174, null
  br i1 %1175, label %1186, label %1176

1176:                                             ; preds = %1172
  %1177 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %1174, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1178 = atomicrmw add i32* %1177, i32 -1 acq_rel
  %1179 = icmp eq i32 %1178, 1
  br i1 %1179, label %1180, label %1186

1180:                                             ; preds = %1176
  %1181 = bitcast %class.SkColorFilter* %1174 to %class.SkRefCntBase*
  %1182 = bitcast %class.SkColorFilter* %1174 to void (%class.SkRefCntBase*)***
  %1183 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1182, align 8
  %1184 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1183, i64 2
  %1185 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1184, align 8
  call void %1185(%class.SkRefCntBase* nonnull %1181) #17
  br label %1186

1186:                                             ; preds = %1180, %1176, %1172
  %1187 = load %class.SkColorFilter*, %class.SkColorFilter** %1152, align 8
  %1188 = icmp eq %class.SkColorFilter* %1187, null
  br i1 %1188, label %1199, label %1189

1189:                                             ; preds = %1186
  %1190 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %1187, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1191 = atomicrmw add i32* %1190, i32 -1 acq_rel
  %1192 = icmp eq i32 %1191, 1
  br i1 %1192, label %1193, label %1199

1193:                                             ; preds = %1189
  %1194 = bitcast %class.SkColorFilter* %1187 to %class.SkRefCntBase*
  %1195 = bitcast %class.SkColorFilter* %1187 to void (%class.SkRefCntBase*)***
  %1196 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1195, align 8
  %1197 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1196, i64 2
  %1198 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1197, align 8
  call void %1198(%class.SkRefCntBase* nonnull %1194) #17
  br label %1199

1199:                                             ; preds = %1193, %1189, %1186
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1151) #17
  %1200 = inttoptr i64 %1149 to %class.SkVertices*
  %1201 = load float, float* %962, align 8
  %1202 = load float, float* %963, align 4
  %1203 = load %class.SkMatrix*, %class.SkMatrix** %139, align 8
  %1204 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1203, i64 0, i32 1
  %1205 = load i32, i32* %1204, align 4
  %1206 = and i32 %1205, 192
  %1207 = icmp eq i32 %1206, 128
  br i1 %1207, label %1208, label %1211

1208:                                             ; preds = %1199
  %1209 = call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %1203) #17
  %1210 = zext i8 %1209 to i32
  store i32 %1210, i32* %1204, align 4
  br label %1211

1211:                                             ; preds = %1208, %1199
  %1212 = phi i32 [ %1210, %1208 ], [ %1205, %1199 ]
  %1213 = and i32 %1212, 8
  %1214 = icmp ne i32 %1213, 0
  %1215 = load void (%"union.std::__1::__function::__policy_storage"*, %class.SkVertices*, i32, %class.SkPaint*, float, float, i1)*, void (%"union.std::__1::__function::__policy_storage"*, %class.SkVertices*, i32, %class.SkPaint*, float, float, i1)** %954, align 8
  %1216 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %50, i64 0, i32 0, i32 0
  call void %1215(%"union.std::__1::__function::__policy_storage"* nonnull %1216, %class.SkVertices* %1200, i32 13, %class.SkPaint* nonnull dereferenceable(72) %22, float %1201, float %1202, i1 zeroext %1214) #17
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %22) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1150) #17
  %1217 = icmp eq i64 %1149, 0
  br i1 %1217, label %1224, label %1218

1218:                                             ; preds = %1211
  %1219 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %1200, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1220 = atomicrmw add i32* %1219, i32 -1 acq_rel
  %1221 = icmp eq i32 %1220, 1
  br i1 %1221, label %1222, label %1224

1222:                                             ; preds = %1218
  %1223 = inttoptr i64 %1149 to i8*
  call void @_ZN10SkVerticesdlEPv(i8* nonnull %1223) #17
  br label %1224

1224:                                             ; preds = %1222, %1218, %1211, %1141, %1135, %1131, %1129
  %1225 = phi i1 [ true, %1211 ], [ true, %1218 ], [ true, %1222 ], [ false, %1141 ], [ false, %1129 ], [ false, %1131 ], [ false, %1135 ]
  %1226 = load i8*, i8** %971, align 8
  %1227 = load i32, i32* %972, align 8
  %1228 = icmp eq i32 %1227, 0
  br i1 %1228, label %1233, label %1229

1229:                                             ; preds = %1224
  %1230 = icmp sgt i32 %1227, 128
  br i1 %1230, label %1231, label %1232

1231:                                             ; preds = %1229
  call void @_Z7sk_freePv(i8* %1226) #17
  br label %1232

1232:                                             ; preds = %1231, %1229
  store i8* null, i8** %971, align 8
  store i32 0, i32* %972, align 8
  br label %1233

1233:                                             ; preds = %1232, %1224
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %970) #17
  %1234 = load %"class.(anonymous namespace)::CachedTessellations"*, %"class.(anonymous namespace)::CachedTessellations"** %964, align 8
  %1235 = icmp eq %"class.(anonymous namespace)::CachedTessellations"* %1234, null
  br i1 %1235, label %1246, label %1236

1236:                                             ; preds = %1233
  %1237 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %1234, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1238 = atomicrmw add i32* %1237, i32 -1 acq_rel
  %1239 = icmp eq i32 %1238, 1
  br i1 %1239, label %1240, label %1246

1240:                                             ; preds = %1236
  %1241 = bitcast %"class.(anonymous namespace)::CachedTessellations"* %1234 to %class.SkRefCntBase*
  %1242 = bitcast %"class.(anonymous namespace)::CachedTessellations"* %1234 to void (%class.SkRefCntBase*)***
  %1243 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1242, align 8
  %1244 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1243, i64 2
  %1245 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1244, align 8
  call void %1245(%class.SkRefCntBase* nonnull %1241) #17
  br label %1246

1246:                                             ; preds = %1240, %1236, %1233
  %1247 = load %class.SkVertices*, %class.SkVertices** %960, align 8
  %1248 = icmp eq %class.SkVertices* %1247, null
  br i1 %1248, label %1255, label %1249

1249:                                             ; preds = %1246
  %1250 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %1247, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1251 = atomicrmw add i32* %1250, i32 -1 acq_rel
  %1252 = icmp eq i32 %1251, 1
  br i1 %1252, label %1253, label %1255

1253:                                             ; preds = %1249
  %1254 = bitcast %class.SkVertices* %1247 to i8*
  call void @_ZN10SkVerticesdlEPv(i8* nonnull %1254) #17
  br label %1255

1255:                                             ; preds = %1246, %1249, %1253
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %959) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %957)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %958)
  %1256 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %955, align 8
  %1257 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1256, i64 0, i32 1
  %1258 = load void (i8*)*, void (i8*)** %1257, align 8
  %1259 = icmp eq void (i8*)* %1258, null
  br i1 %1259, label %1263, label %1260

1260:                                             ; preds = %1255
  %1261 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %50, i64 0, i32 0, i32 0, i32 0
  %1262 = load i8*, i8** %1261, align 8
  call void %1258(i8* %1262) #17
  br label %1263

1263:                                             ; preds = %1255, %1260
  br i1 %1225, label %1344, label %1264

1264:                                             ; preds = %1263
  %1265 = bitcast %class.SkMatrix* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1265) #17
  %1266 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %51, i64 0, i32 1
  %1267 = bitcast %class.SkMatrix* %51 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %1267, align 16
  %1268 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %51, i64 0, i32 0, i64 4
  %1269 = bitcast float* %1268 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %1269, align 16
  %1270 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %51, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %1270, align 16
  store i32 16, i32* %1266, align 4
  %1271 = load %class.SkPathRef*, %class.SkPathRef** %797, align 8
  %1272 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1271, i64 0, i32 9
  %1273 = load i8, i8* %1272, align 8
  %1274 = icmp eq i8 %1273, 0
  br i1 %1274, label %1284, label %1275

1275:                                             ; preds = %1264
  %1276 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1271, i64 0, i32 1
  %1277 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1271, i64 0, i32 3, i32 0
  %1278 = load %struct.SkPoint*, %struct.SkPoint** %1277, align 8
  %1279 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1271, i64 0, i32 3, i32 2
  %1280 = load i32, i32* %1279, align 4
  %1281 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %1276, %struct.SkPoint* %1278, i32 %1280) #17
  %1282 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1271, i64 0, i32 10
  %1283 = zext i1 %1281 to i8
  store i8 %1283, i8* %1282, align 1
  store i8 0, i8* %1272, align 8
  br label %1284

1284:                                             ; preds = %1264, %1275
  %1285 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1271, i64 0, i32 1
  %1286 = call zeroext i1 @_ZN19SkDrawShadowMetrics22GetSpotShadowTransformERK8SkPoint3fRK8SkMatrixS2_RK6SkRectbPS3_Pf(%struct.SkPoint3* nonnull dereferenceable(12) %29, float %186, %class.SkMatrix* nonnull dereferenceable(40) %26, %struct.SkPoint3* nonnull dereferenceable(12) %28, %struct.SkRect* dereferenceable(16) %1285, i1 zeroext %164, %class.SkMatrix* nonnull %51, float* nonnull %48) #17
  br i1 %1286, label %1287, label %1343

1287:                                             ; preds = %1284
  %1288 = bitcast %class.SkMatrix* %84 to <4 x i32>*
  %1289 = load <4 x i32>, <4 x i32>* %1288, align 4
  %1290 = bitcast float* %89 to <4 x i32>*
  %1291 = load <4 x i32>, <4 x i32>* %1290, align 4
  %1292 = load i32, i32* %93, align 4
  %1293 = bitcast %class.SkMatrix* %51 to <4 x i32>*
  %1294 = load <4 x i32>, <4 x i32>* %1293, align 16
  %1295 = bitcast float* %1268 to <4 x i32>*
  %1296 = load <4 x i32>, <4 x i32>* %1295, align 16
  %1297 = bitcast float* %1270 to i32*
  %1298 = load i32, i32* %1297, align 16
  %1299 = extractelement <4 x i32> %1294, i32 0
  store i32 %1299, i32* %104, align 8
  %1300 = extractelement <4 x i32> %1294, i32 3
  store i32 %1300, i32* %107, align 4
  store float 0.000000e+00, float* %109, align 8
  %1301 = extractelement <4 x i32> %1296, i32 2
  store i32 %1301, i32* %111, align 4
  %1302 = extractelement <4 x i32> %1294, i32 1
  store i32 %1302, i32* %114, align 8
  %1303 = extractelement <4 x i32> %1296, i32 0
  store i32 %1303, i32* %117, align 4
  store float 0.000000e+00, float* %119, align 8
  %1304 = extractelement <4 x i32> %1296, i32 3
  store i32 %1304, i32* %121, align 4
  %1305 = bitcast float* %123 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %1305, align 8
  %1306 = extractelement <4 x i32> %1294, i32 2
  store i32 %1306, i32* %126, align 8
  %1307 = extractelement <4 x i32> %1296, i32 1
  store i32 %1307, i32* %129, align 4
  store float 0.000000e+00, float* %131, align 8
  store i32 %1298, i32* %133, align 4
  %1308 = bitcast %class.SkMatrix* %84 to <4 x i32>*
  store <4 x i32> %1294, <4 x i32>* %1308, align 8
  %1309 = bitcast float* %89 to <4 x i32>*
  store <4 x i32> %1296, <4 x i32>* %1309, align 8
  store i32 %1298, i32* %93, align 8
  store i32 128, i32* %136, align 4
  %1310 = bitcast %class.SkPaint* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1310) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1310, i8* align 8 bitcast (%class.SkPaint* @__const._ZN12_GLOBAL__N_111draw_shadowINS_19SpotVerticesFactoryEEEbRKT_NSt3__18functionIFvPK10SkVertices11SkBlendModeRK7SkPaintffbEEERNS_12ShadowedPathEj.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %52) #17
  %1311 = load i32, i32* %704, align 4
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* nonnull %52, i32 %1311) #17
  %1312 = load float, float* %48, align 4
  %1313 = call float @_ZN10SkBlurMask20ConvertRadiusToSigmaEf(float %1312) #17
  call void @_ZN12SkMaskFilter8MakeBlurE11SkBlurStylefb(%class.sk_sp.130* nonnull sret %53, i32 0, float %1313, i1 zeroext false) #17
  call void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint* nonnull %52, %class.sk_sp.130* nonnull %53) #17
  %1314 = getelementptr inbounds %class.sk_sp.130, %class.sk_sp.130* %53, i64 0, i32 0
  %1315 = load %class.SkMaskFilter*, %class.SkMaskFilter** %1314, align 8
  %1316 = icmp eq %class.SkMaskFilter* %1315, null
  br i1 %1316, label %1327, label %1317

1317:                                             ; preds = %1287
  %1318 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %1315, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1319 = atomicrmw add i32* %1318, i32 -1 acq_rel
  %1320 = icmp eq i32 %1319, 1
  br i1 %1320, label %1321, label %1327

1321:                                             ; preds = %1317
  %1322 = bitcast %class.SkMaskFilter* %1315 to %class.SkRefCntBase*
  %1323 = bitcast %class.SkMaskFilter* %1315 to void (%class.SkRefCntBase*)***
  %1324 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1323, align 8
  %1325 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1324, i64 2
  %1326 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1325, align 8
  call void %1326(%class.SkRefCntBase* nonnull %1322) #17
  br label %1327

1327:                                             ; preds = %1287, %1317, %1321
  %1328 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)***
  %1329 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)**, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*** %1328, align 8
  %1330 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %1329, i64 32
  %1331 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %1330, align 8
  call void %1331(%class.SkBaseDevice* %0, %class.SkPath* dereferenceable(16) %1, %class.SkPaint* nonnull dereferenceable(72) %52, i1 zeroext false) #17
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %52) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1310) #17
  %1332 = extractelement <4 x i32> %1289, i32 0
  store i32 %1332, i32* %104, align 8
  %1333 = extractelement <4 x i32> %1289, i32 3
  store i32 %1333, i32* %107, align 4
  store float 0.000000e+00, float* %109, align 8
  %1334 = extractelement <4 x i32> %1291, i32 2
  store i32 %1334, i32* %111, align 4
  %1335 = extractelement <4 x i32> %1289, i32 1
  store i32 %1335, i32* %114, align 8
  %1336 = extractelement <4 x i32> %1291, i32 0
  store i32 %1336, i32* %117, align 4
  store float 0.000000e+00, float* %119, align 8
  %1337 = extractelement <4 x i32> %1291, i32 3
  store i32 %1337, i32* %121, align 4
  %1338 = bitcast float* %123 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %1338, align 8
  %1339 = extractelement <4 x i32> %1289, i32 2
  store i32 %1339, i32* %126, align 8
  %1340 = extractelement <4 x i32> %1291, i32 1
  store i32 %1340, i32* %129, align 4
  store float 0.000000e+00, float* %131, align 8
  store i32 %1292, i32* %133, align 4
  %1341 = bitcast %class.SkMatrix* %84 to <4 x i32>*
  store <4 x i32> %1289, <4 x i32>* %1341, align 8
  %1342 = bitcast float* %89 to <4 x i32>*
  store <4 x i32> %1291, <4 x i32>* %1342, align 8
  store i32 %1292, i32* %93, align 8
  store i32 128, i32* %136, align 4
  br label %1343

1343:                                             ; preds = %1284, %1327
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1265) #17
  br label %1344

1344:                                             ; preds = %1343, %1263
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %887) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %846) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %794) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %781) #17
  br label %1345

1345:                                             ; preds = %1344, %778, %703
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %175) #17
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %172) #17
  call void @_ZN13GrStyledShapeD2Ev(%class.GrStyledShape* %140) #17
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %137) #17
  %1346 = extractelement <4 x i32> %88, i32 0
  store i32 %1346, i32* %104, align 8
  %1347 = extractelement <4 x i32> %88, i32 3
  store i32 %1347, i32* %107, align 4
  store float 0.000000e+00, float* %109, align 8
  %1348 = extractelement <4 x i32> %91, i32 2
  store i32 %1348, i32* %111, align 4
  %1349 = extractelement <4 x i32> %88, i32 1
  store i32 %1349, i32* %114, align 8
  %1350 = extractelement <4 x i32> %91, i32 0
  store i32 %1350, i32* %117, align 4
  store float 0.000000e+00, float* %119, align 8
  %1351 = extractelement <4 x i32> %91, i32 3
  store i32 %1351, i32* %121, align 4
  %1352 = bitcast float* %123 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %1352, align 8
  %1353 = extractelement <4 x i32> %88, i32 2
  store i32 %1353, i32* %126, align 8
  %1354 = extractelement <4 x i32> %91, i32 1
  store i32 %1354, i32* %129, align 4
  store float 0.000000e+00, float* %131, align 8
  store i32 %94, i32* %133, align 4
  %1355 = bitcast %class.SkMatrix* %84 to <4 x i32>*
  store <4 x i32> %88, <4 x i32>* %1355, align 8
  %1356 = bitcast float* %89 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %1356, align 8
  store i32 %94, i32* %93, align 8
  store i32 128, i32* %136, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %82) #17
  br label %1357

1357:                                             ; preds = %75, %3, %64, %1345
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #3

declare zeroext i1 @_ZN8SkPoint39normalizeEv(%struct.SkPoint3*) local_unnamed_addr #3

declare void @_ZN19SkShadowTessellator11MakeAmbientERK6SkPathRK8SkMatrixRK8SkPoint3b(%class.sk_sp.127* sret, %class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkPoint3* dereferenceable(12), i1 zeroext) local_unnamed_addr #3

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #3

declare void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint*, %class.sk_sp.1*) local_unnamed_addr #3

declare void @_ZN14SkColorFilters5BlendEj11SkBlendMode(%class.sk_sp.1* sret, i32, i32) local_unnamed_addr #3

declare void @_ZNK13SkColorFilter12makeComposedE5sk_spIS_E(%class.sk_sp.1* sret, %class.SkColorFilter*, %class.sk_sp.1*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #4

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #3

declare void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath*, %class.SkMatrix* dereferenceable(40), %class.SkPath*, i32) local_unnamed_addr #3

declare void @_ZN7SkPaint8setColorEj(%class.SkPaint*, i32) local_unnamed_addr #3

declare void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint*, float) local_unnamed_addr #3

declare void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint*, i8 zeroext) local_unnamed_addr #3

declare float @_ZN10SkBlurMask20ConvertRadiusToSigmaEf(float) local_unnamed_addr #3

declare void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint*, %class.sk_sp.130*) local_unnamed_addr #3

declare void @_ZN12SkMaskFilter8MakeBlurE11SkBlurStylefb(%class.sk_sp.130* sret, i32, float, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #4

declare void @_ZN19SkShadowTessellator8MakeSpotERK6SkPathRK8SkMatrixRK8SkPoint3S8_fbb(%class.sk_sp.127* sret, %class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkPoint3* dereferenceable(12), %struct.SkPoint3* dereferenceable(12), float, i1 zeroext, i1 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #3

declare zeroext i1 @_ZN19SkDrawShadowMetrics22GetSpotShadowTransformERK8SkPoint3fRK8SkMatrixS2_RK6SkRectbPS3_Pf(%struct.SkPoint3* dereferenceable(12), float, %class.SkMatrix* dereferenceable(40), %struct.SkPoint3* dereferenceable(12), %struct.SkRect* dereferenceable(16), i1 zeroext, %class.SkMatrix*, float*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21SkGaussianColorFilterD0Ev(%class.SkGaussianColorFilter*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %class.SkGaussianColorFilter* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #17
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp*, %class.SkReadBuffer*)* @_ZNK21SkGaussianColorFilter10getFactoryEv(%class.SkGaussianColorFilter*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp*, %class.SkReadBuffer*)* @_ZN21SkGaussianColorFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK21SkGaussianColorFilter11getTypeNameEv(%class.SkGaussianColorFilter*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK21SkGaussianColorFilter7flattenER13SkWriteBuffer(%class.SkGaussianColorFilter*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK17SkColorFilterBase18getFlattenableTypeEv(%class.SkColorFilterBase*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK17SkColorFilterBase18onIsAlphaUnchangedEv(%class.SkColorFilterBase*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare { <2 x float>, <2 x float> } @_ZNK17SkColorFilterBase15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace(%class.SkColorFilterBase*, %struct.SkRGBA4f.133* dereferenceable(16), %class.SkColorSpace*) unnamed_addr #3

declare zeroext i1 @_ZNK17SkColorFilterBase16onAsAColorMatrixEPf(%class.SkColorFilterBase*, float*) unnamed_addr #3

declare zeroext i1 @_ZNK17SkColorFilterBase14onAsAColorModeEPjP11SkBlendMode(%class.SkColorFilterBase*, i32*, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK21SkGaussianColorFilter14onAppendStagesERK10SkStageRecb(%class.SkGaussianColorFilter*, %struct.SkStageRec* dereferenceable(56), i1 zeroext) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 0
  %5 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %4, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %5, i32 184, i8* null) #17
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK21SkGaussianColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* noalias sret, %class.SkGaussianColorFilter*, %"class.skvm::Builder"*, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) unnamed_addr #0 comdat align 2 {
  %8 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %2, i32 -1072623571) #17
  %9 = extractvalue { %"class.skvm::Builder"*, i32 } %8, 0
  %10 = extractvalue { %"class.skvm::Builder"*, i32 } %8, 1
  %11 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 3, i32 0
  %12 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %11, align 8
  %13 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 3, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %12, %"class.skvm::Builder"* %12, i32 %14, %"class.skvm::Builder"* %9, i32 %10) #17
  %16 = extractvalue { %"class.skvm::Builder"*, i32 } %15, 0
  %17 = extractvalue { %"class.skvm::Builder"*, i32 } %15, 1
  %18 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %16, i32 1077508114) #17
  %19 = extractvalue { %"class.skvm::Builder"*, i32 } %18, 0
  %20 = extractvalue { %"class.skvm::Builder"*, i32 } %18, 1
  %21 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %16, %"class.skvm::Builder"* %16, i32 %17, %"class.skvm::Builder"* %19, i32 %20) #17
  %22 = extractvalue { %"class.skvm::Builder"*, i32 } %21, 0
  %23 = extractvalue { %"class.skvm::Builder"*, i32 } %21, 1
  %24 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %12, %"class.skvm::Builder"* %12, i32 %14, %"class.skvm::Builder"* %22, i32 %23) #17
  %25 = extractvalue { %"class.skvm::Builder"*, i32 } %24, 0
  %26 = extractvalue { %"class.skvm::Builder"*, i32 } %24, 1
  %27 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %25, i32 1046123552) #17
  %28 = extractvalue { %"class.skvm::Builder"*, i32 } %27, 0
  %29 = extractvalue { %"class.skvm::Builder"*, i32 } %27, 1
  %30 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %25, %"class.skvm::Builder"* %25, i32 %26, %"class.skvm::Builder"* %28, i32 %29) #17
  %31 = extractvalue { %"class.skvm::Builder"*, i32 } %30, 0
  %32 = extractvalue { %"class.skvm::Builder"*, i32 } %30, 1
  %33 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %12, %"class.skvm::Builder"* %12, i32 %14, %"class.skvm::Builder"* %31, i32 %32) #17
  %34 = extractvalue { %"class.skvm::Builder"*, i32 } %33, 0
  %35 = extractvalue { %"class.skvm::Builder"*, i32 } %33, 1
  %36 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %34, i32 1042193668) #17
  %37 = extractvalue { %"class.skvm::Builder"*, i32 } %36, 0
  %38 = extractvalue { %"class.skvm::Builder"*, i32 } %36, 1
  %39 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %34, %"class.skvm::Builder"* %34, i32 %35, %"class.skvm::Builder"* %37, i32 %38) #17
  %40 = extractvalue { %"class.skvm::Builder"*, i32 } %39, 0
  %41 = extractvalue { %"class.skvm::Builder"*, i32 } %39, 1
  %42 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %12, %"class.skvm::Builder"* %12, i32 %14, %"class.skvm::Builder"* %40, i32 %41) #17
  %43 = extractvalue { %"class.skvm::Builder"*, i32 } %42, 0
  %44 = extractvalue { %"class.skvm::Builder"*, i32 } %42, 1
  %45 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %43, i32 966858752) #17
  %46 = extractvalue { %"class.skvm::Builder"*, i32 } %45, 0
  %47 = extractvalue { %"class.skvm::Builder"*, i32 } %45, 1
  %48 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %43, %"class.skvm::Builder"* %43, i32 %44, %"class.skvm::Builder"* %46, i32 %47) #17
  %49 = extractvalue { %"class.skvm::Builder"*, i32 } %48, 0
  %50 = extractvalue { %"class.skvm::Builder"*, i32 } %48, 1
  %51 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 0
  store %"class.skvm::Builder"* %49, %"class.skvm::Builder"** %51, align 8
  %52 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 1
  store i32 %50, i32* %52, align 8
  %53 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 0
  store %"class.skvm::Builder"* %49, %"class.skvm::Builder"** %53, align 8
  %54 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 1
  store i32 %50, i32* %54, align 8
  %55 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 0
  store %"class.skvm::Builder"* %49, %"class.skvm::Builder"** %55, align 8
  %56 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 1
  store i32 %50, i32* %56, align 8
  %57 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* %49, %"class.skvm::Builder"** %57, align 8
  %58 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 1
  store i32 %50, i32* %58, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #3

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #3

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GrStyledShapeC2ERK6SkPathRK7GrStyleNS_10DoSimplifyE(%class.GrStyledShape*, %class.SkPath* dereferenceable(16), %class.GrStyle* dereferenceable(64), i1 zeroext) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 1
  store i8 4, i8* %5, align 8
  %6 = bitcast %class.GrStyledShape* %0 to %class.SkPath*
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %6, %class.SkPath* dereferenceable(16) %1) #17
  %7 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %7, align 2
  %8 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %10 = load i8, i8* %9, align 2
  %11 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 4
  %12 = lshr i8 %10, 1
  %13 = and i8 %12, 1
  store i8 %13, i8* %11, align 1
  %14 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1
  %15 = bitcast %class.GrStyle* %14 to i8*
  %16 = bitcast %class.GrStyle* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 16, i1 false) #17
  %17 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 1, i32 0
  %18 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %2, i64 0, i32 1, i32 0
  %19 = load %class.SkPathEffect*, %class.SkPathEffect** %18, align 8
  %20 = icmp eq %class.SkPathEffect* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  br label %24

24:                                               ; preds = %21, %4
  store %class.SkPathEffect* %19, %class.SkPathEffect** %17, align 8
  %25 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 1
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 1
  store float* null, float** %26, align 8
  %27 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 0
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %2, i64 0, i32 2, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 0
  store i32 %29, i32* %30, align 8
  %31 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %2, i64 0, i32 2, i32 1
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = bitcast float* %25 to i32*
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %2, i64 0, i32 2, i32 2, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %60, label %38

38:                                               ; preds = %24
  %39 = icmp sgt i32 %36, 4
  br i1 %39, label %40, label %44

40:                                               ; preds = %38
  %41 = sext i32 %36 to i64
  %42 = tail call i8* @_Z15sk_malloc_throwmm(i64 %41, i64 4) #17
  %43 = bitcast float** %26 to i8**
  store i8* %42, i8** %43, align 8
  br label %50

44:                                               ; preds = %38
  %45 = icmp sgt i32 %36, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %44
  %47 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 2, i64 0
  %48 = bitcast float** %26 to i8**
  store i8* %47, i8** %48, align 8
  br label %50

49:                                               ; preds = %44
  store float* null, float** %26, align 8
  br label %50

50:                                               ; preds = %49, %46, %40
  %51 = phi i8* [ null, %49 ], [ %47, %46 ], [ %42, %40 ]
  store i32 %36, i32* %27, align 8
  %52 = load i32, i32* %35, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %60, label %54

54:                                               ; preds = %50
  %55 = sext i32 %52 to i64
  %56 = shl nsw i64 %55, 2
  %57 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %2, i64 0, i32 2, i32 2, i32 1
  %58 = bitcast float** %57 to i8**
  %59 = load i8*, i8** %58, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %59, i64 %56, i1 false) #17
  br label %60

60:                                               ; preds = %24, %50, %54
  %61 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 2
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 3
  store i8 0, i8* %62, align 4
  %63 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 4
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 5, i32 1
  store %class.SkPath* null, %class.SkPath** %64, align 8
  %65 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 6, i32 1
  store i32* null, i32** %65, align 8
  %66 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 6, i32 0
  store i32 0, i32* %66, align 8
  br i1 %3, label %67, label %68

67:                                               ; preds = %60
  tail call void @_ZN13GrStyledShape8simplifyEv(%class.GrStyledShape* %0) #17
  br label %68

68:                                               ; preds = %67, %60
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7GrStyleD2Ev(%class.GrStyle*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 2, i32 2, i32 1
  %3 = load float*, float** %2, align 8
  %4 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 2, i32 2, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds float, float* %3, i64 %6
  br label %8

8:                                                ; preds = %8, %1
  %9 = phi float* [ %7, %1 ], [ %11, %8 ]
  %10 = icmp ugt float* %9, %3
  %11 = getelementptr inbounds float, float* %9, i64 -1
  br i1 %10, label %8, label %12

12:                                               ; preds = %8
  %13 = bitcast float* %3 to i8*
  %14 = icmp eq i32 %5, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  %16 = icmp sgt i32 %5, 4
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @_Z7sk_freePv(i8* %13) #17
  br label %18

18:                                               ; preds = %17, %15
  store float* null, float** %2, align 8
  store i32 0, i32* %4, align 8
  br label %19

19:                                               ; preds = %12, %18
  %20 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 1, i32 0
  %21 = load %class.SkPathEffect*, %class.SkPathEffect** %20, align 8
  %22 = icmp eq %class.SkPathEffect* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = bitcast %class.SkPathEffect* %21 to %class.SkRefCntBase*
  %29 = bitcast %class.SkPathEffect* %21 to void (%class.SkRefCntBase*)***
  %30 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, i64 2
  %32 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, align 8
  tail call void %32(%class.SkRefCntBase* nonnull %28) #17
  br label %33

33:                                               ; preds = %19, %23, %27
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #10

declare void @_ZN11SkStrokeRecC1ENS_9InitStyleE(%class.SkStrokeRec*, i32) unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

declare void @_ZN13GrStyledShape8simplifyEv(%class.GrStyledShape*) local_unnamed_addr #3

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #11

declare void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #3

declare zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #3

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #3

declare float @_ZN7SkPoint6LengthEff(float, float) local_unnamed_addr #3

declare i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GrStyledShapeD2Ev(%class.GrStyledShape*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 6, i32 1
  %3 = load i32*, i32** %2, align 8
  %4 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 6, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i32, i32* %3, i64 %6
  br label %8

8:                                                ; preds = %8, %1
  %9 = phi i32* [ %7, %1 ], [ %11, %8 ]
  %10 = icmp ugt i32* %9, %3
  %11 = getelementptr inbounds i32, i32* %9, i64 -1
  br i1 %10, label %8, label %12

12:                                               ; preds = %8
  %13 = bitcast i32* %3 to i8*
  %14 = icmp eq i32 %5, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  %16 = icmp sgt i32 %5, 8
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @_Z7sk_freePv(i8* %13) #17
  br label %18

18:                                               ; preds = %17, %15
  store i32* null, i32** %2, align 8
  store i32 0, i32* %4, align 8
  br label %19

19:                                               ; preds = %12, %18
  %20 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 5, i32 1
  %21 = load %class.SkPath*, %class.SkPath** %20, align 8
  %22 = icmp eq %class.SkPath* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %21) #17
  store %class.SkPath* null, %class.SkPath** %20, align 8
  br label %24

24:                                               ; preds = %19, %23
  %25 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 1
  %26 = load float*, float** %25, align 8
  %27 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds float, float* %26, i64 %29
  br label %31

31:                                               ; preds = %31, %24
  %32 = phi float* [ %30, %24 ], [ %34, %31 ]
  %33 = icmp ugt float* %32, %26
  %34 = getelementptr inbounds float, float* %32, i64 -1
  br i1 %33, label %31, label %35

35:                                               ; preds = %31
  %36 = bitcast float* %26 to i8*
  %37 = icmp eq i32 %28, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %35
  %39 = icmp sgt i32 %28, 4
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  tail call void @_Z7sk_freePv(i8* %36) #17
  br label %41

41:                                               ; preds = %40, %38
  store float* null, float** %25, align 8
  store i32 0, i32* %27, align 8
  br label %42

42:                                               ; preds = %41, %35
  %43 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 1, i32 0
  %44 = load %class.SkPathEffect*, %class.SkPathEffect** %43, align 8
  %45 = icmp eq %class.SkPathEffect* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %class.SkPathEffect* %44 to %class.SkRefCntBase*
  %52 = bitcast %class.SkPathEffect* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  tail call void %55(%class.SkRefCntBase* nonnull %51) #17
  br label %56

56:                                               ; preds = %42, %46, %50
  %57 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 1
  %58 = load i8, i8* %57, align 8
  %59 = icmp eq i8 %58, 4
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = bitcast %class.GrStyledShape* %0 to %class.SkPath*
  %62 = getelementptr inbounds %class.SkPath, %class.SkPath* %61, i64 0, i32 4
  %63 = load i8, i8* %62, align 2
  %64 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 4
  %65 = lshr i8 %63, 1
  %66 = and i8 %65, 1
  store i8 %66, i8* %64, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %61) #17
  br label %67

67:                                               ; preds = %56, %60
  store i8 0, i8* %57, align 8
  %68 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %68, align 2
  %69 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %69, align 1
  %70 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %70, align 1
  ret void
}

declare void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline*, i32, i8*) local_unnamed_addr #3

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"*, i32) local_unnamed_addr #3

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #3

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN10SkVerticesdlEPv(i8*) local_unnamed_addr #4

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkRuntimeEffect6ResultD2Ev(%"struct.SkRuntimeEffect::Result"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %0, i64 0, i32 1
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %2) #17
  %3 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %0, i64 0, i32 0, i32 0
  %4 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %3, align 8
  %5 = icmp eq %class.SkRuntimeEffect* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkRuntimeEffect* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkRuntimeEffect* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #17
  br label %16

16:                                               ; preds = %1, %6, %10
  ret void
}

declare void @_ZN18GrRuntimeFPBuilderC1E5sk_spI15SkRuntimeEffectE(%class.GrRuntimeFPBuilder*, %class.sk_sp.57*) unnamed_addr #3

declare void @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringRKNS_7OptionsE(%"struct.SkRuntimeEffect::Result"* sret, %class.SkString*, %"struct.SkRuntimeEffect::Options"* dereferenceable(2)) local_unnamed_addr #3

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #3

declare void @_ZN15SkResourceCache3Key4initEPvmm(%"struct.SkResourceCache::Key"*, i8*, i64, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN15SkResourceCache4FindERKNS_3KeyEPFbRKNS_3RecEPvES6_(%"struct.SkResourceCache::Key"* dereferenceable(24), i1 (%"struct.SkResourceCache::Rec"*, i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_111FindVisitorINS_22AmbientVerticesFactoryEEEbRKN15SkResourceCache3RecEPv(%"struct.SkResourceCache::Rec"* nocapture readonly dereferenceable(24), i8* nocapture) #0 {
  %3 = getelementptr inbounds i8, i8* %1, i64 32
  %4 = bitcast i8* %3 to %"struct.(anonymous namespace)::AmbientVerticesFactory"**
  %5 = load %"struct.(anonymous namespace)::AmbientVerticesFactory"*, %"struct.(anonymous namespace)::AmbientVerticesFactory"** %4, align 8
  %6 = bitcast i8* %1 to %class.SkMatrix**
  %7 = load %class.SkMatrix*, %class.SkMatrix** %6, align 8
  %8 = getelementptr inbounds i8, i8* %1, i64 16
  %9 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %0, i64 1, i32 1
  %10 = bitcast %"struct.SkResourceCache::Rec"** %9 to %"class.(anonymous namespace)::CachedTessellations"**
  %11 = load %"class.(anonymous namespace)::CachedTessellations"*, %"class.(anonymous namespace)::CachedTessellations"** %10, align 8, !noalias !48
  %12 = getelementptr inbounds %"struct.(anonymous namespace)::AmbientVerticesFactory", %"struct.(anonymous namespace)::AmbientVerticesFactory"* %5, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.(anonymous namespace)::AmbientVerticesFactory", %"struct.(anonymous namespace)::AmbientVerticesFactory"* %5, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.(anonymous namespace)::AmbientVerticesFactory", %"struct.(anonymous namespace)::AmbientVerticesFactory"* %5, i64 0, i32 2
  %15 = bitcast %struct.SkPoint* %14 to i64*
  %16 = bitcast i8* %8 to i64*
  %17 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %18 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 0
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 1
  %20 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  %21 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 3
  br label %22

22:                                               ; preds = %88, %2
  %23 = phi i64 [ 0, %2 ], [ %89, %88 ]
  %24 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 1, i32 0, i64 %23, i32 0, i32 0
  %25 = load float, float* %24, align 4, !noalias !51
  %26 = load float, float* %12, align 4, !noalias !51
  %27 = fcmp une float %25, %26
  br i1 %27, label %88, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 1, i32 0, i64 %23, i32 0, i32 1
  %30 = load i8, i8* %29, align 4, !range !24, !noalias !51
  %31 = load i8, i8* %13, align 4, !range !24, !noalias !51
  %32 = icmp eq i8 %30, %31
  br i1 %32, label %33, label %88

33:                                               ; preds = %28
  %34 = load i64, i64* %15, align 4, !noalias !51
  store i64 %34, i64* %16, align 4, !noalias !51
  %35 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 1, i32 0, i64 %23, i32 2
  %36 = load i32, i32* %17, align 4, !noalias !51
  %37 = and i32 %36, 192
  %38 = icmp eq i32 %37, 128
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %7) #17, !noalias !51
  %41 = zext i8 %40 to i32
  store i32 %41, i32* %17, align 4, !noalias !51
  br label %42

42:                                               ; preds = %39, %33
  %43 = phi i32 [ %41, %39 ], [ %36, %33 ]
  %44 = and i32 %43, 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 1, i32 0, i64 %23, i32 2, i32 1
  %48 = load i32, i32* %47, align 4, !noalias !51
  %49 = and i32 %48, 192
  %50 = icmp eq i32 %49, 128
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %35) #17, !noalias !51
  %53 = zext i8 %52 to i32
  store i32 %53, i32* %47, align 4, !noalias !51
  br label %54

54:                                               ; preds = %51, %46
  %55 = phi i32 [ %53, %51 ], [ %48, %46 ]
  %56 = and i32 %55, 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %54, %42
  %59 = tail call zeroext i1 @_ZeqRK8SkMatrixS1_(%class.SkMatrix* dereferenceable(40) %7, %class.SkMatrix* dereferenceable(40) %35) #17, !noalias !51
  br i1 %59, label %80, label %88

60:                                               ; preds = %54
  %61 = load float, float* %18, align 4, !noalias !51
  %62 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %35, i64 0, i32 0, i64 0
  %63 = load float, float* %62, align 4, !noalias !51
  %64 = fcmp une float %61, %63
  br i1 %64, label %88, label %65

65:                                               ; preds = %60
  %66 = load float, float* %19, align 4, !noalias !51
  %67 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 1, i32 0, i64 %23, i32 2, i32 0, i64 1
  %68 = load float, float* %67, align 4, !noalias !51
  %69 = fcmp une float %66, %68
  br i1 %69, label %88, label %70

70:                                               ; preds = %65
  %71 = load float, float* %20, align 4, !noalias !51
  %72 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 1, i32 0, i64 %23, i32 2, i32 0, i64 4
  %73 = load float, float* %72, align 4, !noalias !51
  %74 = fcmp une float %71, %73
  br i1 %74, label %88, label %75

75:                                               ; preds = %70
  %76 = load float, float* %21, align 4, !noalias !51
  %77 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 1, i32 0, i64 %23, i32 2, i32 0, i64 3
  %78 = load float, float* %77, align 4, !noalias !51
  %79 = fcmp une float %76, %78
  br i1 %79, label %88, label %80

80:                                               ; preds = %75, %58
  %81 = and i64 %23, 4294967295
  %82 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 1, i32 0, i64 %81, i32 1, i32 0
  %83 = load %class.SkVertices*, %class.SkVertices** %82, align 8, !noalias !51
  %84 = icmp eq %class.SkVertices* %83, null
  br i1 %84, label %91, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 1 monotonic, !noalias !51
  br label %91

88:                                               ; preds = %75, %70, %65, %60, %58, %28, %22
  %89 = add nuw nsw i64 %23, 1
  %90 = icmp eq i64 %89, 4
  br i1 %90, label %93, label %22

91:                                               ; preds = %85, %80
  %92 = ptrtoint %class.SkVertices* %83 to i64
  br label %93

93:                                               ; preds = %88, %91
  %94 = phi i64 [ %92, %91 ], [ 0, %88 ]
  %95 = getelementptr inbounds i8, i8* %1, i64 8
  %96 = bitcast i8* %95 to %class.SkVertices**
  %97 = load %class.SkVertices*, %class.SkVertices** %96, align 8
  %98 = bitcast i8* %95 to i64*
  store i64 %94, i64* %98, align 8
  %99 = icmp eq %class.SkVertices* %97, null
  %100 = inttoptr i64 %94 to %class.SkVertices*
  br i1 %99, label %109, label %101

101:                                              ; preds = %93
  %102 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw add i32* %102, i32 -1 acq_rel
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %107

105:                                              ; preds = %101
  %106 = bitcast %class.SkVertices* %97 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %106) #17
  br label %107

107:                                              ; preds = %101, %105
  %108 = load %class.SkVertices*, %class.SkVertices** %96, align 8
  br label %109

109:                                              ; preds = %107, %93
  %110 = phi %class.SkVertices* [ %108, %107 ], [ %100, %93 ]
  %111 = icmp eq %class.SkVertices* %110, null
  br i1 %111, label %112, label %135

112:                                              ; preds = %109
  %113 = load %"class.(anonymous namespace)::CachedTessellations"*, %"class.(anonymous namespace)::CachedTessellations"** %10, align 8, !noalias !56
  %114 = icmp eq %"class.(anonymous namespace)::CachedTessellations"* %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %113, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = atomicrmw add i32* %116, i32 1 monotonic, !noalias !56
  br label %118

118:                                              ; preds = %112, %115
  %119 = ptrtoint %"class.(anonymous namespace)::CachedTessellations"* %113 to i64
  %120 = getelementptr inbounds i8, i8* %1, i64 24
  %121 = bitcast i8* %120 to %"class.(anonymous namespace)::CachedTessellations"**
  %122 = load %"class.(anonymous namespace)::CachedTessellations"*, %"class.(anonymous namespace)::CachedTessellations"** %121, align 8
  %123 = bitcast i8* %120 to i64*
  store i64 %119, i64* %123, align 8
  %124 = icmp eq %"class.(anonymous namespace)::CachedTessellations"* %122, null
  br i1 %124, label %135, label %125

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %122, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = atomicrmw add i32* %126, i32 -1 acq_rel
  %128 = icmp eq i32 %127, 1
  br i1 %128, label %129, label %135

129:                                              ; preds = %125
  %130 = bitcast %"class.(anonymous namespace)::CachedTessellations"* %122 to %class.SkRefCntBase*
  %131 = bitcast %"class.(anonymous namespace)::CachedTessellations"* %122 to void (%class.SkRefCntBase*)***
  %132 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %131, align 8
  %133 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %132, i64 2
  %134 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %133, align 8
  tail call void %134(%class.SkRefCntBase* nonnull %130) #17
  br label %135

135:                                              ; preds = %109, %118, %125, %129
  %136 = phi i1 [ true, %109 ], [ false, %129 ], [ false, %125 ], [ false, %118 ]
  ret i1 %136
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable writeonly
define internal fastcc void @_ZN12_GLOBAL__N_119CachedTessellationsC2Ev(%"class.(anonymous namespace)::CachedTessellations"*) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %2, align 4
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_119CachedTessellationsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 0
  store float 0x7FF8000000000000, float* %4, align 4
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 0, i32 1, i32 0
  store %class.SkVertices* null, %class.SkVertices** %5, align 8
  %6 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 0, i32 2, i32 0, i64 0
  %7 = bitcast float* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %7, align 4
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 0, i32 2, i32 0, i64 4
  %9 = bitcast float* %8 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %9, align 4
  %10 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 0, i32 2, i32 0, i64 8
  store float 1.000000e+00, float* %10, align 4
  %11 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 0, i32 2, i32 1
  store i32 16, i32* %11, align 4
  %12 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 1, i32 0, i32 0
  store float 0x7FF8000000000000, float* %12, align 4
  %13 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 1, i32 1, i32 0
  store %class.SkVertices* null, %class.SkVertices** %13, align 8
  %14 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 1, i32 2, i32 0, i64 0
  %15 = bitcast float* %14 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %15, align 4
  %16 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 1, i32 2, i32 0, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %17, align 4
  %18 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 1, i32 2, i32 0, i64 8
  store float 1.000000e+00, float* %18, align 4
  %19 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 1, i32 2, i32 1
  store i32 16, i32* %19, align 4
  %20 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 2, i32 0, i32 0
  store float 0x7FF8000000000000, float* %20, align 4
  %21 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 2, i32 1, i32 0
  store %class.SkVertices* null, %class.SkVertices** %21, align 8
  %22 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 2, i32 2, i32 0, i64 0
  %23 = bitcast float* %22 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %23, align 4
  %24 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 2, i32 2, i32 0, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %25, align 4
  %26 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 2, i32 2, i32 0, i64 8
  store float 1.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 2, i32 2, i32 1
  store i32 16, i32* %27, align 4
  %28 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 3, i32 0, i32 0
  store float 0x7FF8000000000000, float* %28, align 4
  %29 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 3, i32 1, i32 0
  store %class.SkVertices* null, %class.SkVertices** %29, align 8
  %30 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 3, i32 2, i32 0, i64 0
  %31 = bitcast float* %30 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %31, align 4
  %32 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 3, i32 2, i32 0, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %33, align 4
  %34 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 3, i32 2, i32 0, i64 8
  store float 1.000000e+00, float* %34, align 4
  %35 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 3, i32 2, i32 1
  store i32 16, i32* %35, align 4
  %36 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 1
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 2
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 3, i32 0
  store i32 1013904223, i32* %38, align 4
  %39 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 3, i32 1
  store i32 1196435762, i32* %39, align 4
  %40 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 0, i32 0, i32 2
  store float 0x7FF8000000000000, float* %40, align 4
  %41 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 0, i32 1, i32 0
  store %class.SkVertices* null, %class.SkVertices** %41, align 8
  %42 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 0, i32 2, i32 0, i64 0
  %43 = bitcast float* %42 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %43, align 4
  %44 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 0, i32 2, i32 0, i64 4
  %45 = bitcast float* %44 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %45, align 4
  %46 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 0, i32 2, i32 0, i64 8
  store float 1.000000e+00, float* %46, align 4
  %47 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 0, i32 2, i32 1
  store i32 16, i32* %47, align 4
  %48 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 1, i32 0, i32 2
  store float 0x7FF8000000000000, float* %48, align 4
  %49 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 1, i32 1, i32 0
  store %class.SkVertices* null, %class.SkVertices** %49, align 8
  %50 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 1, i32 2, i32 0, i64 0
  %51 = bitcast float* %50 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %51, align 4
  %52 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 1, i32 2, i32 0, i64 4
  %53 = bitcast float* %52 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %53, align 4
  %54 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 1, i32 2, i32 0, i64 8
  store float 1.000000e+00, float* %54, align 4
  %55 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 1, i32 2, i32 1
  store i32 16, i32* %55, align 4
  %56 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 2, i32 0, i32 2
  store float 0x7FF8000000000000, float* %56, align 4
  %57 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 2, i32 1, i32 0
  store %class.SkVertices* null, %class.SkVertices** %57, align 8
  %58 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 2, i32 2, i32 0, i64 0
  %59 = bitcast float* %58 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %59, align 4
  %60 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 2, i32 2, i32 0, i64 4
  %61 = bitcast float* %60 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %61, align 4
  %62 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 2, i32 2, i32 0, i64 8
  store float 1.000000e+00, float* %62, align 4
  %63 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 2, i32 2, i32 1
  store i32 16, i32* %63, align 4
  %64 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 3, i32 0, i32 2
  store float 0x7FF8000000000000, float* %64, align 4
  %65 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 3, i32 1, i32 0
  store %class.SkVertices* null, %class.SkVertices** %65, align 8
  %66 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 3, i32 2, i32 0, i64 0
  %67 = bitcast float* %66 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %67, align 4
  %68 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 3, i32 2, i32 0, i64 4
  %69 = bitcast float* %68 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %69, align 4
  %70 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 3, i32 2, i32 0, i64 8
  store float 1.000000e+00, float* %70, align 4
  %71 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 3, i32 2, i32 1
  store i32 16, i32* %71, align 4
  %72 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 1
  store i32 0, i32* %72, align 8
  %73 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 2
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 3, i32 0
  store i32 1013904223, i32* %74, align 4
  %75 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 3, i32 1
  store i32 1196435762, i32* %75, align 4
  ret void
}

declare void @_ZN15SkResourceCache3AddEPNS_3RecEPv(%"struct.SkResourceCache::Rec"*, i8*) local_unnamed_addr #3

declare i32 @_ZNK13GrStyledShape15unstyledKeySizeEv(%class.GrStyledShape*) local_unnamed_addr #3

declare void @_ZNK13GrStyledShape16writeUnstyledKeyEPj(%class.GrStyledShape*, i32*) local_unnamed_addr #3

declare zeroext i1 @_ZeqRK8SkMatrixS1_(%class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119CachedTessellationsD2Ev(%"class.(anonymous namespace)::CachedTessellations"* nocapture) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_119CachedTessellationsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 3, i32 1, i32 0
  %4 = load %class.SkVertices*, %class.SkVertices** %3, align 8
  %5 = icmp eq %class.SkVertices* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkVertices* %4 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %11) #17
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 2, i32 1, i32 0
  %14 = load %class.SkVertices*, %class.SkVertices** %13, align 8
  %15 = icmp eq %class.SkVertices* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = bitcast %class.SkVertices* %14 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %21) #17
  br label %22

22:                                               ; preds = %20, %16, %12
  %23 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 1, i32 1, i32 0
  %24 = load %class.SkVertices*, %class.SkVertices** %23, align 8
  %25 = icmp eq %class.SkVertices* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 -1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = bitcast %class.SkVertices* %24 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %31) #17
  br label %32

32:                                               ; preds = %30, %26, %22
  %33 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 2, i32 0, i64 0, i32 1, i32 0
  %34 = load %class.SkVertices*, %class.SkVertices** %33, align 8
  %35 = icmp eq %class.SkVertices* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  %41 = bitcast %class.SkVertices* %34 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %41) #17
  br label %42

42:                                               ; preds = %32, %36, %40
  %43 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 3, i32 1, i32 0
  %44 = load %class.SkVertices*, %class.SkVertices** %43, align 8
  %45 = icmp eq %class.SkVertices* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = bitcast %class.SkVertices* %44 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %51) #17
  br label %52

52:                                               ; preds = %50, %46, %42
  %53 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 2, i32 1, i32 0
  %54 = load %class.SkVertices*, %class.SkVertices** %53, align 8
  %55 = icmp eq %class.SkVertices* %54, null
  br i1 %55, label %62, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  %61 = bitcast %class.SkVertices* %54 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %61) #17
  br label %62

62:                                               ; preds = %60, %56, %52
  %63 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 1, i32 1, i32 0
  %64 = load %class.SkVertices*, %class.SkVertices** %63, align 8
  %65 = icmp eq %class.SkVertices* %64, null
  br i1 %65, label %72, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 -1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = bitcast %class.SkVertices* %64 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %71) #17
  br label %72

72:                                               ; preds = %70, %66, %62
  %73 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %0, i64 0, i32 1, i32 0, i64 0, i32 1, i32 0
  %74 = load %class.SkVertices*, %class.SkVertices** %73, align 8
  %75 = icmp eq %class.SkVertices* %74, null
  br i1 %75, label %82, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %82

80:                                               ; preds = %76
  %81 = bitcast %class.SkVertices* %74 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %81) #17
  br label %82

82:                                               ; preds = %72, %76, %80
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119CachedTessellationsD0Ev(%"class.(anonymous namespace)::CachedTessellations"*) unnamed_addr #8 align 2 {
  tail call void @_ZN12_GLOBAL__N_119CachedTessellationsD2Ev(%"class.(anonymous namespace)::CachedTessellations"* %0) #17
  %2 = bitcast %"class.(anonymous namespace)::CachedTessellations"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

declare i64 @_ZNK10SkVertices15approximateSizeEv(%class.SkVertices*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_122CachedTessellationsRecD2Ev(%"class.(anonymous namespace)::CachedTessellationsRec"* nocapture) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellationsRec", %"class.(anonymous namespace)::CachedTessellationsRec"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_122CachedTessellationsRecE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellationsRec", %"class.(anonymous namespace)::CachedTessellationsRec"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.(anonymous namespace)::CachedTessellations"*, %"class.(anonymous namespace)::CachedTessellations"** %3, align 8
  %5 = icmp eq %"class.(anonymous namespace)::CachedTessellations"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.(anonymous namespace)::CachedTessellations"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.(anonymous namespace)::CachedTessellations"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #17
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellationsRec", %"class.(anonymous namespace)::CachedTessellationsRec"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  store i8* null, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZdaPv(i8* nonnull %18) #16
  br label %21

21:                                               ; preds = %16, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_122CachedTessellationsRecD0Ev(%"class.(anonymous namespace)::CachedTessellationsRec"*) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellationsRec", %"class.(anonymous namespace)::CachedTessellationsRec"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_122CachedTessellationsRecE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellationsRec", %"class.(anonymous namespace)::CachedTessellationsRec"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.(anonymous namespace)::CachedTessellations"*, %"class.(anonymous namespace)::CachedTessellations"** %3, align 8
  %5 = icmp eq %"class.(anonymous namespace)::CachedTessellations"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.(anonymous namespace)::CachedTessellations"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.(anonymous namespace)::CachedTessellations"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #17
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellationsRec", %"class.(anonymous namespace)::CachedTessellationsRec"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  store i8* null, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZdaPv(i8* nonnull %18) #16
  br label %21

21:                                               ; preds = %16, %20
  %22 = bitcast %"class.(anonymous namespace)::CachedTessellationsRec"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #16
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal dereferenceable(24) %"struct.SkResourceCache::Key"* @_ZNK12_GLOBAL__N_122CachedTessellationsRec6getKeyEv(%"class.(anonymous namespace)::CachedTessellationsRec"* nocapture readonly) unnamed_addr #13 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellationsRec", %"class.(anonymous namespace)::CachedTessellationsRec"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = bitcast i8** %2 to %"struct.SkResourceCache::Key"**
  %4 = load %"struct.SkResourceCache::Key"*, %"struct.SkResourceCache::Key"** %3, align 8
  ret %"struct.SkResourceCache::Key"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_122CachedTessellationsRec9bytesUsedEv(%"class.(anonymous namespace)::CachedTessellationsRec"* nocapture readonly) unnamed_addr #13 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellationsRec", %"class.(anonymous namespace)::CachedTessellationsRec"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.(anonymous namespace)::CachedTessellations"*, %"class.(anonymous namespace)::CachedTessellations"** %2, align 8
  %4 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %3, i64 0, i32 1, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %3, i64 0, i32 2, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %5
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN15SkResourceCache3Rec11canBePurgedEv(%"struct.SkResourceCache::Rec"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkResourceCache3Rec14postAddInstallEPv(%"struct.SkResourceCache::Rec"*, i8*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_122CachedTessellationsRec11getCategoryEv(%"class.(anonymous namespace)::CachedTessellationsRec"* nocapture readnone) unnamed_addr #14 align 2 {
  ret i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkDiscardableMemory* @_ZNK15SkResourceCache3Rec30diagnostic_only_getDiscardableEv(%"struct.SkResourceCache::Rec"*) unnamed_addr #0 comdat align 2 {
  ret %class.SkDiscardableMemory* null
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #9

declare void @_ZN9SkPathRef22addGenIDChangeListenerE5sk_spI18SkIDChangeListenerE(%class.SkPathRef*, %class.sk_sp.181*) local_unnamed_addr #3

declare void @_ZN18SkIDChangeListenerC2Ev(%class.SkIDChangeListener*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_117ShadowInvalidatorD2Ev(%"class.(anonymous namespace)::ShadowInvalidator"*) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::ShadowInvalidator", %"class.(anonymous namespace)::ShadowInvalidator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_117ShadowInvalidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::ShadowInvalidator", %"class.(anonymous namespace)::ShadowInvalidator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #16
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %"class.(anonymous namespace)::ShadowInvalidator"* %0 to %class.SkIDChangeListener*
  tail call void @_ZN18SkIDChangeListenerD2Ev(%class.SkIDChangeListener* %8) #17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_117ShadowInvalidatorD0Ev(%"class.(anonymous namespace)::ShadowInvalidator"*) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::ShadowInvalidator", %"class.(anonymous namespace)::ShadowInvalidator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_117ShadowInvalidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::ShadowInvalidator", %"class.(anonymous namespace)::ShadowInvalidator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #16
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %"class.(anonymous namespace)::ShadowInvalidator"* %0 to %class.SkIDChangeListener*
  tail call void @_ZN18SkIDChangeListenerD2Ev(%class.SkIDChangeListener* %8) #17
  %9 = bitcast %"class.(anonymous namespace)::ShadowInvalidator"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_117ShadowInvalidator7changedEv(%"class.(anonymous namespace)::ShadowInvalidator"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::ShadowInvalidator", %"class.(anonymous namespace)::ShadowInvalidator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = bitcast i8** %2 to %"struct.SkResourceCache::Key"**
  %4 = load %"struct.SkResourceCache::Key"*, %"struct.SkResourceCache::Key"** %3, align 8
  %5 = tail call zeroext i1 @_ZN15SkResourceCache4FindERKNS_3KeyEPFbRKNS_3RecEPvES6_(%"struct.SkResourceCache::Key"* dereferenceable(24) %4, i1 (%"struct.SkResourceCache::Rec"*, i8*)* nonnull @_ZN12_GLOBAL__N_117ShadowInvalidator11FindVisitorERKN15SkResourceCache3RecEPv, i8* null) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN18SkIDChangeListenerD2Ev(%class.SkIDChangeListener*) unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_117ShadowInvalidator11FindVisitorERKN15SkResourceCache3RecEPv(%"struct.SkResourceCache::Rec"* nocapture readnone dereferenceable(24), i8* nocapture readnone) #14 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPK10SkVertices11SkBlendModeRK7SkPaintffbEE11__call_implINS0_20__default_alloc_funcIZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRecE3$_0S9_EEEEvPKNS0_16__policy_storageES4_S5_S8_ffb"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %class.SkVertices*, i32, %class.SkPaint* dereferenceable(72), float, float, i1 zeroext) #0 align 2 {
  %8 = alloca %class.SkMatrix, align 16
  %9 = alloca %class.SkMatrix, align 16
  %10 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %class.SkBaseDevice**
  %11 = load %class.SkBaseDevice*, %class.SkBaseDevice** %10, align 8
  %12 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %1, i64 0, i32 7
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %106, label %15

15:                                               ; preds = %7
  %16 = bitcast %class.SkMatrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #17
  %17 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #17
  br i1 %6, label %18, label %21

18:                                               ; preds = %15
  %19 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #17
  %20 = bitcast %class.SkMatrix* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %16, i8* align 4 %20, i64 40, i1 false) #17
  br label %35

21:                                               ; preds = %15
  %22 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 2
  %23 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 1
  %24 = bitcast %class.SkMatrix* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %24, align 16, !alias.scope !59
  %25 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 4
  %26 = bitcast float* %25 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %26, align 16, !alias.scope !59
  %27 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %27, align 16, !alias.scope !59
  store i32 16, i32* %23, align 4, !alias.scope !59
  %28 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %9, float %4, float %5) #17
  %29 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 1
  %30 = bitcast %class.SkMatrix* %8 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %30, align 16, !alias.scope !62
  %31 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 4
  %32 = bitcast float* %31 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %32, align 16, !alias.scope !62
  %33 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %33, align 16, !alias.scope !62
  store i32 16, i32* %29, align 4, !alias.scope !62
  %34 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %8, %class.SkMatrix* dereferenceable(40) %22, %class.SkMatrix* nonnull dereferenceable(40) %9) #17
  br label %35

35:                                               ; preds = %21, %18
  %36 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 2
  %37 = bitcast %class.SkMatrix* %36 to <4 x i32>*
  %38 = load <4 x i32>, <4 x i32>* %37, align 4
  %39 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 2, i32 0, i64 4
  %40 = bitcast float* %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 2, i32 0, i64 5
  %43 = bitcast float* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 2, i32 0, i64 6
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 2, i32 0, i64 7
  %49 = bitcast float* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 2, i32 0, i64 8
  %52 = bitcast float* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = bitcast %class.SkMatrix* %8 to <4 x i32>*
  %55 = load <4 x i32>, <4 x i32>* %54, align 16
  %56 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 4
  %57 = bitcast float* %56 to <4 x i32>*
  %58 = load <4 x i32>, <4 x i32>* %57, align 16
  %59 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 8
  %60 = bitcast float* %59 to i32*
  %61 = load i32, i32* %60, align 16
  %62 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 1
  %63 = bitcast %class.SkM44* %62 to i32*
  %64 = extractelement <4 x i32> %55, i32 0
  store i32 %64, i32* %63, align 8
  %65 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 1, i32 0, i64 1
  %66 = bitcast float* %65 to i32*
  %67 = extractelement <4 x i32> %55, i32 3
  store i32 %67, i32* %66, align 4
  %68 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %68, align 8
  %69 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 1, i32 0, i64 3
  %70 = bitcast float* %69 to i32*
  %71 = extractelement <4 x i32> %58, i32 2
  store i32 %71, i32* %70, align 4
  %72 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 1, i32 0, i64 4
  %73 = bitcast float* %72 to i32*
  %74 = extractelement <4 x i32> %55, i32 1
  store i32 %74, i32* %73, align 8
  %75 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 1, i32 0, i64 5
  %76 = bitcast float* %75 to i32*
  %77 = extractelement <4 x i32> %58, i32 0
  store i32 %77, i32* %76, align 4
  %78 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %78, align 8
  %79 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 1, i32 0, i64 7
  %80 = bitcast float* %79 to i32*
  %81 = extractelement <4 x i32> %58, i32 3
  store i32 %81, i32* %80, align 4
  %82 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 1, i32 0, i64 8
  %83 = bitcast float* %82 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %83, align 8
  %84 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 1, i32 0, i64 12
  %85 = bitcast float* %84 to i32*
  %86 = extractelement <4 x i32> %55, i32 2
  store i32 %86, i32* %85, align 8
  %87 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 1, i32 0, i64 13
  %88 = bitcast float* %87 to i32*
  %89 = extractelement <4 x i32> %58, i32 1
  store i32 %89, i32* %88, align 4
  %90 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %90, align 8
  %91 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 1, i32 0, i64 15
  %92 = bitcast float* %91 to i32*
  store i32 %61, i32* %92, align 4
  %93 = bitcast %class.SkMatrix* %36 to <4 x i32>*
  store <4 x i32> %55, <4 x i32>* %93, align 8
  %94 = bitcast float* %39 to <4 x i32>*
  store <4 x i32> %58, <4 x i32>* %94, align 8
  store i32 %61, i32* %52, align 8
  %95 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 1, i32 2, i32 1
  store i32 128, i32* %95, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #17
  %96 = bitcast %class.SkBaseDevice* %11 to void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)***
  %97 = load void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)*** %96, align 8
  %98 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)** %97, i64 35
  %99 = load void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)** %98, align 8
  call void %99(%class.SkBaseDevice* %11, %class.SkVertices* %1, i32 %2, %class.SkPaint* dereferenceable(72) %3) #17
  %100 = extractelement <4 x i32> %38, i32 0
  store i32 %100, i32* %63, align 8
  %101 = extractelement <4 x i32> %38, i32 3
  store i32 %101, i32* %66, align 4
  store float 0.000000e+00, float* %68, align 8
  store i32 %47, i32* %70, align 4
  %102 = extractelement <4 x i32> %38, i32 1
  store i32 %102, i32* %73, align 8
  store i32 %41, i32* %76, align 4
  store float 0.000000e+00, float* %78, align 8
  store i32 %50, i32* %80, align 4
  %103 = bitcast float* %82 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %103, align 8
  %104 = extractelement <4 x i32> %38, i32 2
  store i32 %104, i32* %85, align 8
  store i32 %44, i32* %88, align 4
  store float 0.000000e+00, float* %90, align 8
  store i32 %53, i32* %92, align 4
  %105 = bitcast %class.SkMatrix* %36 to <4 x i32>*
  store <4 x i32> %38, <4 x i32>* %105, align 8
  store i32 %41, i32* %40, align 8
  store i32 %44, i32* %43, align 4
  store i32 %47, i32* %46, align 8
  store i32 %50, i32* %49, align 4
  store i32 %53, i32* %52, align 8
  store i32 128, i32* %95, align 4
  br label %106

106:                                              ; preds = %7, %35
  ret void
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_111FindVisitorINS_19SpotVerticesFactoryEEEbRKN15SkResourceCache3RecEPv(%"struct.SkResourceCache::Rec"* nocapture readonly dereferenceable(24), i8* nocapture) #7 {
  %3 = getelementptr inbounds i8, i8* %1, i64 32
  %4 = bitcast i8* %3 to %"struct.(anonymous namespace)::SpotVerticesFactory"**
  %5 = load %"struct.(anonymous namespace)::SpotVerticesFactory"*, %"struct.(anonymous namespace)::SpotVerticesFactory"** %4, align 8
  %6 = bitcast i8* %1 to %class.SkMatrix**
  %7 = load %class.SkMatrix*, %class.SkMatrix** %6, align 8
  %8 = getelementptr inbounds i8, i8* %1, i64 16
  %9 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %0, i64 1, i32 1
  %10 = bitcast %"struct.SkResourceCache::Rec"** %9 to %"class.(anonymous namespace)::CachedTessellations"**
  %11 = load %"class.(anonymous namespace)::CachedTessellations"*, %"class.(anonymous namespace)::CachedTessellations"** %10, align 8, !noalias !67
  %12 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %5, i64 0, i32 2
  %13 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %5, i64 0, i32 3, i32 2
  %14 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %5, i64 0, i32 4
  %15 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %5, i64 0, i32 5
  %16 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %5, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %5, i64 0, i32 0, i32 1
  %18 = bitcast i8* %8 to <2 x float>*
  %19 = bitcast i8* %8 to float*
  %20 = getelementptr inbounds i8, i8* %1, i64 20
  %21 = bitcast i8* %20 to float*
  %22 = bitcast %"struct.(anonymous namespace)::SpotVerticesFactory"* %5 to i64*
  %23 = bitcast i8* %8 to i64*
  %24 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %25 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 0
  %26 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 1
  %27 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  %28 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 3
  %29 = bitcast %"struct.(anonymous namespace)::SpotVerticesFactory"* %5 to <2 x float>*
  br label %30

30:                                               ; preds = %126, %2
  %31 = phi i64 [ 0, %2 ], [ %127, %126 ]
  %32 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 2, i32 0, i64 %31, i32 0
  %33 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 2, i32 0, i64 %31, i32 0, i32 2
  %34 = load float, float* %33, align 4, !noalias !70
  %35 = load float, float* %12, align 4, !noalias !70
  %36 = fcmp une float %34, %35
  br i1 %36, label %126, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 2, i32 0, i64 %31, i32 0, i32 3, i32 2
  %39 = load float, float* %38, align 4, !noalias !70
  %40 = load float, float* %13, align 4, !noalias !70
  %41 = fcmp une float %39, %40
  br i1 %41, label %126, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 2, i32 0, i64 %31, i32 0, i32 4
  %44 = load float, float* %43, align 4, !noalias !70
  %45 = load float, float* %14, align 4, !noalias !70
  %46 = fcmp une float %44, %45
  br i1 %46, label %126, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 2, i32 0, i64 %31, i32 0, i32 5
  %49 = load i32, i32* %48, align 4, !noalias !70
  %50 = load i32, i32* %15, align 4, !noalias !70
  %51 = icmp eq i32 %49, %50
  br i1 %51, label %52, label %126

52:                                               ; preds = %47
  switch i32 %49, label %71 [
    i32 0, label %53
    i32 2, label %53
    i32 1, label %55
    i32 3, label %66
  ]

53:                                               ; preds = %52, %52
  %54 = load i64, i64* %22, align 4, !noalias !70
  store i64 %54, i64* %23, align 4, !noalias !70
  br label %72

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %32, i64 0, i32 0, i32 0
  %57 = load float, float* %56, align 4, !noalias !70
  %58 = load float, float* %16, align 4, !noalias !70
  %59 = fcmp oeq float %57, %58
  br i1 %59, label %60, label %126

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 2, i32 0, i64 %31, i32 0, i32 0, i32 1
  %62 = load float, float* %61, align 4, !noalias !70
  %63 = load float, float* %17, align 4, !noalias !70
  %64 = fcmp oeq float %62, %63
  br i1 %64, label %65, label %126

65:                                               ; preds = %60
  store float 0.000000e+00, float* %19, align 4, !noalias !70
  store float 0.000000e+00, float* %21, align 4, !noalias !70
  br label %72

66:                                               ; preds = %52
  %67 = load <2 x float>, <2 x float>* %29, align 4, !noalias !70
  %68 = bitcast %"struct.(anonymous namespace)::SpotVerticesFactory"* %32 to <2 x float>*
  %69 = load <2 x float>, <2 x float>* %68, align 4, !noalias !70
  %70 = fsub <2 x float> %67, %69
  store <2 x float> %70, <2 x float>* %18, align 4, !noalias !70
  br label %72

71:                                               ; preds = %52
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6, i64 0, i64 0), i32 187, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0)) #18, !noalias !70
  unreachable

72:                                               ; preds = %66, %65, %53
  %73 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 2, i32 0, i64 %31, i32 2
  %74 = load i32, i32* %24, align 4, !noalias !70
  %75 = and i32 %74, 192
  %76 = icmp eq i32 %75, 128
  br i1 %76, label %77, label %80

77:                                               ; preds = %72
  %78 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %7) #17, !noalias !70
  %79 = zext i8 %78 to i32
  store i32 %79, i32* %24, align 4, !noalias !70
  br label %80

80:                                               ; preds = %77, %72
  %81 = phi i32 [ %79, %77 ], [ %74, %72 ]
  %82 = and i32 %81, 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %96

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 2, i32 0, i64 %31, i32 2, i32 1
  %86 = load i32, i32* %85, align 4, !noalias !70
  %87 = and i32 %86, 192
  %88 = icmp eq i32 %87, 128
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %73) #17, !noalias !70
  %91 = zext i8 %90 to i32
  store i32 %91, i32* %85, align 4, !noalias !70
  br label %92

92:                                               ; preds = %89, %84
  %93 = phi i32 [ %91, %89 ], [ %86, %84 ]
  %94 = and i32 %93, 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %92, %80
  %97 = tail call zeroext i1 @_ZeqRK8SkMatrixS1_(%class.SkMatrix* dereferenceable(40) %7, %class.SkMatrix* dereferenceable(40) %73) #17, !noalias !70
  br i1 %97, label %118, label %126

98:                                               ; preds = %92
  %99 = load float, float* %25, align 4, !noalias !70
  %100 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %73, i64 0, i32 0, i64 0
  %101 = load float, float* %100, align 4, !noalias !70
  %102 = fcmp une float %99, %101
  br i1 %102, label %126, label %103

103:                                              ; preds = %98
  %104 = load float, float* %26, align 4, !noalias !70
  %105 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 2, i32 0, i64 %31, i32 2, i32 0, i64 1
  %106 = load float, float* %105, align 4, !noalias !70
  %107 = fcmp une float %104, %106
  br i1 %107, label %126, label %108

108:                                              ; preds = %103
  %109 = load float, float* %27, align 4, !noalias !70
  %110 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 2, i32 0, i64 %31, i32 2, i32 0, i64 4
  %111 = load float, float* %110, align 4, !noalias !70
  %112 = fcmp une float %109, %111
  br i1 %112, label %126, label %113

113:                                              ; preds = %108
  %114 = load float, float* %28, align 4, !noalias !70
  %115 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 2, i32 0, i64 %31, i32 2, i32 0, i64 3
  %116 = load float, float* %115, align 4, !noalias !70
  %117 = fcmp une float %114, %116
  br i1 %117, label %126, label %118

118:                                              ; preds = %113, %96
  %119 = and i64 %31, 4294967295
  %120 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %11, i64 0, i32 2, i32 0, i64 %119, i32 1, i32 0
  %121 = load %class.SkVertices*, %class.SkVertices** %120, align 8, !noalias !70
  %122 = icmp eq %class.SkVertices* %121, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw add i32* %124, i32 1 monotonic, !noalias !70
  br label %129

126:                                              ; preds = %113, %108, %103, %98, %96, %60, %55, %47, %42, %37, %30
  %127 = add nuw nsw i64 %31, 1
  %128 = icmp eq i64 %127, 4
  br i1 %128, label %131, label %30

129:                                              ; preds = %123, %118
  %130 = ptrtoint %class.SkVertices* %121 to i64
  br label %131

131:                                              ; preds = %126, %129
  %132 = phi i64 [ %130, %129 ], [ 0, %126 ]
  %133 = getelementptr inbounds i8, i8* %1, i64 8
  %134 = bitcast i8* %133 to %class.SkVertices**
  %135 = load %class.SkVertices*, %class.SkVertices** %134, align 8
  %136 = bitcast i8* %133 to i64*
  store i64 %132, i64* %136, align 8
  %137 = icmp eq %class.SkVertices* %135, null
  %138 = inttoptr i64 %132 to %class.SkVertices*
  br i1 %137, label %147, label %139

139:                                              ; preds = %131
  %140 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = atomicrmw add i32* %140, i32 -1 acq_rel
  %142 = icmp eq i32 %141, 1
  br i1 %142, label %143, label %145

143:                                              ; preds = %139
  %144 = bitcast %class.SkVertices* %135 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %144) #17
  br label %145

145:                                              ; preds = %139, %143
  %146 = load %class.SkVertices*, %class.SkVertices** %134, align 8
  br label %147

147:                                              ; preds = %145, %131
  %148 = phi %class.SkVertices* [ %146, %145 ], [ %138, %131 ]
  %149 = icmp eq %class.SkVertices* %148, null
  br i1 %149, label %150, label %173

150:                                              ; preds = %147
  %151 = load %"class.(anonymous namespace)::CachedTessellations"*, %"class.(anonymous namespace)::CachedTessellations"** %10, align 8, !noalias !75
  %152 = icmp eq %"class.(anonymous namespace)::CachedTessellations"* %151, null
  br i1 %152, label %156, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %151, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = atomicrmw add i32* %154, i32 1 monotonic, !noalias !75
  br label %156

156:                                              ; preds = %150, %153
  %157 = ptrtoint %"class.(anonymous namespace)::CachedTessellations"* %151 to i64
  %158 = getelementptr inbounds i8, i8* %1, i64 24
  %159 = bitcast i8* %158 to %"class.(anonymous namespace)::CachedTessellations"**
  %160 = load %"class.(anonymous namespace)::CachedTessellations"*, %"class.(anonymous namespace)::CachedTessellations"** %159, align 8
  %161 = bitcast i8* %158 to i64*
  store i64 %157, i64* %161, align 8
  %162 = icmp eq %"class.(anonymous namespace)::CachedTessellations"* %160, null
  br i1 %162, label %173, label %163

163:                                              ; preds = %156
  %164 = getelementptr inbounds %"class.(anonymous namespace)::CachedTessellations", %"class.(anonymous namespace)::CachedTessellations"* %160, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = atomicrmw add i32* %164, i32 -1 acq_rel
  %166 = icmp eq i32 %165, 1
  br i1 %166, label %167, label %173

167:                                              ; preds = %163
  %168 = bitcast %"class.(anonymous namespace)::CachedTessellations"* %160 to %class.SkRefCntBase*
  %169 = bitcast %"class.(anonymous namespace)::CachedTessellations"* %160 to void (%class.SkRefCntBase*)***
  %170 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %169, align 8
  %171 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %170, i64 2
  %172 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %171, align 8
  tail call void %172(%class.SkRefCntBase* nonnull %168) #17
  br label %173

173:                                              ; preds = %147, %156, %163, %167
  %174 = phi i1 [ true, %147 ], [ false, %167 ], [ false, %163 ], [ false, %156 ]
  ret i1 %174
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNK12_GLOBAL__N_119SpotVerticesFactory12makeVerticesERK6SkPathRK8SkMatrixP7SkPoint(%class.sk_sp.127* noalias sret, %"struct.(anonymous namespace)::SpotVerticesFactory"*, %class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkPoint* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %struct.SkPoint3, align 8
  %7 = alloca %class.SkMatrix, align 4
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %struct.SkPoint*
  %10 = alloca %struct.SkPoint3, align 8
  %11 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %1, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  %14 = icmp eq i32 %12, 3
  %15 = bitcast %struct.SkPoint3* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %15) #17
  %16 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %6, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %1, i64 0, i32 2
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = bitcast %struct.SkPoint3* %6 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %20, align 8
  %21 = bitcast float* %16 to i32*
  store i32 %19, i32* %21, align 8
  br i1 %14, label %22, label %28

22:                                               ; preds = %5
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 0
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 1
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %1, i64 0, i32 3
  %26 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %1, i64 0, i32 4
  %27 = load float, float* %26, align 4
  call void @_ZN19SkShadowTessellator8MakeSpotERK6SkPathRK8SkMatrixRK8SkPoint3S8_fbb(%class.sk_sp.127* sret %0, %class.SkPath* dereferenceable(16) %2, %class.SkMatrix* dereferenceable(40) %3, %struct.SkPoint3* nonnull dereferenceable(12) %6, %struct.SkPoint3* dereferenceable(12) %25, float %27, i1 zeroext %13, i1 zeroext true) #17
  br label %72

28:                                               ; preds = %5
  %29 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 192
  %32 = icmp eq i32 %31, 128
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %3) #17
  %35 = zext i8 %34 to i32
  store i32 %35, i32* %29, align 4
  br label %36

36:                                               ; preds = %28, %33
  %37 = phi i32 [ %35, %33 ], [ %30, %28 ]
  %38 = and i32 %37, 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %36
  %41 = load i32, i32* %11, align 4
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %49

43:                                               ; preds = %36, %40
  %44 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 0
  store float 0.000000e+00, float* %44, align 4
  %45 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 1
  store float 0.000000e+00, float* %45, align 4
  %46 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %1, i64 0, i32 3
  %47 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %1, i64 0, i32 4
  %48 = load float, float* %47, align 4
  call void @_ZN19SkShadowTessellator8MakeSpotERK6SkPathRK8SkMatrixRK8SkPoint3S8_fbb(%class.sk_sp.127* sret %0, %class.SkPath* dereferenceable(16) %2, %class.SkMatrix* dereferenceable(40) %3, %struct.SkPoint3* nonnull dereferenceable(12) %6, %struct.SkPoint3* dereferenceable(12) %46, float %48, i1 zeroext %13, i1 zeroext false) #17
  br label %72

49:                                               ; preds = %40
  %50 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %50) #17
  %51 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %52 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %50, i8* align 4 %52, i64 36, i1 false)
  %53 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 2
  store float 0.000000e+00, float* %53, align 4
  store i32 128, i32* %51, align 4
  %54 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 5
  store float 0.000000e+00, float* %54, align 4
  %55 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #17
  %56 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %1, i64 0, i32 1
  %57 = bitcast %struct.SkPoint* %56 to i64*
  %58 = load i64, i64* %57, align 4
  store i64 %58, i64* %8, align 8
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %7, %struct.SkPoint* nonnull %9, %struct.SkPoint* nonnull %9, i32 1) #17
  %59 = bitcast %struct.SkPoint3* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %59) #17
  %60 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %10, i64 0, i32 2
  %61 = load i64, i64* %8, align 8
  %62 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %1, i64 0, i32 3, i32 2
  %63 = bitcast float* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = bitcast %struct.SkPoint3* %10 to i64*
  store i64 %61, i64* %65, align 8
  %66 = bitcast float* %60 to i32*
  store i32 %64, i32* %66, align 8
  %67 = bitcast %"struct.(anonymous namespace)::SpotVerticesFactory"* %1 to i64*
  %68 = bitcast %struct.SkPoint* %4 to i64*
  %69 = load i64, i64* %67, align 4
  store i64 %69, i64* %68, align 4
  %70 = getelementptr inbounds %"struct.(anonymous namespace)::SpotVerticesFactory", %"struct.(anonymous namespace)::SpotVerticesFactory"* %1, i64 0, i32 4
  %71 = load float, float* %70, align 4
  call void @_ZN19SkShadowTessellator8MakeSpotERK6SkPathRK8SkMatrixRK8SkPoint3S8_fbb(%class.sk_sp.127* sret %0, %class.SkPath* dereferenceable(16) %2, %class.SkMatrix* nonnull dereferenceable(40) %7, %struct.SkPoint3* nonnull dereferenceable(12) %6, %struct.SkPoint3* nonnull dereferenceable(12) %10, float %71, i1 zeroext %13, i1 zeroext false) #17
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %59) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %50) #17
  br label %72

72:                                               ; preds = %49, %43, %22
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %15) #17
  ret void
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { inlinehint nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { builtin nounwind }
attributes #17 = { nounwind }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN17SkColorFilterPriv12MakeGaussianEv: argument 0"}
!4 = distinct !{!4, !"_ZN17SkColorFilterPriv12MakeGaussianEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN18GrRuntimeFPBuilder4MakeIXadL_ZZNK21SkGaussianColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS2_14default_deleteIS4_EEEEP18GrRecordingContextRK11GrColorInfoE5kCodeEEXadL_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringEEEES_v: argument 0"}
!7 = distinct !{!7, !"_ZN18GrRuntimeFPBuilder4MakeIXadL_ZZNK21SkGaussianColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS2_14default_deleteIS4_EEEEP18GrRecordingContextRK11GrColorInfoE5kCodeEEXadL_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringEEEES_v"}
!8 = !{!"branch_weights", i32 1, i32 1048575}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString: argument 0"}
!11 = distinct !{!11, !"_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString"}
!12 = !{!10, !6}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN17SkColorFilterPriv12MakeGaussianEv: argument 0"}
!15 = distinct !{!15, !"_ZN17SkColorFilterPriv12MakeGaussianEv"}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZN12_GLOBAL__N_119CachedTessellations3SetINS_22AmbientVerticesFactoryELi4EE3addERK6SkPathRKS2_RK8SkMatrixP7SkPoint: argument 0"}
!18 = distinct !{!18, !"_ZN12_GLOBAL__N_119CachedTessellations3SetINS_22AmbientVerticesFactoryELi4EE3addERK6SkPathRKS2_RK8SkMatrixP7SkPoint"}
!19 = distinct !{!19, !20, !"_ZN12_GLOBAL__N_119CachedTessellations3addERK6SkPathRKNS_22AmbientVerticesFactoryERK8SkMatrixP7SkPoint: argument 0"}
!20 = distinct !{!20, !"_ZN12_GLOBAL__N_119CachedTessellations3addERK6SkPathRKNS_22AmbientVerticesFactoryERK8SkMatrixP7SkPoint"}
!21 = !{!22, !17, !19}
!22 = distinct !{!22, !23, !"_ZNK12_GLOBAL__N_122AmbientVerticesFactory12makeVerticesERK6SkPathRK8SkMatrixP7SkPoint: argument 0"}
!23 = distinct !{!23, !"_ZNK12_GLOBAL__N_122AmbientVerticesFactory12makeVerticesERK6SkPathRK8SkMatrixP7SkPoint"}
!24 = !{i8 0, i8 2}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_Z10sk_make_spIN12_GLOBAL__N_117ShadowInvalidatorEJRN15SkResourceCache3KeyEEE5sk_spIT_EDpOT0_: argument 0"}
!27 = distinct !{!27, !"_Z10sk_make_spIN12_GLOBAL__N_117ShadowInvalidatorEJRN15SkResourceCache3KeyEEE5sk_spIT_EDpOT0_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK12_GLOBAL__N_122AmbientVerticesFactory12makeVerticesERK6SkPathRK8SkMatrixP7SkPoint: argument 0"}
!30 = distinct !{!30, !"_ZNK12_GLOBAL__N_122AmbientVerticesFactory12makeVerticesERK6SkPathRK8SkMatrixP7SkPoint"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN17SkColorFilterPriv12MakeGaussianEv: argument 0"}
!33 = distinct !{!33, !"_ZN17SkColorFilterPriv12MakeGaussianEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN17SkColorFilterPriv12MakeGaussianEv: argument 0"}
!36 = distinct !{!36, !"_ZN17SkColorFilterPriv12MakeGaussianEv"}
!37 = !{!38, !40}
!38 = distinct !{!38, !39, !"_ZN12_GLOBAL__N_119CachedTessellations3SetINS_19SpotVerticesFactoryELi4EE3addERK6SkPathRKS2_RK8SkMatrixP7SkPoint: argument 0"}
!39 = distinct !{!39, !"_ZN12_GLOBAL__N_119CachedTessellations3SetINS_19SpotVerticesFactoryELi4EE3addERK6SkPathRKS2_RK8SkMatrixP7SkPoint"}
!40 = distinct !{!40, !41, !"_ZN12_GLOBAL__N_119CachedTessellations3addERK6SkPathRKNS_19SpotVerticesFactoryERK8SkMatrixP7SkPoint: argument 0"}
!41 = distinct !{!41, !"_ZN12_GLOBAL__N_119CachedTessellations3addERK6SkPathRKNS_19SpotVerticesFactoryERK8SkMatrixP7SkPoint"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_Z10sk_make_spIN12_GLOBAL__N_117ShadowInvalidatorEJRN15SkResourceCache3KeyEEE5sk_spIT_EDpOT0_: argument 0"}
!44 = distinct !{!44, !"_Z10sk_make_spIN12_GLOBAL__N_117ShadowInvalidatorEJRN15SkResourceCache3KeyEEE5sk_spIT_EDpOT0_"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN17SkColorFilterPriv12MakeGaussianEv: argument 0"}
!47 = distinct !{!47, !"_ZN17SkColorFilterPriv12MakeGaussianEv"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNK12_GLOBAL__N_122CachedTessellationsRec4findINS_22AmbientVerticesFactoryEEE5sk_spI10SkVerticesERKT_RK8SkMatrixP7SkPoint: argument 0"}
!50 = distinct !{!50, !"_ZNK12_GLOBAL__N_122CachedTessellationsRec4findINS_22AmbientVerticesFactoryEEE5sk_spI10SkVerticesERKT_RK8SkMatrixP7SkPoint"}
!51 = !{!52, !54, !49}
!52 = distinct !{!52, !53, !"_ZNK12_GLOBAL__N_119CachedTessellations3SetINS_22AmbientVerticesFactoryELi4EE4findERKS2_RK8SkMatrixP7SkPoint: argument 0"}
!53 = distinct !{!53, !"_ZNK12_GLOBAL__N_119CachedTessellations3SetINS_22AmbientVerticesFactoryELi4EE4findERKS2_RK8SkMatrixP7SkPoint"}
!54 = distinct !{!54, !55, !"_ZNK12_GLOBAL__N_119CachedTessellations4findERKNS_22AmbientVerticesFactoryERK8SkMatrixP7SkPoint: argument 0"}
!55 = distinct !{!55, !"_ZNK12_GLOBAL__N_119CachedTessellations4findERKNS_22AmbientVerticesFactoryERK8SkMatrixP7SkPoint"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZNK12_GLOBAL__N_122CachedTessellationsRec16refTessellationsEv: argument 0"}
!58 = distinct !{!58, !"_ZNK12_GLOBAL__N_122CachedTessellationsRec16refTessellationsEv"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!61 = distinct !{!61, !"_ZN8SkMatrix9TranslateEff"}
!62 = !{!63, !65}
!63 = distinct !{!63, !64, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!64 = distinct !{!64, !"_ZN8SkMatrix6ConcatERKS_S1_"}
!65 = distinct !{!65, !66, !"_ZmlRK8SkMatrixS1_: argument 0"}
!66 = distinct !{!66, !"_ZmlRK8SkMatrixS1_"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNK12_GLOBAL__N_122CachedTessellationsRec4findINS_19SpotVerticesFactoryEEE5sk_spI10SkVerticesERKT_RK8SkMatrixP7SkPoint: argument 0"}
!69 = distinct !{!69, !"_ZNK12_GLOBAL__N_122CachedTessellationsRec4findINS_19SpotVerticesFactoryEEE5sk_spI10SkVerticesERKT_RK8SkMatrixP7SkPoint"}
!70 = !{!71, !73, !68}
!71 = distinct !{!71, !72, !"_ZNK12_GLOBAL__N_119CachedTessellations3SetINS_19SpotVerticesFactoryELi4EE4findERKS2_RK8SkMatrixP7SkPoint: argument 0"}
!72 = distinct !{!72, !"_ZNK12_GLOBAL__N_119CachedTessellations3SetINS_19SpotVerticesFactoryELi4EE4findERKS2_RK8SkMatrixP7SkPoint"}
!73 = distinct !{!73, !74, !"_ZNK12_GLOBAL__N_119CachedTessellations4findERKNS_19SpotVerticesFactoryERK8SkMatrixP7SkPoint: argument 0"}
!74 = distinct !{!74, !"_ZNK12_GLOBAL__N_119CachedTessellations4findERKNS_19SpotVerticesFactoryERK8SkMatrixP7SkPoint"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZNK12_GLOBAL__N_122CachedTessellationsRec16refTessellationsEv: argument 0"}
!77 = distinct !{!77, !"_ZNK12_GLOBAL__N_122CachedTessellationsRec16refTessellationsEv"}
