; ModuleID = '../../third_party/pdfium/core/fxge/cfx_graphstatedata.cpp'
source_filename = "../../third_party/pdfium/core/fxge/cfx_graphstatedata.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.CFX_RetainableGraphStateData* }

$_ZN5fxcrt10RetainableD2Ev = comdat any

$_ZN5fxcrt10RetainableD0Ev = comdat any

$_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZTVN5fxcrt10RetainableE = comdat any

@_ZTV28CFX_RetainableGraphStateData = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFX_RetainableGraphStateData*)* @_ZN28CFX_RetainableGraphStateDataD2Ev to i8*), i8* bitcast (void (%class.CFX_RetainableGraphStateData*)* @_ZN28CFX_RetainableGraphStateDataD0Ev to i8*)] }, align 8
@_ZTVN5fxcrt10RetainableE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.fxcrt::Retainable"*)* @_ZN5fxcrt10RetainableD2Ev to i8*), i8* bitcast (void (%"class.fxcrt::Retainable"*)* @_ZN5fxcrt10RetainableD0Ev to i8*)] }, comdat, align 8

@_ZN18CFX_GraphStateDataC1Ev = hidden unnamed_addr alias void (%class.CFX_GraphStateData*), void (%class.CFX_GraphStateData*)* @_ZN18CFX_GraphStateDataC2Ev
@_ZN18CFX_GraphStateDataC1ERKS_ = hidden unnamed_addr alias void (%class.CFX_GraphStateData*, %class.CFX_GraphStateData*), void (%class.CFX_GraphStateData*, %class.CFX_GraphStateData*)* @_ZN18CFX_GraphStateDataC2ERKS_
@_ZN18CFX_GraphStateDataC1EOS_ = hidden unnamed_addr alias void (%class.CFX_GraphStateData*, %class.CFX_GraphStateData*), void (%class.CFX_GraphStateData*, %class.CFX_GraphStateData*)* @_ZN18CFX_GraphStateDataC2EOS_
@_ZN18CFX_GraphStateDataD1Ev = hidden unnamed_addr alias void (%class.CFX_GraphStateData*), void (%class.CFX_GraphStateData*)* @_ZN18CFX_GraphStateDataD2Ev
@_ZN28CFX_RetainableGraphStateDataC1Ev = hidden unnamed_addr alias void (%class.CFX_RetainableGraphStateData*), void (%class.CFX_RetainableGraphStateData*)* @_ZN28CFX_RetainableGraphStateDataC2Ev
@_ZN28CFX_RetainableGraphStateDataC1ERKS_ = hidden unnamed_addr alias void (%class.CFX_RetainableGraphStateData*, %class.CFX_RetainableGraphStateData*), void (%class.CFX_RetainableGraphStateData*, %class.CFX_RetainableGraphStateData*)* @_ZN28CFX_RetainableGraphStateDataC2ERKS_
@_ZN28CFX_RetainableGraphStateDataD1Ev = hidden unnamed_addr alias void (%class.CFX_RetainableGraphStateData*), void (%class.CFX_RetainableGraphStateData*)* @_ZN28CFX_RetainableGraphStateDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_GraphStateDataC2Ev(%class.CFX_GraphStateData* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 1
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 2
  store float 0.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 3
  store float 1.000000e+01, float* %5, align 8
  %6 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 4
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 5
  %8 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_GraphStateDataC2ERKS_(%class.CFX_GraphStateData*, %class.CFX_GraphStateData* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 5
  %6 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %1, i64 0, i32 5
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #5
  %8 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %1, i64 0, i32 5, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %6 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %2
  %17 = icmp ugt i64 %14, 4611686018427387903
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #6
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #7
  %22 = bitcast i8* %21 to float*
  %23 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 5, i32 0, i32 1
  %24 = bitcast float** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds float, float* %22, i64 %14
  %27 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store float* %26, float** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %29 = load float*, float** %28, align 8
  %30 = load i64, i64* %9, align 8
  %31 = bitcast float** %23 to i64*
  %32 = ptrtoint i8* %21 to i64
  %33 = ptrtoint float* %29 to i64
  %34 = sub i64 %30, %33
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %20
  %37 = lshr exact i64 %34, 2
  %38 = bitcast float* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4 %38, i64 %34, i1 false) #5
  %39 = getelementptr inbounds float, float* %22, i64 %37
  %40 = ptrtoint float* %39 to i64
  br label %41

41:                                               ; preds = %36, %20
  %42 = phi i64 [ %40, %36 ], [ %32, %20 ]
  store i64 %42, i64* %31, align 8
  br label %43

43:                                               ; preds = %2, %41
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_GraphStateDataC2EOS_(%class.CFX_GraphStateData* nocapture, %class.CFX_GraphStateData* nocapture dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 5
  %6 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %1, i64 0, i32 5
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #5
  %8 = bitcast %"class.std::__1::vector"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %5 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %1, i64 0, i32 5, i32 0, i32 1
  %12 = bitcast float** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 5, i32 0, i32 1
  %15 = bitcast float** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast float** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast float** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_GraphStateDataD2Ev(%class.CFX_GraphStateData* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load float*, float** %2, align 8
  %4 = icmp eq float* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint float* %3 to i64
  %7 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 5, i32 0, i32 1
  %8 = bitcast float** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #7
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %class.CFX_GraphStateData* @_ZN18CFX_GraphStateDataaSERKS_(%class.CFX_GraphStateData* returned, %class.CFX_GraphStateData* readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = icmp eq %class.CFX_GraphStateData* %0, %1
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 5
  %8 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %1, i64 0, i32 5, i32 0, i32 0
  %9 = load float*, float** %8, align 8
  %10 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %1, i64 0, i32 5, i32 0, i32 1
  %11 = load float*, float** %10, align 8
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %7, float* %9, float* %11) #5
  br label %12

12:                                               ; preds = %2, %6
  ret %class.CFX_GraphStateData* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %class.CFX_GraphStateData* @_ZN18CFX_GraphStateDataaSEOS_(%class.CFX_GraphStateData* returned, %class.CFX_GraphStateData* nocapture dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 5
  %6 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %1, i64 0, i32 5
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %8 = load float*, float** %7, align 8
  %9 = icmp eq float* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = ptrtoint float* %8 to i64
  %12 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 5, i32 0, i32 1
  %13 = bitcast float** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast float* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #7
  %15 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #5
  br label %16

16:                                               ; preds = %2, %10
  %17 = bitcast %"class.std::__1::vector"* %6 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector"* %5 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %1, i64 0, i32 5, i32 0, i32 1
  %21 = bitcast float** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 5, i32 0, i32 1
  %24 = bitcast float** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast float** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast float** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #5
  ret %class.CFX_GraphStateData* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28CFX_RetainableGraphStateDataC2Ev(%class.CFX_RetainableGraphStateData* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %0, i64 0, i32 1, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds i8, i8* %4, i64 4
  %7 = bitcast i8* %6 to float*
  store float 0.000000e+00, float* %7, align 4
  %8 = getelementptr inbounds i8, i8* %4, i64 8
  %9 = bitcast i8* %8 to float*
  store float 1.000000e+01, float* %9, align 8
  %10 = getelementptr inbounds i8, i8* %4, i64 12
  %11 = bitcast i8* %10 to float*
  store float 1.000000e+00, float* %11, align 4
  %12 = getelementptr inbounds i8, i8* %4, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #5
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV28CFX_RetainableGraphStateData, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28CFX_RetainableGraphStateDataC2ERKS_(%class.CFX_RetainableGraphStateData*, %class.CFX_RetainableGraphStateData* nocapture readonly dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5fxcrt10RetainableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %0, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %1, i64 0, i32 1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false) #5
  %7 = getelementptr inbounds i8, i8* %5, i64 16
  %8 = getelementptr inbounds i8, i8* %6, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #5
  %9 = getelementptr inbounds i8, i8* %6, i64 24
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast i8* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 2
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %45, label %17

17:                                               ; preds = %2
  %18 = icmp ugt i64 %15, 4611686018427387903
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast i8* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %20) #6
  unreachable

21:                                               ; preds = %17
  %22 = tail call i8* @_Znwm(i64 %14) #7
  %23 = bitcast i8* %22 to float*
  %24 = getelementptr inbounds i8, i8* %5, i64 24
  %25 = bitcast i8* %24 to i8**
  store i8* %22, i8** %25, align 8
  %26 = bitcast i8* %7 to i8**
  store i8* %22, i8** %26, align 8
  %27 = getelementptr inbounds float, float* %23, i64 %15
  %28 = getelementptr inbounds i8, i8* %5, i64 32
  %29 = bitcast i8* %28 to float**
  store float* %27, float** %29, align 8
  %30 = bitcast i8* %8 to float**
  %31 = load float*, float** %30, align 8
  %32 = load i64, i64* %10, align 8
  %33 = bitcast i8* %24 to i64*
  %34 = ptrtoint i8* %22 to i64
  %35 = ptrtoint float* %31 to i64
  %36 = sub i64 %32, %35
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %21
  %39 = lshr exact i64 %36, 2
  %40 = bitcast float* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 %40, i64 %36, i1 false) #5
  %41 = getelementptr inbounds float, float* %23, i64 %39
  %42 = ptrtoint float* %41 to i64
  br label %43

43:                                               ; preds = %38, %21
  %44 = phi i64 [ %42, %38 ], [ %34, %21 ]
  store i64 %44, i64* %33, align 8
  br label %45

45:                                               ; preds = %2, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV28CFX_RetainableGraphStateData, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28CFX_RetainableGraphStateDataD2Ev(%class.CFX_RetainableGraphStateData* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds i8, i8* %2, i64 16
  %4 = bitcast i8* %3 to float**
  %5 = load float*, float** %4, align 8
  %6 = icmp eq float* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = ptrtoint float* %5 to i64
  %9 = getelementptr inbounds i8, i8* %2, i64 24
  %10 = bitcast i8* %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast float* %5 to i8*
  tail call void @_ZdlPv(i8* %11) #7
  br label %12

12:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28CFX_RetainableGraphStateDataD0Ev(%class.CFX_RetainableGraphStateData*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds i8, i8* %2, i64 16
  %4 = bitcast i8* %3 to float**
  %5 = load float*, float** %4, align 8
  %6 = icmp eq float* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = ptrtoint float* %5 to i64
  %9 = getelementptr inbounds i8, i8* %2, i64 24
  %10 = bitcast i8* %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast float* %5 to i8*
  tail call void @_ZdlPv(i8* %11) #7
  br label %12

12:                                               ; preds = %1, %7
  %13 = bitcast %class.CFX_RetainableGraphStateData* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK28CFX_RetainableGraphStateData5CloneEv(%"class.fxcrt::RetainPtr"* noalias nocapture sret, %class.CFX_RetainableGraphStateData* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 56) #7, !noalias !2
  %4 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5fxcrt10RetainableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8, !noalias !2
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i64*
  store i64 0, i64* %6, align 8, !noalias !2
  %7 = getelementptr inbounds i8, i8* %3, i64 16
  %8 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %1, i64 0, i32 1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false) #5, !noalias !2
  %9 = getelementptr inbounds i8, i8* %3, i64 32
  %10 = getelementptr inbounds i8, i8* %8, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #5, !noalias !2
  %11 = getelementptr inbounds i8, i8* %8, i64 24
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !2
  %14 = bitcast i8* %10 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !2
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 2
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %42, label %19

19:                                               ; preds = %2
  %20 = icmp ugt i64 %17, 4611686018427387903
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast i8* %9 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %22) #6, !noalias !2
  unreachable

23:                                               ; preds = %19
  %24 = tail call i8* @_Znwm(i64 %16) #7, !noalias !2
  %25 = bitcast i8* %24 to float*
  %26 = getelementptr inbounds i8, i8* %3, i64 40
  %27 = bitcast i8* %26 to i8**
  store i8* %24, i8** %27, align 8, !noalias !2
  %28 = bitcast i8* %9 to i8**
  store i8* %24, i8** %28, align 8, !noalias !2
  %29 = getelementptr inbounds float, float* %25, i64 %17
  %30 = getelementptr inbounds i8, i8* %3, i64 48
  %31 = bitcast i8* %30 to float**
  store float* %29, float** %31, align 8, !noalias !2
  %32 = bitcast i8* %26 to i64*
  %33 = ptrtoint i8* %24 to i64
  %34 = icmp sgt i64 %16, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %23
  %36 = lshr exact i64 %16, 2
  %37 = inttoptr i64 %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* align 4 %37, i64 %16, i1 false) #5, !noalias !2
  %38 = getelementptr inbounds float, float* %25, i64 %36
  %39 = ptrtoint float* %38 to i64
  br label %40

40:                                               ; preds = %35, %23
  %41 = phi i64 [ %39, %35 ], [ %33, %23 ]
  store i64 %41, i64* %32, align 8, !noalias !2
  br label %42

42:                                               ; preds = %2, %40
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV28CFX_RetainableGraphStateData, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8, !noalias !2
  %43 = ptrtoint i8* %3 to i64
  %44 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 %43, i64* %44, align 8, !alias.scope !2
  store i64 1, i64* %6, align 8, !noalias !2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt10RetainableD2Ev(%"class.fxcrt::Retainable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt10RetainableD0Ev(%"class.fxcrt::Retainable"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.fxcrt::Retainable"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"*, float*, float*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint float* %2 to i64
  %5 = ptrtoint float* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast float** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to float*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast float** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds float, float* %1, i64 %22
  %25 = select i1 %23, float* %24, float* %2
  %26 = ptrtoint float* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast float* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #5
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast float* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #5
  %42 = inttoptr i64 %35 to float*
  %43 = getelementptr inbounds float, float* %42, i64 %39
  %44 = ptrtoint float* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds float, float* %16, i64 %28
  store float* %48, float** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast float** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #7
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #5
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #6
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #6
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #7
  %75 = bitcast i8* %74 to float*
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast float** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds float, float* %75, i64 %72
  store float* %79, float** %8, align 8
  %80 = bitcast float** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast float* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #5
  %86 = getelementptr inbounds float, float* %75, i64 %84
  %87 = ptrtoint float* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6pdfium10MakeRetainI28CFX_RetainableGraphStateDataJRKS1_EEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN6pdfium10MakeRetainI28CFX_RetainableGraphStateDataJRKS1_EEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
