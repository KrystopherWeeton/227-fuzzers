; ModuleID = '../../third_party/blink/renderer/core/exported/web_node.cc'
source_filename = "../../third_party/blink/renderer/core/exported/web_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.152", i32, [4 x i8], %"class.std::__1::unique_ptr.288", %"class.std::__1::unique_ptr.288", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.304", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.322", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.329", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.268", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__atomic_base.190" }
%"struct.std::__1::__atomic_base.190" = type { %"struct.std::__1::__cxx_atomic_impl.191" }
%"struct.std::__1::__cxx_atomic_impl.191" = type { %"struct.std::__1::__cxx_atomic_base_impl.192" }
%"struct.std::__1::__cxx_atomic_base_impl.192" = type { i64 }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::Worklist.199"* }
%"class.blink::Worklist.199" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::Worklist.206"* }
%"class.blink::Worklist.206" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::Worklist.213"* }
%"class.blink::Worklist.213" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::Worklist.220"* }
%"class.blink::Worklist.220" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::Worklist.227"* }
%"class.blink::Worklist.227" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::Worklist.234"* }
%"class.blink::Worklist.234" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::Worklist.241"* }
%"class.blink::Worklist.241" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.248", %"class.std::__1::__compressed_pair.255", %"class.std::__1::__compressed_pair.260", %"class.std::__1::__compressed_pair.262", [4 x i8] }>
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250", %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { i64 }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { float }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.271", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.280" }
%"class.WTF::Vector.280" = type { %"class.WTF::VectorBuffer.281" }
%"class.WTF::VectorBuffer.281" = type { %"class.WTF::VectorBufferBase.282" }
%"class.WTF::VectorBufferBase.282" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.296" }
%"class.WTF::VectorBuffer.296" = type { %"class.WTF::VectorBufferBase.297" }
%"class.WTF::VectorBufferBase.297" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.310" }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.199"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.206"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.213"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.220"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.227"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.569" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.328 }
%class.scoped_refptr.328 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.329" = type { %"struct.std::__1::__atomic_base.330" }
%"struct.std::__1::__atomic_base.330" = type { %"struct.std::__1::__cxx_atomic_impl.331" }
%"struct.std::__1::__cxx_atomic_impl.331" = type { %"struct.std::__1::__cxx_atomic_base_impl.332" }
%"struct.std::__1::__cxx_atomic_base_impl.332" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::WebNode" = type { i32 (...)**, %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.0", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.42", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.51", %"class.blink::HeapVector.53" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.100", %"class.WTF::Vector.100", i8, i32, %"class.blink::Member.111", %"class.blink::Member.113", %"class.blink::Member.115", %"class.blink::Member.117", %"class.blink::Member.119", %"class.blink::Member.121", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.124", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.130", %"class.blink::Member.132", %"class.blink::Member.59", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.135", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.345", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.354", double, double, i64, i64, %"class.blink::HeapHashSet.356", %"class.blink::HeapHashSet.363", i16, i8, %"class.blink::Member.370", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::TextLinkColors", %"class.blink::Member.378", i8, [7 x i8], %"class.blink::HeapHashMap.380", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.387", %"class.blink::Member.392", %"class.blink::Member.396", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.398", %"class.blink::HeapVector.400", %"class.std::__1::unique_ptr.408", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.414", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.427", %"class.WTF::Vector.429", i8, i8, %"class.std::__1::unique_ptr.434", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.440", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.448", i8, i32, %"class.blink::Member.450", %"class.blink::Member.452", %"class.blink::Member.454", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.456", %"class.WTF::HashMap.458", %"class.blink::Member.463", %"class.blink::Member.465", %"class.blink::Member.467", %"class.blink::Member.469", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.471", i8, i32, %"class.blink::Member.478", %"class.blink::Member.480", i32, %"class.blink::Member.482", %"class.blink::Member.484", %"class.blink::Member.486", %"class.std::__1::unique_ptr.488", i64, %"class.std::__1::unique_ptr.494", i32, i32, %"class.blink::Member.505", %"class.blink::Member.507", %"class.blink::Member.509", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.511", %"class.WTF::Vector.513", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.518", %"class.blink::Member.525", %"class.std::__1::unique_ptr.527", %"class.blink::Member.533", i8, i8, %"class.WTF::String", %"class.blink::Member.535", i8, [7 x i8], %"class.blink::HeapHashMap.537", %"class.blink::HeapObserverSet", %"class.blink::Member.551", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.553", i32, i8, i8, %"class.blink::WeakMember.555", %"class.blink::Member.556" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.93" }
%"class.blink::HeapHashMap.93" = type { %"class.WTF::HashMap.96" }
%"class.WTF::HashMap.96" = type { %"class.WTF::HashTable.97" }
%"class.WTF::HashTable.97" = type <{ %"struct.WTF::KeyValuePair.99"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.99" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.100" = type { %"class.WTF::VectorBuffer.101" }
%"class.WTF::VectorBuffer.101" = type { %"class.WTF::VectorBufferBase.102" }
%"class.WTF::VectorBufferBase.102" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.103 }
%class.scoped_refptr.103 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.104" }
%"struct.std::__1::atomic.104" = type { %"struct.std::__1::__atomic_base.105" }
%"struct.std::__1::__atomic_base.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__cxx_atomic_impl.107" }
%"struct.std::__1::__cxx_atomic_impl.107" = type { %"struct.std::__1::__cxx_atomic_base_impl.108" }
%"struct.std::__1::__cxx_atomic_base_impl.108" = type { i32 }
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.574", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.642", i32, i8, [3 x i8], %"class.blink::HeapVector.644", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.652", %"class.blink::Member.654", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.663", %"class.blink::Member.669", %"class.blink::Member.671", i8, [7 x i8] }>
%"class.blink::Supplementable.574" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.575" }
%"class.blink::HeapHashMap.575" = type { %"class.WTF::HashMap.578" }
%"class.WTF::HashMap.578" = type { %"class.WTF::HashTable.579" }
%"class.WTF::HashTable.579" = type <{ %"struct.WTF::KeyValuePair.581"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.581" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.590" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.582" }
%"class.blink::HeapObserverSet.582" = type { i32, [4 x i8], %"class.blink::HeapHashSet.583" }
%"class.blink::HeapHashSet.583" = type { %"class.WTF::HashSet.586" }
%"class.WTF::HashSet.586" = type { %"class.WTF::HashTable.587" }
%"class.WTF::HashTable.587" = type <{ %"class.blink::WeakMember.589"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.589" = type opaque
%"class.blink::Supplementable.590" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.591" }
%"class.blink::HeapHashMap.591" = type { %"class.WTF::HashMap.594" }
%"class.WTF::HashMap.594" = type { %"class.WTF::HashTable.595" }
%"class.WTF::HashTable.595" = type <{ %"struct.WTF::KeyValuePair.597"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.597" = type { i8*, %"class.blink::Member.1416" }
%"class.blink::Member.1416" = type { %"class.blink::MemberBase.1417" }
%"class.blink::MemberBase.1417" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1418" }
%"class.blink::Member.1418" = type { %"class.blink::MemberBase.1419" }
%"class.blink::MemberBase.1419" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.598, %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.632", %"class.std::__1::unique_ptr.632", %"class.blink::Member.113", i32, [4 x i8], %"class.WTF::HashSet.638", i32, i32 }
%class.scoped_refptr.598 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.599", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.601 }
%"class.WTF::RefCounted.599" = type { %"class.base::RefCounted.600" }
%"class.base::RefCounted.600" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.601 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.619", %"class.std::__1::map.628"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.607 }
%union.anon.607 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.611", %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::map.619" = type { %"class.std::__1::__tree.620" }
%"class.std::__1::__tree.620" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::map.628" = type opaque
%"class.std::__1::unique_ptr.632" = type { %"class.std::__1::__compressed_pair.633" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"struct.std::__1::__compressed_pair_elem.634" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.638" = type { %"class.WTF::HashTable.639" }
%"class.WTF::HashTable.639" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.642" = type { %"class.blink::MemberBase.643" }
%"class.blink::MemberBase.643" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.644" = type { %"class.WTF::Vector.647" }
%"class.WTF::Vector.647" = type { %"class.WTF::VectorBuffer.648" }
%"class.WTF::VectorBuffer.648" = type { %"class.WTF::VectorBufferBase.649" }
%"class.WTF::VectorBufferBase.649" = type { %"class.blink::Member.650"*, i32, i32 }
%"class.blink::Member.650" = type opaque
%"class.blink::Member.652" = type { %"class.blink::MemberBase.653" }
%"class.blink::MemberBase.653" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.656", i32, i32 }
%"class.blink::HeapHashMap.656" = type { %"class.WTF::HashMap.659" }
%"class.WTF::HashMap.659" = type { %"class.WTF::HashTable.660" }
%"class.WTF::HashTable.660" = type <{ %"struct.WTF::KeyValuePair.662"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.662" = type opaque
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.669" = type { %"class.blink::MemberBase.670" }
%"class.blink::MemberBase.670" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.61", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.63, %"class.WTF::Vector.64", %"class.WTF::Vector.64", %"class.blink::Member", %"class.blink::Member.69", %"class.blink::HeapHashSet", %"class.blink::Member.8", %"class.WTF::HashSet.77", %"class.WTF::TextPosition", %"class.blink::Member.81", %"class.blink::HeapVector.83", %"class.blink::Member.90" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.63 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.64" = type { %"class.WTF::VectorBuffer.65" }
%"class.WTF::VectorBuffer.65" = type { %"class.WTF::VectorBufferBase.66" }
%"class.WTF::VectorBufferBase.66" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.71" }
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.75" }
%"class.WTF::HashTable.75" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.77" = type { %"class.WTF::HashTable.78" }
%"class.WTF::HashTable.78" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.83" = type { %"class.WTF::Vector.86" }
%"class.WTF::Vector.86" = type { %"class.WTF::VectorBuffer.87" }
%"class.WTF::VectorBuffer.87" = type { %"class.WTF::VectorBufferBase.88" }
%"class.WTF::VectorBufferBase.88" = type { %"class.blink::Member.69"*, i32, i32 }
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.134 }
%class.scoped_refptr.134 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.135" = type { %"class.WTF::VectorBuffer.136" }
%"class.WTF::VectorBuffer.136" = type { %"class.WTF::VectorBufferBase.137" }
%"class.WTF::VectorBufferBase.137" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.138 }
%class.scoped_refptr.138 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.139", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.139" = type { %"class.base::RefCounted.140" }
%"class.base::RefCounted.140" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.143" }
%"class.blink::HeapHashMap.143" = type { %"class.WTF::HashMap.146" }
%"class.WTF::HashMap.146" = type { %"class.WTF::HashTable.147" }
%"class.WTF::HashTable.147" = type <{ %"struct.WTF::KeyValuePair.149"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.149" = type { %"class.blink::WeakMember.150", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.345" = type { %"class.blink::MemberBase.346" }
%"class.blink::MemberBase.346" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.8", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.347" }
%"class.blink::HeapHashMap.347" = type { %"class.WTF::HashMap.350" }
%"class.WTF::HashMap.350" = type { %"class.WTF::HashTable.351" }
%"class.WTF::HashTable.351" = type <{ %"struct.WTF::KeyValuePair.353"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.353" = type opaque
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.356" = type { %"class.WTF::HashSet.359" }
%"class.WTF::HashSet.359" = type { %"class.WTF::HashTable.360" }
%"class.WTF::HashTable.360" = type <{ %"class.blink::WeakMember.362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.362" = type opaque
%"class.blink::HeapHashSet.363" = type { %"class.WTF::HashSet.366" }
%"class.WTF::HashSet.366" = type { %"class.WTF::HashTable.367" }
%"class.WTF::HashTable.367" = type <{ %"class.blink::WeakMember.369"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.369" = type opaque
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.53" }
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.380" = type { %"class.WTF::HashMap.383" }
%"class.WTF::HashMap.383" = type { %"class.WTF::HashTable.384" }
%"class.WTF::HashTable.384" = type <{ %"struct.WTF::KeyValuePair.386"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.386" = type opaque
%"class.WTF::Vector.387" = type { %"class.WTF::VectorBuffer.388" }
%"class.WTF::VectorBuffer.388" = type { %"class.WTF::VectorBufferBase.389" }
%"class.WTF::VectorBufferBase.389" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.33", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.33" = type { %"class.base::RefCounted.34" }
%"class.base::RefCounted.34" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.400" = type { %"class.WTF::Vector.403" }
%"class.WTF::Vector.403" = type { %"class.WTF::VectorBuffer.404" }
%"class.WTF::VectorBuffer.404" = type { %"class.WTF::VectorBufferBase.405" }
%"class.WTF::VectorBufferBase.405" = type { %"class.blink::Member.406"*, i32, i32 }
%"class.blink::Member.406" = type opaque
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.414" = type { %"class.WTF::HashSet.417" }
%"class.WTF::HashSet.417" = type { %"class.WTF::HashTable.418" }
%"class.WTF::HashTable.418" = type <{ %"class.blink::WeakMember.420"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.420" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.421", i32, [4 x i8] }>
%"class.WTF::Vector.421" = type { %"class.WTF::VectorBuffer.422" }
%"class.WTF::VectorBuffer.422" = type { %"class.WTF::VectorBufferBase.423" }
%"class.WTF::VectorBufferBase.423" = type { %"struct.std::__1::pair.424"*, i32, i32 }
%"struct.std::__1::pair.424" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.429" = type { %"class.WTF::VectorBuffer.430" }
%"class.WTF::VectorBuffer.430" = type { %"class.WTF::VectorBufferBase.431" }
%"class.WTF::VectorBufferBase.431" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.38" }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::HeapVector.440" = type { %"class.WTF::Vector.443" }
%"class.WTF::Vector.443" = type { %"class.WTF::VectorBuffer.444" }
%"class.WTF::VectorBuffer.444" = type { %"class.WTF::VectorBufferBase.445" }
%"class.WTF::VectorBufferBase.445" = type { %"class.blink::Member.446"*, i32, i32 }
%"class.blink::Member.446" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.8" }
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.458" = type { %"class.WTF::HashTable.459" }
%"class.WTF::HashTable.459" = type <{ %"struct.WTF::KeyValuePair.462"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.462" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.344", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.335, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.335 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.336" }>
%"class.base::RefCountedThreadSafe.336" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.337 }
%class.scoped_refptr.337 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.338", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.338" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.339" }
%"struct.std::__1::atomic.339" = type { %"struct.std::__1::__atomic_base.340" }
%"struct.std::__1::__atomic_base.340" = type { %"struct.std::__1::__atomic_base.341" }
%"struct.std::__1::__atomic_base.341" = type { %"struct.std::__1::__cxx_atomic_impl.342" }
%"struct.std::__1::__cxx_atomic_impl.342" = type { %"struct.std::__1::__cxx_atomic_base_impl.343" }
%"struct.std::__1::__cxx_atomic_base_impl.343" = type { i8 }
%"class.blink::WeakMember.344" = type { %"class.blink::MemberBase.9" }
%"class.blink::HeapHashSet.471" = type { %"class.WTF::HashSet.474" }
%"class.WTF::HashSet.474" = type { %"class.WTF::HashTable.475" }
%"class.WTF::HashTable.475" = type <{ %"class.blink::Member.477"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.477" = type opaque
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.77", %"class.WTF::HashSet.77", %"class.WTF::HashSet.77", %"class.WTF::HashSet.77", %"class.WTF::HashSet.77", %"class.WTF::HashSet.77", i32, [4 x i8], %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.497" = type { %"class.WTF::HashTable.498" }
%"class.WTF::HashTable.498" = type <{ %"struct.WTF::KeyValuePair.501"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.501" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.513" = type { %"class.WTF::VectorBuffer.514" }
%"class.WTF::VectorBuffer.514" = type { %"class.WTF::VectorBufferBase.515" }
%"class.WTF::VectorBufferBase.515" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.518" = type { %"class.WTF::HashMap.521" }
%"class.WTF::HashMap.521" = type { %"class.WTF::HashTable.522" }
%"class.WTF::HashTable.522" = type <{ %"struct.WTF::KeyValuePair.524"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.524" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.537" = type { %"class.WTF::HashMap.540" }
%"class.WTF::HashMap.540" = type { %"class.WTF::HashTable.541" }
%"class.WTF::HashTable.541" = type <{ %"struct.WTF::KeyValuePair.543"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.543" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.544" }
%"class.blink::HeapHashSet.544" = type { %"class.WTF::HashSet.547" }
%"class.WTF::HashSet.547" = type { %"class.WTF::HashTable.548" }
%"class.WTF::HashTable.548" = type <{ %"class.blink::WeakMember.550"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.550" = type opaque
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.8", %"class.blink::HeapHashSet.560", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.567", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.560" = type { %"class.WTF::HashSet.563" }
%"class.WTF::HashSet.563" = type { %"class.WTF::HashTable.564" }
%"class.WTF::HashTable.564" = type <{ %"class.blink::Member.566"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.566" = type opaque
%"class.blink::HeapTaskRunnerTimer.567" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.568", { i64, i64 } }
%"class.blink::WeakMember.568" = type { %"class.blink::MemberBase.554" }
%"class.blink::WeakMember.555" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.48" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::HeapHashMap.50"* }
%"class.blink::HeapHashMap.50" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.53" = type { %"class.WTF::Vector.56" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %"class.blink::Member.59"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::PtrStorageImpl" = type { %"class.blink::Persistent.1453"* }
%"class.blink::Persistent.1453" = type { %"class.blink::PersistentBase.1454" }
%"class.blink::PersistentBase.1454" = type { %"class.blink::Node"*, %"class.blink::PersistentNodePtr.1455" }
%"class.blink::PersistentNodePtr.1455" = type { %"class.blink::PersistentNode"* }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebDocument" = type { %"class.blink::WebNode" }
%"class.v8::Value" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.1448, %"class.blink::Member.1449", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.1448 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1451" }
%"class.blink::Persistent.1451" = type { %"class.blink::PersistentBase.1452" }
%"class.blink::PersistentBase.1452" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.675" }
%"class.blink::PersistentBase.675" = type { %"class.blink::Node"*, %"class.blink::PersistentNodePtr.676" }
%"class.blink::PersistentNodePtr.676" = type { %"class.blink::PersistentNode"* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.336", [4 x i8] }>
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.682", %"class.blink::Member.682", %"class.blink::Member.684", %"class.blink::Member.686", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.677" }
%"class.absl::optional.677" = type { %"class.absl::optional_internal::optional_data.678" }
%"class.absl::optional_internal::optional_data.678" = type { %"class.absl::optional_internal::optional_data_base.679" }
%"class.absl::optional_internal::optional_data_base.679" = type { %"class.absl::optional_internal::optional_data_dtor_base.680" }
%"class.absl::optional_internal::optional_data_dtor_base.680" = type { i8, %union.anon.681 }
%union.anon.681 = type { i64 }
%"class.blink::Member.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.684" = type { %"class.blink::MemberBase.685" }
%"class.blink::MemberBase.685" = type { %"class.blink::Event"* }
%"class.blink::Member.686" = type { %"class.blink::MemberBase.687" }
%"class.blink::MemberBase.687" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::WebElementCollection" = type <{ %"class.blink::WebPrivatePtr.688", i32, [4 x i8] }>
%"class.blink::WebPrivatePtr.688" = type { i8* }
%"class.blink::HTMLCollection" = type { %"class.blink::ScriptWrappable", %"class.blink::LiveNodeListBase.base", i8, %"class.blink::Member.689", %"class.blink::CollectionItemsCache" }
%"class.blink::LiveNodeListBase.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member.6", i16 }>
%"class.blink::Member.689" = type { %"class.blink::MemberBase.690" }
%"class.blink::MemberBase.690" = type { %"class.blink::HTMLCollection::NamedItemCache"* }
%"class.blink::HTMLCollection::NamedItemCache" = type { %"class.blink::HeapHashMap.693", %"class.blink::HeapHashMap.693" }
%"class.blink::HeapHashMap.693" = type { %"class.WTF::HashMap.696" }
%"class.WTF::HashMap.696" = type { %"class.WTF::HashTable.697" }
%"class.WTF::HashTable.697" = type <{ %"struct.WTF::KeyValuePair.699"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.699" = type { %"class.WTF::StringImpl"*, %"class.blink::Member.700" }
%"class.blink::Member.700" = type { %"class.blink::MemberBase.701" }
%"class.blink::MemberBase.701" = type { %"class.blink::HeapVector"* }
%"class.blink::CollectionItemsCache" = type { %"class.blink::CollectionIndexCache", i8, %"class.blink::HeapVector" }
%"class.blink::CollectionIndexCache" = type { i32 (...)**, %"class.blink::Member.21", i32, i32 }
%"class.blink::WebElement" = type { %"class.blink::WebNode" }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.702" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.702" = type { %"class.v8::TracedReference.703" }
%"class.v8::TracedReference.703" = type { %"class.v8::BasicTracedReference.704" }
%"class.v8::BasicTracedReference.704" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::WebVector" = type { %"class.std::__1::vector.705" }
%"class.std::__1::vector.705" = type { %"class.std::__1::__vector_base.706" }
%"class.std::__1::__vector_base.706" = type { %"class.blink::WebElement"*, %"class.blink::WebElement"*, %"class.std::__1::__compressed_pair.707" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.708" }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"class.blink::WebElement"* }
%"class.blink::StaticNodeTypeList" = type { %"class.blink::NodeList", %"class.blink::HeapVector" }
%"class.blink::NodeList" = type { %"class.blink::ScriptWrappable" }
%"struct.cc::ElementId" = type { i64 }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1314, %"class.WTF::Vector.1315", %"class.std::__1::unique_ptr.1320", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1345, %"class.blink::Persistent.1346" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.712, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr.712 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1146", %"class.std::__1::unique_ptr.1148" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.778", %"class.blink::DataRef.858", %"class.blink::DataRef.862", %"class.blink::DataRef.1062", %"class.blink::DataRef.1129", %"class.blink::DataRef.1133", %"class.blink::DataRef.1137", %"class.blink::DataRef.1141", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.713 }
%class.scoped_refptr.713 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.714", %"class.blink::DataRef.716", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.714" = type { %"class.base::RefCounted.715" }
%"class.base::RefCounted.715" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.716" = type { %class.scoped_refptr.717 }
%class.scoped_refptr.717 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.718", %"class.blink::Font" }
%"class.WTF::RefCounted.718" = type { %"class.base::RefCounted.719" }
%"class.base::RefCounted.719" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.746 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.721, %class.scoped_refptr.729, %class.scoped_refptr.739, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.745 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.720 }
%class.scoped_refptr.720 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1364", [4 x i8] }>
%"class.WTF::RefCounted.1364" = type { %"class.base::RefCounted.1365" }
%"class.base::RefCounted.1365" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.721 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.727", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.722" }
%"class.WTF::Vector.722" = type { %"class.WTF::VectorBuffer.723" }
%"class.WTF::VectorBuffer.723" = type { %"class.WTF::VectorBufferBase.724" }
%"class.WTF::VectorBufferBase.724" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.727" = type { %"class.base::RefCounted.728" }
%"class.base::RefCounted.728" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.729 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.730", %"class.WTF::RefCounted.737", [4 x i8] }>
%"class.blink::FontSettings.730" = type { %"class.WTF::Vector.731" }
%"class.WTF::Vector.731" = type { %"class.WTF::VectorBuffer.732" }
%"class.WTF::VectorBuffer.732" = type { %"class.WTF::VectorBufferBase.733" }
%"class.WTF::VectorBufferBase.733" = type { %"class.blink::FontTagValuePair.734"*, i32, i32 }
%"class.blink::FontTagValuePair.734" = type { i32, float }
%"class.WTF::RefCounted.737" = type { %"class.base::RefCounted.738" }
%"class.base::RefCounted.738" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.739 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.740", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.742, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.740" = type { %"class.base::RefCounted.741" }
%"class.base::RefCounted.741" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.742 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.743", [4 x i8] }>
%"class.WTF::RefCounted.743" = type { %"class.base::RefCounted.744" }
%"class.base::RefCounted.744" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.745 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.746 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.747", %"class.WTF::Vector.749", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent.773", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.747" = type { %"class.base::RefCounted.748" }
%"class.base::RefCounted.748" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.749" = type { %"class.WTF::VectorBuffer.750" }
%"class.WTF::VectorBuffer.750" = type { %"class.WTF::VectorBufferBase.751", [8 x i8] }
%"class.WTF::VectorBufferBase.751" = type { %class.scoped_refptr.752*, i32, i32 }
%class.scoped_refptr.752 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.753", [4 x i8] }>
%"class.WTF::RefCounted.753" = type { %"class.base::RefCounted.754" }
%"class.base::RefCounted.754" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.763", %class.scoped_refptr.770, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.753" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.757", %"class.absl::optional.757", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.757" = type { %"class.absl::optional_internal::optional_data.758" }
%"class.absl::optional_internal::optional_data.758" = type { %"class.absl::optional_internal::optional_data_base.759" }
%"class.absl::optional_internal::optional_data_base.759" = type { %"class.absl::optional_internal::optional_data_dtor_base.760" }
%"class.absl::optional_internal::optional_data_dtor_base.760" = type { i8, %union.anon.761 }
%union.anon.761 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.762, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.104" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.104" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.339" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.762 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.766, %class.scoped_refptr.766 }
%class.scoped_refptr.766 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.770 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.771", [4 x i8] }>
%"class.WTF::RefCounted.771" = type { %"class.base::RefCounted.772" }
%"class.base::RefCounted.772" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent.773" = type { %"class.blink::PersistentBase.774" }
%"class.blink::PersistentBase.774" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.775" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.775" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.776 }
%class.scoped_refptr.776 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.777, i8, i8, i8, i8 }>
%union.anon.777 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.778" = type { %class.scoped_refptr.779 }
%class.scoped_refptr.779 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.780", [4 x i8], %"class.blink::DataRef.782", %"class.blink::DataRef.823", %"class.WTF::Vector.827", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.831, %class.scoped_refptr.840, %"class.blink::Persistent.848", %"class.blink::Persistent.850", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.780" = type { %"class.base::RefCounted.781" }
%"class.base::RefCounted.781" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.782" = type { %class.scoped_refptr.783 }
%class.scoped_refptr.783 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.784", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.786, %class.scoped_refptr.793, %"class.blink::Persistent.810", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.784" = type { %"class.base::RefCounted.785" }
%"class.base::RefCounted.785" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.786 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.787", %"class.WTF::Vector.788" }
%"class.base::RefCountedThreadSafe.787" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.788" = type { %"class.WTF::VectorBuffer.789" }
%"class.WTF::VectorBuffer.789" = type { %"class.WTF::VectorBufferBase.790" }
%"class.WTF::VectorBufferBase.790" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.793 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.794", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.794" = type { %"class.base::RefCounted.795" }
%"class.base::RefCounted.795" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.796", %"class.blink::Persistent.801" }
%"class.WTF::HashMap.796" = type { %"class.WTF::HashTable.797" }
%"class.WTF::HashTable.797" = type <{ %"struct.WTF::KeyValuePair.800"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.800" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1430 }
%class.scoped_refptr.1430 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1431", %"class.WTF::Vector.1045", %"class.WTF::Vector.1433", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1431" = type { %"class.base::RefCounted.1432" }
%"class.base::RefCounted.1432" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1045" = type { %"class.WTF::VectorBuffer.1046" }
%"class.WTF::VectorBuffer.1046" = type { %"class.WTF::VectorBufferBase.1047" }
%"class.WTF::VectorBufferBase.1047" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1433" = type { %"class.WTF::VectorBuffer.1434" }
%"class.WTF::VectorBuffer.1434" = type { %"class.WTF::VectorBufferBase.1435" }
%"class.WTF::VectorBufferBase.1435" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1436 }
%union.anon.1436 = type { double }
%"class.blink::Persistent.801" = type { %"class.blink::PersistentBase.802" }
%"class.blink::PersistentBase.802" = type { %"class.blink::HeapHashMap.803"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.803" = type { %"class.WTF::HashMap.806" }
%"class.WTF::HashMap.806" = type { %"class.WTF::HashTable.807" }
%"class.WTF::HashTable.807" = type <{ %"struct.WTF::KeyValuePair.809"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.809" = type opaque
%"class.blink::Persistent.810" = type { %"class.blink::PersistentBase.811" }
%"class.blink::PersistentBase.811" = type { %"class.blink::HeapVector.812"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.812" = type { %"class.WTF::Vector.815" }
%"class.WTF::Vector.815" = type { %"class.WTF::VectorBuffer.816" }
%"class.WTF::VectorBuffer.816" = type { %"class.WTF::VectorBufferBase.817" }
%"class.WTF::VectorBufferBase.817" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.818", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.818" = type { %"class.blink::MemberBase.819" }
%"class.blink::MemberBase.819" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.823" = type { %class.scoped_refptr.824 }
%class.scoped_refptr.824 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.825", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.825" = type { %"class.base::RefCounted.826" }
%"class.base::RefCounted.826" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.827" = type { %"class.WTF::VectorBuffer.828" }
%"class.WTF::VectorBuffer.828" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.831 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.832", %"class.WTF::Vector.834" }
%"class.WTF::RefCounted.832" = type { %"class.base::RefCounted.833" }
%"class.base::RefCounted.833" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.834" = type { %"class.WTF::VectorBuffer.835" }
%"class.WTF::VectorBuffer.835" = type { %"class.WTF::VectorBufferBase.836" }
%"class.WTF::VectorBufferBase.836" = type { %"struct.std::__1::pair.837"*, i32, i32 }
%"struct.std::__1::pair.837" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.840 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.841", [4 x i8], %"class.WTF::Vector.843" }
%"class.WTF::RefCounted.841" = type { %"class.base::RefCounted.842" }
%"class.base::RefCounted.842" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.843" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.845", [28 x i8] }>
%"class.WTF::VectorBufferBase.845" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.848" = type { %"class.blink::PersistentBase.849" }
%"class.blink::PersistentBase.849" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.850" = type { %"class.blink::PersistentBase.851" }
%"class.blink::PersistentBase.851" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.854", %"class.blink::Member.856" }
%"class.blink::Member.854" = type { %"class.blink::MemberBase.855" }
%"class.blink::MemberBase.855" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.856" = type { %"class.blink::MemberBase.857" }
%"class.blink::MemberBase.857" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.858" = type { %class.scoped_refptr.859 }
%class.scoped_refptr.859 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.860", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.862" = type { %class.scoped_refptr.863 }
%class.scoped_refptr.863 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.864", [4 x i8], %"class.blink::DataRef.866", %"class.blink::DataRef.932", %"class.blink::TransformOperations", %class.scoped_refptr.840, %"class.blink::Persistent.1056", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.864" = type { %"class.base::RefCounted.865" }
%"class.base::RefCounted.865" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.866" = type { %class.scoped_refptr.867 }
%class.scoped_refptr.867 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.868", [4 x i8], %"class.blink::DataRef.870", %"class.blink::Persistent.908", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.868" = type { %"class.base::RefCounted.869" }
%"class.base::RefCounted.869" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.870" = type { %class.scoped_refptr.871 }
%class.scoped_refptr.871 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.872", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.890, %class.scoped_refptr.893, %class.scoped_refptr.896, %class.scoped_refptr.899, %class.scoped_refptr.900, %class.scoped_refptr.901, %"class.blink::Persistent.908", %"class.blink::Persistent.923", %"class.absl::optional.927", %"class.absl::optional.927", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.872" = type { %"class.base::RefCounted.873" }
%"class.base::RefCounted.873" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.874", %"class.std::__1::unique_ptr.879" }
%"class.WTF::Vector.874" = type { %"class.WTF::VectorBuffer.875" }
%"class.WTF::VectorBuffer.875" = type { %"class.WTF::VectorBufferBase.876" }
%"class.WTF::VectorBufferBase.876" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.879" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.882", %"class.WTF::Vector.874", i32, i32 }
%"class.WTF::Vector.882" = type { %"class.WTF::VectorBuffer.883" }
%"class.WTF::VectorBuffer.883" = type { %"class.WTF::VectorBufferBase.884" }
%"class.WTF::VectorBufferBase.884" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.890 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.891", [4 x i8] }>
%"class.WTF::RefCounted.891" = type { %"class.base::RefCounted.892" }
%"class.base::RefCounted.892" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.893 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.894", [4 x i8] }>
%"class.WTF::RefCounted.894" = type { %"class.base::RefCounted.895" }
%"class.base::RefCounted.895" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.896 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.897" }>
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.899 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.900 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.901 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.902", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.902" = type { %"class.base::RefCounted.903" }
%"class.base::RefCounted.903" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.904" }
%"class.blink::DataRef.904" = type { %class.scoped_refptr.905 }
%class.scoped_refptr.905 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.848", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.906" }
%"class.WTF::RefCounted.906" = type { %"class.base::RefCounted.907" }
%"class.base::RefCounted.907" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.923" = type { %"class.blink::PersistentBase.924" }
%"class.blink::PersistentBase.924" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.893, %"class.blink::Member.818", i32, [4 x i8] }>
%"class.absl::optional.927" = type { %"class.absl::optional_internal::optional_data.928" }
%"class.absl::optional_internal::optional_data.928" = type { %"class.absl::optional_internal::optional_data_base.929" }
%"class.absl::optional_internal::optional_data_base.929" = type { %"class.absl::optional_internal::optional_data_dtor_base.930" }
%"class.absl::optional_internal::optional_data_dtor_base.930" = type { i8, [3 x i8], %union.anon.931 }
%union.anon.931 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.908" = type { %"class.blink::PersistentBase.909" }
%"class.blink::PersistentBase.909" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.912" }
%"class.blink::HeapVector.912" = type { %"class.WTF::Vector.915" }
%"class.WTF::Vector.915" = type { %"class.WTF::VectorBuffer.916" }
%"class.WTF::VectorBuffer.916" = type { %"class.WTF::VectorBufferBase.917" }
%"class.WTF::VectorBufferBase.917" = type { %"class.blink::Member.918"*, i32, i32 }
%"class.blink::Member.918" = type { %"class.blink::MemberBase.919" }
%"class.blink::MemberBase.919" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.932" = type { %class.scoped_refptr.933 }
%class.scoped_refptr.933 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.934", %"class.blink::DataRef.936", %"class.blink::DataRef.940", %"class.blink::DataRef.949", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.968", %"class.std::__1::unique_ptr.979", %"class.std::__1::unique_ptr.1017", %"class.std::__1::unique_ptr.1028", %"class.std::__1::unique_ptr.1039", %"class.WTF::Vector.1045", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.934" = type { %"class.base::RefCounted.935" }
%"class.base::RefCounted.935" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.936" = type { %class.scoped_refptr.937 }
%class.scoped_refptr.937 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.938", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.938" = type { %"class.base::RefCounted.939" }
%"class.base::RefCounted.939" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.940" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.942", [4 x i8], %"class.WTF::Vector.944", i8, [7 x i8] }>
%"class.WTF::RefCounted.942" = type { %"class.base::RefCounted.943" }
%"class.base::RefCounted.943" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.944" = type { %"class.WTF::VectorBuffer.945" }
%"class.WTF::VectorBuffer.945" = type { %"class.WTF::VectorBufferBase.946" }
%"class.WTF::VectorBufferBase.946" = type { i32*, i32, i32 }
%"class.blink::DataRef.949" = type { %class.scoped_refptr.950 }
%class.scoped_refptr.950 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.951", [4 x i8], %"class.WTF::HashMap.953", %"class.WTF::HashMap.953", %"class.WTF::HashMap.953", %"class.WTF::HashMap.953", %"class.WTF::HashMap.953", %"class.WTF::HashMap.953", %"class.WTF::HashMap.958", %"class.WTF::HashMap.958", %"class.WTF::HashMap.958", %"class.WTF::HashMap.958", %"class.WTF::HashMap.963", %"class.WTF::Vector.874", %"class.WTF::Vector.874", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.951" = type { %"class.base::RefCounted.952" }
%"class.base::RefCounted.952" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.953" = type { %"class.WTF::HashTable.954" }
%"class.WTF::HashTable.954" = type <{ %"struct.WTF::KeyValuePair.957"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.957" = type { %"class.WTF::String", %"class.WTF::Vector.1420" }
%"class.WTF::Vector.1420" = type { %"class.WTF::VectorBuffer.1421" }
%"class.WTF::VectorBuffer.1421" = type { %"class.WTF::VectorBufferBase.1422" }
%"class.WTF::VectorBufferBase.1422" = type { i64*, i32, i32 }
%"class.WTF::HashMap.958" = type { %"class.WTF::HashTable.959" }
%"class.WTF::HashTable.959" = type <{ %"struct.WTF::KeyValuePair.962"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.962" = type { i64, %"class.WTF::Vector.1045" }
%"class.WTF::HashMap.963" = type { %"class.WTF::HashTable.964" }
%"class.WTF::HashTable.964" = type <{ %"struct.WTF::KeyValuePair.967"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.967" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.968" = type { %"class.std::__1::__compressed_pair.969" }
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.970" }
%"struct.std::__1::__compressed_pair_elem.970" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.971" }
%"class.WTF::HashMap.971" = type { %"class.WTF::HashTable.972" }
%"class.WTF::HashTable.972" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1425", %"class.absl::optional.1425", %"class.absl::optional.1425" }
%"class.absl::optional.1425" = type { %"class.absl::optional_internal::optional_data.1426" }
%"class.absl::optional_internal::optional_data.1426" = type { %"class.absl::optional_internal::optional_data_base.1427" }
%"class.absl::optional_internal::optional_data_base.1427" = type { %"class.absl::optional_internal::optional_data_dtor_base.1428" }
%"class.absl::optional_internal::optional_data_dtor_base.1428" = type { i8, %union.anon.1429 }
%union.anon.1429 = type { i32 }
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.827", %"class.WTF::Vector.994", %"class.WTF::Vector.982", %"class.WTF::Vector.999", %"class.WTF::Vector.1004", %"class.WTF::Vector.1009" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.982", %"class.WTF::Vector.982", %"class.WTF::Vector.987" }
%"class.WTF::Vector.987" = type { %"class.WTF::VectorBuffer.988" }
%"class.WTF::VectorBuffer.988" = type { %"class.WTF::VectorBufferBase.989" }
%"class.WTF::VectorBufferBase.989" = type { %class.scoped_refptr.990*, i32, i32 }
%class.scoped_refptr.990 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.991" }
%"class.base::RefCountedThreadSafe.991" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.994" = type { %"class.WTF::VectorBuffer.995" }
%"class.WTF::VectorBuffer.995" = type { %"class.WTF::VectorBufferBase.996" }
%"class.WTF::VectorBufferBase.996" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.982" = type { %"class.WTF::VectorBuffer.983" }
%"class.WTF::VectorBuffer.983" = type { %"class.WTF::VectorBufferBase.984" }
%"class.WTF::VectorBufferBase.984" = type { double*, i32, i32 }
%"class.WTF::Vector.999" = type { %"class.WTF::VectorBuffer.1000" }
%"class.WTF::VectorBuffer.1000" = type { %"class.WTF::VectorBufferBase.1001" }
%"class.WTF::VectorBufferBase.1001" = type { i32*, i32, i32 }
%"class.WTF::Vector.1004" = type { %"class.WTF::VectorBuffer.1005" }
%"class.WTF::VectorBuffer.1005" = type { %"class.WTF::VectorBufferBase.1006" }
%"class.WTF::VectorBufferBase.1006" = type { i32*, i32, i32 }
%"class.WTF::Vector.1009" = type { %"class.WTF::VectorBuffer.1010" }
%"class.WTF::VectorBuffer.1010" = type { %"class.WTF::VectorBufferBase.1011" }
%"class.WTF::VectorBufferBase.1011" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1020" }
%"class.WTF::Vector.1020" = type { %"class.WTF::VectorBuffer.1021" }
%"class.WTF::VectorBuffer.1021" = type { %"class.WTF::VectorBufferBase.1022" }
%"class.WTF::VectorBufferBase.1022" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1028" = type { %"class.std::__1::__compressed_pair.1029" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1031" }
%"class.WTF::Vector.1031" = type { %"class.WTF::VectorBuffer.1032" }
%"class.WTF::VectorBuffer.1032" = type { %"class.WTF::VectorBufferBase.1033" }
%"class.WTF::VectorBufferBase.1033" = type { %"class.blink::Persistent.848"*, i32, i32 }
%"class.std::__1::unique_ptr.1039" = type { %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.848", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1050" }
%"class.WTF::Vector.1050" = type { %"class.WTF::VectorBuffer.1051" }
%"class.WTF::VectorBuffer.1051" = type { %"class.WTF::VectorBufferBase.1052" }
%"class.WTF::VectorBufferBase.1052" = type { %class.scoped_refptr.1053*, i32, i32 }
%class.scoped_refptr.1053 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.897", [4 x i8] }>
%"class.blink::Persistent.1056" = type { %"class.blink::PersistentBase.1057" }
%"class.blink::PersistentBase.1057" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1060" }
%"class.blink::Member.1060" = type { %"class.blink::MemberBase.1061" }
%"class.blink::MemberBase.1061" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1062" = type { %class.scoped_refptr.1063 }
%class.scoped_refptr.1063 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1064", [4 x i8], %"class.blink::DataRef.1066", %"class.blink::DataRef.1070", %"class.blink::DataRef.1091", %"class.blink::DataRef.1109", %"class.blink::DataRef.1121", %"class.blink::DataRef.1125", %class.scoped_refptr.1095, i32, [4 x i8] }>
%"class.WTF::RefCounted.1064" = type { %"class.base::RefCounted.1065" }
%"class.base::RefCounted.1065" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1066" = type { %class.scoped_refptr.1067 }
%class.scoped_refptr.1067 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1068", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1068" = type { %"class.base::RefCounted.1069" }
%"class.base::RefCounted.1069" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1070" = type { %class.scoped_refptr.1071 }
%class.scoped_refptr.1071 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1072", %class.scoped_refptr.1074, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1072" = type { %"class.base::RefCounted.1073" }
%"class.base::RefCounted.1073" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1074 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1075", %"class.std::__1::unique_ptr.1081", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.894" }>
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1084, i32, %"struct.std::__1::atomic.339", %"struct.std::__1::atomic.339", i8, i8 }>
%class.sk_sp.1084 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1085, %class.SkTDArray.1086, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.104" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1085 = type { i8*, i32, i32 }
%class.SkTDArray.1086 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1087 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.104", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1087 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.329", [3 x i8] }
%"class.blink::DataRef.1091" = type { %class.scoped_refptr.1092 }
%class.scoped_refptr.1092 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1093", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1093" = type { %"class.base::RefCounted.1094" }
%"class.base::RefCounted.1094" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1095, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1109" = type { %class.scoped_refptr.1110 }
%class.scoped_refptr.1110 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1111", [4 x i8], %class.scoped_refptr.1113, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1111" = type { %"class.base::RefCounted.1112" }
%"class.base::RefCounted.1112" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1113 = type { %"class.base::RefCountedData.1114"* }
%"class.base::RefCountedData.1114" = type { %"class.base::RefCountedThreadSafe.1115", %"class.WTF::Vector.1116" }
%"class.base::RefCountedThreadSafe.1115" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1116" = type { %"class.WTF::VectorBuffer.1117" }
%"class.WTF::VectorBuffer.1117" = type { %"class.WTF::VectorBufferBase.1118" }
%"class.WTF::VectorBufferBase.1118" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1121" = type { %class.scoped_refptr.1122 }
%class.scoped_refptr.1122 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1123", %class.scoped_refptr.1095, %class.scoped_refptr.1095, %class.scoped_refptr.1095 }
%"class.WTF::RefCounted.1123" = type { %"class.base::RefCounted.1124" }
%"class.base::RefCounted.1124" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1125" = type { %class.scoped_refptr.1126 }
%class.scoped_refptr.1126 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1127", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1127" = type { %"class.base::RefCounted.1128" }
%"class.base::RefCounted.1128" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1095 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1096", %"class.blink::Persistent.1098", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1096" = type { %"class.base::RefCounted.1097" }
%"class.base::RefCounted.1097" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1098" = type { %"class.blink::PersistentBase.1099" }
%"class.blink::PersistentBase.1099" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.21", %"class.blink::HeapHashMap.1102" }
%"class.blink::HeapHashMap.1102" = type { %"class.WTF::HashMap.1105" }
%"class.WTF::HashMap.1105" = type { %"class.WTF::HashTable.1106" }
%"class.WTF::HashTable.1106" = type <{ %"struct.WTF::KeyValuePair.1108"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1108" = type opaque
%"class.blink::DataRef.1129" = type { %class.scoped_refptr.1130 }
%class.scoped_refptr.1130 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1131", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1131" = type { %"class.base::RefCounted.1132" }
%"class.base::RefCounted.1132" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1133" = type { %class.scoped_refptr.1134 }
%class.scoped_refptr.1134 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1135", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1135" = type { %"class.base::RefCounted.1136" }
%"class.base::RefCounted.1136" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1137" = type { %class.scoped_refptr.1138 }
%class.scoped_refptr.1138 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1139", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1139" = type { %"class.base::RefCounted.1140" }
%"class.base::RefCounted.1140" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1141" = type { %class.scoped_refptr.1142 }
%class.scoped_refptr.1142 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1143", %class.scoped_refptr.1145 }
%"class.WTF::RefCounted.1143" = type { %"class.base::RefCounted.1144" }
%"class.base::RefCounted.1144" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1145 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1362", %"class.blink::StyleVariables", %class.scoped_refptr.1145 }
%"class.WTF::RefCounted.1362" = type { %"class.base::RefCounted.1363" }
%"class.base::RefCounted.1363" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1146" = type { %"class.base::RefCounted.1147" }
%"class.base::RefCounted.1147" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1148" = type { %"class.std::__1::__compressed_pair.1149" }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.1150" }
%"struct.std::__1::__compressed_pair_elem.1150" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1151" }
%"class.std::__1::unique_ptr.1151" = type { %"class.std::__1::__compressed_pair.1152" }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"class.WTF::Vector.1154"* }
%"class.WTF::Vector.1154" = type { %"class.WTF::VectorBuffer.1440" }
%"class.WTF::VectorBuffer.1440" = type { %"class.WTF::VectorBufferBase.1441", [32 x i8] }
%"class.WTF::VectorBufferBase.1441" = type { %class.scoped_refptr.712*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1161" }
%"class.blink::MemberBase.1161" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1162" }
%"class.std::__1::unique_ptr.1162" = type { %"class.std::__1::__compressed_pair.1163" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1165", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1171", %"class.std::__1::unique_ptr.1294", i8, %"class.absl::optional.1300", %class.scoped_refptr.1276, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1305" }
%"class.std::__1::unique_ptr.1165" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1171" = type { %"class.std::__1::__compressed_pair.1172" }
%"class.std::__1::__compressed_pair.1172" = type { %"struct.std::__1::__compressed_pair_elem.1173" }
%"struct.std::__1::__compressed_pair_elem.1173" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1174, %class.scoped_refptr.1174, %class.scoped_refptr.1174, %class.scoped_refptr.1174, %class.scoped_refptr.1174, %class.scoped_refptr.1174, %class.scoped_refptr.1209, %class.scoped_refptr.1225, %class.scoped_refptr.1226, %class.scoped_refptr.1226, %class.scoped_refptr.1226, %class.scoped_refptr.1226, %class.scoped_refptr.1226, %class.scoped_refptr.1226, %class.scoped_refptr.1266, %class.scoped_refptr.1267, %class.scoped_refptr.1267, %class.scoped_refptr.1267, %class.scoped_refptr.1267, %class.scoped_refptr.1267, %class.scoped_refptr.1267, %class.scoped_refptr.1267, %class.scoped_refptr.1267, %class.scoped_refptr.1290 }
%class.scoped_refptr.1174 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1191" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1175", i8, i8, %class.scoped_refptr.1177, i32, i32 }
%"class.WTF::RefCounted.1175" = type { %"class.base::RefCounted.1176" }
%"class.base::RefCounted.1176" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1177 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1184, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1185", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1178" }
%"class.std::__1::unique_ptr.1178" = type { %"class.std::__1::__compressed_pair.1179" }
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.1180" }
%"struct.std::__1::__compressed_pair_elem.1180" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1184 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1210", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1210" = type { %"class.WTF::RefCounted.1211", i8, i8, %class.scoped_refptr.1184, i32, i32 }
%"class.WTF::RefCounted.1211" = type { %"class.base::RefCounted.1212" }
%"class.base::RefCounted.1212" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1213" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1213" = type { %"class.absl::optional_internal::optional_data.1214" }
%"class.absl::optional_internal::optional_data.1214" = type { %"class.absl::optional_internal::optional_data_base.1215" }
%"class.absl::optional_internal::optional_data_base.1215" = type { %"class.absl::optional_internal::optional_data_dtor_base.1216" }
%"class.absl::optional_internal::optional_data_dtor_base.1216" = type { i8, %union.anon.1217 }
%union.anon.1217 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1218", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1218" = type { %"class.std::__1::__vector_base.1219" }
%"class.std::__1::__vector_base.1219" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1220" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1220" = type { %"struct.std::__1::__compressed_pair_elem.1221" }
%"struct.std::__1::__compressed_pair_elem.1221" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1185" = type { %"class.std::__1::__compressed_pair.1186" }
%"class.std::__1::__compressed_pair.1186" = type { %"struct.std::__1::__compressed_pair_elem.1187" }
%"struct.std::__1::__compressed_pair_elem.1187" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.1191" = type { %"class.std::__1::__compressed_pair.1192" }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.1193" }
%"struct.std::__1::__compressed_pair_elem.1193" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1194", %"class.std::__1::unique_ptr.1200", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1194" = type { %"class.std::__1::__compressed_pair.1195" }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1200" = type { %"class.std::__1::__compressed_pair.1201" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.1202" }
%"struct.std::__1::__compressed_pair_elem.1202" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1209 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1225 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1226 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1227" }
%"class.blink::PaintPropertyNode.1227" = type { %"class.WTF::RefCounted.1228", i8, i8, %class.scoped_refptr.1230, i32, i32 }
%"class.WTF::RefCounted.1228" = type { %"class.base::RefCounted.1229" }
%"class.base::RefCounted.1229" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1230 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1177, %class.scoped_refptr.1231, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1253", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1231 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1268" }
%"class.blink::PaintPropertyNode.1268" = type { %"class.WTF::RefCounted.1269", i8, i8, %class.scoped_refptr.1231, i32, i32 }
%"class.WTF::RefCounted.1269" = type { %"class.base::RefCounted.1270" }
%"class.base::RefCounted.1270" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1232" }
%"class.std::__1::vector.1232" = type { %"class.std::__1::__vector_base.1233" }
%"class.std::__1::__vector_base.1233" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1248" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1234, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1241", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1234 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1235, i32, %"class.absl::optional.1236", i8, i32 }
%class.sk_sp.1235 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1236" = type { %"class.absl::optional_internal::optional_data.1237" }
%"class.absl::optional_internal::optional_data.1237" = type { %"class.absl::optional_internal::optional_data_base.1238" }
%"class.absl::optional_internal::optional_data_base.1238" = type { %"class.absl::optional_internal::optional_data_dtor_base.1239" }
%"class.absl::optional_internal::optional_data_dtor_base.1239" = type { i8, %union.anon.1240 }
%union.anon.1240 = type { %struct.SkRect }
%"class.std::__1::vector.1241" = type { %"class.std::__1::__vector_base.1242" }
%"class.std::__1::__vector_base.1242" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1243" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1243" = type { %"struct.std::__1::__compressed_pair_elem.1244" }
%"struct.std::__1::__compressed_pair_elem.1244" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.1249" }
%"struct.std::__1::__compressed_pair_elem.1249" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1253" = type { %"class.std::__1::__compressed_pair.1254" }
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.1255" }
%"struct.std::__1::__compressed_pair_elem.1255" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1259" }
%"class.std::__1::vector.1259" = type { %"class.std::__1::__vector_base.1260" }
%"class.std::__1::__vector_base.1260" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1261" }
%"class.std::__1::__compressed_pair.1261" = type { %"struct.std::__1::__compressed_pair_elem.1262" }
%"struct.std::__1::__compressed_pair_elem.1262" = type { i32* }
%class.scoped_refptr.1266 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1267 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1279" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1177, %"class.absl::optional.1271", %class.scoped_refptr.1276, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1271" = type { %"class.absl::optional_internal::optional_data.1272" }
%"class.absl::optional_internal::optional_data.1272" = type { %"class.absl::optional_internal::optional_data_base.1273" }
%"class.absl::optional_internal::optional_data_base.1273" = type { %"class.absl::optional_internal::optional_data_dtor_base.1274" }
%"class.absl::optional_internal::optional_data_dtor_base.1274" = type { i8, [3 x i8], %union.anon.1275 }
%union.anon.1275 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1279" = type { %"class.std::__1::__compressed_pair.1280" }
%"class.std::__1::__compressed_pair.1280" = type { %"struct.std::__1::__compressed_pair_elem.1281" }
%"struct.std::__1::__compressed_pair_elem.1281" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1282", i32, [4 x i8] }>
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1290 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1294" = type { %"class.std::__1::__compressed_pair.1295" }
%"class.std::__1::__compressed_pair.1295" = type { %"struct.std::__1::__compressed_pair_elem.1296" }
%"struct.std::__1::__compressed_pair_elem.1296" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1177, %class.scoped_refptr.1231, %class.scoped_refptr.1230 }
%"class.absl::optional.1300" = type { %"class.absl::optional_internal::optional_data.1301" }
%"class.absl::optional_internal::optional_data.1301" = type { %"class.absl::optional_internal::optional_data_base.1302" }
%"class.absl::optional_internal::optional_data_base.1302" = type { %"class.absl::optional_internal::optional_data_dtor_base.1303" }
%"class.absl::optional_internal::optional_data_dtor_base.1303" = type { i8, %union.anon.1304 }
%union.anon.1304 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1276 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1277", [4 x i8] }
%"class.WTF::RefCounted.1277" = type { %"class.base::RefCounted.1278" }
%"class.base::RefCounted.1278" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1305" = type { %"class.std::__1::__compressed_pair.1306" }
%"class.std::__1::__compressed_pair.1306" = type { %"struct.std::__1::__compressed_pair_elem.1307" }
%"struct.std::__1::__compressed_pair_elem.1307" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1314 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1315" = type { %"class.WTF::VectorBuffer.1316" }
%"class.WTF::VectorBuffer.1316" = type { %"class.WTF::VectorBufferBase.1317", [8 x i8] }
%"class.WTF::VectorBufferBase.1317" = type { %class.scoped_refptr.1314*, i32, i32 }
%"class.std::__1::unique_ptr.1320" = type { %"class.std::__1::__compressed_pair.1321" }
%"class.std::__1::__compressed_pair.1321" = type { %"struct.std::__1::__compressed_pair_elem.1322" }
%"struct.std::__1::__compressed_pair_elem.1322" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1323", %"class.absl::optional.1332", %"class.absl::optional.1337" }
%"class.absl::optional.1323" = type { %"class.absl::optional_internal::optional_data.1324" }
%"class.absl::optional_internal::optional_data.1324" = type { %"class.absl::optional_internal::optional_data_base.1325" }
%"class.absl::optional_internal::optional_data_base.1325" = type { %"class.absl::optional_internal::optional_data_dtor_base.1326" }
%"class.absl::optional_internal::optional_data_dtor_base.1326" = type { i8, %union.anon.1327 }
%union.anon.1327 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1332" = type { %"class.absl::optional_internal::optional_data.1333" }
%"class.absl::optional_internal::optional_data.1333" = type { %"class.absl::optional_internal::optional_data_base.1334" }
%"class.absl::optional_internal::optional_data_base.1334" = type { %"class.absl::optional_internal::optional_data_dtor_base.1335" }
%"class.absl::optional_internal::optional_data_dtor_base.1335" = type { i8, [3 x i8], %union.anon.1336 }
%union.anon.1336 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1337" = type { %"class.absl::optional_internal::optional_data.1338" }
%"class.absl::optional_internal::optional_data.1338" = type { %"class.absl::optional_internal::optional_data_base.1339" }
%"class.absl::optional_internal::optional_data_base.1339" = type { %"class.absl::optional_internal::optional_data_dtor_base.1340" }
%"class.absl::optional_internal::optional_data_dtor_base.1340" = type { i8, %union.anon.1341 }
%union.anon.1341 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1345 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type opaque
%"class.blink::Persistent.1346" = type { %"class.blink::PersistentBase.1347" }
%"class.blink::PersistentBase.1347" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1350", %"struct.blink::PhysicalRect", %"class.blink::Member.1360" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.WTF::HashSet.1353"* }
%"class.WTF::HashSet.1353" = type { %"class.WTF::HashTable.1354" }
%"class.WTF::HashTable.1354" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1360" = type { %"class.blink::MemberBase.1361" }
%"class.blink::MemberBase.1361" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.1382", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.1400" }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1368", %"class.blink::Member.1370", %"class.blink::Member.1372", %"class.blink::Member.1374", %"class.WTF::Vector.100", i16, %class.scoped_refptr.335 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1368" = type { %"class.blink::MemberBase.1369" }
%"class.blink::MemberBase.1369" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1370" = type { %"class.blink::MemberBase.1371" }
%"class.blink::MemberBase.1371" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1372" = type { %"class.blink::MemberBase.1373" }
%"class.blink::MemberBase.1373" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1374" = type { %"class.blink::MemberBase.1375" }
%"class.blink::MemberBase.1375" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.1376", %"class.blink::Member.1378", %"class.blink::Member.1378", i8, [7 x i8] }>
%"class.blink::Member.1376" = type { %"class.blink::MemberBase.1377" }
%"class.blink::MemberBase.1377" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::Member.1378" = type { %"class.blink::MemberBase.1379" }
%"class.blink::MemberBase.1379" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1380", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1407", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.21" }
%"class.blink::Member.1380" = type { %"class.blink::MemberBase.1381" }
%"class.blink::MemberBase.1381" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1407" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1408", { i64, i64 } }
%"class.blink::WeakMember.1408" = type { %"class.blink::MemberBase.1379" }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.1380", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.1382" = type { %"class.std::__1::__compressed_pair.1383" }
%"class.std::__1::__compressed_pair.1383" = type { %"struct.std::__1::__compressed_pair_elem.1384" }
%"struct.std::__1::__compressed_pair_elem.1384" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.1385", %"class.absl::optional.1213", i8, i8, %"class.WTF::Vector.1390" }
%"class.WTF::HashMap.1385" = type { %"class.WTF::HashTable.1386" }
%"class.WTF::HashTable.1386" = type <{ %"struct.WTF::KeyValuePair.1389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1389" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.WTF::Vector.1390" = type { %"class.WTF::VectorBuffer.1391" }
%"class.WTF::VectorBuffer.1391" = type { %"class.WTF::VectorBufferBase.1392" }
%"class.WTF::VectorBufferBase.1392" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1398" }
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1398" }
%"class.absl::optional.1400" = type { %"class.absl::optional_internal::optional_data.1401" }
%"class.absl::optional_internal::optional_data.1401" = type { %"class.absl::optional_internal::optional_data_base.1402" }
%"class.absl::optional_internal::optional_data_base.1402" = type { %"class.absl::optional_internal::optional_data_dtor_base.1403" }
%"class.absl::optional_internal::optional_data_dtor_base.1403" = type { i8, %union.anon.1404 }
%union.anon.1404 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebPluginContainer" = type { i32 (...)** }
%"class.blink::WebPluginContainerImpl" = type <{ %"class.blink::EmbeddedContentView.base", [5 x i8], %"class.blink::WebPluginContainer", %"class.blink::ThreadState::PrefinalizerRegistration.1411", [7 x i8], %"class.blink::Member.1412", %"class.blink::Member.1414", %"class.blink::WebPlugin"*, %"class.cc::Layer"*, i32, i8, [3 x i8] }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration.1411" = type { i8 }
%"class.blink::Member.1412" = type { %"class.blink::MemberBase.1413" }
%"class.blink::MemberBase.1413" = type { %"class.blink::HTMLPlugInElement"* }
%"class.blink::HTMLPlugInElement" = type opaque
%"class.blink::Member.1414" = type { %"class.blink::MemberBase.1415" }
%"class.blink::MemberBase.1415" = type { %"class.blink::WebPluginContainerImpl::MouseLockLostListener"* }
%"class.blink::WebPluginContainerImpl::MouseLockLostListener" = type opaque
%"class.blink::WebPlugin" = type opaque
%"class.cc::Layer" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::PersistentLocation" = type { %"class.base::Location" }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink10WebElementD0Ev = comdat any

$_ZN5blink14PtrStorageImplINS_4NodeELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_4NodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_4NodeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_4NodeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink4NodeEFvPKNS3_5EventENS3_27SimulatedClickCreationScopeEEJNS3_14WeakPersistentIS4_EEDnS8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink4NodeEFvPKNS2_5EventENS2_27SimulatedClickCreationScopeEEJNS2_14WeakPersistentIS3_EEDnS7_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink4NodeEFvPKNS3_5EventENS3_27SimulatedClickCreationScopeEEJNS3_14WeakPersistentIS4_EEDnS8_EEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZTVN5blink10WebElementE = comdat any

@_ZTVN5blink7WebNodeE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebNode"*)* @_ZN5blink7WebNodeD2Ev to i8*), i8* bitcast (void (%"class.blink::WebNode"*)* @_ZN5blink7WebNodeD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [14 x i8] c"SimulateClick\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/core/exported/web_node.cc\00", align 1
@_ZN5blink10html_names17xhtmlNamespaceURIE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.2 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@_ZTVN5blink10WebElementE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebNode"*)* @_ZN5blink7WebNodeD2Ev to i8*), i8* bitcast (void (%"class.blink::WebElement"*)* @_ZN5blink10WebElementD0Ev to i8*)] }, comdat, align 8
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.7 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

@_ZN5blink7WebNodeC1Ev = hidden unnamed_addr alias void (%"class.blink::WebNode"*), void (%"class.blink::WebNode"*)* @_ZN5blink7WebNodeC2Ev
@_ZN5blink7WebNodeC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::WebNode"*, %"class.blink::WebNode"*), void (%"class.blink::WebNode"*, %"class.blink::WebNode"*)* @_ZN5blink7WebNodeC2ERKS0_
@_ZN5blink7WebNodeD1Ev = hidden unnamed_addr alias void (%"class.blink::WebNode"*), void (%"class.blink::WebNode"*)* @_ZN5blink7WebNodeD2Ev
@_ZN5blink7WebNodeC1EPNS_4NodeE = hidden unnamed_addr alias void (%"class.blink::WebNode"*, %"class.blink::Node"*), void (%"class.blink::WebNode"*, %"class.blink::Node"*)* @_ZN5blink7WebNodeC2EPNS_4NodeE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink7WebNodeC2Ev(%"class.blink::WebNode"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink7WebNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1, i32 0
  store i8* null, i8** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7WebNodeC2ERKS0_(%"class.blink::WebNode"*, %"class.blink::WebNode"* nocapture readonly dereferenceable(16)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink7WebNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::WebPrivatePtr", %"class.blink::WebPrivatePtr"* %4, i64 0, i32 0
  store i8* null, i8** %5, align 8
  %6 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %1, i64 0, i32 1
  %7 = bitcast %"class.blink::WebPrivatePtr"* %4 to %"class.blink::PtrStorageImpl"*
  %8 = bitcast %"class.blink::WebPrivatePtr"* %6 to %"class.blink::Persistent.1453"**
  %9 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %8, align 8
  %10 = icmp eq %"class.blink::Persistent.1453"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %9, i64 0, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi %"class.blink::Node"* [ %13, %11 ], [ null, %2 ]
  tail call void @_ZN5blink14PtrStorageImplINS_4NodeELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %7, %"class.blink::Node"* %15) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7WebNode6AssignERKS0_(%"class.blink::WebNode"*, %"class.blink::WebNode"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::WebPrivatePtr"* %4 to %"class.blink::PtrStorageImpl"*
  %6 = bitcast %"class.blink::WebPrivatePtr"* %3 to %"class.blink::Persistent.1453"**
  %7 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %6, align 8
  %8 = icmp eq %"class.blink::Persistent.1453"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %7, i64 0, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi %"class.blink::Node"* [ %11, %9 ], [ null, %2 ]
  tail call void @_ZN5blink14PtrStorageImplINS_4NodeELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %5, %"class.blink::Node"* %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blink::WebNode"* @_ZN5blink7WebNodeaSERKS0_(%"class.blink::WebNode"* returned, %"class.blink::WebNode"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::WebPrivatePtr"* %4 to %"class.blink::PtrStorageImpl"*
  %6 = bitcast %"class.blink::WebPrivatePtr"* %3 to %"class.blink::Persistent.1453"**
  %7 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %6, align 8
  %8 = icmp eq %"class.blink::Persistent.1453"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %7, i64 0, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi %"class.blink::Node"* [ %11, %9 ], [ null, %2 ]
  tail call void @_ZN5blink14PtrStorageImplINS_4NodeELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %5, %"class.blink::Node"* %13) #10
  ret %"class.blink::WebNode"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7WebNode5ResetEv(%"class.blink::WebNode"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::WebPrivatePtr"* %2 to %"class.blink::Persistent.1453"**
  %4 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent.1453"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %4, i64 0, i32 0, i32 1, i32 0
  %8 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %7, align 8
  %9 = icmp eq %"class.blink::PersistentNode"* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %6
  %11 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %12 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %11, i64 0, i32 0, i32 0
  %13 = bitcast %"class.blink::PersistentRegion"* %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.blink::PersistentNode"* %8 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %8, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %16, align 8
  store %"class.blink::PersistentNode"* %8, %"class.blink::PersistentNode"** %12, align 8
  br label %17

17:                                               ; preds = %10, %6
  %18 = bitcast %"class.blink::Persistent.1453"* %4 to i8*
  tail call void @free(i8* %18) #10
  br label %19

19:                                               ; preds = %1, %17
  store %"class.blink::Persistent.1453"* null, %"class.blink::Persistent.1453"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7WebNodeD0Ev(%"class.blink::WebNode"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink7WebNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::WebPrivatePtr"* %3 to %"class.blink::Persistent.1453"**
  %5 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %4, align 8
  %6 = icmp eq %"class.blink::Persistent.1453"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %5, i64 0, i32 0, i32 1, i32 0
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %13 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %12, i64 0, i32 0, i32 0
  %14 = bitcast %"class.blink::PersistentRegion"* %12 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.blink::PersistentNode"* %9 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %9, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %17, align 8
  store %"class.blink::PersistentNode"* %9, %"class.blink::PersistentNode"** %13, align 8
  br label %18

18:                                               ; preds = %11, %7
  %19 = bitcast %"class.blink::Persistent.1453"* %5 to i8*
  tail call void @free(i8* %19) #10
  br label %20

20:                                               ; preds = %1, %18
  %21 = bitcast %"class.blink::WebNode"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink7WebNode6EqualsERKS0_(%"class.blink::WebNode"* nocapture readonly, %"class.blink::WebNode"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::WebPrivatePtr"* %3 to %"class.blink::Persistent.1453"**
  %5 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %4, align 8
  %6 = icmp eq %"class.blink::Persistent.1453"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %"class.blink::Node"* [ %9, %7 ], [ null, %2 ]
  %12 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %1, i64 0, i32 1
  %13 = bitcast %"class.blink::WebPrivatePtr"* %12 to %"class.blink::Persistent.1453"**
  %14 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %13, align 8
  %15 = icmp eq %"class.blink::Persistent.1453"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %14, i64 0, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  br label %19

19:                                               ; preds = %10, %16
  %20 = phi %"class.blink::Node"* [ %18, %16 ], [ null, %10 ]
  %21 = icmp eq %"class.blink::Node"* %11, %20
  ret i1 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink7WebNode8LessThanERKS0_(%"class.blink::WebNode"* nocapture readonly, %"class.blink::WebNode"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::WebPrivatePtr"* %3 to %"class.blink::Persistent.1453"**
  %5 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %4, align 8
  %6 = icmp eq %"class.blink::Persistent.1453"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %"class.blink::Node"* [ %9, %7 ], [ null, %2 ]
  %12 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %1, i64 0, i32 1
  %13 = bitcast %"class.blink::WebPrivatePtr"* %12 to %"class.blink::Persistent.1453"**
  %14 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %13, align 8
  %15 = icmp eq %"class.blink::Persistent.1453"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %14, i64 0, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  br label %19

19:                                               ; preds = %10, %16
  %20 = phi %"class.blink::Node"* [ %18, %16 ], [ null, %10 ]
  %21 = icmp ult %"class.blink::Node"* %11, %20
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink7WebNode10ParentNodeEv(%"class.blink::WebNode"* noalias sret, %"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %1, i64 0, i32 1
  %4 = bitcast %"class.blink::WebPrivatePtr"* %3 to %"class.blink::Persistent.1453"**
  %5 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %4, align 8
  %6 = icmp eq %"class.blink::Persistent.1453"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %"class.blink::Node"* [ %9, %7 ], [ null, %2 ]
  %12 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %11) #10
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink7WebNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.blink::WebPrivatePtr", %"class.blink::WebPrivatePtr"* %15, i64 0, i32 0
  store i8* null, i8** %16, align 8
  %17 = bitcast %"class.blink::WebPrivatePtr"* %15 to %"class.blink::PtrStorageImpl"*
  tail call void @_ZN5blink14PtrStorageImplINS_4NodeELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %17, %"class.blink::Node"* %13) #10
  ret void
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink7WebNode9NodeValueEv(%"class.blink::WebString"* noalias sret, %"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %1, i64 0, i32 1
  %6 = bitcast %"class.blink::WebPrivatePtr"* %5 to %"class.blink::Persistent.1453"**
  %7 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %6, align 8
  %8 = icmp eq %"class.blink::Persistent.1453"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %7, i64 0, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = bitcast %"class.blink::Node"* %11 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** [ %12, %9 ], [ null, %2 ]
  %15 = phi %"class.blink::Node"* [ %11, %9 ], [ null, %2 ]
  %16 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %14, align 8
  %17 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %16, i64 28
  %18 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %17, align 8
  %19 = tail call %"class.WTF::StringImpl"* %18(%"class.blink::Node"* %15) #10
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %20, align 8
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #10
  br label %36

36:                                               ; preds = %13, %32, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink7WebNode11GetDocumentEv(%"class.blink::WebDocument"* noalias sret, %"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %1, i64 0, i32 1
  %4 = bitcast %"class.blink::WebPrivatePtr"* %3 to %"class.blink::Persistent.1453"**
  %5 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %4, align 8
  %6 = icmp eq %"class.blink::Persistent.1453"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %"class.blink::Node"* [ %9, %7 ], [ null, %2 ]
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  tail call void @_ZN5blink11WebDocumentC1EPNS_8DocumentE(%"class.blink::WebDocument"* %0, %"class.blink::Document"* %15) #10
  ret void
}

declare void @_ZN5blink11WebDocumentC1EPNS_8DocumentE(%"class.blink::WebDocument"*, %"class.blink::Document"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink7WebNode10FirstChildEv(%"class.blink::WebNode"* noalias sret, %"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %1, i64 0, i32 1
  %4 = bitcast %"class.blink::WebPrivatePtr"* %3 to %"class.blink::Persistent.1453"**
  %5 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %4, align 8
  %6 = icmp eq %"class.blink::Persistent.1453"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %20, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1
  %18 = bitcast %"class.blink::Node"* %17 to %"class.blink::Node"**
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  br label %20

20:                                               ; preds = %2, %7, %11, %16
  %21 = phi %"class.blink::Node"* [ %19, %16 ], [ null, %7 ], [ null, %11 ], [ null, %2 ]
  %22 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink7WebNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.blink::WebPrivatePtr", %"class.blink::WebPrivatePtr"* %23, i64 0, i32 0
  store i8* null, i8** %24, align 8
  %25 = bitcast %"class.blink::WebPrivatePtr"* %23 to %"class.blink::PtrStorageImpl"*
  tail call void @_ZN5blink14PtrStorageImplINS_4NodeELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %25, %"class.blink::Node"* %21) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink7WebNode9LastChildEv(%"class.blink::WebNode"* noalias sret, %"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %1, i64 0, i32 1
  %4 = bitcast %"class.blink::WebPrivatePtr"* %3 to %"class.blink::Persistent.1453"**
  %5 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %4, align 8
  %6 = icmp eq %"class.blink::Persistent.1453"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %20, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1, i32 0, i32 0, i32 1
  %18 = bitcast %"class.blink::TraceWrapperV8Reference"* %17 to %"class.blink::Node"**
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  br label %20

20:                                               ; preds = %2, %7, %11, %16
  %21 = phi %"class.blink::Node"* [ %19, %16 ], [ null, %7 ], [ null, %11 ], [ null, %2 ]
  %22 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink7WebNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.blink::WebPrivatePtr", %"class.blink::WebPrivatePtr"* %23, i64 0, i32 0
  store i8* null, i8** %24, align 8
  %25 = bitcast %"class.blink::WebPrivatePtr"* %23 to %"class.blink::PtrStorageImpl"*
  tail call void @_ZN5blink14PtrStorageImplINS_4NodeELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %25, %"class.blink::Node"* %21) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink7WebNode15PreviousSiblingEv(%"class.blink::WebNode"* noalias sret, %"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %1, i64 0, i32 1
  %4 = bitcast %"class.blink::WebPrivatePtr"* %3 to %"class.blink::Persistent.1453"**
  %5 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %4, align 8
  %6 = icmp eq %"class.blink::Persistent.1453"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %"class.blink::Node"* [ %9, %7 ], [ null, %2 ]
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 0, i32 4, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink7WebNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.blink::WebPrivatePtr", %"class.blink::WebPrivatePtr"* %15, i64 0, i32 0
  store i8* null, i8** %16, align 8
  %17 = bitcast %"class.blink::WebPrivatePtr"* %15 to %"class.blink::PtrStorageImpl"*
  tail call void @_ZN5blink14PtrStorageImplINS_4NodeELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %17, %"class.blink::Node"* %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink7WebNode11NextSiblingEv(%"class.blink::WebNode"* noalias sret, %"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %1, i64 0, i32 1
  %4 = bitcast %"class.blink::WebPrivatePtr"* %3 to %"class.blink::Persistent.1453"**
  %5 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %4, align 8
  %6 = icmp eq %"class.blink::Persistent.1453"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %"class.blink::Node"* [ %9, %7 ], [ null, %2 ]
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 0, i32 5, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink7WebNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.blink::WebPrivatePtr", %"class.blink::WebPrivatePtr"* %15, i64 0, i32 0
  store i8* null, i8** %16, align 8
  %17 = bitcast %"class.blink::WebPrivatePtr"* %15 to %"class.blink::PtrStorageImpl"*
  tail call void @_ZN5blink14PtrStorageImplINS_4NodeELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %17, %"class.blink::Node"* %13) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink7WebNode6IsNullEv(%"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink7WebNode6IsLinkEv(%"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::WebPrivatePtr"* %2 to %"class.blink::Persistent.1453"**
  %4 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent.1453"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi %"class.blink::Node"* [ %8, %6 ], [ null, %1 ]
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 64
  %14 = icmp ne i32 %13, 0
  ret i1 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink7WebNode10IsTextNodeEv(%"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::WebPrivatePtr"* %2 to %"class.blink::Persistent.1453"**
  %4 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent.1453"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi %"class.blink::Node"* [ %8, %6 ], [ null, %1 ]
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 12
  %14 = icmp eq i32 %13, 4
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink7WebNode13IsCommentNodeEv(%"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::WebPrivatePtr"* %2 to %"class.blink::Persistent.1453"**
  %4 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent.1453"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = bitcast %"class.blink::Node"* %8 to i32 (%"class.blink::Node"*)***
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i32 (%"class.blink::Node"*)*** [ %9, %6 ], [ null, %1 ]
  %12 = phi %"class.blink::Node"* [ %8, %6 ], [ null, %1 ]
  %13 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %11, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %13, i64 30
  %15 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::Node"* %12) #10
  %17 = icmp eq i32 %16, 8
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink7WebNode11IsFocusableEv(%"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::WebPrivatePtr"* %2 to %"class.blink::Persistent.1453"**
  %4 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent.1453"* %4, null
  br i1 %5, label %36, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 12
  %14 = icmp eq i32 %13, 0
  %15 = bitcast %"class.blink::Node"* %8 to %"class.blink::Element"*
  br i1 %14, label %16, label %36

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = tail call zeroext i1 @_ZNK5blink8Document33HaveRenderBlockingResourcesLoadedEv(%"class.blink::Document"* %20) #10
  br i1 %21, label %22, label %36

22:                                               ; preds = %16
  %23 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %3, align 8
  %24 = icmp eq %"class.blink::Persistent.1453"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %23, i64 0, i32 0, i32 0
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %27, i64 0, i32 3, i32 0, i32 0
  br label %29

29:                                               ; preds = %22, %25
  %30 = phi %"class.blink::TreeScope"** [ %28, %25 ], [ inttoptr (i64 32 to %"class.blink::TreeScope"**), %22 ]
  %31 = phi %"class.blink::Node"* [ %27, %25 ], [ null, %22 ]
  %32 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %30, align 8
  %33 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %32, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::Document"*, %"class.blink::Document"** %33, align 8
  tail call void @_ZN5blink8Document31UpdateStyleAndLayoutTreeForNodeEPKNS_4NodeE(%"class.blink::Document"* %34, %"class.blink::Node"* %31) #10
  %35 = tail call zeroext i1 @_ZNK5blink7Element11IsFocusableEv(%"class.blink::Element"* nonnull %15) #10
  br label %36

36:                                               ; preds = %10, %1, %6, %16, %29
  %37 = phi i1 [ %35, %29 ], [ false, %16 ], [ false, %10 ], [ false, %6 ], [ false, %1 ]
  ret i1 %37
}

declare zeroext i1 @_ZNK5blink8Document33HaveRenderBlockingResourcesLoadedEv(%"class.blink::Document"*) local_unnamed_addr #4

declare void @_ZN5blink8Document31UpdateStyleAndLayoutTreeForNodeEPKNS_4NodeE(%"class.blink::Document"*, %"class.blink::Node"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink7Element11IsFocusableEv(%"class.blink::Element"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink7WebNode17IsContentEditableEv(%"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::WebPrivatePtr"* %2 to %"class.blink::Persistent.1453"**
  %4 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent.1453"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi %"class.blink::Node"* [ %8, %6 ], [ null, %1 ]
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  tail call void @_ZN5blink8Document24UpdateStyleAndLayoutTreeEv(%"class.blink::Document"* %14) #10
  %15 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %3, align 8
  %16 = icmp eq %"class.blink::Persistent.1453"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %15, i64 0, i32 0, i32 0
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi %"class.blink::Node"* [ %19, %17 ], [ null, %9 ]
  %22 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %21) #10
  ret i1 %22
}

declare void @_ZN5blink8Document24UpdateStyleAndLayoutTreeEv(%"class.blink::Document"*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink7WebNode36IsInsideFocusableElementOrARIAWidgetEv(%"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::WebPrivatePtr"* %2 to %"class.blink::Persistent.1453"**
  %4 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent.1453"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi %"class.blink::Node"* [ %8, %6 ], [ null, %1 ]
  %11 = tail call zeroext i1 @_ZN5blink13AXObjectCache36IsInsideFocusableElementOrARIAWidgetERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %10) #10
  ret i1 %11
}

declare zeroext i1 @_ZN5blink13AXObjectCache36IsInsideFocusableElementOrARIAWidgetERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN5blink7WebNode9ToV8ValueEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::WebNode"* nocapture readonly, %"class.v8::Object"* nocapture readnone, %"class.v8::Isolate"*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::WebPrivatePtr"* %4 to %"class.blink::Persistent.1453"**
  %6 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %5, align 8
  %7 = icmp eq %"class.blink::Persistent.1453"* %6, null
  br i1 %7, label %34, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %34, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 0, i32 0
  %14 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #10
  %15 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %14) #10
  %16 = tail call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %13, %"class.v8::Isolate"* %2) #10
  %17 = ptrtoint %"class.v8::Object"* %16 to i64
  %18 = icmp eq %"class.v8::Object"* %16, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %12
  %20 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %15) #10
  %21 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %20) #10
  %22 = bitcast %"class.blink::Node"* %10 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %23 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %23, i64 7
  %25 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %24, align 8
  %26 = tail call %"class.v8::Value"* %25(%"class.blink::ScriptWrappable"* nonnull %13, %"class.blink::ScriptState"* %21) #10
  %27 = icmp eq %"class.v8::Value"* %26, null
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @_ZN2v82V812ToLocalEmptyEv() #10
  br label %29

29:                                               ; preds = %28, %19
  %30 = ptrtoint %"class.v8::Value"* %26 to i64
  br label %31

31:                                               ; preds = %12, %29
  %32 = phi i64 [ %30, %29 ], [ %17, %12 ]
  %33 = inttoptr i64 %32 to %"class.v8::Value"*
  br label %34

34:                                               ; preds = %3, %8, %31
  %35 = phi %"class.v8::Value"* [ %33, %31 ], [ null, %8 ], [ null, %3 ]
  ret %"class.v8::Value"* %35
}

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #4

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink7WebNode13IsElementNodeEv(%"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::WebPrivatePtr"* %2 to %"class.blink::Persistent.1453"**
  %4 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent.1453"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi %"class.blink::Node"* [ %8, %6 ], [ null, %1 ]
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 12
  %14 = icmp eq i32 %13, 0
  ret i1 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink7WebNode14IsDocumentNodeEv(%"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::WebPrivatePtr"* %2 to %"class.blink::Persistent.1453"**
  %4 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent.1453"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi %"class.blink::Node"* [ %8, %6 ], [ null, %1 ]
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %14, i64 0, i32 0, i32 0
  %16 = icmp eq %"class.blink::Node"* %15, %10
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink7WebNode18IsDocumentTypeNodeEv(%"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::WebPrivatePtr"* %2 to %"class.blink::Persistent.1453"**
  %4 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent.1453"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = bitcast %"class.blink::Node"* %8 to i32 (%"class.blink::Node"*)***
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i32 (%"class.blink::Node"*)*** [ %9, %6 ], [ null, %1 ]
  %12 = phi %"class.blink::Node"* [ %8, %6 ], [ null, %1 ]
  %13 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %11, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %13, i64 30
  %15 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::Node"* %12) #10
  %17 = icmp eq i32 %16, 10
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7WebNode13SimulateClickEv(%"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.blink::WeakPersistent", align 8
  %5 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %6 = bitcast %"class.blink::WebPrivatePtr"* %5 to %"class.blink::Persistent.1453"**
  %7 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %6, align 8
  %8 = icmp eq %"class.blink::Persistent.1453"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %7, i64 0, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = bitcast %"class.blink::Node"* %11 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  br label %13

13:                                               ; preds = %1, %9
  %14 = phi %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** [ %12, %9 ], [ null, %1 ]
  %15 = phi %"class.blink::Node"* [ %11, %9 ], [ null, %1 ]
  %16 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %14, align 8
  %17 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %16, i64 10
  %18 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %17, align 8
  %19 = tail call %"class.blink::ExecutionContext"* %18(%"class.blink::Node"* %15) #10
  %20 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %19, i64 0, i32 1
  %21 = bitcast %"class.blink::MojoBindingContext"* %20 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %22 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %21, align 8
  %23 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %22, i64 6
  %24 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %23, align 8
  %25 = tail call %"class.base::SingleThreadTaskRunner"* %24(%"class.blink::MojoBindingContext"* %20, i8 zeroext 2) #10
  %26 = bitcast %"class.base::SingleThreadTaskRunner"* %25 to %"class.base::TaskRunner"*
  %27 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 179) #10
  %28 = bitcast %"class.blink::WeakPersistent"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #10
  %29 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %6, align 8
  %30 = icmp eq %"class.blink::Persistent.1453"* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %13
  %32 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %29, i64 0, i32 0, i32 0
  %33 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  br label %34

34:                                               ; preds = %13, %31
  %35 = phi %"class.blink::Node"* [ %33, %31 ], [ null, %13 ]
  %36 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %4, i64 0, i32 0
  %37 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %4, i64 0, i32 0, i32 0
  store %"class.blink::Node"* %35, %"class.blink::Node"** %37, align 8, !alias.scope !3
  %38 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %4, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %38, align 8, !alias.scope !3
  %39 = ptrtoint %"class.blink::Node"* %35 to i64
  switch i64 %39, label %40 [
    i64 0, label %55
    i64 -1, label %55
  ]

40:                                               ; preds = %34
  %41 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 24) to %"class.blink::PersistentRegion"**), align 8, !noalias !3
  %42 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %42, align 8, !noalias !3
  %44 = icmp eq %"class.blink::PersistentNode"* %43, null
  br i1 %44, label %45, label %48, !prof !2

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %41, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %46) #10
  %47 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %42, align 8
  br label %48

48:                                               ; preds = %45, %40
  %49 = phi %"class.blink::PersistentNode"* [ %47, %45 ], [ %43, %40 ]
  %50 = bitcast %"class.blink::PersistentNode"* %49 to i64*
  %51 = load i64, i64* %50, align 8, !noalias !3
  %52 = bitcast %"class.blink::PersistentRegion"* %41 to i64*
  store i64 %51, i64* %52, align 8, !noalias !3
  %53 = bitcast %"class.blink::PersistentNode"* %49 to %"class.blink::PersistentBase.675"**
  store %"class.blink::PersistentBase.675"* %36, %"class.blink::PersistentBase.675"** %53, align 8, !noalias !3
  %54 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %49, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_4NodeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %54, align 8
  store %"class.blink::PersistentNode"* %49, %"class.blink::PersistentNode"** %38, align 8, !alias.scope !3
  br label %55

55:                                               ; preds = %34, %34, %48
  %56 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %56, align 8, !alias.scope !6
  %57 = call i8* @_Znwm(i64 80) #11, !noalias !9
  %58 = bitcast i8* %57 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %58, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink4NodeEFvPKNS3_5EventENS3_27SimulatedClickCreationScopeEEJNS3_14WeakPersistentIS4_EEDnS8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink4NodeEFvPKNS2_5EventENS2_27SimulatedClickCreationScopeEEJNS2_14WeakPersistentIS3_EEDnS7_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink4NodeEFvPKNS3_5EventENS3_27SimulatedClickCreationScopeEEJNS3_14WeakPersistentIS4_EEDnS8_EEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE) #10, !noalias !9
  %59 = getelementptr inbounds i8, i8* %57, i64 32
  %60 = bitcast i8* %59 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::Node"*, %"class.blink::Event"*, i32)* @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE to i64), i64 0>, <2 x i64>* %60, align 8, !noalias !9
  %61 = getelementptr inbounds i8, i8* %57, i64 48
  %62 = bitcast %"class.blink::WeakPersistent"* %4 to i64*
  %63 = load i64, i64* %62, align 8, !noalias !9
  %64 = bitcast i8* %61 to i64*
  store i64 %63, i64* %64, align 8, !noalias !9
  %65 = getelementptr inbounds i8, i8* %57, i64 56
  %66 = bitcast i8* %65 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %66, align 8, !noalias !9
  switch i64 %63, label %67 [
    i64 0, label %82
    i64 -1, label %82
  ]

67:                                               ; preds = %55
  %68 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 24) to %"class.blink::PersistentRegion"**), align 8, !noalias !9
  %69 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %69, align 8, !noalias !9
  %71 = icmp eq %"class.blink::PersistentNode"* %70, null
  br i1 %71, label %72, label %75, !prof !2

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %68, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %73) #10, !noalias !9
  %74 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %69, align 8, !noalias !9
  br label %75

75:                                               ; preds = %72, %67
  %76 = phi %"class.blink::PersistentNode"* [ %74, %72 ], [ %70, %67 ]
  %77 = bitcast %"class.blink::PersistentNode"* %76 to i64*
  %78 = load i64, i64* %77, align 8, !noalias !9
  %79 = bitcast %"class.blink::PersistentRegion"* %68 to i64*
  store i64 %78, i64* %79, align 8, !noalias !9
  %80 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %76, i64 0, i32 0
  store i8* %61, i8** %80, align 8, !noalias !9
  %81 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %76, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_4NodeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %81, align 8, !noalias !9
  store %"class.blink::PersistentNode"* %76, %"class.blink::PersistentNode"** %66, align 8, !noalias !9
  br label %82

82:                                               ; preds = %55, %55, %75
  %83 = getelementptr inbounds i8, i8* %57, i64 64
  %84 = bitcast i8* %83 to i8**
  store i8* null, i8** %84, align 8, !noalias !9
  %85 = getelementptr inbounds i8, i8* %57, i64 72
  %86 = bitcast i8* %85 to i32*
  store i32 1, i32* %86, align 4, !noalias !9
  %87 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %57, i8** %87, align 8, !alias.scope !9
  %88 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %26, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3) #10
  %89 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %89) #10
  %90 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %38, align 8
  %91 = icmp eq %"class.blink::PersistentNode"* %90, null
  br i1 %91, label %99, label %92

92:                                               ; preds = %82
  %93 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 24) to %"class.blink::PersistentRegion"**), align 8
  %94 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %93, i64 0, i32 0, i32 0
  %95 = bitcast %"class.blink::PersistentRegion"* %93 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.blink::PersistentNode"* %90 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %90, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %98, align 8
  store %"class.blink::PersistentNode"* %90, %"class.blink::PersistentNode"** %94, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %38, align 8
  br label %99

99:                                               ; preds = %82, %92
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #10
  %100 = icmp eq %"class.base::SingleThreadTaskRunner"* %25, null
  br i1 %100, label %109, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %25, i64 0, i32 0, i32 0, i32 1
  %103 = getelementptr inbounds %"class.base::RefCountedThreadSafe.336", %"class.base::RefCountedThreadSafe.336"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw sub i32* %103, i32 1 acq_rel
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %109

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.base::RefCountedThreadSafe.336", %"class.base::RefCountedThreadSafe.336"* %102, i64 -2
  %108 = bitcast %"class.base::RefCountedThreadSafe.336"* %107 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %108) #10
  br label %109

109:                                              ; preds = %99, %101, %106
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #4

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #4

declare void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"*, %"class.blink::Event"*, i32) #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink7WebNode24GetElementsByHTMLTagNameERKNS_9WebStringE(%"class.blink::WebElementCollection"* noalias sret, %"class.blink::WebNode"* nocapture readonly, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %1, i64 0, i32 1
  %6 = bitcast %"class.blink::WebPrivatePtr"* %5 to %"class.blink::Persistent.1453"**
  %7 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %6, align 8
  %8 = icmp eq %"class.blink::Persistent.1453"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %7, i64 0, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"class.blink::Node"* [ %11, %9 ], [ null, %3 ]
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %45, label %18

18:                                               ; preds = %12
  br i1 %8, label %22, label %19

19:                                               ; preds = %18
  %20 = bitcast %"class.blink::Persistent.1453"* %7 to %"class.blink::ContainerNode"**
  %21 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %20, align 8
  br label %22

22:                                               ; preds = %18, %19
  %23 = phi %"class.blink::ContainerNode"* [ %21, %19 ], [ null, %18 ]
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %25 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  %26 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF12AtomicStringEEv(%"class.blink::WebString"* %2) #10
  %27 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  %28 = call %"class.blink::HTMLCollection"* @_ZN5blink13ContainerNode22getElementsByTagNameNSERKN3WTF12AtomicStringES4_(%"class.blink::ContainerNode"* %23, %"class.WTF::AtomicString"* dereferenceable(8) %24, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #10
  call void @_ZN5blink20WebElementCollectionC1EPNS_14HTMLCollectionE(%"class.blink::WebElementCollection"* %0, %"class.blink::HTMLCollection"* %28) #10
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #10
  br label %44

44:                                               ; preds = %22, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  br label %48

45:                                               ; preds = %12
  %46 = getelementptr inbounds %"class.blink::WebElementCollection", %"class.blink::WebElementCollection"* %0, i64 0, i32 0, i32 0
  store i8* null, i8** %46, align 8
  %47 = getelementptr inbounds %"class.blink::WebElementCollection", %"class.blink::WebElementCollection"* %0, i64 0, i32 1
  store i32 0, i32* %47, align 8
  br label %48

48:                                               ; preds = %45, %44
  ret void
}

declare %"class.blink::HTMLCollection"* @_ZN5blink13ContainerNode22getElementsByTagNameNSERKN3WTF12AtomicStringES4_(%"class.blink::ContainerNode"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF12AtomicStringEEv(%"class.blink::WebString"*) local_unnamed_addr #4

declare void @_ZN5blink20WebElementCollectionC1EPNS_14HTMLCollectionE(%"class.blink::WebElementCollection"*, %"class.blink::HTMLCollection"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink7WebNode13QuerySelectorERKNS_9WebStringE(%"class.blink::WebElement"* noalias sret, %"class.blink::WebNode"* nocapture readonly, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %6 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %1, i64 0, i32 1
  %7 = bitcast %"class.blink::WebPrivatePtr"* %6 to %"class.blink::Persistent.1453"**
  %8 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %7, align 8
  %9 = icmp eq %"class.blink::Persistent.1453"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %8, i64 0, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  br label %13

13:                                               ; preds = %3, %10
  %14 = phi %"class.blink::Node"* [ %12, %10 ], [ null, %3 ]
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %0, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %0, i64 0, i32 0, i32 1, i32 0
  store i8* null, i8** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink10WebElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  br label %92

22:                                               ; preds = %13
  br i1 %9, label %26, label %23

23:                                               ; preds = %22
  %24 = bitcast %"class.blink::Persistent.1453"* %8 to %"class.blink::ContainerNode"**
  %25 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %24, align 8
  br label %26

26:                                               ; preds = %22, %23
  %27 = phi %"class.blink::ContainerNode"* [ %25, %23 ], [ null, %22 ]
  %28 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  %29 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF12AtomicStringEEv(%"class.blink::WebString"* %2) #10
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %30, align 8
  %31 = bitcast %"class.blink::DummyExceptionStateForTesting"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %33, align 8
  %34 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %34, align 2
  %35 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 2
  %36 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  %37 = bitcast %"class.WTF::StringImpl"** %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #10
  %38 = bitcast i8** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 36, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %39 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0
  %40 = call %"class.blink::Element"* @_ZN5blink13ContainerNode13QuerySelectorERKN3WTF12AtomicStringERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %27, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %39) #10
  call void @_ZN5blink10WebElementC1EPNS_7ElementE(%"class.blink::WebElement"* %0, %"class.blink::Element"* %40) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %41 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 4
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %26
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %39) #10
  br label %45

45:                                               ; preds = %26, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %46 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = icmp eq i64* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 3
  %51 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %52 = bitcast %"class.v8::Isolate"* %51 to %"class.v8::internal::Isolate"*
  %53 = load i64, i64* %47, align 8
  %54 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %52, i64 %53) #10
  %55 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %51) #10
  br i1 %55, label %59, label %56

56:                                               ; preds = %49
  %57 = bitcast i64* %54 to %"class.v8::Value"*
  %58 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %51, %"class.v8::Value"* %57) #10
  br label %59

59:                                               ; preds = %56, %49, %45
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %75

75:                                               ; preds = %59, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %31) #10
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #10
  br label %91

91:                                               ; preds = %75, %87, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %92

92:                                               ; preds = %91, %19
  ret void
}

declare %"class.blink::Element"* @_ZN5blink13ContainerNode13QuerySelectorERKN3WTF12AtomicStringERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #4

declare void @_ZN5blink10WebElementC1EPNS_7ElementE(%"class.blink::WebElement"*, %"class.blink::Element"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink7WebNode16QuerySelectorAllERKNS_9WebStringE(%"class.blink::WebVector"* noalias nocapture sret, %"class.blink::WebNode"* nocapture readonly, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %6 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %1, i64 0, i32 1
  %7 = bitcast %"class.blink::WebPrivatePtr"* %6 to %"class.blink::Persistent.1453"**
  %8 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %7, align 8
  %9 = icmp eq %"class.blink::Persistent.1453"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %8, i64 0, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  br label %13

13:                                               ; preds = %3, %10
  %14 = phi %"class.blink::Node"* [ %12, %10 ], [ null, %3 ]
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::WebVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false)
  br label %167

21:                                               ; preds = %13
  br i1 %9, label %25, label %22

22:                                               ; preds = %21
  %23 = bitcast %"class.blink::Persistent.1453"* %8 to %"class.blink::ContainerNode"**
  %24 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %23, align 8
  br label %25

25:                                               ; preds = %21, %22
  %26 = phi %"class.blink::ContainerNode"* [ %24, %22 ], [ null, %21 ]
  %27 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  %28 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF12AtomicStringEEv(%"class.blink::WebString"* %2) #10
  %29 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  %30 = bitcast %"class.blink::DummyExceptionStateForTesting"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %32, align 8
  %33 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %33, align 2
  %34 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 2
  %35 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  %36 = bitcast %"class.WTF::StringImpl"** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #10
  %37 = bitcast i8** %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 36, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %38 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0
  %39 = call %"class.blink::StaticNodeTypeList"* @_ZN5blink13ContainerNode16QuerySelectorAllERKN3WTF12AtomicStringERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %26, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %38) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %40 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 4
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %25
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %38) #10
  br label %44

44:                                               ; preds = %25, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %45 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = icmp eq i64* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 3
  %50 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %49, align 8
  %51 = bitcast %"class.v8::Isolate"* %50 to %"class.v8::internal::Isolate"*
  %52 = load i64, i64* %46, align 8
  %53 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %51, i64 %52) #10
  %54 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %50) #10
  br i1 %54, label %58, label %55

55:                                               ; preds = %48
  %56 = bitcast i64* %53 to %"class.v8::Value"*
  %57 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %50, %"class.v8::Value"* %56) #10
  br label %58

58:                                               ; preds = %55, %48, %44
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #10
  br label %74

74:                                               ; preds = %58, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %30) #10
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #10
  br label %90

90:                                               ; preds = %74, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  %91 = icmp eq %"class.blink::StaticNodeTypeList"* %39, null
  br i1 %91, label %165, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %0, i64 0, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %0, i64 0, i32 0, i32 0, i32 1
  %95 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %39, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i64
  %98 = bitcast %"class.blink::WebVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 24, i1 false) #10
  %99 = icmp eq i32 %96, 0
  br i1 %99, label %167, label %100

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %102 = shl nuw nsw i64 %97, 4
  %103 = call i8* @_Znwm(i64 %102) #11
  %104 = bitcast i8* %103 to %"class.blink::WebElement"*
  %105 = bitcast %"class.blink::WebElement"** %94 to i8**
  store i8* %103, i8** %105, align 8
  %106 = bitcast %"class.blink::WebVector"* %0 to i8**
  store i8* %103, i8** %106, align 8
  %107 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %104, i64 %97
  store %"class.blink::WebElement"* %107, %"class.blink::WebElement"** %101, align 8
  %108 = shl nuw nsw i64 %97, 4
  %109 = add nsw i64 %108, -16
  %110 = lshr exact i64 %109, 4
  %111 = add nuw nsw i64 %110, 1
  %112 = and i64 %111, 7
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %122, label %114

114:                                              ; preds = %100, %114
  %115 = phi %"class.blink::WebElement"* [ %119, %114 ], [ %104, %100 ]
  %116 = phi i64 [ %120, %114 ], [ %112, %100 ]
  %117 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %115, i64 0, i32 0, i32 0
  %118 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %115, i64 0, i32 0, i32 1, i32 0
  store i8* null, i8** %118, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink10WebElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %117, align 8
  %119 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %115, i64 1
  %120 = add i64 %116, -1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %114, !llvm.loop !14

122:                                              ; preds = %114, %100
  %123 = phi %"class.blink::WebElement"* [ %104, %100 ], [ %119, %114 ]
  %124 = icmp ult i64 %109, 112
  br i1 %124, label %145, label %125

125:                                              ; preds = %122, %125
  %126 = phi %"class.blink::WebElement"* [ %143, %125 ], [ %123, %122 ]
  %127 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %126, i64 0, i32 0, i32 0
  %128 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %126, i64 0, i32 0, i32 1, i32 0
  store i8* null, i8** %128, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink10WebElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %127, align 8
  %129 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %126, i64 1, i32 0, i32 0
  %130 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %126, i64 1, i32 0, i32 1, i32 0
  store i8* null, i8** %130, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink10WebElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %129, align 8
  %131 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %126, i64 2, i32 0, i32 0
  %132 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %126, i64 2, i32 0, i32 1, i32 0
  store i8* null, i8** %132, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink10WebElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %131, align 8
  %133 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %126, i64 3, i32 0, i32 0
  %134 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %126, i64 3, i32 0, i32 1, i32 0
  store i8* null, i8** %134, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink10WebElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %133, align 8
  %135 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %126, i64 4, i32 0, i32 0
  %136 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %126, i64 4, i32 0, i32 1, i32 0
  store i8* null, i8** %136, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink10WebElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %135, align 8
  %137 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %126, i64 5, i32 0, i32 0
  %138 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %126, i64 5, i32 0, i32 1, i32 0
  store i8* null, i8** %138, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink10WebElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %137, align 8
  %139 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %126, i64 6, i32 0, i32 0
  %140 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %126, i64 6, i32 0, i32 1, i32 0
  store i8* null, i8** %140, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink10WebElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %139, align 8
  %141 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %126, i64 7, i32 0, i32 0
  %142 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %126, i64 7, i32 0, i32 1, i32 0
  store i8* null, i8** %142, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink10WebElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %141, align 8
  %143 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %126, i64 8
  %144 = icmp eq %"class.blink::WebElement"* %143, %107
  br i1 %144, label %145, label %125

145:                                              ; preds = %125, %122
  %146 = bitcast %"class.blink::WebElement"** %94 to i64*
  %147 = ptrtoint %"class.blink::WebElement"* %107 to i64
  store i64 %147, i64* %146, align 8
  %148 = load i32, i32* %95, align 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %167, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %39, i64 0, i32 1, i32 0
  %152 = load %"class.blink::WebElement"*, %"class.blink::WebElement"** %93, align 8
  br label %153

153:                                              ; preds = %150, %153
  %154 = phi i64 [ 0, %150 ], [ %161, %153 ]
  %155 = trunc i64 %154 to i32
  %156 = call dereferenceable(8) %"class.blink::Member.21"* @_ZNK3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.38"* %151, i32 %155) #10
  %157 = getelementptr inbounds %"class.blink::Member.21", %"class.blink::Member.21"* %156, i64 0, i32 0, i32 0
  %158 = load %"class.blink::Element"*, %"class.blink::Element"** %157, align 8
  %159 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %152, i64 %154
  %160 = call dereferenceable(16) %"class.blink::WebElement"* @_ZN5blink10WebElementaSEPNS_7ElementE(%"class.blink::WebElement"* %159, %"class.blink::Element"* %158) #10
  %161 = add nuw nsw i64 %154, 1
  %162 = load i32, i32* %95, align 4
  %163 = zext i32 %162 to i64
  %164 = icmp ult i64 %161, %163
  br i1 %164, label %153, label %167

165:                                              ; preds = %90
  %166 = bitcast %"class.blink::WebVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 24, i1 false)
  br label %167

167:                                              ; preds = %153, %92, %145, %165, %19
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare %"class.blink::StaticNodeTypeList"* @_ZN5blink13ContainerNode16QuerySelectorAllERKN3WTF12AtomicStringERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #4

declare dereferenceable(16) %"class.blink::WebElement"* @_ZN5blink10WebElementaSEPNS_7ElementE(%"class.blink::WebElement"*, %"class.blink::Element"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink7WebNode7FocusedEv(%"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::WebPrivatePtr"* %2 to %"class.blink::Persistent.1453"**
  %4 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent.1453"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi %"class.blink::Node"* [ %8, %6 ], [ null, %1 ]
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = trunc i32 %12 to i8
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %9
  %16 = tail call zeroext i1 @_ZNK5blink4Node26IsUserActionElementFocusedEv(%"class.blink::Node"* %10) #10
  br label %17

17:                                               ; preds = %9, %15
  %18 = phi i1 [ false, %9 ], [ %16, %15 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink7WebNode28ScrollingElementIdForTestingEv(%"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"struct.cc::ElementId", align 8
  %3 = bitcast %"struct.cc::ElementId"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #10
  %4 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::WebPrivatePtr"* %4 to %"class.blink::Persistent.1453"**
  %6 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %5, align 8
  %7 = icmp eq %"class.blink::Persistent.1453"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi %"class.blink::Node"* [ %10, %8 ], [ null, %1 ]
  %13 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %12) #10
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %13, i64 0, i32 0
  %15 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %14) #10
  %16 = tail call i64 @_ZNK5blink24PaintLayerScrollableArea18GetScrollElementIdEv(%"class.blink::PaintLayerScrollableArea"* %15) #10
  %17 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %2, i64 0, i32 0
  store i64 %16, i64* %17, align 8
  %18 = call i64 @_ZNK2cc9ElementId11GetStableIdEv(%"struct.cc::ElementId"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #10
  ret i64 %18
}

declare %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"*) local_unnamed_addr #4

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #4

declare i64 @_ZNK5blink24PaintLayerScrollableArea18GetScrollElementIdEv(%"class.blink::PaintLayerScrollableArea"*) unnamed_addr #4

declare i64 @_ZNK2cc9ElementId11GetStableIdEv(%"struct.cc::ElementId"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebPluginContainer"* @_ZNK5blink7WebNode15PluginContainerEv(%"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::WebPrivatePtr"* %2 to %"class.blink::Persistent.1453"**
  %4 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent.1453"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi %"class.blink::Node"* [ %8, %6 ], [ null, %1 ]
  %11 = tail call %"class.blink::WebPluginContainerImpl"* @_ZNK5blink4Node21GetWebPluginContainerEv(%"class.blink::Node"* %10) #10
  %12 = icmp eq %"class.blink::WebPluginContainerImpl"* %11, null
  %13 = getelementptr inbounds %"class.blink::WebPluginContainerImpl", %"class.blink::WebPluginContainerImpl"* %11, i64 0, i32 2
  %14 = select i1 %12, %"class.blink::WebPluginContainer"* null, %"class.blink::WebPluginContainer"* %13
  ret %"class.blink::WebPluginContainer"* %14
}

declare %"class.blink::WebPluginContainerImpl"* @_ZNK5blink4Node21GetWebPluginContainerEv(%"class.blink::Node"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7WebNodeC2EPNS_4NodeE(%"class.blink::WebNode"*, %"class.blink::Node"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink7WebNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::WebPrivatePtr", %"class.blink::WebPrivatePtr"* %4, i64 0, i32 0
  store i8* null, i8** %5, align 8
  %6 = bitcast %"class.blink::WebPrivatePtr"* %4 to %"class.blink::PtrStorageImpl"*
  tail call void @_ZN5blink14PtrStorageImplINS_4NodeELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %6, %"class.blink::Node"* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blink::WebNode"* @_ZN5blink7WebNodeaSEPNS_4NodeE(%"class.blink::WebNode"* returned, %"class.blink::Node"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::WebPrivatePtr"* %3 to %"class.blink::PtrStorageImpl"*
  tail call void @_ZN5blink14PtrStorageImplINS_4NodeELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %4, %"class.blink::Node"* %1) #10
  ret %"class.blink::WebNode"* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink7WebNodecvPNS_4NodeEEv(%"class.blink::WebNode"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::WebPrivatePtr"* %2 to %"class.blink::Persistent.1453"**
  %4 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent.1453"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi %"class.blink::Node"* [ %8, %6 ], [ null, %1 ]
  ret %"class.blink::Node"* %10
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #10
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #10
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #10
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !16
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #10
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap.146", %"class.WTF::HashMap.146"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair.149"*, %"struct.WTF::KeyValuePair.149"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.147"* %47, %"class.blink::ScriptWrappable"* %0) #10
  %49 = extractvalue { %"struct.WTF::KeyValuePair.149"*, %"struct.WTF::KeyValuePair.149"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap.146", %"class.WTF::HashMap.146"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair.149"*, %"struct.WTF::KeyValuePair.149"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.149", %"struct.WTF::KeyValuePair.149"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair.149"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.149", %"struct.WTF::KeyValuePair.149"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #10
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.2, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #10
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.2, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0)) #10
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #4

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.149"*, %"struct.WTF::KeyValuePair.149"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.147"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #1 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.147", %"class.WTF::HashTable.147"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.149"*, %"struct.WTF::KeyValuePair.149"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.149"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.147", %"class.WTF::HashTable.147"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.149", %"struct.WTF::KeyValuePair.149"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.149", %"struct.WTF::KeyValuePair.149"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.149", %"struct.WTF::KeyValuePair.149"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.149", %"struct.WTF::KeyValuePair.149"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.149", %"struct.WTF::KeyValuePair.149"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.149"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.149"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.149", %"struct.WTF::KeyValuePair.149"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.149", %"struct.WTF::KeyValuePair.149"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.149"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.149"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.149"*, %"struct.WTF::KeyValuePair.149"* } undef, %"struct.WTF::KeyValuePair.149"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.149"*, %"struct.WTF::KeyValuePair.149"* } %78, %"struct.WTF::KeyValuePair.149"* %77, 1
  ret { %"struct.WTF::KeyValuePair.149"*, %"struct.WTF::KeyValuePair.149"* } %79
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7WebNodeD2Ev(%"class.blink::WebNode"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink7WebNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebNode", %"class.blink::WebNode"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::WebPrivatePtr"* %3 to %"class.blink::Persistent.1453"**
  %5 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %4, align 8
  %6 = icmp eq %"class.blink::Persistent.1453"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %5, i64 0, i32 0, i32 1, i32 0
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %13 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %12, i64 0, i32 0, i32 0
  %14 = bitcast %"class.blink::PersistentRegion"* %12 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.blink::PersistentNode"* %9 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %9, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %17, align 8
  store %"class.blink::PersistentNode"* %9, %"class.blink::PersistentNode"** %13, align 8
  br label %18

18:                                               ; preds = %11, %7
  %19 = bitcast %"class.blink::Persistent.1453"* %5 to i8*
  tail call void @free(i8* %19) #10
  br label %20

20:                                               ; preds = %1, %18
  store %"class.blink::Persistent.1453"* null, %"class.blink::Persistent.1453"** %4, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10WebElementD0Ev(%"class.blink::WebElement"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink7WebNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebElement", %"class.blink::WebElement"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.blink::WebPrivatePtr"* %3 to %"class.blink::Persistent.1453"**
  %5 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %4, align 8
  %6 = icmp eq %"class.blink::Persistent.1453"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %5, i64 0, i32 0, i32 1, i32 0
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %13 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %12, i64 0, i32 0, i32 0
  %14 = bitcast %"class.blink::PersistentRegion"* %12 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.blink::PersistentNode"* %9 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %9, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %17, align 8
  store %"class.blink::PersistentNode"* %9, %"class.blink::PersistentNode"** %13, align 8
  br label %18

18:                                               ; preds = %11, %7
  %19 = bitcast %"class.blink::Persistent.1453"* %5 to i8*
  tail call void @free(i8* %19) #10
  br label %20

20:                                               ; preds = %1, %18
  %21 = bitcast %"class.blink::WebElement"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #11
  ret void
}

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #4

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #4

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink4Node26IsUserActionElementFocusedEv(%"class.blink::Node"*) local_unnamed_addr #4

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PtrStorageImplINS_4NodeELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"*, %"class.blink::Node"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.blink::PersistentLocation", align 8
  %4 = icmp eq %"class.blink::Node"* %1, null
  %5 = getelementptr inbounds %"class.blink::PtrStorageImpl", %"class.blink::PtrStorageImpl"* %0, i64 0, i32 0
  %6 = load %"class.blink::Persistent.1453"*, %"class.blink::Persistent.1453"** %5, align 8
  %7 = icmp eq %"class.blink::Persistent.1453"* %6, null
  br i1 %4, label %8, label %23

8:                                                ; preds = %2
  br i1 %7, label %22, label %9

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %6, i64 0, i32 0, i32 1, i32 0
  %11 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %12 = icmp eq %"class.blink::PersistentNode"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %9
  %14 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %15 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = bitcast %"class.blink::PersistentRegion"* %14 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.blink::PersistentNode"* %11 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %11, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %19, align 8
  store %"class.blink::PersistentNode"* %11, %"class.blink::PersistentNode"** %15, align 8
  br label %20

20:                                               ; preds = %13, %9
  %21 = bitcast %"class.blink::Persistent.1453"* %6 to i8*
  tail call void @free(i8* %21) #10
  br label %22

22:                                               ; preds = %8, %20
  store %"class.blink::Persistent.1453"* null, %"class.blink::Persistent.1453"** %5, align 8
  br label %65

23:                                               ; preds = %2
  br i1 %7, label %24, label %30

24:                                               ; preds = %23
  %25 = tail call noalias i8* @malloc(i64 16) #10
  %26 = bitcast %"class.blink::PersistentLocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 32, i1 false) #10
  %27 = getelementptr inbounds %"class.blink::PersistentLocation", %"class.blink::PersistentLocation"* %3, i64 0, i32 0
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %27) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #10
  %28 = bitcast %"class.blink::PtrStorageImpl"* %0 to i8**
  store i8* %25, i8** %28, align 8
  %29 = bitcast i8* %25 to %"class.blink::Persistent.1453"*
  br label %30

30:                                               ; preds = %23, %24
  %31 = phi %"class.blink::Persistent.1453"* [ %6, %23 ], [ %29, %24 ]
  %32 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %31, i64 0, i32 0
  %33 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %31, i64 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %33, align 8
  %34 = ptrtoint %"class.blink::Node"* %1 to i64
  switch i64 %34, label %35 [
    i64 0, label %54
    i64 -1, label %54
  ]

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %31, i64 0, i32 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %39, label %65

39:                                               ; preds = %35
  %40 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %41 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %41, align 8
  %43 = icmp eq %"class.blink::PersistentNode"* %42, null
  br i1 %43, label %44, label %47, !prof !2

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %45) #10
  %46 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %41, align 8
  br label %47

47:                                               ; preds = %44, %39
  %48 = phi %"class.blink::PersistentNode"* [ %46, %44 ], [ %42, %39 ]
  %49 = bitcast %"class.blink::PersistentNode"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.blink::PersistentRegion"* %40 to i64*
  store i64 %50, i64* %51, align 8
  %52 = bitcast %"class.blink::PersistentNode"* %48 to %"class.blink::PersistentBase.1454"**
  store %"class.blink::PersistentBase.1454"* %32, %"class.blink::PersistentBase.1454"** %52, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %48, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_4NodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %53, align 8
  store %"class.blink::PersistentNode"* %48, %"class.blink::PersistentNode"** %36, align 8
  br label %65

54:                                               ; preds = %30, %30
  %55 = getelementptr inbounds %"class.blink::Persistent.1453", %"class.blink::Persistent.1453"* %31, i64 0, i32 0, i32 1, i32 0
  %56 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %55, align 8
  %57 = icmp eq %"class.blink::PersistentNode"* %56, null
  br i1 %57, label %65, label %58

58:                                               ; preds = %54
  %59 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %59, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::PersistentRegion"* %59 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.blink::PersistentNode"* %56 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %56, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %64, align 8
  store %"class.blink::PersistentNode"* %56, %"class.blink::PersistentNode"** %60, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %55, align 8
  br label %65

65:                                               ; preds = %58, %54, %47, %35, %22
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_4NodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::Node"**
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::Node"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::Node"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_4NodeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_4NodeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_4NodeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"**
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #10
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 -1, i32 6
  %20 = bitcast %"class.blink::Member.2"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %18
  store %"class.blink::Node"* null, %"class.blink::Node"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %25
  %31 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 24) to %"class.blink::PersistentRegion"**), align 8
  %32 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %31, i64 0, i32 0, i32 0
  %33 = bitcast %"class.blink::PersistentRegion"* %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.blink::PersistentNode"* %28 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %36, align 8
  store %"class.blink::PersistentNode"* %28, %"class.blink::PersistentNode"** %32, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %37

37:                                               ; preds = %18, %13, %30, %25, %2
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink4NodeEFvPKNS3_5EventENS3_27SimulatedClickCreationScopeEEJNS3_14WeakPersistentIS4_EEDnS8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %3 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %2, i64 3
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i32*
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %2 to %"class.blink::Node"**
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %32, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %10 = bitcast %"class.blink::Node"* %6 to i8*
  %11 = bitcast %"class.base::internal::BindStateBase"* %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %14 = bitcast void ()** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds i8, i8* %10, i64 %15
  %17 = bitcast i8* %16 to %"class.blink::Node"*
  %18 = and i64 %12, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %8
  %21 = bitcast i8* %16 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = add i64 %12, -1
  %24 = getelementptr i8, i8* %22, i64 %23
  %25 = bitcast i8* %24 to void (%"class.blink::Node"*, %"class.blink::Event"*, i32)**
  %26 = load void (%"class.blink::Node"*, %"class.blink::Event"*, i32)*, void (%"class.blink::Node"*, %"class.blink::Event"*, i32)** %25, align 8
  br label %29

27:                                               ; preds = %8
  %28 = inttoptr i64 %12 to void (%"class.blink::Node"*, %"class.blink::Event"*, i32)*
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi void (%"class.blink::Node"*, %"class.blink::Event"*, i32)* [ %26, %20 ], [ %28, %27 ]
  %31 = load i32, i32* %4, align 4
  tail call void %30(%"class.blink::Node"* %17, %"class.blink::Event"* null, i32 %31) #10
  br label %32

32:                                               ; preds = %1, %29
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink4NodeEFvPKNS2_5EventENS2_27SimulatedClickCreationScopeEEJNS2_14WeakPersistentIS3_EEDnS7_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %17, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 24) to %"class.blink::PersistentRegion"**), align 8
  %10 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %9, i64 0, i32 0, i32 0
  %11 = bitcast %"class.blink::PersistentRegion"* %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::PersistentNode"* %6 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %6, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %14, align 8
  store %"class.blink::PersistentNode"* %6, %"class.blink::PersistentNode"** %10, align 8
  br label %15

15:                                               ; preds = %3, %8
  %16 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink4NodeEFvPKNS3_5EventENS3_27SimulatedClickCreationScopeEEJNS3_14WeakPersistentIS4_EEDnS8_EEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #1 comdat {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %8
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::Node"**
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %3, %8
  %10 = phi i1 [ true, %8 ], [ %7, %3 ], [ false, %2 ]
  ret i1 %10
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.21"* @_ZNK3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.38"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.38", %"class.WTF::Vector.38"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.38", %"class.WTF::Vector.38"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.21"*, %"class.blink::Member.21"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.21", %"class.blink::Member.21"* %24, i64 %25
  ret %"class.blink::Member.21"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink18WrapWeakPersistentINS_4NodeEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink18WrapWeakPersistentINS_4NodeEEENS_14WeakPersistentIT_EEPS3_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTF4BindIMN5blink4NodeEFvPKNS1_5EventENS1_27SimulatedClickCreationScopeEEJNS1_14WeakPersistentIS2_EEDnS6_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZN3WTF4BindIMN5blink4NodeEFvPKNS1_5EventENS1_27SimulatedClickCreationScopeEEJNS1_14WeakPersistentIS2_EEDnS6_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!9 = !{!10, !12, !7}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink4NodeEFvPKNS3_5EventENS3_27SimulatedClickCreationScopeEEJNS3_14WeakPersistentIS4_EEDnS8_EEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink4NodeEFvPKNS3_5EventENS3_27SimulatedClickCreationScopeEEJNS3_14WeakPersistentIS4_EEDnS8_EEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIMN5blink4NodeEFvPKNS1_5EventENS1_27SimulatedClickCreationScopeEEJNS1_14WeakPersistentIS2_EEDnS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIMN5blink4NodeEFvPKNS1_5EventENS1_27SimulatedClickCreationScopeEEJNS1_14WeakPersistentIS2_EEDnS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = !{i8 0, i8 2}
