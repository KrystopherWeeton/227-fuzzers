; ModuleID = '../../net/disk_cache/blockfile/file_lock.cc'
source_filename = "../../net/disk_cache/blockfile/file_lock.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.disk_cache::FileLock" = type { i32 (...)**, i8, i32* }
%"struct.disk_cache::BlockFileHeader" = type { i32, i32, i16, i16, i32, i32, i32, [4 x i32], [4 x i32], i32, [5 x i32], [2028 x i32] }

@_ZTVN10disk_cache8FileLockE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.disk_cache::FileLock"*)* @_ZN10disk_cache8FileLockD2Ev to i8*), i8* bitcast (void (%"class.disk_cache::FileLock"*)* @_ZN10disk_cache8FileLockD0Ev to i8*), i8* bitcast (void (%"class.disk_cache::FileLock"*)* @_ZN10disk_cache8FileLock4LockEv to i8*), i8* bitcast (void (%"class.disk_cache::FileLock"*)* @_ZN10disk_cache8FileLock6UnlockEv to i8*)] }, align 8

@_ZN10disk_cache8FileLockC1EPNS_15BlockFileHeaderE = hidden unnamed_addr alias void (%"class.disk_cache::FileLock"*, %"struct.disk_cache::BlockFileHeader"*), void (%"class.disk_cache::FileLock"*, %"struct.disk_cache::BlockFileHeader"*)* @_ZN10disk_cache8FileLockC2EPNS_15BlockFileHeaderE
@_ZN10disk_cache8FileLockD1Ev = hidden unnamed_addr alias void (%"class.disk_cache::FileLock"*), void (%"class.disk_cache::FileLock"*)* @_ZN10disk_cache8FileLockD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10disk_cache8FileLockC2EPNS_15BlockFileHeaderE(%"class.disk_cache::FileLock"* nocapture, %"struct.disk_cache::BlockFileHeader"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.disk_cache::FileLock", %"class.disk_cache::FileLock"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10disk_cache8FileLockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"struct.disk_cache::BlockFileHeader", %"struct.disk_cache::BlockFileHeader"* %1, i64 0, i32 9
  %5 = getelementptr inbounds %"class.disk_cache::FileLock", %"class.disk_cache::FileLock"* %0, i64 0, i32 2
  store i32* %4, i32** %5, align 8
  %6 = load volatile i32, i32* %4, align 4
  %7 = add nsw i32 %6, 1
  store volatile i32 %7, i32* %4, align 4
  fence seq_cst
  %8 = getelementptr inbounds %"class.disk_cache::FileLock", %"class.disk_cache::FileLock"* %0, i64 0, i32 1
  store i8 1, i8* %8, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10disk_cache8FileLockD2Ev(%"class.disk_cache::FileLock"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.disk_cache::FileLock", %"class.disk_cache::FileLock"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10disk_cache8FileLockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.disk_cache::FileLock", %"class.disk_cache::FileLock"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  fence seq_cst
  %7 = getelementptr inbounds %"class.disk_cache::FileLock", %"class.disk_cache::FileLock"* %0, i64 0, i32 2
  %8 = load i32*, i32** %7, align 8
  %9 = load volatile i32, i32* %8, align 4
  %10 = add nsw i32 %9, -1
  store volatile i32 %10, i32* %8, align 4
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache8FileLockD0Ev(%"class.disk_cache::FileLock"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.disk_cache::FileLock", %"class.disk_cache::FileLock"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10disk_cache8FileLockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.disk_cache::FileLock", %"class.disk_cache::FileLock"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  fence seq_cst
  %7 = getelementptr inbounds %"class.disk_cache::FileLock", %"class.disk_cache::FileLock"* %0, i64 0, i32 2
  %8 = load i32*, i32** %7, align 8
  %9 = load volatile i32, i32* %8, align 4
  %10 = add nsw i32 %9, -1
  store volatile i32 %10, i32* %8, align 4
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.disk_cache::FileLock"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10disk_cache8FileLock4LockEv(%"class.disk_cache::FileLock"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.disk_cache::FileLock", %"class.disk_cache::FileLock"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.disk_cache::FileLock", %"class.disk_cache::FileLock"* %0, i64 0, i32 2
  %7 = load i32*, i32** %6, align 8
  %8 = load volatile i32, i32* %7, align 4
  %9 = add nsw i32 %8, 1
  store volatile i32 %9, i32* %7, align 4
  fence seq_cst
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10disk_cache8FileLock6UnlockEv(%"class.disk_cache::FileLock"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.disk_cache::FileLock", %"class.disk_cache::FileLock"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  fence seq_cst
  %6 = getelementptr inbounds %"class.disk_cache::FileLock", %"class.disk_cache::FileLock"* %0, i64 0, i32 2
  %7 = load i32*, i32** %6, align 8
  %8 = load volatile i32, i32* %7, align 4
  %9 = add nsw i32 %8, -1
  store volatile i32 %9, i32* %7, align 4
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
