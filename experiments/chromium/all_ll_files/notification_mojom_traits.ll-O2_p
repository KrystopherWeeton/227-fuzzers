; ModuleID = '../../third_party/blink/common/notifications/notification_mojom_traits.cc'
source_filename = "../../third_party/blink/common/notifications/notification_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::internal::NotificationData_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", i32, i8, [3 x i8], %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.1", %"struct.mojo::internal::Pointer.1", %"struct.mojo::internal::Pointer.1", %"struct.mojo::internal::Pointer.2", double, %"struct.mojo::internal::Pointer.3", %"struct.mojo::internal::Pointer.4", %"struct.mojo::internal::Pointer.5" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.0" = type { i64 }
%"struct.mojo::internal::Pointer.1" = type { i64 }
%"struct.mojo::internal::Pointer.2" = type { i64 }
%"struct.mojo::internal::Pointer.3" = type { i64 }
%"struct.mojo::internal::Pointer.4" = type { i64 }
%"struct.mojo::internal::Pointer.5" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.8", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.6"*, %"class.mojo::ScopedHandleBase.6"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.6" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.6"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.10" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.15 }
%class.scoped_refptr.15 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.19, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.21", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.17 }
%class.scoped_refptr.17 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.18", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.18" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.19 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.20" }>
%"class.base::RefCountedThreadSafe.20" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl.24" }
%"struct.std::__1::__cxx_atomic_impl.24" = type { %"struct.std::__1::__cxx_atomic_base_impl.25" }
%"struct.std::__1::__cxx_atomic_base_impl.25" = type { i32 }
%"struct.blink::PlatformNotificationData" = type { %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string.31", %"class.std::__1::basic_string", %"class.std::__1::basic_string.31", %class.GURL, %class.GURL, %class.GURL, %"class.std::__1::vector.43", %"class.base::Time", i8, i8, i8, %"class.std::__1::vector.50", %"class.std::__1::vector.54", %"class.absl::optional.68" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::basic_string.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.34 }
%union.anon.34 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string.31", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %class.GURL* }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { i32*, i32*, %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i32* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { i8*, i8*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { i8* }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.std::__1::__compressed_pair.63" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.56" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::mojom::NotificationAction"* }
%"class.blink::mojom::NotificationAction" = type { i32, %"class.std::__1::basic_string.31", %"class.std::__1::basic_string", %class.GURL, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.59 }
%union.anon.59 = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.mojo::StructPtr"* }
%"class.absl::optional.68" = type { %"class.absl::optional_internal::optional_data.69" }
%"class.absl::optional_internal::optional_data.69" = type { %"class.absl::optional_internal::optional_data_base.70" }
%"class.absl::optional_internal::optional_data_base.70" = type { %"class.absl::optional_internal::optional_data_dtor_base.71" }
%"class.absl::optional_internal::optional_data_dtor_base.71" = type { i8, %union.anon.72 }
%union.anon.72 = type { %"class.base::Time" }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.blink::mojom::NotificationDataDataView" = type { %"class.blink::mojom::internal::NotificationData_Data"*, %"class.mojo::Message"* }
%"class.absl::optional.80" = type { %"class.absl::optional_internal::optional_data.81" }
%"class.absl::optional_internal::optional_data.81" = type { %"class.absl::optional_internal::optional_data_base.82" }
%"class.absl::optional_internal::optional_data_base.82" = type { %"class.absl::optional_internal::optional_data_dtor_base.83" }
%"class.absl::optional_internal::optional_data_dtor_base.83" = type { i8, %union.anon.84 }
%union.anon.84 = type { %"class.std::__1::basic_string.31" }
%"class.mojo_base::mojom::internal::String16_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.102" }
%"struct.mojo::internal::Pointer.102" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.35 }
%struct.anon.35 = type { i8 }
%"class.url::mojom::internal::Url_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.0" }
%"class.mojo::internal::Array_Data.104" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.blink::mojom::internal::NotificationAction_Data" = type { %"struct.mojo::internal::StructHeader", i32, [4 x i8], %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.1", %"struct.mojo::internal::Pointer" }
%"class.mojo_base::mojom::internal::Time_Data" = type { %"struct.mojo::internal::StructHeader", i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::mojom::internal::NotificationResources_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.85", %"struct.mojo::internal::Pointer.85", %"struct.mojo::internal::Pointer.85", %"struct.mojo::internal::Pointer.86" }
%"struct.mojo::internal::Pointer.85" = type { i64 }
%"struct.mojo::internal::Pointer.86" = type { i64 }
%"struct.blink::NotificationResources" = type { %class.SkBitmap, %class.SkBitmap, %class.SkBitmap, %"class.std::__1::vector.94" }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.93 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.87, i32, i32 }
%class.sk_sp.87 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.88" }
%"struct.std::__1::atomic.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__atomic_base.90" }
%"struct.std::__1::__atomic_base.90" = type { %"struct.std::__1::__cxx_atomic_impl.91" }
%"struct.std::__1::__cxx_atomic_impl.91" = type { %"struct.std::__1::__cxx_atomic_base_impl.92" }
%"struct.std::__1::__cxx_atomic_base_impl.92" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.93 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { %class.SkBitmap*, %class.SkBitmap*, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %class.SkBitmap* }
%"class.skia::mojom::internal::BitmapN32_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.110", %"class.mojo_base::mojom::internal::BigBuffer_Data" }
%"struct.mojo::internal::Pointer.110" = type { i64 }
%"class.mojo_base::mojom::internal::BigBuffer_Data" = type { i32, i32, %"union.mojo_base::mojom::internal::BigBuffer_Data::Union_" }
%"union.mojo_base::mojom::internal::BigBuffer_Data::Union_" = type { %"struct.mojo::internal::Pointer.3" }
%"class.mojo::internal::Array_Data.112" = type { %"struct.mojo::internal::ArrayHeader" }

$_ZNSt3__16vectorIcNS_9allocatorIcEEE6assignINS_11__wrap_iterIPhEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZN4mojo8internal11DeserializeINS_14StringDataViewERPNS0_10Array_DataIcEEN4absl8optionalINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_ = comdat any

$_ZN4mojo11ArrayTraitsINSt3__16vectorINS_9StructPtrIN5blink5mojom18NotificationActionEEENS1_9allocatorIS7_EEEEE6ResizeERSA_m = comdat any

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN4skia5mojom17BitmapN32DataViewEEENSt3__16vectorI8SkBitmapNS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal14BitmapN32_DataEEEEEPSC_PNS_7MessageE = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom24NotificationDataDataViewENS1_24PlatformNotificationDataEE4ReadES3_PS4_(%"class.blink::mojom::internal::NotificationData_Data"*, %"class.mojo::Message"*, %"struct.blink::PlatformNotificationData"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::internal::Array_Data"*, align 8
  %5 = alloca %"class.blink::mojom::NotificationDataDataView", align 8
  %6 = alloca %"class.absl::optional.80", align 8
  %7 = alloca [15 x i8], align 8
  %8 = alloca [15 x i8], align 8
  %9 = getelementptr inbounds %"class.blink::mojom::NotificationDataDataView", %"class.blink::mojom::NotificationDataDataView"* %5, i64 0, i32 0
  store %"class.blink::mojom::internal::NotificationData_Data"* %0, %"class.blink::mojom::internal::NotificationData_Data"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::mojom::NotificationDataDataView", %"class.blink::mojom::NotificationDataDataView"* %5, i64 0, i32 1
  store %"class.mojo::Message"* %1, %"class.mojo::Message"** %10, align 8
  %11 = getelementptr inbounds %"class.absl::optional.80", %"class.absl::optional.80"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #9
  %12 = bitcast %"class.absl::optional.80"* %6 to i64*
  store i64 -6148914691236517206, i64* %12, align 8
  store i8 0, i8* %11, align 8
  %13 = getelementptr inbounds %"class.absl::optional.80", %"class.absl::optional.80"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %union.anon.84* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #9
  %15 = getelementptr inbounds %"class.blink::mojom::internal::NotificationData_Data", %"class.blink::mojom::internal::NotificationData_Data"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %15, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %3
  %20 = bitcast %"struct.mojo::internal::Pointer"* %15 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 %17
  %22 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 0
  %23 = bitcast i8* %21 to %"class.mojo_base::mojom::internal::String16_Data"*
  %24 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom16String16DataViewENSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEE4ReadES3_PSA_(%"class.mojo_base::mojom::internal::String16_Data"* nonnull %23, %"class.mojo::Message"* %1, %"class.std::__1::basic_string"* %22) #9
  br i1 %24, label %25, label %432

25:                                               ; preds = %3, %19
  %26 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 1
  %27 = getelementptr inbounds %"class.blink::mojom::internal::NotificationData_Data", %"class.blink::mojom::internal::NotificationData_Data"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 1
  store i32 %28, i32* %26, align 4
  %29 = bitcast %"class.mojo::internal::Array_Data"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  %30 = getelementptr inbounds %"class.blink::mojom::internal::NotificationData_Data", %"class.blink::mojom::internal::NotificationData_Data"* %0, i64 0, i32 5
  %31 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %30, i64 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  %34 = bitcast %"struct.mojo::internal::Pointer.0"* %30 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 %32
  %36 = bitcast i8* %35 to %"class.mojo::internal::Array_Data"*
  %37 = select i1 %33, %"class.mojo::internal::Array_Data"* null, %"class.mojo::internal::Array_Data"* %36
  store %"class.mojo::internal::Array_Data"* %37, %"class.mojo::internal::Array_Data"** %4, align 8
  %38 = call zeroext i1 @_ZN4mojo8internal11DeserializeINS_14StringDataViewERPNS0_10Array_DataIcEEN4absl8optionalINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_(%"class.mojo::internal::Array_Data"** nonnull dereferenceable(8) %4, %"class.absl::optional.80"* nonnull %6, %"class.mojo::Message"** dereferenceable(8) %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  br i1 %38, label %39, label %432

39:                                               ; preds = %25
  %40 = load %"class.blink::mojom::internal::NotificationData_Data"*, %"class.blink::mojom::internal::NotificationData_Data"** %9, align 8
  %41 = getelementptr inbounds %"class.blink::mojom::internal::NotificationData_Data", %"class.blink::mojom::internal::NotificationData_Data"* %40, i64 0, i32 6
  %42 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %41, i64 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %54, label %45

45:                                               ; preds = %39
  %46 = bitcast %"struct.mojo::internal::Pointer"* %41 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 %43
  %48 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 3
  %49 = bitcast i8* %47 to %"class.mojo_base::mojom::internal::String16_Data"*
  %50 = load %"class.mojo::Message"*, %"class.mojo::Message"** %10, align 8
  %51 = call zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom16String16DataViewENSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEE4ReadES3_PSA_(%"class.mojo_base::mojom::internal::String16_Data"* nonnull %49, %"class.mojo::Message"* %50, %"class.std::__1::basic_string"* %48) #9
  br i1 %51, label %52, label %432

52:                                               ; preds = %45
  %53 = load %"class.blink::mojom::internal::NotificationData_Data"*, %"class.blink::mojom::internal::NotificationData_Data"** %9, align 8
  br label %54

54:                                               ; preds = %52, %39
  %55 = phi %"class.blink::mojom::internal::NotificationData_Data"* [ %53, %52 ], [ %40, %39 ]
  %56 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 4
  %57 = getelementptr inbounds %"class.blink::mojom::internal::NotificationData_Data", %"class.blink::mojom::internal::NotificationData_Data"* %55, i64 0, i32 7
  %58 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %57, i64 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, 0
  %61 = bitcast %"struct.mojo::internal::Pointer.0"* %57 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 %59
  br i1 %60, label %108, label %63

63:                                               ; preds = %54
  %64 = getelementptr inbounds i8, i8* %62, i64 8
  %65 = getelementptr inbounds i8, i8* %62, i64 4
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %66, align 1
  %68 = zext i32 %67 to i64
  %69 = call i1 @llvm.is.constant.i64(i64 %68) #9
  %70 = icmp ult i32 %67, 23
  %71 = and i1 %70, %69
  br i1 %71, label %72, label %90

72:                                               ; preds = %63
  %73 = bitcast %"class.std::__1::basic_string.31"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %68, i64* %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::basic_string.31", %"class.std::__1::basic_string.31"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  br label %84

81:                                               ; preds = %72
  %82 = trunc i32 %67 to i8
  store i8 %82, i8* %74, align 1
  %83 = bitcast %"class.std::__1::basic_string.31"* %56 to i8*
  br label %84

84:                                               ; preds = %81, %77
  %85 = phi i8* [ %80, %77 ], [ %83, %81 ]
  %86 = icmp eq i32 %67, 0
  br i1 %86, label %88, label %87

87:                                               ; preds = %84
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %85, i8* align 1 %64, i64 %68, i1 false) #9
  br label %88

88:                                               ; preds = %87, %84
  %89 = getelementptr inbounds i8, i8* %85, i64 %68
  store i8 0, i8* %89, align 1
  br label %93

90:                                               ; preds = %63
  %91 = call dereferenceable(24) %"class.std::__1::basic_string.31"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.31"* %56, i8* %64, i64 %68) #9
  %92 = bitcast %"class.std::__1::basic_string.31"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %93

93:                                               ; preds = %90, %88
  %94 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %92, %90 ], [ %73, %88 ]
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  %98 = getelementptr inbounds %"class.std::__1::basic_string.31", %"class.std::__1::basic_string.31"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = bitcast %"class.std::__1::basic_string.31"* %56 to i8*
  %101 = select i1 %97, i8* %99, i8* %100
  %102 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = zext i8 %96 to i64
  %105 = select i1 %97, i64 %103, i64 %104
  %106 = call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %101, i64 %105) #9
  br i1 %106, label %108, label %107

107:                                              ; preds = %93
  call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #9
  br label %108

108:                                              ; preds = %107, %93, %54
  %109 = load %"class.blink::mojom::internal::NotificationData_Data"*, %"class.blink::mojom::internal::NotificationData_Data"** %9, align 8
  %110 = getelementptr inbounds %"class.blink::mojom::internal::NotificationData_Data", %"class.blink::mojom::internal::NotificationData_Data"* %109, i64 0, i32 8
  %111 = getelementptr inbounds %"struct.mojo::internal::Pointer.1", %"struct.mojo::internal::Pointer.1"* %110, i64 0, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %123, label %114

114:                                              ; preds = %108
  %115 = bitcast %"struct.mojo::internal::Pointer.1"* %110 to i8*
  %116 = getelementptr inbounds i8, i8* %115, i64 %112
  %117 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 5
  %118 = bitcast i8* %116 to %"class.url::mojom::internal::Url_Data"*
  %119 = load %"class.mojo::Message"*, %"class.mojo::Message"** %10, align 8
  %120 = call zeroext i1 @_ZN4mojo12StructTraitsIN3url5mojom11UrlDataViewE4GURLE4ReadES3_PS4_(%"class.url::mojom::internal::Url_Data"* nonnull %118, %"class.mojo::Message"* %119, %class.GURL* %117) #9
  br i1 %120, label %121, label %432

121:                                              ; preds = %114
  %122 = load %"class.blink::mojom::internal::NotificationData_Data"*, %"class.blink::mojom::internal::NotificationData_Data"** %9, align 8
  br label %123

123:                                              ; preds = %121, %108
  %124 = phi %"class.blink::mojom::internal::NotificationData_Data"* [ %122, %121 ], [ %109, %108 ]
  %125 = getelementptr inbounds %"class.blink::mojom::internal::NotificationData_Data", %"class.blink::mojom::internal::NotificationData_Data"* %124, i64 0, i32 9
  %126 = getelementptr inbounds %"struct.mojo::internal::Pointer.1", %"struct.mojo::internal::Pointer.1"* %125, i64 0, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %138, label %129

129:                                              ; preds = %123
  %130 = bitcast %"struct.mojo::internal::Pointer.1"* %125 to i8*
  %131 = getelementptr inbounds i8, i8* %130, i64 %127
  %132 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 6
  %133 = bitcast i8* %131 to %"class.url::mojom::internal::Url_Data"*
  %134 = load %"class.mojo::Message"*, %"class.mojo::Message"** %10, align 8
  %135 = call zeroext i1 @_ZN4mojo12StructTraitsIN3url5mojom11UrlDataViewE4GURLE4ReadES3_PS4_(%"class.url::mojom::internal::Url_Data"* nonnull %133, %"class.mojo::Message"* %134, %class.GURL* %132) #9
  br i1 %135, label %136, label %432

136:                                              ; preds = %129
  %137 = load %"class.blink::mojom::internal::NotificationData_Data"*, %"class.blink::mojom::internal::NotificationData_Data"** %9, align 8
  br label %138

138:                                              ; preds = %136, %123
  %139 = phi %"class.blink::mojom::internal::NotificationData_Data"* [ %137, %136 ], [ %124, %123 ]
  %140 = getelementptr inbounds %"class.blink::mojom::internal::NotificationData_Data", %"class.blink::mojom::internal::NotificationData_Data"* %139, i64 0, i32 10
  %141 = getelementptr inbounds %"struct.mojo::internal::Pointer.1", %"struct.mojo::internal::Pointer.1"* %140, i64 0, i32 0
  %142 = load i64, i64* %141, align 8
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %153, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.mojo::internal::Pointer.1"* %140 to i8*
  %146 = getelementptr inbounds i8, i8* %145, i64 %142
  %147 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 7
  %148 = bitcast i8* %146 to %"class.url::mojom::internal::Url_Data"*
  %149 = load %"class.mojo::Message"*, %"class.mojo::Message"** %10, align 8
  %150 = call zeroext i1 @_ZN4mojo12StructTraitsIN3url5mojom11UrlDataViewE4GURLE4ReadES3_PS4_(%"class.url::mojom::internal::Url_Data"* nonnull %148, %"class.mojo::Message"* %149, %class.GURL* %147) #9
  br i1 %150, label %151, label %432

151:                                              ; preds = %144
  %152 = load %"class.blink::mojom::internal::NotificationData_Data"*, %"class.blink::mojom::internal::NotificationData_Data"** %9, align 8
  br label %153

153:                                              ; preds = %151, %138
  %154 = phi %"class.blink::mojom::internal::NotificationData_Data"* [ %152, %151 ], [ %139, %138 ]
  %155 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 8
  %156 = getelementptr inbounds %"class.blink::mojom::internal::NotificationData_Data", %"class.blink::mojom::internal::NotificationData_Data"* %154, i64 0, i32 11
  %157 = getelementptr inbounds %"struct.mojo::internal::Pointer.2", %"struct.mojo::internal::Pointer.2"* %156, i64 0, i32 0
  %158 = load i64, i64* %157, align 8
  %159 = icmp eq i64 %158, 0
  %160 = bitcast %"struct.mojo::internal::Pointer.2"* %156 to i8*
  %161 = getelementptr inbounds i8, i8* %160, i64 %158
  br i1 %159, label %162, label %167

162:                                              ; preds = %153
  %163 = bitcast %"class.std::__1::vector.43"* %155 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 8, i32 0, i32 1
  %166 = bitcast i32** %165 to i64*
  store i64 %164, i64* %166, align 8
  br label %231

167:                                              ; preds = %153
  %168 = getelementptr inbounds i8, i8* %161, i64 4
  %169 = bitcast i8* %168 to i32*
  %170 = load i32, i32* %169, align 1
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 8, i32 0, i32 1
  %173 = bitcast i32** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::vector.43"* %155 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 2
  %179 = icmp eq i64 %178, %171
  br i1 %179, label %203, label %180

180:                                              ; preds = %167
  %181 = icmp eq i32 %170, 0
  br i1 %181, label %195, label %182

182:                                              ; preds = %180
  %183 = shl nuw nsw i64 %171, 2
  %184 = call i8* @_Znwm(i64 %183) #10
  %185 = bitcast i8* %184 to i32*
  %186 = getelementptr inbounds i32, i32* %185, i64 %171
  %187 = ptrtoint i8* %184 to i64
  %188 = add nsw i64 %171, -1
  %189 = getelementptr i32, i32* %185, i64 %188
  %190 = ptrtoint i32* %189 to i64
  %191 = sub i64 4, %187
  %192 = add i64 %191, %190
  %193 = and i64 %192, -4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %184, i8 0, i64 %193, i1 false) #9
  %194 = ptrtoint i32* %186 to i64
  br label %195

195:                                              ; preds = %180, %182
  %196 = phi i64 [ %194, %182 ], [ 0, %180 ]
  %197 = phi i64 [ %187, %182 ], [ 0, %180 ]
  store i64 %197, i64* %175, align 8
  store i64 %196, i64* %173, align 8
  %198 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %199 = bitcast i32** %198 to i64*
  store i64 %196, i64* %199, align 8
  %200 = icmp eq i64 %176, 0
  br i1 %200, label %203, label %201

201:                                              ; preds = %195
  %202 = inttoptr i64 %176 to i8*
  call void @_ZdlPv(i8* %202) #10
  br label %203

203:                                              ; preds = %167, %201, %195
  %204 = load i32, i32* %169, align 1
  %205 = zext i32 %204 to i64
  %206 = icmp eq i32 %204, 0
  br i1 %206, label %231, label %207

207:                                              ; preds = %203
  %208 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %155, i64 0, i32 0, i32 0
  %209 = load i32*, i32** %208, align 8
  %210 = icmp eq i32* %209, null
  br i1 %210, label %211, label %217

211:                                              ; preds = %207
  %212 = getelementptr inbounds i8, i8* %161, i64 8
  %213 = bitcast i8* %212 to i32*
  %214 = load i32, i32* %213, align 4
  store i32 %214, i32* null, align 536870912
  %215 = load i32, i32* %169, align 1
  %216 = icmp ugt i32 %215, 1
  br i1 %216, label %221, label %231

217:                                              ; preds = %207
  %218 = bitcast i32* %209 to i8*
  %219 = getelementptr inbounds i8, i8* %161, i64 8
  %220 = shl nuw nsw i64 %205, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %218, i8* align 4 %219, i64 %220, i1 false) #9
  br label %231

221:                                              ; preds = %211, %221
  %222 = phi i64 [ %226, %221 ], [ 1, %211 ]
  %223 = load i32*, i32** %208, align 8
  %224 = getelementptr inbounds i32, i32* %213, i64 %222
  %225 = load i32, i32* %224, align 4
  %226 = add nuw nsw i64 %222, 1
  %227 = getelementptr inbounds i32, i32* %223, i64 %222
  store i32 %225, i32* %227, align 4
  %228 = load i32, i32* %169, align 1
  %229 = zext i32 %228 to i64
  %230 = icmp ult i64 %226, %229
  br i1 %230, label %221, label %231

231:                                              ; preds = %221, %217, %211, %203, %162
  %232 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 14
  %233 = load %"class.blink::mojom::internal::NotificationData_Data"*, %"class.blink::mojom::internal::NotificationData_Data"** %9, align 8
  %234 = getelementptr inbounds %"class.blink::mojom::internal::NotificationData_Data", %"class.blink::mojom::internal::NotificationData_Data"* %233, i64 0, i32 14
  %235 = getelementptr inbounds %"struct.mojo::internal::Pointer.4", %"struct.mojo::internal::Pointer.4"* %234, i64 0, i32 0
  %236 = load i64, i64* %235, align 8
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %238, label %255

238:                                              ; preds = %231
  %239 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %232, i64 0, i32 0, i32 0
  %240 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %239, align 8
  %241 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 14, i32 0, i32 1
  %242 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %241, align 8
  %243 = icmp eq %"class.mojo::StructPtr"* %242, %240
  br i1 %243, label %254, label %244

244:                                              ; preds = %238, %252
  %245 = phi %"class.mojo::StructPtr"* [ %246, %252 ], [ %242, %238 ]
  %246 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %245, i64 -1
  %247 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %246, i64 0, i32 0, i32 0, i32 0, i32 0
  %248 = load %"class.blink::mojom::NotificationAction"*, %"class.blink::mojom::NotificationAction"** %247, align 8
  store %"class.blink::mojom::NotificationAction"* null, %"class.blink::mojom::NotificationAction"** %247, align 8
  %249 = icmp eq %"class.blink::mojom::NotificationAction"* %248, null
  br i1 %249, label %252, label %250

250:                                              ; preds = %244
  call void @_ZN5blink5mojom18NotificationActionD1Ev(%"class.blink::mojom::NotificationAction"* nonnull %248) #9
  %251 = bitcast %"class.blink::mojom::NotificationAction"* %248 to i8*
  call void @_ZdlPv(i8* %251) #10
  br label %252

252:                                              ; preds = %250, %244
  %253 = icmp eq %"class.mojo::StructPtr"* %246, %240
  br i1 %253, label %254, label %244

254:                                              ; preds = %252, %238
  store %"class.mojo::StructPtr"* %240, %"class.mojo::StructPtr"** %241, align 8
  br label %295

255:                                              ; preds = %231
  %256 = bitcast %"struct.mojo::internal::Pointer.4"* %234 to i8*
  %257 = getelementptr inbounds i8, i8* %256, i64 %236
  %258 = load %"class.mojo::Message"*, %"class.mojo::Message"** %10, align 8
  %259 = getelementptr inbounds i8, i8* %257, i64 4
  %260 = bitcast i8* %259 to i32*
  %261 = load i32, i32* %260, align 1
  %262 = zext i32 %261 to i64
  %263 = call zeroext i1 @_ZN4mojo11ArrayTraitsINSt3__16vectorINS_9StructPtrIN5blink5mojom18NotificationActionEEENS1_9allocatorIS7_EEEEE6ResizeERSA_m(%"class.std::__1::vector.54"* dereferenceable(24) %232, i64 %262) #9
  br i1 %263, label %264, label %432

264:                                              ; preds = %255
  %265 = load i32, i32* %260, align 1
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %295, label %267

267:                                              ; preds = %264
  %268 = getelementptr inbounds i8, i8* %257, i64 8
  %269 = bitcast i8* %268 to %"class.mojo::internal::Array_Data.104"*
  %270 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %232, i64 0, i32 0, i32 0
  br label %271

271:                                              ; preds = %291, %267
  %272 = phi i64 [ 0, %267 ], [ %277, %291 ]
  %273 = getelementptr inbounds %"class.mojo::internal::Array_Data.104", %"class.mojo::internal::Array_Data.104"* %269, i64 %272
  %274 = bitcast %"class.mojo::internal::Array_Data.104"* %273 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = icmp eq i64 %275, 0
  %277 = add nuw nsw i64 %272, 1
  %278 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %270, align 8
  %279 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %278, i64 %272
  br i1 %276, label %280, label %286

280:                                              ; preds = %271
  %281 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %279, i64 0, i32 0, i32 0, i32 0, i32 0
  %282 = load %"class.blink::mojom::NotificationAction"*, %"class.blink::mojom::NotificationAction"** %281, align 8
  store %"class.blink::mojom::NotificationAction"* null, %"class.blink::mojom::NotificationAction"** %281, align 8
  %283 = icmp eq %"class.blink::mojom::NotificationAction"* %282, null
  br i1 %283, label %291, label %284

284:                                              ; preds = %280
  call void @_ZN5blink5mojom18NotificationActionD1Ev(%"class.blink::mojom::NotificationAction"* nonnull %282) #9
  %285 = bitcast %"class.blink::mojom::NotificationAction"* %282 to i8*
  call void @_ZdlPv(i8* %285) #10
  br label %291

286:                                              ; preds = %271
  %287 = bitcast %"class.mojo::internal::Array_Data.104"* %273 to i8*
  %288 = getelementptr inbounds i8, i8* %287, i64 %275
  %289 = bitcast i8* %288 to %"class.blink::mojom::internal::NotificationAction_Data"*
  %290 = call zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom26NotificationActionDataViewENS_9StructPtrINS2_18NotificationActionEEEE4ReadES3_PS6_(%"class.blink::mojom::internal::NotificationAction_Data"* nonnull %289, %"class.mojo::Message"* %258, %"class.mojo::StructPtr"* %279) #9
  br i1 %290, label %291, label %432

291:                                              ; preds = %286, %284, %280
  %292 = load i32, i32* %260, align 1
  %293 = zext i32 %292 to i64
  %294 = icmp ult i64 %277, %293
  br i1 %294, label %271, label %295

295:                                              ; preds = %291, %254, %264
  %296 = load %"class.blink::mojom::internal::NotificationData_Data"*, %"class.blink::mojom::internal::NotificationData_Data"** %9, align 8
  %297 = getelementptr inbounds %"class.blink::mojom::internal::NotificationData_Data", %"class.blink::mojom::internal::NotificationData_Data"* %296, i64 0, i32 13
  %298 = getelementptr inbounds %"struct.mojo::internal::Pointer.3", %"struct.mojo::internal::Pointer.3"* %297, i64 0, i32 0
  %299 = load i64, i64* %298, align 8
  %300 = icmp eq i64 %299, 0
  %301 = bitcast %"struct.mojo::internal::Pointer.3"* %297 to i8*
  %302 = getelementptr inbounds i8, i8* %301, i64 %299
  br i1 %300, label %322, label %303

303:                                              ; preds = %295
  %304 = getelementptr inbounds i8, i8* %302, i64 4
  %305 = bitcast i8* %304 to i32*
  %306 = load i32, i32* %305, align 1
  %307 = zext i32 %306 to i64
  %308 = icmp eq i32 %306, 0
  br i1 %308, label %322, label %309

309:                                              ; preds = %303
  %310 = call i8* @_Znwm(i64 %307) #10
  %311 = getelementptr inbounds i8, i8* %310, i64 %307
  %312 = ptrtoint i8* %310 to i64
  %313 = sub i64 %307, %312
  %314 = getelementptr i8, i8* %310, i64 %313
  %315 = ptrtoint i8* %314 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %310, i8 0, i64 %315, i1 false) #9
  %316 = ptrtoint i8* %311 to i64
  %317 = load i32, i32* %305, align 1
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %322, label %319

319:                                              ; preds = %309
  %320 = zext i32 %317 to i64
  %321 = getelementptr inbounds i8, i8* %302, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %310, i8* align 1 %321, i64 %320, i1 false) #9
  br label %322

322:                                              ; preds = %303, %319, %309, %295
  %323 = phi i64 [ %312, %309 ], [ %312, %319 ], [ 0, %295 ], [ 0, %303 ]
  %324 = phi i64 [ %316, %309 ], [ %316, %319 ], [ 0, %295 ], [ 0, %303 ]
  %325 = load %"class.blink::mojom::internal::NotificationData_Data"*, %"class.blink::mojom::internal::NotificationData_Data"** %9, align 8
  %326 = getelementptr inbounds %"class.blink::mojom::internal::NotificationData_Data", %"class.blink::mojom::internal::NotificationData_Data"* %325, i64 0, i32 15
  %327 = getelementptr inbounds %"struct.mojo::internal::Pointer.5", %"struct.mojo::internal::Pointer.5"* %326, i64 0, i32 0
  %328 = load i64, i64* %327, align 8
  %329 = icmp eq i64 %328, 0
  %330 = bitcast %"struct.mojo::internal::Pointer.5"* %326 to i8*
  %331 = getelementptr inbounds i8, i8* %330, i64 %328
  %332 = bitcast i8* %331 to %"class.mojo_base::mojom::internal::Time_Data"*
  %333 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  br i1 %329, label %334, label %335

334:                                              ; preds = %322
  store i8 0, i8* %333, align 8
  br label %343

335:                                              ; preds = %322
  %336 = load i8, i8* %333, align 8, !range !2
  %337 = icmp eq i8 %336, 0
  br i1 %337, label %338, label %340

338:                                              ; preds = %335
  %339 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %339, align 8
  store i8 1, i8* %333, align 8
  br label %340

340:                                              ; preds = %335, %338
  %341 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0
  %342 = call zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom12TimeDataViewEN4base4TimeEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::Time_Data"* nonnull %332, %"class.base::Time"* %341) #9
  br i1 %342, label %343, label %432

343:                                              ; preds = %334, %340
  %344 = getelementptr inbounds [15 x i8], [15 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %344)
  %345 = getelementptr inbounds [15 x i8], [15 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %345)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %345, i8 0, i64 15, i1 false)
  %346 = load i8, i8* %11, align 8, !range !2, !noalias !3
  %347 = icmp eq i8 %346, 0
  br i1 %347, label %357, label %348

348:                                              ; preds = %343
  %349 = getelementptr inbounds %"class.absl::optional.80", %"class.absl::optional.80"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %350 = bitcast %"class.std::__1::basic_string.31"* %349 to i8*
  %351 = getelementptr inbounds %"class.absl::optional.80", %"class.absl::optional.80"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = load i8*, i8** %351, align 8
  %353 = getelementptr inbounds %"class.absl::optional.80", %"class.absl::optional.80"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %354 = bitcast i64* %353 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %344, i8* align 8 %354, i64 15, i1 false)
  %355 = getelementptr inbounds i8, i8* %11, i64 31
  %356 = load i8, i8* %355, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %350, i8 0, i64 24, i1 false) #9, !noalias !3
  br label %358

357:                                              ; preds = %343
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %344, i8* nonnull align 8 %345, i64 15, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %345, i8 0, i64 15, i1 false), !noalias !3
  br label %358

358:                                              ; preds = %348, %357
  %359 = phi i8* [ null, %357 ], [ %352, %348 ]
  %360 = phi i8 [ 0, %357 ], [ %356, %348 ]
  %361 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 2
  %362 = bitcast %"class.std::__1::basic_string.31"* %361 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %363 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %362, i64 0, i32 1, i32 0
  %364 = load i8, i8* %363, align 1
  %365 = icmp slt i8 %364, 0
  br i1 %365, label %366, label %369

366:                                              ; preds = %358
  %367 = getelementptr inbounds %"class.std::__1::basic_string.31", %"class.std::__1::basic_string.31"* %361, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %368 = load i8*, i8** %367, align 8
  call void @_ZdlPv(i8* %368) #10
  br label %369

369:                                              ; preds = %358, %366
  %370 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %359, i8** %370, align 8
  %371 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %372 = bitcast i64* %371 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %372, i8* nonnull align 8 %344, i64 15, i1 false)
  %373 = bitcast %"struct.blink::PlatformNotificationData"* %2 to i8*
  %374 = getelementptr inbounds i8, i8* %373, i64 55
  store i8 %360, i8* %374, align 1
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %345)
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %344)
  %375 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 13
  %376 = inttoptr i64 %323 to i8*
  %377 = inttoptr i64 %324 to i8*
  call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE6assignINS_11__wrap_iterIPhEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.50"* %375, i8* %376, i8* %377)
  %378 = load %"class.blink::mojom::internal::NotificationData_Data"*, %"class.blink::mojom::internal::NotificationData_Data"** %9, align 8
  %379 = getelementptr inbounds %"class.blink::mojom::internal::NotificationData_Data", %"class.blink::mojom::internal::NotificationData_Data"* %378, i64 0, i32 12
  %380 = load double, double* %379, align 1
  %381 = call i64 @_ZN4base4Time10FromJsTimeEd(double %380) #9
  %382 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 9, i32 0, i32 0
  store i64 %381, i64* %382, align 8
  %383 = load %"class.blink::mojom::internal::NotificationData_Data"*, %"class.blink::mojom::internal::NotificationData_Data"** %9, align 8
  %384 = getelementptr inbounds %"class.blink::mojom::internal::NotificationData_Data", %"class.blink::mojom::internal::NotificationData_Data"* %383, i64 0, i32 3
  %385 = load i8, i8* %384, align 1
  %386 = and i8 %385, 1
  %387 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 10
  store i8 %386, i8* %387, align 8
  %388 = load i8, i8* %384, align 1
  %389 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 11
  %390 = lshr i8 %388, 1
  %391 = and i8 %390, 1
  store i8 %391, i8* %389, align 1
  %392 = load i8, i8* %384, align 1
  %393 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 12
  %394 = lshr i8 %392, 2
  %395 = and i8 %394, 1
  store i8 %395, i8* %393, align 2
  %396 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 8, i32 0, i32 1
  %397 = bitcast i32** %396 to i64*
  %398 = load i64, i64* %397, align 8
  %399 = bitcast %"class.std::__1::vector.43"* %155 to i64*
  %400 = load i64, i64* %399, align 8
  %401 = sub i64 %398, %400
  %402 = ashr exact i64 %401, 2
  %403 = icmp ugt i64 %402, 99
  %404 = inttoptr i64 %400 to i32*
  %405 = inttoptr i64 %398 to i32*
  br i1 %403, label %432, label %406

406:                                              ; preds = %369
  %407 = icmp eq i32* %404, %405
  br i1 %407, label %415, label %410

408:                                              ; preds = %410
  %409 = icmp eq i32* %414, %405
  br i1 %409, label %415, label %410

410:                                              ; preds = %406, %408
  %411 = phi i32* [ %414, %408 ], [ %404, %406 ]
  %412 = load i32, i32* %411, align 4
  %413 = icmp ult i32 %412, 10001
  %414 = getelementptr inbounds i32, i32* %411, i64 1
  br i1 %413, label %408, label %432

415:                                              ; preds = %408, %406
  %416 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 14, i32 0, i32 1
  %417 = bitcast %"class.mojo::StructPtr"** %416 to i64*
  %418 = load i64, i64* %417, align 8
  %419 = bitcast %"class.std::__1::vector.54"* %232 to i64*
  %420 = load i64, i64* %419, align 8
  %421 = sub i64 %418, %420
  %422 = ashr exact i64 %421, 3
  %423 = icmp ult i64 %422, 3
  br i1 %423, label %424, label %432

424:                                              ; preds = %415
  %425 = getelementptr inbounds %"struct.blink::PlatformNotificationData", %"struct.blink::PlatformNotificationData"* %2, i64 0, i32 13, i32 0, i32 1
  %426 = bitcast i8** %425 to i64*
  %427 = load i64, i64* %426, align 8
  %428 = bitcast %"class.std::__1::vector.50"* %375 to i64*
  %429 = load i64, i64* %428, align 8
  %430 = sub i64 %427, %429
  %431 = icmp ult i64 %430, 1048577
  br label %432

432:                                              ; preds = %286, %410, %369, %255, %415, %424, %19, %25, %45, %114, %129, %144, %340
  %433 = phi i64 [ %323, %424 ], [ %323, %415 ], [ %323, %340 ], [ 0, %144 ], [ 0, %129 ], [ 0, %114 ], [ 0, %45 ], [ 0, %25 ], [ 0, %19 ], [ 0, %255 ], [ %323, %369 ], [ %323, %410 ], [ 0, %286 ]
  %434 = phi i1 [ %431, %424 ], [ false, %415 ], [ false, %340 ], [ false, %144 ], [ false, %129 ], [ false, %114 ], [ false, %45 ], [ false, %25 ], [ false, %19 ], [ false, %255 ], [ false, %369 ], [ false, %410 ], [ false, %286 ]
  %435 = load i8, i8* %11, align 8, !range !2
  %436 = icmp eq i8 %435, 0
  br i1 %436, label %447, label %437

437:                                              ; preds = %432
  %438 = getelementptr inbounds %"class.absl::optional.80", %"class.absl::optional.80"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %439 = bitcast %"class.std::__1::basic_string.31"* %438 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %440 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %439, i64 0, i32 1, i32 0
  %441 = load i8, i8* %440, align 1
  %442 = icmp slt i8 %441, 0
  br i1 %442, label %443, label %446

443:                                              ; preds = %437
  %444 = getelementptr inbounds %"class.std::__1::basic_string.31", %"class.std::__1::basic_string.31"* %438, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %445 = load i8*, i8** %444, align 8
  call void @_ZdlPv(i8* %445) #10
  br label %446

446:                                              ; preds = %443, %437
  store i8 0, i8* %11, align 8
  br label %447

447:                                              ; preds = %432, %446
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #9
  %448 = icmp eq i64 %433, 0
  br i1 %448, label %451, label %449

449:                                              ; preds = %447
  %450 = inttoptr i64 %433 to i8*
  call void @_ZdlPv(i8* nonnull %450) #10
  br label %451

451:                                              ; preds = %447, %449
  ret i1 %434
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIcNS_9allocatorIcEEE6assignINS_11__wrap_iterIPhEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.50"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %1 to i64
  %5 = ptrtoint i8* %2 to i64
  %6 = sub i64 %5, %4
  %7 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.50"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp ugt i64 %6, %12
  %14 = inttoptr i64 %11 to i8*
  br i1 %13, label %243, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %0, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %11
  %20 = icmp ugt i64 %6, %19
  %21 = getelementptr inbounds i8, i8* %1, i64 %19
  %22 = select i1 %20, i8* %21, i8* %2
  %23 = icmp eq i8* %22, %1
  br i1 %23, label %125, label %24

24:                                               ; preds = %15
  %25 = ptrtoint i8* %22 to i64
  %26 = sub i64 %25, %4
  %27 = icmp ult i64 %26, 32
  br i1 %27, label %115, label %28

28:                                               ; preds = %24
  %29 = sub i64 %11, %4
  %30 = getelementptr i8, i8* %22, i64 %29
  %31 = icmp ugt i8* %22, %14
  %32 = icmp ugt i8* %30, %1
  %33 = and i1 %31, %32
  br i1 %33, label %115, label %34

34:                                               ; preds = %28
  %35 = and i64 %26, -32
  %36 = getelementptr i8, i8* %14, i64 %35
  %37 = getelementptr i8, i8* %1, i64 %35
  %38 = add i64 %35, -32
  %39 = lshr exact i64 %38, 5
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 3
  %42 = icmp ult i64 %38, 96
  br i1 %42, label %94, label %43

43:                                               ; preds = %34
  %44 = sub nsw i64 %40, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 0, %43 ], [ %91, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %92, %45 ]
  %48 = getelementptr i8, i8* %14, i64 %46
  %49 = getelementptr i8, i8* %1, i64 %46
  %50 = bitcast i8* %49 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1, !alias.scope !6
  %52 = getelementptr i8, i8* %49, i64 16
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1, !alias.scope !6
  %55 = bitcast i8* %48 to <16 x i8>*
  store <16 x i8> %51, <16 x i8>* %55, align 1, !alias.scope !9, !noalias !6
  %56 = getelementptr i8, i8* %48, i64 16
  %57 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %54, <16 x i8>* %57, align 1, !alias.scope !9, !noalias !6
  %58 = or i64 %46, 32
  %59 = getelementptr i8, i8* %14, i64 %58
  %60 = getelementptr i8, i8* %1, i64 %58
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !6
  %63 = getelementptr i8, i8* %60, i64 16
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1, !alias.scope !6
  %66 = bitcast i8* %59 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %66, align 1, !alias.scope !9, !noalias !6
  %67 = getelementptr i8, i8* %59, i64 16
  %68 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %65, <16 x i8>* %68, align 1, !alias.scope !9, !noalias !6
  %69 = or i64 %46, 64
  %70 = getelementptr i8, i8* %14, i64 %69
  %71 = getelementptr i8, i8* %1, i64 %69
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !6
  %74 = getelementptr i8, i8* %71, i64 16
  %75 = bitcast i8* %74 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 1, !alias.scope !6
  %77 = bitcast i8* %70 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %77, align 1, !alias.scope !9, !noalias !6
  %78 = getelementptr i8, i8* %70, i64 16
  %79 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %79, align 1, !alias.scope !9, !noalias !6
  %80 = or i64 %46, 96
  %81 = getelementptr i8, i8* %14, i64 %80
  %82 = getelementptr i8, i8* %1, i64 %80
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !6
  %85 = getelementptr i8, i8* %82, i64 16
  %86 = bitcast i8* %85 to <16 x i8>*
  %87 = load <16 x i8>, <16 x i8>* %86, align 1, !alias.scope !6
  %88 = bitcast i8* %81 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %88, align 1, !alias.scope !9, !noalias !6
  %89 = getelementptr i8, i8* %81, i64 16
  %90 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %87, <16 x i8>* %90, align 1, !alias.scope !9, !noalias !6
  %91 = add i64 %46, 128
  %92 = add i64 %47, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %45, !llvm.loop !11

94:                                               ; preds = %45, %34
  %95 = phi i64 [ 0, %34 ], [ %91, %45 ]
  %96 = icmp eq i64 %41, 0
  br i1 %96, label %113, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %110, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %111, %97 ], [ %41, %94 ]
  %100 = getelementptr i8, i8* %14, i64 %98
  %101 = getelementptr i8, i8* %1, i64 %98
  %102 = bitcast i8* %101 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 1, !alias.scope !6
  %104 = getelementptr i8, i8* %101, i64 16
  %105 = bitcast i8* %104 to <16 x i8>*
  %106 = load <16 x i8>, <16 x i8>* %105, align 1, !alias.scope !6
  %107 = bitcast i8* %100 to <16 x i8>*
  store <16 x i8> %103, <16 x i8>* %107, align 1, !alias.scope !9, !noalias !6
  %108 = getelementptr i8, i8* %100, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %106, <16 x i8>* %109, align 1, !alias.scope !9, !noalias !6
  %110 = add i64 %98, 32
  %111 = add i64 %99, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %97, !llvm.loop !13

113:                                              ; preds = %97, %94
  %114 = icmp eq i64 %26, %35
  br i1 %114, label %125, label %115

115:                                              ; preds = %113, %28, %24
  %116 = phi i8* [ %14, %28 ], [ %14, %24 ], [ %36, %113 ]
  %117 = phi i8* [ %1, %28 ], [ %1, %24 ], [ %37, %113 ]
  br label %118

118:                                              ; preds = %115, %118
  %119 = phi i8* [ %123, %118 ], [ %116, %115 ]
  %120 = phi i8* [ %122, %118 ], [ %117, %115 ]
  %121 = load i8, i8* %120, align 1
  store i8 %121, i8* %119, align 1
  %122 = getelementptr inbounds i8, i8* %120, i64 1
  %123 = getelementptr inbounds i8, i8* %119, i64 1
  %124 = icmp eq i8* %122, %22
  br i1 %124, label %125, label %118, !llvm.loop !15

125:                                              ; preds = %118, %113, %15
  %126 = phi i8* [ %14, %15 ], [ %36, %113 ], [ %123, %118 ]
  br i1 %20, label %127, label %242

127:                                              ; preds = %125
  %128 = load i64, i64* %17, align 8
  %129 = icmp eq i8* %22, %2
  br i1 %129, label %240, label %130

130:                                              ; preds = %127
  %131 = inttoptr i64 %128 to i8*
  %132 = sub i64 %11, %4
  %133 = sub i64 %132, %18
  %134 = getelementptr i8, i8* %2, i64 %133
  %135 = ptrtoint i8* %134 to i64
  %136 = icmp ult i8* %134, inttoptr (i64 32 to i8*)
  br i1 %136, label %227, label %137

137:                                              ; preds = %130
  %138 = sub i64 %11, %4
  %139 = sub i64 %138, %18
  %140 = getelementptr i8, i8* %2, i64 %139
  %141 = ptrtoint i8* %140 to i64
  %142 = getelementptr i8, i8* %131, i64 %141
  %143 = icmp ult i8* %131, %2
  %144 = icmp ult i8* %21, %142
  %145 = and i1 %143, %144
  br i1 %145, label %227, label %146

146:                                              ; preds = %137
  %147 = and i64 %135, -32
  %148 = getelementptr i8, i8* %131, i64 %147
  %149 = getelementptr i8, i8* %21, i64 %147
  %150 = add i64 %147, -32
  %151 = lshr exact i64 %150, 5
  %152 = add nuw nsw i64 %151, 1
  %153 = and i64 %152, 3
  %154 = icmp ult i64 %150, 96
  br i1 %154, label %206, label %155

155:                                              ; preds = %146
  %156 = sub nsw i64 %152, %153
  br label %157

157:                                              ; preds = %157, %155
  %158 = phi i64 [ 0, %155 ], [ %203, %157 ]
  %159 = phi i64 [ %156, %155 ], [ %204, %157 ]
  %160 = getelementptr i8, i8* %131, i64 %158
  %161 = getelementptr i8, i8* %21, i64 %158
  %162 = bitcast i8* %161 to <16 x i8>*
  %163 = load <16 x i8>, <16 x i8>* %162, align 1, !alias.scope !16
  %164 = getelementptr i8, i8* %161, i64 16
  %165 = bitcast i8* %164 to <16 x i8>*
  %166 = load <16 x i8>, <16 x i8>* %165, align 1, !alias.scope !16
  %167 = bitcast i8* %160 to <16 x i8>*
  store <16 x i8> %163, <16 x i8>* %167, align 1, !alias.scope !19, !noalias !16
  %168 = getelementptr i8, i8* %160, i64 16
  %169 = bitcast i8* %168 to <16 x i8>*
  store <16 x i8> %166, <16 x i8>* %169, align 1, !alias.scope !19, !noalias !16
  %170 = or i64 %158, 32
  %171 = getelementptr i8, i8* %131, i64 %170
  %172 = getelementptr i8, i8* %21, i64 %170
  %173 = bitcast i8* %172 to <16 x i8>*
  %174 = load <16 x i8>, <16 x i8>* %173, align 1, !alias.scope !16
  %175 = getelementptr i8, i8* %172, i64 16
  %176 = bitcast i8* %175 to <16 x i8>*
  %177 = load <16 x i8>, <16 x i8>* %176, align 1, !alias.scope !16
  %178 = bitcast i8* %171 to <16 x i8>*
  store <16 x i8> %174, <16 x i8>* %178, align 1, !alias.scope !19, !noalias !16
  %179 = getelementptr i8, i8* %171, i64 16
  %180 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %177, <16 x i8>* %180, align 1, !alias.scope !19, !noalias !16
  %181 = or i64 %158, 64
  %182 = getelementptr i8, i8* %131, i64 %181
  %183 = getelementptr i8, i8* %21, i64 %181
  %184 = bitcast i8* %183 to <16 x i8>*
  %185 = load <16 x i8>, <16 x i8>* %184, align 1, !alias.scope !16
  %186 = getelementptr i8, i8* %183, i64 16
  %187 = bitcast i8* %186 to <16 x i8>*
  %188 = load <16 x i8>, <16 x i8>* %187, align 1, !alias.scope !16
  %189 = bitcast i8* %182 to <16 x i8>*
  store <16 x i8> %185, <16 x i8>* %189, align 1, !alias.scope !19, !noalias !16
  %190 = getelementptr i8, i8* %182, i64 16
  %191 = bitcast i8* %190 to <16 x i8>*
  store <16 x i8> %188, <16 x i8>* %191, align 1, !alias.scope !19, !noalias !16
  %192 = or i64 %158, 96
  %193 = getelementptr i8, i8* %131, i64 %192
  %194 = getelementptr i8, i8* %21, i64 %192
  %195 = bitcast i8* %194 to <16 x i8>*
  %196 = load <16 x i8>, <16 x i8>* %195, align 1, !alias.scope !16
  %197 = getelementptr i8, i8* %194, i64 16
  %198 = bitcast i8* %197 to <16 x i8>*
  %199 = load <16 x i8>, <16 x i8>* %198, align 1, !alias.scope !16
  %200 = bitcast i8* %193 to <16 x i8>*
  store <16 x i8> %196, <16 x i8>* %200, align 1, !alias.scope !19, !noalias !16
  %201 = getelementptr i8, i8* %193, i64 16
  %202 = bitcast i8* %201 to <16 x i8>*
  store <16 x i8> %199, <16 x i8>* %202, align 1, !alias.scope !19, !noalias !16
  %203 = add i64 %158, 128
  %204 = add i64 %159, -4
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %157, !llvm.loop !21

206:                                              ; preds = %157, %146
  %207 = phi i64 [ 0, %146 ], [ %203, %157 ]
  %208 = icmp eq i64 %153, 0
  br i1 %208, label %225, label %209

209:                                              ; preds = %206, %209
  %210 = phi i64 [ %222, %209 ], [ %207, %206 ]
  %211 = phi i64 [ %223, %209 ], [ %153, %206 ]
  %212 = getelementptr i8, i8* %131, i64 %210
  %213 = getelementptr i8, i8* %21, i64 %210
  %214 = bitcast i8* %213 to <16 x i8>*
  %215 = load <16 x i8>, <16 x i8>* %214, align 1, !alias.scope !16
  %216 = getelementptr i8, i8* %213, i64 16
  %217 = bitcast i8* %216 to <16 x i8>*
  %218 = load <16 x i8>, <16 x i8>* %217, align 1, !alias.scope !16
  %219 = bitcast i8* %212 to <16 x i8>*
  store <16 x i8> %215, <16 x i8>* %219, align 1, !alias.scope !19, !noalias !16
  %220 = getelementptr i8, i8* %212, i64 16
  %221 = bitcast i8* %220 to <16 x i8>*
  store <16 x i8> %218, <16 x i8>* %221, align 1, !alias.scope !19, !noalias !16
  %222 = add i64 %210, 32
  %223 = add i64 %211, -1
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %209, !llvm.loop !22

225:                                              ; preds = %209, %206
  %226 = icmp eq i64 %147, %135
  br i1 %226, label %237, label %227

227:                                              ; preds = %225, %137, %130
  %228 = phi i8* [ %131, %137 ], [ %131, %130 ], [ %148, %225 ]
  %229 = phi i8* [ %21, %137 ], [ %21, %130 ], [ %149, %225 ]
  br label %230

230:                                              ; preds = %227, %230
  %231 = phi i8* [ %235, %230 ], [ %228, %227 ]
  %232 = phi i8* [ %234, %230 ], [ %229, %227 ]
  %233 = load i8, i8* %232, align 1
  store i8 %233, i8* %231, align 1
  %234 = getelementptr inbounds i8, i8* %232, i64 1
  %235 = getelementptr inbounds i8, i8* %231, i64 1
  %236 = icmp eq i8* %234, %2
  br i1 %236, label %237, label %230, !llvm.loop !23

237:                                              ; preds = %230, %225
  %238 = phi i8* [ %148, %225 ], [ %235, %230 ]
  %239 = ptrtoint i8* %238 to i64
  br label %240

240:                                              ; preds = %127, %237
  %241 = phi i64 [ %128, %127 ], [ %239, %237 ]
  store i64 %241, i64* %17, align 8
  br label %366

242:                                              ; preds = %125
  store i8* %126, i8** %16, align 8
  br label %366

243:                                              ; preds = %3
  %244 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %0, i64 0, i32 0, i32 0
  %245 = icmp eq i64 %11, 0
  br i1 %245, label %250, label %246

246:                                              ; preds = %243
  %247 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %0, i64 0, i32 0, i32 1
  %248 = bitcast i8** %247 to i64*
  store i64 %11, i64* %248, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #10
  %249 = bitcast %"class.std::__1::vector.50"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %249, i8 0, i64 24, i1 false) #9
  br label %250

250:                                              ; preds = %243, %246
  %251 = phi i64 [ %9, %243 ], [ 0, %246 ]
  %252 = icmp slt i64 %6, 0
  br i1 %252, label %253, label %255

253:                                              ; preds = %250
  %254 = bitcast %"class.std::__1::vector.50"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %254) #11
  unreachable

255:                                              ; preds = %250
  %256 = icmp ult i64 %251, 4611686018427387903
  br i1 %256, label %257, label %261

257:                                              ; preds = %255
  %258 = shl i64 %251, 1
  %259 = icmp ult i64 %258, %6
  %260 = select i1 %259, i64 %6, i64 %258
  br label %261

261:                                              ; preds = %257, %255
  %262 = phi i64 [ %260, %257 ], [ 9223372036854775807, %255 ]
  %263 = tail call i8* @_Znwm(i64 %262) #10
  %264 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %0, i64 0, i32 0, i32 1
  store i8* %263, i8** %264, align 8
  store i8* %263, i8** %244, align 8
  %265 = getelementptr inbounds i8, i8* %263, i64 %262
  store i8* %265, i8** %7, align 8
  %266 = bitcast i8** %264 to i64*
  %267 = icmp eq i8* %1, %2
  br i1 %267, label %363, label %268

268:                                              ; preds = %261
  %269 = ptrtoint i8* %2 to i64
  %270 = sub i64 %269, %4
  %271 = icmp ult i64 %270, 32
  br i1 %271, label %353, label %272

272:                                              ; preds = %268
  %273 = and i64 %270, -32
  %274 = getelementptr i8, i8* %263, i64 %273
  %275 = getelementptr i8, i8* %1, i64 %273
  %276 = add i64 %273, -32
  %277 = lshr exact i64 %276, 5
  %278 = add nuw nsw i64 %277, 1
  %279 = and i64 %278, 3
  %280 = icmp ult i64 %276, 96
  br i1 %280, label %332, label %281

281:                                              ; preds = %272
  %282 = sub nsw i64 %278, %279
  br label %283

283:                                              ; preds = %283, %281
  %284 = phi i64 [ 0, %281 ], [ %329, %283 ]
  %285 = phi i64 [ %282, %281 ], [ %330, %283 ]
  %286 = getelementptr i8, i8* %263, i64 %284
  %287 = getelementptr i8, i8* %1, i64 %284
  %288 = bitcast i8* %287 to <16 x i8>*
  %289 = load <16 x i8>, <16 x i8>* %288, align 1
  %290 = getelementptr i8, i8* %287, i64 16
  %291 = bitcast i8* %290 to <16 x i8>*
  %292 = load <16 x i8>, <16 x i8>* %291, align 1
  %293 = bitcast i8* %286 to <16 x i8>*
  store <16 x i8> %289, <16 x i8>* %293, align 1
  %294 = getelementptr i8, i8* %286, i64 16
  %295 = bitcast i8* %294 to <16 x i8>*
  store <16 x i8> %292, <16 x i8>* %295, align 1
  %296 = or i64 %284, 32
  %297 = getelementptr i8, i8* %263, i64 %296
  %298 = getelementptr i8, i8* %1, i64 %296
  %299 = bitcast i8* %298 to <16 x i8>*
  %300 = load <16 x i8>, <16 x i8>* %299, align 1
  %301 = getelementptr i8, i8* %298, i64 16
  %302 = bitcast i8* %301 to <16 x i8>*
  %303 = load <16 x i8>, <16 x i8>* %302, align 1
  %304 = bitcast i8* %297 to <16 x i8>*
  store <16 x i8> %300, <16 x i8>* %304, align 1
  %305 = getelementptr i8, i8* %297, i64 16
  %306 = bitcast i8* %305 to <16 x i8>*
  store <16 x i8> %303, <16 x i8>* %306, align 1
  %307 = or i64 %284, 64
  %308 = getelementptr i8, i8* %263, i64 %307
  %309 = getelementptr i8, i8* %1, i64 %307
  %310 = bitcast i8* %309 to <16 x i8>*
  %311 = load <16 x i8>, <16 x i8>* %310, align 1
  %312 = getelementptr i8, i8* %309, i64 16
  %313 = bitcast i8* %312 to <16 x i8>*
  %314 = load <16 x i8>, <16 x i8>* %313, align 1
  %315 = bitcast i8* %308 to <16 x i8>*
  store <16 x i8> %311, <16 x i8>* %315, align 1
  %316 = getelementptr i8, i8* %308, i64 16
  %317 = bitcast i8* %316 to <16 x i8>*
  store <16 x i8> %314, <16 x i8>* %317, align 1
  %318 = or i64 %284, 96
  %319 = getelementptr i8, i8* %263, i64 %318
  %320 = getelementptr i8, i8* %1, i64 %318
  %321 = bitcast i8* %320 to <16 x i8>*
  %322 = load <16 x i8>, <16 x i8>* %321, align 1
  %323 = getelementptr i8, i8* %320, i64 16
  %324 = bitcast i8* %323 to <16 x i8>*
  %325 = load <16 x i8>, <16 x i8>* %324, align 1
  %326 = bitcast i8* %319 to <16 x i8>*
  store <16 x i8> %322, <16 x i8>* %326, align 1
  %327 = getelementptr i8, i8* %319, i64 16
  %328 = bitcast i8* %327 to <16 x i8>*
  store <16 x i8> %325, <16 x i8>* %328, align 1
  %329 = add i64 %284, 128
  %330 = add i64 %285, -4
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %283, !llvm.loop !24

332:                                              ; preds = %283, %272
  %333 = phi i64 [ 0, %272 ], [ %329, %283 ]
  %334 = icmp eq i64 %279, 0
  br i1 %334, label %351, label %335

335:                                              ; preds = %332, %335
  %336 = phi i64 [ %348, %335 ], [ %333, %332 ]
  %337 = phi i64 [ %349, %335 ], [ %279, %332 ]
  %338 = getelementptr i8, i8* %263, i64 %336
  %339 = getelementptr i8, i8* %1, i64 %336
  %340 = bitcast i8* %339 to <16 x i8>*
  %341 = load <16 x i8>, <16 x i8>* %340, align 1
  %342 = getelementptr i8, i8* %339, i64 16
  %343 = bitcast i8* %342 to <16 x i8>*
  %344 = load <16 x i8>, <16 x i8>* %343, align 1
  %345 = bitcast i8* %338 to <16 x i8>*
  store <16 x i8> %341, <16 x i8>* %345, align 1
  %346 = getelementptr i8, i8* %338, i64 16
  %347 = bitcast i8* %346 to <16 x i8>*
  store <16 x i8> %344, <16 x i8>* %347, align 1
  %348 = add i64 %336, 32
  %349 = add i64 %337, -1
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %351, label %335, !llvm.loop !25

351:                                              ; preds = %335, %332
  %352 = icmp eq i64 %270, %273
  br i1 %352, label %363, label %353

353:                                              ; preds = %351, %268
  %354 = phi i8* [ %263, %268 ], [ %274, %351 ]
  %355 = phi i8* [ %1, %268 ], [ %275, %351 ]
  br label %356

356:                                              ; preds = %353, %356
  %357 = phi i8* [ %361, %356 ], [ %354, %353 ]
  %358 = phi i8* [ %360, %356 ], [ %355, %353 ]
  %359 = load i8, i8* %358, align 1
  store i8 %359, i8* %357, align 1
  %360 = getelementptr inbounds i8, i8* %358, i64 1
  %361 = getelementptr inbounds i8, i8* %357, i64 1
  %362 = icmp eq i8* %360, %2
  br i1 %362, label %363, label %356, !llvm.loop !26

363:                                              ; preds = %356, %351, %261
  %364 = phi i8* [ %263, %261 ], [ %274, %351 ], [ %361, %356 ]
  %365 = ptrtoint i8* %364 to i64
  store i64 %365, i64* %266, align 8
  br label %366

366:                                              ; preds = %240, %242, %363
  ret void
}

declare i64 @_ZN4base4Time10FromJsTimeEd(double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom29NotificationResourcesDataViewENS1_21NotificationResourcesEE4ReadES3_PS4_(%"class.blink::mojom::internal::NotificationResources_Data"*, %"class.mojo::Message"*, %"struct.blink::NotificationResources"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %2, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::mojom::internal::NotificationResources_Data", %"class.blink::mojom::internal::NotificationResources_Data"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.mojo::internal::Pointer.85", %"struct.mojo::internal::Pointer.85"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void @_ZN8SkBitmap5resetEv(%class.SkBitmap* %4) #9
  br label %15

10:                                               ; preds = %3
  %11 = bitcast %"struct.mojo::internal::Pointer.85"* %5 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %7
  %13 = bitcast i8* %12 to %"class.skia::mojom::internal::BitmapN32_Data"*
  %14 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN4skia5mojom17BitmapN32DataViewE8SkBitmapE4ReadES3_PS4_(%"class.skia::mojom::internal::BitmapN32_Data"* nonnull %13, %"class.mojo::Message"* %1, %class.SkBitmap* %4) #9
  br i1 %14, label %15, label %61

15:                                               ; preds = %9, %10
  %16 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %2, i64 0, i32 1
  %17 = getelementptr inbounds %"class.blink::mojom::internal::NotificationResources_Data", %"class.blink::mojom::internal::NotificationResources_Data"* %0, i64 0, i32 2
  %18 = getelementptr inbounds %"struct.mojo::internal::Pointer.85", %"struct.mojo::internal::Pointer.85"* %17, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  tail call void @_ZN8SkBitmap5resetEv(%class.SkBitmap* %16) #9
  br label %27

22:                                               ; preds = %15
  %23 = bitcast %"struct.mojo::internal::Pointer.85"* %17 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 %19
  %25 = bitcast i8* %24 to %"class.skia::mojom::internal::BitmapN32_Data"*
  %26 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN4skia5mojom17BitmapN32DataViewE8SkBitmapE4ReadES3_PS4_(%"class.skia::mojom::internal::BitmapN32_Data"* nonnull %25, %"class.mojo::Message"* %1, %class.SkBitmap* %16) #9
  br i1 %26, label %27, label %61

27:                                               ; preds = %21, %22
  %28 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %2, i64 0, i32 2
  %29 = getelementptr inbounds %"class.blink::mojom::internal::NotificationResources_Data", %"class.blink::mojom::internal::NotificationResources_Data"* %0, i64 0, i32 3
  %30 = getelementptr inbounds %"struct.mojo::internal::Pointer.85", %"struct.mojo::internal::Pointer.85"* %29, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %27
  tail call void @_ZN8SkBitmap5resetEv(%class.SkBitmap* %28) #9
  br label %39

34:                                               ; preds = %27
  %35 = bitcast %"struct.mojo::internal::Pointer.85"* %29 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 %31
  %37 = bitcast i8* %36 to %"class.skia::mojom::internal::BitmapN32_Data"*
  %38 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN4skia5mojom17BitmapN32DataViewE8SkBitmapE4ReadES3_PS4_(%"class.skia::mojom::internal::BitmapN32_Data"* nonnull %37, %"class.mojo::Message"* %1, %class.SkBitmap* %28) #9
  br i1 %38, label %39, label %61

39:                                               ; preds = %33, %34
  %40 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %2, i64 0, i32 3
  %41 = getelementptr inbounds %"class.blink::mojom::internal::NotificationResources_Data", %"class.blink::mojom::internal::NotificationResources_Data"* %0, i64 0, i32 4
  %42 = getelementptr inbounds %"struct.mojo::internal::Pointer.86", %"struct.mojo::internal::Pointer.86"* %41, i64 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %56

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %40, i64 0, i32 0, i32 0
  %47 = load %class.SkBitmap*, %class.SkBitmap** %46, align 8
  %48 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %2, i64 0, i32 3, i32 0, i32 1
  %49 = load %class.SkBitmap*, %class.SkBitmap** %48, align 8
  %50 = icmp eq %class.SkBitmap* %49, %47
  br i1 %50, label %55, label %51

51:                                               ; preds = %45, %51
  %52 = phi %class.SkBitmap* [ %53, %51 ], [ %49, %45 ]
  %53 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %52, i64 -1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %53) #9
  %54 = icmp eq %class.SkBitmap* %53, %47
  br i1 %54, label %55, label %51

55:                                               ; preds = %51, %45
  store %class.SkBitmap* %47, %class.SkBitmap** %48, align 8
  br label %61

56:                                               ; preds = %39
  %57 = bitcast %"struct.mojo::internal::Pointer.86"* %41 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 %43
  %59 = bitcast i8* %58 to %"class.mojo::internal::Array_Data.112"*
  %60 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN4skia5mojom17BitmapN32DataViewEEENSt3__16vectorI8SkBitmapNS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal14BitmapN32_DataEEEEEPSC_PNS_7MessageE(%"class.mojo::internal::Array_Data.112"* nonnull %59, %"class.std::__1::vector.94"* %40, %"class.mojo::Message"* %1) #9
  br label %61

61:                                               ; preds = %56, %55, %34, %22, %10
  %62 = phi i1 [ false, %34 ], [ false, %22 ], [ false, %10 ], [ %60, %56 ], [ true, %55 ]
  ret i1 %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

declare zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom16String16DataViewENSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEE4ReadES3_PSA_(%"class.mojo_base::mojom::internal::String16_Data"*, %"class.mojo::Message"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal11DeserializeINS_14StringDataViewERPNS0_10Array_DataIcEEN4absl8optionalINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_(%"class.mojo::internal::Array_Data"** dereferenceable(8), %"class.absl::optional.80"*, %"class.mojo::Message"** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = load %"class.mojo::internal::Array_Data"*, %"class.mojo::internal::Array_Data"** %0, align 8
  %5 = icmp eq %"class.mojo::internal::Array_Data"* %4, null
  %6 = getelementptr inbounds %"class.absl::optional.80", %"class.absl::optional.80"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %5, label %9, label %20

9:                                                ; preds = %3
  br i1 %8, label %74, label %10

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.absl::optional.80", %"class.absl::optional.80"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = bitcast %"class.std::__1::basic_string.31"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string.31", %"class.std::__1::basic_string.31"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %16, %10
  store i8 0, i8* %6, align 8
  br label %74

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.absl::optional.80", %"class.absl::optional.80"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %8, label %22, label %27

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::basic_string.31"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #9
  store i8 1, i8* %6, align 8
  %24 = load %"class.mojo::internal::Array_Data"*, %"class.mojo::internal::Array_Data"** %0, align 8
  %25 = getelementptr inbounds %"class.absl::optional.80", %"class.absl::optional.80"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = icmp eq %"class.mojo::internal::Array_Data"* %24, null
  br i1 %26, label %74, label %27

27:                                               ; preds = %20, %22
  %28 = phi %"class.std::__1::basic_string.31"* [ %25, %22 ], [ %21, %20 ]
  %29 = phi %"class.mojo::internal::Array_Data"* [ %24, %22 ], [ %4, %20 ]
  %30 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %29, i64 1
  %31 = bitcast %"class.mojo::internal::Array_Data"* %30 to i8*
  %32 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %29, i64 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 1
  %34 = zext i32 %33 to i64
  %35 = tail call i1 @llvm.is.constant.i64(i64 %34) #9
  %36 = icmp ult i32 %33, 23
  %37 = and i1 %36, %35
  br i1 %37, label %38, label %56

38:                                               ; preds = %27
  %39 = bitcast %"class.std::__1::basic_string.31"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.absl::optional.80", %"class.absl::optional.80"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %34, i64* %44, align 8
  %45 = getelementptr inbounds %"class.absl::optional.80", %"class.absl::optional.80"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  br label %50

47:                                               ; preds = %38
  %48 = trunc i32 %33 to i8
  store i8 %48, i8* %40, align 1
  %49 = bitcast %"class.std::__1::basic_string.31"* %28 to i8*
  br label %50

50:                                               ; preds = %47, %43
  %51 = phi i8* [ %46, %43 ], [ %49, %47 ]
  %52 = icmp eq i32 %33, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %31, i64 %34, i1 false) #9
  br label %54

54:                                               ; preds = %53, %50
  %55 = getelementptr inbounds i8, i8* %51, i64 %34
  store i8 0, i8* %55, align 1
  br label %59

56:                                               ; preds = %27
  %57 = tail call dereferenceable(24) %"class.std::__1::basic_string.31"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.31"* %28, i8* %31, i64 %34) #9
  %58 = bitcast %"class.std::__1::basic_string.31"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %59

59:                                               ; preds = %56, %54
  %60 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %58, %56 ], [ %39, %54 ]
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  %64 = getelementptr inbounds %"class.absl::optional.80", %"class.absl::optional.80"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = bitcast %"class.std::__1::basic_string.31"* %28 to i8*
  %67 = select i1 %63, i8* %65, i8* %66
  %68 = getelementptr inbounds %"class.absl::optional.80", %"class.absl::optional.80"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = zext i8 %62 to i64
  %71 = select i1 %63, i64 %69, i64 %70
  %72 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %67, i64 %71) #9
  br i1 %72, label %74, label %73

73:                                               ; preds = %59
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #9
  br label %74

74:                                               ; preds = %73, %59, %22, %19, %9
  ret i1 true
}

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #4

declare dereferenceable(24) %"class.std::__1::basic_string.31"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.31"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo12StructTraitsIN3url5mojom11UrlDataViewE4GURLE4ReadES3_PS4_(%"class.url::mojom::internal::Url_Data"*, %"class.mojo::Message"*, %class.GURL*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5blink5mojom18NotificationActionD1Ev(%"class.blink::mojom::NotificationAction"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo11ArrayTraitsINSt3__16vectorINS_9StructPtrIN5blink5mojom18NotificationActionEEENS1_9allocatorIS7_EEEEE6ResizeERSA_m(%"class.std::__1::vector.54"* dereferenceable(24), i64) local_unnamed_addr #8 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.54", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.mojo::StructPtr"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.54"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp eq i64 %10, %1
  br i1 %11, label %69, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.54"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %3, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #9
  %16 = icmp eq i64 %1, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = bitcast %"class.mojo::StructPtr"** %14 to i64*
  br label %38

19:                                               ; preds = %12
  %20 = icmp ugt i64 %1, 2305843009213693951
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.54"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #11
  unreachable

23:                                               ; preds = %19
  %24 = shl i64 %1, 3
  %25 = tail call i8* @_Znwm(i64 %24) #10
  %26 = bitcast i8* %25 to %"class.mojo::StructPtr"*
  %27 = bitcast %"class.std::__1::vector.54"* %3 to i8**
  store i8* %25, i8** %27, align 8
  %28 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %26, i64 %1
  store %"class.mojo::StructPtr"* %28, %"class.mojo::StructPtr"** %15, align 8
  %29 = bitcast %"class.mojo::StructPtr"** %14 to i64*
  %30 = ptrtoint i8* %25 to i64
  %31 = add nsw i64 %1, -1
  %32 = getelementptr %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %26, i64 %31, i32 0, i32 0, i32 0, i32 0
  %33 = ptrtoint %"class.blink::mojom::NotificationAction"** %32 to i64
  %34 = sub i64 8, %30
  %35 = add i64 %34, %33
  %36 = and i64 %35, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 %36, i1 false) #9
  %37 = ptrtoint %"class.mojo::StructPtr"* %28 to i64
  store i64 %37, i64* %29, align 8
  br label %38

38:                                               ; preds = %17, %23
  %39 = phi i64* [ %18, %17 ], [ %29, %23 ]
  %40 = phi i64 [ 0, %17 ], [ %37, %23 ]
  %41 = phi i64 [ 0, %17 ], [ %30, %23 ]
  %42 = bitcast %"class.std::__1::vector.54"* %3 to i64*
  store i64 %41, i64* %7, align 8
  store i64 %8, i64* %42, align 8
  store i64 %40, i64* %5, align 8
  store i64 %6, i64* %39, align 8
  %43 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast %"class.mojo::StructPtr"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.mojo::StructPtr"** %15 to i64*
  store i64 %40, i64* %44, align 8
  store i64 %45, i64* %46, align 8
  %47 = inttoptr i64 %8 to %"class.mojo::StructPtr"*
  %48 = icmp eq i64 %8, 0
  %49 = inttoptr i64 %6 to %"class.mojo::StructPtr"*
  br i1 %48, label %68, label %50

50:                                               ; preds = %38
  %51 = inttoptr i64 %8 to i8*
  %52 = icmp eq %"class.mojo::StructPtr"* %49, %47
  br i1 %52, label %66, label %53

53:                                               ; preds = %50, %61
  %54 = phi %"class.mojo::StructPtr"* [ %55, %61 ], [ %49, %50 ]
  %55 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %54, i64 -1
  %56 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::mojom::NotificationAction"*, %"class.blink::mojom::NotificationAction"** %56, align 8
  store %"class.blink::mojom::NotificationAction"* null, %"class.blink::mojom::NotificationAction"** %56, align 8
  %58 = icmp eq %"class.blink::mojom::NotificationAction"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %53
  tail call void @_ZN5blink5mojom18NotificationActionD1Ev(%"class.blink::mojom::NotificationAction"* nonnull %57) #9
  %60 = bitcast %"class.blink::mojom::NotificationAction"* %57 to i8*
  tail call void @_ZdlPv(i8* %60) #10
  br label %61

61:                                               ; preds = %59, %53
  %62 = icmp eq %"class.mojo::StructPtr"* %55, %47
  br i1 %62, label %63, label %53

63:                                               ; preds = %61
  %64 = bitcast %"class.std::__1::vector.54"* %3 to i8**
  %65 = load i8*, i8** %64, align 8
  br label %66

66:                                               ; preds = %63, %50
  %67 = phi i8* [ %65, %63 ], [ %51, %50 ]
  store %"class.mojo::StructPtr"* %47, %"class.mojo::StructPtr"** %14, align 8
  tail call void @_ZdlPv(i8* %67) #10
  br label %68

68:                                               ; preds = %38, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #9
  br label %69

69:                                               ; preds = %2, %68
  ret i1 true
}

declare zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom26NotificationActionDataViewENS_9StructPtrINS2_18NotificationActionEEEE4ReadES3_PS6_(%"class.blink::mojom::internal::NotificationAction_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom12TimeDataViewEN4base4TimeEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::Time_Data"*, %"class.base::Time"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo12StructTraitsIN4skia5mojom17BitmapN32DataViewE8SkBitmapE4ReadES3_PS4_(%"class.skia::mojom::internal::BitmapN32_Data"*, %"class.mojo::Message"*, %class.SkBitmap*) local_unnamed_addr #2

declare void @_ZN8SkBitmap5resetEv(%class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN4skia5mojom17BitmapN32DataViewEEENSt3__16vectorI8SkBitmapNS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal14BitmapN32_DataEEEEEPSC_PNS_7MessageE(%"class.mojo::internal::Array_Data.112"*, %"class.std::__1::vector.94"*, %"class.mojo::Message"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data.112", %"class.mojo::internal::Array_Data.112"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %class.SkBitmap** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.94"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 56
  %14 = icmp eq i64 %13, %6
  br i1 %14, label %49, label %15

15:                                               ; preds = %3
  %16 = icmp eq i32 %5, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = mul nuw nsw i64 %6, 56
  %19 = tail call i8* @_Znwm(i64 %18) #10
  %20 = bitcast i8* %19 to %class.SkBitmap*
  %21 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %20, i64 %6
  %22 = ptrtoint i8* %19 to i64
  br label %23

23:                                               ; preds = %23, %17
  %24 = phi %class.SkBitmap* [ %25, %23 ], [ %20, %17 ]
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %24) #9
  %25 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %24, i64 1
  %26 = icmp eq %class.SkBitmap* %25, %21
  br i1 %26, label %27, label %23

27:                                               ; preds = %23
  %28 = ptrtoint %class.SkBitmap* %21 to i64
  %29 = load i64, i64* %10, align 8
  %30 = load i64, i64* %8, align 8
  br label %31

31:                                               ; preds = %15, %27
  %32 = phi i64 [ %28, %27 ], [ 0, %15 ]
  %33 = phi i64 [ %30, %27 ], [ %9, %15 ]
  %34 = phi i64 [ %22, %27 ], [ 0, %15 ]
  %35 = phi i64 [ %29, %27 ], [ %11, %15 ]
  store i64 %34, i64* %10, align 8
  store i64 %32, i64* %8, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %class.SkBitmap** %36 to i64*
  store i64 %32, i64* %37, align 8
  %38 = inttoptr i64 %35 to %class.SkBitmap*
  %39 = icmp eq i64 %35, 0
  %40 = inttoptr i64 %33 to %class.SkBitmap*
  br i1 %39, label %49, label %41

41:                                               ; preds = %31
  %42 = icmp eq %class.SkBitmap* %40, %38
  br i1 %42, label %47, label %43

43:                                               ; preds = %41, %43
  %44 = phi %class.SkBitmap* [ %45, %43 ], [ %40, %41 ]
  %45 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %44, i64 -1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %45) #9
  %46 = icmp eq %class.SkBitmap* %45, %38
  br i1 %46, label %47, label %43

47:                                               ; preds = %43, %41
  %48 = inttoptr i64 %35 to i8*
  tail call void @_ZdlPv(i8* %48) #10
  br label %49

49:                                               ; preds = %3, %47, %31
  %50 = load i32, i32* %4, align 1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %76, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.mojo::internal::Array_Data.112", %"class.mojo::internal::Array_Data.112"* %0, i64 1
  %54 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %1, i64 0, i32 0, i32 0
  br label %55

55:                                               ; preds = %52, %72
  %56 = phi i64 [ 0, %52 ], [ %63, %72 ]
  %57 = getelementptr inbounds %"class.mojo::internal::Array_Data.112", %"class.mojo::internal::Array_Data.112"* %53, i64 %56
  %58 = bitcast %"class.mojo::internal::Array_Data.112"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, 0
  %61 = bitcast %"class.mojo::internal::Array_Data.112"* %57 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 %59
  %63 = add nuw nsw i64 %56, 1
  %64 = load %class.SkBitmap*, %class.SkBitmap** %54, align 8
  %65 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %64, i64 %56
  %66 = icmp eq i8* %62, null
  %67 = or i1 %60, %66
  br i1 %67, label %68, label %69

68:                                               ; preds = %55
  tail call void @_ZN8SkBitmap5resetEv(%class.SkBitmap* %65) #9
  br label %72

69:                                               ; preds = %55
  %70 = bitcast i8* %62 to %"class.skia::mojom::internal::BitmapN32_Data"*
  %71 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN4skia5mojom17BitmapN32DataViewE8SkBitmapE4ReadES3_PS4_(%"class.skia::mojom::internal::BitmapN32_Data"* nonnull %70, %"class.mojo::Message"* %2, %class.SkBitmap* %65) #9
  br i1 %71, label %72, label %76

72:                                               ; preds = %68, %69
  %73 = load i32, i32* %4, align 1
  %74 = zext i32 %73 to i64
  %75 = icmp ult i64 %63, %74
  br i1 %75, label %55, label %76

76:                                               ; preds = %72, %69, %49
  %77 = phi i1 [ true, %49 ], [ false, %69 ], [ true, %72 ]
  ret i1 %77
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #7

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNO4absl8optionalINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE8value_orIS7_EES7_OT_: argument 0"}
!5 = distinct !{!5, !"_ZNO4absl8optionalINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE8value_orIS7_EES7_OT_"}
!6 = !{!7}
!7 = distinct !{!7, !8}
!8 = distinct !{!8, !"LVerDomain"}
!9 = !{!10}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !12}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !12}
!22 = distinct !{!22, !14}
!23 = distinct !{!23, !12}
!24 = distinct !{!24, !12}
!25 = distinct !{!25, !14}
!26 = distinct !{!26, !27, !12}
!27 = !{!"llvm.loop.unroll.runtime.disable"}
