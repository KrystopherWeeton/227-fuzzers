; ModuleID = '../../third_party/webrtc/net/dcsctp/tx/retransmission_timeout.cc'
source_filename = "../../third_party/webrtc/net/dcsctp/tx/retransmission_timeout.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.dcsctp::RetransmissionTimeout" = type { double, double, double, i8, double, double, double }
%"struct.dcsctp::DcSctpOptions" = type <{ i32, i32, i16, i16, [4 x i8], i64, i64, i64, i64, %"class.dcsctp::DurationMs", %"class.dcsctp::DurationMs", %"class.dcsctp::DurationMs", %"class.dcsctp::DurationMs", %"class.dcsctp::DurationMs", %"class.dcsctp::DurationMs", %"class.dcsctp::DurationMs", %"class.dcsctp::DurationMs", %"class.dcsctp::DurationMs", i8, [3 x i8], i64, i64, i32, i32, i8, i8, i8, i8, [4 x i8] }>
%"class.dcsctp::DurationMs" = type { %"class.dcsctp::StrongAlias" }
%"class.dcsctp::StrongAlias" = type { i32 }

@_ZN6dcsctp21RetransmissionTimeoutC1ERKNS_13DcSctpOptionsE = hidden unnamed_addr alias void (%"class.dcsctp::RetransmissionTimeout"*, %"struct.dcsctp::DcSctpOptions"*), void (%"class.dcsctp::RetransmissionTimeout"*, %"struct.dcsctp::DcSctpOptions"*)* @_ZN6dcsctp21RetransmissionTimeoutC2ERKNS_13DcSctpOptionsE

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6dcsctp21RetransmissionTimeoutC2ERKNS_13DcSctpOptionsE(%"class.dcsctp::RetransmissionTimeout"* nocapture, %"struct.dcsctp::DcSctpOptions"* nocapture readonly dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dcsctp::RetransmissionTimeout", %"class.dcsctp::RetransmissionTimeout"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.dcsctp::DcSctpOptions", %"struct.dcsctp::DcSctpOptions"* %1, i64 0, i32 12, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = sitofp i32 %5 to double
  store double %6, double* %3, align 8
  %7 = getelementptr inbounds %"class.dcsctp::RetransmissionTimeout", %"class.dcsctp::RetransmissionTimeout"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.dcsctp::DcSctpOptions", %"struct.dcsctp::DcSctpOptions"* %1, i64 0, i32 11, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sitofp i32 %9 to double
  store double %10, double* %7, align 8
  %11 = getelementptr inbounds %"class.dcsctp::RetransmissionTimeout", %"class.dcsctp::RetransmissionTimeout"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.dcsctp::DcSctpOptions", %"struct.dcsctp::DcSctpOptions"* %1, i64 0, i32 9, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sitofp i32 %13 to double
  store double %14, double* %11, align 8
  %15 = getelementptr inbounds %"class.dcsctp::RetransmissionTimeout", %"class.dcsctp::RetransmissionTimeout"* %0, i64 0, i32 3
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.dcsctp::RetransmissionTimeout", %"class.dcsctp::RetransmissionTimeout"* %0, i64 0, i32 4
  %17 = getelementptr inbounds %"class.dcsctp::RetransmissionTimeout", %"class.dcsctp::RetransmissionTimeout"* %0, i64 0, i32 6
  %18 = getelementptr inbounds %"struct.dcsctp::DcSctpOptions", %"struct.dcsctp::DcSctpOptions"* %1, i64 0, i32 10, i32 0, i32 0
  %19 = bitcast double* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false)
  %20 = load i32, i32* %18, align 4
  %21 = sitofp i32 %20 to double
  store double %21, double* %17, align 8
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6dcsctp21RetransmissionTimeout10ObserveRTTENS_10DurationMsE(%"class.dcsctp::RetransmissionTimeout"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = sitofp i32 %1 to double
  %4 = icmp slt i32 %1, 0
  br i1 %4, label %49, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.dcsctp::RetransmissionTimeout", %"class.dcsctp::RetransmissionTimeout"* %0, i64 0, i32 2
  %7 = load double, double* %6, align 8
  %8 = fcmp olt double %7, %3
  br i1 %8, label %49, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.dcsctp::RetransmissionTimeout", %"class.dcsctp::RetransmissionTimeout"* %0, i64 0, i32 3
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.dcsctp::RetransmissionTimeout", %"class.dcsctp::RetransmissionTimeout"* %0, i64 0, i32 4
  store double %3, double* %14, align 8
  %15 = fmul double %3, 5.000000e-01
  %16 = getelementptr inbounds %"class.dcsctp::RetransmissionTimeout", %"class.dcsctp::RetransmissionTimeout"* %0, i64 0, i32 5
  store double %15, double* %16, align 8
  %17 = fmul double %15, 4.000000e+00
  %18 = fadd double %17, %3
  store i8 0, i8* %10, align 8
  br label %38

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.dcsctp::RetransmissionTimeout", %"class.dcsctp::RetransmissionTimeout"* %0, i64 0, i32 5
  %21 = load double, double* %20, align 8
  %22 = getelementptr inbounds %"class.dcsctp::RetransmissionTimeout", %"class.dcsctp::RetransmissionTimeout"* %0, i64 0, i32 4
  %23 = load double, double* %22, align 8
  %24 = fsub double %23, %3
  %25 = tail call double @llvm.fabs.f64(double %24) #4
  %26 = insertelement <2 x double> undef, double %23, i32 0
  %27 = insertelement <2 x double> %26, double %25, i32 1
  %28 = fmul <2 x double> %27, <double 8.750000e-01, double 2.500000e-01>
  %29 = insertelement <2 x double> undef, double %3, i32 0
  %30 = insertelement <2 x double> %29, double %21, i32 1
  %31 = fmul <2 x double> %30, <double 1.250000e-01, double 7.500000e-01>
  %32 = fadd <2 x double> %31, %28
  %33 = bitcast double* %22 to <2 x double>*
  store <2 x double> %32, <2 x double>* %33, align 8
  %34 = extractelement <2 x double> %32, i32 1
  %35 = fmul double %34, 4.000000e+00
  %36 = extractelement <2 x double> %32, i32 0
  %37 = fadd double %36, %35
  br label %38

38:                                               ; preds = %19, %13
  %39 = phi double [ %37, %19 ], [ %18, %13 ]
  %40 = getelementptr inbounds %"class.dcsctp::RetransmissionTimeout", %"class.dcsctp::RetransmissionTimeout"* %0, i64 0, i32 6
  %41 = fadd double %3, 1.000000e+00
  %42 = tail call double @llvm.maxnum.f64(double %39, double %41)
  %43 = getelementptr inbounds %"class.dcsctp::RetransmissionTimeout", %"class.dcsctp::RetransmissionTimeout"* %0, i64 0, i32 0
  %44 = load double, double* %43, align 8
  %45 = tail call double @llvm.maxnum.f64(double %42, double %44)
  %46 = getelementptr inbounds %"class.dcsctp::RetransmissionTimeout", %"class.dcsctp::RetransmissionTimeout"* %0, i64 0, i32 1
  %47 = load double, double* %46, align 8
  %48 = tail call double @llvm.minnum.f64(double %45, double %47)
  store double %48, double* %40, align 8
  br label %49

49:                                               ; preds = %2, %5, %38
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.maxnum.f64(double, double) #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.minnum.f64(double, double) #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
