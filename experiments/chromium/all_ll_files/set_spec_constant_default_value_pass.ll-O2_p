; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/set_spec_constant_default_value_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/set_spec_constant_default_value_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.spvtools::opt::SetSpecConstantDefaultValuePass" = type { %"class.spvtools::opt::Pass.base", [7 x i8], %"class.std::__1::unordered_map.910", %"class.std::__1::unordered_map.304" }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::unordered_map.910" = type { %"class.std::__1::__hash_table.911" }
%"class.std::__1::__hash_table.911" = type <{ %"class.std::__1::unique_ptr.912", %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.930", [4 x i8] }>
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914", %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"struct.std::__1::__hash_node_base.915"** }
%"struct.std::__1::__hash_node_base.915" = type { %"struct.std::__1::__hash_node_base.915"* }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.std::__1::__bucket_list_deallocator.917" }
%"class.std::__1::__bucket_list_deallocator.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.915" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::function.959" = type { %"class.std::__1::__function::__policy_func.963" }
%"class.std::__1::__function::__policy_func.963" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.964", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.964" = type { void (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.std::__1::function.953" = type { %"class.std::__1::__function::__policy_func.957" }
%"class.std::__1::__function::__policy_func.957" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.958", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.958" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"struct.spvtools::utils::NumberType" = type { i32, i32 }
%"struct.std::__1::default_delete.120" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.spvtools::opt::analysis::Bool" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Type.base" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32 }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.spvtools::opt::analysis::Integer" = type <{ %"class.spvtools::opt::analysis::Type.base", i32, i8, [7 x i8] }>
%"class.spvtools::opt::analysis::Float" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i32* }
%"class.std::__1::tuple.988" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::basic_istringstream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_istream" = type { i32 (...)**, i64, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.949" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::pair.949" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools5utils11ParseNumberIjEEbPKcPT_ = comdat any

$_ZN8spvtools3opt31SetSpecConstantDefaultValuePassD2Ev = comdat any

$_ZN8spvtools3opt31SetSpecConstantDefaultValuePassD0Ev = comdat any

$_ZNK8spvtools3opt31SetSpecConstantDefaultValuePass4nameEv = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools3opt8analysis11TypeManagerD2Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

@_ZTVN8spvtools3opt31SetSpecConstantDefaultValuePassE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::SetSpecConstantDefaultValuePass"*)* @_ZN8spvtools3opt31SetSpecConstantDefaultValuePassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::SetSpecConstantDefaultValuePass"*)* @_ZN8spvtools3opt31SetSpecConstantDefaultValuePassD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::SetSpecConstantDefaultValuePass"*)* @_ZNK8spvtools3opt31SetSpecConstantDefaultValuePass4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::SetSpecConstantDefaultValuePass"*)* @_ZN8spvtools3opt31SetSpecConstantDefaultValuePass7ProcessEv to i8*)] }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_134GetSpecIdTargetFromDecorationGroupERKNS5_11InstructionEPNS5_8analysis13DefUseManagerEE3$_2FbPS7_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_120ParseDefaultValueStrEPKcPKNS5_8analysis4TypeEE3$_0FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [29 x i8] c"set-spec-const-default-value\00", align 1
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZTVNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt31SetSpecConstantDefaultValuePass7ProcessEv(%"class.spvtools::opt::SetSpecConstantDefaultValuePass"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca %"class.std::__1::function.959", align 8
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::function.953", align 8
  %6 = alloca %"class.std::__1::vector.3", align 8
  %7 = alloca %"class.std::__1::vector.3", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::SetSpecConstantDefaultValuePass", %"class.spvtools::opt::SetSpecConstantDefaultValuePass"* %0, i64 0, i32 0, i32 2
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %11, align 8, !noalias !2
  %13 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %12, i64 0, i32 13, i32 0, i32 1, i32 0, i32 1
  %14 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %12, i64 0, i32 13, i32 0, i32 1
  %15 = bitcast %"class.spvtools::opt::Instruction"** %13 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = inttoptr i64 %16 to %"class.spvtools::opt::Instruction"*
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %17
  br i1 %18, label %68, label %19

19:                                               ; preds = %1
  %20 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  %21 = bitcast %"class.std::__1::function.953"* %5 to i8*
  %22 = ptrtoint %"class.spvtools::opt::Instruction"** %4 to i64
  %23 = getelementptr inbounds %"class.std::__1::function.953", %"class.std::__1::function.953"* %5, i64 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.std::__1::function.953", %"class.std::__1::function.953"* %5, i64 0, i32 0, i32 2
  %25 = bitcast %"class.std::__1::function.953"* %5 to i64*
  %26 = getelementptr inbounds %"class.std::__1::function.953", %"class.std::__1::function.953"* %5, i64 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.spvtools::opt::SetSpecConstantDefaultValuePass", %"class.spvtools::opt::SetSpecConstantDefaultValuePass"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %28 = getelementptr inbounds %"class.spvtools::opt::SetSpecConstantDefaultValuePass", %"class.spvtools::opt::SetSpecConstantDefaultValuePass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.spvtools::opt::SetSpecConstantDefaultValuePass", %"class.spvtools::opt::SetSpecConstantDefaultValuePass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.std::__1::vector.3"* %6 to i8*
  %31 = bitcast %"class.std::__1::function.959"* %3 to i8*
  %32 = bitcast i64* %2 to %"struct.spvtools::utils::NumberType"*
  %33 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %6, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast i32** %33 to i64*
  %36 = bitcast %"class.std::__1::vector.3"* %6 to i64*
  %37 = bitcast i32** %34 to i64*
  %38 = bitcast i64* %2 to i8*
  %39 = bitcast i64* %2 to i32*
  %40 = getelementptr inbounds %"struct.spvtools::utils::NumberType", %"struct.spvtools::utils::NumberType"* %32, i64 0, i32 1
  %41 = ptrtoint %"class.std::__1::vector.3"* %6 to i64
  %42 = getelementptr inbounds %"class.std::__1::function.959", %"class.std::__1::function.959"* %3, i64 0, i32 0, i32 1, i32 0
  %43 = getelementptr inbounds %"class.std::__1::function.959", %"class.std::__1::function.959"* %3, i64 0, i32 0, i32 2
  %44 = bitcast %"class.std::__1::function.959"* %3 to i64*
  %45 = getelementptr inbounds %"class.std::__1::function.959", %"class.std::__1::function.959"* %3, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.spvtools::opt::SetSpecConstantDefaultValuePass", %"class.spvtools::opt::SetSpecConstantDefaultValuePass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.spvtools::opt::SetSpecConstantDefaultValuePass", %"class.spvtools::opt::SetSpecConstantDefaultValuePass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::vector.3"* %7 to i8*
  %49 = bitcast %"class.std::__1::vector.3"* %7 to i64*
  %50 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 1
  %51 = bitcast i32** %50 to i64*
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %53 = bitcast i32** %52 to i64*
  %54 = bitcast i32** %50 to i8**
  %55 = bitcast %"class.std::__1::vector.3"* %7 to i8**
  %56 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  %57 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  %58 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %59 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %60 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %61 = bitcast i32** %59 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %62 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %63 = bitcast %"class.std::__1::unique_ptr.0"* %62 to i64*
  %64 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %60 to i32*
  %65 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 1
  %67 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %66 to i32*
  br label %73

68:                                               ; preds = %831, %1
  %69 = phi i8 [ 0, %1 ], [ %832, %831 ]
  %70 = and i8 %69, 1
  %71 = icmp eq i8 %70, 0
  %72 = select i1 %71, i32 17, i32 16
  ret i32 %72

73:                                               ; preds = %19, %831
  %74 = phi %"class.spvtools::opt::Instruction"* [ %17, %19 ], [ %837, %831 ]
  %75 = phi i64 [ %16, %19 ], [ %836, %831 ]
  %76 = phi i8 [ 0, %19 ], [ %832, %831 ]
  %77 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %74, i64 0, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 71
  br i1 %79, label %80, label %831

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %74, i64 0, i32 6
  %82 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %74, i64 0, i32 6, i32 0, i32 1
  %83 = bitcast %"struct.spvtools::opt::Operand"** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.std::__1::vector"* %81 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %84, %86
  %88 = sdiv exact i64 %87, 48
  %89 = trunc i64 %88 to i32
  %90 = icmp eq i32 %89, 3
  br i1 %90, label %91, label %831

91:                                               ; preds = %80
  %92 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %74, i64 0, i32 3
  %93 = load i8, i8* %92, align 4, !range !5
  %94 = icmp eq i8 %93, 0
  %95 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %74, i64 0, i32 4
  %96 = load i8, i8* %95, align 1, !range !5
  %97 = icmp eq i8 %96, 0
  %98 = select i1 %97, i32 1, i32 2
  %99 = xor i1 %97, true
  %100 = zext i1 %99 to i32
  %101 = select i1 %94, i32 %100, i32 %98
  %102 = add nuw nsw i32 %101, 1
  %103 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %74, i32 %102) #16
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %831

105:                                              ; preds = %91
  %106 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %74, i32 2) #16
  %107 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %74, i32 0) #16
  %108 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %109 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %108, i64 0, i32 11
  %110 = load i32, i32* %109, align 8
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %137

113:                                              ; preds = %105
  %114 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %108, i64 0, i32 4, i32 0, i32 0, i32 0
  %115 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %114, align 8
  %116 = call i8* @_Znwm(i64 104) #17
  %117 = bitcast i8* %116 to %"class.spvtools::opt::analysis::DefUseManager"*
  %118 = getelementptr inbounds i8, i8* %116, i64 32
  %119 = bitcast i8* %118 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %116, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %119, align 4
  %120 = getelementptr inbounds i8, i8* %116, i64 48
  %121 = getelementptr inbounds i8, i8* %116, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 16, i1 false) #16
  %122 = bitcast i8* %121 to i8**
  store i8* %120, i8** %122, align 8
  %123 = getelementptr inbounds i8, i8* %116, i64 64
  %124 = getelementptr inbounds i8, i8* %116, i64 96
  %125 = bitcast i8* %124 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %125, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %117, %"class.spvtools::opt::Module"* %115) #16
  %126 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %108, i64 0, i32 6
  %127 = ptrtoint i8* %116 to i64
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %126, i64 0, i32 0, i32 0, i32 0
  %129 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %128, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.62"* %126 to i64*
  store i64 %127, i64* %130, align 8
  %131 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %129, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %113
  %133 = bitcast %"class.std::__1::unique_ptr.62"* %126 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %133, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %129) #16
  br label %134

134:                                              ; preds = %132, %113
  %135 = load i32, i32* %109, align 8
  %136 = or i32 %135, 1
  store i32 %136, i32* %109, align 8
  br label %137

137:                                              ; preds = %105, %134
  %138 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %108, i64 0, i32 6, i32 0, i32 0, i32 0
  %139 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %138, align 8
  %140 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %139, i32 %107) #16
  %141 = icmp eq %"class.spvtools::opt::Instruction"* %140, null
  br i1 %141, label %831, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %140, i64 0, i32 2
  %144 = load i32, i32* %143, align 8
  %145 = icmp eq i32 %144, 73
  br i1 %145, label %146, label %232

146:                                              ; preds = %142
  %147 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %148 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %147, i64 0, i32 11
  %149 = load i32, i32* %148, align 8
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %176

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %147, i64 0, i32 4, i32 0, i32 0, i32 0
  %154 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %153, align 8
  %155 = call i8* @_Znwm(i64 104) #17
  %156 = bitcast i8* %155 to %"class.spvtools::opt::analysis::DefUseManager"*
  %157 = getelementptr inbounds i8, i8* %155, i64 32
  %158 = bitcast i8* %157 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %158, align 4
  %159 = getelementptr inbounds i8, i8* %155, i64 48
  %160 = getelementptr inbounds i8, i8* %155, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %159, i8 0, i64 16, i1 false) #16
  %161 = bitcast i8* %160 to i8**
  store i8* %159, i8** %161, align 8
  %162 = getelementptr inbounds i8, i8* %155, i64 64
  %163 = getelementptr inbounds i8, i8* %155, i64 96
  %164 = bitcast i8* %163 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %164, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %156, %"class.spvtools::opt::Module"* %154) #16
  %165 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %147, i64 0, i32 6
  %166 = ptrtoint i8* %155 to i64
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %165, i64 0, i32 0, i32 0, i32 0
  %168 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %167, align 8
  %169 = bitcast %"class.std::__1::unique_ptr.62"* %165 to i64*
  store i64 %166, i64* %169, align 8
  %170 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %168, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %152
  %172 = bitcast %"class.std::__1::unique_ptr.62"* %165 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %172, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %168) #16
  br label %173

173:                                              ; preds = %171, %152
  %174 = load i32, i32* %148, align 8
  %175 = or i32 %174, 1
  store i32 %175, i32* %148, align 8
  br label %176

176:                                              ; preds = %146, %173
  %177 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %147, i64 0, i32 6, i32 0, i32 0, i32 0
  %178 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %177, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #16
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_134GetSpecIdTargetFromDecorationGroupERKS4_PNS3_8analysis13DefUseManagerEE3$_2S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %23, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_134GetSpecIdTargetFromDecorationGroupERKNS5_11InstructionEPNS5_8analysis13DefUseManagerEE3$_2FbPS7_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %24, align 8
  store i64 %22, i64* %25, align 8
  %179 = call zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEPKNS0_11InstructionERKNSt3__18functionIFbPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"* %178, %"class.spvtools::opt::Instruction"* nonnull %140, %"class.std::__1::function.953"* nonnull dereferenceable(32) %5) #16
  %180 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %24, align 8
  %181 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %180, i64 0, i32 1
  %182 = load void (i8*)*, void (i8*)** %181, align 8
  %183 = icmp eq void (i8*)* %182, null
  br i1 %183, label %186, label %184

184:                                              ; preds = %176
  %185 = load i8*, i8** %26, align 8
  call void %182(i8* %185) #16
  br label %186

186:                                              ; preds = %184, %176
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #16
  br i1 %179, label %229, label %187

187:                                              ; preds = %186, %226
  %188 = phi %"class.spvtools::opt::Instruction"* [ %227, %226 ], [ null, %186 ]
  %189 = phi i32 [ %228, %226 ], [ 1, %186 ]
  %190 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %191 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %190, i64 0, i32 6
  %192 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %190, i64 0, i32 6, i32 0, i32 1
  %193 = bitcast %"struct.spvtools::opt::Operand"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = bitcast %"class.std::__1::vector"* %191 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = sub i64 %194, %196
  %198 = sdiv exact i64 %197, 48
  %199 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %190, i64 0, i32 3
  %200 = load i8, i8* %199, align 4, !range !5
  %201 = icmp eq i8 %200, 0
  %202 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %190, i64 0, i32 4
  %203 = load i8, i8* %202, align 1, !range !5
  %204 = icmp eq i8 %203, 0
  %205 = select i1 %204, i32 1, i32 2
  %206 = xor i1 %204, true
  %207 = zext i1 %206 to i32
  %208 = select i1 %201, i32 %207, i32 %205
  %209 = trunc i64 %198 to i32
  %210 = sub i32 %209, %208
  %211 = icmp ult i32 %189, %210
  br i1 %211, label %212, label %230

212:                                              ; preds = %187
  %213 = add i32 %208, %189
  %214 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %190, i32 %213) #16
  %215 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %178, i32 %214) #16
  %216 = icmp eq %"class.spvtools::opt::Instruction"* %215, null
  br i1 %216, label %226, label %217

217:                                              ; preds = %212
  %218 = icmp eq %"class.spvtools::opt::Instruction"* %188, null
  br i1 %218, label %219, label %224

219:                                              ; preds = %217
  %220 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %215, i64 0, i32 2
  %221 = load i32, i32* %220, align 8
  %222 = add i32 %221, -48
  %223 = icmp ult i32 %222, 3
  br i1 %223, label %226, label %229

224:                                              ; preds = %217
  %225 = icmp eq %"class.spvtools::opt::Instruction"* %215, %188
  br i1 %225, label %226, label %229

226:                                              ; preds = %224, %219, %212
  %227 = phi %"class.spvtools::opt::Instruction"* [ %188, %212 ], [ %188, %224 ], [ %215, %219 ]
  %228 = add nuw i32 %189, 1
  br label %187

229:                                              ; preds = %224, %219, %186
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %831

230:                                              ; preds = %187
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  %231 = icmp eq %"class.spvtools::opt::Instruction"* %188, null
  br i1 %231, label %831, label %232

232:                                              ; preds = %142, %230
  %233 = phi %"class.spvtools::opt::Instruction"* [ %188, %230 ], [ %140, %142 ]
  %234 = load i64, i64* %27, align 8
  %235 = icmp eq i64 %234, 0
  %236 = zext i32 %106 to i64
  br i1 %235, label %494, label %237

237:                                              ; preds = %232
  %238 = load i64, i64* %28, align 8
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %831, label %240

240:                                              ; preds = %237
  %241 = call i64 @llvm.ctpop.i64(i64 %238) #16, !range !6
  %242 = icmp ugt i64 %241, 1
  br i1 %242, label %246, label %243

243:                                              ; preds = %240
  %244 = add i64 %238, 4294967295
  %245 = and i64 %244, %236
  br label %250

246:                                              ; preds = %240
  %247 = icmp ugt i64 %238, %236
  br i1 %247, label %250, label %248

248:                                              ; preds = %246
  %249 = urem i64 %236, %238
  br label %250

250:                                              ; preds = %248, %246, %243
  %251 = phi i64 [ %245, %243 ], [ %249, %248 ], [ %236, %246 ]
  %252 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  %253 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %252, i64 %251
  %254 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %253, align 8
  %255 = icmp eq %"struct.std::__1::__hash_node_base.915"* %254, null
  br i1 %255, label %831, label %256

256:                                              ; preds = %250
  %257 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %254, i64 0, i32 0
  %258 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %257, align 8
  %259 = icmp eq %"struct.std::__1::__hash_node_base.915"* %258, null
  br i1 %259, label %831, label %260

260:                                              ; preds = %256
  %261 = add i64 %238, -1
  br label %262

262:                                              ; preds = %283, %260
  %263 = phi %"struct.std::__1::__hash_node_base.915"* [ %258, %260 ], [ %285, %283 ]
  %264 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %263, i64 1
  %265 = bitcast %"struct.std::__1::__hash_node_base.915"* %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = icmp eq i64 %266, %236
  br i1 %267, label %278, label %268

268:                                              ; preds = %262
  br i1 %242, label %271, label %269

269:                                              ; preds = %268
  %270 = and i64 %266, %261
  br label %275

271:                                              ; preds = %268
  %272 = icmp ult i64 %266, %238
  br i1 %272, label %275, label %273

273:                                              ; preds = %271
  %274 = urem i64 %266, %238
  br label %275

275:                                              ; preds = %273, %271, %269
  %276 = phi i64 [ %270, %269 ], [ %274, %273 ], [ %266, %271 ]
  %277 = icmp eq i64 %276, %251
  br i1 %277, label %283, label %831

278:                                              ; preds = %262
  %279 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %263, i64 2
  %280 = bitcast %"struct.std::__1::__hash_node_base.915"* %279 to i32*
  %281 = load i32, i32* %280, align 4
  %282 = icmp eq i32 %281, %106
  br i1 %282, label %287, label %283

283:                                              ; preds = %278, %275
  %284 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %263, i64 0, i32 0
  %285 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %284, align 8
  %286 = icmp eq %"struct.std::__1::__hash_node_base.915"* %285, null
  br i1 %286, label %831, label %262

287:                                              ; preds = %278
  %288 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %263, i64 3
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #16
  %289 = bitcast %"struct.std::__1::__hash_node_base.915"* %288 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %290 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %289, i64 0, i32 1, i32 0
  %291 = load i8, i8* %290, align 1
  %292 = icmp slt i8 %291, 0
  br i1 %292, label %293, label %296

293:                                              ; preds = %287
  %294 = bitcast %"struct.std::__1::__hash_node_base.915"* %288 to i8**
  %295 = load i8*, i8** %294, align 8
  br label %298

296:                                              ; preds = %287
  %297 = bitcast %"struct.std::__1::__hash_node_base.915"* %288 to i8*
  br label %298

298:                                              ; preds = %293, %296
  %299 = phi i8* [ %295, %293 ], [ %297, %296 ]
  %300 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %301 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %300, i64 0, i32 11
  %302 = load i32, i32* %301, align 8
  %303 = trunc i32 %302 to i16
  %304 = icmp slt i16 %303, 0
  br i1 %304, label %320, label %305

305:                                              ; preds = %298
  %306 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %300, i64 0, i32 5
  %307 = call i8* @_Znwm(i64 240) #17
  %308 = bitcast i8* %307 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %308, %"class.std::__1::function"* dereferenceable(32) %306, %"class.spvtools::opt::IRContext"* %300) #16
  %309 = ptrtoint i8* %307 to i64
  %310 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %300, i64 0, i32 20
  %311 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %310, i64 0, i32 0, i32 0, i32 0
  %312 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %311, align 8
  %313 = bitcast %"class.std::__1::unique_ptr.480"* %310 to i64*
  store i64 %309, i64* %313, align 8
  %314 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %312, null
  br i1 %314, label %317, label %315

315:                                              ; preds = %305
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %312) #16
  %316 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %312 to i8*
  call void @_ZdlPv(i8* %316) #17
  br label %317

317:                                              ; preds = %315, %305
  %318 = load i32, i32* %301, align 8
  %319 = or i32 %318, 32768
  store i32 %319, i32* %301, align 8
  br label %320

320:                                              ; preds = %298, %317
  %321 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %300, i64 0, i32 20, i32 0, i32 0, i32 0
  %322 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %321, align 8
  %323 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %233, i64 0, i32 3
  %324 = load i8, i8* %323, align 4, !range !5
  %325 = icmp eq i8 %324, 0
  br i1 %325, label %328, label %326

326:                                              ; preds = %320
  %327 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %233, i32 0) #16
  br label %328

328:                                              ; preds = %320, %326
  %329 = phi i32 [ %327, %326 ], [ 0, %320 ]
  %330 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %322, i32 %329) #16
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #16, !alias.scope !7
  %331 = call i32 @strcmp(i8* %299, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #18, !noalias !7
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %391

333:                                              ; preds = %328
  %334 = bitcast %"class.spvtools::opt::analysis::Type"* %330 to %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)***
  %335 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*** %334, align 8, !noalias !7
  %336 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %335, i64 9
  %337 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %336, align 8
  %338 = call %"class.spvtools::opt::analysis::Bool"* %337(%"class.spvtools::opt::analysis::Type"* %330) #16
  %339 = icmp eq %"class.spvtools::opt::analysis::Bool"* %338, null
  br i1 %339, label %391, label %340

340:                                              ; preds = %333
  %341 = load i32*, i32** %33, align 8, !alias.scope !7
  %342 = load i32*, i32** %34, align 8, !alias.scope !7
  %343 = icmp ult i32* %341, %342
  %344 = ptrtoint i32* %342 to i64
  br i1 %343, label %345, label %348

345:                                              ; preds = %340
  store i32 1, i32* %341, align 4
  %346 = getelementptr inbounds i32, i32* %341, i64 1
  %347 = ptrtoint i32* %346 to i64
  store i64 %347, i64* %35, align 8, !alias.scope !7
  br label %490

348:                                              ; preds = %340
  %349 = ptrtoint i32* %341 to i64
  %350 = load i64, i64* %36, align 8, !alias.scope !7
  %351 = sub i64 %349, %350
  %352 = ashr exact i64 %351, 2
  %353 = add nsw i64 %352, 1
  %354 = icmp ugt i64 %353, 4611686018427387903
  br i1 %354, label %355, label %357

355:                                              ; preds = %348
  %356 = bitcast %"class.std::__1::vector.3"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %356) #19
  unreachable

357:                                              ; preds = %348
  %358 = sub i64 %344, %350
  %359 = ashr exact i64 %358, 2
  %360 = icmp ult i64 %359, 2305843009213693951
  br i1 %360, label %361, label %369

361:                                              ; preds = %357
  %362 = ashr exact i64 %358, 1
  %363 = icmp ult i64 %362, %353
  %364 = select i1 %363, i64 %353, i64 %362
  %365 = icmp eq i64 %364, 0
  br i1 %365, label %374, label %366

366:                                              ; preds = %361
  %367 = icmp ugt i64 %364, 4611686018427387903
  br i1 %367, label %368, label %369

368:                                              ; preds = %366
  call void @abort() #19
  unreachable

369:                                              ; preds = %366, %357
  %370 = phi i64 [ %364, %366 ], [ 4611686018427387903, %357 ]
  %371 = shl i64 %370, 2
  %372 = call i8* @_Znwm(i64 %371) #17
  %373 = bitcast i8* %372 to i32*
  br label %374

374:                                              ; preds = %369, %361
  %375 = phi i64 [ %370, %369 ], [ 0, %361 ]
  %376 = phi i8* [ %372, %369 ], [ null, %361 ]
  %377 = phi i32* [ %373, %369 ], [ null, %361 ]
  %378 = getelementptr inbounds i32, i32* %377, i64 %352
  %379 = getelementptr inbounds i32, i32* %377, i64 %375
  %380 = ptrtoint i32* %379 to i64
  store i32 1, i32* %378, align 4, !noalias !7
  %381 = getelementptr inbounds i32, i32* %378, i64 1
  %382 = ptrtoint i32* %381 to i64
  %383 = ptrtoint i32* %377 to i64
  %384 = icmp sgt i64 %351, 0
  br i1 %384, label %385, label %387

385:                                              ; preds = %374
  %386 = inttoptr i64 %350 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %376, i8* align 4 %386, i64 %351, i1 false) #16
  br label %387

387:                                              ; preds = %385, %374
  store i64 %383, i64* %36, align 8, !alias.scope !7
  store i64 %382, i64* %35, align 8, !alias.scope !7
  store i64 %380, i64* %37, align 8, !alias.scope !7
  %388 = icmp eq i64 %350, 0
  br i1 %388, label %490, label %389

389:                                              ; preds = %387
  %390 = inttoptr i64 %350 to i8*
  call void @_ZdlPv(i8* %390) #17
  br label %490

391:                                              ; preds = %333, %328
  %392 = call i32 @strcmp(i8* %299, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #18
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %452

394:                                              ; preds = %391
  %395 = bitcast %"class.spvtools::opt::analysis::Type"* %330 to %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)***
  %396 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*** %395, align 8, !noalias !7
  %397 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %396, i64 9
  %398 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %397, align 8
  %399 = call %"class.spvtools::opt::analysis::Bool"* %398(%"class.spvtools::opt::analysis::Type"* %330) #16
  %400 = icmp eq %"class.spvtools::opt::analysis::Bool"* %399, null
  br i1 %400, label %452, label %401

401:                                              ; preds = %394
  %402 = load i32*, i32** %33, align 8, !alias.scope !7
  %403 = load i32*, i32** %34, align 8, !alias.scope !7
  %404 = icmp ult i32* %402, %403
  %405 = ptrtoint i32* %403 to i64
  br i1 %404, label %406, label %409

406:                                              ; preds = %401
  store i32 0, i32* %402, align 4
  %407 = getelementptr inbounds i32, i32* %402, i64 1
  %408 = ptrtoint i32* %407 to i64
  store i64 %408, i64* %35, align 8, !alias.scope !7
  br label %490

409:                                              ; preds = %401
  %410 = ptrtoint i32* %402 to i64
  %411 = load i64, i64* %36, align 8, !alias.scope !7
  %412 = sub i64 %410, %411
  %413 = ashr exact i64 %412, 2
  %414 = add nsw i64 %413, 1
  %415 = icmp ugt i64 %414, 4611686018427387903
  br i1 %415, label %416, label %418

416:                                              ; preds = %409
  %417 = bitcast %"class.std::__1::vector.3"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %417) #19
  unreachable

418:                                              ; preds = %409
  %419 = sub i64 %405, %411
  %420 = ashr exact i64 %419, 2
  %421 = icmp ult i64 %420, 2305843009213693951
  br i1 %421, label %422, label %430

422:                                              ; preds = %418
  %423 = ashr exact i64 %419, 1
  %424 = icmp ult i64 %423, %414
  %425 = select i1 %424, i64 %414, i64 %423
  %426 = icmp eq i64 %425, 0
  br i1 %426, label %435, label %427

427:                                              ; preds = %422
  %428 = icmp ugt i64 %425, 4611686018427387903
  br i1 %428, label %429, label %430

429:                                              ; preds = %427
  call void @abort() #19
  unreachable

430:                                              ; preds = %427, %418
  %431 = phi i64 [ %425, %427 ], [ 4611686018427387903, %418 ]
  %432 = shl i64 %431, 2
  %433 = call i8* @_Znwm(i64 %432) #17
  %434 = bitcast i8* %433 to i32*
  br label %435

435:                                              ; preds = %430, %422
  %436 = phi i64 [ %431, %430 ], [ 0, %422 ]
  %437 = phi i8* [ %433, %430 ], [ null, %422 ]
  %438 = phi i32* [ %434, %430 ], [ null, %422 ]
  %439 = getelementptr inbounds i32, i32* %438, i64 %413
  %440 = getelementptr inbounds i32, i32* %438, i64 %436
  %441 = ptrtoint i32* %440 to i64
  store i32 0, i32* %439, align 4, !noalias !7
  %442 = getelementptr inbounds i32, i32* %439, i64 1
  %443 = ptrtoint i32* %442 to i64
  %444 = ptrtoint i32* %438 to i64
  %445 = icmp sgt i64 %412, 0
  br i1 %445, label %446, label %448

446:                                              ; preds = %435
  %447 = inttoptr i64 %411 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %437, i8* align 4 %447, i64 %412, i1 false) #16
  br label %448

448:                                              ; preds = %446, %435
  store i64 %444, i64* %36, align 8, !alias.scope !7
  store i64 %443, i64* %35, align 8, !alias.scope !7
  store i64 %441, i64* %37, align 8, !alias.scope !7
  %449 = icmp eq i64 %411, 0
  br i1 %449, label %490, label %450

450:                                              ; preds = %448
  %451 = inttoptr i64 %411 to i8*
  call void @_ZdlPv(i8* %451) #17
  br label %490

452:                                              ; preds = %394, %391
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #16, !noalias !7
  store i64 4294967328, i64* %2, align 8, !noalias !7
  %453 = bitcast %"class.spvtools::opt::analysis::Type"* %330 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %454 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %453, align 8, !noalias !7
  %455 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %454, i64 11
  %456 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %455, align 8
  %457 = call %"class.spvtools::opt::analysis::Integer"* %456(%"class.spvtools::opt::analysis::Type"* %330) #16
  %458 = icmp eq %"class.spvtools::opt::analysis::Integer"* %457, null
  br i1 %458, label %466, label %459

459:                                              ; preds = %452
  %460 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %457, i64 0, i32 1
  %461 = load i32, i32* %460, align 4
  store i32 %461, i32* %39, align 8, !noalias !7
  %462 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %457, i64 0, i32 2
  %463 = load i8, i8* %462, align 8, !range !5
  %464 = icmp eq i8 %463, 0
  %465 = select i1 %464, i32 1, i32 2
  br label %476

466:                                              ; preds = %452
  %467 = bitcast %"class.spvtools::opt::analysis::Type"* %330 to %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)***
  %468 = load %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)*** %467, align 8, !noalias !7
  %469 = getelementptr inbounds %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)** %468, i64 13
  %470 = load %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)** %469, align 8
  %471 = call %"class.spvtools::opt::analysis::Float"* %470(%"class.spvtools::opt::analysis::Type"* %330) #16
  %472 = icmp eq %"class.spvtools::opt::analysis::Float"* %471, null
  br i1 %472, label %487, label %473

473:                                              ; preds = %466
  %474 = getelementptr inbounds %"class.spvtools::opt::analysis::Float", %"class.spvtools::opt::analysis::Float"* %471, i64 0, i32 1
  %475 = load i32, i32* %474, align 4
  store i32 %475, i32* %39, align 8, !noalias !7
  br label %476

476:                                              ; preds = %473, %459
  %477 = phi i32 [ %465, %459 ], [ 3, %473 ]
  store i32 %477, i32* %40, align 4, !noalias !7
  store void (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_120ParseDefaultValueStrEPKcPKNS7_8analysis4TypeEE3$_0S2_EEEEvPKNS0_16__policy_storageEj", void (%"union.std::__1::__function::__policy_storage"*, i32)** %42, align 8, !noalias !7
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_120ParseDefaultValueStrEPKcPKNS5_8analysis4TypeEE3$_0FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %43, align 8, !noalias !7
  store i64 %41, i64* %44, align 8, !noalias !7
  %478 = call i32 @_ZN8spvtools5utils20ParseAndEncodeNumberEPKcRKNS0_10NumberTypeENSt3__18functionIFvjEEEPNS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(i8* %299, %"struct.spvtools::utils::NumberType"* nonnull dereferenceable(8) %32, %"class.std::__1::function.959"* nonnull %3, %"class.std::__1::basic_string"* null) #16
  %479 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %43, align 8, !noalias !7
  %480 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %479, i64 0, i32 1
  %481 = load void (i8*)*, void (i8*)** %480, align 8
  %482 = icmp eq void (i8*)* %481, null
  br i1 %482, label %485, label %483

483:                                              ; preds = %476
  %484 = load i8*, i8** %45, align 8, !noalias !7
  call void %481(i8* %484) #16
  br label %485

485:                                              ; preds = %483, %476
  %486 = icmp eq i32 %478, 0
  br i1 %486, label %489, label %487

487:                                              ; preds = %485, %466
  %488 = load i64, i64* %36, align 8, !alias.scope !7
  store i64 %488, i64* %35, align 8, !alias.scope !7
  br label %489

489:                                              ; preds = %487, %485
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #16, !noalias !7
  br label %490

490:                                              ; preds = %345, %387, %389, %406, %448, %450, %489
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31)
  %491 = load i64, i64* %36, align 8
  %492 = load i64, i64* %35, align 8
  %493 = load i64, i64* %37, align 8
  br label %685

494:                                              ; preds = %232
  %495 = load i64, i64* %46, align 8
  %496 = icmp eq i64 %495, 0
  br i1 %496, label %831, label %497

497:                                              ; preds = %494
  %498 = call i64 @llvm.ctpop.i64(i64 %495) #16, !range !6
  %499 = icmp ugt i64 %498, 1
  br i1 %499, label %503, label %500

500:                                              ; preds = %497
  %501 = add i64 %495, 4294967295
  %502 = and i64 %501, %236
  br label %507

503:                                              ; preds = %497
  %504 = icmp ugt i64 %495, %236
  br i1 %504, label %507, label %505

505:                                              ; preds = %503
  %506 = urem i64 %236, %495
  br label %507

507:                                              ; preds = %505, %503, %500
  %508 = phi i64 [ %502, %500 ], [ %506, %505 ], [ %236, %503 ]
  %509 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %47, align 8
  %510 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %509, i64 %508
  %511 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %510, align 8
  %512 = icmp eq %"struct.std::__1::__hash_node_base.309"* %511, null
  br i1 %512, label %831, label %513

513:                                              ; preds = %507
  %514 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %511, i64 0, i32 0
  %515 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %514, align 8
  %516 = icmp eq %"struct.std::__1::__hash_node_base.309"* %515, null
  br i1 %516, label %831, label %517

517:                                              ; preds = %513
  %518 = add i64 %495, -1
  br label %519

519:                                              ; preds = %540, %517
  %520 = phi %"struct.std::__1::__hash_node_base.309"* [ %515, %517 ], [ %542, %540 ]
  %521 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %520, i64 1
  %522 = bitcast %"struct.std::__1::__hash_node_base.309"* %521 to i64*
  %523 = load i64, i64* %522, align 8
  %524 = icmp eq i64 %523, %236
  br i1 %524, label %535, label %525

525:                                              ; preds = %519
  br i1 %499, label %528, label %526

526:                                              ; preds = %525
  %527 = and i64 %523, %518
  br label %532

528:                                              ; preds = %525
  %529 = icmp ult i64 %523, %495
  br i1 %529, label %532, label %530

530:                                              ; preds = %528
  %531 = urem i64 %523, %495
  br label %532

532:                                              ; preds = %530, %528, %526
  %533 = phi i64 [ %527, %526 ], [ %531, %530 ], [ %523, %528 ]
  %534 = icmp eq i64 %533, %508
  br i1 %534, label %540, label %831

535:                                              ; preds = %519
  %536 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %520, i64 2
  %537 = bitcast %"struct.std::__1::__hash_node_base.309"* %536 to i32*
  %538 = load i32, i32* %537, align 4
  %539 = icmp eq i32 %538, %106
  br i1 %539, label %544, label %540

540:                                              ; preds = %535, %532
  %541 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %520, i64 0, i32 0
  %542 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %541, align 8
  %543 = icmp eq %"struct.std::__1::__hash_node_base.309"* %542, null
  br i1 %543, label %831, label %519

544:                                              ; preds = %535
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #16
  %545 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %520, i64 3
  %546 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %547 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %546, i64 0, i32 11
  %548 = load i32, i32* %547, align 8
  %549 = trunc i32 %548 to i16
  %550 = icmp slt i16 %549, 0
  br i1 %550, label %566, label %551

551:                                              ; preds = %544
  %552 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %546, i64 0, i32 5
  %553 = call i8* @_Znwm(i64 240) #17
  %554 = bitcast i8* %553 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %554, %"class.std::__1::function"* dereferenceable(32) %552, %"class.spvtools::opt::IRContext"* %546) #16
  %555 = ptrtoint i8* %553 to i64
  %556 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %546, i64 0, i32 20
  %557 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %556, i64 0, i32 0, i32 0, i32 0
  %558 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %557, align 8
  %559 = bitcast %"class.std::__1::unique_ptr.480"* %556 to i64*
  store i64 %555, i64* %559, align 8
  %560 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %558, null
  br i1 %560, label %563, label %561

561:                                              ; preds = %551
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %558) #16
  %562 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %558 to i8*
  call void @_ZdlPv(i8* %562) #17
  br label %563

563:                                              ; preds = %561, %551
  %564 = load i32, i32* %547, align 8
  %565 = or i32 %564, 32768
  store i32 %565, i32* %547, align 8
  br label %566

566:                                              ; preds = %544, %563
  %567 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %546, i64 0, i32 20, i32 0, i32 0, i32 0
  %568 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %567, align 8
  %569 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %233, i64 0, i32 3
  %570 = load i8, i8* %569, align 4, !range !5
  %571 = icmp eq i8 %570, 0
  br i1 %571, label %574, label %572

572:                                              ; preds = %566
  %573 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %233, i32 0) #16
  br label %574

574:                                              ; preds = %566, %572
  %575 = phi i32 [ %573, %572 ], [ 0, %566 ]
  %576 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %568, i32 %575) #16
  %577 = bitcast %"class.spvtools::opt::analysis::Type"* %576 to %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)***
  %578 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*** %577, align 8, !noalias !10
  %579 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %578, i64 9
  %580 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %579, align 8, !noalias !10
  %581 = call %"class.spvtools::opt::analysis::Bool"* %580(%"class.spvtools::opt::analysis::Type"* %576) #16, !noalias !10
  %582 = icmp eq %"class.spvtools::opt::analysis::Bool"* %581, null
  br i1 %582, label %604, label %583

583:                                              ; preds = %574
  %584 = bitcast %"struct.std::__1::__hash_node_base.309"* %545 to i32**
  %585 = load i32*, i32** %584, align 8, !noalias !10
  %586 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %520, i64 4
  %587 = bitcast %"struct.std::__1::__hash_node_base.309"* %586 to i32**
  %588 = load i32*, i32** %587, align 8, !noalias !10
  %589 = icmp eq i32* %585, %588
  br i1 %589, label %597, label %592

590:                                              ; preds = %592
  %591 = icmp eq i32* %596, %588
  br i1 %591, label %597, label %592

592:                                              ; preds = %583, %590
  %593 = phi i32* [ %596, %590 ], [ %585, %583 ]
  %594 = load i32, i32* %593, align 4
  %595 = icmp eq i32 %594, 0
  %596 = getelementptr inbounds i32, i32* %593, i64 1
  br i1 %595, label %590, label %597

597:                                              ; preds = %590, %592, %583
  %598 = phi i32 [ 0, %583 ], [ 0, %590 ], [ 1, %592 ]
  %599 = call i8* @_Znwm(i64 4) #17
  %600 = bitcast i8* %599 to i32*
  store i32 %598, i32* %600, align 4, !noalias !10
  %601 = ptrtoint i8* %599 to i64
  %602 = getelementptr inbounds i8, i8* %599, i64 4
  %603 = ptrtoint i8* %602 to i64
  store i64 %601, i64* %49, align 8, !alias.scope !10
  store i64 %603, i64* %51, align 8, !alias.scope !10
  store i64 %603, i64* %53, align 8, !alias.scope !10
  br label %685

604:                                              ; preds = %574
  %605 = bitcast %"class.spvtools::opt::analysis::Type"* %576 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %606 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %605, align 8, !noalias !10
  %607 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %606, i64 11
  %608 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %607, align 8, !noalias !10
  %609 = call %"class.spvtools::opt::analysis::Integer"* %608(%"class.spvtools::opt::analysis::Type"* %576) #16, !noalias !10
  %610 = icmp eq %"class.spvtools::opt::analysis::Integer"* %609, null
  br i1 %610, label %644, label %611

611:                                              ; preds = %604
  %612 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %609, i64 0, i32 1
  %613 = load i32, i32* %612, align 4
  %614 = zext i32 %613 to i64
  %615 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %520, i64 4
  %616 = bitcast %"struct.std::__1::__hash_node_base.309"* %615 to i64*
  %617 = load i64, i64* %616, align 8, !noalias !10
  %618 = bitcast %"struct.std::__1::__hash_node_base.309"* %545 to i64*
  %619 = load i64, i64* %618, align 8, !noalias !10
  %620 = sub i64 %617, %619
  %621 = ashr exact i64 %620, 2
  %622 = shl i64 %620, 3
  %623 = icmp eq i64 %622, %614
  br i1 %623, label %624, label %684

624:                                              ; preds = %611
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 24, i1 false) #16, !alias.scope !10
  %625 = icmp eq i64 %620, 0
  br i1 %625, label %685, label %626

626:                                              ; preds = %624
  %627 = icmp ugt i64 %621, 4611686018427387903
  br i1 %627, label %628, label %630

628:                                              ; preds = %626
  %629 = bitcast %"class.std::__1::vector.3"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %629) #19
  unreachable

630:                                              ; preds = %626
  %631 = call i8* @_Znwm(i64 %620) #17
  %632 = bitcast i8* %631 to i32*
  store i8* %631, i8** %54, align 8, !alias.scope !10
  store i8* %631, i8** %55, align 8, !alias.scope !10
  %633 = getelementptr inbounds i32, i32* %632, i64 %621
  store i32* %633, i32** %52, align 8, !alias.scope !10
  %634 = ptrtoint i8* %631 to i64
  %635 = icmp sgt i64 %620, 0
  %636 = ptrtoint i32* %633 to i64
  br i1 %635, label %637, label %642

637:                                              ; preds = %630
  %638 = lshr exact i64 %620, 2
  %639 = inttoptr i64 %619 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %631, i8* align 4 %639, i64 %620, i1 false) #16
  %640 = getelementptr inbounds i32, i32* %632, i64 %638
  %641 = ptrtoint i32* %640 to i64
  br label %642

642:                                              ; preds = %637, %630
  %643 = phi i64 [ %641, %637 ], [ %634, %630 ]
  store i64 %643, i64* %51, align 8, !alias.scope !10
  br label %685

644:                                              ; preds = %604
  %645 = bitcast %"class.spvtools::opt::analysis::Type"* %576 to %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)***
  %646 = load %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)*** %645, align 8, !noalias !10
  %647 = getelementptr inbounds %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)** %646, i64 13
  %648 = load %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)** %647, align 8
  %649 = call %"class.spvtools::opt::analysis::Float"* %648(%"class.spvtools::opt::analysis::Type"* %576) #16
  %650 = icmp eq %"class.spvtools::opt::analysis::Float"* %649, null
  br i1 %650, label %684, label %651

651:                                              ; preds = %644
  %652 = getelementptr inbounds %"class.spvtools::opt::analysis::Float", %"class.spvtools::opt::analysis::Float"* %649, i64 0, i32 1
  %653 = load i32, i32* %652, align 4
  %654 = zext i32 %653 to i64
  %655 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %520, i64 4
  %656 = bitcast %"struct.std::__1::__hash_node_base.309"* %655 to i64*
  %657 = load i64, i64* %656, align 8, !noalias !10
  %658 = bitcast %"struct.std::__1::__hash_node_base.309"* %545 to i64*
  %659 = load i64, i64* %658, align 8, !noalias !10
  %660 = sub i64 %657, %659
  %661 = ashr exact i64 %660, 2
  %662 = shl i64 %660, 3
  %663 = icmp eq i64 %662, %654
  br i1 %663, label %664, label %684

664:                                              ; preds = %651
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 24, i1 false) #16, !alias.scope !10
  %665 = icmp eq i64 %660, 0
  br i1 %665, label %685, label %666

666:                                              ; preds = %664
  %667 = icmp ugt i64 %661, 4611686018427387903
  br i1 %667, label %668, label %670

668:                                              ; preds = %666
  %669 = bitcast %"class.std::__1::vector.3"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %669) #19
  unreachable

670:                                              ; preds = %666
  %671 = call i8* @_Znwm(i64 %660) #17
  %672 = bitcast i8* %671 to i32*
  store i8* %671, i8** %54, align 8, !alias.scope !10
  store i8* %671, i8** %55, align 8, !alias.scope !10
  %673 = getelementptr inbounds i32, i32* %672, i64 %661
  store i32* %673, i32** %52, align 8, !alias.scope !10
  %674 = ptrtoint i8* %671 to i64
  %675 = icmp sgt i64 %660, 0
  %676 = ptrtoint i32* %673 to i64
  br i1 %675, label %677, label %682

677:                                              ; preds = %670
  %678 = lshr exact i64 %660, 2
  %679 = inttoptr i64 %659 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %671, i8* align 4 %679, i64 %660, i1 false) #16
  %680 = getelementptr inbounds i32, i32* %672, i64 %678
  %681 = ptrtoint i32* %680 to i64
  br label %682

682:                                              ; preds = %677, %670
  %683 = phi i64 [ %681, %677 ], [ %674, %670 ]
  store i64 %683, i64* %51, align 8, !alias.scope !10
  br label %685

684:                                              ; preds = %651, %644, %611
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 24, i1 false) #16, !alias.scope !10
  br label %685

685:                                              ; preds = %684, %682, %664, %642, %624, %597, %490
  %686 = phi i8* [ %30, %490 ], [ %48, %597 ], [ %48, %624 ], [ %48, %642 ], [ %48, %664 ], [ %48, %682 ], [ %48, %684 ]
  %687 = phi i64 [ %491, %490 ], [ %601, %597 ], [ 0, %624 ], [ %634, %642 ], [ 0, %664 ], [ %674, %682 ], [ 0, %684 ]
  %688 = phi i64 [ %492, %490 ], [ %603, %597 ], [ 0, %624 ], [ %643, %642 ], [ 0, %664 ], [ %683, %682 ], [ 0, %684 ]
  %689 = phi i64 [ %493, %490 ], [ %603, %597 ], [ 0, %624 ], [ %636, %642 ], [ 0, %664 ], [ %676, %682 ], [ 0, %684 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %686) #16
  %690 = inttoptr i64 %687 to i32*
  %691 = inttoptr i64 %688 to i32*
  %692 = icmp eq i32* %690, %691
  br i1 %692, label %825, label %693

693:                                              ; preds = %685
  %694 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %233, i64 0, i32 2
  %695 = load i32, i32* %694, align 8
  switch i32 %695, label %825 [
    i32 50, label %696
    i32 48, label %817
    i32 49, label %821
  ]

696:                                              ; preds = %693
  %697 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %233, i64 0, i32 3
  %698 = load i8, i8* %697, align 4, !range !5
  %699 = icmp eq i8 %698, 0
  %700 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %233, i64 0, i32 4
  %701 = load i8, i8* %700, align 1, !range !5
  %702 = icmp eq i8 %701, 0
  %703 = select i1 %702, i64 1, i64 2
  %704 = xor i1 %702, true
  %705 = zext i1 %704 to i64
  %706 = select i1 %699, i64 %705, i64 %703
  %707 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %233, i64 0, i32 6, i32 0, i32 0
  %708 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %707, align 8
  %709 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %708, i64 %706, i32 1, i32 4, i32 0, i32 0, i32 0
  %710 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %709, align 8
  %711 = icmp eq %"class.std::__1::vector.3"* %710, null
  br i1 %711, label %712, label %715

712:                                              ; preds = %696
  %713 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %708, i64 %706, i32 1, i32 1
  %714 = load i64, i64* %713, align 8
  br label %723

715:                                              ; preds = %696
  %716 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %710, i64 0, i32 0, i32 1
  %717 = bitcast i32** %716 to i64*
  %718 = load i64, i64* %717, align 8
  %719 = bitcast %"class.std::__1::vector.3"* %710 to i64*
  %720 = load i64, i64* %719, align 8
  %721 = sub i64 %718, %720
  %722 = ashr exact i64 %721, 2
  br label %723

723:                                              ; preds = %715, %712
  %724 = phi i64 [ %722, %715 ], [ %714, %712 ]
  %725 = sub i64 %688, %687
  %726 = ashr exact i64 %725, 2
  %727 = icmp eq i64 %724, %726
  br i1 %727, label %728, label %759

728:                                              ; preds = %723
  %729 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %710, i64 0, i32 0, i32 0
  %730 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %708, i64 %706, i32 1, i32 2
  %731 = select i1 %711, i32** %730, i32** %729
  %732 = load i32*, i32** %731, align 8
  %733 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %710, i64 0, i32 0, i32 1
  %734 = bitcast i32** %733 to i64*
  %735 = load i32*, i32** %730, align 8
  %736 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %708, i64 %706, i32 1, i32 1
  %737 = load i64, i64* %736, align 8
  %738 = getelementptr inbounds i32, i32* %735, i64 %737
  br label %739

739:                                              ; preds = %756, %728
  %740 = phi i32* [ %690, %728 ], [ %758, %756 ]
  %741 = phi i32* [ %732, %728 ], [ %757, %756 ]
  br i1 %711, label %749, label %742

742:                                              ; preds = %739
  %743 = load i32*, i32** %729, align 8
  %744 = load i64, i64* %734, align 8
  %745 = ptrtoint i32* %743 to i64
  %746 = sub i64 %744, %745
  %747 = ashr exact i64 %746, 2
  %748 = getelementptr inbounds i32, i32* %743, i64 %747
  br label %749

749:                                              ; preds = %742, %739
  %750 = phi i32* [ %748, %742 ], [ %738, %739 ]
  %751 = icmp eq i32* %741, %750
  br i1 %751, label %825, label %752

752:                                              ; preds = %749
  %753 = load i32, i32* %741, align 4
  %754 = load i32, i32* %740, align 4
  %755 = icmp eq i32 %753, %754
  br i1 %755, label %756, label %759

756:                                              ; preds = %752
  %757 = getelementptr inbounds i32, i32* %741, i64 1
  %758 = getelementptr inbounds i32, i32* %740, i64 1
  br label %739

759:                                              ; preds = %752, %723
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %56) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  store i64 0, i64* %58, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %60, %"struct.std::__1::aligned_storage<4, 4>::type"** %61, align 8
  store i64 0, i64* %63, align 8
  %760 = icmp ugt i64 %726, 2
  br i1 %760, label %761, label %769

761:                                              ; preds = %759
  %762 = call i8* @_Znwm(i64 24) #17
  %763 = bitcast i8* %762 to i64*
  store i64 %687, i64* %763, align 8
  %764 = getelementptr inbounds i8, i8* %762, i64 8
  %765 = bitcast i8* %764 to i64*
  store i64 %688, i64* %765, align 8
  %766 = getelementptr inbounds i8, i8* %762, i64 16
  %767 = bitcast i8* %766 to i64*
  store i64 %689, i64* %767, align 8
  %768 = ptrtoint i8* %762 to i64
  store i64 %768, i64* %63, align 8
  br label %790

769:                                              ; preds = %759
  store i64 %726, i64* %58, align 8
  %770 = icmp eq i64 %725, 0
  br i1 %770, label %790, label %771

771:                                              ; preds = %769
  %772 = load i32, i32* %690, align 4
  store i32 %772, i32* %64, align 8
  %773 = icmp ugt i64 %726, 1
  br i1 %773, label %774, label %790

774:                                              ; preds = %771
  %775 = getelementptr inbounds i32, i32* %690, i64 1
  %776 = load i32, i32* %775, align 4
  store i32 %776, i32* %67, align 4
  %777 = load i64, i64* %58, align 8
  %778 = icmp ugt i64 %777, 2
  br i1 %778, label %779, label %790

779:                                              ; preds = %774, %779
  %780 = phi i64 [ %787, %779 ], [ 2, %774 ]
  %781 = phi i32 [ %786, %779 ], [ 2, %774 ]
  %782 = load i32*, i32** %59, align 8
  %783 = getelementptr inbounds i32, i32* %782, i64 %780
  %784 = getelementptr inbounds i32, i32* %690, i64 %780
  %785 = load i32, i32* %784, align 4
  store i32 %785, i32* %783, align 4
  %786 = add i32 %781, 1
  %787 = zext i32 %786 to i64
  %788 = load i64, i64* %58, align 8
  %789 = icmp ugt i64 %788, %787
  br i1 %789, label %779, label %790

790:                                              ; preds = %779, %774, %761, %771, %769
  %791 = phi i64 [ 0, %761 ], [ %687, %769 ], [ %687, %771 ], [ %687, %774 ], [ %687, %779 ]
  %792 = load i8, i8* %697, align 4, !range !5
  %793 = icmp eq i8 %792, 0
  %794 = load i8, i8* %700, align 1, !range !5
  %795 = icmp eq i8 %794, 0
  %796 = select i1 %795, i64 1, i64 2
  %797 = xor i1 %795, true
  %798 = zext i1 %797 to i64
  %799 = select i1 %793, i64 %798, i64 %796
  %800 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %707, align 8
  %801 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %800, i64 %799, i32 1
  %802 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %801, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %803 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %65, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %65, align 8
  %804 = icmp eq %"class.std::__1::vector.3"* %803, null
  br i1 %804, label %816, label %805

805:                                              ; preds = %790
  %806 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %803, i64 0, i32 0, i32 0
  %807 = load i32*, i32** %806, align 8
  %808 = icmp eq i32* %807, null
  br i1 %808, label %814, label %809

809:                                              ; preds = %805
  %810 = ptrtoint i32* %807 to i64
  %811 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %803, i64 0, i32 0, i32 1
  %812 = bitcast i32** %811 to i64*
  store i64 %810, i64* %812, align 8
  %813 = bitcast i32* %807 to i8*
  call void @_ZdlPv(i8* %813) #17
  br label %814

814:                                              ; preds = %809, %805
  %815 = bitcast %"class.std::__1::vector.3"* %803 to i8*
  call void @_ZdlPv(i8* %815) #17
  br label %816

816:                                              ; preds = %790, %814
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %56) #16
  br label %825

817:                                              ; preds = %693
  %818 = load i32, i32* %690, align 4
  %819 = icmp eq i32 %818, 0
  br i1 %819, label %820, label %825

820:                                              ; preds = %817
  store i32 49, i32* %694, align 8
  br label %825

821:                                              ; preds = %693
  %822 = load i32, i32* %690, align 4
  %823 = icmp eq i32 %822, 0
  br i1 %823, label %825, label %824

824:                                              ; preds = %821
  store i32 48, i32* %694, align 8
  br label %825

825:                                              ; preds = %749, %816, %820, %824, %693, %821, %817, %685
  %826 = phi i64 [ %687, %685 ], [ %687, %693 ], [ %687, %821 ], [ %687, %824 ], [ %687, %820 ], [ %687, %817 ], [ %791, %816 ], [ %687, %749 ]
  %827 = phi i8 [ %76, %685 ], [ %76, %693 ], [ %76, %821 ], [ 1, %824 ], [ 1, %820 ], [ %76, %817 ], [ 1, %816 ], [ %76, %749 ]
  %828 = icmp eq i64 %826, 0
  br i1 %828, label %831, label %829

829:                                              ; preds = %825
  %830 = inttoptr i64 %826 to i8*
  call void @_ZdlPv(i8* %830) #17
  br label %831

831:                                              ; preds = %283, %275, %540, %532, %229, %513, %494, %507, %256, %237, %250, %137, %230, %825, %829, %91, %80, %73
  %832 = phi i8 [ %76, %73 ], [ %76, %80 ], [ %76, %91 ], [ %76, %230 ], [ %827, %825 ], [ %827, %829 ], [ %76, %137 ], [ %76, %250 ], [ %76, %237 ], [ %76, %256 ], [ %76, %507 ], [ %76, %494 ], [ %76, %513 ], [ %76, %229 ], [ %76, %532 ], [ %76, %540 ], [ %76, %275 ], [ %76, %283 ]
  %833 = inttoptr i64 %75 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %834 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %833, i64 0, i32 1
  %835 = bitcast %"class.spvtools::opt::Instruction"** %834 to i64*
  %836 = load i64, i64* %835, align 8
  %837 = inttoptr i64 %836 to %"class.spvtools::opt::Instruction"*
  %838 = icmp eq %"class.spvtools::opt::Instruction"* %14, %837
  br i1 %838, label %68, label %73
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #17
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt11IsSeparatorEc(i8 signext) local_unnamed_addr #3 {
  %2 = zext i8 %0 to i64
  %3 = icmp ugt i8 %0, 63
  %4 = shl i64 1, %2
  %5 = and i64 %4, 288230376151711745
  %6 = icmp eq i64 %5, 0
  %7 = or i1 %3, %6
  br i1 %7, label %8, label %16

8:                                                ; preds = %1
  %9 = tail call i16** @__ctype_b_loc() #20
  %10 = load i16*, i16** %9, align 8
  %11 = sext i8 %0 to i64
  %12 = getelementptr inbounds i16, i16* %10, i64 %11
  %13 = load i16, i16* %12, align 2
  %14 = and i16 %13, 8192
  %15 = icmp ne i16 %14, 0
  br label %16

16:                                               ; preds = %1, %8
  %17 = phi i1 [ true, %1 ], [ %15, %8 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::unordered_map.910"* @_ZN8spvtools3opt31SetSpecConstantDefaultValuePass24ParseDefaultValuesStringEPKc(i8*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.988", align 1
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = icmp eq i8* %0, null
  br i1 %7, label %285, label %8

8:                                                ; preds = %1
  %9 = tail call i8* @_Znwm(i64 40) #17
  %10 = getelementptr inbounds i8, i8* %9, i64 32
  %11 = bitcast i8* %10 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %11, align 4
  %12 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = bitcast i32* %5 to i8*
  %19 = getelementptr inbounds i8, i8* %9, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = bitcast i8* %9 to %"struct.std::__1::__hash_node_base.915"***
  %22 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = bitcast i8* %9 to %"class.std::__1::__hash_table.911"*
  %29 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %30 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::tuple.988", %"class.std::__1::tuple.988"* %3, i64 0, i32 0
  %32 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %33

33:                                               ; preds = %255, %8
  %34 = phi i8* [ %0, %8 ], [ %249, %255 ]
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %283, label %37

37:                                               ; preds = %33
  %38 = tail call i16** @__ctype_b_loc() #20
  %39 = load i16*, i16** %38, align 8
  %40 = sext i8 %35 to i64
  %41 = getelementptr inbounds i16, i16* %39, i64 %40
  %42 = load i16, i16* %41, align 2
  %43 = and i16 %42, 8192
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %54, label %45

45:                                               ; preds = %37, %45
  %46 = phi i8* [ %47, %45 ], [ %34, %37 ]
  %47 = getelementptr inbounds i8, i8* %46, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = sext i8 %48 to i64
  %50 = getelementptr inbounds i16, i16* %39, i64 %49
  %51 = load i16, i16* %50, align 2
  %52 = and i16 %51, 8192
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %54, label %45

54:                                               ; preds = %45, %37
  %55 = phi i8 [ %35, %37 ], [ %48, %45 ]
  %56 = phi i8* [ %34, %37 ], [ %47, %45 ]
  %57 = phi i16 [ %42, %37 ], [ %51, %45 ]
  %58 = zext i8 %55 to i64
  %59 = icmp ugt i8 %55, 63
  %60 = shl i64 1, %58
  %61 = and i64 %60, 288230376151711745
  %62 = icmp eq i64 %61, 0
  %63 = or i1 %59, %62
  %64 = and i16 %57, 8192
  %65 = icmp eq i16 %64, 0
  %66 = and i1 %63, %65
  br i1 %66, label %67, label %83

67:                                               ; preds = %54, %77
  %68 = phi i8* [ %69, %77 ], [ %56, %54 ]
  %69 = getelementptr inbounds i8, i8* %68, i64 1
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i64
  %72 = icmp ugt i8 %70, 63
  %73 = shl i64 1, %71
  %74 = and i64 %73, 288230376151711745
  %75 = icmp eq i64 %74, 0
  %76 = or i1 %72, %75
  br i1 %76, label %77, label %83

77:                                               ; preds = %67
  %78 = sext i8 %70 to i64
  %79 = getelementptr inbounds i16, i16* %39, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = and i16 %80, 8192
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %67, label %83

83:                                               ; preds = %77, %67, %54
  %84 = phi i8* [ %56, %54 ], [ %69, %67 ], [ %69, %77 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %85 = ptrtoint i8* %84 to i64
  %86 = ptrtoint i8* %56 to i64
  %87 = sub i64 %85, %86
  %88 = icmp ugt i64 %87, -17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false)
  br i1 %88, label %89, label %91

89:                                               ; preds = %83
  %90 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %90) #19
  unreachable

91:                                               ; preds = %83
  %92 = icmp ult i64 %87, 23
  br i1 %92, label %98, label %93

93:                                               ; preds = %91
  %94 = add nuw i64 %87, 16
  %95 = and i64 %94, -16
  %96 = call i8* @_Znwm(i64 %95) #17
  store i8* %96, i8** %13, align 8
  %97 = or i64 %95, -9223372036854775808
  store i64 %97, i64* %15, align 8
  store i64 %87, i64* %14, align 8
  br label %101

98:                                               ; preds = %91
  %99 = trunc i64 %87 to i8
  store i8 %99, i8* %17, align 1
  %100 = icmp eq i64 %87, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %98, %93
  %102 = phi i8* [ %96, %93 ], [ %12, %98 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %102, i8* align 1 %56, i64 %87, i1 false) #16
  br label %103

103:                                              ; preds = %98, %101
  %104 = phi i8* [ %12, %98 ], [ %102, %101 ]
  %105 = getelementptr inbounds i8, i8* %104, i64 %87
  store i8 0, i8* %105, align 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #16
  store i32 0, i32* %5, align 4
  %106 = load i8, i8* %17, align 1
  %107 = icmp slt i8 %106, 0
  %108 = load i8*, i8** %13, align 8
  %109 = select i1 %107, i8* %108, i8* %12
  %110 = call zeroext i1 @_ZN8spvtools5utils11ParseNumberIjEEbPKcPT_(i8* %109, i32* nonnull %5)
  br i1 %110, label %111, label %248

111:                                              ; preds = %103
  %112 = load i32, i32* %5, align 4
  %113 = zext i32 %112 to i64
  %114 = load i64, i64* %20, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %163, label %116

116:                                              ; preds = %111
  %117 = call i64 @llvm.ctpop.i64(i64 %114) #16, !range !6
  %118 = icmp ugt i64 %117, 1
  br i1 %118, label %122, label %119

119:                                              ; preds = %116
  %120 = add i64 %114, 4294967295
  %121 = and i64 %120, %113
  br label %126

122:                                              ; preds = %116
  %123 = icmp ugt i64 %114, %113
  br i1 %123, label %126, label %124

124:                                              ; preds = %122
  %125 = urem i64 %113, %114
  br label %126

126:                                              ; preds = %124, %122, %119
  %127 = phi i64 [ %121, %119 ], [ %125, %124 ], [ %113, %122 ]
  %128 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %128, i64 %127
  %130 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %129, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base.915"* %130, null
  br i1 %131, label %163, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %130, i64 0, i32 0
  %134 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %133, align 8
  %135 = icmp eq %"struct.std::__1::__hash_node_base.915"* %134, null
  br i1 %135, label %163, label %136

136:                                              ; preds = %132
  %137 = add i64 %114, -1
  br label %138

138:                                              ; preds = %159, %136
  %139 = phi %"struct.std::__1::__hash_node_base.915"* [ %134, %136 ], [ %161, %159 ]
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %139, i64 1
  %141 = bitcast %"struct.std::__1::__hash_node_base.915"* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = icmp eq i64 %142, %113
  br i1 %143, label %154, label %144

144:                                              ; preds = %138
  br i1 %118, label %147, label %145

145:                                              ; preds = %144
  %146 = and i64 %142, %137
  br label %151

147:                                              ; preds = %144
  %148 = icmp ult i64 %142, %114
  br i1 %148, label %151, label %149

149:                                              ; preds = %147
  %150 = urem i64 %142, %114
  br label %151

151:                                              ; preds = %149, %147, %145
  %152 = phi i64 [ %146, %145 ], [ %150, %149 ], [ %142, %147 ]
  %153 = icmp eq i64 %152, %127
  br i1 %153, label %159, label %163

154:                                              ; preds = %138
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %139, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.915"* %155 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, %112
  br i1 %158, label %248, label %159

159:                                              ; preds = %154, %151
  %160 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %139, i64 0, i32 0
  %161 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %160, align 8
  %162 = icmp eq %"struct.std::__1::__hash_node_base.915"* %161, null
  br i1 %162, label %163, label %138

163:                                              ; preds = %151, %159, %126, %111, %132
  %164 = getelementptr inbounds i8, i8* %84, i64 1
  %165 = load i8, i8* %84, align 1
  %166 = icmp eq i8 %165, 58
  br i1 %166, label %167, label %248

167:                                              ; preds = %163
  %168 = load i8, i8* %164, align 1
  %169 = zext i8 %168 to i64
  %170 = icmp ugt i8 %168, 63
  %171 = shl i64 1, %169
  %172 = and i64 %171, 288230376151711745
  %173 = icmp eq i64 %172, 0
  %174 = or i1 %170, %173
  br i1 %174, label %175, label %248

175:                                              ; preds = %167
  %176 = load i16*, i16** %38, align 8
  %177 = sext i8 %168 to i64
  %178 = getelementptr inbounds i16, i16* %176, i64 %177
  %179 = load i16, i16* %178, align 2
  %180 = and i16 %179, 8192
  %181 = icmp eq i16 %180, 0
  br i1 %181, label %188, label %201

182:                                              ; preds = %188
  %183 = sext i8 %192 to i64
  %184 = getelementptr inbounds i16, i16* %176, i64 %183
  %185 = load i16, i16* %184, align 2
  %186 = and i16 %185, 8192
  %187 = icmp eq i16 %186, 0
  br i1 %187, label %188, label %199

188:                                              ; preds = %175, %182
  %189 = phi i64 [ %190, %182 ], [ 1, %175 ]
  %190 = add nuw nsw i64 %189, 1
  %191 = getelementptr inbounds i8, i8* %84, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i64
  %194 = icmp ugt i8 %192, 63
  %195 = shl i64 1, %193
  %196 = and i64 %195, 288230376151711745
  %197 = icmp eq i64 %196, 0
  %198 = or i1 %194, %197
  br i1 %198, label %182, label %205

199:                                              ; preds = %182
  %200 = getelementptr inbounds i8, i8* %84, i64 %190
  br label %201

201:                                              ; preds = %199, %175
  %202 = phi i8* [ %164, %175 ], [ %200, %199 ]
  %203 = phi i64 [ 1, %175 ], [ %190, %199 ]
  %204 = icmp eq i64 %203, 1
  br i1 %204, label %248, label %207

205:                                              ; preds = %188
  %206 = getelementptr inbounds i8, i8* %84, i64 %190
  br label %207

207:                                              ; preds = %205, %201
  %208 = phi i8* [ %202, %201 ], [ %206, %205 ]
  %209 = phi i64 [ %203, %201 ], [ %190, %205 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #16
  %210 = add nsw i64 %209, -1
  %211 = icmp ugt i64 %210, -17
  br i1 %211, label %212, label %214

212:                                              ; preds = %207
  %213 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %213) #19
  unreachable

214:                                              ; preds = %207
  %215 = icmp ult i64 %210, 23
  br i1 %215, label %221, label %216

216:                                              ; preds = %214
  %217 = add nuw i64 %209, 15
  %218 = and i64 %217, -16
  %219 = call i8* @_Znwm(i64 %218) #17
  store i8* %219, i8** %23, align 8
  %220 = or i64 %218, -9223372036854775808
  store i64 %220, i64* %24, align 8
  store i64 %210, i64* %25, align 8
  br label %223

221:                                              ; preds = %214
  %222 = trunc i64 %210 to i8
  store i8 %222, i8* %27, align 1
  br label %223

223:                                              ; preds = %216, %221
  %224 = phi i8* [ %219, %216 ], [ %22, %221 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %224, i8* align 1 %164, i64 %210, i1 false) #16
  %225 = getelementptr inbounds i8, i8* %224, i64 %210
  store i8 0, i8* %225, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #16
  store i32* %5, i32** %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #16
  %226 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* nonnull %28, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.988"* nonnull dereferenceable(1) %3) #16
  %227 = extractvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } %226, 0
  %228 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %227, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  %229 = bitcast %"struct.std::__1::__hash_node_base.915"* %228 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %230 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %229, i64 0, i32 1, i32 0
  %231 = load i8, i8* %230, align 1
  %232 = icmp slt i8 %231, 0
  br i1 %232, label %233, label %236

233:                                              ; preds = %223
  %234 = bitcast %"struct.std::__1::__hash_node_base.915"* %228 to i8**
  %235 = load i8*, i8** %234, align 8
  call void @_ZdlPv(i8* %235) #17
  br label %236

236:                                              ; preds = %233, %223
  %237 = bitcast %"struct.std::__1::__hash_node_base.915"* %228 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %237, i8* nonnull align 8 %22, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #16
  %238 = load i16*, i16** %38, align 8
  br label %239

239:                                              ; preds = %239, %236
  %240 = phi i8* [ %208, %236 ], [ %247, %239 ]
  %241 = load i8, i8* %240, align 1
  %242 = sext i8 %241 to i64
  %243 = getelementptr inbounds i16, i16* %238, i64 %242
  %244 = load i16, i16* %243, align 2
  %245 = and i16 %244, 8192
  %246 = icmp eq i16 %245, 0
  %247 = getelementptr inbounds i8, i8* %240, i64 1
  br i1 %246, label %248, label %239

248:                                              ; preds = %154, %239, %167, %163, %201, %103
  %249 = phi i8* [ %84, %103 ], [ %164, %163 ], [ %202, %201 ], [ %164, %167 ], [ %240, %239 ], [ %84, %154 ]
  %250 = phi i32 [ 1, %103 ], [ 1, %163 ], [ 1, %201 ], [ 1, %167 ], [ 0, %239 ], [ 1, %154 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #16
  %251 = load i8, i8* %17, align 1
  %252 = icmp slt i8 %251, 0
  br i1 %252, label %253, label %255

253:                                              ; preds = %248
  %254 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %254) #17
  br label %255

255:                                              ; preds = %248, %253
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  %256 = icmp eq i32 %250, 0
  br i1 %256, label %33, label %257

257:                                              ; preds = %255
  %258 = getelementptr inbounds i8, i8* %9, i64 16
  %259 = bitcast i8* %258 to %"struct.std::__1::__hash_node_base.915"**
  %260 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %259, align 8
  %261 = icmp eq %"struct.std::__1::__hash_node_base.915"* %260, null
  br i1 %261, label %277, label %262

262:                                              ; preds = %257, %274
  %263 = phi %"struct.std::__1::__hash_node_base.915"* [ %265, %274 ], [ %260, %257 ]
  %264 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %263, i64 0, i32 0
  %265 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %264, align 8
  %266 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %263, i64 3
  %267 = bitcast %"struct.std::__1::__hash_node_base.915"* %266 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %268 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %267, i64 0, i32 1, i32 0
  %269 = load i8, i8* %268, align 1
  %270 = icmp slt i8 %269, 0
  br i1 %270, label %271, label %274

271:                                              ; preds = %262
  %272 = bitcast %"struct.std::__1::__hash_node_base.915"* %266 to i8**
  %273 = load i8*, i8** %272, align 8
  call void @_ZdlPv(i8* %273) #17
  br label %274

274:                                              ; preds = %271, %262
  %275 = bitcast %"struct.std::__1::__hash_node_base.915"* %263 to i8*
  call void @_ZdlPv(i8* %275) #17
  %276 = icmp eq %"struct.std::__1::__hash_node_base.915"* %265, null
  br i1 %276, label %277, label %262

277:                                              ; preds = %274, %257
  %278 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %279 = icmp eq %"struct.std::__1::__hash_node_base.915"** %278, null
  br i1 %279, label %282, label %280

280:                                              ; preds = %277
  %281 = bitcast %"struct.std::__1::__hash_node_base.915"** %278 to i8*
  call void @_ZdlPv(i8* %281) #17
  br label %282

282:                                              ; preds = %280, %277
  call void @_ZdlPv(i8* nonnull %9) #17
  br label %285

283:                                              ; preds = %33
  %284 = bitcast i8* %9 to %"class.std::__1::unordered_map.910"*
  br label %285

285:                                              ; preds = %283, %282, %1
  %286 = phi %"class.std::__1::unordered_map.910"* [ null, %1 ], [ null, %282 ], [ %284, %283 ]
  ret %"class.std::__1::unordered_map.910"* %286
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN8spvtools5utils11ParseNumberIjEEbPKcPT_(i8*, i32*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.std::__1::basic_istringstream", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = icmp eq i8* %0, null
  br i1 %5, label %123, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_istringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %7) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 272, i1 false)
  %8 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  %9 = tail call i64 @strlen(i8* nonnull %0) #16
  %10 = icmp ugt i64 %9, -17
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %12) #19
  unreachable

13:                                               ; preds = %6
  %14 = icmp ult i64 %9, 23
  br i1 %14, label %24, label %15

15:                                               ; preds = %13
  %16 = add nuw i64 %9, 16
  %17 = and i64 %16, -16
  %18 = tail call i8* @_Znwm(i64 %17) #17
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8
  %20 = or i64 %17, -9223372036854775808
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %9, i64* %22, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %29

24:                                               ; preds = %13
  %25 = trunc i64 %9 to i8
  %26 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 %25, i8* %27, align 1
  %28 = icmp eq i64 %9, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %24, %15
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %26, %24 ], [ %23, %15 ]
  %31 = phi i8* [ %8, %24 ], [ %18, %15 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* nonnull align 1 %0, i64 %9, i1 false) #16
  br label %32

32:                                               ; preds = %24, %29
  %33 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %26, %24 ], [ %30, %29 ]
  %34 = phi i8* [ %8, %24 ], [ %31, %29 ]
  %35 = getelementptr inbounds i8, i8* %34, i64 %9
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %"class.std::__1::basic_istringstream", %"class.std::__1::basic_istringstream"* %3, i64 0, i32 2, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::basic_istringstream", %"class.std::__1::basic_istringstream"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_istringstream", %"class.std::__1::basic_istringstream"* %3, i64 0, i32 1
  %39 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %38, i64 0, i32 0
  %40 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %41 = bitcast %"class.std::__1::basic_istringstream"* %3 to i64*
  store i64 %40, i64* %41, align 8
  %42 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %43 = bitcast %"class.std::__1::basic_istringstream"* %3 to i8**
  %44 = inttoptr i64 %40 to i8*
  %45 = getelementptr i8, i8* %44, i64 -24
  %46 = bitcast i8* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds i8, i8* %7, i64 %47
  %49 = bitcast i8* %48 to i64*
  store i64 %42, i64* %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::basic_istringstream", %"class.std::__1::basic_istringstream"* %3, i64 0, i32 0, i32 1
  store i64 0, i64* %50, align 8
  %51 = load i8*, i8** %43, align 8
  %52 = getelementptr i8, i8* %51, i64 -24
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds i8, i8* %7, i64 %54
  %56 = bitcast i8* %55 to %"class.std::__1::ios_base"*
  %57 = bitcast %"class.std::__1::basic_stringbuf"* %38 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %56, i8* %57) #16
  %58 = getelementptr inbounds i8, i8* %55, i64 136
  %59 = bitcast i8* %58 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %59, align 8
  %60 = getelementptr inbounds i8, i8* %55, i64 144
  %61 = bitcast i8* %60 to i32*
  store i32 -1, i32* %61, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %37, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %36, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %39) #16
  %62 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %38, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::basic_istringstream", %"class.std::__1::basic_istringstream"* %3, i64 0, i32 1, i32 1
  %64 = getelementptr inbounds %"class.std::__1::basic_istringstream", %"class.std::__1::basic_istringstream"* %3, i64 0, i32 1, i32 3
  %65 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 32, i1 false) #16
  store i32 8, i32* %64, align 8
  call void @_ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(%"class.std::__1::basic_stringbuf"* %38, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #16
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %32
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #17
  br label %72

72:                                               ; preds = %32, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  %73 = bitcast %"class.std::__1::basic_istringstream"* %3 to %"class.std::__1::basic_istream"*
  %74 = load i8*, i8** %43, align 8
  %75 = getelementptr i8, i8* %74, i64 -24
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds i8, i8* %7, i64 %77
  %79 = getelementptr inbounds i8, i8* %78, i64 8
  %80 = bitcast i8* %79 to i32*
  %81 = load i32, i32* %80, align 8
  %82 = and i32 %81, -75
  store i32 %82, i32* %80, align 8
  %83 = call dereferenceable(168) %"class.std::__1::basic_istream"* @_ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERj(%"class.std::__1::basic_istream"* nonnull %73, i32* dereferenceable(4) %1) #16
  %84 = load i8, i8* %0, align 1
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %103, label %86

86:                                               ; preds = %72
  %87 = load i8*, i8** %43, align 8
  %88 = getelementptr i8, i8* %87, i64 -24
  %89 = bitcast i8* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds i8, i8* %7, i64 %90
  %92 = getelementptr inbounds i8, i8* %91, i64 32
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 8
  %95 = and i32 %94, 7
  %96 = icmp eq i32 %95, 2
  br i1 %96, label %97, label %103

97:                                               ; preds = %86
  %98 = icmp eq i8 %84, 45
  br i1 %98, label %99, label %103

99:                                               ; preds = %97
  %100 = load i32, i32* %1, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %103, label %102

102:                                              ; preds = %99
  store i32 0, i32* %1, align 4
  br label %103

103:                                              ; preds = %102, %99, %72, %86, %97
  %104 = phi i1 [ true, %97 ], [ false, %86 ], [ false, %72 ], [ false, %102 ], [ true, %99 ]
  %105 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %105, i64* %41, align 8
  %106 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %107 = inttoptr i64 %105 to i8*
  %108 = getelementptr i8, i8* %107, i64 -24
  %109 = bitcast i8* %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds i8, i8* %7, i64 %110
  %112 = bitcast i8* %111 to i64*
  store i64 %106, i64* %112, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %113 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %103
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  call void @_ZdlPv(i8* %119) #17
  br label %120

120:                                              ; preds = %103, %117
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %39) #16
  call void @_ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_istream"* nonnull %73, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #16
  %121 = getelementptr inbounds %"class.std::__1::basic_istringstream", %"class.std::__1::basic_istringstream"* %3, i64 0, i32 2
  %122 = bitcast %"class.std::__1::basic_ios.base"* %121 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %122) #16
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %7) #16
  br label %123

123:                                              ; preds = %2, %120
  %124 = phi i1 [ %104, %120 ], [ false, %2 ]
  ret i1 %124
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt31SetSpecConstantDefaultValuePassD2Ev(%"class.spvtools::opt::SetSpecConstantDefaultValuePass"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::SetSpecConstantDefaultValuePass", %"class.spvtools::opt::SetSpecConstantDefaultValuePass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt31SetSpecConstantDefaultValuePassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::SetSpecConstantDefaultValuePass", %"class.spvtools::opt::SetSpecConstantDefaultValuePass"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.309"* %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %1, %19
  %7 = phi %"struct.std::__1::__hash_node_base.309"* [ %9, %19 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %7, i64 3
  %11 = bitcast %"struct.std::__1::__hash_node_base.309"* %10 to i32**
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %6
  %15 = ptrtoint i32* %12 to i64
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %7, i64 4
  %17 = bitcast %"struct.std::__1::__hash_node_base.309"* %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i32* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #17
  br label %19

19:                                               ; preds = %14, %6
  %20 = bitcast %"struct.std::__1::__hash_node_base.309"* %7 to i8*
  tail call void @_ZdlPv(i8* %20) #17
  %21 = icmp eq %"struct.std::__1::__hash_node_base.309"* %9, null
  br i1 %21, label %22, label %6

22:                                               ; preds = %19, %1
  %23 = getelementptr inbounds %"class.spvtools::opt::SetSpecConstantDefaultValuePass", %"class.spvtools::opt::SetSpecConstantDefaultValuePass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %23, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.309"** %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = bitcast %"struct.std::__1::__hash_node_base.309"** %24 to i8*
  tail call void @_ZdlPv(i8* %27) #17
  br label %28

28:                                               ; preds = %22, %26
  %29 = getelementptr inbounds %"class.spvtools::opt::SetSpecConstantDefaultValuePass", %"class.spvtools::opt::SetSpecConstantDefaultValuePass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.915"* %30, null
  br i1 %31, label %47, label %32

32:                                               ; preds = %28, %44
  %33 = phi %"struct.std::__1::__hash_node_base.915"* [ %35, %44 ], [ %30, %28 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %33, i64 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %33, i64 3
  %37 = bitcast %"struct.std::__1::__hash_node_base.915"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %32
  %42 = bitcast %"struct.std::__1::__hash_node_base.915"* %36 to i8**
  %43 = load i8*, i8** %42, align 8
  tail call void @_ZdlPv(i8* %43) #17
  br label %44

44:                                               ; preds = %41, %32
  %45 = bitcast %"struct.std::__1::__hash_node_base.915"* %33 to i8*
  tail call void @_ZdlPv(i8* %45) #17
  %46 = icmp eq %"struct.std::__1::__hash_node_base.915"* %35, null
  br i1 %46, label %47, label %32

47:                                               ; preds = %44, %28
  %48 = getelementptr inbounds %"class.spvtools::opt::SetSpecConstantDefaultValuePass", %"class.spvtools::opt::SetSpecConstantDefaultValuePass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %48, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.915"** %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.std::__1::__hash_node_base.915"** %49 to i8*
  tail call void @_ZdlPv(i8* %52) #17
  br label %53

53:                                               ; preds = %47, %51
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %54 = getelementptr inbounds %"class.spvtools::opt::SetSpecConstantDefaultValuePass", %"class.spvtools::opt::SetSpecConstantDefaultValuePass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %55 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %54, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %55, i64 0, i32 1
  %57 = load void (i8*)*, void (i8*)** %56, align 8
  %58 = icmp eq void (i8*)* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.spvtools::opt::SetSpecConstantDefaultValuePass", %"class.spvtools::opt::SetSpecConstantDefaultValuePass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  tail call void %57(i8* %61) #16
  br label %62

62:                                               ; preds = %53, %59
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt31SetSpecConstantDefaultValuePassD0Ev(%"class.spvtools::opt::SetSpecConstantDefaultValuePass"*) unnamed_addr #4 comdat align 2 {
  tail call void @_ZN8spvtools3opt31SetSpecConstantDefaultValuePassD2Ev(%"class.spvtools::opt::SetSpecConstantDefaultValuePass"* %0) #16
  %2 = bitcast %"class.spvtools::opt::SetSpecConstantDefaultValuePass"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt31SetSpecConstantDefaultValuePass4nameEv(%"class.spvtools::opt::SetSpecConstantDefaultValuePass"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #17
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #17
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #17
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node"* %34) #16
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #17
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #17
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #17
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #16
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #16
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  ret void

11:                                               ; preds = %2
  ret void
}

declare zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEPKNS0_11InstructionERKNSt3__18functionIFbPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.953"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_134GetSpecIdTargetFromDecorationGroupERKS4_PNS3_8analysis13DefUseManagerEE3$_2S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #8 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 74
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::Instruction"***
  %8 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %7, align 8
  store %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"** %8, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i1 [ false, %6 ], [ true, %2 ]
  ret i1 %10
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #9

declare i32 @_ZN8spvtools5utils20ParseAndEncodeNumberEPKcRKNS0_10NumberTypeENSt3__18functionIFvjEEEPNS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(i8*, %"struct.spvtools::utils::NumberType"* dereferenceable(8), %"class.std::__1::function.959"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_120ParseDefaultValueStrEPKcPKNS7_8analysis4TypeEE3$_0S2_EEEEvPKNS0_16__policy_storageEj"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::vector.3"**
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %6 = load i32*, i32** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %6, %8
  %10 = ptrtoint i32* %8 to i64
  br i1 %9, label %15, label %11

11:                                               ; preds = %2
  store i32 %1, i32* %6, align 4
  %12 = getelementptr inbounds i32, i32* %6, i64 1
  %13 = ptrtoint i32* %12 to i64
  %14 = bitcast i32** %5 to i64*
  store i64 %13, i64* %14, align 8
  br label %71

15:                                               ; preds = %2
  %16 = ptrtoint i32* %6 to i64
  %17 = bitcast i32** %5 to i64*
  %18 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %16, %19
  %21 = ashr exact i64 %20, 2
  %22 = add nsw i64 %21, 1
  %23 = icmp ugt i64 %22, 4611686018427387903
  br i1 %23, label %24, label %26

24:                                               ; preds = %15
  %25 = bitcast %"class.std::__1::vector.3"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %25) #19
  unreachable

26:                                               ; preds = %15
  %27 = bitcast i32** %7 to i64*
  %28 = sub i64 %10, %19
  %29 = ashr exact i64 %28, 2
  %30 = icmp ult i64 %29, 2305843009213693951
  br i1 %30, label %31, label %39

31:                                               ; preds = %26
  %32 = ashr exact i64 %28, 1
  %33 = icmp ult i64 %32, %22
  %34 = select i1 %33, i64 %22, i64 %32
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %31
  %37 = icmp ugt i64 %34, 4611686018427387903
  br i1 %37, label %38, label %39

38:                                               ; preds = %36
  tail call void @abort() #19
  unreachable

39:                                               ; preds = %36, %26
  %40 = phi i64 [ %34, %36 ], [ 4611686018427387903, %26 ]
  %41 = shl i64 %40, 2
  %42 = tail call i8* @_Znwm(i64 %41) #17
  %43 = bitcast i8* %42 to i32*
  br label %44

44:                                               ; preds = %39, %31
  %45 = phi i64 [ %40, %39 ], [ 0, %31 ]
  %46 = phi i32* [ %43, %39 ], [ null, %31 ]
  %47 = getelementptr inbounds i32, i32* %46, i64 %21
  %48 = getelementptr inbounds i32, i32* %46, i64 %45
  %49 = ptrtoint i32* %48 to i64
  store i32 %1, i32* %47, align 4
  %50 = getelementptr inbounds i32, i32* %47, i64 1
  %51 = ptrtoint i32* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = load i64, i64* %17, align 8
  %55 = ptrtoint i32* %53 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 2
  %58 = sub nsw i64 0, %57
  %59 = getelementptr inbounds i32, i32* %47, i64 %58
  %60 = ptrtoint i32* %59 to i64
  %61 = icmp sgt i64 %56, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %44
  %63 = bitcast i32* %59 to i8*
  %64 = bitcast i32* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %64, i64 %56, i1 false) #16
  %65 = load i32*, i32** %52, align 8
  br label %66

66:                                               ; preds = %62, %44
  %67 = phi i32* [ %53, %44 ], [ %65, %62 ]
  store i64 %60, i64* %18, align 8
  store i64 %51, i64* %17, align 8
  store i64 %49, i64* %27, align 8
  %68 = icmp eq i32* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = bitcast i32* %67 to i8*
  tail call void @_ZdlPv(i8* %70) #17
  br label %71

71:                                               ; preds = %11, %66, %69
  ret void
}

declare void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.std::__1::function"* dereferenceable(32), %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.571"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.571"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.571", %"struct.std::__1::__hash_node_base.571"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.571"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #17
  %10 = icmp eq %"struct.std::__1::__hash_node_base.571"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.571"**, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.571"** null, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.571"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.571"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.488"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.488"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.488"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #17
  %26 = icmp eq %"struct.std::__1::__hash_node_base.488"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.488"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.488"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #17
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %35, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36 to i8*
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  %42 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %46, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::analysis::Type"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.spvtools::opt::analysis::Type"* %47 to void (%"class.spvtools::opt::analysis::Type"*)***
  %51 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %51, i64 1
  %53 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %52, align 8
  tail call void %53(%"class.spvtools::opt::analysis::Type"* nonnull %47) #16
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.553"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  tail call void @_ZdlPv(i8* %60) #17
  br label %61

61:                                               ; preds = %33, %59
  %62 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.536"* %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %61, %78
  %66 = phi %"struct.std::__1::__hash_node_base.536"* [ %68, %78 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.536"* %69 to %"class.spvtools::opt::analysis::Type"**
  %71 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %70, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %70, align 8
  %72 = icmp eq %"class.spvtools::opt::analysis::Type"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.spvtools::opt::analysis::Type"* %71 to void (%"class.spvtools::opt::analysis::Type"*)***
  %75 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %75, i64 1
  %77 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %76, align 8
  tail call void %77(%"class.spvtools::opt::analysis::Type"* nonnull %71) #16
  br label %78

78:                                               ; preds = %73, %65
  %79 = bitcast %"struct.std::__1::__hash_node_base.536"* %66 to i8*
  tail call void @_ZdlPv(i8* %79) #17
  %80 = icmp eq %"struct.std::__1::__hash_node_base.536"* %68, null
  br i1 %80, label %81, label %65

81:                                               ; preds = %78, %61
  %82 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.536"**, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  store %"struct.std::__1::__hash_node_base.536"** null, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.536"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::__hash_node_base.536"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #17
  br label %87

87:                                               ; preds = %81, %85
  %88 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.512"* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::__hash_node_base.512"* [ %94, %91 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.512", %"struct.std::__1::__hash_node_base.512"* %92, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %93, align 8
  %95 = bitcast %"struct.std::__1::__hash_node_base.512"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #17
  %96 = icmp eq %"struct.std::__1::__hash_node_base.512"* %94, null
  br i1 %96, label %97, label %91

97:                                               ; preds = %91, %87
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.512"**, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.512"** null, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.512"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.512"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #17
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.488"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base.488"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.488"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #17
  %112 = icmp eq %"struct.std::__1::__hash_node_base.488"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.488"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base.488"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #17
  br label %119

119:                                              ; preds = %113, %117
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #17
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #17
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #17
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #17
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #17
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #17
  ret void
}

declare dereferenceable(168) %"class.std::__1::basic_istream"* @_ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERj(%"class.std::__1::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #13

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

declare void @_ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(%"class.std::__1::basic_stringbuf"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #14

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_istream"*, i8**) unnamed_addr #14

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.988"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #16, !range !6
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.915"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.915"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.915"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.915"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.915"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %145, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 48) #17, !noalias !13
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !13
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !13
  store i32 %62, i32* %61, align 8, !noalias !13
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #16, !noalias !13
  %64 = getelementptr inbounds i8, i8* %57, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %7, i64* %65, align 8, !noalias !13
  %66 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.915"**
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %66, align 8, !noalias !13
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = uitofp i64 %69 to float
  %71 = uitofp i64 %9 to float
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %71
  %75 = fcmp olt float %74, %70
  %76 = or i1 %10, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %55
  %78 = shl i64 %9, 1
  %79 = icmp ult i64 %9, 3
  %80 = tail call i64 @llvm.ctpop.i64(i64 %9) #16, !range !6
  %81 = icmp ugt i64 %80, 1
  %82 = or i1 %79, %81
  %83 = zext i1 %82 to i64
  %84 = or i64 %78, %83
  %85 = fdiv float %70, %73
  %86 = tail call float @llvm.ceil.f32(float %85) #16
  %87 = fptoui float %86 to i64
  %88 = icmp ult i64 %84, %87
  %89 = select i1 %88, i64 %87, i64 %84
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %89)
  %90 = load i64, i64* %8, align 8
  %91 = tail call i64 @llvm.ctpop.i64(i64 %90) #16, !range !6
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = add i64 %90, 4294967295
  %95 = and i64 %94, %7
  br label %100

96:                                               ; preds = %77
  %97 = icmp ugt i64 %90, %7
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %7, %90
  br label %100

100:                                              ; preds = %98, %96, %93, %55
  %101 = phi i64 [ %9, %55 ], [ %90, %93 ], [ %90, %96 ], [ %90, %98 ]
  %102 = phi i64 [ %56, %55 ], [ %95, %93 ], [ %7, %96 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base.915"* %106, null
  br i1 %107, label %108, label %134

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast %"struct.std::__1::__hash_node_base.915"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8* %57 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base.915"* %109 to i8**
  store i8* %57, i8** %113, align 8
  store %"struct.std::__1::__hash_node_base.915"* %109, %"struct.std::__1::__hash_node_base.915"** %105, align 8
  %114 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %66, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.915"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %114, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base.915"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %101) #16, !range !6
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = add i64 %101, -1
  %124 = and i64 %119, %123
  br label %129

125:                                              ; preds = %116
  %126 = icmp ult i64 %119, %101
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %119, %101
  br label %129

129:                                              ; preds = %122, %125, %127
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %119, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %103, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %131, i64 %130
  %133 = bitcast %"struct.std::__1::__hash_node_base.915"** %132 to i8**
  br label %139

134:                                              ; preds = %100
  %135 = bitcast %"struct.std::__1::__hash_node_base.915"* %106 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %57 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.915"* %106 to i8**
  br label %139

139:                                              ; preds = %129, %134
  %140 = phi i8** [ %138, %134 ], [ %133, %129 ]
  store i8* %57, i8** %140, align 8
  br label %141

141:                                              ; preds = %139, %108
  %142 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.915"*
  %143 = load i64, i64* %67, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %67, align 8
  br label %145

145:                                              ; preds = %50, %141
  %146 = phi i8 [ 1, %141 ], [ 0, %50 ]
  %147 = phi %"struct.std::__1::__hash_node_base.915"* [ %142, %141 ], [ %33, %50 ]
  %148 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } undef, %"struct.std::__1::__hash_node_base.915"* %147, 0
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } %148, i8 %146, 1
  ret { %"struct.std::__1::__hash_node_base.915"*, i8 } %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !6
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #16
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !6
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !6
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #16
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #19
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.911"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.915"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.915"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !16

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.915"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.915"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #16, !range !6
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.915"* %36, %"struct.std::__1::__hash_node_base.915"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.915"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.915"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.915"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.915"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.915"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.915"* %82, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.915"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.915"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.915"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.915"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.915"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.915"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.915"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.915"* %80, %"struct.std::__1::__hash_node_base.915"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.915"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.915"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.915"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.915"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #17
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #15

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #15

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { nounwind readonly }
attributes #19 = { noreturn nounwind }
attributes #20 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN8spvtools3opt9IRContext11annotationsEv: argument 0"}
!4 = distinct !{!4, !"_ZN8spvtools3opt9IRContext11annotationsEv"}
!5 = !{i8 0, i8 2}
!6 = !{i64 0, i64 65}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN8spvtools3opt12_GLOBAL__N_120ParseDefaultValueStrEPKcPKNS0_8analysis4TypeE: argument 0"}
!9 = distinct !{!9, !"_ZN8spvtools3opt12_GLOBAL__N_120ParseDefaultValueStrEPKcPKNS0_8analysis4TypeE"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN8spvtools3opt12_GLOBAL__N_127ParseDefaultValueBitPatternERKNSt3__16vectorIjNS2_9allocatorIjEEEEPKNS0_8analysis4TypeE: argument 0"}
!12 = distinct !{!12, !"_ZN8spvtools3opt12_GLOBAL__N_127ParseDefaultValueBitPatternERKNSt3__16vectorIjNS2_9allocatorIjEEEEPKNS0_8analysis4TypeE"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISV_EEEEEEmOT_DpOT0_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISV_EEEEEEmOT_DpOT0_"}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
