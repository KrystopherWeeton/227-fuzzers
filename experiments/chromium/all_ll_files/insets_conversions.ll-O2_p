; ModuleID = '../../ui/gfx/geometry/insets_conversions.cc'
source_filename = "../../ui/gfx/geometry/insets_conversions.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::InsetsF" = type { float, float, float, float }

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN3gfx15ToFlooredInsetsERKNS_7InsetsFE(%"class.gfx::InsetsF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %0, i64 0, i32 0
  %3 = load float, float* %2, align 4
  %4 = tail call float @llvm.floor.f32(float %3) #2
  %5 = fcmp ult float %4, 0xC1E0000000000000
  %6 = fcmp ugt float %4, 0x41DFFFFFE0000000
  %7 = fcmp ogt float %4, 0xC1E0000000000000
  %8 = select i1 %7, float %4, float 0xC1E0000000000000
  %9 = fptosi float %8 to i32
  %10 = select i1 %5, i32 0, i32 2147483647
  %11 = select i1 %6, i32 %10, i32 %9
  %12 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %0, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = tail call float @llvm.floor.f32(float %13) #2
  %15 = fcmp ult float %14, 0xC1E0000000000000
  %16 = fcmp ugt float %14, 0x41DFFFFFE0000000
  %17 = fcmp ogt float %14, 0xC1E0000000000000
  %18 = select i1 %17, float %14, float 0xC1E0000000000000
  %19 = fptosi float %18 to i32
  %20 = select i1 %15, i32 0, i32 2147483647
  %21 = select i1 %16, i32 %20, i32 %19
  %22 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %0, i64 0, i32 2
  %23 = load float, float* %22, align 4
  %24 = tail call float @llvm.floor.f32(float %23) #2
  %25 = fcmp ult float %24, 0xC1E0000000000000
  %26 = fcmp ugt float %24, 0x41DFFFFFE0000000
  %27 = fcmp ogt float %24, 0xC1E0000000000000
  %28 = select i1 %27, float %24, float 0xC1E0000000000000
  %29 = fptosi float %28 to i32
  %30 = select i1 %25, i32 0, i32 2147483647
  %31 = select i1 %26, i32 %30, i32 %29
  %32 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %0, i64 0, i32 3
  %33 = load float, float* %32, align 4
  %34 = tail call float @llvm.floor.f32(float %33) #2
  %35 = fcmp ult float %34, 0xC1E0000000000000
  %36 = fcmp ugt float %34, 0x41DFFFFFE0000000
  %37 = fcmp ogt float %34, 0xC1E0000000000000
  %38 = select i1 %37, float %34, float 0xC1E0000000000000
  %39 = fptosi float %38 to i32
  %40 = select i1 %35, i32 0, i32 2147483647
  %41 = select i1 %36, i32 %40, i32 %39
  %42 = icmp sgt i32 %11, 0
  %43 = icmp sgt i32 %31, 0
  %44 = and i1 %42, %43
  %45 = sub nuw nsw i32 2147483647, %11
  %46 = icmp ult i32 %45, %31
  %47 = and i1 %46, %44
  br i1 %47, label %55, label %48

48:                                               ; preds = %1
  %49 = and i32 %31, %11
  %50 = icmp slt i32 %49, 0
  %51 = sub nsw i32 -2147483648, %11
  %52 = icmp sgt i32 %51, %31
  %53 = and i1 %52, %50
  %54 = select i1 %53, i32 %51, i32 %31
  br label %55

55:                                               ; preds = %48, %1
  %56 = phi i32 [ %54, %48 ], [ %45, %1 ]
  %57 = icmp sgt i32 %21, 0
  %58 = icmp sgt i32 %41, 0
  %59 = and i1 %57, %58
  %60 = sub nuw nsw i32 2147483647, %21
  %61 = icmp ult i32 %60, %41
  %62 = and i1 %61, %59
  br i1 %62, label %70, label %63

63:                                               ; preds = %55
  %64 = and i32 %41, %21
  %65 = icmp slt i32 %64, 0
  %66 = sub nsw i32 -2147483648, %21
  %67 = icmp sgt i32 %66, %41
  %68 = and i1 %67, %65
  %69 = select i1 %68, i32 %66, i32 %41
  br label %70

70:                                               ; preds = %55, %63
  %71 = phi i32 [ %69, %63 ], [ %60, %55 ]
  %72 = zext i32 %21 to i64
  %73 = shl nuw i64 %72, 32
  %74 = zext i32 %11 to i64
  %75 = or i64 %73, %74
  %76 = insertvalue { i64, i64 } undef, i64 %75, 0
  %77 = zext i32 %71 to i64
  %78 = shl nuw i64 %77, 32
  %79 = zext i32 %56 to i64
  %80 = or i64 %78, %79
  %81 = insertvalue { i64, i64 } %76, i64 %80, 1
  ret { i64, i64 } %81
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN3gfx14ToCeiledInsetsERKNS_7InsetsFE(%"class.gfx::InsetsF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %0, i64 0, i32 0
  %3 = load float, float* %2, align 4
  %4 = tail call float @llvm.ceil.f32(float %3) #2
  %5 = fcmp ult float %4, 0xC1E0000000000000
  %6 = fcmp ugt float %4, 0x41DFFFFFE0000000
  %7 = fcmp ogt float %4, 0xC1E0000000000000
  %8 = select i1 %7, float %4, float 0xC1E0000000000000
  %9 = fptosi float %8 to i32
  %10 = select i1 %5, i32 0, i32 2147483647
  %11 = select i1 %6, i32 %10, i32 %9
  %12 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %0, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = tail call float @llvm.ceil.f32(float %13) #2
  %15 = fcmp ult float %14, 0xC1E0000000000000
  %16 = fcmp ugt float %14, 0x41DFFFFFE0000000
  %17 = fcmp ogt float %14, 0xC1E0000000000000
  %18 = select i1 %17, float %14, float 0xC1E0000000000000
  %19 = fptosi float %18 to i32
  %20 = select i1 %15, i32 0, i32 2147483647
  %21 = select i1 %16, i32 %20, i32 %19
  %22 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %0, i64 0, i32 2
  %23 = load float, float* %22, align 4
  %24 = tail call float @llvm.ceil.f32(float %23) #2
  %25 = fcmp ult float %24, 0xC1E0000000000000
  %26 = fcmp ugt float %24, 0x41DFFFFFE0000000
  %27 = fcmp ogt float %24, 0xC1E0000000000000
  %28 = select i1 %27, float %24, float 0xC1E0000000000000
  %29 = fptosi float %28 to i32
  %30 = select i1 %25, i32 0, i32 2147483647
  %31 = select i1 %26, i32 %30, i32 %29
  %32 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %0, i64 0, i32 3
  %33 = load float, float* %32, align 4
  %34 = tail call float @llvm.ceil.f32(float %33) #2
  %35 = fcmp ult float %34, 0xC1E0000000000000
  %36 = fcmp ugt float %34, 0x41DFFFFFE0000000
  %37 = fcmp ogt float %34, 0xC1E0000000000000
  %38 = select i1 %37, float %34, float 0xC1E0000000000000
  %39 = fptosi float %38 to i32
  %40 = select i1 %35, i32 0, i32 2147483647
  %41 = select i1 %36, i32 %40, i32 %39
  %42 = icmp sgt i32 %11, 0
  %43 = icmp sgt i32 %31, 0
  %44 = and i1 %42, %43
  %45 = sub nuw nsw i32 2147483647, %11
  %46 = icmp ult i32 %45, %31
  %47 = and i1 %46, %44
  br i1 %47, label %55, label %48

48:                                               ; preds = %1
  %49 = and i32 %31, %11
  %50 = icmp slt i32 %49, 0
  %51 = sub nsw i32 -2147483648, %11
  %52 = icmp sgt i32 %51, %31
  %53 = and i1 %52, %50
  %54 = select i1 %53, i32 %51, i32 %31
  br label %55

55:                                               ; preds = %48, %1
  %56 = phi i32 [ %54, %48 ], [ %45, %1 ]
  %57 = icmp sgt i32 %21, 0
  %58 = icmp sgt i32 %41, 0
  %59 = and i1 %57, %58
  %60 = sub nuw nsw i32 2147483647, %21
  %61 = icmp ult i32 %60, %41
  %62 = and i1 %61, %59
  br i1 %62, label %70, label %63

63:                                               ; preds = %55
  %64 = and i32 %41, %21
  %65 = icmp slt i32 %64, 0
  %66 = sub nsw i32 -2147483648, %21
  %67 = icmp sgt i32 %66, %41
  %68 = and i1 %67, %65
  %69 = select i1 %68, i32 %66, i32 %41
  br label %70

70:                                               ; preds = %55, %63
  %71 = phi i32 [ %69, %63 ], [ %60, %55 ]
  %72 = zext i32 %21 to i64
  %73 = shl nuw i64 %72, 32
  %74 = zext i32 %11 to i64
  %75 = or i64 %73, %74
  %76 = insertvalue { i64, i64 } undef, i64 %75, 0
  %77 = zext i32 %71 to i64
  %78 = shl nuw i64 %77, 32
  %79 = zext i32 %56 to i64
  %80 = or i64 %78, %79
  %81 = insertvalue { i64, i64 } %76, i64 %80, 1
  ret { i64, i64 } %81
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN3gfx15ToRoundedInsetsERKNS_7InsetsFE(%"class.gfx::InsetsF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %0, i64 0, i32 0
  %3 = load float, float* %2, align 4
  %4 = fcmp ult float %3, 0.000000e+00
  %5 = fadd float %3, 5.000000e-01
  %6 = tail call float @llvm.floor.f32(float %5) #2
  %7 = fadd float %3, -5.000000e-01
  %8 = tail call float @llvm.ceil.f32(float %7) #2
  %9 = select i1 %4, float %8, float %6
  %10 = fcmp ult float %9, 0xC1E0000000000000
  %11 = fcmp ugt float %9, 0x41DFFFFFE0000000
  %12 = fcmp ogt float %9, 0xC1E0000000000000
  %13 = select i1 %12, float %9, float 0xC1E0000000000000
  %14 = fptosi float %13 to i32
  %15 = select i1 %10, i32 0, i32 2147483647
  %16 = select i1 %11, i32 %15, i32 %14
  %17 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %0, i64 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = fcmp ult float %18, 0.000000e+00
  %20 = fadd float %18, 5.000000e-01
  %21 = tail call float @llvm.floor.f32(float %20) #2
  %22 = fadd float %18, -5.000000e-01
  %23 = tail call float @llvm.ceil.f32(float %22) #2
  %24 = select i1 %19, float %23, float %21
  %25 = fcmp ult float %24, 0xC1E0000000000000
  %26 = fcmp ugt float %24, 0x41DFFFFFE0000000
  %27 = fcmp ogt float %24, 0xC1E0000000000000
  %28 = select i1 %27, float %24, float 0xC1E0000000000000
  %29 = fptosi float %28 to i32
  %30 = select i1 %25, i32 0, i32 2147483647
  %31 = select i1 %26, i32 %30, i32 %29
  %32 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %0, i64 0, i32 2
  %33 = load float, float* %32, align 4
  %34 = fcmp ult float %33, 0.000000e+00
  %35 = fadd float %33, 5.000000e-01
  %36 = tail call float @llvm.floor.f32(float %35) #2
  %37 = fadd float %33, -5.000000e-01
  %38 = tail call float @llvm.ceil.f32(float %37) #2
  %39 = select i1 %34, float %38, float %36
  %40 = fcmp ult float %39, 0xC1E0000000000000
  %41 = fcmp ugt float %39, 0x41DFFFFFE0000000
  %42 = fcmp ogt float %39, 0xC1E0000000000000
  %43 = select i1 %42, float %39, float 0xC1E0000000000000
  %44 = fptosi float %43 to i32
  %45 = select i1 %40, i32 0, i32 2147483647
  %46 = select i1 %41, i32 %45, i32 %44
  %47 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %0, i64 0, i32 3
  %48 = load float, float* %47, align 4
  %49 = fcmp ult float %48, 0.000000e+00
  %50 = fadd float %48, 5.000000e-01
  %51 = tail call float @llvm.floor.f32(float %50) #2
  %52 = fadd float %48, -5.000000e-01
  %53 = tail call float @llvm.ceil.f32(float %52) #2
  %54 = select i1 %49, float %53, float %51
  %55 = fcmp ult float %54, 0xC1E0000000000000
  %56 = fcmp ugt float %54, 0x41DFFFFFE0000000
  %57 = fcmp ogt float %54, 0xC1E0000000000000
  %58 = select i1 %57, float %54, float 0xC1E0000000000000
  %59 = fptosi float %58 to i32
  %60 = select i1 %55, i32 0, i32 2147483647
  %61 = select i1 %56, i32 %60, i32 %59
  %62 = icmp sgt i32 %16, 0
  %63 = icmp sgt i32 %46, 0
  %64 = and i1 %62, %63
  %65 = sub nuw nsw i32 2147483647, %16
  %66 = icmp ult i32 %65, %46
  %67 = and i1 %66, %64
  br i1 %67, label %75, label %68

68:                                               ; preds = %1
  %69 = and i32 %46, %16
  %70 = icmp slt i32 %69, 0
  %71 = sub nsw i32 -2147483648, %16
  %72 = icmp sgt i32 %71, %46
  %73 = and i1 %72, %70
  %74 = select i1 %73, i32 %71, i32 %46
  br label %75

75:                                               ; preds = %68, %1
  %76 = phi i32 [ %74, %68 ], [ %65, %1 ]
  %77 = icmp sgt i32 %31, 0
  %78 = icmp sgt i32 %61, 0
  %79 = and i1 %77, %78
  %80 = sub nuw nsw i32 2147483647, %31
  %81 = icmp ult i32 %80, %61
  %82 = and i1 %81, %79
  br i1 %82, label %90, label %83

83:                                               ; preds = %75
  %84 = and i32 %61, %31
  %85 = icmp slt i32 %84, 0
  %86 = sub nsw i32 -2147483648, %31
  %87 = icmp sgt i32 %86, %61
  %88 = and i1 %87, %85
  %89 = select i1 %88, i32 %86, i32 %61
  br label %90

90:                                               ; preds = %75, %83
  %91 = phi i32 [ %89, %83 ], [ %80, %75 ]
  %92 = zext i32 %31 to i64
  %93 = shl nuw i64 %92, 32
  %94 = zext i32 %16 to i64
  %95 = or i64 %93, %94
  %96 = insertvalue { i64, i64 } undef, i64 %95, 0
  %97 = zext i32 %91 to i64
  %98 = shl nuw i64 %97, 32
  %99 = zext i32 %76 to i64
  %100 = or i64 %98, %99
  %101 = insertvalue { i64, i64 } %96, i64 %100, 1
  ret { i64, i64 } %101
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #1

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
