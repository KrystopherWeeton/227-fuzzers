; ModuleID = '../../third_party/blink/renderer/platform/bindings/microtask.cc'
source_filename = "../../third_party/blink/renderer/platform/bindings/microtask.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::Isolate" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E = external local_unnamed_addr global i32, align 4
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9Microtask17PerformCheckpointEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #6
  %4 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %5 = ptrtoint i64* %2 to i64
  %6 = sub i64 %4, %5
  %7 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %8 = icmp ult i64 %6, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #6
  br i1 %8, label %11, label %9, !prof !2

9:                                                ; preds = %1
  %10 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #6
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i32* [ %10, %9 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %1 ]
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  call void @_ZN2v815MicrotasksScope17PerformCheckpointEPNS_7IsolateE(%"class.v8::Isolate"* %0) #6
  br label %16

16:                                               ; preds = %11, %15
  ret void
}

declare void @_ZN2v815MicrotasksScope17PerformCheckpointEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9Microtask16EnqueueMicrotaskEN4base12OnceCallbackIFvvEEE(%"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #6
  %3 = tail call i8* @_Znwm(i64 8) #7
  %4 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.base::OnceCallback"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast i8* %3 to i64*
  store i64 %6, i64* %7, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %4, align 8
  tail call void @_ZN2v87Isolate16EnqueueMicrotaskEPFvPvES1_(%"class.v8::Isolate"* %2, void (i8*)* nonnull @_ZN5blinkL25MicrotaskFunctionCallbackEPv, i8* nonnull %3) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare void @_ZN2v87Isolate16EnqueueMicrotaskEPFvPvES1_(%"class.v8::Isolate"*, void (i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL25MicrotaskFunctionCallbackEPv(i8*) #0 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #6
  %4 = bitcast i8* %0 to %"class.base::internal::BindStateBase"**
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %6, i64* %7, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %4, align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %9 = inttoptr i64 %6 to %"class.base::internal::BindStateBase"*
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %11 = bitcast void ()** %10 to void (%"class.base::internal::BindStateBase"*)**
  %12 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %11, align 8
  tail call void %12(%"class.base::internal::BindStateBase"* %9) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #6
  %13 = icmp eq i8* %0, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  %15 = bitcast i8* %0 to %"class.base::internal::CallbackBase"*
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #6
  call void @_ZdlPv(i8* nonnull %0) #7
  br label %16

16:                                               ; preds = %1, %14
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
