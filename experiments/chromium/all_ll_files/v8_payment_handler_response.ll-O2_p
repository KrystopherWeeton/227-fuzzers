; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_payment_handler_response.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_payment_handler_response.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.173", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.116", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::Worklist.47"* }
%"class.blink::Worklist.47" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::Worklist.54"* }
%"class.blink::Worklist.54" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::Worklist.61"* }
%"class.blink::Worklist.61" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.96", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.110", [4 x i8] }>
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98", %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { i64 }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { float }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.119", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.140" }
%"class.WTF::VectorBuffer.140" = type { %"class.WTF::VectorBufferBase.141" }
%"class.WTF::VectorBufferBase.141" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.154" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.47"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.54"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.61"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.189" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.172 }
%class.scoped_refptr.172 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.173" = type { %"struct.std::__1::__atomic_base.174" }
%"struct.std::__1::__atomic_base.174" = type { %"struct.std::__1::__cxx_atomic_impl.175" }
%"struct.std::__1::__cxx_atomic_impl.175" = type { %"struct.std::__1::__cxx_atomic_base_impl.176" }
%"struct.std::__1::__cxx_atomic_base_impl.176" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::PaymentHandlerResponse" = type { %"class.blink::IDLDictionaryBase", %"class.blink::ScriptValue", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.blink::Member", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference", %class.scoped_refptr }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.6" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.6" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.6" = type { %"class.v8::TracedReference.7" }
%"class.v8::TracedReference.7" = type { %"class.v8::BasicTracedReference.8" }
%"class.v8::BasicTracedReference.8" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.183" }
%"class.blink::MemberBase.183" = type { %"class.blink::AddressInit"* }
%"class.blink::AddressInit" = type { %"class.blink::IDLDictionaryBase", i8, %"class.WTF::Vector.184", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::Vector.184" = type { %"class.WTF::VectorBuffer.185" }
%"class.WTF::VectorBuffer.185" = type { %"class.WTF::VectorBufferBase.186" }
%"class.WTF::VectorBufferBase.186" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr.177 }
%class.scoped_refptr.177 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.178" }
%"struct.std::__1::atomic.178" = type { %"struct.std::__1::__atomic_base.179" }
%"struct.std::__1::__atomic_base.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__cxx_atomic_impl.181" }
%"struct.std::__1::__cxx_atomic_impl.181" = type { %"struct.std::__1::__cxx_atomic_base_impl.182" }
%"struct.std::__1::__cxx_atomic_base_impl.182" = type { i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.197" }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { i8* }
%"class.blink::V8StringResource.201" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.222", %"class.WTF::HashMap.222", %"class.WTF::HashMap.227", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.279", %"class.blink::Persistent.285", i8, i8, i8, %"class.WTF::Vector.287", %"class.std::__1::unique_ptr.292", %"class.blink::Persistent.298", %"class.blink::Persistent.302", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.204", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.216", i32, i32 }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.222" = type { %"class.WTF::HashTable.223" }
%"class.WTF::HashTable.223" = type <{ %"struct.WTF::KeyValuePair.226"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.226" = type opaque
%"class.WTF::HashMap.227" = type { %"class.WTF::HashTable.228" }
%"class.WTF::HashTable.228" = type <{ %"struct.WTF::KeyValuePair.231"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.231" = type opaque
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.240", %class.scoped_refptr.177 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.235", i8* }
%"class.WTF::HashMap.235" = type { %"class.WTF::HashTable.236" }
%"class.WTF::HashTable.236" = type <{ %"struct.WTF::KeyValuePair.239"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.239" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.240" = type { %"class.v8::PersistentValueMapBase.241" }
%"class.v8::PersistentValueMapBase.241" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.242", i8* }
%"class.WTF::HashMap.242" = type { %"class.WTF::HashTable.243" }
%"class.WTF::HashTable.243" = type <{ %"struct.WTF::KeyValuePair.246"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.246" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.247", %"class.WTF::String", %"class.std::__1::unique_ptr.249" }
%"class.WTF::RefCounted.247" = type { %"class.base::RefCounted.248" }
%"class.base::RefCounted.248" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.252", %"class.std::__1::unique_ptr.263", %"class.WTF::Vector.269", i8, i32 }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.WTF::Vector.255"* }
%"class.WTF::Vector.255" = type { %"class.WTF::VectorBuffer.256" }
%"class.WTF::VectorBuffer.256" = type { %"class.WTF::VectorBufferBase.257" }
%"class.WTF::VectorBufferBase.257" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.269" = type { %"class.WTF::VectorBuffer.270" }
%"class.WTF::VectorBuffer.270" = type { %"class.WTF::VectorBufferBase.257", [32 x i8] }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent.285" = type { %"class.blink::PersistentBase.286" }
%"class.blink::PersistentBase.286" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.318, %"class.blink::Member.319", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.318 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.319" = type { %"class.blink::MemberBase.320" }
%"class.blink::MemberBase.320" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.285" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::Vector.287" = type { %"class.WTF::VectorBuffer.288" }
%"class.WTF::VectorBuffer.288" = type { %"class.WTF::VectorBufferBase.289" }
%"class.WTF::VectorBufferBase.289" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.298" = type { %"class.blink::PersistentBase.299" }
%"class.blink::PersistentBase.299" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.302" = type { %"class.blink::PersistentBase.303" }
%"class.blink::PersistentBase.303" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.308" }
%"class.WTF::Vector.308" = type { %"class.WTF::VectorBuffer.309" }
%"class.WTF::VectorBuffer.309" = type { %"class.WTF::VectorBufferBase.310" }
%"class.WTF::VectorBufferBase.310" = type { %"struct.std::__1::pair.311"*, i32, i32 }
%"struct.std::__1::pair.311" = type { %"class.blink::UntracedMember", %"class.blink::Member.313" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.313" = type { %"class.blink::MemberBase.314" }
%"class.blink::MemberBase.314" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.321" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::Int32" = type { i8 }

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE3EE7PrepareERNS_14ExceptionStateE = comdat any

$_ZNK5blink22PaymentHandlerResponse10hasDetailsEv = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE3EE11PrepareFastEv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@_ZZN5blinkL35eternalV8PaymentHandlerResponseKeysEPN2v87IsolateEE5kKeys = internal constant [7 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [8 x i8] c"details\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"methodName\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"payerEmail\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"payerName\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"payerPhone\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"shippingAddress\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"shippingOption\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 7, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @_ZZN5blinkL35eternalV8PaymentHandlerResponseKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@.str.8 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.9 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase56is_payment_handler_handles_shipping_and_contact_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.13 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.14 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24V8PaymentHandlerResponse6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_22PaymentHandlerResponseERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::PaymentHandlerResponse"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.v8::TryCatch", align 8
  %8 = alloca %"class.blink::ScriptValue", align 8
  %9 = alloca %"class.blink::ScriptValue", align 8
  %10 = alloca %"class.blink::V8StringResource", align 8
  %11 = alloca %"class.blink::V8StringResource.201", align 8
  %12 = alloca %"class.blink::V8StringResource.201", align 8
  %13 = alloca %"class.blink::V8StringResource.201", align 8
  %14 = alloca %"class.blink::V8StringResource.201", align 8
  %15 = icmp eq %"class.v8::Value"* %1, null
  br i1 %15, label %1014, label %16

16:                                               ; preds = %4
  %17 = bitcast %"class.v8::Value"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, 3
  %20 = icmp eq i64 %19, 1
  br i1 %20, label %21, label %37

21:                                               ; preds = %16
  %22 = add i64 %18, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = and i64 %18, -4294967296
  %26 = zext i32 %24 to i64
  %27 = or i64 %25, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load i16, i16* %29, align 2
  %31 = icmp eq i16 %30, 67
  br i1 %31, label %32, label %37

32:                                               ; preds = %21
  %33 = add i64 %18, 23
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = ashr i32 %35, 1
  switch i32 %36, label %37 [
    i32 5, label %1014
    i32 3, label %1014
  ]

37:                                               ; preds = %32, %21, %16
  %38 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #7
  br i1 %38, label %40, label %39

39:                                               ; preds = %37
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0)) #7
  br label %1014

40:                                               ; preds = %37
  %41 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %42 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %43 = add i64 %42, 8
  %44 = inttoptr i64 %43 to %"class.blink::V8PerIsolateData"**
  %45 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %44, align 8
  %46 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %45, i8* bitcast ([7 x i8*]* @_ZZN5blinkL35eternalV8PaymentHandlerResponseKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.321"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.321"*)) #7
  %47 = extractvalue { i64, %"class.v8::Eternal"* } %46, 1
  %48 = bitcast %"class.v8::TryCatch"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %48) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %7, %"class.v8::Isolate"* %0) #7
  %49 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #7
  %50 = bitcast %"class.v8::Eternal"* %47 to %"class.v8::Value"**
  %51 = load %"class.v8::Value"*, %"class.v8::Value"** %50, align 8
  %52 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %51) #7
  %53 = icmp eq %"class.v8::Value"* %52, null
  br i1 %53, label %54, label %60

54:                                               ; preds = %40
  %55 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %56 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %57 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %57, i64 5
  %59 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %58, align 8
  call void %59(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %55) #7
  br label %1013

60:                                               ; preds = %40
  %61 = bitcast %"class.v8::Value"* %52 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = and i64 %62, 3
  %64 = icmp eq i64 %63, 1
  br i1 %64, label %65, label %82

65:                                               ; preds = %60
  %66 = add i64 %62, -1
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = and i64 %62, -4294967296
  %70 = zext i32 %68 to i64
  %71 = or i64 %69, %70
  %72 = add i64 %71, 7
  %73 = inttoptr i64 %72 to i16*
  %74 = load i16, i16* %73, align 2
  %75 = icmp eq i16 %74, 67
  br i1 %75, label %76, label %82

76:                                               ; preds = %65
  %77 = add i64 %62, 23
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = and i32 %79, -2
  %81 = icmp eq i32 %80, 10
  br i1 %81, label %167, label %82

82:                                               ; preds = %65, %60, %76
  %83 = bitcast %"class.blink::ScriptValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #7
  %84 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1, i32 1, i32 0
  %86 = bitcast %"class.blink::ScriptValue"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false)
  %87 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %52) #7, !noalias !2
  br i1 %87, label %88, label %91

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 0
  store %"class.v8::Isolate"* %0, %"class.v8::Isolate"** %89, align 8, !alias.scope !2
  %90 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %90, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %52) #7
  br label %115

91:                                               ; preds = %82
  %92 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #7, !noalias !2
  %93 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0)) #7
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %94, align 8, !noalias !2
  %95 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %96 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %95, align 8, !noalias !2
  %97 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %96, i64 3
  %98 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %97, align 8
  call void %98(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %6) #7
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8, !noalias !2
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %91
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #7
  br label %114

114:                                              ; preds = %113, %110, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #7, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 24, i1 false) #7, !alias.scope !2
  br label %115

115:                                              ; preds = %88, %114
  %116 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %117 = load i32, i32* %116, align 8
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %156

119:                                              ; preds = %115
  %120 = bitcast %"class.blink::ScriptValue"* %8 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.blink::ScriptValue"* %9 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %9, i64 0, i32 1
  %124 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %123, i64 0, i32 0
  %125 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %125, align 8
  %126 = load i64*, i64** %84, align 8
  %127 = icmp eq i64* %126, null
  br i1 %127, label %129, label %128

128:                                              ; preds = %119
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %84, i64** %125) #7
  br label %129

129:                                              ; preds = %128, %119
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %124) #7
  %130 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %85, align 8
  %131 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %9, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %130, %"class.blink::DOMWrapperWorld"** %131, align 8
  %132 = icmp eq %"class.blink::DOMWrapperWorld"* %130, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %130, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %134) #7
  br label %135

135:                                              ; preds = %129, %133
  call void @_ZN5blink22PaymentHandlerResponse10setDetailsENS_11ScriptValueE(%"class.blink::PaymentHandlerResponse"* %2, %"class.blink::ScriptValue"* nonnull %9) #7
  %136 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %131, align 8
  %137 = icmp eq %"class.blink::DOMWrapperWorld"* %136, null
  br i1 %137, label %145, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %136, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %139) #7
  %140 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %136, i64 0, i32 0, i32 0, i32 0, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %145

143:                                              ; preds = %138
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %136) #7
  %144 = bitcast %"class.blink::DOMWrapperWorld"* %136 to i8*
  call void @free(i8* %144) #7
  br label %145

145:                                              ; preds = %135, %138, %143
  %146 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %85, align 8
  %147 = icmp eq %"class.blink::DOMWrapperWorld"* %146, null
  br i1 %147, label %155, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %146, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %149) #7
  %150 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %148
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %146) #7
  %154 = bitcast %"class.blink::DOMWrapperWorld"* %146 to i8*
  call void @free(i8* %154) #7
  br label %155

155:                                              ; preds = %145, %148, %153
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #7
  br label %167

156:                                              ; preds = %115
  %157 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %85, align 8
  %158 = icmp eq %"class.blink::DOMWrapperWorld"* %157, null
  br i1 %158, label %166, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %157, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %160) #7
  %161 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %157, i64 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %159
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %157) #7
  %165 = bitcast %"class.blink::DOMWrapperWorld"* %157 to i8*
  call void @free(i8* %165) #7
  br label %166

166:                                              ; preds = %156, %159, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #7
  br label %1013

167:                                              ; preds = %155, %76
  %168 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 1, i32 0
  %169 = bitcast %"class.v8::Name"** %168 to %"class.v8::Value"**
  %170 = load %"class.v8::Value"*, %"class.v8::Value"** %169, align 8
  %171 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %170) #7
  %172 = icmp eq %"class.v8::Value"* %171, null
  br i1 %172, label %173, label %179

173:                                              ; preds = %167
  %174 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %175 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %176 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %176, i64 5
  %178 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %177, align 8
  call void %178(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %174) #7
  br label %1013

179:                                              ; preds = %167
  %180 = bitcast %"class.v8::Value"* %171 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = and i64 %181, 3
  %183 = icmp eq i64 %182, 1
  br i1 %183, label %184, label %201

184:                                              ; preds = %179
  %185 = add i64 %181, -1
  %186 = inttoptr i64 %185 to i32*
  %187 = load i32, i32* %186, align 4
  %188 = and i64 %181, -4294967296
  %189 = zext i32 %187 to i64
  %190 = or i64 %188, %189
  %191 = add i64 %190, 7
  %192 = inttoptr i64 %191 to i16*
  %193 = load i16, i16* %192, align 2
  %194 = icmp eq i16 %193, 67
  br i1 %194, label %195, label %201

195:                                              ; preds = %184
  %196 = add i64 %181, 23
  %197 = inttoptr i64 %196 to i32*
  %198 = load i32, i32* %197, align 4
  %199 = and i32 %198, -2
  %200 = icmp eq i32 %199, 10
  br i1 %200, label %356, label %201

201:                                              ; preds = %184, %179, %195
  %202 = bitcast %"class.blink::V8StringResource"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %202) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %202, i8 -86, i64 152, i1 false)
  %203 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %171, %"class.v8::Value"** %203, align 8
  %204 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 1
  store i32 0, i32* %204, align 8
  %205 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %205, align 8
  %206 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1
  %207 = bitcast %"class.std::__1::unique_ptr.197"* %206 to i64*
  store i64 0, i64* %207, align 8
  %208 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %10) #7
  br i1 %208, label %219, label %209

209:                                              ; preds = %201
  %210 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %211 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %211) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %211, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %210) #7
  %212 = load %"class.v8::Value"*, %"class.v8::Value"** %203, align 8
  %213 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %210) #7
  %214 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %212, %"class.v8::Context"* %213) #7
  %215 = ptrtoint %"class.v8::String"* %214 to i64
  %216 = bitcast %"class.blink::V8StringResource"* %10 to i64*
  store i64 %215, i64* %216, align 8
  %217 = icmp eq %"class.v8::String"* %214, null
  br i1 %217, label %329, label %218

218:                                              ; preds = %209
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %211) #7
  br label %219

219:                                              ; preds = %201, %218
  %220 = load %"class.v8::Value"*, %"class.v8::Value"** %203, align 8
  %221 = icmp eq %"class.v8::Value"* %220, null
  br i1 %221, label %222, label %246, !prof !5

222:                                              ; preds = %219
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %224, label %225, label %227

225:                                              ; preds = %222
  %226 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %2, i64 0, i32 2
  br label %271

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load atomic i32, i32* %228 monotonic, align 4
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %244

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  %235 = zext i32 %234 to i33
  %236 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %235, i33 1) #7
  %237 = extractvalue { i33, i1 } %236, 1
  %238 = extractvalue { i33, i1 } %236, 0
  %239 = icmp slt i33 %238, 0
  %240 = or i1 %237, %239
  br i1 %240, label %241, label %242, !prof !5

241:                                              ; preds = %232
  call void @llvm.trap() #7
  unreachable

242:                                              ; preds = %232
  %243 = trunc i33 %238 to i32
  store i32 %243, i32* %233, align 4
  br label %244

244:                                              ; preds = %227, %242
  %245 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %2, i64 0, i32 2
  br label %252

246:                                              ; preds = %219
  %247 = bitcast %"class.v8::Value"* %220 to %"class.v8::String"*
  %248 = load i32, i32* %204, align 8
  %249 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %247, i32 %248) #7
  %250 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %2, i64 0, i32 2
  %251 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %251, label %271, label %252

252:                                              ; preds = %244, %246
  %253 = phi %"class.WTF::String"* [ %245, %244 ], [ %250, %246 ]
  %254 = phi %"class.WTF::StringImpl"* [ %223, %244 ], [ %249, %246 ]
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load atomic i32, i32* %255 monotonic, align 4
  %257 = and i32 %256, 2
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %271

259:                                              ; preds = %252
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 0
  %261 = load i32, i32* %260, align 4
  %262 = zext i32 %261 to i33
  %263 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %262, i33 1) #7
  %264 = extractvalue { i33, i1 } %263, 1
  %265 = extractvalue { i33, i1 } %263, 0
  %266 = icmp slt i33 %265, 0
  %267 = or i1 %264, %266
  br i1 %267, label %268, label %269, !prof !5

268:                                              ; preds = %259
  call void @llvm.trap() #7
  unreachable

269:                                              ; preds = %259
  %270 = trunc i33 %265 to i32
  store i32 %270, i32* %260, align 4
  br label %271

271:                                              ; preds = %225, %269, %252, %246
  %272 = phi i1 [ false, %269 ], [ false, %252 ], [ true, %246 ], [ true, %225 ]
  %273 = phi %"class.WTF::String"* [ %253, %269 ], [ %253, %252 ], [ %250, %246 ], [ %226, %225 ]
  %274 = phi %"class.WTF::StringImpl"* [ %254, %269 ], [ %254, %252 ], [ null, %246 ], [ null, %225 ]
  %275 = ptrtoint %"class.WTF::StringImpl"* %274 to i64
  %276 = bitcast %"class.WTF::String"* %273 to i64*
  %277 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %273, i64 0, i32 0, i32 0
  %278 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %277, align 8
  store i64 %275, i64* %276, align 8
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %271
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #7
  br label %293

293:                                              ; preds = %271, %289, %292
  br i1 %272, label %307, label %294

294:                                              ; preds = %293
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = and i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 0
  %300 = load i32, i32* %299, align 4
  br i1 %298, label %301, label %303

301:                                              ; preds = %294
  %302 = add i32 %300, -1
  store i32 %302, i32* %299, align 4
  br label %303

303:                                              ; preds = %301, %294
  %304 = phi i32 [ %302, %301 ], [ %300, %294 ]
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %307

306:                                              ; preds = %303
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %274) #7
  br label %307

307:                                              ; preds = %293, %303, %306
  %308 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %309 = load i8*, i8** %308, align 8
  store i8* null, i8** %308, align 8
  %310 = icmp eq i8* %309, null
  br i1 %310, label %312, label %311

311:                                              ; preds = %307
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %309) #7
  br label %312

312:                                              ; preds = %311, %307
  %313 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %314 = icmp eq %"class.WTF::StringImpl"* %313, null
  br i1 %314, label %328, label %315

315:                                              ; preds = %312
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %313, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = load atomic i32, i32* %316 monotonic, align 4
  %318 = and i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %313, i64 0, i32 0
  %321 = load i32, i32* %320, align 4
  br i1 %319, label %322, label %324

322:                                              ; preds = %315
  %323 = add i32 %321, -1
  store i32 %323, i32* %320, align 4
  br label %324

324:                                              ; preds = %322, %315
  %325 = phi i32 [ %323, %322 ], [ %321, %315 ]
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %328

327:                                              ; preds = %324
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %313) #7
  br label %328

328:                                              ; preds = %312, %324, %327
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %202) #7
  br label %356

329:                                              ; preds = %209
  %330 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %331 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %332 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %331, align 8
  %333 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %332, i64 5
  %334 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %333, align 8
  call void %334(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %330) #7
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %211) #7
  %335 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %336 = load i8*, i8** %335, align 8
  store i8* null, i8** %335, align 8
  %337 = icmp eq i8* %336, null
  br i1 %337, label %339, label %338

338:                                              ; preds = %329
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %336) #7
  br label %339

339:                                              ; preds = %338, %329
  %340 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %341 = icmp eq %"class.WTF::StringImpl"* %340, null
  br i1 %341, label %355, label %342

342:                                              ; preds = %339
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = load atomic i32, i32* %343 monotonic, align 4
  %345 = and i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 0, i32 0
  %348 = load i32, i32* %347, align 4
  br i1 %346, label %349, label %351

349:                                              ; preds = %342
  %350 = add i32 %348, -1
  store i32 %350, i32* %347, align 4
  br label %351

351:                                              ; preds = %349, %342
  %352 = phi i32 [ %350, %349 ], [ %348, %342 ]
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %355

354:                                              ; preds = %351
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %340) #7
  br label %355

355:                                              ; preds = %339, %351, %354
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %202) #7
  br label %1013

356:                                              ; preds = %328, %195
  %357 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase56is_payment_handler_handles_shipping_and_contact_enabled_E, align 1, !range !6
  %358 = icmp eq i8 %357, 0
  br i1 %358, label %1013, label %359

359:                                              ; preds = %356
  %360 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 2, i32 0
  %361 = bitcast %"class.v8::Name"** %360 to %"class.v8::Value"**
  %362 = load %"class.v8::Value"*, %"class.v8::Value"** %361, align 8
  %363 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %362) #7
  %364 = icmp eq %"class.v8::Value"* %363, null
  br i1 %364, label %365, label %371

365:                                              ; preds = %359
  %366 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %367 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %368 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %367, align 8
  %369 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %368, i64 5
  %370 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %369, align 8
  call void %370(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %366) #7
  br label %1013

371:                                              ; preds = %359
  %372 = bitcast %"class.v8::Value"* %363 to i64*
  %373 = load i64, i64* %372, align 8
  %374 = and i64 %373, 3
  %375 = icmp eq i64 %374, 1
  br i1 %375, label %376, label %393

376:                                              ; preds = %371
  %377 = add i64 %373, -1
  %378 = inttoptr i64 %377 to i32*
  %379 = load i32, i32* %378, align 4
  %380 = and i64 %373, -4294967296
  %381 = zext i32 %379 to i64
  %382 = or i64 %380, %381
  %383 = add i64 %382, 7
  %384 = inttoptr i64 %383 to i16*
  %385 = load i16, i16* %384, align 2
  %386 = icmp eq i16 %385, 67
  br i1 %386, label %387, label %393

387:                                              ; preds = %376
  %388 = add i64 %373, 23
  %389 = inttoptr i64 %388 to i32*
  %390 = load i32, i32* %389, align 4
  %391 = and i32 %390, -2
  %392 = icmp eq i32 %391, 10
  br i1 %392, label %513, label %393

393:                                              ; preds = %376, %371, %387
  %394 = bitcast %"class.blink::V8StringResource.201"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %394) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %394, i8 -86, i64 152, i1 false)
  %395 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %11, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %363, %"class.v8::Value"** %395, align 8
  %396 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %11, i64 0, i32 1
  store i32 0, i32* %396, align 8
  %397 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %11, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %397, align 8
  %398 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %11, i64 0, i32 3, i32 1
  %399 = bitcast %"class.std::__1::unique_ptr.197"* %398 to i64*
  store i64 0, i64* %399, align 8
  %400 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE3EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource.201"* nonnull %11, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %400, label %401, label %489

401:                                              ; preds = %393
  %402 = load %"class.v8::Value"*, %"class.v8::Value"** %395, align 8
  %403 = icmp eq %"class.v8::Value"* %402, null
  br i1 %403, label %404, label %428, !prof !5

404:                                              ; preds = %401
  %405 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %397, align 8
  %406 = icmp eq %"class.WTF::StringImpl"* %405, null
  br i1 %406, label %407, label %409

407:                                              ; preds = %404
  %408 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %2, i64 0, i32 3
  br label %453

409:                                              ; preds = %404
  %410 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %411 = load atomic i32, i32* %410 monotonic, align 4
  %412 = and i32 %411, 2
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %414, label %426

414:                                              ; preds = %409
  %415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 0
  %416 = load i32, i32* %415, align 4
  %417 = zext i32 %416 to i33
  %418 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %417, i33 1) #7
  %419 = extractvalue { i33, i1 } %418, 1
  %420 = extractvalue { i33, i1 } %418, 0
  %421 = icmp slt i33 %420, 0
  %422 = or i1 %419, %421
  br i1 %422, label %423, label %424, !prof !5

423:                                              ; preds = %414
  call void @llvm.trap() #7
  unreachable

424:                                              ; preds = %414
  %425 = trunc i33 %420 to i32
  store i32 %425, i32* %415, align 4
  br label %426

426:                                              ; preds = %409, %424
  %427 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %2, i64 0, i32 3
  br label %434

428:                                              ; preds = %401
  %429 = bitcast %"class.v8::Value"* %402 to %"class.v8::String"*
  %430 = load i32, i32* %396, align 8
  %431 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %429, i32 %430) #7
  %432 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %2, i64 0, i32 3
  %433 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %433, label %453, label %434

434:                                              ; preds = %426, %428
  %435 = phi %"class.WTF::String"* [ %427, %426 ], [ %432, %428 ]
  %436 = phi %"class.WTF::StringImpl"* [ %405, %426 ], [ %431, %428 ]
  %437 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %436, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %438 = load atomic i32, i32* %437 monotonic, align 4
  %439 = and i32 %438, 2
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %441, label %453

441:                                              ; preds = %434
  %442 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %436, i64 0, i32 0
  %443 = load i32, i32* %442, align 4
  %444 = zext i32 %443 to i33
  %445 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %444, i33 1) #7
  %446 = extractvalue { i33, i1 } %445, 1
  %447 = extractvalue { i33, i1 } %445, 0
  %448 = icmp slt i33 %447, 0
  %449 = or i1 %446, %448
  br i1 %449, label %450, label %451, !prof !5

450:                                              ; preds = %441
  call void @llvm.trap() #7
  unreachable

451:                                              ; preds = %441
  %452 = trunc i33 %447 to i32
  store i32 %452, i32* %442, align 4
  br label %453

453:                                              ; preds = %407, %451, %434, %428
  %454 = phi i1 [ false, %451 ], [ false, %434 ], [ true, %428 ], [ true, %407 ]
  %455 = phi %"class.WTF::String"* [ %435, %451 ], [ %435, %434 ], [ %432, %428 ], [ %408, %407 ]
  %456 = phi %"class.WTF::StringImpl"* [ %436, %451 ], [ %436, %434 ], [ null, %428 ], [ null, %407 ]
  %457 = ptrtoint %"class.WTF::StringImpl"* %456 to i64
  %458 = bitcast %"class.WTF::String"* %455 to i64*
  %459 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %455, i64 0, i32 0, i32 0
  %460 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %459, align 8
  store i64 %457, i64* %458, align 8
  %461 = icmp eq %"class.WTF::StringImpl"* %460, null
  br i1 %461, label %475, label %462

462:                                              ; preds = %453
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %460, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %464 = load atomic i32, i32* %463 monotonic, align 4
  %465 = and i32 %464, 2
  %466 = icmp eq i32 %465, 0
  %467 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %460, i64 0, i32 0
  %468 = load i32, i32* %467, align 4
  br i1 %466, label %469, label %471

469:                                              ; preds = %462
  %470 = add i32 %468, -1
  store i32 %470, i32* %467, align 4
  br label %471

471:                                              ; preds = %469, %462
  %472 = phi i32 [ %470, %469 ], [ %468, %462 ]
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %474, label %475

474:                                              ; preds = %471
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %460) #7
  br label %475

475:                                              ; preds = %453, %471, %474
  br i1 %454, label %489, label %476

476:                                              ; preds = %475
  %477 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %478 = load atomic i32, i32* %477 monotonic, align 4
  %479 = and i32 %478, 2
  %480 = icmp eq i32 %479, 0
  %481 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 0
  %482 = load i32, i32* %481, align 4
  br i1 %480, label %483, label %485

483:                                              ; preds = %476
  %484 = add i32 %482, -1
  store i32 %484, i32* %481, align 4
  br label %485

485:                                              ; preds = %483, %476
  %486 = phi i32 [ %484, %483 ], [ %482, %476 ]
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %488, label %489

488:                                              ; preds = %485
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %456) #7
  br label %489

489:                                              ; preds = %488, %485, %475, %393
  %490 = phi i32 [ 1, %393 ], [ 0, %475 ], [ 0, %485 ], [ 0, %488 ]
  %491 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %11, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %492 = load i8*, i8** %491, align 8
  store i8* null, i8** %491, align 8
  %493 = icmp eq i8* %492, null
  br i1 %493, label %495, label %494

494:                                              ; preds = %489
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %492) #7
  br label %495

495:                                              ; preds = %494, %489
  %496 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %397, align 8
  %497 = icmp eq %"class.WTF::StringImpl"* %496, null
  br i1 %497, label %511, label %498

498:                                              ; preds = %495
  %499 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %500 = load atomic i32, i32* %499 monotonic, align 4
  %501 = and i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 0
  %504 = load i32, i32* %503, align 4
  br i1 %502, label %505, label %507

505:                                              ; preds = %498
  %506 = add i32 %504, -1
  store i32 %506, i32* %503, align 4
  br label %507

507:                                              ; preds = %505, %498
  %508 = phi i32 [ %506, %505 ], [ %504, %498 ]
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %510, label %511

510:                                              ; preds = %507
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %496) #7
  br label %511

511:                                              ; preds = %495, %507, %510
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %394) #7
  %512 = icmp eq i32 %490, 0
  br i1 %512, label %513, label %1013

513:                                              ; preds = %511, %387
  %514 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 3, i32 0
  %515 = bitcast %"class.v8::Name"** %514 to %"class.v8::Value"**
  %516 = load %"class.v8::Value"*, %"class.v8::Value"** %515, align 8
  %517 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %516) #7
  %518 = icmp eq %"class.v8::Value"* %517, null
  br i1 %518, label %519, label %525

519:                                              ; preds = %513
  %520 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %521 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %522 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %521, align 8
  %523 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %522, i64 5
  %524 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %523, align 8
  call void %524(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %520) #7
  br label %1013

525:                                              ; preds = %513
  %526 = bitcast %"class.v8::Value"* %517 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = and i64 %527, 3
  %529 = icmp eq i64 %528, 1
  br i1 %529, label %530, label %547

530:                                              ; preds = %525
  %531 = add i64 %527, -1
  %532 = inttoptr i64 %531 to i32*
  %533 = load i32, i32* %532, align 4
  %534 = and i64 %527, -4294967296
  %535 = zext i32 %533 to i64
  %536 = or i64 %534, %535
  %537 = add i64 %536, 7
  %538 = inttoptr i64 %537 to i16*
  %539 = load i16, i16* %538, align 2
  %540 = icmp eq i16 %539, 67
  br i1 %540, label %541, label %547

541:                                              ; preds = %530
  %542 = add i64 %527, 23
  %543 = inttoptr i64 %542 to i32*
  %544 = load i32, i32* %543, align 4
  %545 = and i32 %544, -2
  %546 = icmp eq i32 %545, 10
  br i1 %546, label %667, label %547

547:                                              ; preds = %530, %525, %541
  %548 = bitcast %"class.blink::V8StringResource.201"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %548) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %548, i8 -86, i64 152, i1 false)
  %549 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %12, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %517, %"class.v8::Value"** %549, align 8
  %550 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %12, i64 0, i32 1
  store i32 0, i32* %550, align 8
  %551 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %12, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %551, align 8
  %552 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %12, i64 0, i32 3, i32 1
  %553 = bitcast %"class.std::__1::unique_ptr.197"* %552 to i64*
  store i64 0, i64* %553, align 8
  %554 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE3EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource.201"* nonnull %12, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %554, label %555, label %643

555:                                              ; preds = %547
  %556 = load %"class.v8::Value"*, %"class.v8::Value"** %549, align 8
  %557 = icmp eq %"class.v8::Value"* %556, null
  br i1 %557, label %558, label %582, !prof !5

558:                                              ; preds = %555
  %559 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %551, align 8
  %560 = icmp eq %"class.WTF::StringImpl"* %559, null
  br i1 %560, label %561, label %563

561:                                              ; preds = %558
  %562 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %2, i64 0, i32 4
  br label %607

563:                                              ; preds = %558
  %564 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %559, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %565 = load atomic i32, i32* %564 monotonic, align 4
  %566 = and i32 %565, 2
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %568, label %580

568:                                              ; preds = %563
  %569 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %559, i64 0, i32 0
  %570 = load i32, i32* %569, align 4
  %571 = zext i32 %570 to i33
  %572 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %571, i33 1) #7
  %573 = extractvalue { i33, i1 } %572, 1
  %574 = extractvalue { i33, i1 } %572, 0
  %575 = icmp slt i33 %574, 0
  %576 = or i1 %573, %575
  br i1 %576, label %577, label %578, !prof !5

577:                                              ; preds = %568
  call void @llvm.trap() #7
  unreachable

578:                                              ; preds = %568
  %579 = trunc i33 %574 to i32
  store i32 %579, i32* %569, align 4
  br label %580

580:                                              ; preds = %563, %578
  %581 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %2, i64 0, i32 4
  br label %588

582:                                              ; preds = %555
  %583 = bitcast %"class.v8::Value"* %556 to %"class.v8::String"*
  %584 = load i32, i32* %550, align 8
  %585 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %583, i32 %584) #7
  %586 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %2, i64 0, i32 4
  %587 = icmp eq %"class.WTF::StringImpl"* %585, null
  br i1 %587, label %607, label %588

588:                                              ; preds = %580, %582
  %589 = phi %"class.WTF::String"* [ %581, %580 ], [ %586, %582 ]
  %590 = phi %"class.WTF::StringImpl"* [ %559, %580 ], [ %585, %582 ]
  %591 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %590, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %592 = load atomic i32, i32* %591 monotonic, align 4
  %593 = and i32 %592, 2
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %595, label %607

595:                                              ; preds = %588
  %596 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %590, i64 0, i32 0
  %597 = load i32, i32* %596, align 4
  %598 = zext i32 %597 to i33
  %599 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %598, i33 1) #7
  %600 = extractvalue { i33, i1 } %599, 1
  %601 = extractvalue { i33, i1 } %599, 0
  %602 = icmp slt i33 %601, 0
  %603 = or i1 %600, %602
  br i1 %603, label %604, label %605, !prof !5

604:                                              ; preds = %595
  call void @llvm.trap() #7
  unreachable

605:                                              ; preds = %595
  %606 = trunc i33 %601 to i32
  store i32 %606, i32* %596, align 4
  br label %607

607:                                              ; preds = %561, %605, %588, %582
  %608 = phi i1 [ false, %605 ], [ false, %588 ], [ true, %582 ], [ true, %561 ]
  %609 = phi %"class.WTF::String"* [ %589, %605 ], [ %589, %588 ], [ %586, %582 ], [ %562, %561 ]
  %610 = phi %"class.WTF::StringImpl"* [ %590, %605 ], [ %590, %588 ], [ null, %582 ], [ null, %561 ]
  %611 = ptrtoint %"class.WTF::StringImpl"* %610 to i64
  %612 = bitcast %"class.WTF::String"* %609 to i64*
  %613 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %609, i64 0, i32 0, i32 0
  %614 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %613, align 8
  store i64 %611, i64* %612, align 8
  %615 = icmp eq %"class.WTF::StringImpl"* %614, null
  br i1 %615, label %629, label %616

616:                                              ; preds = %607
  %617 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %614, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %618 = load atomic i32, i32* %617 monotonic, align 4
  %619 = and i32 %618, 2
  %620 = icmp eq i32 %619, 0
  %621 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %614, i64 0, i32 0
  %622 = load i32, i32* %621, align 4
  br i1 %620, label %623, label %625

623:                                              ; preds = %616
  %624 = add i32 %622, -1
  store i32 %624, i32* %621, align 4
  br label %625

625:                                              ; preds = %623, %616
  %626 = phi i32 [ %624, %623 ], [ %622, %616 ]
  %627 = icmp eq i32 %626, 0
  br i1 %627, label %628, label %629

628:                                              ; preds = %625
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %614) #7
  br label %629

629:                                              ; preds = %607, %625, %628
  br i1 %608, label %643, label %630

630:                                              ; preds = %629
  %631 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %610, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %632 = load atomic i32, i32* %631 monotonic, align 4
  %633 = and i32 %632, 2
  %634 = icmp eq i32 %633, 0
  %635 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %610, i64 0, i32 0
  %636 = load i32, i32* %635, align 4
  br i1 %634, label %637, label %639

637:                                              ; preds = %630
  %638 = add i32 %636, -1
  store i32 %638, i32* %635, align 4
  br label %639

639:                                              ; preds = %637, %630
  %640 = phi i32 [ %638, %637 ], [ %636, %630 ]
  %641 = icmp eq i32 %640, 0
  br i1 %641, label %642, label %643

642:                                              ; preds = %639
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %610) #7
  br label %643

643:                                              ; preds = %642, %639, %629, %547
  %644 = phi i32 [ 1, %547 ], [ 0, %629 ], [ 0, %639 ], [ 0, %642 ]
  %645 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %12, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %646 = load i8*, i8** %645, align 8
  store i8* null, i8** %645, align 8
  %647 = icmp eq i8* %646, null
  br i1 %647, label %649, label %648

648:                                              ; preds = %643
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %646) #7
  br label %649

649:                                              ; preds = %648, %643
  %650 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %551, align 8
  %651 = icmp eq %"class.WTF::StringImpl"* %650, null
  br i1 %651, label %665, label %652

652:                                              ; preds = %649
  %653 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %650, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %654 = load atomic i32, i32* %653 monotonic, align 4
  %655 = and i32 %654, 2
  %656 = icmp eq i32 %655, 0
  %657 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %650, i64 0, i32 0
  %658 = load i32, i32* %657, align 4
  br i1 %656, label %659, label %661

659:                                              ; preds = %652
  %660 = add i32 %658, -1
  store i32 %660, i32* %657, align 4
  br label %661

661:                                              ; preds = %659, %652
  %662 = phi i32 [ %660, %659 ], [ %658, %652 ]
  %663 = icmp eq i32 %662, 0
  br i1 %663, label %664, label %665

664:                                              ; preds = %661
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %650) #7
  br label %665

665:                                              ; preds = %649, %661, %664
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %548) #7
  %666 = icmp eq i32 %644, 0
  br i1 %666, label %667, label %1013

667:                                              ; preds = %665, %541
  %668 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 4, i32 0
  %669 = bitcast %"class.v8::Name"** %668 to %"class.v8::Value"**
  %670 = load %"class.v8::Value"*, %"class.v8::Value"** %669, align 8
  %671 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %670) #7
  %672 = icmp eq %"class.v8::Value"* %671, null
  br i1 %672, label %673, label %679

673:                                              ; preds = %667
  %674 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %675 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %676 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %675, align 8
  %677 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %676, i64 5
  %678 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %677, align 8
  call void %678(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %674) #7
  br label %1013

679:                                              ; preds = %667
  %680 = bitcast %"class.v8::Value"* %671 to i64*
  %681 = load i64, i64* %680, align 8
  %682 = and i64 %681, 3
  %683 = icmp eq i64 %682, 1
  br i1 %683, label %684, label %701

684:                                              ; preds = %679
  %685 = add i64 %681, -1
  %686 = inttoptr i64 %685 to i32*
  %687 = load i32, i32* %686, align 4
  %688 = and i64 %681, -4294967296
  %689 = zext i32 %687 to i64
  %690 = or i64 %688, %689
  %691 = add i64 %690, 7
  %692 = inttoptr i64 %691 to i16*
  %693 = load i16, i16* %692, align 2
  %694 = icmp eq i16 %693, 67
  br i1 %694, label %695, label %701

695:                                              ; preds = %684
  %696 = add i64 %681, 23
  %697 = inttoptr i64 %696 to i32*
  %698 = load i32, i32* %697, align 4
  %699 = and i32 %698, -2
  %700 = icmp eq i32 %699, 10
  br i1 %700, label %821, label %701

701:                                              ; preds = %684, %679, %695
  %702 = bitcast %"class.blink::V8StringResource.201"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %702) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %702, i8 -86, i64 152, i1 false)
  %703 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %13, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %671, %"class.v8::Value"** %703, align 8
  %704 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %13, i64 0, i32 1
  store i32 0, i32* %704, align 8
  %705 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %13, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %705, align 8
  %706 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %13, i64 0, i32 3, i32 1
  %707 = bitcast %"class.std::__1::unique_ptr.197"* %706 to i64*
  store i64 0, i64* %707, align 8
  %708 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE3EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource.201"* nonnull %13, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %708, label %709, label %797

709:                                              ; preds = %701
  %710 = load %"class.v8::Value"*, %"class.v8::Value"** %703, align 8
  %711 = icmp eq %"class.v8::Value"* %710, null
  br i1 %711, label %712, label %736, !prof !5

712:                                              ; preds = %709
  %713 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %705, align 8
  %714 = icmp eq %"class.WTF::StringImpl"* %713, null
  br i1 %714, label %715, label %717

715:                                              ; preds = %712
  %716 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %2, i64 0, i32 5
  br label %761

717:                                              ; preds = %712
  %718 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %713, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %719 = load atomic i32, i32* %718 monotonic, align 4
  %720 = and i32 %719, 2
  %721 = icmp eq i32 %720, 0
  br i1 %721, label %722, label %734

722:                                              ; preds = %717
  %723 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %713, i64 0, i32 0
  %724 = load i32, i32* %723, align 4
  %725 = zext i32 %724 to i33
  %726 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %725, i33 1) #7
  %727 = extractvalue { i33, i1 } %726, 1
  %728 = extractvalue { i33, i1 } %726, 0
  %729 = icmp slt i33 %728, 0
  %730 = or i1 %727, %729
  br i1 %730, label %731, label %732, !prof !5

731:                                              ; preds = %722
  call void @llvm.trap() #7
  unreachable

732:                                              ; preds = %722
  %733 = trunc i33 %728 to i32
  store i32 %733, i32* %723, align 4
  br label %734

734:                                              ; preds = %717, %732
  %735 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %2, i64 0, i32 5
  br label %742

736:                                              ; preds = %709
  %737 = bitcast %"class.v8::Value"* %710 to %"class.v8::String"*
  %738 = load i32, i32* %704, align 8
  %739 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %737, i32 %738) #7
  %740 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %2, i64 0, i32 5
  %741 = icmp eq %"class.WTF::StringImpl"* %739, null
  br i1 %741, label %761, label %742

742:                                              ; preds = %734, %736
  %743 = phi %"class.WTF::String"* [ %735, %734 ], [ %740, %736 ]
  %744 = phi %"class.WTF::StringImpl"* [ %713, %734 ], [ %739, %736 ]
  %745 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %744, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %746 = load atomic i32, i32* %745 monotonic, align 4
  %747 = and i32 %746, 2
  %748 = icmp eq i32 %747, 0
  br i1 %748, label %749, label %761

749:                                              ; preds = %742
  %750 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %744, i64 0, i32 0
  %751 = load i32, i32* %750, align 4
  %752 = zext i32 %751 to i33
  %753 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %752, i33 1) #7
  %754 = extractvalue { i33, i1 } %753, 1
  %755 = extractvalue { i33, i1 } %753, 0
  %756 = icmp slt i33 %755, 0
  %757 = or i1 %754, %756
  br i1 %757, label %758, label %759, !prof !5

758:                                              ; preds = %749
  call void @llvm.trap() #7
  unreachable

759:                                              ; preds = %749
  %760 = trunc i33 %755 to i32
  store i32 %760, i32* %750, align 4
  br label %761

761:                                              ; preds = %715, %759, %742, %736
  %762 = phi i1 [ false, %759 ], [ false, %742 ], [ true, %736 ], [ true, %715 ]
  %763 = phi %"class.WTF::String"* [ %743, %759 ], [ %743, %742 ], [ %740, %736 ], [ %716, %715 ]
  %764 = phi %"class.WTF::StringImpl"* [ %744, %759 ], [ %744, %742 ], [ null, %736 ], [ null, %715 ]
  %765 = ptrtoint %"class.WTF::StringImpl"* %764 to i64
  %766 = bitcast %"class.WTF::String"* %763 to i64*
  %767 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %763, i64 0, i32 0, i32 0
  %768 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %767, align 8
  store i64 %765, i64* %766, align 8
  %769 = icmp eq %"class.WTF::StringImpl"* %768, null
  br i1 %769, label %783, label %770

770:                                              ; preds = %761
  %771 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %768, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %772 = load atomic i32, i32* %771 monotonic, align 4
  %773 = and i32 %772, 2
  %774 = icmp eq i32 %773, 0
  %775 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %768, i64 0, i32 0
  %776 = load i32, i32* %775, align 4
  br i1 %774, label %777, label %779

777:                                              ; preds = %770
  %778 = add i32 %776, -1
  store i32 %778, i32* %775, align 4
  br label %779

779:                                              ; preds = %777, %770
  %780 = phi i32 [ %778, %777 ], [ %776, %770 ]
  %781 = icmp eq i32 %780, 0
  br i1 %781, label %782, label %783

782:                                              ; preds = %779
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %768) #7
  br label %783

783:                                              ; preds = %761, %779, %782
  br i1 %762, label %797, label %784

784:                                              ; preds = %783
  %785 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %764, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %786 = load atomic i32, i32* %785 monotonic, align 4
  %787 = and i32 %786, 2
  %788 = icmp eq i32 %787, 0
  %789 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %764, i64 0, i32 0
  %790 = load i32, i32* %789, align 4
  br i1 %788, label %791, label %793

791:                                              ; preds = %784
  %792 = add i32 %790, -1
  store i32 %792, i32* %789, align 4
  br label %793

793:                                              ; preds = %791, %784
  %794 = phi i32 [ %792, %791 ], [ %790, %784 ]
  %795 = icmp eq i32 %794, 0
  br i1 %795, label %796, label %797

796:                                              ; preds = %793
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %764) #7
  br label %797

797:                                              ; preds = %796, %793, %783, %701
  %798 = phi i32 [ 1, %701 ], [ 0, %783 ], [ 0, %793 ], [ 0, %796 ]
  %799 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %13, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %800 = load i8*, i8** %799, align 8
  store i8* null, i8** %799, align 8
  %801 = icmp eq i8* %800, null
  br i1 %801, label %803, label %802

802:                                              ; preds = %797
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %800) #7
  br label %803

803:                                              ; preds = %802, %797
  %804 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %705, align 8
  %805 = icmp eq %"class.WTF::StringImpl"* %804, null
  br i1 %805, label %819, label %806

806:                                              ; preds = %803
  %807 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %804, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %808 = load atomic i32, i32* %807 monotonic, align 4
  %809 = and i32 %808, 2
  %810 = icmp eq i32 %809, 0
  %811 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %804, i64 0, i32 0
  %812 = load i32, i32* %811, align 4
  br i1 %810, label %813, label %815

813:                                              ; preds = %806
  %814 = add i32 %812, -1
  store i32 %814, i32* %811, align 4
  br label %815

815:                                              ; preds = %813, %806
  %816 = phi i32 [ %814, %813 ], [ %812, %806 ]
  %817 = icmp eq i32 %816, 0
  br i1 %817, label %818, label %819

818:                                              ; preds = %815
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %804) #7
  br label %819

819:                                              ; preds = %803, %815, %818
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %702) #7
  %820 = icmp eq i32 %798, 0
  br i1 %820, label %821, label %1013

821:                                              ; preds = %819, %695
  %822 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 5, i32 0
  %823 = bitcast %"class.v8::Name"** %822 to %"class.v8::Value"**
  %824 = load %"class.v8::Value"*, %"class.v8::Value"** %823, align 8
  %825 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %824) #7
  %826 = icmp eq %"class.v8::Value"* %825, null
  br i1 %826, label %827, label %833

827:                                              ; preds = %821
  %828 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %829 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %830 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %829, align 8
  %831 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %830, i64 5
  %832 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %831, align 8
  call void %832(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %828) #7
  br label %1013

833:                                              ; preds = %821
  %834 = bitcast %"class.v8::Value"* %825 to i64*
  %835 = load i64, i64* %834, align 8
  %836 = and i64 %835, 3
  %837 = icmp eq i64 %836, 1
  br i1 %837, label %838, label %855

838:                                              ; preds = %833
  %839 = add i64 %835, -1
  %840 = inttoptr i64 %839 to i32*
  %841 = load i32, i32* %840, align 4
  %842 = and i64 %835, -4294967296
  %843 = zext i32 %841 to i64
  %844 = or i64 %842, %843
  %845 = add i64 %844, 7
  %846 = inttoptr i64 %845 to i16*
  %847 = load i16, i16* %846, align 2
  %848 = icmp eq i16 %847, 67
  br i1 %848, label %849, label %855

849:                                              ; preds = %838
  %850 = add i64 %835, 23
  %851 = inttoptr i64 %850 to i32*
  %852 = load i32, i32* %851, align 4
  %853 = and i32 %852, -2
  %854 = icmp eq i32 %853, 10
  br i1 %854, label %861, label %855

855:                                              ; preds = %838, %833, %849
  %856 = call %"class.blink::AddressInit"* @_ZN5blink17NativeValueTraitsINS_11AddressInitEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %825, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %857 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %858 = load i32, i32* %857, align 8
  %859 = icmp eq i32 %858, 0
  br i1 %859, label %860, label %1013

860:                                              ; preds = %855
  call void @_ZN5blink22PaymentHandlerResponse18setShippingAddressEPNS_11AddressInitE(%"class.blink::PaymentHandlerResponse"* %2, %"class.blink::AddressInit"* %856) #7
  br label %861

861:                                              ; preds = %860, %849
  %862 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 6, i32 0
  %863 = bitcast %"class.v8::Name"** %862 to %"class.v8::Value"**
  %864 = load %"class.v8::Value"*, %"class.v8::Value"** %863, align 8
  %865 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %864) #7
  %866 = icmp eq %"class.v8::Value"* %865, null
  br i1 %866, label %867, label %873

867:                                              ; preds = %861
  %868 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %869 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %870 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %869, align 8
  %871 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %870, i64 5
  %872 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %871, align 8
  call void %872(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %868) #7
  br label %1013

873:                                              ; preds = %861
  %874 = bitcast %"class.v8::Value"* %865 to i64*
  %875 = load i64, i64* %874, align 8
  %876 = and i64 %875, 3
  %877 = icmp eq i64 %876, 1
  br i1 %877, label %878, label %895

878:                                              ; preds = %873
  %879 = add i64 %875, -1
  %880 = inttoptr i64 %879 to i32*
  %881 = load i32, i32* %880, align 4
  %882 = and i64 %875, -4294967296
  %883 = zext i32 %881 to i64
  %884 = or i64 %882, %883
  %885 = add i64 %884, 7
  %886 = inttoptr i64 %885 to i16*
  %887 = load i16, i16* %886, align 2
  %888 = icmp eq i16 %887, 67
  br i1 %888, label %889, label %895

889:                                              ; preds = %878
  %890 = add i64 %875, 23
  %891 = inttoptr i64 %890 to i32*
  %892 = load i32, i32* %891, align 4
  %893 = and i32 %892, -2
  %894 = icmp eq i32 %893, 10
  br i1 %894, label %1013, label %895

895:                                              ; preds = %878, %873, %889
  %896 = bitcast %"class.blink::V8StringResource.201"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %896) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %896, i8 -86, i64 152, i1 false)
  %897 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %14, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %865, %"class.v8::Value"** %897, align 8
  %898 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %14, i64 0, i32 1
  store i32 0, i32* %898, align 8
  %899 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %14, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %899, align 8
  %900 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %14, i64 0, i32 3, i32 1
  %901 = bitcast %"class.std::__1::unique_ptr.197"* %900 to i64*
  store i64 0, i64* %901, align 8
  %902 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE3EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource.201"* nonnull %14, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %902, label %903, label %991

903:                                              ; preds = %895
  %904 = load %"class.v8::Value"*, %"class.v8::Value"** %897, align 8
  %905 = icmp eq %"class.v8::Value"* %904, null
  br i1 %905, label %906, label %930, !prof !5

906:                                              ; preds = %903
  %907 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %899, align 8
  %908 = icmp eq %"class.WTF::StringImpl"* %907, null
  br i1 %908, label %909, label %911

909:                                              ; preds = %906
  %910 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %2, i64 0, i32 7
  br label %955

911:                                              ; preds = %906
  %912 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %907, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %913 = load atomic i32, i32* %912 monotonic, align 4
  %914 = and i32 %913, 2
  %915 = icmp eq i32 %914, 0
  br i1 %915, label %916, label %928

916:                                              ; preds = %911
  %917 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %907, i64 0, i32 0
  %918 = load i32, i32* %917, align 4
  %919 = zext i32 %918 to i33
  %920 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %919, i33 1) #7
  %921 = extractvalue { i33, i1 } %920, 1
  %922 = extractvalue { i33, i1 } %920, 0
  %923 = icmp slt i33 %922, 0
  %924 = or i1 %921, %923
  br i1 %924, label %925, label %926, !prof !5

925:                                              ; preds = %916
  call void @llvm.trap() #7
  unreachable

926:                                              ; preds = %916
  %927 = trunc i33 %922 to i32
  store i32 %927, i32* %917, align 4
  br label %928

928:                                              ; preds = %911, %926
  %929 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %2, i64 0, i32 7
  br label %936

930:                                              ; preds = %903
  %931 = bitcast %"class.v8::Value"* %904 to %"class.v8::String"*
  %932 = load i32, i32* %898, align 8
  %933 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %931, i32 %932) #7
  %934 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %2, i64 0, i32 7
  %935 = icmp eq %"class.WTF::StringImpl"* %933, null
  br i1 %935, label %955, label %936

936:                                              ; preds = %928, %930
  %937 = phi %"class.WTF::String"* [ %929, %928 ], [ %934, %930 ]
  %938 = phi %"class.WTF::StringImpl"* [ %907, %928 ], [ %933, %930 ]
  %939 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %938, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %940 = load atomic i32, i32* %939 monotonic, align 4
  %941 = and i32 %940, 2
  %942 = icmp eq i32 %941, 0
  br i1 %942, label %943, label %955

943:                                              ; preds = %936
  %944 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %938, i64 0, i32 0
  %945 = load i32, i32* %944, align 4
  %946 = zext i32 %945 to i33
  %947 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %946, i33 1) #7
  %948 = extractvalue { i33, i1 } %947, 1
  %949 = extractvalue { i33, i1 } %947, 0
  %950 = icmp slt i33 %949, 0
  %951 = or i1 %948, %950
  br i1 %951, label %952, label %953, !prof !5

952:                                              ; preds = %943
  call void @llvm.trap() #7
  unreachable

953:                                              ; preds = %943
  %954 = trunc i33 %949 to i32
  store i32 %954, i32* %944, align 4
  br label %955

955:                                              ; preds = %909, %953, %936, %930
  %956 = phi i1 [ false, %953 ], [ false, %936 ], [ true, %930 ], [ true, %909 ]
  %957 = phi %"class.WTF::String"* [ %937, %953 ], [ %937, %936 ], [ %934, %930 ], [ %910, %909 ]
  %958 = phi %"class.WTF::StringImpl"* [ %938, %953 ], [ %938, %936 ], [ null, %930 ], [ null, %909 ]
  %959 = ptrtoint %"class.WTF::StringImpl"* %958 to i64
  %960 = bitcast %"class.WTF::String"* %957 to i64*
  %961 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %957, i64 0, i32 0, i32 0
  %962 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %961, align 8
  store i64 %959, i64* %960, align 8
  %963 = icmp eq %"class.WTF::StringImpl"* %962, null
  br i1 %963, label %977, label %964

964:                                              ; preds = %955
  %965 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %962, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %966 = load atomic i32, i32* %965 monotonic, align 4
  %967 = and i32 %966, 2
  %968 = icmp eq i32 %967, 0
  %969 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %962, i64 0, i32 0
  %970 = load i32, i32* %969, align 4
  br i1 %968, label %971, label %973

971:                                              ; preds = %964
  %972 = add i32 %970, -1
  store i32 %972, i32* %969, align 4
  br label %973

973:                                              ; preds = %971, %964
  %974 = phi i32 [ %972, %971 ], [ %970, %964 ]
  %975 = icmp eq i32 %974, 0
  br i1 %975, label %976, label %977

976:                                              ; preds = %973
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %962) #7
  br label %977

977:                                              ; preds = %955, %973, %976
  br i1 %956, label %991, label %978

978:                                              ; preds = %977
  %979 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %958, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %980 = load atomic i32, i32* %979 monotonic, align 4
  %981 = and i32 %980, 2
  %982 = icmp eq i32 %981, 0
  %983 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %958, i64 0, i32 0
  %984 = load i32, i32* %983, align 4
  br i1 %982, label %985, label %987

985:                                              ; preds = %978
  %986 = add i32 %984, -1
  store i32 %986, i32* %983, align 4
  br label %987

987:                                              ; preds = %985, %978
  %988 = phi i32 [ %986, %985 ], [ %984, %978 ]
  %989 = icmp eq i32 %988, 0
  br i1 %989, label %990, label %991

990:                                              ; preds = %987
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %958) #7
  br label %991

991:                                              ; preds = %990, %987, %977, %895
  %992 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %14, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %993 = load i8*, i8** %992, align 8
  store i8* null, i8** %992, align 8
  %994 = icmp eq i8* %993, null
  br i1 %994, label %996, label %995

995:                                              ; preds = %991
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %993) #7
  br label %996

996:                                              ; preds = %995, %991
  %997 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %899, align 8
  %998 = icmp eq %"class.WTF::StringImpl"* %997, null
  br i1 %998, label %1012, label %999

999:                                              ; preds = %996
  %1000 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %997, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1001 = load atomic i32, i32* %1000 monotonic, align 4
  %1002 = and i32 %1001, 2
  %1003 = icmp eq i32 %1002, 0
  %1004 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %997, i64 0, i32 0
  %1005 = load i32, i32* %1004, align 4
  br i1 %1003, label %1006, label %1008

1006:                                             ; preds = %999
  %1007 = add i32 %1005, -1
  store i32 %1007, i32* %1004, align 4
  br label %1008

1008:                                             ; preds = %1006, %999
  %1009 = phi i32 [ %1007, %1006 ], [ %1005, %999 ]
  %1010 = icmp eq i32 %1009, 0
  br i1 %1010, label %1011, label %1012

1011:                                             ; preds = %1008
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %997) #7
  br label %1012

1012:                                             ; preds = %996, %1008, %1011
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %896) #7
  br label %1013

1013:                                             ; preds = %855, %356, %173, %355, %519, %665, %827, %1012, %889, %867, %819, %673, %511, %365, %166, %54
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %48) #7
  br label %1014

1014:                                             ; preds = %32, %32, %4, %1013, %39
  ret void
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

declare void @_ZN5blink22PaymentHandlerResponse10setDetailsENS_11ScriptValueE(%"class.blink::PaymentHandlerResponse"*, %"class.blink::ScriptValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE3EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource.201"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::TryCatch", align 8
  %4 = tail call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE3EE11PrepareFastEv(%"class.blink::V8StringResource.201"* %0)
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %7 = bitcast %"class.v8::TryCatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %3, %"class.v8::Isolate"* %6) #7
  %8 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.v8::Value"*, %"class.v8::Value"** %8, align 8
  %10 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #7
  %11 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %9, %"class.v8::Context"* %10) #7
  %12 = ptrtoint %"class.v8::String"* %11 to i64
  %13 = bitcast %"class.blink::V8StringResource.201"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = icmp eq %"class.v8::String"* %11, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %5
  %16 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %3) #7
  %17 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %18 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %18, i64 5
  %20 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %19, align 8
  call void %20(%"class.blink::ExceptionState"* %1, %"class.v8::Value"* %16) #7
  br label %21

21:                                               ; preds = %5, %15
  %22 = phi i1 [ false, %15 ], [ true, %5 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #7
  br label %23

23:                                               ; preds = %21, %2
  %24 = phi i1 [ true, %2 ], [ %22, %21 ]
  ret i1 %24
}

declare %"class.blink::AddressInit"* @_ZN5blink17NativeValueTraitsINS_11AddressInitEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink22PaymentHandlerResponse18setShippingAddressEPNS_11AddressInitE(%"class.blink::PaymentHandlerResponse"*, %"class.blink::AddressInit"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink22PaymentHandlerResponse8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::PaymentHandlerResponse"*, %"class.v8::Object"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #7
  %5 = tail call zeroext i1 @_ZN5blink26toV8PaymentHandlerResponseEPKNS_22PaymentHandlerResponseEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::PaymentHandlerResponse"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* %1, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink26toV8PaymentHandlerResponseEPKNS_22PaymentHandlerResponseEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::PaymentHandlerResponse"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.blink::ScriptValue", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %12 = add i64 %11, 8
  %13 = inttoptr i64 %12 to %"class.blink::V8PerIsolateData"**
  %14 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %13, align 8
  %15 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %14, i8* bitcast ([7 x i8*]* @_ZZN5blinkL35eternalV8PaymentHandlerResponseKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.321"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.321"*)) #7
  %16 = extractvalue { i64, %"class.v8::Eternal"* } %15, 1
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #7
  %18 = tail call zeroext i1 @_ZNK5blink22PaymentHandlerResponse10hasDetailsEv(%"class.blink::PaymentHandlerResponse"* %0)
  br i1 %18, label %19, label %60

19:                                               ; preds = %4
  %20 = bitcast %"class.blink::ScriptValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #7
  %21 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %0, i64 0, i32 1
  %22 = bitcast %"class.blink::ScriptValue"* %21 to i64*
  %23 = load i64, i64* %22, align 8, !noalias !7
  %24 = bitcast %"class.blink::ScriptValue"* %5 to i64*
  store i64 %23, i64* %24, align 8, !alias.scope !7
  %25 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1
  %26 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %25, i64 0, i32 0
  %27 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %27, align 8, !alias.scope !7
  %28 = icmp eq %"class.blink::ScriptValue"* %21, %5
  br i1 %28, label %34, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i64*, i64** %30, align 8, !noalias !7
  %32 = icmp eq i64* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %30, i64** %27) #7
  br label %34

34:                                               ; preds = %33, %29, %19
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %26) #7
  %35 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %36 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %35, align 8, !noalias !7
  %37 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %36, %"class.blink::DOMWrapperWorld"** %37, align 8, !alias.scope !7
  %38 = icmp eq %"class.blink::DOMWrapperWorld"* %36, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %36, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %40) #7
  br label %41

41:                                               ; preds = %34, %39
  %42 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %5) #7
  %43 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %37, align 8
  %44 = icmp eq %"class.blink::DOMWrapperWorld"* %43, null
  br i1 %44, label %52, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %43, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %46) #7
  %47 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %45
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %43) #7
  %51 = bitcast %"class.blink::DOMWrapperWorld"* %43 to i8*
  call void @free(i8* %51) #7
  br label %52

52:                                               ; preds = %41, %45, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #7
  %53 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %16, i64 0, i32 0
  %54 = load %"class.v8::Name"*, %"class.v8::Name"** %53, align 8
  %55 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %17, %"class.v8::Name"* %54, %"class.v8::Value"* %42) #7
  %56 = trunc i16 %55 to i8
  %57 = icmp ne i8 %56, 0
  %58 = icmp ugt i16 %55, 255
  %59 = and i1 %58, %57
  br i1 %59, label %60, label %212

60:                                               ; preds = %4, %52
  %61 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %0, i64 0, i32 2, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %82, label %64

64:                                               ; preds = %60
  %65 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #7
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %66, align 8
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 1
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %71 = bitcast i8** %70 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %68, i32* %72, align 8
  %73 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #7
  %74 = bitcast %"class.v8::String"* %73 to %"class.v8::Value"*
  %75 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %16, i64 1, i32 0
  %76 = load %"class.v8::Name"*, %"class.v8::Name"** %75, align 8
  %77 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %17, %"class.v8::Name"* %76, %"class.v8::Value"* %74) #7
  %78 = trunc i16 %77 to i8
  %79 = icmp ne i8 %78, 0
  %80 = icmp ugt i16 %77, 255
  %81 = and i1 %80, %79
  br i1 %81, label %82, label %212

82:                                               ; preds = %60, %64
  %83 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase56is_payment_handler_handles_shipping_and_contact_enabled_E, align 1, !range !6
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %212, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %0, i64 0, i32 3, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %100, label %89

89:                                               ; preds = %85
  %90 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #7
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %91, align 8
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 1
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %96 = bitcast i8** %95 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %94, %"class.WTF::StringImpl"** %96, align 8
  %97 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %93, i32* %97, align 8
  %98 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  %99 = ptrtoint %"class.v8::String"* %98 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #7
  br label %102

100:                                              ; preds = %85
  %101 = add i64 %11, 176
  br label %102

102:                                              ; preds = %89, %100
  %103 = phi i64 [ %99, %89 ], [ %101, %100 ]
  %104 = inttoptr i64 %103 to %"class.v8::Value"*
  %105 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %16, i64 2, i32 0
  %106 = load %"class.v8::Name"*, %"class.v8::Name"** %105, align 8
  %107 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %17, %"class.v8::Name"* %106, %"class.v8::Value"* %104) #7
  %108 = trunc i16 %107 to i8
  %109 = icmp ne i8 %108, 0
  %110 = icmp ugt i16 %107, 255
  %111 = and i1 %110, %109
  br i1 %111, label %112, label %211

112:                                              ; preds = %102
  %113 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %0, i64 0, i32 4, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %127, label %116

116:                                              ; preds = %112
  %117 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #7
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %118, align 8
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 1
  %122 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %123 = bitcast i8** %122 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %121, %"class.WTF::StringImpl"** %123, align 8
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %120, i32* %124, align 8
  %125 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  %126 = ptrtoint %"class.v8::String"* %125 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #7
  br label %129

127:                                              ; preds = %112
  %128 = add i64 %11, 176
  br label %129

129:                                              ; preds = %116, %127
  %130 = phi i64 [ %126, %116 ], [ %128, %127 ]
  %131 = inttoptr i64 %130 to %"class.v8::Value"*
  %132 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %16, i64 3, i32 0
  %133 = load %"class.v8::Name"*, %"class.v8::Name"** %132, align 8
  %134 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %17, %"class.v8::Name"* %133, %"class.v8::Value"* %131) #7
  %135 = trunc i16 %134 to i8
  %136 = icmp ne i8 %135, 0
  %137 = icmp ugt i16 %134, 255
  %138 = and i1 %137, %136
  br i1 %138, label %139, label %211

139:                                              ; preds = %129
  %140 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %0, i64 0, i32 5, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %154, label %143

143:                                              ; preds = %139
  %144 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #7
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %141, %"class.WTF::StringImpl"** %145, align 8
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 1
  %149 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %150 = bitcast i8** %149 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %148, %"class.WTF::StringImpl"** %150, align 8
  %151 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %147, i32* %151, align 8
  %152 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  %153 = ptrtoint %"class.v8::String"* %152 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #7
  br label %156

154:                                              ; preds = %139
  %155 = add i64 %11, 176
  br label %156

156:                                              ; preds = %143, %154
  %157 = phi i64 [ %153, %143 ], [ %155, %154 ]
  %158 = inttoptr i64 %157 to %"class.v8::Value"*
  %159 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %16, i64 4, i32 0
  %160 = load %"class.v8::Name"*, %"class.v8::Name"** %159, align 8
  %161 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %17, %"class.v8::Name"* %160, %"class.v8::Value"* %158) #7
  %162 = trunc i16 %161 to i8
  %163 = icmp ne i8 %162, 0
  %164 = icmp ugt i16 %161, 255
  %165 = and i1 %164, %163
  br i1 %165, label %166, label %211

166:                                              ; preds = %156
  %167 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %0, i64 0, i32 6, i32 0, i32 0
  %168 = load %"class.blink::AddressInit"*, %"class.blink::AddressInit"** %167, align 8
  %169 = icmp eq %"class.blink::AddressInit"* %168, null
  br i1 %169, label %184, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.blink::AddressInit", %"class.blink::AddressInit"* %168, i64 0, i32 0
  %172 = bitcast %"class.blink::AddressInit"* %168 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %173 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %172, align 8
  %174 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %173, i64 2
  %175 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %174, align 8
  %176 = call %"class.v8::Value"* %175(%"class.blink::IDLDictionaryBase"* nonnull %171, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #7
  %177 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %16, i64 5, i32 0
  %178 = load %"class.v8::Name"*, %"class.v8::Name"** %177, align 8
  %179 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %17, %"class.v8::Name"* %178, %"class.v8::Value"* %176) #7
  %180 = trunc i16 %179 to i8
  %181 = icmp ne i8 %180, 0
  %182 = icmp ugt i16 %179, 255
  %183 = and i1 %182, %181
  br i1 %183, label %184, label %211

184:                                              ; preds = %166, %170
  %185 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %0, i64 0, i32 7, i32 0, i32 0
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %199, label %188

188:                                              ; preds = %184
  %189 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %189) #7
  %190 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %186, %"class.WTF::StringImpl"** %190, align 8
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 1
  %192 = load i32, i32* %191, align 4
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 1
  %194 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %195 = bitcast i8** %194 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %193, %"class.WTF::StringImpl"** %195, align 8
  %196 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %192, i32* %196, align 8
  %197 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  %198 = ptrtoint %"class.v8::String"* %197 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %189) #7
  br label %201

199:                                              ; preds = %184
  %200 = add i64 %11, 176
  br label %201

201:                                              ; preds = %188, %199
  %202 = phi i64 [ %198, %188 ], [ %200, %199 ]
  %203 = inttoptr i64 %202 to %"class.v8::Value"*
  %204 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %16, i64 6, i32 0
  %205 = load %"class.v8::Name"*, %"class.v8::Name"** %204, align 8
  %206 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %17, %"class.v8::Name"* %205, %"class.v8::Value"* %203) #7
  %207 = trunc i16 %206 to i8
  %208 = icmp ne i8 %207, 0
  %209 = icmp ugt i16 %206, 255
  %210 = and i1 %209, %208
  br i1 %210, label %212, label %211

211:                                              ; preds = %102, %129, %156, %201, %170
  br label %212

212:                                              ; preds = %82, %64, %211, %201, %52
  %213 = phi i1 [ false, %52 ], [ false, %64 ], [ false, %211 ], [ true, %201 ], [ true, %82 ]
  ret i1 %213
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22PaymentHandlerResponse10hasDetailsEv(%"class.blink::PaymentHandlerResponse"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::PaymentHandlerResponse", %"class.blink::PaymentHandlerResponse"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #7
  %8 = icmp eq %"class.v8::Value"* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.v8::Value"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 3
  %13 = icmp eq i64 %12, 1
  br i1 %13, label %14, label %31

14:                                               ; preds = %9
  %15 = add i64 %11, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = and i64 %11, -4294967296
  %19 = zext i32 %17 to i64
  %20 = or i64 %18, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 67
  br i1 %24, label %25, label %31

25:                                               ; preds = %14
  %26 = add i64 %11, 23
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, -2
  %30 = icmp eq i32 %29, 6
  br i1 %30, label %56, label %31

31:                                               ; preds = %14, %9, %6, %25
  %32 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #7
  %33 = icmp eq %"class.v8::Value"* %32, null
  br i1 %33, label %56, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.v8::Value"* %32 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 3
  %38 = icmp eq i64 %37, 1
  br i1 %38, label %39, label %56

39:                                               ; preds = %34
  %40 = add i64 %36, -1
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = and i64 %36, -4294967296
  %44 = zext i32 %42 to i64
  %45 = or i64 %43, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %48, 67
  br i1 %49, label %50, label %56

50:                                               ; preds = %39
  %51 = add i64 %36, 23
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, -2
  %55 = icmp ne i32 %54, 10
  br label %56

56:                                               ; preds = %50, %39, %34, %31, %25, %1
  %57 = phi i1 [ false, %25 ], [ false, %1 ], [ true, %31 ], [ %55, %50 ], [ true, %34 ], [ true, %39 ]
  ret i1 %57
}

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #7
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #7
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #7
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !5

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #7
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !5

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PaymentHandlerResponse"* @_ZN5blink17NativeValueTraitsINS_22PaymentHandlerResponseEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 80) #7
  %5 = bitcast i8* %4 to %"class.blink::PaymentHandlerResponse"*
  tail call void @_ZN5blink22PaymentHandlerResponseC1Ev(%"class.blink::PaymentHandlerResponse"* %5) #7
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink24V8PaymentHandlerResponse6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_22PaymentHandlerResponseERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::PaymentHandlerResponse"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::PaymentHandlerResponse"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.321"* dereferenceable(16)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #7
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %9) #7
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #7
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #7
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #7
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #7
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #7
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #7
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #7
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #7
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #7
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #7
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #7
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #7
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #7
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #7
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.9, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0)) #7
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.9, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0)) #7
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #1

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8)) local_unnamed_addr #1

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare void @_ZN5blink22PaymentHandlerResponseC1Ev(%"class.blink::PaymentHandlerResponse"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !5

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.178"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.178"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !5

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.178"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !10

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !11

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #7
  br i1 %22, label %23, label %80, !prof !11

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #7
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #7
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #7
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !5

44:                                               ; preds = %35
  tail call void @llvm.trap() #7
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #7
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE3EE11PrepareFastEv(%"class.blink::V8StringResource.201"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %118, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %57

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp eq i16 %19, 67
  br i1 %20, label %21, label %46

21:                                               ; preds = %10
  %22 = add i64 %7, 23
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, -2
  switch i32 %25, label %46 [
    i32 6, label %26
    i32 10, label %26
  ]

26:                                               ; preds = %21, %21
  %27 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %0, i64 0, i32 2
  %28 = bitcast %"class.WTF::String"* %27 to i64*
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  store i64 0, i64* %28, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #7
  br label %45

45:                                               ; preds = %44, %41, %26
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br label %118

46:                                               ; preds = %21, %10
  %47 = add i64 %7, -1
  %48 = inttoptr i64 %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = and i64 %7, -4294967296
  %51 = zext i32 %49 to i64
  %52 = or i64 %50, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load i16, i16* %54, align 2
  %56 = icmp ult i16 %55, 64
  br i1 %56, label %118, label %57, !prof !11

57:                                               ; preds = %5, %46
  %58 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #7
  br i1 %58, label %59, label %116, !prof !11

59:                                               ; preds = %57
  %60 = bitcast %"class.blink::V8StringResource.201"* %0 to %"class.v8::Int32"**
  %61 = load %"class.v8::Int32"*, %"class.v8::Int32"** %60, align 8
  %62 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %61) #7
  %63 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %62) #7
  %64 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %0, i64 0, i32 2
  %65 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #7
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !5

80:                                               ; preds = %71
  tail call void @llvm.trap() #7
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %81, %66, %59
  %84 = ptrtoint %"class.WTF::StringImpl"* %63 to i64
  %85 = bitcast %"class.WTF::String"* %64 to i64*
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  store i64 %84, i64* %85, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #7
  br label %102

102:                                              ; preds = %83, %98, %101
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %65, label %118, label %103

103:                                              ; preds = %102
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %112
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #7
  br label %118

116:                                              ; preds = %57
  %117 = getelementptr inbounds %"class.blink::V8StringResource.201", %"class.blink::V8StringResource.201"* %0, i64 0, i32 1
  store i32 1, i32* %117, align 8
  br label %118

118:                                              ; preds = %115, %112, %102, %46, %1, %116, %45
  %119 = phi i1 [ false, %116 ], [ true, %45 ], [ true, %1 ], [ true, %46 ], [ true, %102 ], [ true, %112 ], [ true, %115 ]
  ret i1 %119
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink17NativeValueTraitsINS_9IDLObjectEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!4 = distinct !{!4, !"_ZN5blink17NativeValueTraitsINS_9IDLObjectEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK5blink22PaymentHandlerResponse7detailsEv: argument 0"}
!9 = distinct !{!9, !"_ZNK5blink22PaymentHandlerResponse7detailsEv"}
!10 = !{!"branch_weights", i32 2146410443, i32 1073205}
!11 = !{!"branch_weights", i32 2000, i32 1}
