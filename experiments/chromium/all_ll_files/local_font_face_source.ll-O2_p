; ModuleID = '../../third_party/blink/renderer/core/css/local_font_face_source.cc'
source_filename = "../../third_party/blink/renderer/core/css/local_font_face_source.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.528, %class.scoped_refptr.536, %class.scoped_refptr.546, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.552 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.527 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.527 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.553", [4 x i8] }>
%"class.WTF::RefCounted.553" = type { %"class.base::RefCounted.554" }
%"class.base::RefCounted.554" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.528 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.534", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.529" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.534" = type { %"class.base::RefCounted.535" }
%"class.base::RefCounted.535" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.536 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.537", %"class.WTF::RefCounted.544", [4 x i8] }>
%"class.blink::FontSettings.537" = type { %"class.WTF::Vector.538" }
%"class.WTF::Vector.538" = type { %"class.WTF::VectorBuffer.539" }
%"class.WTF::VectorBuffer.539" = type { %"class.WTF::VectorBufferBase.540" }
%"class.WTF::VectorBufferBase.540" = type { %"class.blink::FontTagValuePair.541"*, i32, i32 }
%"class.blink::FontTagValuePair.541" = type { i32, float }
%"class.WTF::RefCounted.544" = type { %"class.base::RefCounted.545" }
%"class.base::RefCounted.545" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.546 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.547", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.549, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.547" = type { %"class.base::RefCounted.548" }
%"class.base::RefCounted.548" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.81 }
%union.anon.81 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.549 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.550", [4 x i8] }>
%"class.WTF::RefCounted.550" = type { %"class.base::RefCounted.551" }
%"class.base::RefCounted.551" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.552 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.291", i32, [4 x i8], %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.429", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.435", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.440", %"class.std::__1::unique_ptr.446", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.458", %"class.std::__1::unique_ptr.464", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.471", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.294", %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.306", %"class.std::__1::unique_ptr.312", %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.335", %"class.std::__1::unique_ptr.342", %"class.std::__1::unique_ptr.342", %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.356", %"class.std::__1::unique_ptr.363", %"class.std::__1::unique_ptr.363", %"class.std::__1::unique_ptr.370", %"class.std::__1::unique_ptr.377", %"class.std::__1::unique_ptr.384", %"class.std::__1::unique_ptr.409", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.327" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.327" = type { %"struct.std::__1::__atomic_base.328" }
%"struct.std::__1::__atomic_base.328" = type { %"struct.std::__1::__atomic_base.329" }
%"struct.std::__1::__atomic_base.329" = type { %"struct.std::__1::__cxx_atomic_impl.330" }
%"struct.std::__1::__cxx_atomic_impl.330" = type { %"struct.std::__1::__cxx_atomic_base_impl.331" }
%"struct.std::__1::__cxx_atomic_base_impl.331" = type { i64 }
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.blink::Worklist.338"* }
%"class.blink::Worklist.338" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.327" }
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.blink::Worklist.345"* }
%"class.blink::Worklist.345" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.327" }
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.blink::Worklist.352"* }
%"class.blink::Worklist.352" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.327" }
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.blink::Worklist.359"* }
%"class.blink::Worklist.359" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.327" }
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.blink::Worklist.366"* }
%"class.blink::Worklist.366" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.327" }
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.blink::Worklist.373"* }
%"class.blink::Worklist.373" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.327" }
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.blink::Worklist.380"* }
%"class.blink::Worklist.380" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.327" }
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.387", %"class.std::__1::__compressed_pair.395", %"class.std::__1::__compressed_pair.400", %"class.std::__1::__compressed_pair.402", [4 x i8] }>
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389", %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { i64 }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { float }
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.412", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.421" }
%"class.WTF::Vector.421" = type { %"class.WTF::VectorBuffer.422" }
%"class.WTF::VectorBuffer.422" = type { %"class.WTF::VectorBufferBase.423" }
%"class.WTF::VectorBufferBase.423" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.435" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.438" }
%"class.WTF::VectorBuffer.438" = type { %"class.WTF::VectorBufferBase.439" }
%"class.WTF::VectorBufferBase.439" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.452" }
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.338"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.345"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.352"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.359"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.366"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.522" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.470 }
%class.scoped_refptr.470 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.471" = type { %"struct.std::__1::__atomic_base.472" }
%"struct.std::__1::__atomic_base.472" = type { %"struct.std::__1::__cxx_atomic_impl.473" }
%"struct.std::__1::__cxx_atomic_impl.473" = type { %"struct.std::__1::__cxx_atomic_base_impl.474" }
%"struct.std::__1::__cxx_atomic_base_impl.474" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" = type { [2 x i8] }
%"class.blink::LocalFontFaceSource" = type <{ %"class.blink::CSSFontFaceSource", %"class.blink::GarbageCollectedMixin", %"class.blink::Member", %"class.blink::Member.28", %"class.WTF::AtomicString", %"class.blink::LocalFontFaceSource::LocalFontHistograms", [7 x i8] }>
%"class.blink::CSSFontFaceSource" = type { i32 (...)**, %"class.WTF::HashMap", %"class.WTF::LinkedHashSet" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"struct.blink::FontCacheKey", %class.scoped_refptr.555 }
%"struct.blink::FontCacheKey" = type <{ %"class.blink::FontFaceCreationParams", i32, i32, float, [4 x i8], %class.scoped_refptr.536, i8, [7 x i8] }>
%"class.blink::FontFaceCreationParams" = type { i32, %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 }
%class.scoped_refptr.555 = type { %"class.blink::SimpleFontData"* }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.565", %class.scoped_refptr.571, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.556" }>
%"class.WTF::RefCounted.556" = type { %"class.base::RefCounted.557" }
%"class.base::RefCounted.557" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.558", %"class.absl::optional.558", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.558" = type { %"class.absl::optional_internal::optional_data.559" }
%"class.absl::optional_internal::optional_data.559" = type { %"class.absl::optional_internal::optional_data_base.560" }
%"class.absl::optional_internal::optional_data_base.560" = type { %"class.absl::optional_internal::optional_data_dtor_base.561" }
%"class.absl::optional_internal::optional_data_dtor_base.561" = type { i8, %union.anon.562 }
%union.anon.562 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp.563, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.564, i8, [7 x i8] }>
%class.sk_sp.563 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.188" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.188" }>
%"struct.std::__1::atomic.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__atomic_base.190" }
%"struct.std::__1::__atomic_base.190" = type { %"struct.std::__1::__cxx_atomic_impl.191" }
%"struct.std::__1::__cxx_atomic_impl.191" = type { %"struct.std::__1::__cxx_atomic_base_impl.192" }
%"struct.std::__1::__cxx_atomic_base_impl.192" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.207" }
%"struct.std::__1::atomic.207" = type { %"struct.std::__1::__atomic_base.208" }
%"struct.std::__1::__atomic_base.208" = type { %"struct.std::__1::__atomic_base.209" }
%"struct.std::__1::__atomic_base.209" = type { %"struct.std::__1::__cxx_atomic_impl.210" }
%"struct.std::__1::__cxx_atomic_impl.210" = type { %"struct.std::__1::__cxx_atomic_base_impl.211" }
%"struct.std::__1::__cxx_atomic_base_impl.211" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.564 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp.563, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.555, %class.scoped_refptr.555 }
%class.scoped_refptr.571 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.572", [4 x i8] }>
%"class.WTF::RefCounted.572" = type { %"class.base::RefCounted.573" }
%"class.base::RefCounted.573" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.0", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.0" = type { %"class.WTF::HashTable.1" }
%"class.WTF::HashTable.1" = type <{ %"struct.WTF::KeyValuePair.4"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4" = type { %"struct.blink::FontCacheKey", i32, [4 x i8] }
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector", i32, i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type { i32, i32, %"struct.blink::FontCacheKey" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSFontFace"* }
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::FontSelector"* }
%"class.blink::LocalFontFaceSource::LocalFontHistograms" = type { i8 }
%"class.blink::CSSFontFace" = type { %class.scoped_refptr, %"class.blink::HeapHashSet", %"class.blink::HeapDeque", %"class.blink::Member.26" }
%class.scoped_refptr = type { %"class.blink::UnicodeRangeSet"* }
%"class.blink::UnicodeRangeSet" = type { %"class.WTF::RefCounted", %"class.WTF::Vector.9" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.9" = type { %"class.WTF::VectorBuffer.10" }
%"class.WTF::VectorBuffer.10" = type { %"class.WTF::VectorBufferBase.11" }
%"class.WTF::VectorBufferBase.11" = type { %"struct.blink::UnicodeRange"*, i32, i32 }
%"struct.blink::UnicodeRange" = type { i32, i32 }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.16" }
%"class.WTF::HashTable.16" = type <{ %"class.blink::Member.18"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.18" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::CSSSegmentedFontFace"* }
%"class.blink::CSSSegmentedFontFace" = type { %"struct.blink::FontSelectionCapabilities", %"class.WTF::LruCache.586", %"class.blink::Member.593", i64 }
%"struct.blink::FontSelectionCapabilities" = type <{ %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", i8, i8 }>
%"struct.blink::FontSelectionRange" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.WTF::LruCache.586" = type { %"class.WTF::HashMap.587", %"class.WTF::DoublyLinkedList.592", i64 }
%"class.WTF::HashMap.587" = type { %"class.WTF::HashTable.588" }
%"class.WTF::HashTable.588" = type <{ %"struct.WTF::KeyValuePair.591"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.591" = type opaque
%"class.WTF::DoublyLinkedList.592" = type { %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* }
%"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey" = type opaque
%"class.blink::Member.593" = type { %"class.blink::MemberBase.594" }
%"class.blink::MemberBase.594" = type { %"class.blink::FontFaceList"* }
%"class.blink::FontFaceList" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.600", %"class.blink::Member.602", %"class.blink::Member.602", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.600" = type <{ %"class.blink::Member.602"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.26", %"class.blink::Member.602", %"class.blink::Member.602" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapDeque" = type { %"class.WTF::Deque" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::Member<blink::CSSFontFaceSource>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::CSSFontFaceSource>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.22" }
%"class.WTF::VectorBuffer.22" = type { %"class.WTF::VectorBufferBase.23" }
%"class.WTF::VectorBufferBase.23" = type { %"class.blink::Member.24"*, i32, i32 }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::CSSFontFaceSource"* }
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::FontFace"* }
%"class.blink::FontFace" = type { %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextClient", %"class.WTF::AtomicString", %"class.WTF::String", %"class.blink::Member.39", %"class.blink::Member.39", %"class.blink::Member.39", %"class.blink::Member.39", %"class.blink::Member.39", %"class.blink::Member.39", %"class.blink::Member.39", %"class.blink::Member.39", %"class.blink::Member.39", %"class.blink::Member.39", %"class.blink::Member.39", %"class.blink::Member.39", i32, %"class.blink::Member.43", %"class.blink::Member.45", %"class.blink::Member", %"class.blink::HeapVector" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.113", i32, i8, [3 x i8], %"class.blink::HeapVector.115", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.123", %"class.blink::Member.125", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.134", %"class.blink::Member.275", %"class.blink::Member.277", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.56" }
%"class.WTF::HashMap.56" = type { %"class.WTF::HashTable.57" }
%"class.WTF::HashTable.57" = type <{ %"struct.WTF::KeyValuePair.59"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.59" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.67" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.60" }
%"class.blink::HeapHashSet.60" = type { %"class.WTF::HashSet.63" }
%"class.WTF::HashSet.63" = type { %"class.WTF::HashTable.64" }
%"class.WTF::HashTable.64" = type <{ %"class.blink::WeakMember.66"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.66" = type opaque
%"class.blink::Supplementable.67" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.68" }
%"class.blink::HeapHashMap.68" = type { %"class.WTF::HashMap.71" }
%"class.WTF::HashMap.71" = type { %"class.WTF::HashTable.72" }
%"class.WTF::HashTable.72" = type <{ %"struct.WTF::KeyValuePair.74"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.74" = type { i8*, %"class.blink::Member.579" }
%"class.blink::Member.579" = type { %"class.blink::MemberBase.580" }
%"class.blink::MemberBase.580" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.581" }
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.75, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.102", %"class.blink::Member.108", i32, [4 x i8], %"class.WTF::HashSet.109", i32, i32 }
%class.scoped_refptr.75 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.76", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.78 }
%"class.WTF::RefCounted.76" = type { %"class.base::RefCounted.77" }
%"class.base::RefCounted.77" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.78 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.91", %"class.std::__1::map.100"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.std::__1::map.91" = type { %"class.std::__1::__tree.92" }
%"class.std::__1::__tree.92" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.std::__1::map.100" = type opaque
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.108" = type { %"class.blink::MemberBase.38" }
%"class.WTF::HashSet.109" = type { %"class.WTF::HashTable.110" }
%"class.WTF::HashTable.110" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.115" = type { %"class.WTF::Vector.118" }
%"class.WTF::Vector.118" = type { %"class.WTF::VectorBuffer.119" }
%"class.WTF::VectorBuffer.119" = type { %"class.WTF::VectorBufferBase.120" }
%"class.WTF::VectorBufferBase.120" = type { %"class.blink::Member.121"*, i32, i32 }
%"class.blink::Member.121" = type opaque
%"class.blink::Member.123" = type { %"class.blink::MemberBase.124" }
%"class.blink::MemberBase.124" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.127", i32, i32 }
%"class.blink::HeapHashMap.127" = type { %"class.WTF::HashMap.130" }
%"class.WTF::HashMap.130" = type { %"class.WTF::HashTable.131" }
%"class.WTF::HashTable.131" = type <{ %"struct.WTF::KeyValuePair.133"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.133" = type opaque
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.137" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.140" }
%"class.WTF::Vector.140" = type { %"class.WTF::VectorBuffer.141" }
%"class.WTF::VectorBuffer.141" = type { %"class.WTF::VectorBufferBase.142" }
%"class.WTF::VectorBufferBase.142" = type { %"class.mojo::StructPtr.143"*, i32, i32 }
%"class.mojo::StructPtr.143" = type { %"class.std::__1::unique_ptr.144" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.147", %"class.WTF::HashMap.154", %"class.WTF::HashMap.159", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.164", i32, %"class.mojo::StructPtr.169", %"class.WTF::Vector.164" }
%"class.mojo::StructPtr.147" = type { %"class.std::__1::unique_ptr.148" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.154" = type { %"class.WTF::HashTable.155" }
%"class.WTF::HashTable.155" = type <{ %"struct.WTF::KeyValuePair.158"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.158" = type opaque
%"class.WTF::HashMap.159" = type { %"class.WTF::HashTable.160" }
%"class.WTF::HashTable.160" = type <{ %"struct.WTF::KeyValuePair.163"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.163" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.169" = type { %"class.std::__1::unique_ptr.170" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.164", i8, i8, [6 x i8] }>
%"class.WTF::Vector.164" = type { %"class.WTF::VectorBuffer.165" }
%"class.WTF::VectorBuffer.165" = type { %"class.WTF::VectorBufferBase.166" }
%"class.WTF::VectorBufferBase.166" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.266" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.184", i32 }>
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.193", %"class.absl::optional.198", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.219", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.241", %"class.std::__1::map.252", i64, %"class.base::OnceCallback.212", %"class.base::OnceCallback.261", i8, %class.scoped_refptr.203, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.262" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.187 }
%class.scoped_refptr.187 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.188" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.193" = type { %"class.absl::optional_internal::optional_data.194" }
%"class.absl::optional_internal::optional_data.194" = type { %"class.absl::optional_internal::optional_data_base.195" }
%"class.absl::optional_internal::optional_data_base.195" = type { %"class.absl::optional_internal::optional_data_dtor_base.196" }
%"class.absl::optional_internal::optional_data_dtor_base.196" = type { i8, %union.anon.197 }
%union.anon.197 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.198" = type { %"class.absl::optional_internal::optional_data.199" }
%"class.absl::optional_internal::optional_data.199" = type { %"class.absl::optional_internal::optional_data_base.200" }
%"class.absl::optional_internal::optional_data_base.200" = type { %"class.absl::optional_internal::optional_data_dtor_base.201" }
%"class.absl::optional_internal::optional_data_dtor_base.201" = type { i8, %union.anon.202 }
%union.anon.202 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.212" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.203, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.205 }
%class.scoped_refptr.205 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.206", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.206" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.207" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.217 }
%class.scoped_refptr.217 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.289", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.203, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.289" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.218 }
%class.scoped_refptr.218 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.222", %class.scoped_refptr.223 }
%"class.base::RepeatingCallback.222" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.223 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.224", [4 x i8] }>
%"class.base::RefCountedThreadSafe.224" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.234", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.240" }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.240" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.241" = type { %"class.std::__1::__tree.242" }
%"class.std::__1::__tree.242" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.std::__1::map.252" = type { %"class.std::__1::__tree.253" }
%"class.std::__1::__tree.253" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.254", %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.base::OnceCallback.212" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.261" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.203 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.204" }>
%"class.base::RefCountedThreadSafe.204" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.212" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.262" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.275" = type { %"class.blink::MemberBase.276" }
%"class.blink::MemberBase.276" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.277" = type { %"class.blink::MemberBase.278" }
%"class.blink::MemberBase.278" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.125", i8, [7 x i8], %"class.WTF::Vector.140", %"class.blink::HeapVector.281", i8, [7 x i8], %"class.WTF::HashSet.109", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.281" = type { %"class.WTF::Vector.284" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.blink::Member.287"*, i32, i32 }
%"class.blink::Member.287" = type opaque
%"class.blink::Member.39" = type { %"class.blink::MemberBase.40" }
%"class.blink::MemberBase.40" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::DOMException"* }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.49" }
%"class.WTF::Vector.49" = type { %"class.WTF::VectorBuffer.50" }
%"class.WTF::VectorBuffer.50" = type { %"class.WTF::VectorBufferBase.51" }
%"class.WTF::VectorBufferBase.51" = type { %"class.blink::Member.52"*, i32, i32 }
%"class.blink::Member.52" = type opaque
%"class.blink::FontSelector" = type { %"class.blink::FontCacheClient", %"class.blink::Member.32" }
%"class.blink::FontCacheClient" = type { i32 (...)** }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::FontFallbackMap"* }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::FontGlobalContext" = type { %"class.blink::FontCache", %"class.std::__1::unique_ptr.505", %struct.hb_font_funcs_t*, %struct.hb_font_funcs_t*, %"class.std::__1::unique_ptr.511", %"class.WTF::LruCache", %"class.WTF::LruCache" }
%"class.blink::FontCache" = type <{ i8, [3 x i8], i32, %class.sk_sp, i16, i8, [5 x i8], %"class.blink::Persistent", %"class.WTF::HashMap.475", %"class.WTF::HashMap.480", %"class.blink::FontDataCache", %"class.blink::Persistent.503", float, [4 x i8] }>
%class.sk_sp = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::HeapHashSet.290"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashSet.290" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::HashMap.475" = type { %"class.WTF::HashTable.476" }
%"class.WTF::HashTable.476" = type <{ %"struct.WTF::KeyValuePair.479"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.479" = type opaque
%"class.WTF::HashMap.480" = type { %"class.WTF::HashTable.481" }
%"class.WTF::HashTable.481" = type <{ %"struct.WTF::KeyValuePair.484"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.484" = type opaque
%"class.blink::FontDataCache" = type { %"class.WTF::HashMap.485", %"class.WTF::LinkedHashSet.490" }
%"class.WTF::HashMap.485" = type { %"class.WTF::HashTable.486" }
%"class.WTF::HashTable.486" = type <{ %"struct.WTF::KeyValuePair.489"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.489" = type opaque
%"class.WTF::LinkedHashSet.490" = type { %"class.WTF::HashMap.491", %"class.WTF::VectorBackedLinkedList.496" }
%"class.WTF::HashMap.491" = type { %"class.WTF::HashTable.492" }
%"class.WTF::HashTable.492" = type <{ %"struct.WTF::KeyValuePair.495"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.495" = type opaque
%"class.WTF::VectorBackedLinkedList.496" = type { %"class.WTF::Vector.497", i32, i32 }
%"class.WTF::Vector.497" = type { %"class.WTF::VectorBuffer.498" }
%"class.WTF::VectorBuffer.498" = type { %"class.WTF::VectorBufferBase.499" }
%"class.WTF::VectorBufferBase.499" = type { %"class.WTF::VectorBackedLinkedListNode.500"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.500" = type opaque
%"class.blink::Persistent.503" = type { %"class.blink::PersistentBase.504" }
%"class.blink::PersistentBase.504" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.blink::HarfBuzzFontCache"* }
%"class.blink::HarfBuzzFontCache" = type opaque
%struct.hb_font_funcs_t = type opaque
%"class.std::__1::unique_ptr.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.blink::FontUniqueNameLookup"* }
%"class.blink::FontUniqueNameLookup" = type { i32 (...)** }
%"class.WTF::LruCache" = type { %"class.WTF::HashMap.517", %"class.WTF::DoublyLinkedList", i64 }
%"class.WTF::HashMap.517" = type { %"class.WTF::HashTable.518" }
%"class.WTF::HashTable.518" = type <{ %"struct.WTF::KeyValuePair.521"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.521" = type opaque
%"class.WTF::DoublyLinkedList" = type { %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* }
%"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey" = type opaque
%"struct.blink::FontMetricsOverride" = type { %"class.absl::optional.558", %"class.absl::optional.558", %"class.absl::optional.558" }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.556", [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::WeakPersistent.577" = type { %"class.blink::PersistentBase.578" }
%"class.blink::PersistentBase.578" = type { %"class.blink::LocalFontFaceSource"*, %"class.blink::PersistentNodePtr.576" }
%"class.blink::PersistentNodePtr.576" = type { %"class.blink::PersistentNode"* }
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::WeakPersistent.577" }
%"class.blink::FontCustomPlatformData" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::CSSCustomFontData" = type <{ %"class.blink::CustomFontData.base", [4 x i8], %"class.blink::WeakPersistent", i32, i8, [3 x i8] }>
%"class.blink::CustomFontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.572" }>
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.575" }
%"class.blink::PersistentBase.575" = type { %"class.blink::CSSFontFaceSource"*, %"class.blink::PersistentNodePtr.576" }

$_ZN5blink15FontDescriptionD2Ev = comdat any

$_ZNK5blink17CSSFontFaceSource6GetURLEv = comdat any

$_ZNK5blink17CSSFontFaceSource21GetCustomPlaftormDataEv = comdat any

$_ZN5blink17CSSFontFaceSource10SetDisplayENS_11FontDisplayE = comdat any

$_ZNK5blink17CSSFontFaceSource15IsInBlockPeriodEv = comdat any

$_ZNK5blink17CSSFontFaceSource17IsInFailurePeriodEv = comdat any

$_ZN5blink17CSSFontFaceSource12UpdatePeriodEv = comdat any

$_ZN5blink17CSSFontFaceSource12HadBlankTextEv = comdat any

$_ZN5blink17CSSFontFaceSource14PaintRequestedEv = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink12FontCacheKeyENS_18PartitionAllocatorEEC2Ev = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E14AppendSlowCaseIS5_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyES0_EEEEmm = comdat any

$_ZN5blink17CSSCustomFontDataD2Ev = comdat any

$_ZN5blink17CSSCustomFontDataD0Ev = comdat any

$_ZNK5blink17CSSCustomFontData17BeginLoadIfNeededEv = comdat any

$_ZNK5blink17CSSCustomFontData9IsLoadingEv = comdat any

$_ZNK5blink17CSSCustomFontData17IsLoadingFallbackEv = comdat any

$_ZNK5blink17CSSCustomFontData17ShouldSkipDrawingEv = comdat any

$_ZN5blink17CSSCustomFontData19ClearFontFaceSourceEv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17CSSFontFaceSourceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_17CSSFontFaceSourceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10FontFamilyD2Ev = comdat any

$_ZN5blink16SharedFontFamilyD2Ev = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19LocalFontFaceSourceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_19LocalFontFaceSourceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19LocalFontFaceSourceEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink19LocalFontFaceSourceEFvvEJNS2_14WeakPersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink19LocalFontFaceSourceEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink19LocalFontFaceSourceEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN5blink10TraceTraitINS_11CSSFontFaceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_12FontSelectorEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink17CSSCustomFontDataE = comdat any

@_ZTVN5blink19LocalFontFaceSourceE = hidden unnamed_addr constant { [21 x i8*], [3 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LocalFontFaceSource"*)* @_ZN5blink19LocalFontFaceSourceD2Ev to i8*), i8* bitcast (void (%"class.blink::LocalFontFaceSource"*)* @_ZN5blink19LocalFontFaceSourceD0Ev to i8*), i8* bitcast (i1 (%"class.blink::LocalFontFaceSource"*)* @_ZNK5blink19LocalFontFaceSource18IsLocalNonBlockingEv to i8*), i8* bitcast (i1 (%"class.blink::LocalFontFaceSource"*)* @_ZNK5blink19LocalFontFaceSource9IsLoadingEv to i8*), i8* bitcast (i1 (%"class.blink::LocalFontFaceSource"*)* @_ZNK5blink19LocalFontFaceSource8IsLoadedEv to i8*), i8* bitcast (i1 (%"class.blink::LocalFontFaceSource"*)* @_ZNK5blink19LocalFontFaceSource7IsValidEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::CSSFontFaceSource"*)* @_ZNK5blink17CSSFontFaceSource6GetURLEv to i8*), i8* bitcast (%"class.blink::FontCustomPlatformData"* (%"class.blink::CSSFontFaceSource"*)* @_ZNK5blink17CSSFontFaceSource21GetCustomPlaftormDataEv to i8*), i8* bitcast (i1 (%"class.blink::LocalFontFaceSource"*, %"class.blink::FontDescription"*)* @_ZNK5blink19LocalFontFaceSource20IsLocalFontAvailableERKNS_15FontDescriptionE to i8*), i8* bitcast (void (%"class.blink::LocalFontFaceSource"*)* @_ZN5blink19LocalFontFaceSource17BeginLoadIfNeededEv to i8*), i8* bitcast (void (%"class.blink::CSSFontFaceSource"*, i32)* @_ZN5blink17CSSFontFaceSource10SetDisplayENS_11FontDisplayE to i8*), i8* bitcast (i1 (%"class.blink::CSSFontFaceSource"*)* @_ZNK5blink17CSSFontFaceSource15IsInBlockPeriodEv to i8*), i8* bitcast (i1 (%"class.blink::CSSFontFaceSource"*)* @_ZNK5blink17CSSFontFaceSource17IsInFailurePeriodEv to i8*), i8* bitcast (i1 (%"class.blink::CSSFontFaceSource"*)* @_ZN5blink17CSSFontFaceSource12UpdatePeriodEv to i8*), i8* bitcast (i1 (%"class.blink::CSSFontFaceSource"*)* @_ZN5blink17CSSFontFaceSource12HadBlankTextEv to i8*), i8* bitcast (void (%"class.blink::CSSFontFaceSource"*)* @_ZN5blink17CSSFontFaceSource14PaintRequestedEv to i8*), i8* bitcast (void (%"class.blink::LocalFontFaceSource"*, %"class.blink::Visitor"*)* @_ZNK5blink19LocalFontFaceSource5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::SimpleFontData"* (%"class.blink::LocalFontFaceSource"*, %"class.blink::FontDescription"*, %"struct.blink::FontSelectionCapabilities"*)* @_ZN5blink19LocalFontFaceSource14CreateFontDataERKNS_15FontDescriptionERKNS_25FontSelectionCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::LocalFontFaceSource"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)* @_ZN5blink19LocalFontFaceSource16ReportFontLookupERKNS_15FontDescriptionEPNS_14SimpleFontDataEb to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.blink::LocalFontFaceSource"*, %"class.blink::Visitor"*)* @_ZThn80_NK5blink19LocalFontFaceSource5TraceEPNS_7VisitorE to i8*)] }, align 8
@__const._ZN5blink19LocalFontFaceSource14CreateFontDataERKNS_15FontDescriptionERKNS_25FontSelectionCapabilitiesE.unstyled_description = private unnamed_addr constant %"class.blink::FontDescription" { %"class.blink::FontFamily" { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr.34 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %class.scoped_refptr.527 { %"class.blink::SharedFontFamily"* inttoptr (i64 -6148914691236517206 to %"class.blink::SharedFontFamily"*) } }, %class.scoped_refptr.528 { %"class.blink::FontFeatureSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontFeatureSettings"*) }, %class.scoped_refptr.536 { %"class.blink::FontVariationSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontVariationSettings"*) }, %class.scoped_refptr.546 { %"class.blink::LayoutLocale"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutLocale"*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"struct.blink::FontSelectionRequest" { %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 } }, %"class.blink::FontSelectionValue" { i16 -21846 }, %union.anon.552 { %"struct.blink::FontDescription::BitFields" { i56 -24019198012642646 } } }, align 8
@.str = private unnamed_addr constant [22 x i8] c"WebFont.LocalFontUsed\00", align 1
@_ZTVN5blink17CSSFontFaceSourceE = external unnamed_addr constant { [21 x i8*] }, align 8
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [125 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::VectorBackedLinkedListNode<blink::FontCacheKey, WTF::PartitionAllocator>]\00", align 1
@_ZTVN5blink17CSSCustomFontDataE = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CSSCustomFontData"*)* @_ZN5blink17CSSCustomFontDataD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSCustomFontData"*)* @_ZN5blink17CSSCustomFontDataD0Ev to i8*), i8* bitcast (void (%"class.blink::CSSCustomFontData"*)* @_ZNK5blink17CSSCustomFontData17BeginLoadIfNeededEv to i8*), i8* bitcast (i1 (%"class.blink::CSSCustomFontData"*)* @_ZNK5blink17CSSCustomFontData9IsLoadingEv to i8*), i8* bitcast (i1 (%"class.blink::CSSCustomFontData"*)* @_ZNK5blink17CSSCustomFontData17IsLoadingFallbackEv to i8*), i8* bitcast (i1 (%"class.blink::CSSCustomFontData"*)* @_ZNK5blink17CSSCustomFontData17ShouldSkipDrawingEv to i8*), i8* bitcast (void (%"class.blink::CSSCustomFontData"*)* @_ZN5blink17CSSCustomFontData19ClearFontFaceSourceEv to i8*)] }, comdat, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink13CoreProbeSink16s_existingAgentsE = external local_unnamed_addr global %"struct.std::__1::atomic", align 4
@_ZZN5blinkL16NormalWidthValueEvE18s_normalWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue = internal global i64 0, align 8
@_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue = internal global i64 0, align 8
@_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue = internal global i64 0, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8

@_ZN5blink19LocalFontFaceSourceC1EPNS_11CSSFontFaceEPNS_12FontSelectorERKN3WTF6StringE = hidden unnamed_addr alias void (%"class.blink::LocalFontFaceSource"*, %"class.blink::CSSFontFace"*, %"class.blink::FontSelector"*, %"class.WTF::String"*), void (%"class.blink::LocalFontFaceSource"*, %"class.blink::CSSFontFace"*, %"class.blink::FontSelector"*, %"class.WTF::String"*)* @_ZN5blink19LocalFontFaceSourceC2EPNS_11CSSFontFaceEPNS_12FontSelectorERKN3WTF6StringE
@_ZN5blink19LocalFontFaceSourceD1Ev = hidden unnamed_addr alias void (%"class.blink::LocalFontFaceSource"*), void (%"class.blink::LocalFontFaceSource"*)* @_ZN5blink19LocalFontFaceSourceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19LocalFontFaceSourceC2EPNS_11CSSFontFaceEPNS_12FontSelectorERKN3WTF6StringE(%"class.blink::LocalFontFaceSource"*, %"class.blink::CSSFontFace"*, %"class.blink::FontSelector"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN5blink17CSSFontFaceSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.WTF::HashMap"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #12
  %8 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 0, i32 2
  %9 = bitcast %"class.WTF::LinkedHashSet"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #12
  %10 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 0, i32 2, i32 1
  tail call void @_ZN3WTF22VectorBackedLinkedListIN5blink12FontCacheKeyENS_18PartitionAllocatorEEC2Ev(%"class.WTF::VectorBackedLinkedList"* %10) #12
  %11 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [3 x i8*] }, { [21 x i8*], [3 x i8*] }* @_ZTVN5blink19LocalFontFaceSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [3 x i8*] }, { [21 x i8*], [3 x i8*] }* @_ZTVN5blink19LocalFontFaceSourceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::CSSFontFace"* %1, %"class.blink::CSSFontFace"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::FontSelector"* %2, %"class.blink::FontSelector"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %41, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 acquire, align 4
  %21 = and i32 %20, 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %39, label %23

23:                                               ; preds = %18
  %24 = load atomic i32, i32* %19 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %41

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i33
  %31 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %30, i33 1) #12
  %32 = extractvalue { i33, i1 } %31, 1
  %33 = extractvalue { i33, i1 } %31, 0
  %34 = icmp slt i33 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %37, !prof !2

36:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

37:                                               ; preds = %27
  %38 = trunc i33 %33 to i32
  store i32 %38, i32* %28, align 4
  br label %41

39:                                               ; preds = %18
  %40 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %16) #12
  br label %41

41:                                               ; preds = %4, %23, %37, %39
  %42 = phi %"class.WTF::StringImpl"* [ %40, %39 ], [ %16, %23 ], [ %16, %37 ], [ null, %4 ]
  %43 = ptrtoint %"class.WTF::StringImpl"* %42 to i64
  %44 = bitcast %"class.WTF::AtomicString"* %14 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 5, i32 0
  store i8 0, i8* %45, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19LocalFontFaceSourceD2Ev(%"class.blink::LocalFontFaceSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [3 x i8*] }, { [21 x i8*], [3 x i8*] }* @_ZTVN5blink19LocalFontFaceSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [3 x i8*] }, { [21 x i8*], [3 x i8*] }* @_ZTVN5blink19LocalFontFaceSourceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #12
  br label %20

20:                                               ; preds = %1, %16, %19
  %21 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 0
  tail call void @_ZN5blink17CSSFontFaceSourceD2Ev(%"class.blink::CSSFontFaceSource"* %21) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink17CSSFontFaceSourceD2Ev(%"class.blink::CSSFontFaceSource"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19LocalFontFaceSourceD0Ev(%"class.blink::LocalFontFaceSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [3 x i8*] }, { [21 x i8*], [3 x i8*] }* @_ZTVN5blink19LocalFontFaceSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [3 x i8*] }, { [21 x i8*], [3 x i8*] }* @_ZTVN5blink19LocalFontFaceSourceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #12
  br label %20

20:                                               ; preds = %1, %16, %19
  %21 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 0
  tail call void @_ZN5blink17CSSFontFaceSourceD2Ev(%"class.blink::CSSFontFaceSource"* %21) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19LocalFontFaceSource18IsLocalNonBlockingEv(%"class.blink::LocalFontFaceSource"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1) #12
  %3 = tail call %"class.blink::FontUniqueNameLookup"* @_ZN5blink17FontGlobalContext23GetFontUniqueNameLookupEv() #12
  %4 = icmp eq %"class.blink::FontUniqueNameLookup"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::FontUniqueNameLookup"* %3 to i1 (%"class.blink::FontUniqueNameLookup"*)***
  %7 = load i1 (%"class.blink::FontUniqueNameLookup"*)**, i1 (%"class.blink::FontUniqueNameLookup"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::FontUniqueNameLookup"*)*, i1 (%"class.blink::FontUniqueNameLookup"*)** %7, i64 3
  %9 = load i1 (%"class.blink::FontUniqueNameLookup"*)*, i1 (%"class.blink::FontUniqueNameLookup"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::FontUniqueNameLookup"* nonnull %3) #12
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ %10, %5 ], [ true, %1 ]
  ret i1 %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32) local_unnamed_addr #3

declare %"class.blink::FontUniqueNameLookup"* @_ZN5blink17FontGlobalContext23GetFontUniqueNameLookupEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19LocalFontFaceSource20IsLocalFontAvailableERKNS_15FontDescriptionE(%"class.blink::LocalFontFaceSource"*, %"class.blink::FontDescription"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #12
  %4 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 4
  %5 = tail call zeroext i1 @_ZN5blink9FontCache38IsPlatformFontUniqueNameMatchAvailableERKNS_15FontDescriptionERKN3WTF12AtomicStringE(%"class.blink::FontCache"* %3, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.WTF::AtomicString"* dereferenceable(8) %4) #12
  %6 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %6, align 8
  %8 = bitcast %"class.blink::FontSelector"* %7 to void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)***
  %9 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)**, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)*** %8, align 8
  br i1 %5, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)** %9, i64 10
  %12 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)** %11, align 8
  tail call void %12(%"class.blink::FontSelector"* %7, %"class.WTF::AtomicString"* dereferenceable(8) %4) #12
  br label %16

13:                                               ; preds = %2
  %14 = getelementptr inbounds void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)** %9, i64 11
  %15 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)** %14, align 8
  tail call void %15(%"class.blink::FontSelector"* %7, %"class.WTF::AtomicString"* dereferenceable(8) %4) #12
  br label %16

16:                                               ; preds = %13, %10
  ret i1 %5
}

declare %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink9FontCache38IsPlatformFontUniqueNameMatchAvailableERKNS_15FontDescriptionERKN3WTF12AtomicStringE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZN5blink19LocalFontFaceSource29CreateLoadingFallbackFontDataERKNS_15FontDescriptionE(%"class.blink::LocalFontFaceSource"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::FontMetricsOverride", align 4
  %4 = tail call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #12
  %5 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %5, align 4
  %8 = tail call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #12
  %9 = tail call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainE(%"class.blink::FontCache"* %8, %"class.blink::FontDescription"* dereferenceable(80) %1, i32 1) #12
  %10 = icmp eq %"class.blink::SimpleFontData"* %9, null
  br i1 %10, label %92, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 0
  %13 = tail call noalias i8* @malloc(i64 40) #12
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 1, i32* %15, align 4
  %16 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink17CSSCustomFontDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 16
  %18 = bitcast i8* %17 to %"class.blink::CSSFontFaceSource"**
  store %"class.blink::CSSFontFaceSource"* %12, %"class.blink::CSSFontFaceSource"** %18, align 8
  %19 = getelementptr inbounds i8, i8* %13, i64 24
  %20 = bitcast i8* %19 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  %21 = ptrtoint %"class.blink::LocalFontFaceSource"* %0 to i64
  switch i64 %21, label %22 [
    i64 0, label %48
    i64 -1, label %48
  ]

22:                                               ; preds = %11
  %23 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %24 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %23, i64 0, i32 1
  %25 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %24) #12
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %22
  %28 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %24, i8* %28) #12
  br label %29

29:                                               ; preds = %27, %22
  %30 = phi i8* [ %28, %27 ], [ %25, %22 ]
  %31 = bitcast i8* %30 to %"class.blink::ThreadState"**
  %32 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  %34 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %35, align 8
  %37 = icmp eq %"class.blink::PersistentNode"* %36, null
  br i1 %37, label %38, label %41, !prof !2

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %34, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %39) #12
  %40 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %35, align 8
  br label %41

41:                                               ; preds = %38, %29
  %42 = phi %"class.blink::PersistentNode"* [ %40, %38 ], [ %36, %29 ]
  %43 = bitcast %"class.blink::PersistentNode"* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::PersistentRegion"* %34 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %42, i64 0, i32 0
  store i8* %17, i8** %46, align 8
  %47 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %42, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17CSSFontFaceSourceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %47, align 8
  store %"class.blink::PersistentNode"* %42, %"class.blink::PersistentNode"** %20, align 8
  br label %48

48:                                               ; preds = %11, %11, %41
  %49 = getelementptr inbounds i8, i8* %13, i64 32
  %50 = bitcast i8* %49 to i32*
  store i32 1, i32* %50, align 8
  %51 = getelementptr inbounds i8, i8* %13, i64 36
  store i8 0, i8* %51, align 4
  %52 = icmp eq %"class.blink::LocalFontFaceSource"* %0, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %48
  %54 = bitcast %"class.blink::LocalFontFaceSource"* %0 to i1 (%"class.blink::CSSFontFaceSource"*)***
  %55 = load i1 (%"class.blink::CSSFontFaceSource"*)**, i1 (%"class.blink::CSSFontFaceSource"*)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %55, i64 3
  %57 = load i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::CSSFontFaceSource"* nonnull %12) #12
  %59 = zext i1 %58 to i8
  store i8 %59, i8* %51, align 4
  br label %60

60:                                               ; preds = %48, %53
  %61 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %9, i64 0, i32 5
  %62 = bitcast i8* %13 to %"class.blink::CustomFontData"*
  %63 = icmp eq i8* %13, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %60
  %65 = bitcast i8* %14 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %65) #12
  br label %66

66:                                               ; preds = %60, %64
  %67 = tail call noalias i8* @malloc(i64 224) #12
  %68 = bitcast i8* %67 to %"class.blink::SimpleFontData"*
  %69 = getelementptr inbounds %"struct.blink::FontMetricsOverride", %"struct.blink::FontMetricsOverride"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %69, i8 0, i64 24, i1 false) #12
  call void @_ZN5blink14SimpleFontDataC1ERKNS_16FontPlatformDataE13scoped_refptrINS_14CustomFontDataEEbRKNS_19FontMetricsOverrideE(%"class.blink::SimpleFontData"* %68, %"class.blink::FontPlatformData"* dereferenceable(72) %61, %"class.blink::CustomFontData"* %62, i1 zeroext false, %"struct.blink::FontMetricsOverride"* nonnull dereferenceable(24) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #12
  br i1 %63, label %79, label %70

70:                                               ; preds = %66
  %71 = bitcast i8* %14 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %71) #12
  %72 = load i32, i32* %15, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %79

74:                                               ; preds = %70
  %75 = bitcast i8* %13 to void (%"class.blink::CustomFontData"*)***
  %76 = load void (%"class.blink::CustomFontData"*)**, void (%"class.blink::CustomFontData"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.blink::CustomFontData"*)*, void (%"class.blink::CustomFontData"*)** %76, i64 1
  %78 = load void (%"class.blink::CustomFontData"*)*, void (%"class.blink::CustomFontData"*)** %77, align 8
  call void %78(%"class.blink::CustomFontData"* nonnull %62) #12
  br label %79

79:                                               ; preds = %74, %70, %66
  %80 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %9, i64 0, i32 0, i32 1, i32 0
  %81 = getelementptr inbounds %"class.base::RefCounted.557", %"class.base::RefCounted.557"* %80, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %81) #12
  %82 = getelementptr inbounds %"class.base::RefCounted.557", %"class.base::RefCounted.557"* %80, i64 0, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %92

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.base::RefCounted.557", %"class.base::RefCounted.557"* %80, i64 -2
  %87 = bitcast %"class.base::RefCounted.557"* %86 to %"class.blink::FontData"*
  %88 = bitcast %"class.base::RefCounted.557"* %86 to void (%"class.blink::FontData"*)***
  %89 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %89, i64 1
  %91 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %90, align 8
  call void %91(%"class.blink::FontData"* nonnull %87) #12
  br label %92

92:                                               ; preds = %2, %79, %85
  %93 = phi %"class.blink::SimpleFontData"* [ %68, %79 ], [ %68, %85 ], [ null, %2 ]
  %94 = call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #12
  %95 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %94, i64 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = add nsw i32 %96, -1
  store i32 %97, i32* %95, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %92
  call void @_ZN5blink9FontCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontCache"* %94, i32 0) #12
  br label %100

100:                                              ; preds = %92, %99
  ret %"class.blink::SimpleFontData"* %93
}

declare %"class.blink::SimpleFontData"* @_ZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZN5blink19LocalFontFaceSource14CreateFontDataERKNS_15FontDescriptionERKNS_25FontSelectionCapabilitiesE(%"class.blink::LocalFontFaceSource"*, %"class.blink::FontDescription"* dereferenceable(80), %"struct.blink::FontSelectionCapabilities"* nocapture readnone dereferenceable(14)) unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"class.blink::FontDescription", align 8
  %6 = tail call zeroext i1 @_ZNK5blink19LocalFontFaceSource7IsValidEv(%"class.blink::LocalFontFaceSource"* %0)
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 4
  %11 = bitcast %"class.blink::FontSelector"* %9 to void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)***
  %12 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)**, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)** %12, i64 13
  %14 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)** %13, align 8
  tail call void %14(%"class.blink::FontSelector"* %9, %"class.WTF::AtomicString"* dereferenceable(8) %10, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::SimpleFontData"* null, i1 zeroext false) #12
  br label %96

15:                                               ; preds = %3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 1, i8* %4, align 1
  %16 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %16, align 8
  %18 = bitcast %"class.blink::FontSelector"* %17 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %19 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %19, i64 21
  %21 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %20, align 8
  %22 = tail call %"class.blink::ExecutionContext"* %21(%"class.blink::FontSelector"* %17) #12
  %23 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %24 = and i32 %23, 32
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  call void @_ZN5blink5probe21LocalFontsEnabledImplEPNS_16ExecutionContextEPb(%"class.blink::ExecutionContext"* %22, i8* nonnull %4) #12
  br label %27

27:                                               ; preds = %15, %26
  %28 = load i8, i8* %4, align 1, !range !3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %94, label %30

30:                                               ; preds = %27
  %31 = call zeroext i1 @_ZNK5blink19LocalFontFaceSource7IsValidEv(%"class.blink::LocalFontFaceSource"* %0)
  br i1 %31, label %32, label %51

32:                                               ; preds = %30
  %33 = call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1) #12
  %34 = call %"class.blink::FontUniqueNameLookup"* @_ZN5blink17FontGlobalContext23GetFontUniqueNameLookupEv() #12
  %35 = icmp eq %"class.blink::FontUniqueNameLookup"* %34, null
  br i1 %35, label %51, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.blink::FontUniqueNameLookup"* %34 to i1 (%"class.blink::FontUniqueNameLookup"*)***
  %38 = load i1 (%"class.blink::FontUniqueNameLookup"*)**, i1 (%"class.blink::FontUniqueNameLookup"*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::FontUniqueNameLookup"*)*, i1 (%"class.blink::FontUniqueNameLookup"*)** %38, i64 3
  %40 = load i1 (%"class.blink::FontUniqueNameLookup"*)*, i1 (%"class.blink::FontUniqueNameLookup"*)** %39, align 8
  %41 = call zeroext i1 %40(%"class.blink::FontUniqueNameLookup"* nonnull %34) #12
  br i1 %41, label %51, label %42

42:                                               ; preds = %36
  %43 = call %"class.blink::SimpleFontData"* @_ZN5blink19LocalFontFaceSource29CreateLoadingFallbackFontDataERKNS_15FontDescriptionE(%"class.blink::LocalFontFaceSource"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1)
  %44 = ptrtoint %"class.blink::SimpleFontData"* %43 to i64
  %45 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %16, align 8
  %46 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 4
  %47 = bitcast %"class.blink::FontSelector"* %45 to void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)***
  %48 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)**, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)** %48, i64 13
  %50 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)** %49, align 8
  call void %50(%"class.blink::FontSelector"* %45, %"class.WTF::AtomicString"* dereferenceable(8) %46, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::SimpleFontData"* %43, i1 zeroext true) #12
  br label %94

51:                                               ; preds = %36, %32, %30
  %52 = bitcast %"class.blink::FontDescription"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %52) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 8 bitcast (%"class.blink::FontDescription"* @__const._ZN5blink19LocalFontFaceSource14CreateFontDataERKNS_15FontDescriptionERKNS_25FontSelectionCapabilitiesE.unstyled_description to i8*), i64 80, i1 false)
  call void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"* nonnull %5, %"class.blink::FontDescription"* dereferenceable(80) %1) #12
  %53 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i8*) acquire, align 8
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %59, !prof !4

55:                                               ; preds = %51
  %56 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue) #12
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  store i16 400, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue) #12
  br label %59

59:                                               ; preds = %51, %55, %58
  %60 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i16*), align 2
  %61 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %5, i64 0, i32 10, i32 1, i32 0
  store i16 %60, i16* %61, align 2
  %62 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %68, !prof !4

64:                                               ; preds = %59
  %65 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #12
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #12
  br label %68

68:                                               ; preds = %59, %64, %67
  %69 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  call void @_ZN5blink15FontDescription8SetStyleENS_18FontSelectionValueE(%"class.blink::FontDescription"* nonnull %5, i16 %69) #12
  %70 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i8*) acquire, align 8
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %76, !prof !4

72:                                               ; preds = %68
  %73 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #12
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %72
  store i16 1600, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #12
  br label %76

76:                                               ; preds = %68, %72, %75
  %77 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  %78 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %5, i64 0, i32 10, i32 0, i32 0
  store i16 %77, i16* %78, align 8
  %79 = call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #12
  %80 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 4
  %81 = call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache11GetFontDataERKNS_15FontDescriptionERKN3WTF12AtomicStringENS_17AlternateFontNameENS_12ShouldRetainE(%"class.blink::FontCache"* %79, %"class.blink::FontDescription"* nonnull dereferenceable(80) %5, %"class.WTF::AtomicString"* dereferenceable(8) %80, i32 2, i32 0) #12
  %82 = ptrtoint %"class.blink::SimpleFontData"* %81 to i64
  %83 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 5, i32 0
  %84 = load i8, i8* %83, align 1, !range !3
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %76
  %87 = icmp ne %"class.blink::SimpleFontData"* %81, null
  store i8 1, i8* %83, align 1
  call void @_ZN4base19UmaHistogramBooleanEPKcb(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i1 zeroext %87) #12
  br label %88

88:                                               ; preds = %86, %76
  %89 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %16, align 8
  %90 = bitcast %"class.blink::FontSelector"* %89 to void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)***
  %91 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)**, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)** %91, i64 13
  %93 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)** %92, align 8
  call void %93(%"class.blink::FontSelector"* %89, %"class.WTF::AtomicString"* dereferenceable(8) %80, %"class.blink::FontDescription"* nonnull dereferenceable(80) %5, %"class.blink::SimpleFontData"* %81, i1 zeroext false) #12
  call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %52) #12
  br label %94

94:                                               ; preds = %27, %42, %88
  %95 = phi i64 [ %44, %42 ], [ %82, %88 ], [ 0, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  br label %96

96:                                               ; preds = %94, %7
  %97 = phi i64 [ %95, %94 ], [ 0, %7 ]
  %98 = inttoptr i64 %97 to %"class.blink::SimpleFontData"*
  ret %"class.blink::SimpleFontData"* %98
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19LocalFontFaceSource7IsValidEv(%"class.blink::LocalFontFaceSource"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::FontDescription", align 8
  %3 = tail call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1) #12
  %4 = tail call %"class.blink::FontUniqueNameLookup"* @_ZN5blink17FontGlobalContext23GetFontUniqueNameLookupEv() #12
  %5 = icmp eq %"class.blink::FontUniqueNameLookup"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::FontUniqueNameLookup"* %4 to i1 (%"class.blink::FontUniqueNameLookup"*)***
  %8 = load i1 (%"class.blink::FontUniqueNameLookup"*)**, i1 (%"class.blink::FontUniqueNameLookup"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::FontUniqueNameLookup"*)*, i1 (%"class.blink::FontUniqueNameLookup"*)** %8, i64 3
  %10 = load i1 (%"class.blink::FontUniqueNameLookup"*)*, i1 (%"class.blink::FontUniqueNameLookup"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::FontUniqueNameLookup"* nonnull %4) #12
  br i1 %11, label %12, label %28

12:                                               ; preds = %6, %1
  %13 = bitcast %"class.blink::FontDescription"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %13) #12
  call void @_ZN5blink15FontDescriptionC1Ev(%"class.blink::FontDescription"* nonnull %2) #12
  %14 = call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #12
  %15 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 4
  %16 = call zeroext i1 @_ZN5blink9FontCache38IsPlatformFontUniqueNameMatchAvailableERKNS_15FontDescriptionERKN3WTF12AtomicStringE(%"class.blink::FontCache"* %14, %"class.blink::FontDescription"* nonnull dereferenceable(80) %2, %"class.WTF::AtomicString"* dereferenceable(8) %15) #12
  %17 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %17, align 8
  %19 = bitcast %"class.blink::FontSelector"* %18 to void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)***
  %20 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)**, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)*** %19, align 8
  br i1 %16, label %21, label %24

21:                                               ; preds = %12
  %22 = getelementptr inbounds void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)** %20, i64 10
  %23 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)** %22, align 8
  call void %23(%"class.blink::FontSelector"* %18, %"class.WTF::AtomicString"* dereferenceable(8) %15) #12
  br label %27

24:                                               ; preds = %12
  %25 = getelementptr inbounds void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)** %20, i64 11
  %26 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)** %25, align 8
  call void %26(%"class.blink::FontSelector"* %18, %"class.WTF::AtomicString"* dereferenceable(8) %15) #12
  br label %27

27:                                               ; preds = %21, %24
  call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %13) #12
  br label %28

28:                                               ; preds = %6, %27
  %29 = phi i1 [ %16, %27 ], [ true, %6 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19LocalFontFaceSource16ReportFontLookupERKNS_15FontDescriptionEPNS_14SimpleFontDataEb(%"class.blink::LocalFontFaceSource"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::SimpleFontData"*, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 4
  %8 = bitcast %"class.blink::FontSelector"* %6 to void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)***
  %9 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)**, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)** %9, i64 13
  %11 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)** %10, align 8
  tail call void %11(%"class.blink::FontSelector"* %6, %"class.WTF::AtomicString"* dereferenceable(8) %7, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::SimpleFontData"* %2, i1 zeroext %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19LocalFontFaceSource9IsLoadingEv(%"class.blink::LocalFontFaceSource"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1) #12
  %3 = tail call %"class.blink::FontUniqueNameLookup"* @_ZN5blink17FontGlobalContext23GetFontUniqueNameLookupEv() #12
  %4 = icmp eq %"class.blink::FontUniqueNameLookup"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::FontUniqueNameLookup"* %3 to i1 (%"class.blink::FontUniqueNameLookup"*)***
  %7 = load i1 (%"class.blink::FontUniqueNameLookup"*)**, i1 (%"class.blink::FontUniqueNameLookup"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::FontUniqueNameLookup"*)*, i1 (%"class.blink::FontUniqueNameLookup"*)** %7, i64 3
  %9 = load i1 (%"class.blink::FontUniqueNameLookup"*)*, i1 (%"class.blink::FontUniqueNameLookup"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::FontUniqueNameLookup"* nonnull %3) #12
  %11 = xor i1 %10, true
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi i1 [ %11, %5 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"*, %"class.blink::FontDescription"* dereferenceable(80)) unnamed_addr #3

declare void @_ZN5blink15FontDescription8SetStyleENS_18FontSelectionValueE(%"class.blink::FontDescription"*, i16) local_unnamed_addr #3

declare %"class.blink::SimpleFontData"* @_ZN5blink9FontCache11GetFontDataERKNS_15FontDescriptionERKN3WTF12AtomicStringENS_17AlternateFontNameENS_12ShouldRetainE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::AtomicString"* dereferenceable(8), i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19LocalFontFaceSource19LocalFontHistograms6RecordEb(%"class.blink::LocalFontFaceSource::LocalFontHistograms"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LocalFontFaceSource::LocalFontHistograms", %"class.blink::LocalFontFaceSource::LocalFontHistograms"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 1, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i8 1, i8* %3, align 1
  tail call void @_ZN4base19UmaHistogramBooleanEPKcb(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i1 zeroext %1) #12
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutLocale"* %3, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  %7 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %55

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 5, i32 0
  %12 = load %"class.blink::Hyphenation"*, %"class.blink::Hyphenation"** %11, align 8
  %13 = icmp eq %"class.blink::Hyphenation"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::Hyphenation", %"class.blink::Hyphenation"* %12, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.base::RefCounted.551", %"class.base::RefCounted.551"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #12
  %17 = getelementptr inbounds %"class.base::RefCounted.551", %"class.base::RefCounted.551"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::RefCounted.551", %"class.base::RefCounted.551"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted.551"* %21 to %"class.blink::Hyphenation"*
  %23 = bitcast %"class.base::RefCounted.551"* %21 to void (%"class.blink::Hyphenation"*)***
  %24 = load void (%"class.blink::Hyphenation"*)**, void (%"class.blink::Hyphenation"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %24, i64 1
  %26 = load void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %25, align 8
  tail call void %26(%"class.blink::Hyphenation"* nonnull %22) #12
  br label %27

27:                                               ; preds = %20, %14, %10
  %28 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 3
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #13
  br label %36

36:                                               ; preds = %33, %27
  %37 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #12
  br label %53

53:                                               ; preds = %36, %49, %52
  %54 = bitcast %"class.blink::LayoutLocale"* %3 to i8*
  tail call void @free(i8* %54) #12
  br label %55

55:                                               ; preds = %1, %5, %53
  %56 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 2, i32 0
  %57 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %56, align 8
  %58 = icmp eq %"class.blink::FontVariationSettings"* %57, null
  br i1 %58, label %79, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %57, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.base::RefCounted.545", %"class.base::RefCounted.545"* %60, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #12
  %62 = getelementptr inbounds %"class.base::RefCounted.545", %"class.base::RefCounted.545"* %60, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %79

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.base::RefCounted.545", %"class.base::RefCounted.545"* %60, i64 -4
  %67 = bitcast %"class.base::RefCounted.545"* %66 to %"class.blink::FontTagValuePair.541"**
  %68 = load %"class.blink::FontTagValuePair.541"*, %"class.blink::FontTagValuePair.541"** %67, align 8
  %69 = icmp eq %"class.blink::FontTagValuePair.541"* %68, null
  %70 = bitcast %"class.blink::FontTagValuePair.541"* %68 to i8*
  br i1 %69, label %77, label %71, !prof !5

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.base::RefCounted.545", %"class.base::RefCounted.545"* %60, i64 -1, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !2

75:                                               ; preds = %71
  store i32 0, i32* %72, align 4
  br label %76

76:                                               ; preds = %75, %71
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #12
  br label %77

77:                                               ; preds = %76, %65
  %78 = bitcast %"class.base::RefCounted.545"* %66 to i8*
  tail call void @free(i8* %78) #12
  br label %79

79:                                               ; preds = %55, %59, %77
  %80 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 1, i32 0
  %81 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %80, align 8
  %82 = icmp eq %"class.blink::FontFeatureSettings"* %81, null
  br i1 %82, label %103, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %81, i64 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.base::RefCounted.535", %"class.base::RefCounted.535"* %84, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %85) #12
  %86 = getelementptr inbounds %"class.base::RefCounted.535", %"class.base::RefCounted.535"* %84, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %103

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.base::RefCounted.535", %"class.base::RefCounted.535"* %84, i64 -4
  %91 = bitcast %"class.base::RefCounted.535"* %90 to %"class.blink::FontTagValuePair"**
  %92 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %91, align 8
  %93 = icmp eq %"class.blink::FontTagValuePair"* %92, null
  %94 = bitcast %"class.blink::FontTagValuePair"* %92 to i8*
  br i1 %93, label %101, label %95, !prof !5

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.base::RefCounted.535", %"class.base::RefCounted.535"* %84, i64 -1, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99, !prof !2

99:                                               ; preds = %95
  store i32 0, i32* %96, align 4
  br label %100

100:                                              ; preds = %99, %95
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %94) #12
  br label %101

101:                                              ; preds = %100, %89
  %102 = bitcast %"class.base::RefCounted.535"* %90 to i8*
  tail call void @free(i8* %102) #12
  br label %103

103:                                              ; preds = %79, %83, %101
  %104 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %104) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19LocalFontFaceSource17BeginLoadIfNeededEv(%"class.blink::LocalFontFaceSource"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.212", align 8
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to { i64, i64 }*
  %5 = alloca %"class.blink::WeakPersistent.577", align 8
  %6 = tail call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1) #12
  %7 = tail call %"class.blink::FontUniqueNameLookup"* @_ZN5blink17FontGlobalContext23GetFontUniqueNameLookupEv() #12
  %8 = icmp eq %"class.blink::FontUniqueNameLookup"* %7, null
  br i1 %8, label %83, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::FontUniqueNameLookup"* %7 to i1 (%"class.blink::FontUniqueNameLookup"*)***
  %11 = load i1 (%"class.blink::FontUniqueNameLookup"*)**, i1 (%"class.blink::FontUniqueNameLookup"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::FontUniqueNameLookup"*)*, i1 (%"class.blink::FontUniqueNameLookup"*)** %11, i64 3
  %13 = load i1 (%"class.blink::FontUniqueNameLookup"*)*, i1 (%"class.blink::FontUniqueNameLookup"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::FontUniqueNameLookup"* nonnull %7) #12
  br i1 %14, label %83, label %15

15:                                               ; preds = %9
  %16 = tail call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1) #12
  %17 = tail call %"class.blink::FontUniqueNameLookup"* @_ZN5blink17FontGlobalContext23GetFontUniqueNameLookupEv() #12
  %18 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #12
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::LocalFontFaceSource"*)* @_ZN5blink19LocalFontFaceSource31NotifyFontUniqueNameLookupReadyEv to i64), i64 0>, <2 x i64>* %3, align 16
  %19 = bitcast %"class.blink::WeakPersistent.577"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.blink::WeakPersistent.577", %"class.blink::WeakPersistent.577"* %5, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::WeakPersistent.577", %"class.blink::WeakPersistent.577"* %5, i64 0, i32 0, i32 0
  store %"class.blink::LocalFontFaceSource"* %0, %"class.blink::LocalFontFaceSource"** %21, align 8, !alias.scope !6
  %22 = getelementptr inbounds %"class.blink::WeakPersistent.577", %"class.blink::WeakPersistent.577"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %22, align 8, !alias.scope !6
  %23 = ptrtoint %"class.blink::LocalFontFaceSource"* %0 to i64
  switch i64 %23, label %24 [
    i64 0, label %50
    i64 -1, label %50
  ]

24:                                               ; preds = %15
  %25 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !6
  %26 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %25, i64 0, i32 1
  %27 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %26) #12, !noalias !6
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %31, !prof !2

29:                                               ; preds = %24
  %30 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %26, i8* %30) #12
  br label %31

31:                                               ; preds = %29, %24
  %32 = phi i8* [ %30, %29 ], [ %27, %24 ]
  %33 = bitcast i8* %32 to %"class.blink::ThreadState"**
  %34 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %33, align 8, !noalias !6
  %35 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %34, i64 0, i32 4, i32 0, i32 0, i32 0
  %36 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %35, align 8, !noalias !6
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %37, align 8, !noalias !6
  %39 = icmp eq %"class.blink::PersistentNode"* %38, null
  br i1 %39, label %40, label %43, !prof !2

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %36, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %41) #12
  %42 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %37, align 8
  br label %43

43:                                               ; preds = %40, %31
  %44 = phi %"class.blink::PersistentNode"* [ %42, %40 ], [ %38, %31 ]
  %45 = bitcast %"class.blink::PersistentNode"* %44 to i64*
  %46 = load i64, i64* %45, align 8, !noalias !6
  %47 = bitcast %"class.blink::PersistentRegion"* %36 to i64*
  store i64 %46, i64* %47, align 8, !noalias !6
  %48 = bitcast %"class.blink::PersistentNode"* %44 to %"class.blink::PersistentBase.578"**
  store %"class.blink::PersistentBase.578"* %20, %"class.blink::PersistentBase.578"** %48, align 8, !noalias !6
  %49 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19LocalFontFaceSourceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %49, align 8
  store %"class.blink::PersistentNode"* %44, %"class.blink::PersistentNode"** %22, align 8, !alias.scope !6
  br label %50

50:                                               ; preds = %15, %15, %43
  %51 = call i8* @_Znwm(i64 64) #13, !noalias !9
  %52 = bitcast i8* %51 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink19LocalFontFaceSourceEFvvEJNS2_14WeakPersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %52, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19LocalFontFaceSourceEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %4, %"class.blink::WeakPersistent.577"* nonnull dereferenceable(16) %5) #12, !noalias !9
  %53 = bitcast %"class.base::OnceCallback.212"* %2 to i8**
  store i8* %51, i8** %53, align 8, !alias.scope !9
  %54 = bitcast %"class.blink::FontUniqueNameLookup"* %17 to void (%"class.blink::FontUniqueNameLookup"*, %"class.base::OnceCallback.212"*)***
  %55 = load void (%"class.blink::FontUniqueNameLookup"*, %"class.base::OnceCallback.212"*)**, void (%"class.blink::FontUniqueNameLookup"*, %"class.base::OnceCallback.212"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::FontUniqueNameLookup"*, %"class.base::OnceCallback.212"*)*, void (%"class.blink::FontUniqueNameLookup"*, %"class.base::OnceCallback.212"*)** %55, i64 4
  %57 = load void (%"class.blink::FontUniqueNameLookup"*, %"class.base::OnceCallback.212"*)*, void (%"class.blink::FontUniqueNameLookup"*, %"class.base::OnceCallback.212"*)** %56, align 8
  call void %57(%"class.blink::FontUniqueNameLookup"* %17, %"class.base::OnceCallback.212"* nonnull %2) #12
  %58 = getelementptr inbounds %"class.base::OnceCallback.212", %"class.base::OnceCallback.212"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %58) #12
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %60 = icmp eq %"class.blink::PersistentNode"* %59, null
  br i1 %60, label %80, label %61

61:                                               ; preds = %50
  %62 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %63 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %62, i64 0, i32 1
  %64 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %63) #12
  %65 = icmp eq i8* %64, null
  br i1 %65, label %66, label %68, !prof !2

66:                                               ; preds = %61
  %67 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %63, i8* %67) #12
  br label %68

68:                                               ; preds = %66, %61
  %69 = phi i8* [ %67, %66 ], [ %64, %61 ]
  %70 = bitcast i8* %69 to %"class.blink::ThreadState"**
  %71 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %71, i64 0, i32 4, i32 0, i32 0, i32 0
  %73 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %72, align 8
  %74 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %75 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %73, i64 0, i32 0, i32 0
  %76 = bitcast %"class.blink::PersistentRegion"* %73 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.blink::PersistentNode"* %74 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %74, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %79, align 8
  store %"class.blink::PersistentNode"* %74, %"class.blink::PersistentNode"** %75, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %22, align 8
  br label %80

80:                                               ; preds = %50, %68
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #12
  %81 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 2, i32 0, i32 0
  %82 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %81, align 8
  call void @_ZN5blink11CSSFontFace12DidBeginLoadEv(%"class.blink::CSSFontFace"* %82) #12
  br label %83

83:                                               ; preds = %1, %9, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19LocalFontFaceSource8IsLoadedEv(%"class.blink::LocalFontFaceSource"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1) #12
  %3 = tail call %"class.blink::FontUniqueNameLookup"* @_ZN5blink17FontGlobalContext23GetFontUniqueNameLookupEv() #12
  %4 = icmp eq %"class.blink::FontUniqueNameLookup"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::FontUniqueNameLookup"* %3 to i1 (%"class.blink::FontUniqueNameLookup"*)***
  %7 = load i1 (%"class.blink::FontUniqueNameLookup"*)**, i1 (%"class.blink::FontUniqueNameLookup"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::FontUniqueNameLookup"*)*, i1 (%"class.blink::FontUniqueNameLookup"*)** %7, i64 3
  %9 = load i1 (%"class.blink::FontUniqueNameLookup"*)*, i1 (%"class.blink::FontUniqueNameLookup"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::FontUniqueNameLookup"* nonnull %3) #12
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ %10, %5 ], [ true, %1 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19LocalFontFaceSource31NotifyFontUniqueNameLookupReadyEv(%"class.blink::LocalFontFaceSource"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 0
  tail call void @_ZN5blink17CSSFontFaceSource10PruneTableEv(%"class.blink::CSSFontFaceSource"* %2) #12
  %3 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %3, align 8
  %5 = tail call zeroext i1 @_ZN5blink11CSSFontFace10FontLoadedEPNS_17CSSFontFaceSourceE(%"class.blink::CSSFontFace"* %4, %"class.blink::CSSFontFaceSource"* %2) #12
  br i1 %5, label %6, label %13

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %7, align 8
  %9 = bitcast %"class.blink::FontSelector"* %8 to void (%"class.blink::FontSelector"*, i32)***
  %10 = load void (%"class.blink::FontSelector"*, i32)**, void (%"class.blink::FontSelector"*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::FontSelector"*, i32)*, void (%"class.blink::FontSelector"*, i32)** %10, i64 20
  %12 = load void (%"class.blink::FontSelector"*, i32)*, void (%"class.blink::FontSelector"*, i32)** %11, align 8
  tail call void %12(%"class.blink::FontSelector"* %8, i32 0) #12
  br label %13

13:                                               ; preds = %6, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

declare void @_ZN5blink11CSSFontFace12DidBeginLoadEv(%"class.blink::CSSFontFace"*) local_unnamed_addr #3

declare void @_ZN5blink17CSSFontFaceSource10PruneTableEv(%"class.blink::CSSFontFaceSource"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink11CSSFontFace10FontLoadedEPNS_17CSSFontFaceSourceE(%"class.blink::CSSFontFace"*, %"class.blink::CSSFontFaceSource"*) local_unnamed_addr #3

declare void @_ZN5blink15FontDescriptionC1Ev(%"class.blink::FontDescription"*) unnamed_addr #3

declare void @_ZN4base19UmaHistogramBooleanEPKcb(i8*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19LocalFontFaceSource5TraceEPNS_7VisitorE(%"class.blink::LocalFontFaceSource"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11CSSFontFaceEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.28"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12FontSelectorEE5TraceEPNS_7VisitorEPKv) #12
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_NK5blink19LocalFontFaceSource5TraceEPNS_7VisitorE(%"class.blink::LocalFontFaceSource"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %0, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds i32, i32* %3, i64 22
  %5 = bitcast i32* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11CSSFontFaceEE5TraceEPNS_7VisitorEPKv) #12
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds i32, i32* %3, i64 24
  %16 = bitcast i32* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12FontSelectorEE5TraceEPNS_7VisitorEPKv) #12
  br label %25

25:                                               ; preds = %14, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink17CSSFontFaceSource6GetURLEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #12
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #12
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %1, %6, %21
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FontCustomPlatformData"* @_ZNK5blink17CSSFontFaceSource21GetCustomPlaftormDataEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::FontCustomPlatformData"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17CSSFontFaceSource10SetDisplayENS_11FontDisplayE(%"class.blink::CSSFontFaceSource"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CSSFontFaceSource15IsInBlockPeriodEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CSSFontFaceSource17IsInFailurePeriodEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17CSSFontFaceSource12UpdatePeriodEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17CSSFontFaceSource12HadBlankTextEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17CSSFontFaceSource14PaintRequestedEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF22VectorBackedLinkedListIN5blink12FontCacheKeyENS_18PartitionAllocatorEEC2Ev(%"class.WTF::VectorBackedLinkedList"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %3 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %2 to i8*
  %4 = bitcast %"class.WTF::VectorBackedLinkedList"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %3) #12
  %5 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %2, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %2, i64 0, i32 1
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %2, i64 0, i32 2, i32 0, i32 0
  store i32 0, i32* %7, align 8, !alias.scope !16
  %8 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %2, i64 0, i32 2, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %2, i64 0, i32 2, i32 5, i32 0
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %9, align 8, !alias.scope !16
  %10 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %2, i64 0, i32 2, i32 6
  store i8 0, i8* %10, align 8, !alias.scope !16
  %11 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 52, i1 false) #12, !alias.scope !16
  %12 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector"* %12, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(88) %2) #12
  %13 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %9, align 8
  %14 = icmp eq %"class.blink::FontVariationSettings"* %13, null
  br i1 %14, label %35, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %13, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.base::RefCounted.545", %"class.base::RefCounted.545"* %16, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #12
  %18 = getelementptr inbounds %"class.base::RefCounted.545", %"class.base::RefCounted.545"* %16, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %35

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.base::RefCounted.545", %"class.base::RefCounted.545"* %16, i64 -4
  %23 = bitcast %"class.base::RefCounted.545"* %22 to %"class.blink::FontTagValuePair.541"**
  %24 = load %"class.blink::FontTagValuePair.541"*, %"class.blink::FontTagValuePair.541"** %23, align 8
  %25 = icmp eq %"class.blink::FontTagValuePair.541"* %24, null
  %26 = bitcast %"class.blink::FontTagValuePair.541"* %24 to i8*
  br i1 %25, label %33, label %27, !prof !5

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.base::RefCounted.545", %"class.base::RefCounted.545"* %16, i64 -1, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31, !prof !2

31:                                               ; preds = %27
  store i32 0, i32* %28, align 4
  br label %32

32:                                               ; preds = %31, %27
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #12
  br label %33

33:                                               ; preds = %32, %21
  %34 = bitcast %"class.base::RefCounted.545"* %22 to i8*
  call void @free(i8* %34) #12
  br label %35

35:                                               ; preds = %33, %15, %1
  %36 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %2, i64 0, i32 2, i32 0, i32 2
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #13
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %2, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #12
  br label %61

61:                                               ; preds = %44, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %3) #12
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector"*, %"class.WTF::VectorBackedLinkedListNode"* dereferenceable(88)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %8 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyES0_EEEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 88
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.WTF::VectorBackedLinkedListNode"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %22) #12
  %36 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %39 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 88
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !5

52:                                               ; preds = %37
  %53 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyES0_EEEEmm(i64 %55) #12
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #12
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 88
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.WTF::VectorBackedLinkedListNode"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %50) #12
  %64 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72
  %74 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %70 to i64*
  %75 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %73 to i64*
  %76 = load i64, i64* %74, align 8
  store i64 %76, i64* %75, align 8
  %77 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 0, i32 0
  %78 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* %77, align 8
  %80 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 0, i32 1
  %81 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 0, i32 1
  %82 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.WTF::AtomicString"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.WTF::AtomicString"* %80 to i64*
  store i64 %84, i64* %85, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %82, align 8
  %86 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 0, i32 2
  %87 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  %88 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 0, i32 2
  %89 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %89, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #12
  %90 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 0, i32 3
  %91 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 0, i32 3
  %92 = bitcast i32* %91 to i64*
  %93 = bitcast i32* %90 to i64*
  %94 = load i64, i64* %92, align 8
  store i64 %94, i64* %93, align 8
  %95 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 1
  %96 = bitcast i32* %95 to i8*
  %97 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 1
  %98 = bitcast i32* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %98, i64 12, i1 false) #12
  %99 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 5
  %100 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 5
  %101 = getelementptr inbounds %class.scoped_refptr.536, %class.scoped_refptr.536* %100, i64 0, i32 0
  %102 = bitcast %class.scoped_refptr.536* %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %class.scoped_refptr.536* %99 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %101, align 8
  %105 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 6
  %106 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 6
  %107 = load i8, i8* %106, align 8, !range !3
  store i8 %107, i8* %105, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %105

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %103, label %14

14:                                               ; preds = %4, %99
  %15 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %101, %99 ], [ %6, %4 ]
  %16 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %100, %99 ], [ null, %4 ]
  %17 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %15 to i64*
  %18 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %16 to i64*
  %19 = load i64, i64* %17, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %20, align 8
  %23 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.WTF::AtomicString"* %24 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.WTF::AtomicString"* %23 to i64*
  store i64 %27, i64* %28, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %25, align 8
  %29 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 0, i32 2
  %30 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %31 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 2
  %32 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %32, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #12
  %33 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 0, i32 3
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 3
  %35 = bitcast i32* %34 to i64*
  %36 = bitcast i32* %33 to i64*
  %37 = load i64, i64* %35, align 8
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 1
  %39 = bitcast i32* %38 to i8*
  %40 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 1
  %41 = bitcast i32* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %41, i64 12, i1 false) #12
  %42 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 5
  %43 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 5
  %44 = getelementptr inbounds %class.scoped_refptr.536, %class.scoped_refptr.536* %43, i64 0, i32 0
  %45 = bitcast %class.scoped_refptr.536* %43 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %class.scoped_refptr.536* %42 to i64*
  store i64 %46, i64* %47, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %44, align 8
  %48 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 6
  %49 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 6
  %50 = load i8, i8* %49, align 8, !range !3
  store i8 %50, i8* %48, align 8
  %51 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 5, i32 0
  %52 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %51, align 8
  %53 = icmp eq %"class.blink::FontVariationSettings"* %52, null
  br i1 %53, label %74, label %54

54:                                               ; preds = %14
  %55 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %52, i64 0, i32 1, i32 0
  %56 = getelementptr inbounds %"class.base::RefCounted.545", %"class.base::RefCounted.545"* %55, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %56) #12
  %57 = getelementptr inbounds %"class.base::RefCounted.545", %"class.base::RefCounted.545"* %55, i64 0, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %74

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.base::RefCounted.545", %"class.base::RefCounted.545"* %55, i64 -4
  %62 = bitcast %"class.base::RefCounted.545"* %61 to %"class.blink::FontTagValuePair.541"**
  %63 = load %"class.blink::FontTagValuePair.541"*, %"class.blink::FontTagValuePair.541"** %62, align 8
  %64 = icmp eq %"class.blink::FontTagValuePair.541"* %63, null
  %65 = bitcast %"class.blink::FontTagValuePair.541"* %63 to i8*
  br i1 %64, label %72, label %66, !prof !5

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.base::RefCounted.545", %"class.base::RefCounted.545"* %55, i64 -1, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %71, label %70, !prof !2

70:                                               ; preds = %66
  store i32 0, i32* %67, align 4
  br label %71

71:                                               ; preds = %70, %66
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %65) #12
  br label %72

72:                                               ; preds = %71, %60
  %73 = bitcast %"class.base::RefCounted.545"* %61 to i8*
  tail call void @free(i8* %73) #12
  br label %74

74:                                               ; preds = %72, %54, %14
  %75 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  tail call void @_ZdlPv(i8* %81) #13
  br label %82

82:                                               ; preds = %79, %74
  %83 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #12
  br label %99

99:                                               ; preds = %82, %95, %98
  %100 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 1
  %101 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 1
  %102 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %101, %10
  br i1 %102, label %103, label %14

103:                                              ; preds = %99, %4
  %104 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %104) #12
  br label %219

105:                                              ; preds = %2
  %106 = zext i32 %1 to i64
  %107 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyES0_EEEEmm(i64 %106) #12
  %108 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %107, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #12
  %109 = udiv i64 %107, 88
  %110 = ptrtoint i8* %108 to i64
  %111 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %111, align 8
  %113 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %112, i64 %115
  %117 = icmp eq i32 %114, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %105
  %119 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %112 to i8*
  br label %214

120:                                              ; preds = %105
  %121 = bitcast i8* %108 to %"class.WTF::VectorBackedLinkedListNode"*
  br label %122

122:                                              ; preds = %120, %207
  %123 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %209, %207 ], [ %112, %120 ]
  %124 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %208, %207 ], [ %121, %120 ]
  %125 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %123 to i64*
  %126 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %124 to i64*
  %127 = load i64, i64* %125, align 8
  store i64 %127, i64* %126, align 8
  %128 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 0, i32 0
  %129 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 0, i32 0
  %130 = load i32, i32* %129, align 8
  store i32 %130, i32* %128, align 8
  %131 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 0, i32 1
  %132 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 0, i32 1
  %133 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %132, i64 0, i32 0, i32 0, i32 0
  %134 = bitcast %"class.WTF::AtomicString"* %132 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.WTF::AtomicString"* %131 to i64*
  store i64 %135, i64* %136, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %133, align 8
  %137 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 0, i32 2
  %138 = bitcast %"class.std::__1::basic_string"* %137 to i8*
  %139 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 0, i32 2
  %140 = bitcast %"class.std::__1::basic_string"* %139 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %140, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 24, i1 false) #12
  %141 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 0, i32 3
  %142 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 0, i32 3
  %143 = bitcast i32* %142 to i64*
  %144 = bitcast i32* %141 to i64*
  %145 = load i64, i64* %143, align 8
  store i64 %145, i64* %144, align 8
  %146 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 1
  %147 = bitcast i32* %146 to i8*
  %148 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 1
  %149 = bitcast i32* %148 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %149, i64 12, i1 false) #12
  %150 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 5
  %151 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 5
  %152 = getelementptr inbounds %class.scoped_refptr.536, %class.scoped_refptr.536* %151, i64 0, i32 0
  %153 = bitcast %class.scoped_refptr.536* %151 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %class.scoped_refptr.536* %150 to i64*
  store i64 %154, i64* %155, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %152, align 8
  %156 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 6
  %157 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 6
  %158 = load i8, i8* %157, align 8, !range !3
  store i8 %158, i8* %156, align 8
  %159 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 5, i32 0
  %160 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %159, align 8
  %161 = icmp eq %"class.blink::FontVariationSettings"* %160, null
  br i1 %161, label %182, label %162

162:                                              ; preds = %122
  %163 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %160, i64 0, i32 1, i32 0
  %164 = getelementptr inbounds %"class.base::RefCounted.545", %"class.base::RefCounted.545"* %163, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %164) #12
  %165 = getelementptr inbounds %"class.base::RefCounted.545", %"class.base::RefCounted.545"* %163, i64 0, i32 0, i32 0
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %182

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"class.base::RefCounted.545", %"class.base::RefCounted.545"* %163, i64 -4
  %170 = bitcast %"class.base::RefCounted.545"* %169 to %"class.blink::FontTagValuePair.541"**
  %171 = load %"class.blink::FontTagValuePair.541"*, %"class.blink::FontTagValuePair.541"** %170, align 8
  %172 = icmp eq %"class.blink::FontTagValuePair.541"* %171, null
  %173 = bitcast %"class.blink::FontTagValuePair.541"* %171 to i8*
  br i1 %172, label %180, label %174, !prof !5

174:                                              ; preds = %168
  %175 = getelementptr inbounds %"class.base::RefCounted.545", %"class.base::RefCounted.545"* %163, i64 -1, i32 0, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %179, label %178, !prof !2

178:                                              ; preds = %174
  store i32 0, i32* %175, align 4
  br label %179

179:                                              ; preds = %178, %174
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %173) #12
  br label %180

180:                                              ; preds = %179, %168
  %181 = bitcast %"class.base::RefCounted.545"* %169 to i8*
  tail call void @free(i8* %181) #12
  br label %182

182:                                              ; preds = %180, %162, %122
  %183 = bitcast %"class.std::__1::basic_string"* %139 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %184 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %183, i64 0, i32 1, i32 0
  %185 = load i8, i8* %184, align 1
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %190

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %139, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load i8*, i8** %188, align 8
  tail call void @_ZdlPv(i8* %189) #13
  br label %190

190:                                              ; preds = %187, %182
  %191 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #12
  br label %207

207:                                              ; preds = %190, %203, %206
  %208 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 1
  %209 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 1
  %210 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %209, %116
  br i1 %210, label %211, label %122

211:                                              ; preds = %207
  %212 = bitcast %"class.WTF::Vector"* %0 to i8**
  %213 = load i8*, i8** %212, align 8
  br label %214

214:                                              ; preds = %118, %211
  %215 = phi i8* [ %213, %211 ], [ %119, %118 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %215) #12
  %216 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %110, i64* %216 monotonic, align 8
  %217 = trunc i64 %109 to i32
  %218 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %217, i32* %218, align 8
  br label %219

219:                                              ; preds = %214, %103
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 24379392
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 24379392) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = mul i64 %0, 88
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17CSSCustomFontDataD2Ev(%"class.blink::CSSCustomFontData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink17CSSCustomFontDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #12
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #12
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17CSSCustomFontDataD0Ev(%"class.blink::CSSCustomFontData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink17CSSCustomFontDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #12
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #12
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  br label %25

25:                                               ; preds = %1, %13
  %26 = bitcast %"class.blink::CSSCustomFontData"* %0 to i8*
  tail call void @free(i8* %26) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17CSSCustomFontData17BeginLoadIfNeededEv(%"class.blink::CSSCustomFontData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 4, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %6, align 8
  %8 = icmp eq %"class.blink::CSSFontFaceSource"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  store i8 1, i8* %2, align 4
  %10 = bitcast %"class.blink::CSSFontFaceSource"* %7 to void (%"class.blink::CSSFontFaceSource"*)***
  %11 = load void (%"class.blink::CSSFontFaceSource"*)**, void (%"class.blink::CSSFontFaceSource"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::CSSFontFaceSource"*)*, void (%"class.blink::CSSFontFaceSource"*)** %11, i64 9
  %13 = load void (%"class.blink::CSSFontFaceSource"*)*, void (%"class.blink::CSSFontFaceSource"*)** %12, align 8
  tail call void %13(%"class.blink::CSSFontFaceSource"* nonnull %7) #12
  br label %14

14:                                               ; preds = %5, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CSSCustomFontData9IsLoadingEv(%"class.blink::CSSCustomFontData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 4, !range !3
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CSSCustomFontData17IsLoadingFallbackEv(%"class.blink::CSSCustomFontData"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CSSCustomFontData17ShouldSkipDrawingEv(%"class.blink::CSSCustomFontData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %2, align 8
  %4 = icmp eq %"class.blink::CSSFontFaceSource"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::CSSFontFaceSource"* %3 to void (%"class.blink::CSSFontFaceSource"*)***
  %7 = load void (%"class.blink::CSSFontFaceSource"*)**, void (%"class.blink::CSSFontFaceSource"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::CSSFontFaceSource"*)*, void (%"class.blink::CSSFontFaceSource"*)** %7, i64 15
  %9 = load void (%"class.blink::CSSFontFaceSource"*)*, void (%"class.blink::CSSFontFaceSource"*)** %8, align 8
  tail call void %9(%"class.blink::CSSFontFaceSource"* nonnull %3) #12
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 4
  %16 = load i8, i8* %15, align 4, !range !3
  %17 = icmp ne i8 %16, 0
  br label %18

18:                                               ; preds = %14, %10
  %19 = phi i1 [ false, %10 ], [ %17, %14 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17CSSCustomFontData19ClearFontFaceSourceEv(%"class.blink::CSSCustomFontData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::CSSFontFaceSource"* null, %"class.blink::CSSFontFaceSource"** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #12
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #12
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17CSSFontFaceSourceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_17CSSFontFaceSourceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_17CSSFontFaceSourceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSFontFaceSource"**
  %4 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %3, align 8
  %5 = icmp eq %"class.blink::CSSFontFaceSource"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #12
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #12
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CSSFontFaceSource", %"class.blink::CSSFontFaceSource"* %4, i64 -1, i32 2, i32 1, i32 1
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::CSSFontFaceSource"* null, %"class.blink::CSSFontFaceSource"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #12
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #12
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #3

declare void @_ZN5blink14SimpleFontDataC1ERKNS_16FontPlatformDataE13scoped_refptrINS_14CustomFontDataEEbRKNS_19FontMetricsOverrideE(%"class.blink::SimpleFontData"*, %"class.blink::FontPlatformData"* dereferenceable(72), %"class.blink::CustomFontData"*, i1 zeroext, %"struct.blink::FontMetricsOverride"* dereferenceable(24)) unnamed_addr #3

declare void @_ZN5blink9FontCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontCache"*, i32) local_unnamed_addr #3

declare void @_ZN5blink5probe21LocalFontsEnabledImplEPNS_16ExecutionContextEPb(%"class.blink::ExecutionContext"*, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.554", %"class.base::RefCounted.554"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #12
  %15 = getelementptr inbounds %"class.base::RefCounted.554", %"class.base::RefCounted.554"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.554", %"class.base::RefCounted.554"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.554"* %19 to %"class.blink::SharedFontFamily"*
  tail call void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"* nonnull %20) #12
  %21 = bitcast %"class.base::RefCounted.554"* %19 to i8*
  tail call void @free(i8* %21) #12
  br label %22

22:                                               ; preds = %18, %10
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.554", %"class.base::RefCounted.554"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #12
  %27 = getelementptr inbounds %"class.base::RefCounted.554", %"class.base::RefCounted.554"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.554", %"class.base::RefCounted.554"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.554"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #12
  %33 = bitcast %"class.base::RefCounted.554"* %31 to i8*
  tail call void @free(i8* %33) #12
  br label %34

34:                                               ; preds = %22, %30, %24
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.554", %"class.base::RefCounted.554"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #12
  %40 = getelementptr inbounds %"class.base::RefCounted.554", %"class.base::RefCounted.554"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.554", %"class.base::RefCounted.554"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.554"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #12
  %46 = bitcast %"class.base::RefCounted.554"* %44 to i8*
  tail call void @free(i8* %46) #12
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #12
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.554", %"class.base::RefCounted.554"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #12
  %15 = getelementptr inbounds %"class.base::RefCounted.554", %"class.base::RefCounted.554"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.554", %"class.base::RefCounted.554"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.554"* %19 to %"class.blink::SharedFontFamily"*
  tail call void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"* nonnull %20) #12
  %21 = bitcast %"class.base::RefCounted.554"* %19 to i8*
  tail call void @free(i8* %21) #12
  br label %22

22:                                               ; preds = %18, %10
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.554", %"class.base::RefCounted.554"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #12
  %27 = getelementptr inbounds %"class.base::RefCounted.554", %"class.base::RefCounted.554"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.554", %"class.base::RefCounted.554"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.554"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #12
  %33 = bitcast %"class.base::RefCounted.554"* %31 to i8*
  tail call void @free(i8* %33) #12
  br label %34

34:                                               ; preds = %22, %30, %24
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.554", %"class.base::RefCounted.554"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #12
  %40 = getelementptr inbounds %"class.base::RefCounted.554", %"class.base::RefCounted.554"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.554", %"class.base::RefCounted.554"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.554"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #12
  %46 = bitcast %"class.base::RefCounted.554"* %44 to i8*
  tail call void @free(i8* %46) #12
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #12
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19LocalFontFaceSourceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_19LocalFontFaceSourceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_19LocalFontFaceSourceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::LocalFontFaceSource"**
  %4 = load %"class.blink::LocalFontFaceSource"*, %"class.blink::LocalFontFaceSource"** %3, align 8
  %5 = icmp eq %"class.blink::LocalFontFaceSource"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #12
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #12
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::LocalFontFaceSource", %"class.blink::LocalFontFaceSource"* %4, i64 -1, i32 5, i32 0
  %20 = getelementptr inbounds i8, i8* %19, i64 6
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::LocalFontFaceSource"* null, %"class.blink::LocalFontFaceSource"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #12
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #12
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19LocalFontFaceSourceEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %3 = bitcast void (%"class.base::internal::BindStateBase"*)** %2 to %"class.blink::LocalFontFaceSource"**
  %4 = load %"class.blink::LocalFontFaceSource"*, %"class.blink::LocalFontFaceSource"** %3, align 8
  %5 = icmp eq %"class.blink::LocalFontFaceSource"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %8 = bitcast %"class.blink::LocalFontFaceSource"* %4 to i8*
  %9 = bitcast %"class.base::internal::BindStateBase"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 %13
  %15 = bitcast i8* %14 to %"class.blink::LocalFontFaceSource"*
  %16 = and i64 %10, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %6
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %10, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.blink::LocalFontFaceSource"*)**
  %24 = load void (%"class.blink::LocalFontFaceSource"*)*, void (%"class.blink::LocalFontFaceSource"*)** %23, align 8
  br label %27

25:                                               ; preds = %6
  %26 = inttoptr i64 %10 to void (%"class.blink::LocalFontFaceSource"*)*
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi void (%"class.blink::LocalFontFaceSource"*)* [ %24, %18 ], [ %26, %25 ]
  tail call void %28(%"class.blink::LocalFontFaceSource"* %15) #12
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19LocalFontFaceSourceEFvvEJNS2_14WeakPersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::WeakPersistent.577"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink19LocalFontFaceSourceEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink19LocalFontFaceSourceEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #12
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::WeakPersistent.577"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #12
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !2

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #12
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 4, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !2

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #12
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.578"**
  store %"class.blink::PersistentBase.578"* %11, %"class.blink::PersistentBase.578"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19LocalFontFaceSourceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19LocalFontFaceSourceEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #12
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #12
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink19LocalFontFaceSourceEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %8
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::LocalFontFaceSource"**
  %6 = load %"class.blink::LocalFontFaceSource"*, %"class.blink::LocalFontFaceSource"** %5, align 8
  %7 = icmp eq %"class.blink::LocalFontFaceSource"* %6, null
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %3, %8
  %10 = phi i1 [ true, %8 ], [ %7, %3 ], [ false, %2 ]
  ret i1 %10
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11CSSFontFaceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSFontFace"*
  tail call void @_ZNK5blink11CSSFontFace5TraceEPNS_7VisitorE(%"class.blink::CSSFontFace"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink11CSSFontFace5TraceEPNS_7VisitorE(%"class.blink::CSSFontFace"*, %"class.blink::Visitor"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12FontSelectorEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FontSelector"*
  %4 = bitcast i8* %1 to void (%"class.blink::FontSelector"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FontSelector"*, %"class.blink::Visitor"*)**, void (%"class.blink::FontSelector"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FontSelector"*, %"class.blink::Visitor"*)*, void (%"class.blink::FontSelector"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::FontSelector"*, %"class.blink::Visitor"*)*, void (%"class.blink::FontSelector"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FontSelector"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 1048575}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink18WrapWeakPersistentINS_19LocalFontFaceSourceEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!8 = distinct !{!8, !"_ZN5blink18WrapWeakPersistentINS_19LocalFontFaceSourceEEENS_14WeakPersistentIT_EEPS3_"}
!9 = !{!10, !12, !14}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19LocalFontFaceSourceEFvvEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19LocalFontFaceSourceEFvvEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIMN5blink19LocalFontFaceSourceEFvvEJNS1_14WeakPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIMN5blink19LocalFontFaceSourceEFvvEJNS1_14WeakPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!14 = distinct !{!14, !15, !"_ZN3WTF4BindIMN5blink19LocalFontFaceSourceEFvvEJNS1_14WeakPersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!15 = distinct !{!15, !"_ZN3WTF4BindIMN5blink19LocalFontFaceSourceEFvvEJNS1_14WeakPersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv: argument 0"}
!18 = distinct !{!18, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv"}
