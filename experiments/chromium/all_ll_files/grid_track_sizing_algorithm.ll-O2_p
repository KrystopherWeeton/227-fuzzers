; ModuleID = '../../third_party/blink/renderer/core/layout/grid_track_sizing_algorithm.cc'
source_filename = "../../third_party/blink/renderer/core/layout/grid_track_sizing_algorithm.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::GridTrackSizingAlgorithmStrategy" = type { i32 (...)**, %"class.blink::GridTrackSizingAlgorithm"* }
%"class.blink::GridTrackSizingAlgorithm" = type { i8, i8, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.WTF::Vector", %"class.WTF::Vector", %"class.WTF::Vector.6", %"class.WTF::Vector.6", %"class.WTF::Vector.6", i32, %"class.blink::Grid"*, %"class.blink::LayoutGrid"*, %"class.std::__1::unique_ptr.937", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, [4 x i8], %"class.blink::GridBaselineAlignment", %"class.WTF::HashMap.948", %"class.WTF::HashMap.948" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::LayoutUnit" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::GridTrack"*, i32, i32 }
%"class.blink::GridTrack" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.absl::optional", i8, [7 x i8], %"class.absl::optional.0" }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, [7 x i8], %union.anon.4 }
%union.anon.4 = type { %"class.blink::GridTrackSize" }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Length" = type <{ %union.anon.5, i8, i8, i8, i8 }>
%union.anon.5 = type { i32 }
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8" }
%"class.WTF::VectorBufferBase.8" = type { i64*, i32, i32 }
%"class.blink::Grid" = type { i32 (...)**, %"class.blink::OrderIterator", i64, i64, i64, i64, i8, [7 x i8], %"class.WTF::HashMap.921", %"class.WTF::HashMap.926", %"class.std::__1::unique_ptr.931", %"class.std::__1::unique_ptr.931" }
%"class.blink::OrderIterator" = type <{ %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*, %"class.std::__1::set", %"class.std::__1::__tree_const_iterator", i8, [7 x i8] }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.866, %"class.WTF::Vector.867", %"class.std::__1::unique_ptr.872", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.897, %"class.blink::Persistent.898" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.700", %"class.std::__1::unique_ptr.702" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.264", %"class.blink::DataRef.412", %"class.blink::DataRef.416", %"class.blink::DataRef.616", %"class.blink::DataRef.683", %"class.blink::DataRef.687", %"class.blink::DataRef.691", %"class.blink::DataRef.695", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.12", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.12" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.14", %"class.blink::Font" }
%"class.WTF::RefCounted.14" = type { %"class.base::RefCounted.15" }
%"class.base::RefCounted.15" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.46 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.19, %class.scoped_refptr.27, %class.scoped_refptr.37, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.45 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.18 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.18 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1347", [4 x i8] }>
%"class.WTF::RefCounted.1347" = type { %"class.base::RefCounted.1348" }
%"class.base::RefCounted.1348" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.19 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.25", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.20" }
%"class.WTF::Vector.20" = type { %"class.WTF::VectorBuffer.21" }
%"class.WTF::VectorBuffer.21" = type { %"class.WTF::VectorBufferBase.22" }
%"class.WTF::VectorBufferBase.22" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.25" = type { %"class.base::RefCounted.26" }
%"class.base::RefCounted.26" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.27 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.28", %"class.WTF::RefCounted.35", [4 x i8] }>
%"class.blink::FontSettings.28" = type { %"class.WTF::Vector.29" }
%"class.WTF::Vector.29" = type { %"class.WTF::VectorBuffer.30" }
%"class.WTF::VectorBuffer.30" = type { %"class.WTF::VectorBufferBase.31" }
%"class.WTF::VectorBufferBase.31" = type { %"class.blink::FontTagValuePair.32"*, i32, i32 }
%"class.blink::FontTagValuePair.32" = type { i32, float }
%"class.WTF::RefCounted.35" = type { %"class.base::RefCounted.36" }
%"class.base::RefCounted.36" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.37 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.38", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.42, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.38" = type { %"class.base::RefCounted.39" }
%"class.base::RefCounted.39" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.40 }
%union.anon.40 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.42 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.43", [4 x i8] }>
%"class.WTF::RefCounted.43" = type { %"class.base::RefCounted.44" }
%"class.base::RefCounted.44" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.45 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.46 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.47", %"class.WTF::Vector.49", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.47" = type { %"class.base::RefCounted.48" }
%"class.base::RefCounted.48" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.49" = type { %"class.WTF::VectorBuffer.50" }
%"class.WTF::VectorBuffer.50" = type { %"class.WTF::VectorBufferBase.51", [8 x i8] }
%"class.WTF::VectorBufferBase.51" = type { %class.scoped_refptr.52*, i32, i32 }
%class.scoped_refptr.52 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.53", [4 x i8] }>
%"class.WTF::RefCounted.53" = type { %"class.base::RefCounted.54" }
%"class.base::RefCounted.54" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.77, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.53" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.57", %"class.absl::optional.57", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.57" = type { %"class.absl::optional_internal::optional_data.58" }
%"class.absl::optional_internal::optional_data.58" = type { %"class.absl::optional_internal::optional_data_base.59" }
%"class.absl::optional_internal::optional_data_base.59" = type { %"class.absl::optional_internal::optional_data_dtor_base.60" }
%"class.absl::optional_internal::optional_data_dtor_base.60" = type { i8, %union.anon.61 }
%union.anon.61 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.72, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.62" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.62" }>
%"struct.std::__1::atomic.62" = type { %"struct.std::__1::__atomic_base.63" }
%"struct.std::__1::__atomic_base.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl.65" }
%"struct.std::__1::__cxx_atomic_impl.65" = type { %"struct.std::__1::__cxx_atomic_base_impl.66" }
%"struct.std::__1::__cxx_atomic_base_impl.66" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.67" }
%"struct.std::__1::atomic.67" = type { %"struct.std::__1::__atomic_base.68" }
%"struct.std::__1::__atomic_base.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.72 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.75, %class.scoped_refptr.75 }
%class.scoped_refptr.75 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.77 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.78", [4 x i8] }>
%"class.WTF::RefCounted.78" = type { %"class.base::RefCounted.79" }
%"class.base::RefCounted.79" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.80", i32, [4 x i8], %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.234", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.252", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.259", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.198", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.116" = type { %"struct.std::__1::__atomic_base.117" }
%"struct.std::__1::__atomic_base.117" = type { %"struct.std::__1::__atomic_base.118" }
%"struct.std::__1::__atomic_base.118" = type { %"struct.std::__1::__cxx_atomic_impl.119" }
%"struct.std::__1::__cxx_atomic_impl.119" = type { %"struct.std::__1::__cxx_atomic_base_impl.120" }
%"struct.std::__1::__cxx_atomic_base_impl.120" = type { i64 }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::Worklist.155"* }
%"class.blink::Worklist.155" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::Worklist.162"* }
%"class.blink::Worklist.162" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::Worklist.169"* }
%"class.blink::Worklist.169" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.176", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.192", [4 x i8] }>
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { i64 }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { float }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.201", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.210" }
%"class.WTF::Vector.210" = type { %"class.WTF::VectorBuffer.211" }
%"class.WTF::VectorBuffer.211" = type { %"class.WTF::VectorBufferBase.212" }
%"class.WTF::VectorBufferBase.212" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.226" }
%"class.WTF::VectorBuffer.226" = type { %"class.WTF::VectorBufferBase.227" }
%"class.WTF::VectorBufferBase.227" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.240" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.141"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.148"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.155"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1340", i64 }
%"class.std::__1::vector.1340" = type { %"class.std::__1::__vector_base.1341" }
%"class.std::__1::__vector_base.1341" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1342" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1342" = type { %"struct.std::__1::__compressed_pair_elem.1343" }
%"struct.std::__1::__compressed_pair_elem.1343" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.258 }
%class.scoped_refptr.258 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.259" = type { %"struct.std::__1::__atomic_base.260" }
%"struct.std::__1::__atomic_base.260" = type { %"struct.std::__1::__cxx_atomic_impl.261" }
%"struct.std::__1::__cxx_atomic_impl.261" = type { %"struct.std::__1::__cxx_atomic_base_impl.262" }
%"struct.std::__1::__cxx_atomic_base_impl.262" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.263 }
%class.scoped_refptr.263 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.62" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.67" }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.264" = type { %class.scoped_refptr.265 }
%class.scoped_refptr.265 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.266", [4 x i8], %"class.blink::DataRef.268", %"class.blink::DataRef.300", %"class.WTF::Vector.304", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.309, %class.scoped_refptr.318, %"class.blink::Persistent.326", %"class.blink::Persistent.328", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.266" = type { %"class.base::RefCounted.267" }
%"class.base::RefCounted.267" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.268" = type { %class.scoped_refptr.269 }
%class.scoped_refptr.269 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.270", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.272, %class.scoped_refptr.279, %"class.blink::Persistent.290", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.270" = type { %"class.base::RefCounted.271" }
%"class.base::RefCounted.271" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.272 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.273", %"class.WTF::Vector.274" }
%"class.base::RefCountedThreadSafe.273" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.279 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.280", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.280" = type { %"class.base::RefCounted.281" }
%"class.base::RefCounted.281" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1396 }
%class.scoped_refptr.1396 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1397", %"class.WTF::Vector.599", %"class.WTF::Vector.1399", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1397" = type { %"class.base::RefCounted.1398" }
%"class.base::RefCounted.1398" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.599" = type { %"class.WTF::VectorBuffer.600" }
%"class.WTF::VectorBuffer.600" = type { %"class.WTF::VectorBufferBase.601" }
%"class.WTF::VectorBufferBase.601" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1399" = type { %"class.WTF::VectorBuffer.1400" }
%"class.WTF::VectorBuffer.1400" = type { %"class.WTF::VectorBufferBase.1401" }
%"class.WTF::VectorBufferBase.1401" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1402 }
%union.anon.1402 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.284" }
%"class.blink::PersistentBase.284" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.289" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.285" }
%"class.WTF::HashMap.285" = type { %"class.WTF::HashTable.286" }
%"class.WTF::HashTable.286" = type <{ %"struct.WTF::KeyValuePair.288"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.288" = type opaque
%"class.blink::PersistentNodePtr.289" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.290" = type { %"class.blink::PersistentBase.291" }
%"class.blink::PersistentBase.291" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.289" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.294" }
%"class.WTF::Vector.294" = type { %"class.WTF::VectorBuffer.295" }
%"class.WTF::VectorBuffer.295" = type { %"class.WTF::VectorBufferBase.296" }
%"class.WTF::VectorBufferBase.296" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.300" = type { %class.scoped_refptr.301 }
%class.scoped_refptr.301 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.302", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.302" = type { %"class.base::RefCounted.303" }
%"class.base::RefCounted.303" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.304" = type { %"class.WTF::VectorBuffer.305" }
%"class.WTF::VectorBuffer.305" = type { %"class.WTF::VectorBufferBase.306" }
%"class.WTF::VectorBufferBase.306" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.309 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.310", %"class.WTF::Vector.312" }
%"class.WTF::RefCounted.310" = type { %"class.base::RefCounted.311" }
%"class.base::RefCounted.311" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.312" = type { %"class.WTF::VectorBuffer.313" }
%"class.WTF::VectorBuffer.313" = type { %"class.WTF::VectorBufferBase.314" }
%"class.WTF::VectorBufferBase.314" = type { %"struct.std::__1::pair.315"*, i32, i32 }
%"struct.std::__1::pair.315" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.318 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.319", [4 x i8], %"class.WTF::Vector.321" }
%"class.WTF::RefCounted.319" = type { %"class.base::RefCounted.320" }
%"class.base::RefCounted.320" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.321" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.323", [28 x i8] }>
%"class.WTF::VectorBufferBase.323" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.326" = type { %"class.blink::PersistentBase.327" }
%"class.blink::PersistentBase.327" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.289" }
%"class.blink::Persistent.328" = type { %"class.blink::PersistentBase.329" }
%"class.blink::PersistentBase.329" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.289" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.332", %"class.blink::Member.410" }
%"class.blink::Member.332" = type { %"class.blink::MemberBase.333" }
%"class.blink::MemberBase.333" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.334", %"class.blink::Member.346", %"class.blink::Member.340", %"class.blink::Member.348", %"class.blink::Member.348", %"class.blink::Member.390", %"class.blink::Member.392", %"class.blink::Member.394", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.399", %"class.blink::HeapVector.401" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.334" = type { %"class.blink::MemberBase.335" }
%"class.blink::MemberBase.335" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.338", %"class.blink::Member.338" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.338", %"class.blink::Member.340", %"class.blink::Member.338", %"class.blink::Member.338", %"class.blink::Member.342" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.338" = type { %"class.blink::MemberBase.339" }
%"class.blink::MemberBase.339" = type { %"class.blink::Node"* }
%"class.blink::Member.346" = type { %"class.blink::MemberBase.347" }
%"class.blink::MemberBase.347" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.983", %"class.WTF::Vector.983", i8, i32, %"class.blink::Member.990", %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.996", %"class.blink::Member.998", %"class.blink::Member.1000", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1008", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1014", %"class.blink::Member.1016", %"class.blink::Member.407", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1019", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.383", %"class.blink::Member.363", %"class.blink::Member.1043", %"class.blink::Member.363", %"class.blink::Member.363", %"class.blink::Member.363", %"class.blink::UserActionElementSet", %"class.blink::Member.1052", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.1060", i16, i8, %"class.blink::Member.1067", %"class.blink::Member.1069", %"class.blink::Member.1071", %"class.blink::Member.1073", %"class.blink::TextLinkColors", %"class.blink::Member.1075", i8, [7 x i8], %"class.blink::HeapHashMap.1077", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.363", %"class.WTF::Vector.1084", %"class.blink::Member.1089", %"class.blink::Member.1091", i8, %"class.blink::Member.363", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1093", %"class.blink::HeapVector.1095", %"class.std::__1::unique_ptr.1103", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1109", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1122", %"class.WTF::Vector.1124", i8, i8, %"class.std::__1::unique_ptr.1129", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.383", %"class.blink::HeapVector.1135", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1143", i8, i32, %"class.blink::Member.1145", %"class.blink::Member.1147", %"class.blink::Member.1149", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1151", %"class.WTF::HashMap.1153", %"class.blink::Member.1158", %"class.blink::Member.1160", %"class.blink::Member.1162", %"class.blink::Member.1164", %"class.blink::Member.346", %"class.blink::Member.346", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1166", i8, i32, %"class.blink::Member.1173", %"class.blink::Member.1175", i32, %"class.blink::Member.1177", %"class.blink::Member.1179", %"class.blink::Member.1181", %"class.std::__1::unique_ptr.1183", i64, %"class.std::__1::unique_ptr.1189", i32, i32, %"class.blink::Member.1204", %"class.blink::Member.1206", %"class.blink::Member.1208", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1210", %"class.WTF::Vector.1212", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1217", %"class.blink::Member.1224", %"class.std::__1::unique_ptr.1226", %"class.blink::Member.1232", i8, i8, %"class.WTF::String", %"class.blink::Member.1234", i8, [7 x i8], %"class.blink::HeapHashMap.1236", %"class.blink::HeapObserverSet", %"class.blink::Member.1250", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1252", i32, i8, i8, %"class.blink::WeakMember.1254", %"class.blink::Member.1255" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.976" }
%"class.blink::HeapHashMap.976" = type { %"class.WTF::HashMap.979" }
%"class.WTF::HashMap.979" = type { %"class.WTF::HashTable.980" }
%"class.WTF::HashTable.980" = type <{ %"struct.WTF::KeyValuePair.982"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.982" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.983" = type { %"class.WTF::VectorBuffer.984" }
%"class.WTF::VectorBuffer.984" = type { %"class.WTF::VectorBufferBase.985" }
%"class.WTF::VectorBufferBase.985" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.986 }
%class.scoped_refptr.986 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.987", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.987" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.990" = type { %"class.blink::MemberBase.991" }
%"class.blink::MemberBase.991" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1268", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1309", i32, i8, [3 x i8], %"class.blink::HeapVector.1311", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1319", %"class.blink::Member.1321", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1330", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, [7 x i8] }>
%"class.blink::Supplementable.1268" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1269" }
%"class.blink::HeapHashMap.1269" = type { %"class.WTF::HashMap.1272" }
%"class.WTF::HashMap.1272" = type { %"class.WTF::HashTable.1273" }
%"class.WTF::HashTable.1273" = type <{ %"struct.WTF::KeyValuePair.1275"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1275" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1284" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1276" }
%"class.blink::HeapObserverSet.1276" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1277" }
%"class.blink::HeapHashSet.1277" = type { %"class.WTF::HashSet.1280" }
%"class.WTF::HashSet.1280" = type { %"class.WTF::HashTable.1281" }
%"class.WTF::HashTable.1281" = type <{ %"class.blink::WeakMember.1283"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1283" = type opaque
%"class.blink::Supplementable.1284" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1285" }
%"class.blink::HeapHashMap.1285" = type { %"class.WTF::HashMap.1288" }
%"class.WTF::HashMap.1288" = type { %"class.WTF::HashTable.1289" }
%"class.WTF::HashTable.1289" = type <{ %"struct.WTF::KeyValuePair.1291"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1291" = type { i8*, %"class.blink::Member.1387" }
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1389" }
%"class.blink::Member.1389" = type { %"class.blink::MemberBase.1390" }
%"class.blink::MemberBase.1390" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1292, %"class.std::__1::unique_ptr.1293", %"class.std::__1::unique_ptr.1293", %"class.std::__1::unique_ptr.1299", %"class.std::__1::unique_ptr.1299", %"class.blink::Member.992", i32, [4 x i8], %"class.WTF::HashSet.1305", i32, i32 }
%class.scoped_refptr.1292 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1293" = type { %"class.std::__1::__compressed_pair.1294" }
%"class.std::__1::__compressed_pair.1294" = type { %"struct.std::__1::__compressed_pair_elem.1295" }
%"struct.std::__1::__compressed_pair_elem.1295" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1299" = type { %"class.std::__1::__compressed_pair.1300" }
%"class.std::__1::__compressed_pair.1300" = type { %"struct.std::__1::__compressed_pair_elem.1301" }
%"struct.std::__1::__compressed_pair_elem.1301" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1305" = type { %"class.WTF::HashTable.1306" }
%"class.WTF::HashTable.1306" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1309" = type { %"class.blink::MemberBase.1310" }
%"class.blink::MemberBase.1310" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1311" = type { %"class.WTF::Vector.1314" }
%"class.WTF::Vector.1314" = type { %"class.WTF::VectorBuffer.1315" }
%"class.WTF::VectorBuffer.1315" = type { %"class.WTF::VectorBufferBase.1316" }
%"class.WTF::VectorBufferBase.1316" = type { %"class.blink::Member.1317"*, i32, i32 }
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1319" = type { %"class.blink::MemberBase.1320" }
%"class.blink::MemberBase.1320" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1321" = type { %"class.blink::MemberBase.1322" }
%"class.blink::MemberBase.1322" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1323", i32, i32 }
%"class.blink::HeapHashMap.1323" = type { %"class.WTF::HashMap.1326" }
%"class.WTF::HashMap.1326" = type { %"class.WTF::HashTable.1327" }
%"class.WTF::HashTable.1327" = type <{ %"struct.WTF::KeyValuePair.1329"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1329" = type opaque
%"class.std::__1::unique_ptr.1330" = type { %"class.std::__1::__compressed_pair.1331" }
%"class.std::__1::__compressed_pair.1331" = type { %"struct.std::__1::__compressed_pair_elem.1332" }
%"struct.std::__1::__compressed_pair_elem.1332" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.996" = type { %"class.blink::MemberBase.997" }
%"class.blink::MemberBase.997" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1000" = type { %"class.blink::MemberBase.1001" }
%"class.blink::MemberBase.1001" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1008" = type { %"class.std::__1::__compressed_pair.1009" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.1010" }
%"struct.std::__1::__compressed_pair_elem.1010" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1002" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1002" = type { %"class.std::__1::__compressed_pair.1003" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.1004" }
%"struct.std::__1::__compressed_pair_elem.1004" = type { %"class.blink::KURL"* }
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1016" = type { %"class.blink::MemberBase.1017" }
%"class.blink::MemberBase.1017" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.407" = type { %"class.blink::MemberBase.408" }
%"class.blink::MemberBase.408" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1018 }
%class.scoped_refptr.1018 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1019" = type { %"class.WTF::VectorBuffer.1020" }
%"class.WTF::VectorBuffer.1020" = type { %"class.WTF::VectorBufferBase.1021" }
%"class.WTF::VectorBufferBase.1021" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1022 }
%class.scoped_refptr.1022 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1023", i32, i32, %"class.blink::Persistent.1025" }
%"class.WTF::RefCounted.1023" = type { %"class.base::RefCounted.1024" }
%"class.base::RefCounted.1024" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1025" = type { %"class.blink::PersistentBase.1026" }
%"class.blink::PersistentBase.1026" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.289" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1029" }
%"class.blink::HeapHashMap.1029" = type { %"class.WTF::HashMap.1032" }
%"class.WTF::HashMap.1032" = type { %"class.WTF::HashTable.1033" }
%"class.WTF::HashTable.1033" = type <{ %"struct.WTF::KeyValuePair.1035"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1035" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1036" }
%"class.blink::MemberBase.1036" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.1043" = type { %"class.blink::MemberBase.1044" }
%"class.blink::MemberBase.1044" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1045" }
%"class.blink::HeapHashMap.1045" = type { %"class.WTF::HashMap.1048" }
%"class.WTF::HashMap.1048" = type { %"class.WTF::HashTable.1049" }
%"class.WTF::HashTable.1049" = type <{ %"struct.WTF::KeyValuePair.1051"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1051" = type opaque
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.1056" }
%"class.WTF::HashSet.1056" = type { %"class.WTF::HashTable.1057" }
%"class.WTF::HashTable.1057" = type <{ %"class.blink::WeakMember.1059"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1059" = type opaque
%"class.blink::HeapHashSet.1060" = type { %"class.WTF::HashSet.1063" }
%"class.WTF::HashSet.1063" = type { %"class.WTF::HashTable.1064" }
%"class.WTF::HashTable.1064" = type <{ %"class.blink::WeakMember.1066"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1066" = type opaque
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1069" = type { %"class.blink::MemberBase.1070" }
%"class.blink::MemberBase.1070" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1071" = type { %"class.blink::MemberBase.1072" }
%"class.blink::MemberBase.1072" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1073" = type { %"class.blink::MemberBase.1074" }
%"class.blink::MemberBase.1074" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1075" = type { %"class.blink::MemberBase.1076" }
%"class.blink::MemberBase.1076" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1077" = type { %"class.WTF::HashMap.1080" }
%"class.WTF::HashMap.1080" = type { %"class.WTF::HashTable.1081" }
%"class.WTF::HashTable.1081" = type <{ %"struct.WTF::KeyValuePair.1083"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1083" = type opaque
%"class.WTF::Vector.1084" = type { %"class.WTF::VectorBuffer.1085" }
%"class.WTF::VectorBuffer.1085" = type { %"class.WTF::VectorBufferBase.1086" }
%"class.WTF::VectorBufferBase.1086" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1091" = type { %"class.blink::MemberBase.1092" }
%"class.blink::MemberBase.1092" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.363" = type { %"class.blink::MemberBase.364" }
%"class.blink::MemberBase.364" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.368" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.365 }
%class.scoped_refptr.365 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.366", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.366" = type { %"class.base::RefCounted.367" }
%"class.base::RefCounted.367" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.368" = type { %"class.blink::MemberBase.369" }
%"class.blink::MemberBase.369" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.372", %"class.blink::Member.374", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.372" = type { %"class.WTF::SingleThreadedBitField.373" }
%"class.WTF::SingleThreadedBitField.373" = type { i32 }
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.376 }
%class.scoped_refptr.376 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.377", %"class.WTF::AtomicString", %"class.WTF::Vector.379" }
%"class.WTF::RefCounted.377" = type { %"class.base::RefCounted.378" }
%"class.base::RefCounted.378" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.379" = type { %"class.WTF::VectorBuffer.380" }
%"class.WTF::VectorBuffer.380" = type { %"class.WTF::VectorBufferBase.306", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1093" = type { %"class.blink::MemberBase.1094" }
%"class.blink::MemberBase.1094" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1095" = type { %"class.WTF::Vector.1098" }
%"class.WTF::Vector.1098" = type { %"class.WTF::VectorBuffer.1099" }
%"class.WTF::VectorBuffer.1099" = type { %"class.WTF::VectorBufferBase.1100" }
%"class.WTF::VectorBufferBase.1100" = type { %"class.blink::Member.1101"*, i32, i32 }
%"class.blink::Member.1101" = type opaque
%"class.std::__1::unique_ptr.1103" = type { %"class.std::__1::__compressed_pair.1104" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.1105" }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1109" = type { %"class.WTF::HashSet.1112" }
%"class.WTF::HashSet.1112" = type { %"class.WTF::HashTable.1113" }
%"class.WTF::HashTable.1113" = type <{ %"class.blink::WeakMember.1115"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1115" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1116", i32, [4 x i8] }>
%"class.WTF::Vector.1116" = type { %"class.WTF::VectorBuffer.1117" }
%"class.WTF::VectorBuffer.1117" = type { %"class.WTF::VectorBufferBase.1118" }
%"class.WTF::VectorBufferBase.1118" = type { %"struct.std::__1::pair.1119"*, i32, i32 }
%"struct.std::__1::pair.1119" = type opaque
%"class.blink::Member.1122" = type { %"class.blink::MemberBase.1123" }
%"class.blink::MemberBase.1123" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1124" = type { %"class.WTF::VectorBuffer.1125" }
%"class.WTF::VectorBuffer.1125" = type { %"class.WTF::VectorBufferBase.1126" }
%"class.WTF::VectorBufferBase.1126" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1129" = type { %"class.std::__1::__compressed_pair.1130" }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.363"*, i32, i32 }
%"class.blink::HeapVector.1135" = type { %"class.WTF::Vector.1138" }
%"class.WTF::Vector.1138" = type { %"class.WTF::VectorBuffer.1139" }
%"class.WTF::VectorBuffer.1139" = type { %"class.WTF::VectorBufferBase.1140" }
%"class.WTF::VectorBufferBase.1140" = type { %"class.blink::Member.1141"*, i32, i32 }
%"class.blink::Member.1141" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.346" }
%"class.blink::Member.1143" = type { %"class.blink::MemberBase.1144" }
%"class.blink::MemberBase.1144" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1145" = type { %"class.blink::MemberBase.1146" }
%"class.blink::MemberBase.1146" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1147" = type { %"class.blink::MemberBase.1148" }
%"class.blink::MemberBase.1148" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1149" = type { %"class.blink::MemberBase.1150" }
%"class.blink::MemberBase.1150" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1151" = type { %"class.blink::MemberBase.1152" }
%"class.blink::MemberBase.1152" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1153" = type { %"class.WTF::HashTable.1154" }
%"class.WTF::HashTable.1154" = type <{ %"struct.WTF::KeyValuePair.1157"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1157" = type opaque
%"class.blink::Member.1158" = type { %"class.blink::MemberBase.1159" }
%"class.blink::MemberBase.1159" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1160" = type { %"class.blink::MemberBase.1161" }
%"class.blink::MemberBase.1161" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1162" = type { %"class.blink::MemberBase.1163" }
%"class.blink::MemberBase.1163" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1165" }
%"class.blink::MemberBase.1165" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1042", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1039, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.1039 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1040" }>
%"class.base::RefCountedThreadSafe.1040" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1041 }
%class.scoped_refptr.1041 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.1042" = type { %"class.blink::MemberBase.347" }
%"class.blink::HeapHashSet.1166" = type { %"class.WTF::HashSet.1169" }
%"class.WTF::HashSet.1169" = type { %"class.WTF::HashTable.1170" }
%"class.WTF::HashTable.1170" = type <{ %"class.blink::Member.1172"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1172" = type opaque
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1175" = type { %"class.blink::MemberBase.1176" }
%"class.blink::MemberBase.1176" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1179" = type { %"class.blink::MemberBase.1180" }
%"class.blink::MemberBase.1180" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1181" = type { %"class.blink::MemberBase.1182" }
%"class.blink::MemberBase.1182" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1183" = type { %"class.std::__1::__compressed_pair.1184" }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.1185" }
%"struct.std::__1::__compressed_pair_elem.1185" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1189" = type { %"class.std::__1::__compressed_pair.1190" }
%"class.std::__1::__compressed_pair.1190" = type { %"struct.std::__1::__compressed_pair_elem.1191" }
%"struct.std::__1::__compressed_pair_elem.1191" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.1192", %"class.WTF::HashSet.1192", %"class.WTF::HashSet.1192", %"class.WTF::HashSet.1192", %"class.WTF::HashSet.1192", %"class.WTF::HashSet.1192", i32, [4 x i8], %"class.WTF::HashMap.1196", %"class.WTF::HashMap.1196", %"class.WTF::HashMap.1196", %"class.WTF::HashMap.1196", %"class.WTF::HashMap.1196", %"class.WTF::HashMap.1196", %"class.WTF::HashMap.1196", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.1192" = type { %"class.WTF::HashTable.1193" }
%"class.WTF::HashTable.1193" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.1196" = type { %"class.WTF::HashTable.1197" }
%"class.WTF::HashTable.1197" = type <{ %"struct.WTF::KeyValuePair.1200"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1200" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1204" = type { %"class.blink::MemberBase.1205" }
%"class.blink::MemberBase.1205" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1206" = type { %"class.blink::MemberBase.1207" }
%"class.blink::MemberBase.1207" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1208" = type { %"class.blink::MemberBase.1209" }
%"class.blink::MemberBase.1209" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1211" }
%"class.blink::MemberBase.1211" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1212" = type { %"class.WTF::VectorBuffer.1213" }
%"class.WTF::VectorBuffer.1213" = type { %"class.WTF::VectorBufferBase.1214" }
%"class.WTF::VectorBufferBase.1214" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1217" = type { %"class.WTF::HashMap.1220" }
%"class.WTF::HashMap.1220" = type { %"class.WTF::HashTable.1221" }
%"class.WTF::HashTable.1221" = type <{ %"struct.WTF::KeyValuePair.1223"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1223" = type opaque
%"class.blink::Member.1224" = type { %"class.blink::MemberBase.1225" }
%"class.blink::MemberBase.1225" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1226" = type { %"class.std::__1::__compressed_pair.1227" }
%"class.std::__1::__compressed_pair.1227" = type { %"struct.std::__1::__compressed_pair_elem.1228" }
%"struct.std::__1::__compressed_pair_elem.1228" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1232" = type { %"class.blink::MemberBase.1233" }
%"class.blink::MemberBase.1233" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1234" = type { %"class.blink::MemberBase.1235" }
%"class.blink::MemberBase.1235" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1236" = type { %"class.WTF::HashMap.1239" }
%"class.WTF::HashMap.1239" = type { %"class.WTF::HashTable.1240" }
%"class.WTF::HashTable.1240" = type <{ %"struct.WTF::KeyValuePair.1242"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1242" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1243" }
%"class.blink::HeapHashSet.1243" = type { %"class.WTF::HashSet.1246" }
%"class.WTF::HashSet.1246" = type { %"class.WTF::HashTable.1247" }
%"class.WTF::HashTable.1247" = type <{ %"class.blink::WeakMember.1249"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1249" = type opaque
%"class.blink::Member.1250" = type { %"class.blink::MemberBase.1251" }
%"class.blink::MemberBase.1251" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1252" = type { %"class.blink::MemberBase.1253" }
%"class.blink::MemberBase.1253" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.346", %"class.blink::HeapHashSet.1259", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1266", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1259" = type { %"class.WTF::HashSet.1262" }
%"class.WTF::HashSet.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"class.blink::Member.1265"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1265" = type opaque
%"class.blink::HeapTaskRunnerTimer.1266" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1267", { i64, i64 } }
%"class.blink::WeakMember.1267" = type { %"class.blink::MemberBase.1253" }
%"class.blink::WeakMember.1254" = type { %"class.blink::MemberBase.339" }
%"class.blink::Member.1255" = type { %"class.blink::MemberBase.1256" }
%"class.blink::MemberBase.1256" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.340" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.352" }
%"class.blink::HeapHashMap.352" = type { %"class.WTF::HashMap.355" }
%"class.WTF::HashMap.355" = type { %"class.WTF::HashTable.356" }
%"class.WTF::HashTable.356" = type <{ %"struct.WTF::KeyValuePair.358"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.358" = type { %"class.WTF::AtomicString", %"class.blink::Member.359" }
%"class.blink::Member.359" = type { %"class.blink::MemberBase.360" }
%"class.blink::MemberBase.360" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.363", i32, %"class.blink::HeapVector.383" }
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.394" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.396" }
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::HeapHashMap.398"* }
%"class.blink::HeapHashMap.398" = type opaque
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.401" = type { %"class.WTF::Vector.404" }
%"class.WTF::Vector.404" = type { %"class.WTF::VectorBuffer.405" }
%"class.WTF::VectorBuffer.405" = type { %"class.WTF::VectorBufferBase.406" }
%"class.WTF::VectorBufferBase.406" = type { %"class.blink::Member.407"*, i32, i32 }
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.412" = type { %class.scoped_refptr.413 }
%class.scoped_refptr.413 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.414", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.414" = type { %"class.base::RefCounted.415" }
%"class.base::RefCounted.415" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.416" = type { %class.scoped_refptr.417 }
%class.scoped_refptr.417 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.418", [4 x i8], %"class.blink::DataRef.420", %"class.blink::DataRef.486", %"class.blink::TransformOperations", %class.scoped_refptr.318, %"class.blink::Persistent.610", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.418" = type { %"class.base::RefCounted.419" }
%"class.base::RefCounted.419" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.420" = type { %class.scoped_refptr.421 }
%class.scoped_refptr.421 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.422", [4 x i8], %"class.blink::DataRef.424", %"class.blink::Persistent.462", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.422" = type { %"class.base::RefCounted.423" }
%"class.base::RefCounted.423" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.424" = type { %class.scoped_refptr.425 }
%class.scoped_refptr.425 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.426", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.444, %class.scoped_refptr.447, %class.scoped_refptr.450, %class.scoped_refptr.453, %class.scoped_refptr.454, %class.scoped_refptr.455, %"class.blink::Persistent.462", %"class.blink::Persistent.477", %"class.absl::optional.481", %"class.absl::optional.481", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.426" = type { %"class.base::RefCounted.427" }
%"class.base::RefCounted.427" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.428", %"class.std::__1::unique_ptr.433" }
%"class.WTF::Vector.428" = type { %"class.WTF::VectorBuffer.429" }
%"class.WTF::VectorBuffer.429" = type { %"class.WTF::VectorBufferBase.430" }
%"class.WTF::VectorBufferBase.430" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.436", %"class.WTF::Vector.428", i32, i32 }
%"class.WTF::Vector.436" = type { %"class.WTF::VectorBuffer.437" }
%"class.WTF::VectorBuffer.437" = type { %"class.WTF::VectorBufferBase.438" }
%"class.WTF::VectorBufferBase.438" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.444 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.445", [4 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.447 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.448", [4 x i8] }>
%"class.WTF::RefCounted.448" = type { %"class.base::RefCounted.449" }
%"class.base::RefCounted.449" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.450 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.451" }>
%"class.WTF::RefCounted.451" = type { %"class.base::RefCounted.452" }
%"class.base::RefCounted.452" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.453 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.454 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.455 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.456", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.456" = type { %"class.base::RefCounted.457" }
%"class.base::RefCounted.457" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.458" }
%"class.blink::DataRef.458" = type { %class.scoped_refptr.459 }
%class.scoped_refptr.459 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.326", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.460" }
%"class.WTF::RefCounted.460" = type { %"class.base::RefCounted.461" }
%"class.base::RefCounted.461" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.477" = type { %"class.blink::PersistentBase.478" }
%"class.blink::PersistentBase.478" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.289" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.447, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.481" = type { %"class.absl::optional_internal::optional_data.482" }
%"class.absl::optional_internal::optional_data.482" = type { %"class.absl::optional_internal::optional_data_base.483" }
%"class.absl::optional_internal::optional_data_base.483" = type { %"class.absl::optional_internal::optional_data_dtor_base.484" }
%"class.absl::optional_internal::optional_data_dtor_base.484" = type { i8, [3 x i8], %union.anon.485 }
%union.anon.485 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.462" = type { %"class.blink::PersistentBase.463" }
%"class.blink::PersistentBase.463" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.289" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.466" }
%"class.blink::HeapVector.466" = type { %"class.WTF::Vector.469" }
%"class.WTF::Vector.469" = type { %"class.WTF::VectorBuffer.470" }
%"class.WTF::VectorBuffer.470" = type { %"class.WTF::VectorBufferBase.471" }
%"class.WTF::VectorBufferBase.471" = type { %"class.blink::Member.472"*, i32, i32 }
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.486" = type { %class.scoped_refptr.487 }
%class.scoped_refptr.487 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.488", %"class.blink::DataRef.490", %"class.blink::DataRef.494", %"class.blink::DataRef.503", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.533", %"class.std::__1::unique_ptr.571", %"class.std::__1::unique_ptr.582", %"class.std::__1::unique_ptr.593", %"class.WTF::Vector.599", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.488" = type { %"class.base::RefCounted.489" }
%"class.base::RefCounted.489" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.490" = type { %class.scoped_refptr.491 }
%class.scoped_refptr.491 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.492", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.492" = type { %"class.base::RefCounted.493" }
%"class.base::RefCounted.493" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.494" = type { %class.scoped_refptr.495 }
%class.scoped_refptr.495 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.496", [4 x i8], %"class.WTF::Vector.498", i8, [7 x i8] }>
%"class.WTF::RefCounted.496" = type { %"class.base::RefCounted.497" }
%"class.base::RefCounted.497" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.498" = type { %"class.WTF::VectorBuffer.499" }
%"class.WTF::VectorBuffer.499" = type { %"class.WTF::VectorBufferBase.500" }
%"class.WTF::VectorBufferBase.500" = type { i32*, i32, i32 }
%"class.blink::DataRef.503" = type { %class.scoped_refptr.504 }
%class.scoped_refptr.504 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.505", [4 x i8], %"class.WTF::HashMap.507", %"class.WTF::HashMap.507", %"class.WTF::HashMap.507", %"class.WTF::HashMap.507", %"class.WTF::HashMap.507", %"class.WTF::HashMap.507", %"class.WTF::HashMap.512", %"class.WTF::HashMap.512", %"class.WTF::HashMap.512", %"class.WTF::HashMap.512", %"class.WTF::HashMap.517", %"class.WTF::Vector.428", %"class.WTF::Vector.428", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.505" = type { %"class.base::RefCounted.506" }
%"class.base::RefCounted.506" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.507" = type { %"class.WTF::HashTable.508" }
%"class.WTF::HashTable.508" = type <{ %"struct.WTF::KeyValuePair.511"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.511" = type { %"class.WTF::String", %"class.WTF::Vector.6" }
%"class.WTF::HashMap.512" = type { %"class.WTF::HashTable.513" }
%"class.WTF::HashTable.513" = type <{ %"struct.WTF::KeyValuePair.516"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.516" = type { i64, %"class.WTF::Vector.599" }
%"class.WTF::HashMap.517" = type { %"class.WTF::HashTable.518" }
%"class.WTF::HashTable.518" = type <{ %"struct.WTF::KeyValuePair.521"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.521" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.525" }
%"class.WTF::HashMap.525" = type { %"class.WTF::HashTable.526" }
%"class.WTF::HashTable.526" = type <{ %"struct.WTF::KeyValuePair.529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.529" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1391", %"class.absl::optional.1391", %"class.absl::optional.1391" }
%"class.absl::optional.1391" = type { %"class.absl::optional_internal::optional_data.1392" }
%"class.absl::optional_internal::optional_data.1392" = type { %"class.absl::optional_internal::optional_data_base.1393" }
%"class.absl::optional_internal::optional_data_base.1393" = type { %"class.absl::optional_internal::optional_data_dtor_base.1394" }
%"class.absl::optional_internal::optional_data_dtor_base.1394" = type { i8, %union.anon.1395 }
%union.anon.1395 = type { i32 }
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.304", %"class.WTF::Vector.548", %"class.WTF::Vector.536", %"class.WTF::Vector.553", %"class.WTF::Vector.558", %"class.WTF::Vector.563" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.536", %"class.WTF::Vector.536", %"class.WTF::Vector.541" }
%"class.WTF::Vector.541" = type { %"class.WTF::VectorBuffer.542" }
%"class.WTF::VectorBuffer.542" = type { %"class.WTF::VectorBufferBase.543" }
%"class.WTF::VectorBufferBase.543" = type { %class.scoped_refptr.544*, i32, i32 }
%class.scoped_refptr.544 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.545" }
%"class.base::RefCountedThreadSafe.545" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.548" = type { %"class.WTF::VectorBuffer.549" }
%"class.WTF::VectorBuffer.549" = type { %"class.WTF::VectorBufferBase.550" }
%"class.WTF::VectorBufferBase.550" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.536" = type { %"class.WTF::VectorBuffer.537" }
%"class.WTF::VectorBuffer.537" = type { %"class.WTF::VectorBufferBase.538" }
%"class.WTF::VectorBufferBase.538" = type { double*, i32, i32 }
%"class.WTF::Vector.553" = type { %"class.WTF::VectorBuffer.554" }
%"class.WTF::VectorBuffer.554" = type { %"class.WTF::VectorBufferBase.555" }
%"class.WTF::VectorBufferBase.555" = type { i32*, i32, i32 }
%"class.WTF::Vector.558" = type { %"class.WTF::VectorBuffer.559" }
%"class.WTF::VectorBuffer.559" = type { %"class.WTF::VectorBufferBase.560" }
%"class.WTF::VectorBufferBase.560" = type { i32*, i32, i32 }
%"class.WTF::Vector.563" = type { %"class.WTF::VectorBuffer.564" }
%"class.WTF::VectorBuffer.564" = type { %"class.WTF::VectorBufferBase.565" }
%"class.WTF::VectorBufferBase.565" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.571" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.574" }
%"class.WTF::Vector.574" = type { %"class.WTF::VectorBuffer.575" }
%"class.WTF::VectorBuffer.575" = type { %"class.WTF::VectorBufferBase.576" }
%"class.WTF::VectorBufferBase.576" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.585" }
%"class.WTF::Vector.585" = type { %"class.WTF::VectorBuffer.586" }
%"class.WTF::VectorBuffer.586" = type { %"class.WTF::VectorBufferBase.587" }
%"class.WTF::VectorBufferBase.587" = type { %"class.blink::Persistent.326"*, i32, i32 }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.326", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.604" }
%"class.WTF::Vector.604" = type { %"class.WTF::VectorBuffer.605" }
%"class.WTF::VectorBuffer.605" = type { %"class.WTF::VectorBufferBase.606" }
%"class.WTF::VectorBufferBase.606" = type { %class.scoped_refptr.607*, i32, i32 }
%class.scoped_refptr.607 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.451", [4 x i8] }>
%"class.blink::Persistent.610" = type { %"class.blink::PersistentBase.611" }
%"class.blink::PersistentBase.611" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.289" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.614" }
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.616" = type { %class.scoped_refptr.617 }
%class.scoped_refptr.617 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.618", [4 x i8], %"class.blink::DataRef.620", %"class.blink::DataRef.624", %"class.blink::DataRef.645", %"class.blink::DataRef.663", %"class.blink::DataRef.675", %"class.blink::DataRef.679", %class.scoped_refptr.649, i32, [4 x i8] }>
%"class.WTF::RefCounted.618" = type { %"class.base::RefCounted.619" }
%"class.base::RefCounted.619" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.620" = type { %class.scoped_refptr.621 }
%class.scoped_refptr.621 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.622", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.622" = type { %"class.base::RefCounted.623" }
%"class.base::RefCounted.623" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.624" = type { %class.scoped_refptr.625 }
%class.scoped_refptr.625 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.626", %class.scoped_refptr.628, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.626" = type { %"class.base::RefCounted.627" }
%"class.base::RefCounted.627" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.628 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.629", %"class.std::__1::unique_ptr.635", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.448" }>
%"class.std::__1::unique_ptr.629" = type { %"class.std::__1::__compressed_pair.630" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.635" = type { %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.638, i32, %"struct.std::__1::atomic.67", %"struct.std::__1::atomic.67", i8, i8 }>
%class.sk_sp.638 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.639, %class.SkTDArray.640, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.62" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.639 = type { i8*, i32, i32 }
%class.SkTDArray.640 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.641 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.62", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.641 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.259", [3 x i8] }
%"class.blink::DataRef.645" = type { %class.scoped_refptr.646 }
%class.scoped_refptr.646 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.647", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.647" = type { %"class.base::RefCounted.648" }
%"class.base::RefCounted.648" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.649, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.663" = type { %class.scoped_refptr.664 }
%class.scoped_refptr.664 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.665", [4 x i8], %class.scoped_refptr.667, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.665" = type { %"class.base::RefCounted.666" }
%"class.base::RefCounted.666" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.667 = type { %"class.base::RefCountedData.668"* }
%"class.base::RefCountedData.668" = type { %"class.base::RefCountedThreadSafe.669", %"class.WTF::Vector.670" }
%"class.base::RefCountedThreadSafe.669" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.670" = type { %"class.WTF::VectorBuffer.671" }
%"class.WTF::VectorBuffer.671" = type { %"class.WTF::VectorBufferBase.672" }
%"class.WTF::VectorBufferBase.672" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.675" = type { %class.scoped_refptr.676 }
%class.scoped_refptr.676 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.677", %class.scoped_refptr.649, %class.scoped_refptr.649, %class.scoped_refptr.649 }
%"class.WTF::RefCounted.677" = type { %"class.base::RefCounted.678" }
%"class.base::RefCounted.678" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.679" = type { %class.scoped_refptr.680 }
%class.scoped_refptr.680 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.681", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.649 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.650", %"class.blink::Persistent.652", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.650" = type { %"class.base::RefCounted.651" }
%"class.base::RefCounted.651" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.652" = type { %"class.blink::PersistentBase.653" }
%"class.blink::PersistentBase.653" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.289" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.363", %"class.blink::HeapHashMap.656" }
%"class.blink::HeapHashMap.656" = type { %"class.WTF::HashMap.659" }
%"class.WTF::HashMap.659" = type { %"class.WTF::HashTable.660" }
%"class.WTF::HashTable.660" = type <{ %"struct.WTF::KeyValuePair.662"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.662" = type opaque
%"class.blink::DataRef.683" = type { %class.scoped_refptr.684 }
%class.scoped_refptr.684 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.685", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.685" = type { %"class.base::RefCounted.686" }
%"class.base::RefCounted.686" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.687" = type { %class.scoped_refptr.688 }
%class.scoped_refptr.688 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.689", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.689" = type { %"class.base::RefCounted.690" }
%"class.base::RefCounted.690" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.691" = type { %class.scoped_refptr.692 }
%class.scoped_refptr.692 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.693", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.693" = type { %"class.base::RefCounted.694" }
%"class.base::RefCounted.694" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.695" = type { %class.scoped_refptr.696 }
%class.scoped_refptr.696 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.697", %class.scoped_refptr.699 }
%"class.WTF::RefCounted.697" = type { %"class.base::RefCounted.698" }
%"class.base::RefCounted.698" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.699 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.974", %"class.blink::StyleVariables", %class.scoped_refptr.699 }
%"class.WTF::RefCounted.974" = type { %"class.base::RefCounted.975" }
%"class.base::RefCounted.975" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.700" = type { %"class.base::RefCounted.701" }
%"class.base::RefCounted.701" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.702" = type { %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.705" }
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.WTF::Vector.708"* }
%"class.WTF::Vector.708" = type { %"class.WTF::VectorBuffer.1406" }
%"class.WTF::VectorBuffer.1406" = type { %"class.WTF::VectorBufferBase.1407", [32 x i8] }
%"class.WTF::VectorBufferBase.1407" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.715" }
%"class.blink::MemberBase.715" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.716" }
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.719", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.725", %"class.std::__1::unique_ptr.846", i8, %"class.absl::optional.852", %class.scoped_refptr.828, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.857" }
%"class.std::__1::unique_ptr.719" = type { %"class.std::__1::__compressed_pair.720" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.728, %class.scoped_refptr.728, %class.scoped_refptr.728, %class.scoped_refptr.728, %class.scoped_refptr.728, %class.scoped_refptr.728, %class.scoped_refptr.763, %class.scoped_refptr.777, %class.scoped_refptr.778, %class.scoped_refptr.778, %class.scoped_refptr.778, %class.scoped_refptr.778, %class.scoped_refptr.778, %class.scoped_refptr.778, %class.scoped_refptr.818, %class.scoped_refptr.819, %class.scoped_refptr.819, %class.scoped_refptr.819, %class.scoped_refptr.819, %class.scoped_refptr.819, %class.scoped_refptr.819, %class.scoped_refptr.819, %class.scoped_refptr.819, %class.scoped_refptr.842 }
%class.scoped_refptr.728 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.745" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.729", i8, i8, %class.scoped_refptr.731, i32, i32 }
%"class.WTF::RefCounted.729" = type { %"class.base::RefCounted.730" }
%"class.base::RefCounted.730" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.731 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.738, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.739", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.732" }
%"class.std::__1::unique_ptr.732" = type { %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.738 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.764", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.764" = type { %"class.WTF::RefCounted.765", i8, i8, %class.scoped_refptr.738, i32, i32 }
%"class.WTF::RefCounted.765" = type { %"class.base::RefCounted.766" }
%"class.base::RefCounted.766" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.767" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.767" = type { %"class.absl::optional_internal::optional_data.768" }
%"class.absl::optional_internal::optional_data.768" = type { %"class.absl::optional_internal::optional_data_base.769" }
%"class.absl::optional_internal::optional_data_base.769" = type { %"class.absl::optional_internal::optional_data_dtor_base.770" }
%"class.absl::optional_internal::optional_data_dtor_base.770" = type { i8, %union.anon.771 }
%union.anon.771 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.772" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.748", %"class.std::__1::unique_ptr.754", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.748" = type { %"class.std::__1::__compressed_pair.749" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.750" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.763 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.777 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.778 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.779" }
%"class.blink::PaintPropertyNode.779" = type { %"class.WTF::RefCounted.780", i8, i8, %class.scoped_refptr.782, i32, i32 }
%"class.WTF::RefCounted.780" = type { %"class.base::RefCounted.781" }
%"class.base::RefCounted.781" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.782 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.731, %class.scoped_refptr.783, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.805", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.783 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.820" }
%"class.blink::PaintPropertyNode.820" = type { %"class.WTF::RefCounted.821", i8, i8, %class.scoped_refptr.783, i32, i32 }
%"class.WTF::RefCounted.821" = type { %"class.base::RefCounted.822" }
%"class.base::RefCounted.822" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.784" }
%"class.std::__1::vector.784" = type { %"class.std::__1::__vector_base.785" }
%"class.std::__1::__vector_base.785" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.800" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.786, [20 x float], i32, [4 x i8], %"class.std::__1::vector.793", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.786 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.787, i32, %"class.absl::optional.788", i8, i32 }
%class.sk_sp.787 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.788" = type { %"class.absl::optional_internal::optional_data.789" }
%"class.absl::optional_internal::optional_data.789" = type { %"class.absl::optional_internal::optional_data_base.790" }
%"class.absl::optional_internal::optional_data_base.790" = type { %"class.absl::optional_internal::optional_data_dtor_base.791" }
%"class.absl::optional_internal::optional_data_dtor_base.791" = type { i8, %union.anon.792 }
%union.anon.792 = type { %struct.SkRect }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.795" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.805" = type { %"class.std::__1::__compressed_pair.806" }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.811" }
%"class.std::__1::vector.811" = type { %"class.std::__1::__vector_base.812" }
%"class.std::__1::__vector_base.812" = type { i32*, i32*, %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { i32* }
%class.scoped_refptr.818 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.819 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.831" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.731, %"class.absl::optional.823", %class.scoped_refptr.828, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.823" = type { %"class.absl::optional_internal::optional_data.824" }
%"class.absl::optional_internal::optional_data.824" = type { %"class.absl::optional_internal::optional_data_base.825" }
%"class.absl::optional_internal::optional_data_base.825" = type { %"class.absl::optional_internal::optional_data_dtor_base.826" }
%"class.absl::optional_internal::optional_data_dtor_base.826" = type { i8, [3 x i8], %union.anon.827 }
%union.anon.827 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.831" = type { %"class.std::__1::__compressed_pair.832" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.834", i32, [4 x i8] }>
%"class.WTF::Vector.834" = type { %"class.WTF::VectorBuffer.835" }
%"class.WTF::VectorBuffer.835" = type { %"class.WTF::VectorBufferBase.836" }
%"class.WTF::VectorBufferBase.836" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.842 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.846" = type { %"class.std::__1::__compressed_pair.847" }
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.731, %class.scoped_refptr.783, %class.scoped_refptr.782 }
%"class.absl::optional.852" = type { %"class.absl::optional_internal::optional_data.853" }
%"class.absl::optional_internal::optional_data.853" = type { %"class.absl::optional_internal::optional_data_base.854" }
%"class.absl::optional_internal::optional_data_base.854" = type { %"class.absl::optional_internal::optional_data_dtor_base.855" }
%"class.absl::optional_internal::optional_data_dtor_base.855" = type { i8, %union.anon.856 }
%union.anon.856 = type { %"class.blink::IntRect" }
%class.scoped_refptr.828 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.829", [4 x i8] }
%"class.WTF::RefCounted.829" = type { %"class.base::RefCounted.830" }
%"class.base::RefCounted.830" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.859" }
%"struct.std::__1::__compressed_pair_elem.859" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.866 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.867" = type { %"class.WTF::VectorBuffer.868" }
%"class.WTF::VectorBuffer.868" = type { %"class.WTF::VectorBufferBase.869", [8 x i8] }
%"class.WTF::VectorBufferBase.869" = type { %class.scoped_refptr.866*, i32, i32 }
%"class.std::__1::unique_ptr.872" = type { %"class.std::__1::__compressed_pair.873" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.874" }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.875", %"class.absl::optional.884", %"class.absl::optional.889" }
%"class.absl::optional.875" = type { %"class.absl::optional_internal::optional_data.876" }
%"class.absl::optional_internal::optional_data.876" = type { %"class.absl::optional_internal::optional_data_base.877" }
%"class.absl::optional_internal::optional_data_base.877" = type { %"class.absl::optional_internal::optional_data_dtor_base.878" }
%"class.absl::optional_internal::optional_data_dtor_base.878" = type { i8, %union.anon.879 }
%union.anon.879 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.884" = type { %"class.absl::optional_internal::optional_data.885" }
%"class.absl::optional_internal::optional_data.885" = type { %"class.absl::optional_internal::optional_data_base.886" }
%"class.absl::optional_internal::optional_data_base.886" = type { %"class.absl::optional_internal::optional_data_dtor_base.887" }
%"class.absl::optional_internal::optional_data_dtor_base.887" = type { i8, [3 x i8], %union.anon.888 }
%union.anon.888 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.889" = type { %"class.absl::optional_internal::optional_data.890" }
%"class.absl::optional_internal::optional_data.890" = type { %"class.absl::optional_internal::optional_data_base.891" }
%"class.absl::optional_internal::optional_data_base.891" = type { %"class.absl::optional_internal::optional_data_dtor_base.892" }
%"class.absl::optional_internal::optional_data_dtor_base.892" = type { i8, %union.anon.893 }
%union.anon.893 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.897 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type opaque
%"class.blink::Persistent.898" = type { %"class.blink::PersistentBase.899" }
%"class.blink::PersistentBase.899" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.289" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.902", %"struct.blink::PhysicalRect", %"class.blink::Member.911" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"class.WTF::HashSet"* }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.905" }
%"class.WTF::HashTable.905" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.911" = type { %"class.blink::MemberBase.912" }
%"class.blink::MemberBase.912" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.913", %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"class.std::__1::__tree_const_iterator" = type { %"class.std::__1::__tree_end_node"* }
%"class.WTF::HashMap.921" = type { %"class.WTF::HashTable.922" }
%"class.WTF::HashTable.922" = type <{ %"struct.WTF::KeyValuePair.925"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.925" = type { %"class.blink::LayoutBox"*, %"struct.blink::GridArea" }
%"class.WTF::HashMap.926" = type { %"class.WTF::HashTable.927" }
%"class.WTF::HashTable.927" = type <{ %"struct.WTF::KeyValuePair.930"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.930" = type { %"class.blink::LayoutBox"*, i64 }
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.WTF::LinkedHashSet"* }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1425", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1425" = type { %"class.WTF::HashTable.1426" }
%"class.WTF::HashTable.1426" = type <{ %"struct.WTF::KeyValuePair.1429"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1429" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1430", i32, i32 }
%"class.WTF::Vector.1430" = type { %"class.WTF::VectorBuffer.1431" }
%"class.WTF::VectorBuffer.1431" = type { %"class.WTF::VectorBufferBase.1432" }
%"class.WTF::VectorBufferBase.1432" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type { i32, i32, i64 }
%"class.blink::LayoutGrid" = type <{ %"class.blink::LayoutBlock.base", [6 x i8], %"class.blink::LayoutNGGridInterface", %"class.std::__1::unique_ptr.953", %"class.blink::GridTrackSizingAlgorithm", %"class.WTF::Vector.959", %"class.WTF::Vector.959", %"struct.blink::ContentAlignmentData", %"struct.blink::ContentAlignmentData", %"class.WTF::HashMap.964", %"class.WTF::HashMap.964", i8, i8, %"class.absl::optional.969", [4 x i8] }>
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutNGGridInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"class.blink::Grid"* }
%"class.WTF::Vector.959" = type { %"class.WTF::VectorBuffer.960" }
%"class.WTF::VectorBuffer.960" = type { %"class.WTF::VectorBufferBase.961" }
%"class.WTF::VectorBufferBase.961" = type { %"class.blink::LayoutUnit"*, i32, i32 }
%"struct.blink::ContentAlignmentData" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashMap.964" = type { %"class.WTF::HashTable.965" }
%"class.WTF::HashTable.965" = type <{ %"struct.WTF::KeyValuePair.968"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.968" = type opaque
%"class.absl::optional.969" = type { %"class.absl::optional_internal::optional_data.970" }
%"class.absl::optional_internal::optional_data.970" = type { %"class.absl::optional_internal::optional_data_base.971" }
%"class.absl::optional_internal::optional_data_base.971" = type { %"class.absl::optional_internal::optional_data_dtor_base.972" }
%"class.absl::optional_internal::optional_data_dtor_base.972" = type { i8, %union.anon.973 }
%union.anon.973 = type { i8 }
%"class.std::__1::unique_ptr.937" = type { %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"class.blink::GridTrackSizingAlgorithmStrategy"* }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::GridBaselineAlignment" = type { i8, [7 x i8], %"class.WTF::HashMap.943", %"class.WTF::HashMap.943" }
%"class.WTF::HashMap.943" = type { %"class.WTF::HashTable.944" }
%"class.WTF::HashTable.944" = type <{ %"struct.WTF::KeyValuePair.947"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.947" = type { i32, %"class.std::__1::unique_ptr.1410" }
%"class.std::__1::unique_ptr.1410" = type { %"class.std::__1::__compressed_pair.1411" }
%"class.std::__1::__compressed_pair.1411" = type { %"struct.std::__1::__compressed_pair_elem.1412" }
%"struct.std::__1::__compressed_pair_elem.1412" = type { %"class.blink::BaselineContext"* }
%"class.blink::BaselineContext" = type { %"class.WTF::Vector.1413" }
%"class.WTF::Vector.1413" = type { %"class.WTF::VectorBuffer.1414" }
%"class.WTF::VectorBuffer.1414" = type { %"class.WTF::VectorBufferBase.1415" }
%"class.WTF::VectorBufferBase.1415" = type { %"class.blink::BaselineGroup"*, i32, i32 }
%"class.blink::BaselineGroup" = type { i8, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.948" = type { %"class.WTF::HashTable.949" }
%"class.WTF::HashTable.949" = type <{ %"struct.WTF::KeyValuePair.952"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.952" = type <{ %"class.blink::LayoutBox"*, i8, [7 x i8] }>
%"class.blink::GridTrackSizingAlgorithm::StateMachine" = type { %"class.blink::GridTrackSizingAlgorithm"* }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.264", %"class.blink::DataRef.412", %"class.blink::DataRef.416", %"class.blink::DataRef.616", %"class.blink::DataRef.683", %"class.blink::DataRef.687", %"class.blink::DataRef.691", %"class.blink::DataRef.695", [20 x i8], [4 x i8] }>
%"class.WTF::Vector.1360" = type { %"class.WTF::VectorBuffer.1361" }
%"class.WTF::VectorBuffer.1361" = type { %"class.WTF::VectorBufferBase.8", [64 x i8] }
%"class.WTF::HashSet.1367" = type { %"class.WTF::HashTable.1368" }
%"class.WTF::HashTable.1368" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.1349" = type { %"class.WTF::VectorBuffer.1350" }
%"class.WTF::VectorBuffer.1350" = type { %"class.WTF::VectorBufferBase.1351" }
%"class.WTF::VectorBufferBase.1351" = type { %"class.blink::GridTrack"**, i32, i32 }
%"class.blink::DefiniteSizeStrategy" = type { %"class.blink::GridTrackSizingAlgorithmStrategy" }
%"class.blink::IndefiniteSizeStrategy" = type { %"class.blink::GridTrackSizingAlgorithmStrategy" }
%"class.blink::Grid::GridIterator" = type { i32 (...)**, i32, i64, i64, i64 }
%"struct.std::__1::__less.1469" = type { i8 }
%"class.blink::GridItemWithSpan" = type <{ %"class.blink::LayoutBox"*, %"struct.blink::GridSpan", [4 x i8] }>
%"class.WTF::Vector.1354" = type { %"class.WTF::VectorBuffer.1355" }
%"class.WTF::VectorBuffer.1355" = type { %"class.WTF::VectorBufferBase.1356" }
%"class.WTF::VectorBufferBase.1356" = type { %"class.blink::GridItemWithSpan"*, i32, i32 }
%"struct.blink::GridItemsSpanGroupRange" = type { %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv = comdat any

$_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv = comdat any

$_ZNK3WTF7HashMapIPKN5blink9LayoutBoxEbNS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS7_IbEENS_18PartitionAllocatorEE2atERKS4_ = comdat any

$_ZNK5blink24GridTrackSizingAlgorithm23DistributeSpaceToTracksILNS_25TrackSizeComputationPhaseE5EEEvRN3WTF6VectorIPNS_9GridTrackELj0ENS3_18PartitionAllocatorEEEPS8_RNS_10LayoutUnitE = comdat any

$_ZN5blink24GridTrackSizingAlgorithm39IncreaseSizesToAccommodateSpanningItemsILNS_25TrackSizeComputationPhaseE0EEEvRKNS_23GridItemsSpanGroupRangeE = comdat any

$_ZN5blink24GridTrackSizingAlgorithm39IncreaseSizesToAccommodateSpanningItemsILNS_25TrackSizeComputationPhaseE1EEEvRKNS_23GridItemsSpanGroupRangeE = comdat any

$_ZN5blink24GridTrackSizingAlgorithm39IncreaseSizesToAccommodateSpanningItemsILNS_25TrackSizeComputationPhaseE2EEEvRKNS_23GridItemsSpanGroupRangeE = comdat any

$_ZN5blink24GridTrackSizingAlgorithm39IncreaseSizesToAccommodateSpanningItemsILNS_25TrackSizeComputationPhaseE3EEEvRKNS_23GridItemsSpanGroupRangeE = comdat any

$_ZN5blink24GridTrackSizingAlgorithm39IncreaseSizesToAccommodateSpanningItemsILNS_25TrackSizeComputationPhaseE4EEEvRKNS_23GridItemsSpanGroupRangeE = comdat any

$_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE6resizeEj = comdat any

$_ZN5blink22IndefiniteSizeStrategyD0Ev = comdat any

$_ZN5blink20DefiniteSizeStrategyD0Ev = comdat any

$_ZNK5blink20DefiniteSizeStrategy33RecomputeUsedFlexFractionIfNeededERN3WTF6VectorImLj0ENS1_18PartitionAllocatorEEERdRNS2_INS_10LayoutUnitELj0ES3_EERS7_ = comdat any

$_ZNK5blink20DefiniteSizeStrategy26IsComputingSizeContainmentEv = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEEaSERKSG_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS4_RKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN5blink13GridTrackSize28CacheMinMaxTrackBreadthTypesEv = comdat any

$_ZN3WTF12VectorBufferImLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPm = comdat any

$_ZN5blink13GridTrackSizeaSERKS0_ = comdat any

$_ZNK3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES4_bEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNSt3__16__sortIRPFbPKN5blink9GridTrackES4_EPPS2_EEvT0_SA_T_ = comdat any

$_ZNSt3__17__sort4IRPFbPKN5blink9GridTrackES4_EPPS2_EEjT0_SA_SA_SA_T_ = comdat any

$_ZNSt3__17__sort5IRPFbPKN5blink9GridTrackES4_EPPS2_EEjT0_SA_SA_SA_SA_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRPFbPKN5blink9GridTrackES4_EPPS2_EEvT0_SA_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbPKN5blink9GridTrackES4_EPPS2_EEbT0_SA_T_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink9GridTrackEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9GridTrackEEEmm = comdat any

$_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRmEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm = comdat any

$_ZN3WTF6VectorIN5blink16GridItemWithSpanELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16GridItemWithSpanEEEmm = comdat any

$_ZNSt3__16__sortIRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEvT0_S7_T_ = comdat any

$_ZNSt3__17__sort3IRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEjT0_S7_S7_T_ = comdat any

$_ZNSt3__17__sort4IRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEjT0_S7_S7_S7_T_ = comdat any

$_ZNSt3__17__sort5IRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEjT0_S7_S7_S7_S7_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEbT0_S7_T_ = comdat any

$_ZNK5blink24GridTrackSizingAlgorithm23DistributeSpaceToTracksILNS_25TrackSizeComputationPhaseE0EEEvRN3WTF6VectorIPNS_9GridTrackELj0ENS3_18PartitionAllocatorEEEPS8_RNS_10LayoutUnitE = comdat any

$_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZNK5blink24GridTrackSizingAlgorithm23DistributeSpaceToTracksILNS_25TrackSizeComputationPhaseE1EEEvRN3WTF6VectorIPNS_9GridTrackELj0ENS3_18PartitionAllocatorEEEPS8_RNS_10LayoutUnitE = comdat any

$_ZNK5blink24GridTrackSizingAlgorithm23DistributeSpaceToTracksILNS_25TrackSizeComputationPhaseE2EEEvRN3WTF6VectorIPNS_9GridTrackELj0ENS3_18PartitionAllocatorEEEPS8_RNS_10LayoutUnitE = comdat any

$_ZNK5blink24GridTrackSizingAlgorithm23DistributeSpaceToTracksILNS_25TrackSizeComputationPhaseE3EEEvRN3WTF6VectorIPNS_9GridTrackELj0ENS3_18PartitionAllocatorEEEPS8_RNS_10LayoutUnitE = comdat any

$_ZNK5blink24GridTrackSizingAlgorithm23DistributeSpaceToTracksILNS_25TrackSizeComputationPhaseE4EEEvRN3WTF6VectorIPNS_9GridTrackELj0ENS3_18PartitionAllocatorEEEPS8_RNS_10LayoutUnitE = comdat any

$_ZN3WTF6VectorImLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRKmEEvOT_ = comdat any

$_ZN3WTF6VectorImLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorImLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_29UnsignedWithZeroKeyHashTraitsImEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKmRmEENS_18HashTableAddResultIS7_mEEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_29UnsignedWithZeroKeyHashTraitsImEES5_NS_18PartitionAllocatorEE6ExpandEPm = comdat any

$_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_29UnsignedWithZeroKeyHashTraitsImEES5_NS_18PartitionAllocatorEE8RehashToEPmjS8_ = comdat any

$_ZNK3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm = comdat any

$_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink9GridTrackENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS4_bEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

@_ZTVN5blink32GridTrackSizingAlgorithmStrategyE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)* @_ZN5blink32GridTrackSizingAlgorithmStrategyD2Ev to i8*), i8* bitcast (void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)* @_ZN5blink32GridTrackSizingAlgorithmStrategyD0Ev to i8*), i8* bitcast (i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)* @_ZNK5blink32GridTrackSizingAlgorithmStrategy18MinContentForChildERNS_9LayoutBoxE to i8*), i8* bitcast (i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)* @_ZNK5blink32GridTrackSizingAlgorithmStrategy18MaxContentForChildERNS_9LayoutBoxE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*, %"class.blink::Length"*, i32)* @_ZNK5blink32GridTrackSizingAlgorithmStrategy22MinLogicalSizeForChildERNS_9LayoutBoxERKNS_6LengthENS_10LayoutUnitE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink22IndefiniteSizeStrategyE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)* @_ZN5blink32GridTrackSizingAlgorithmStrategyD2Ev to i8*), i8* bitcast (void (%"class.blink::IndefiniteSizeStrategy"*)* @_ZN5blink22IndefiniteSizeStrategyD0Ev to i8*), i8* bitcast (i32 (%"class.blink::IndefiniteSizeStrategy"*, %"class.blink::LayoutBox"*)* @_ZNK5blink22IndefiniteSizeStrategy18MinContentForChildERNS_9LayoutBoxE to i8*), i8* bitcast (i32 (%"class.blink::IndefiniteSizeStrategy"*, %"class.blink::LayoutBox"*)* @_ZNK5blink22IndefiniteSizeStrategy18MaxContentForChildERNS_9LayoutBoxE to i8*), i8* bitcast (void (%"class.blink::IndefiniteSizeStrategy"*, %"class.WTF::Vector"*, %"class.absl::optional"*)* @_ZN5blink22IndefiniteSizeStrategy14MaximizeTracksERN3WTF6VectorINS_9GridTrackELj0ENS1_18PartitionAllocatorEEERN4absl8optionalINS_10LayoutUnitEEE to i8*), i8* bitcast (double (%"class.blink::IndefiniteSizeStrategy"*, %"class.WTF::Vector.6"*, i32, i64)* @_ZNK5blink22IndefiniteSizeStrategy20FindUsedFlexFractionERN3WTF6VectorImLj0ENS1_18PartitionAllocatorEEENS_24GridTrackSizingDirectionEN4absl8optionalINS_10LayoutUnitEEE to i8*), i8* bitcast (i1 (%"class.blink::IndefiniteSizeStrategy"*, %"class.WTF::Vector.6"*, double*, %"class.WTF::Vector.959"*, %"class.blink::LayoutUnit"*)* @_ZNK5blink22IndefiniteSizeStrategy33RecomputeUsedFlexFractionIfNeededERN3WTF6VectorImLj0ENS1_18PartitionAllocatorEEERdRNS2_INS_10LayoutUnitELj0ES3_EERS7_ to i8*), i8* bitcast (i32 (%"class.blink::IndefiniteSizeStrategy"*)* @_ZNK5blink22IndefiniteSizeStrategy33FreeSpaceForStretchAutoTracksStepEv to i8*), i8* bitcast (i1 (%"class.blink::IndefiniteSizeStrategy"*)* @_ZNK5blink22IndefiniteSizeStrategy26IsComputingSizeContainmentEv to i8*), i8* bitcast (i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*, %"class.blink::Length"*, i32)* @_ZNK5blink32GridTrackSizingAlgorithmStrategy22MinLogicalSizeForChildERNS_9LayoutBoxERKNS_6LengthENS_10LayoutUnitE to i8*), i8* bitcast (void (%"class.blink::IndefiniteSizeStrategy"*, %"class.blink::LayoutBox"*, i1)* @_ZNK5blink22IndefiniteSizeStrategy35LayoutGridItemForMinSizeComputationERNS_9LayoutBoxEb to i8*)] }, align 8
@_ZTVN5blink20DefiniteSizeStrategyE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)* @_ZN5blink32GridTrackSizingAlgorithmStrategyD2Ev to i8*), i8* bitcast (void (%"class.blink::DefiniteSizeStrategy"*)* @_ZN5blink20DefiniteSizeStrategyD0Ev to i8*), i8* bitcast (i32 (%"class.blink::DefiniteSizeStrategy"*, %"class.blink::LayoutBox"*)* @_ZNK5blink20DefiniteSizeStrategy18MinContentForChildERNS_9LayoutBoxE to i8*), i8* bitcast (i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)* @_ZNK5blink32GridTrackSizingAlgorithmStrategy18MaxContentForChildERNS_9LayoutBoxE to i8*), i8* bitcast (void (%"class.blink::DefiniteSizeStrategy"*, %"class.WTF::Vector"*, %"class.absl::optional"*)* @_ZN5blink20DefiniteSizeStrategy14MaximizeTracksERN3WTF6VectorINS_9GridTrackELj0ENS1_18PartitionAllocatorEEERN4absl8optionalINS_10LayoutUnitEEE to i8*), i8* bitcast (double (%"class.blink::DefiniteSizeStrategy"*, %"class.WTF::Vector.6"*, i32, i64)* @_ZNK5blink20DefiniteSizeStrategy20FindUsedFlexFractionERN3WTF6VectorImLj0ENS1_18PartitionAllocatorEEENS_24GridTrackSizingDirectionEN4absl8optionalINS_10LayoutUnitEEE to i8*), i8* bitcast (i1 (%"class.blink::DefiniteSizeStrategy"*, %"class.WTF::Vector.6"*, double*, %"class.WTF::Vector.959"*, %"class.blink::LayoutUnit"*)* @_ZNK5blink20DefiniteSizeStrategy33RecomputeUsedFlexFractionIfNeededERN3WTF6VectorImLj0ENS1_18PartitionAllocatorEEERdRNS2_INS_10LayoutUnitELj0ES3_EERS7_ to i8*), i8* bitcast (i32 (%"class.blink::DefiniteSizeStrategy"*)* @_ZNK5blink20DefiniteSizeStrategy33FreeSpaceForStretchAutoTracksStepEv to i8*), i8* bitcast (i1 (%"class.blink::DefiniteSizeStrategy"*)* @_ZNK5blink20DefiniteSizeStrategy26IsComputingSizeContainmentEv to i8*), i8* bitcast (i32 (%"class.blink::DefiniteSizeStrategy"*, %"class.blink::LayoutBox"*, %"class.blink::Length"*, i32)* @_ZNK5blink20DefiniteSizeStrategy22MinLogicalSizeForChildERNS_9LayoutBoxERKNS_6LengthENS_10LayoutUnitE to i8*), i8* bitcast (void (%"class.blink::DefiniteSizeStrategy"*, %"class.blink::LayoutBox"*, i1)* @_ZNK5blink20DefiniteSizeStrategy35LayoutGridItemForMinSizeComputationERNS_9LayoutBoxEb to i8*)] }, align 8
@.str = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink9LayoutBoxEbEEEEPKcv = private unnamed_addr constant [97 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::LayoutBox *, bool>]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9GridTrackEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::GridTrack *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9GridTrackEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::GridTrack]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned long]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16GridItemWithSpanEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::GridItemWithSpan]\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashSetImNS_7IntHashImEENS_29UnsignedWithZeroKeyHashTraitsImEENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [180 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::HashSet<unsigned long, WTF::IntHash<unsigned long>, WTF::UnsignedWithZeroKeyHashTraits<unsigned long>, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutUnit]\00", align 1
@switch.table._ZNK5blink24GridTrackSizingAlgorithm17IsValidTransitionEv = private unnamed_addr constant [4 x i32] [i32 0, i32 1, i32 0, i32 1], align 4

@_ZN5blink32GridTrackSizingAlgorithmStrategyD1Ev = hidden unnamed_addr alias void (%"class.blink::GridTrackSizingAlgorithmStrategy"*), void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)* @_ZN5blink32GridTrackSizingAlgorithmStrategyD2Ev
@_ZN5blink24GridTrackSizingAlgorithm12StateMachineC1ERS0_ = hidden unnamed_addr alias void (%"class.blink::GridTrackSizingAlgorithm::StateMachine"*, %"class.blink::GridTrackSizingAlgorithm"*), void (%"class.blink::GridTrackSizingAlgorithm::StateMachine"*, %"class.blink::GridTrackSizingAlgorithm"*)* @_ZN5blink24GridTrackSizingAlgorithm12StateMachineC2ERS0_
@_ZN5blink24GridTrackSizingAlgorithm12StateMachineD1Ev = hidden unnamed_addr alias void (%"class.blink::GridTrackSizingAlgorithm::StateMachine"*), void (%"class.blink::GridTrackSizingAlgorithm::StateMachine"*)* @_ZN5blink24GridTrackSizingAlgorithm12StateMachineD2Ev

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink9GridTrack8BaseSizeEv(%"class.blink::GridTrack"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink9GridTrack11GrowthLimitEv(%"class.blink::GridTrack"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9GridTrack11SetBaseSizeENS_10LayoutUnitE(%"class.blink::GridTrack"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 0, i32 0
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 1, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp ne i32 %5, -64
  %7 = icmp slt i32 %5, %1
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  store i32 %1, i32* %4, align 4
  br label %10

10:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9GridTrack37EnsureGrowthLimitIsBiggerThanBaseSizeEv(%"class.blink::GridTrack"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, -64
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %3, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store i32 %7, i32* %2, align 4
  br label %10

10:                                               ; preds = %1, %9, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9GridTrack14SetGrowthLimitENS_10LayoutUnitE(%"class.blink::GridTrack"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %5 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %6 = icmp eq i32 %1, -64
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7)
  br i1 %6, label %19, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = select i1 %11, %"class.blink::LayoutUnit"* %4, %"class.blink::LayoutUnit"* %12
  %14 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %5, align 4
  %16 = icmp slt i32 %15, %1
  %17 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %18 = select i1 %16, %"class.blink::LayoutUnit"* %17, %"class.blink::LayoutUnit"* %4
  br label %19

19:                                               ; preds = %2, %8
  %20 = phi %"class.blink::LayoutUnit"* [ %18, %8 ], [ %4, %2 ]
  %21 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %20, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 1, i32 0
  %23 = load i32, i32* %21, align 4
  store i32 %23, i32* %22, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7)
  %24 = icmp eq i32 %23, -64
  br i1 %24, label %30, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %23, %27
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  store i32 %27, i32* %22, align 4
  br label %30

30:                                               ; preds = %19, %25, %29
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9GridTrack23InfiniteGrowthPotentialEv(%"class.blink::GridTrack"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, -64
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ true, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink9GridTrack14SetPlannedSizeENS_10LayoutUnitE(%"class.blink::GridTrack"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 2, i32 0
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink9GridTrack25SetSizeDuringDistributionENS_10LayoutUnitE(%"class.blink::GridTrack"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 3, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5blink9GridTrack26GrowSizeDuringDistributionENS_10LayoutUnitE(%"class.blink::GridTrack"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 3, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %1, 0
  %6 = select i1 %5, i32 -2147483648, i32 2147483647
  %7 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %4, i32 %1) #18
  %8 = extractvalue { i32, i1 } %7, 1
  %9 = extractvalue { i32, i1 } %7, 0
  %10 = select i1 %8, i32 %6, i32 %9, !prof !3
  store i32 %10, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink9GridTrack21SetInfinitelyGrowableEb(%"class.blink::GridTrack"* nocapture, i1 zeroext) local_unnamed_addr #4 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 5
  store i8 %3, i8* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink9GridTrack17SetGrowthLimitCapEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrack"* nocapture, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 4
  %4 = bitcast %"class.absl::optional"* %3 to i64*
  store i64 %1, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9GridTrack18SetCachedTrackSizeERKNS_13GridTrackSizeE(%"class.blink::GridTrack"*, %"class.blink::GridTrackSize"* dereferenceable(88)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0
  %8 = tail call dereferenceable(88) %"class.blink::GridTrackSize"* @_ZN5blink13GridTrackSizeaSERKS0_(%"class.blink::GridTrackSize"* %7, %"class.blink::GridTrackSize"* dereferenceable(88) %1) #18
  br label %58

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %10, align 8
  %13 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %14 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 2
  %15 = bitcast %"class.blink::GridLength"* %14 to i64*
  %16 = bitcast %"class.blink::GridLength"* %13 to i64*
  %17 = load i64, i64* %15, align 4
  store i64 %17, i64* %16, align 4
  %18 = and i64 %17, 280375465082880
  %19 = icmp eq i64 %18, 8796093022208
  br i1 %19, label %20, label %22

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %13, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %21) #18
  br label %22

22:                                               ; preds = %20, %9
  %23 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 1
  %24 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 2, i32 1
  %25 = bitcast double* %23 to i8*
  %26 = bitcast double* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 12, i1 false) #18
  %27 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 3
  %29 = bitcast %"class.blink::GridLength"* %28 to i64*
  %30 = bitcast %"class.blink::GridLength"* %27 to i64*
  %31 = load i64, i64* %29, align 4
  store i64 %31, i64* %30, align 4
  %32 = and i64 %31, 280375465082880
  %33 = icmp eq i64 %32, 8796093022208
  br i1 %33, label %34, label %36

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %27, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %35) #18
  br label %36

36:                                               ; preds = %34, %22
  %37 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 1
  %38 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 3, i32 1
  %39 = bitcast double* %37 to i8*
  %40 = bitcast double* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 12, i1 false) #18
  %41 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4
  %42 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 4
  %43 = bitcast %"class.blink::GridLength"* %42 to i64*
  %44 = bitcast %"class.blink::GridLength"* %41 to i64*
  %45 = load i64, i64* %43, align 4
  store i64 %45, i64* %44, align 4
  %46 = and i64 %45, 280375465082880
  %47 = icmp eq i64 %46, 8796093022208
  br i1 %47, label %48, label %50

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %41, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %49) #18
  br label %50

50:                                               ; preds = %36, %48
  %51 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 1
  %52 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 4, i32 1
  %53 = bitcast double* %51 to i8*
  %54 = bitcast double* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 12, i1 false) #18
  %55 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  %56 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 5
  %57 = load i16, i16* %56, align 8
  store i16 %57, i16* %55, align 8
  store i8 1, i8* %3, align 8
  br label %58

58:                                               ; preds = %6, %50
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9GridTrack31IsGrowthLimitBiggerThanBaseSizeEv(%"class.blink::GridTrack"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, -64
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp sge i32 %3, %7
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ true, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink32GridTrackSizingAlgorithmStrategyD0Ev(%"class.blink::GridTrackSizingAlgorithmStrategy"* nocapture readnone) unnamed_addr #6 align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink32GridTrackSizingAlgorithmStrategy34HasRelativeMarginOrPaddingForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632), %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = alloca %"class.blink::Length"*, align 8
  %15 = alloca %"class.blink::Length"*, align 8
  %16 = alloca %"class.blink::Length"*, align 8
  %17 = alloca %"class.blink::Length"*, align 8
  %18 = alloca %"class.blink::Length"*, align 8
  %19 = alloca %"class.blink::Length"*, align 8
  %20 = alloca %"class.blink::Length"*, align 8
  %21 = alloca %"class.blink::Length"*, align 8
  %22 = alloca %"class.blink::Length"*, align 8
  %23 = alloca %"class.blink::Length"*, align 8
  %24 = alloca %"class.blink::Length"*, align 8
  %25 = alloca %"class.blink::Length"*, align 8
  %26 = alloca %"class.blink::Length"*, align 8
  %27 = alloca %"class.blink::Length"*, align 8
  %28 = alloca %"class.blink::Length"*, align 8
  %29 = alloca %"class.blink::Length"*, align 8
  %30 = alloca %"class.blink::Length"*, align 8
  %31 = alloca %"class.blink::Length"*, align 8
  %32 = tail call i32 @_ZN5blink15GridLayoutUtils26FlowAwareDirectionForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0) #18
  %33 = icmp eq i32 %32, %2
  %34 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %35 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  br i1 %33, label %36, label %100

36:                                               ; preds = %3
  %37 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  %39 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  %40 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40)
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %35, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8, !noalias !4
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %35, i64 0, i32 0, i32 7, i32 0, i32 0
  %45 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %44, align 8, !noalias !4
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %45, i64 0, i32 12
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %45, i64 0, i32 11
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %45, i64 0, i32 9
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %45, i64 0, i32 10
  store %"class.blink::Length"* %46, %"class.blink::Length"** %4, align 8, !alias.scope !4
  store %"class.blink::Length"* %47, %"class.blink::Length"** %5, align 8, !alias.scope !4
  store %"class.blink::Length"* %48, %"class.blink::Length"** %6, align 8, !alias.scope !4
  store %"class.blink::Length"* %49, %"class.blink::Length"** %7, align 8, !alias.scope !4
  %50 = and i160 %43, 15211807202738752817960438464512
  %51 = icmp eq i160 %50, 0
  %52 = and i160 %43, 41538374868278621028243970633760768
  %53 = icmp eq i160 %52, 0
  %54 = select i1 %53, %"class.blink::Length"** %7, %"class.blink::Length"** %5
  %55 = select i1 %53, %"class.blink::Length"** %4, %"class.blink::Length"** %6
  %56 = select i1 %51, %"class.blink::Length"** %54, %"class.blink::Length"** %55
  %57 = load %"class.blink::Length"*, %"class.blink::Length"** %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40)
  %58 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %57, i64 0, i32 2
  %59 = load i8, i8* %58, align 1
  switch i8 %59, label %60 [
    i8 8, label %157
    i8 1, label %157
  ]

60:                                               ; preds = %36
  %61 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61)
  %62 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62)
  %63 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63)
  %64 = bitcast %"class.blink::Length"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64)
  store %"class.blink::Length"* %46, %"class.blink::Length"** %8, align 8, !alias.scope !7
  store %"class.blink::Length"* %47, %"class.blink::Length"** %9, align 8, !alias.scope !7
  store %"class.blink::Length"* %48, %"class.blink::Length"** %10, align 8, !alias.scope !7
  store %"class.blink::Length"* %49, %"class.blink::Length"** %11, align 8, !alias.scope !7
  %65 = select i1 %53, %"class.blink::Length"** %9, %"class.blink::Length"** %11
  %66 = select i1 %53, %"class.blink::Length"** %10, %"class.blink::Length"** %8
  %67 = select i1 %51, %"class.blink::Length"** %65, %"class.blink::Length"** %66
  %68 = load %"class.blink::Length"*, %"class.blink::Length"** %67, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  %69 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %68, i64 0, i32 2
  %70 = load i8, i8* %69, align 1
  switch i8 %70, label %71 [
    i8 8, label %157
    i8 1, label %157
  ]

71:                                               ; preds = %60
  %72 = bitcast %"class.blink::Length"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72)
  %73 = bitcast %"class.blink::Length"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73)
  %74 = bitcast %"class.blink::Length"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74)
  %75 = bitcast %"class.blink::Length"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75)
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %45, i64 0, i32 16
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %45, i64 0, i32 15
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %45, i64 0, i32 13
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %45, i64 0, i32 14
  store %"class.blink::Length"* %76, %"class.blink::Length"** %12, align 8, !alias.scope !10
  store %"class.blink::Length"* %77, %"class.blink::Length"** %13, align 8, !alias.scope !10
  store %"class.blink::Length"* %78, %"class.blink::Length"** %14, align 8, !alias.scope !10
  store %"class.blink::Length"* %79, %"class.blink::Length"** %15, align 8, !alias.scope !10
  %80 = select i1 %53, %"class.blink::Length"** %15, %"class.blink::Length"** %13
  %81 = select i1 %53, %"class.blink::Length"** %12, %"class.blink::Length"** %14
  %82 = select i1 %51, %"class.blink::Length"** %80, %"class.blink::Length"** %81
  %83 = load %"class.blink::Length"*, %"class.blink::Length"** %82, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75)
  %84 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %83, i64 0, i32 2
  %85 = load i8, i8* %84, align 1
  switch i8 %85, label %86 [
    i8 8, label %157
    i8 1, label %157
  ]

86:                                               ; preds = %71
  %87 = bitcast %"class.blink::Length"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87)
  %88 = bitcast %"class.blink::Length"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88)
  %89 = bitcast %"class.blink::Length"** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89)
  %90 = bitcast %"class.blink::Length"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90)
  store %"class.blink::Length"* %76, %"class.blink::Length"** %16, align 8, !alias.scope !13
  store %"class.blink::Length"* %77, %"class.blink::Length"** %17, align 8, !alias.scope !13
  store %"class.blink::Length"* %78, %"class.blink::Length"** %18, align 8, !alias.scope !13
  store %"class.blink::Length"* %79, %"class.blink::Length"** %19, align 8, !alias.scope !13
  %91 = select i1 %53, %"class.blink::Length"** %17, %"class.blink::Length"** %19
  %92 = select i1 %53, %"class.blink::Length"** %18, %"class.blink::Length"** %16
  %93 = select i1 %51, %"class.blink::Length"** %91, %"class.blink::Length"** %92
  %94 = load %"class.blink::Length"*, %"class.blink::Length"** %93, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90)
  %95 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %94, i64 0, i32 2
  %96 = load i8, i8* %95, align 1
  %97 = icmp eq i8 %96, 1
  %98 = icmp eq i8 %96, 8
  %99 = or i1 %97, %98
  br label %157

100:                                              ; preds = %3
  %101 = bitcast %"class.blink::Length"** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101)
  %102 = bitcast %"class.blink::Length"** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102)
  %103 = bitcast %"class.blink::Length"** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103)
  %104 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %35, i64 0, i32 0, i32 9
  %105 = bitcast [20 x i8]* %104 to i160*
  %106 = load i160, i160* %105, align 8, !noalias !16
  %107 = lshr i160 %106, 102
  %108 = trunc i160 %107 to i8
  %109 = and i8 %108, 3
  %110 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %35, i64 0, i32 0, i32 7, i32 0, i32 0
  %111 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %110, align 8, !noalias !16
  %112 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %111, i64 0, i32 12
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %111, i64 0, i32 11
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %111, i64 0, i32 10
  store %"class.blink::Length"* %112, %"class.blink::Length"** %20, align 8, !alias.scope !16
  store %"class.blink::Length"* %113, %"class.blink::Length"** %21, align 8, !alias.scope !16
  store %"class.blink::Length"* %114, %"class.blink::Length"** %22, align 8, !alias.scope !16
  %115 = icmp eq i8 %109, 0
  %116 = icmp eq i8 %109, 1
  %117 = select i1 %116, %"class.blink::Length"** %21, %"class.blink::Length"** %22
  %118 = select i1 %115, %"class.blink::Length"** %20, %"class.blink::Length"** %117
  %119 = load %"class.blink::Length"*, %"class.blink::Length"** %118, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103)
  %120 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %119, i64 0, i32 2
  %121 = load i8, i8* %120, align 1
  switch i8 %121, label %122 [
    i8 8, label %157
    i8 1, label %157
  ]

122:                                              ; preds = %100
  %123 = bitcast %"class.blink::Length"** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123)
  %124 = bitcast %"class.blink::Length"** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124)
  %125 = bitcast %"class.blink::Length"** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125)
  %126 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %111, i64 0, i32 9
  store %"class.blink::Length"* %113, %"class.blink::Length"** %23, align 8, !alias.scope !19
  store %"class.blink::Length"* %126, %"class.blink::Length"** %24, align 8, !alias.scope !19
  store %"class.blink::Length"* %114, %"class.blink::Length"** %25, align 8, !alias.scope !19
  %127 = select i1 %116, %"class.blink::Length"** %25, %"class.blink::Length"** %23
  %128 = select i1 %115, %"class.blink::Length"** %24, %"class.blink::Length"** %127
  %129 = load %"class.blink::Length"*, %"class.blink::Length"** %128, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125)
  %130 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %129, i64 0, i32 2
  %131 = load i8, i8* %130, align 1
  switch i8 %131, label %132 [
    i8 8, label %157
    i8 1, label %157
  ]

132:                                              ; preds = %122
  %133 = bitcast %"class.blink::Length"** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133)
  %134 = bitcast %"class.blink::Length"** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134)
  %135 = bitcast %"class.blink::Length"** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %135)
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %111, i64 0, i32 16
  %137 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %111, i64 0, i32 15
  %138 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %111, i64 0, i32 14
  store %"class.blink::Length"* %136, %"class.blink::Length"** %26, align 8, !alias.scope !22
  store %"class.blink::Length"* %137, %"class.blink::Length"** %27, align 8, !alias.scope !22
  store %"class.blink::Length"* %138, %"class.blink::Length"** %28, align 8, !alias.scope !22
  %139 = select i1 %116, %"class.blink::Length"** %27, %"class.blink::Length"** %28
  %140 = select i1 %115, %"class.blink::Length"** %26, %"class.blink::Length"** %139
  %141 = load %"class.blink::Length"*, %"class.blink::Length"** %140, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135)
  %142 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %141, i64 0, i32 2
  %143 = load i8, i8* %142, align 1
  switch i8 %143, label %144 [
    i8 8, label %157
    i8 1, label %157
  ]

144:                                              ; preds = %132
  %145 = bitcast %"class.blink::Length"** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145)
  %146 = bitcast %"class.blink::Length"** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146)
  %147 = bitcast %"class.blink::Length"** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147)
  %148 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %111, i64 0, i32 13
  store %"class.blink::Length"* %137, %"class.blink::Length"** %29, align 8, !alias.scope !25
  store %"class.blink::Length"* %148, %"class.blink::Length"** %30, align 8, !alias.scope !25
  store %"class.blink::Length"* %138, %"class.blink::Length"** %31, align 8, !alias.scope !25
  %149 = select i1 %116, %"class.blink::Length"** %31, %"class.blink::Length"** %29
  %150 = select i1 %115, %"class.blink::Length"** %30, %"class.blink::Length"** %149
  %151 = load %"class.blink::Length"*, %"class.blink::Length"** %150, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147)
  %152 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %151, i64 0, i32 2
  %153 = load i8, i8* %152, align 1
  %154 = icmp eq i8 %153, 1
  %155 = icmp eq i8 %153, 8
  %156 = or i1 %154, %155
  br label %157

157:                                              ; preds = %132, %132, %122, %122, %100, %100, %71, %71, %60, %60, %36, %36, %144, %86
  %158 = phi i1 [ true, %71 ], [ true, %60 ], [ true, %36 ], [ %99, %86 ], [ true, %132 ], [ true, %122 ], [ true, %100 ], [ %156, %144 ], [ true, %36 ], [ true, %60 ], [ true, %71 ], [ true, %100 ], [ true, %122 ], [ true, %132 ]
  ret i1 %158
}

declare i32 @_ZN5blink15GridLayoutUtils26FlowAwareDirectionForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632), %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink32GridTrackSizingAlgorithmStrategy34HasRelativeOrIntrinsicSizeForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632), %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #3 align 2 {
  %4 = tail call i32 @_ZN5blink15GridLayoutUtils26FlowAwareDirectionForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0) #18
  %5 = icmp eq i32 %4, %2
  br i1 %5, label %6, label %25

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZNK5blink9LayoutBox23HasRelativeLogicalWidthEv(%"class.blink::LayoutBox"* %1) #18
  br i1 %7, label %52, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = and i160 %13, 15211807202738752817960438464512
  %15 = icmp eq i160 %14, 0
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 5, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %17, i64 0, i32 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %17, i64 0, i32 3
  %20 = select i1 %15, %"class.blink::Length"* %18, %"class.blink::Length"* %19
  %21 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %20, i64 0, i32 2
  %22 = load i8, i8* %21, align 1
  %23 = add i8 %22, -1
  %24 = icmp ult i8 %23, 8
  br i1 %24, label %44, label %52

25:                                               ; preds = %3
  %26 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasRelativeLogicalHeightEv(%"class.blink::LayoutBox"* %1) #18
  br i1 %26, label %52, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %29, i64 0, i32 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = load i160, i160* %31, align 8
  %33 = and i160 %32, 15211807202738752817960438464512
  %34 = icmp eq i160 %33, 0
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %29, i64 0, i32 0, i32 5, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %36, i64 0, i32 3
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %36, i64 0, i32 8
  %39 = select i1 %34, %"class.blink::Length"* %37, %"class.blink::Length"* %38
  %40 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %39, i64 0, i32 2
  %41 = load i8, i8* %40, align 1
  %42 = add i8 %41, -1
  %43 = icmp ult i8 %42, 8
  br i1 %43, label %48, label %52

44:                                               ; preds = %8
  %45 = lshr i8 124, %23
  %46 = and i8 %45, 1
  %47 = icmp ne i8 %46, 0
  ret i1 %47

48:                                               ; preds = %27
  %49 = lshr i8 124, %42
  %50 = and i8 %49, 1
  %51 = icmp ne i8 %50, 0
  ret i1 %51

52:                                               ; preds = %27, %8, %25, %6
  ret i1 true
}

declare zeroext i1 @_ZNK5blink9LayoutBox23HasRelativeLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #8

declare zeroext i1 @_ZNK5blink9LayoutBox24HasRelativeLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink32GridTrackSizingAlgorithmStrategy53ShouldClearOverrideContainingBlockContentSizeForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632), %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #3 align 2 {
  %4 = tail call i32 @_ZN5blink15GridLayoutUtils26FlowAwareDirectionForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0) #18
  %5 = icmp eq i32 %4, %2
  br i1 %5, label %6, label %23

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZNK5blink9LayoutBox23HasRelativeLogicalWidthEv(%"class.blink::LayoutBox"* %1) #18
  br i1 %7, label %42, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = and i160 %13, 15211807202738752817960438464512
  %15 = icmp eq i160 %14, 0
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 5, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %17, i64 0, i32 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %17, i64 0, i32 3
  %20 = select i1 %15, %"class.blink::Length"* %18, %"class.blink::Length"* %19
  %21 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %20, i64 0, i32 2
  %22 = load i8, i8* %21, align 1
  switch i8 %22, label %42 [
    i8 2, label %40
    i8 1, label %40
    i8 8, label %40
  ]

23:                                               ; preds = %3
  %24 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasRelativeLogicalHeightEv(%"class.blink::LayoutBox"* %1) #18
  br i1 %24, label %42, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %27 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %27, i64 0, i32 0, i32 9
  %29 = bitcast [20 x i8]* %28 to i160*
  %30 = load i160, i160* %29, align 8
  %31 = and i160 %30, 15211807202738752817960438464512
  %32 = icmp eq i160 %31, 0
  %33 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %27, i64 0, i32 0, i32 5, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %34, i64 0, i32 3
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %34, i64 0, i32 8
  %37 = select i1 %32, %"class.blink::Length"* %35, %"class.blink::Length"* %36
  %38 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %37, i64 0, i32 2
  %39 = load i8, i8* %38, align 1
  switch i8 %39, label %42 [
    i8 2, label %40
    i8 1, label %40
    i8 8, label %40
  ]

40:                                               ; preds = %25, %25, %25, %8, %8, %8
  %41 = tail call zeroext i1 @_ZN5blink32GridTrackSizingAlgorithmStrategy34HasRelativeMarginOrPaddingForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2)
  br label %42

42:                                               ; preds = %25, %8, %23, %6, %40
  %43 = phi i1 [ %41, %40 ], [ true, %6 ], [ true, %23 ], [ true, %8 ], [ true, %25 ]
  ret i1 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32GridTrackSizingAlgorithmStrategy45SetOverrideContainingBlockContentSizeForChildERNS_9LayoutBoxENS_24GridTrackSizingDirectionENS_10LayoutUnitE(%"class.blink::LayoutBox"* dereferenceable(216), i32, i32) local_unnamed_addr #3 align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @_ZN5blink9LayoutBox45SetOverrideContainingBlockContentLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, i32 %2) #18
  br label %7

6:                                                ; preds = %3
  tail call void @_ZN5blink9LayoutBox46SetOverrideContainingBlockContentLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, i32 %2) #18
  br label %7

7:                                                ; preds = %6, %5
  ret void
}

declare void @_ZN5blink9LayoutBox45SetOverrideContainingBlockContentLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #8

declare void @_ZN5blink9LayoutBox46SetOverrideContainingBlockContentLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink24GridTrackSizingAlgorithm32EstimatedGridAreaBreadthForChildERKNS_9LayoutBoxE(%"class.blink::GridTrackSizingAlgorithm"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #3 align 2 {
  %3 = tail call i32 @_ZNK5blink24GridTrackSizingAlgorithm32EstimatedGridAreaBreadthForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0)
  %4 = tail call i32 @_ZNK5blink24GridTrackSizingAlgorithm32EstimatedGridAreaBreadthForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 1)
  %5 = zext i32 %4 to i64
  %6 = shl nuw i64 %5, 32
  %7 = zext i32 %3 to i64
  %8 = or i64 %6, %7
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink24GridTrackSizingAlgorithm32EstimatedGridAreaBreadthForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.blink::GridTrackSize", align 8
  %5 = alloca %"class.blink::GridLength", align 8
  %6 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 12
  %7 = load %"class.blink::Grid"*, %"class.blink::Grid"** %6, align 8
  %8 = tail call { i64, i32 } @_ZNK5blink4Grid12GridItemSpanERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %7, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2) #18
  %9 = extractvalue { i64, i32 } %8, 0
  %10 = icmp eq i32 %2, 1
  %11 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %13 = select i1 %10, %"class.absl::optional"* %11, %"class.absl::optional"* %12
  %14 = bitcast %"class.absl::optional"* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = shl i64 %9, 32
  %19 = ashr exact i64 %18, 32
  %20 = ashr i64 %9, 32
  %21 = icmp eq i64 %19, %20
  br i1 %21, label %60, label %22

22:                                               ; preds = %3
  %23 = trunc i32 %15 to i8
  %24 = bitcast %"class.blink::GridTrackSize"* %4 to i8*
  %25 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 0, i32 0
  %27 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 0, i32 2
  %28 = bitcast %"class.blink::GridLength"* %27 to i64*
  %29 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %27, i64 0, i32 0
  %30 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 0, i32 2, i32 1
  %31 = bitcast double* %30 to i8*
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 0, i32 3
  %33 = bitcast %"class.blink::GridLength"* %32 to i64*
  %34 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %32, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 0, i32 3, i32 1
  %36 = bitcast double* %35 to i8*
  %37 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 0, i32 4
  %38 = bitcast %"class.blink::GridLength"* %37 to i64*
  %39 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %37, i64 0, i32 0
  %40 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 0, i32 4, i32 1
  %41 = bitcast double* %40 to i8*
  %42 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 0, i32 5
  %43 = bitcast %"class.blink::GridLength"* %5 to i8*
  %44 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %5, i64 0, i32 0, i32 2
  %45 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %5, i64 0, i32 1
  %46 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %5, i64 0, i32 2
  %47 = bitcast %"class.blink::GridLength"* %5 to i64*
  %48 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %5, i64 0, i32 0
  %49 = bitcast double* %45 to i8*
  %50 = bitcast %"class.absl::optional"* %13 to i64*
  %51 = icmp eq i8 %23, 0
  %52 = select i1 %51, i32 0, i32 %17
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 0, i32 4, i32 0, i32 2
  %54 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 0, i32 4, i32 0
  %55 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 0, i32 3, i32 0, i32 2
  %56 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 0, i32 3, i32 0
  %57 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 0, i32 2, i32 0, i32 2
  %58 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 0, i32 2, i32 0
  %59 = bitcast i32* %46 to i64*
  br label %83

60:                                               ; preds = %164, %3
  %61 = phi i32 [ 0, %3 ], [ %151, %164 ]
  %62 = phi i8 [ 0, %3 ], [ %152, %164 ]
  %63 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 13
  %64 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %63, align 8
  %65 = load %"class.blink::Grid"*, %"class.blink::Grid"** %6, align 8
  %66 = mul i64 %9, -4294967295
  %67 = ashr i64 %66, 32
  %68 = zext i32 %17 to i64
  %69 = shl nuw i64 %68, 32
  %70 = zext i32 %15 to i64
  %71 = or i64 %69, %70
  %72 = call i32 @_ZNK5blink10LayoutGrid11GuttersSizeERKNS_4GridENS_24GridTrackSizingDirectionEmmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %64, %"class.blink::Grid"* dereferenceable(168) %65, i32 %2, i64 %19, i64 %67, i64 %71) #18
  %73 = icmp slt i32 %72, 0
  %74 = select i1 %73, i32 -2147483648, i32 2147483647
  %75 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %61, i32 %72) #18
  %76 = extractvalue { i32, i1 } %75, 1
  %77 = extractvalue { i32, i1 } %75, 0
  %78 = select i1 %76, i32 %74, i32 %77, !prof !3
  %79 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %63, align 8
  %80 = call i32 @_ZN5blink15GridLayoutUtils26FlowAwareDirectionForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %79, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0) #18
  %81 = and i8 %62, 1
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %179, label %167

83:                                               ; preds = %22, %164
  %84 = phi i32 [ 0, %22 ], [ %151, %164 ]
  %85 = phi i8 [ 0, %22 ], [ %152, %164 ]
  %86 = phi i64 [ %19, %22 ], [ %165, %164 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %24) #18
  %87 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %25, align 8
  %88 = icmp eq %"class.blink::GridTrackSizingAlgorithmStrategy"* %87, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %83
  call void @_ZNK5blink24GridTrackSizingAlgorithm22CalculateGridTrackSizeENS_24GridTrackSizingDirectionEm(%"class.blink::GridTrackSize"* nonnull sret %4, %"class.blink::GridTrackSizingAlgorithm"* %0, i32 %2, i64 %86)
  br label %123

90:                                               ; preds = %83
  %91 = call dereferenceable(88) %"class.blink::GridTrackSize"* @_ZNK5blink24GridTrackSizingAlgorithm16RawGridTrackSizeENS_24GridTrackSizingDirectionEm(%"class.blink::GridTrackSizingAlgorithm"* %0, i32 %2, i64 %86)
  %92 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %91, i64 0, i32 0
  %93 = load i32, i32* %92, align 8
  store i32 %93, i32* %26, align 8
  %94 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %91, i64 0, i32 2
  %95 = bitcast %"class.blink::GridLength"* %94 to i64*
  %96 = load i64, i64* %95, align 4
  store i64 %96, i64* %28, align 8
  %97 = and i64 %96, 280375465082880
  %98 = icmp eq i64 %97, 8796093022208
  br i1 %98, label %99, label %100

99:                                               ; preds = %90
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %29) #18
  br label %100

100:                                              ; preds = %99, %90
  %101 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %91, i64 0, i32 2, i32 1
  %102 = bitcast double* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %102, i64 12, i1 false) #18
  %103 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %91, i64 0, i32 3
  %104 = bitcast %"class.blink::GridLength"* %103 to i64*
  %105 = load i64, i64* %104, align 4
  store i64 %105, i64* %33, align 8
  %106 = and i64 %105, 280375465082880
  %107 = icmp eq i64 %106, 8796093022208
  br i1 %107, label %108, label %109

108:                                              ; preds = %100
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %34) #18
  br label %109

109:                                              ; preds = %108, %100
  %110 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %91, i64 0, i32 3, i32 1
  %111 = bitcast double* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %111, i64 12, i1 false) #18
  %112 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %91, i64 0, i32 4
  %113 = bitcast %"class.blink::GridLength"* %112 to i64*
  %114 = load i64, i64* %113, align 4
  store i64 %114, i64* %38, align 8
  %115 = and i64 %114, 280375465082880
  %116 = icmp eq i64 %115, 8796093022208
  br i1 %116, label %117, label %118

117:                                              ; preds = %109
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %39) #18
  br label %118

118:                                              ; preds = %109, %117
  %119 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %91, i64 0, i32 4, i32 1
  %120 = bitcast double* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %120, i64 12, i1 false) #18
  %121 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %91, i64 0, i32 5
  %122 = load i16, i16* %121, align 8
  store i16 %122, i16* %42, align 8
  br label %123

123:                                              ; preds = %118, %89
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #18
  store double 0xFFFFFFFFFFFFFFFF, double* %45, align 8
  store i64 -6148914691236517206, i64* %59, align 8
  %124 = load i64, i64* %33, align 8
  store i64 %124, i64* %47, align 8
  %125 = and i64 %124, 280375465082880
  %126 = icmp eq i64 %125, 8796093022208
  br i1 %126, label %127, label %128

127:                                              ; preds = %123
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %48) #18
  br label %128

128:                                              ; preds = %123, %127
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %36, i64 12, i1 false) #18
  %129 = load i32, i32* %46, align 8
  switch i32 %129, label %136 [
    i32 0, label %130
    i32 1, label %144
  ]

130:                                              ; preds = %128
  %131 = load i8, i8* %44, align 1
  switch i8 %131, label %136 [
    i8 0, label %150
    i8 3, label %150
    i8 4, label %150
    i8 8, label %132
    i8 1, label %132
  ]

132:                                              ; preds = %130, %130
  %133 = load i64, i64* %50, align 4
  %134 = trunc i64 %133 to i8
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %144, label %136

136:                                              ; preds = %130, %128, %132
  %137 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %48, i32 %52) #18
  %138 = icmp slt i32 %137, 0
  %139 = select i1 %138, i32 -2147483648, i32 2147483647
  %140 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %84, i32 %137) #18
  %141 = extractvalue { i32, i1 } %140, 1
  %142 = extractvalue { i32, i1 } %140, 0
  %143 = select i1 %141, i32 %139, i32 %142, !prof !3
  br label %144

144:                                              ; preds = %128, %132, %136
  %145 = phi i32 [ %84, %132 ], [ %143, %136 ], [ %84, %128 ]
  %146 = phi i8 [ 1, %132 ], [ %85, %136 ], [ 1, %128 ]
  %147 = load i8, i8* %44, align 1
  %148 = icmp eq i8 %147, 8
  br i1 %148, label %149, label %150

149:                                              ; preds = %144
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %48) #18
  br label %150

150:                                              ; preds = %130, %130, %130, %144, %149
  %151 = phi i32 [ %145, %144 ], [ %145, %149 ], [ %84, %130 ], [ %84, %130 ], [ %84, %130 ]
  %152 = phi i8 [ %146, %144 ], [ %146, %149 ], [ 1, %130 ], [ 1, %130 ], [ 1, %130 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #18
  %153 = load i8, i8* %53, align 1
  %154 = icmp eq i8 %153, 8
  br i1 %154, label %155, label %156

155:                                              ; preds = %150
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #18
  br label %156

156:                                              ; preds = %155, %150
  %157 = load i8, i8* %55, align 1
  %158 = icmp eq i8 %157, 8
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %56) #18
  br label %160

160:                                              ; preds = %159, %156
  %161 = load i8, i8* %57, align 1
  %162 = icmp eq i8 %161, 8
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %58) #18
  br label %164

164:                                              ; preds = %160, %163
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %24) #18
  %165 = add i64 %86, 1
  %166 = icmp eq i64 %165, %20
  br i1 %166, label %60, label %83

167:                                              ; preds = %60
  %168 = icmp eq i32 %80, %2
  br i1 %168, label %169, label %179

169:                                              ; preds = %167
  %170 = bitcast %"class.blink::LayoutBox"* %1 to i64 (%"class.blink::LayoutBox"*)***
  %171 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %170, align 8
  %172 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %171, i64 69
  %173 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %172, align 8
  %174 = call i64 %173(%"class.blink::LayoutBox"* %1) #18
  %175 = lshr i64 %174, 32
  %176 = trunc i64 %175 to i32
  %177 = icmp sgt i32 %78, %176
  %178 = select i1 %177, i32 %78, i32 %176
  br label %179

179:                                              ; preds = %169, %167, %60
  %180 = phi i32 [ %78, %60 ], [ %178, %169 ], [ -64, %167 ]
  ret i32 %180
}

declare { i64, i32 } @_ZNK5blink4Grid12GridItemSpanERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::Grid"*, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #8

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink24GridTrackSizingAlgorithm14AvailableSpaceENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 1
  %4 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %6 = select i1 %3, %"class.absl::optional"* %4, %"class.absl::optional"* %5
  %7 = bitcast %"class.absl::optional"* %6 to i64*
  %8 = load i64, i64* %7, align 4
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink24GridTrackSizingAlgorithm22CalculateGridTrackSizeENS_24GridTrackSizingDirectionEm(%"class.blink::GridTrackSize"* noalias sret, %"class.blink::GridTrackSizingAlgorithm"* nocapture readonly, i32, i64) local_unnamed_addr #3 align 2 {
  %5 = alloca %"class.blink::GridLength", align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.blink::Length"*
  %8 = alloca %"class.blink::GridLength", align 8
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"class.blink::Length"*
  %11 = alloca %"class.blink::GridLength", align 8
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %"class.blink::Length"*
  %14 = alloca %"class.blink::GridLength", align 8
  %15 = alloca %"class.blink::GridLength", align 8
  %16 = alloca %"class.blink::GridLength", align 8
  %17 = alloca i64, align 8
  %18 = bitcast i64* %17 to %"class.blink::Length"*
  %19 = alloca %"class.blink::GridLength", align 8
  %20 = alloca i64, align 8
  %21 = bitcast i64* %20 to %"class.blink::Length"*
  %22 = alloca %"class.blink::GridLength", align 8
  %23 = alloca i64, align 8
  %24 = bitcast i64* %23 to %"class.blink::Length"*
  %25 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %1, i64 0, i32 12
  %26 = load %"class.blink::Grid"*, %"class.blink::Grid"** %25, align 8
  %27 = tail call zeroext i1 @_ZNK5blink4Grid24HasAutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %26, i32 %2) #18
  br i1 %27, label %28, label %85

28:                                               ; preds = %4
  %29 = load %"class.blink::Grid"*, %"class.blink::Grid"** %25, align 8
  %30 = tail call zeroext i1 @_ZNK5blink4Grid22IsEmptyAutoRepeatTrackENS_24GridTrackSizingDirectionEm(%"class.blink::Grid"* %29, i32 %2, i64 %3) #18
  br i1 %30, label %31, label %85

31:                                               ; preds = %28
  %32 = bitcast %"class.blink::GridLength"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #18
  %33 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #18
  %34 = bitcast i64* %6 to i32*
  store i32 0, i32* %34, align 8, !alias.scope !28
  %35 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 1
  store i8 0, i8* %35, align 4, !alias.scope !28
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  store i8 2, i8* %36, align 1, !alias.scope !28
  %37 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 3
  store i8 0, i8* %37, align 2, !alias.scope !28
  %38 = bitcast %"class.blink::GridLength"* %5 to i64*
  %39 = load i64, i64* %6, align 8
  store i64 %39, i64* %38, align 8
  %40 = and i64 %39, 280375465082880
  %41 = icmp eq i64 %40, 8796093022208
  br i1 %41, label %42, label %45

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %5, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %43) #18
  %44 = load i64, i64* %38, align 8
  br label %45

45:                                               ; preds = %31, %42
  %46 = phi i64 [ %39, %31 ], [ %44, %42 ]
  %47 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %5, i64 0, i32 1
  store double 0.000000e+00, double* %47, align 8
  %48 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %5, i64 0, i32 2
  store i32 0, i32* %48, align 8
  %49 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 0
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2
  %51 = bitcast %"class.blink::GridLength"* %50 to i64*
  store i64 %46, i64* %51, align 4
  %52 = and i64 %46, 280375465082880
  %53 = icmp eq i64 %52, 8796093022208
  br i1 %53, label %54, label %57

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %50, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %55) #18
  %56 = load i64, i64* %38, align 8
  br label %57

57:                                               ; preds = %54, %45
  %58 = phi i64 [ %56, %54 ], [ %46, %45 ]
  %59 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 1
  %60 = bitcast double* %59 to i8*
  %61 = bitcast double* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 12, i1 false) #18
  %62 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3
  %63 = bitcast %"class.blink::GridLength"* %62 to i64*
  store i64 %58, i64* %63, align 4
  %64 = and i64 %58, 280375465082880
  %65 = icmp eq i64 %64, 8796093022208
  br i1 %65, label %66, label %68

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %62, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %67) #18
  br label %68

68:                                               ; preds = %57, %66
  %69 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 1
  %70 = bitcast double* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %61, i64 12, i1 false) #18
  %71 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4
  %72 = bitcast %"class.blink::GridLength"* %71 to i64*
  store i64 2199023255552, i64* %72, align 4
  %73 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4, i32 1
  store double 0.000000e+00, double* %73, align 8
  %74 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4, i32 2
  store i32 0, i32* %74, align 8
  call void @_ZN5blink13GridTrackSize28CacheMinMaxTrackBreadthTypesEv(%"class.blink::GridTrackSize"* %0) #18
  %75 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %5, i64 0, i32 0, i32 2
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, 8
  br i1 %77, label %78, label %80

78:                                               ; preds = %68
  %79 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %5, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %79) #18
  br label %80

80:                                               ; preds = %68, %78
  %81 = load i8, i8* %36, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %7) #18
  br label %84

84:                                               ; preds = %80, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #18
  br label %545

85:                                               ; preds = %28, %4
  %86 = tail call dereferenceable(88) %"class.blink::GridTrackSize"* @_ZNK5blink24GridTrackSizingAlgorithm16RawGridTrackSizeENS_24GridTrackSizingDirectionEm(%"class.blink::GridTrackSizingAlgorithm"* %1, i32 %2, i64 %3)
  %87 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %86, i64 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 2
  br i1 %89, label %90, label %228

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %86, i64 0, i32 4
  %92 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %86, i64 0, i32 4, i32 2
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %182

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %86, i64 0, i32 4, i32 0, i32 2
  %97 = load i8, i8* %96, align 1
  switch i8 %97, label %182 [
    i8 8, label %98
    i8 1, label %98
  ]

98:                                               ; preds = %95, %95
  %99 = icmp eq i32 %2, 1
  %100 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %1, i64 0, i32 3
  %101 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %1, i64 0, i32 2
  %102 = select i1 %99, %"class.absl::optional"* %100, %"class.absl::optional"* %101
  %103 = bitcast %"class.absl::optional"* %102 to i64*
  %104 = load i64, i64* %103, align 4
  %105 = trunc i64 %104 to i8
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %182

107:                                              ; preds = %98
  %108 = bitcast %"class.blink::GridLength"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #18
  %109 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 7, i1 false) #18, !alias.scope !31
  %110 = bitcast %"class.blink::GridLength"* %8 to i64*
  %111 = load i64, i64* %9, align 8
  store i64 %111, i64* %110, align 8
  %112 = and i64 %111, 280375465082880
  %113 = icmp eq i64 %112, 8796093022208
  br i1 %113, label %114, label %116

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %8, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %115) #18
  br label %116

116:                                              ; preds = %107, %114
  %117 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %8, i64 0, i32 1
  store double 0.000000e+00, double* %117, align 8
  %118 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %8, i64 0, i32 2
  store i32 0, i32* %118, align 8
  %119 = bitcast %"class.blink::GridLength"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #18
  %120 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #18
  %121 = bitcast i64* %12 to i32*
  store i32 0, i32* %121, align 8, !alias.scope !34
  %122 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 1
  store i8 0, i8* %122, align 4, !alias.scope !34
  %123 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 2
  store i8 4, i8* %123, align 1, !alias.scope !34
  %124 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 3
  store i8 0, i8* %124, align 2, !alias.scope !34
  %125 = bitcast %"class.blink::GridLength"* %11 to i64*
  %126 = load i64, i64* %12, align 8
  store i64 %126, i64* %125, align 8
  %127 = and i64 %126, 280375465082880
  %128 = icmp eq i64 %127, 8796093022208
  br i1 %128, label %129, label %131

129:                                              ; preds = %116
  %130 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %11, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %130) #18
  br label %131

131:                                              ; preds = %116, %129
  %132 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %11, i64 0, i32 1
  store double 0.000000e+00, double* %132, align 8
  %133 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %11, i64 0, i32 2
  store i32 0, i32* %133, align 8
  %134 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 0
  store i32 1, i32* %134, align 8
  %135 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2
  %136 = bitcast %"class.blink::GridLength"* %135 to i64*
  %137 = load i64, i64* %110, align 8
  store i64 %137, i64* %136, align 4
  %138 = and i64 %137, 280375465082880
  %139 = icmp eq i64 %138, 8796093022208
  br i1 %139, label %140, label %142

140:                                              ; preds = %131
  %141 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %135, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %141) #18
  br label %142

142:                                              ; preds = %140, %131
  %143 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 1
  %144 = bitcast double* %143 to i8*
  %145 = bitcast double* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 12, i1 false) #18
  %146 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3
  %147 = bitcast %"class.blink::GridLength"* %146 to i64*
  %148 = load i64, i64* %125, align 8
  store i64 %148, i64* %147, align 4
  %149 = and i64 %148, 280375465082880
  %150 = icmp eq i64 %149, 8796093022208
  br i1 %150, label %151, label %153

151:                                              ; preds = %142
  %152 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %146, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %152) #18
  br label %153

153:                                              ; preds = %142, %151
  %154 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 1
  %155 = bitcast double* %154 to i8*
  %156 = bitcast double* %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 12, i1 false) #18
  %157 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4
  %158 = bitcast %"class.blink::GridLength"* %157 to i64*
  store i64 2199023255552, i64* %158, align 4
  %159 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4, i32 1
  store double 0.000000e+00, double* %159, align 8
  %160 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4, i32 2
  store i32 0, i32* %160, align 8
  call void @_ZN5blink13GridTrackSize28CacheMinMaxTrackBreadthTypesEv(%"class.blink::GridTrackSize"* %0) #18
  %161 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %11, i64 0, i32 0, i32 2
  %162 = load i8, i8* %161, align 1
  %163 = icmp eq i8 %162, 8
  br i1 %163, label %164, label %166

164:                                              ; preds = %153
  %165 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %11, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %165) #18
  br label %166

166:                                              ; preds = %153, %164
  %167 = load i8, i8* %123, align 1
  %168 = icmp eq i8 %167, 8
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %13) #18
  br label %170

170:                                              ; preds = %166, %169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #18
  %171 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %8, i64 0, i32 0, i32 2
  %172 = load i8, i8* %171, align 1
  %173 = icmp eq i8 %172, 8
  br i1 %173, label %174, label %176

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %8, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %175) #18
  br label %176

176:                                              ; preds = %170, %174
  %177 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 2
  %178 = load i8, i8* %177, align 1
  %179 = icmp eq i8 %178, 8
  br i1 %179, label %180, label %181

180:                                              ; preds = %176
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %10) #18
  br label %181

181:                                              ; preds = %176, %180
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #18
  br label %545

182:                                              ; preds = %90, %95, %98
  %183 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 0
  store i32 2, i32* %183, align 8
  %184 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2
  %185 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %86, i64 0, i32 2
  %186 = bitcast %"class.blink::GridLength"* %185 to i64*
  %187 = bitcast %"class.blink::GridLength"* %184 to i64*
  %188 = load i64, i64* %186, align 4
  store i64 %188, i64* %187, align 4
  %189 = and i64 %188, 280375465082880
  %190 = icmp eq i64 %189, 8796093022208
  br i1 %190, label %191, label %193

191:                                              ; preds = %182
  %192 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %184, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %192) #18
  br label %193

193:                                              ; preds = %191, %182
  %194 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 1
  %195 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %86, i64 0, i32 2, i32 1
  %196 = bitcast double* %194 to i8*
  %197 = bitcast double* %195 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %196, i8* align 8 %197, i64 12, i1 false) #18
  %198 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3
  %199 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %86, i64 0, i32 3
  %200 = bitcast %"class.blink::GridLength"* %199 to i64*
  %201 = bitcast %"class.blink::GridLength"* %198 to i64*
  %202 = load i64, i64* %200, align 4
  store i64 %202, i64* %201, align 4
  %203 = and i64 %202, 280375465082880
  %204 = icmp eq i64 %203, 8796093022208
  br i1 %204, label %205, label %207

205:                                              ; preds = %193
  %206 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %198, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %206) #18
  br label %207

207:                                              ; preds = %205, %193
  %208 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 1
  %209 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %86, i64 0, i32 3, i32 1
  %210 = bitcast double* %208 to i8*
  %211 = bitcast double* %209 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %210, i8* align 8 %211, i64 12, i1 false) #18
  %212 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4
  %213 = bitcast %"class.blink::GridLength"* %91 to i64*
  %214 = bitcast %"class.blink::GridLength"* %212 to i64*
  %215 = load i64, i64* %213, align 4
  store i64 %215, i64* %214, align 4
  %216 = and i64 %215, 280375465082880
  %217 = icmp eq i64 %216, 8796093022208
  br i1 %217, label %218, label %220

218:                                              ; preds = %207
  %219 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %212, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %219) #18
  br label %220

220:                                              ; preds = %207, %218
  %221 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4, i32 1
  %222 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %86, i64 0, i32 4, i32 1
  %223 = bitcast double* %221 to i8*
  %224 = bitcast double* %222 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %224, i64 12, i1 false) #18
  %225 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 5
  %226 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %86, i64 0, i32 5
  %227 = load i16, i16* %226, align 8
  store i16 %227, i16* %225, align 8
  br label %545

228:                                              ; preds = %85
  %229 = bitcast %"class.blink::GridLength"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %229) #18
  %230 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %14, i64 0, i32 0, i32 2
  %231 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %14, i64 0, i32 0, i32 3
  %232 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %14, i64 0, i32 1
  store double 0xFFFFFFFFFFFFFFFF, double* %232, align 8
  %233 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %14, i64 0, i32 2
  %234 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %86, i64 0, i32 2
  %235 = bitcast %"class.blink::GridLength"* %234 to i64*
  %236 = bitcast %"class.blink::GridLength"* %14 to i64*
  %237 = bitcast i32* %233 to i64*
  store i64 -6148914691236517206, i64* %237, align 8
  %238 = load i64, i64* %235, align 4
  store i64 %238, i64* %236, align 8
  %239 = and i64 %238, 280375465082880
  %240 = icmp eq i64 %239, 8796093022208
  br i1 %240, label %241, label %243

241:                                              ; preds = %228
  %242 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %14, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %242) #18
  br label %243

243:                                              ; preds = %228, %241
  %244 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %86, i64 0, i32 2, i32 1
  %245 = bitcast double* %232 to i8*
  %246 = bitcast double* %244 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %245, i8* align 8 %246, i64 12, i1 false) #18
  %247 = bitcast %"class.blink::GridLength"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %247) #18
  %248 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %15, i64 0, i32 0, i32 2
  %249 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %15, i64 0, i32 0, i32 3
  %250 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %15, i64 0, i32 1
  store double 0xFFFFFFFFFFFFFFFF, double* %250, align 8
  %251 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %15, i64 0, i32 2
  %252 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %86, i64 0, i32 3
  %253 = bitcast %"class.blink::GridLength"* %252 to i64*
  %254 = bitcast %"class.blink::GridLength"* %15 to i64*
  %255 = bitcast i32* %251 to i64*
  store i64 -6148914691236517206, i64* %255, align 8
  %256 = load i64, i64* %253, align 4
  store i64 %256, i64* %254, align 8
  %257 = and i64 %256, 280375465082880
  %258 = icmp eq i64 %257, 8796093022208
  br i1 %258, label %259, label %261

259:                                              ; preds = %243
  %260 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %15, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %260) #18
  br label %261

261:                                              ; preds = %243, %259
  %262 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %86, i64 0, i32 3, i32 1
  %263 = bitcast double* %250 to i8*
  %264 = bitcast double* %262 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %263, i8* align 8 %264, i64 12, i1 false) #18
  %265 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %86, i64 0, i32 2, i32 2
  %266 = load i32, i32* %265, align 8
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %280

268:                                              ; preds = %261
  %269 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %86, i64 0, i32 2, i32 0, i32 2
  %270 = load i8, i8* %269, align 1
  switch i8 %270, label %280 [
    i8 8, label %271
    i8 1, label %271
  ]

271:                                              ; preds = %268, %268
  %272 = icmp eq i32 %2, 1
  %273 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %1, i64 0, i32 3
  %274 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %1, i64 0, i32 2
  %275 = select i1 %272, %"class.absl::optional"* %273, %"class.absl::optional"* %274
  %276 = bitcast %"class.absl::optional"* %275 to i64*
  %277 = load i64, i64* %276, align 4
  %278 = trunc i64 %277 to i8
  %279 = icmp eq i8 %278, 0
  br i1 %279, label %296, label %467

280:                                              ; preds = %268, %261
  %281 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %86, i64 0, i32 3, i32 2
  %282 = load i32, i32* %281, align 8
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %467

284:                                              ; preds = %280
  %285 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %86, i64 0, i32 3, i32 0, i32 2
  %286 = load i8, i8* %285, align 1
  switch i8 %286, label %467 [
    i8 8, label %287
    i8 1, label %287
  ]

287:                                              ; preds = %284, %284
  %288 = icmp eq i32 %2, 1
  %289 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %1, i64 0, i32 3
  %290 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %1, i64 0, i32 2
  %291 = select i1 %288, %"class.absl::optional"* %289, %"class.absl::optional"* %290
  %292 = bitcast %"class.absl::optional"* %291 to i64*
  %293 = load i64, i64* %292, align 4
  %294 = trunc i64 %293 to i8
  %295 = icmp eq i8 %294, 0
  br i1 %295, label %296, label %467

296:                                              ; preds = %271, %287
  %297 = icmp eq i32 %2, 1
  br i1 %297, label %298, label %379

298:                                              ; preds = %296
  %299 = load %"class.blink::Grid"*, %"class.blink::Grid"** %25, align 8
  %300 = bitcast %"class.blink::Grid"* %299 to i64 (%"class.blink::Grid"*, i32)***
  %301 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %300, align 8
  %302 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %301, align 8
  %303 = call i64 %302(%"class.blink::Grid"* %299, i32 1) #18
  %304 = icmp eq i64 %303, 1
  %305 = load i32, i32* %233, align 8
  %306 = icmp eq i32 %305, 0
  %307 = and i1 %304, %306
  %308 = load i8, i8* %230, align 1
  %309 = icmp eq i8 %308, 1
  %310 = and i1 %307, %309
  br i1 %310, label %311, label %354

311:                                              ; preds = %298
  %312 = load i8, i8* %231, align 2, !range !2
  %313 = icmp eq i8 %312, 0
  %314 = bitcast %"class.blink::GridLength"* %14 to float*
  %315 = load float, float* %314, align 8
  %316 = bitcast float %315 to i32
  %317 = sitofp i32 %316 to float
  %318 = select i1 %313, float %317, float %315
  %319 = fcmp oeq float %318, 1.000000e+02
  %320 = load i32, i32* %251, align 8
  %321 = icmp eq i32 %320, 0
  %322 = and i1 %321, %319
  %323 = load i8, i8* %248, align 1
  %324 = icmp eq i8 %323, 1
  %325 = and i1 %322, %324
  br i1 %325, label %326, label %354

326:                                              ; preds = %311
  %327 = load i8, i8* %249, align 2, !range !2
  %328 = icmp eq i8 %327, 0
  %329 = bitcast %"class.blink::GridLength"* %15 to float*
  %330 = load float, float* %329, align 8
  %331 = bitcast float %330 to i32
  %332 = sitofp i32 %331 to float
  %333 = select i1 %328, float %332, float %330
  %334 = fcmp une float %333, 1.000000e+02
  br i1 %334, label %354, label %335

335:                                              ; preds = %326
  %336 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %1, i64 0, i32 13
  %337 = bitcast %"class.blink::LayoutGrid"** %336 to %"class.blink::LayoutObject"**
  %338 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %337, align 8
  %339 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %338, i64 0, i32 5, i32 0
  %340 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %339, align 8
  %341 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %340, i64 0, i32 0, i32 9
  %342 = bitcast [20 x i8]* %341 to i160*
  %343 = load i160, i160* %342, align 8
  %344 = and i160 %343, 15211807202738752817960438464512
  %345 = icmp eq i160 %344, 0
  %346 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %340, i64 0, i32 0, i32 5, i32 0, i32 0
  %347 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %346, align 8
  %348 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %347, i64 0, i32 4
  %349 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %347, i64 0, i32 5
  %350 = select i1 %345, %"class.blink::Length"* %348, %"class.blink::Length"* %349
  %351 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %350, i64 0, i32 2
  %352 = load i8, i8* %351, align 1
  %353 = icmp eq i8 %352, 12
  br i1 %353, label %379, label %354

354:                                              ; preds = %311, %298, %335, %326
  %355 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %1, i64 0, i32 13
  %356 = bitcast %"class.blink::LayoutGrid"** %355 to %"class.blink::LayoutObject"**
  %357 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %356, align 8
  %358 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %357, i64 0, i32 6, i32 0, i32 0
  %359 = load %"class.blink::Node"*, %"class.blink::Node"** %358, align 8
  %360 = icmp eq %"class.blink::Node"* %359, null
  br i1 %360, label %361, label %368

361:                                              ; preds = %354, %361
  %362 = phi %"class.blink::LayoutObject"* [ %364, %361 ], [ %357, %354 ]
  %363 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %362, i64 0, i32 7
  %364 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %363, align 8
  %365 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %364, i64 0, i32 6, i32 0, i32 0
  %366 = load %"class.blink::Node"*, %"class.blink::Node"** %365, align 8
  %367 = icmp eq %"class.blink::Node"* %366, null
  br i1 %367, label %361, label %368

368:                                              ; preds = %361, %354
  %369 = phi %"class.blink::Node"* [ %359, %354 ], [ %366, %361 ]
  %370 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %369, i64 0, i32 3, i32 0, i32 0
  %371 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %370, align 8
  %372 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %371, i64 0, i32 2, i32 0, i32 0
  %373 = load %"class.blink::Document"*, %"class.blink::Document"** %372, align 8
  %374 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %373, i64 0, i32 2
  %375 = bitcast %"class.blink::UseCounter"* %374 to void (%"class.blink::UseCounter"*, i32)***
  %376 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %375, align 8
  %377 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %376, i64 3
  %378 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %377, align 8
  call void %378(%"class.blink::UseCounter"* %374, i32 2248) #18
  br label %379

379:                                              ; preds = %335, %368, %296
  %380 = load i32, i32* %233, align 8
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %423

382:                                              ; preds = %379
  %383 = load i8, i8* %230, align 1
  switch i8 %383, label %423 [
    i8 8, label %384
    i8 1, label %384
  ]

384:                                              ; preds = %382, %382
  %385 = bitcast %"class.blink::GridLength"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %385) #18
  %386 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %386) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %386, i8 0, i64 7, i1 false) #18, !alias.scope !37
  %387 = bitcast %"class.blink::GridLength"* %16 to i64*
  %388 = load i64, i64* %17, align 8
  store i64 %388, i64* %387, align 8
  %389 = and i64 %388, 280375465082880
  %390 = icmp eq i64 %389, 8796093022208
  %391 = lshr i64 %388, 40
  %392 = trunc i64 %391 to i8
  br i1 %390, label %393, label %397

393:                                              ; preds = %384
  %394 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %16, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %394) #18
  %395 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %16, i64 0, i32 0, i32 2
  %396 = load i8, i8* %395, align 1
  br label %397

397:                                              ; preds = %384, %393
  %398 = phi i8 [ %392, %384 ], [ %396, %393 ]
  %399 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %16, i64 0, i32 1
  store double 0.000000e+00, double* %399, align 8
  %400 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %16, i64 0, i32 2
  store i32 0, i32* %400, align 8
  %401 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %14, i64 0, i32 0
  %402 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %16, i64 0, i32 0, i32 2
  %403 = icmp eq i8 %398, 8
  br i1 %403, label %404, label %406

404:                                              ; preds = %397
  %405 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %16, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %405) #18
  br label %406

406:                                              ; preds = %404, %397
  %407 = load i8, i8* %230, align 1
  %408 = icmp eq i8 %407, 8
  br i1 %408, label %409, label %410

409:                                              ; preds = %406
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %401) #18
  br label %410

410:                                              ; preds = %406, %409
  %411 = load i64, i64* %387, align 8
  store i64 %411, i64* %236, align 8
  %412 = bitcast double* %399 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %245, i8* align 8 %412, i64 12, i1 false) #18
  %413 = load i8, i8* %402, align 1
  %414 = icmp eq i8 %413, 8
  br i1 %414, label %415, label %417

415:                                              ; preds = %410
  %416 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %16, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %416) #18
  br label %417

417:                                              ; preds = %410, %415
  %418 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %18, i64 0, i32 2
  %419 = load i8, i8* %418, align 1
  %420 = icmp eq i8 %419, 8
  br i1 %420, label %421, label %422

421:                                              ; preds = %417
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %18) #18
  br label %422

422:                                              ; preds = %417, %421
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %386) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %385) #18
  br label %423

423:                                              ; preds = %382, %379, %422
  %424 = load i32, i32* %251, align 8
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %426, label %467

426:                                              ; preds = %423
  %427 = load i8, i8* %248, align 1
  switch i8 %427, label %467 [
    i8 8, label %428
    i8 1, label %428
  ]

428:                                              ; preds = %426, %426
  %429 = bitcast %"class.blink::GridLength"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %429) #18
  %430 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %430) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %430, i8 0, i64 7, i1 false) #18, !alias.scope !40
  %431 = bitcast %"class.blink::GridLength"* %19 to i64*
  %432 = load i64, i64* %20, align 8
  store i64 %432, i64* %431, align 8
  %433 = and i64 %432, 280375465082880
  %434 = icmp eq i64 %433, 8796093022208
  %435 = lshr i64 %432, 40
  %436 = trunc i64 %435 to i8
  br i1 %434, label %437, label %441

437:                                              ; preds = %428
  %438 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %19, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %438) #18
  %439 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %19, i64 0, i32 0, i32 2
  %440 = load i8, i8* %439, align 1
  br label %441

441:                                              ; preds = %428, %437
  %442 = phi i8 [ %436, %428 ], [ %440, %437 ]
  %443 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %19, i64 0, i32 1
  store double 0.000000e+00, double* %443, align 8
  %444 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %19, i64 0, i32 2
  store i32 0, i32* %444, align 8
  %445 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %15, i64 0, i32 0
  %446 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %19, i64 0, i32 0, i32 2
  %447 = icmp eq i8 %442, 8
  br i1 %447, label %448, label %450

448:                                              ; preds = %441
  %449 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %19, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %449) #18
  br label %450

450:                                              ; preds = %448, %441
  %451 = load i8, i8* %248, align 1
  %452 = icmp eq i8 %451, 8
  br i1 %452, label %453, label %454

453:                                              ; preds = %450
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %445) #18
  br label %454

454:                                              ; preds = %450, %453
  %455 = load i64, i64* %431, align 8
  store i64 %455, i64* %254, align 8
  %456 = bitcast double* %443 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %263, i8* align 8 %456, i64 12, i1 false) #18
  %457 = load i8, i8* %446, align 1
  %458 = icmp eq i8 %457, 8
  br i1 %458, label %459, label %461

459:                                              ; preds = %454
  %460 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %19, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %460) #18
  br label %461

461:                                              ; preds = %454, %459
  %462 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %21, i64 0, i32 2
  %463 = load i8, i8* %462, align 1
  %464 = icmp eq i8 %463, 8
  br i1 %464, label %465, label %466

465:                                              ; preds = %461
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %21) #18
  br label %466

466:                                              ; preds = %461, %465
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %430) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %429) #18
  br label %467

467:                                              ; preds = %426, %423, %280, %284, %271, %466, %287
  %468 = load i32, i32* %233, align 8
  %469 = icmp eq i32 %468, 1
  br i1 %469, label %470, label %509

470:                                              ; preds = %467
  %471 = bitcast %"class.blink::GridLength"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %471) #18
  %472 = bitcast i64* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %472) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %472, i8 0, i64 7, i1 false) #18, !alias.scope !43
  %473 = bitcast %"class.blink::GridLength"* %22 to i64*
  %474 = load i64, i64* %23, align 8
  store i64 %474, i64* %473, align 8
  %475 = and i64 %474, 280375465082880
  %476 = icmp eq i64 %475, 8796093022208
  %477 = lshr i64 %474, 40
  %478 = trunc i64 %477 to i8
  br i1 %476, label %479, label %483

479:                                              ; preds = %470
  %480 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %22, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %480) #18
  %481 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %22, i64 0, i32 0, i32 2
  %482 = load i8, i8* %481, align 1
  br label %483

483:                                              ; preds = %470, %479
  %484 = phi i8 [ %478, %470 ], [ %482, %479 ]
  %485 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %22, i64 0, i32 1
  store double 0.000000e+00, double* %485, align 8
  %486 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %22, i64 0, i32 2
  store i32 0, i32* %486, align 8
  %487 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %14, i64 0, i32 0
  %488 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %22, i64 0, i32 0, i32 2
  %489 = icmp eq i8 %484, 8
  br i1 %489, label %490, label %492

490:                                              ; preds = %483
  %491 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %22, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %491) #18
  br label %492

492:                                              ; preds = %490, %483
  %493 = load i8, i8* %230, align 1
  %494 = icmp eq i8 %493, 8
  br i1 %494, label %495, label %496

495:                                              ; preds = %492
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %487) #18
  br label %496

496:                                              ; preds = %492, %495
  %497 = load i64, i64* %473, align 8
  store i64 %497, i64* %236, align 8
  %498 = bitcast double* %485 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %245, i8* align 8 %498, i64 12, i1 false) #18
  %499 = load i8, i8* %488, align 1
  %500 = icmp eq i8 %499, 8
  br i1 %500, label %501, label %503

501:                                              ; preds = %496
  %502 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %22, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %502) #18
  br label %503

503:                                              ; preds = %496, %501
  %504 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 0, i32 2
  %505 = load i8, i8* %504, align 1
  %506 = icmp eq i8 %505, 8
  br i1 %506, label %507, label %508

507:                                              ; preds = %503
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %24) #18
  br label %508

508:                                              ; preds = %503, %507
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %472) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %471) #18
  br label %509

509:                                              ; preds = %508, %467
  %510 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 0
  store i32 1, i32* %510, align 8
  %511 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2
  %512 = bitcast %"class.blink::GridLength"* %511 to i64*
  %513 = load i64, i64* %236, align 8
  store i64 %513, i64* %512, align 4
  %514 = and i64 %513, 280375465082880
  %515 = icmp eq i64 %514, 8796093022208
  br i1 %515, label %516, label %518

516:                                              ; preds = %509
  %517 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %511, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %517) #18
  br label %518

518:                                              ; preds = %516, %509
  %519 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 1
  %520 = bitcast double* %519 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %520, i8* align 8 %245, i64 12, i1 false) #18
  %521 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3
  %522 = bitcast %"class.blink::GridLength"* %521 to i64*
  %523 = load i64, i64* %254, align 8
  store i64 %523, i64* %522, align 4
  %524 = and i64 %523, 280375465082880
  %525 = icmp eq i64 %524, 8796093022208
  br i1 %525, label %526, label %528

526:                                              ; preds = %518
  %527 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %521, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %527) #18
  br label %528

528:                                              ; preds = %518, %526
  %529 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 1
  %530 = bitcast double* %529 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %530, i8* align 8 %263, i64 12, i1 false) #18
  %531 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4
  %532 = bitcast %"class.blink::GridLength"* %531 to i64*
  store i64 2199023255552, i64* %532, align 4
  %533 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4, i32 1
  store double 0.000000e+00, double* %533, align 8
  %534 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4, i32 2
  store i32 0, i32* %534, align 8
  call void @_ZN5blink13GridTrackSize28CacheMinMaxTrackBreadthTypesEv(%"class.blink::GridTrackSize"* %0) #18
  %535 = load i8, i8* %248, align 1
  %536 = icmp eq i8 %535, 8
  br i1 %536, label %537, label %539

537:                                              ; preds = %528
  %538 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %15, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %538) #18
  br label %539

539:                                              ; preds = %528, %537
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %247) #18
  %540 = load i8, i8* %230, align 1
  %541 = icmp eq i8 %540, 8
  br i1 %541, label %542, label %544

542:                                              ; preds = %539
  %543 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %14, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %543) #18
  br label %544

544:                                              ; preds = %539, %542
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %229) #18
  br label %545

545:                                              ; preds = %220, %544, %181, %84
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %"class.blink::GridTrackSize"* @_ZNK5blink24GridTrackSizingAlgorithm16RawGridTrackSizeENS_24GridTrackSizingDirectionEm(%"class.blink::GridTrackSizingAlgorithm"* nocapture readonly, i32, i64) local_unnamed_addr #3 align 2 {
  %4 = icmp eq i32 %1, 0
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 13
  %6 = bitcast %"class.blink::LayoutGrid"** %5 to %"class.blink::LayoutObject"**
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 5, i32 0
  %9 = bitcast %"class.blink::ComputedStyle"** %8 to %"class.blink::ComputedStyleBase"**
  %10 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %10, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %15, align 8
  br i1 %4, label %17, label %48

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %16, i64 0, i32 3
  %19 = tail call dereferenceable(16) %"class.WTF::Vector.428"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %18) #18
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 5, i32 0
  %22 = bitcast %"class.blink::ComputedStyle"** %21 to %"class.blink::ComputedStyleBase"**
  %23 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %23, i64 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %25, i64 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %27, i64 0, i32 3, i32 0, i32 0
  %29 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %29, i64 0, i32 13
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %25, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %32, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %34, i64 0, i32 1
  %36 = tail call dereferenceable(16) %"class.WTF::Vector.428"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %35) #18
  %37 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %37, i64 0, i32 5, i32 0
  %39 = bitcast %"class.blink::ComputedStyle"** %38 to %"class.blink::ComputedStyleBase"**
  %40 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %40, i64 0, i32 3, i32 0, i32 0
  %42 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %42, i64 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %46, i64 0, i32 17
  br label %79

48:                                               ; preds = %3
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %16, i64 0, i32 4
  %50 = tail call dereferenceable(16) %"class.WTF::Vector.428"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %49) #18
  %51 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %52 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %51, i64 0, i32 5, i32 0
  %53 = bitcast %"class.blink::ComputedStyle"** %52 to %"class.blink::ComputedStyleBase"**
  %54 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %54, i64 0, i32 3, i32 0, i32 0
  %56 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %56, i64 0, i32 3, i32 0, i32 0
  %58 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %58, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %60, i64 0, i32 14
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %56, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %63, i64 0, i32 2, i32 0, i32 0
  %65 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %65, i64 0, i32 2
  %67 = tail call dereferenceable(16) %"class.WTF::Vector.428"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %66) #18
  %68 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %69 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %68, i64 0, i32 5, i32 0
  %70 = bitcast %"class.blink::ComputedStyle"** %69 to %"class.blink::ComputedStyleBase"**
  %71 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %71, i64 0, i32 3, i32 0, i32 0
  %73 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %73, i64 0, i32 3, i32 0, i32 0
  %75 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %75, i64 0, i32 3, i32 0, i32 0
  %77 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %77, i64 0, i32 18
  br label %79

79:                                               ; preds = %48, %17
  %80 = phi %"class.WTF::Vector.428"* [ %36, %17 ], [ %67, %48 ]
  %81 = phi %"class.WTF::Vector.428"* [ %19, %17 ], [ %50, %48 ]
  %82 = phi %"class.WTF::Vector.428"* [ %30, %17 ], [ %61, %48 ]
  %83 = phi i64* [ %47, %17 ], [ %78, %48 ]
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 12
  %86 = load %"class.blink::Grid"*, %"class.blink::Grid"** %85, align 8
  %87 = tail call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %86, i32 %1) #18
  %88 = getelementptr inbounds %"class.WTF::Vector.428", %"class.WTF::Vector.428"* %81, i64 0, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i64
  %91 = add i64 %87, %90
  %92 = load %"class.blink::Grid"*, %"class.blink::Grid"** %85, align 8
  %93 = tail call i64 @_ZNK5blink4Grid17ExplicitGridStartENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %92, i32 %1) #18
  %94 = sub i64 %2, %93
  %95 = trunc i64 %94 to i32
  %96 = getelementptr inbounds %"class.WTF::Vector.428", %"class.WTF::Vector.428"* %80, i64 0, i32 0, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = icmp slt i32 %95, 0
  br i1 %99, label %100, label %106

100:                                              ; preds = %79
  %101 = srem i32 %95, %97
  %102 = icmp eq i32 %101, 0
  %103 = select i1 %102, i32 0, i32 %97
  %104 = add i32 %103, %101
  %105 = tail call dereferenceable(88) %"class.blink::GridTrackSize"* @_ZNK3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.428"* %80, i32 %104) #18
  br label %136

106:                                              ; preds = %79
  %107 = shl i64 %94, 32
  %108 = ashr exact i64 %107, 32
  %109 = icmp ult i64 %108, %91
  br i1 %109, label %115, label %110

110:                                              ; preds = %106
  %111 = sub i64 %108, %91
  %112 = urem i64 %111, %98
  %113 = trunc i64 %112 to i32
  %114 = tail call dereferenceable(88) %"class.blink::GridTrackSize"* @_ZNK3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.428"* %80, i32 %113) #18
  br label %136

115:                                              ; preds = %106
  %116 = icmp eq i64 %87, 0
  %117 = icmp ult i64 %108, %84
  %118 = or i1 %116, %117
  br i1 %118, label %119, label %121, !prof !46

119:                                              ; preds = %115
  %120 = tail call dereferenceable(88) %"class.blink::GridTrackSize"* @_ZNK3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.428"* %81, i32 %95) #18
  br label %136

121:                                              ; preds = %115
  %122 = add i64 %87, %84
  %123 = icmp ult i64 %108, %122
  br i1 %123, label %124, label %132

124:                                              ; preds = %121
  %125 = sub i64 %108, %84
  %126 = getelementptr inbounds %"class.WTF::Vector.428", %"class.WTF::Vector.428"* %82, i64 0, i32 0, i32 0, i32 2
  %127 = load i32, i32* %126, align 4
  %128 = zext i32 %127 to i64
  %129 = urem i64 %125, %128
  %130 = trunc i64 %129 to i32
  %131 = tail call dereferenceable(88) %"class.blink::GridTrackSize"* @_ZNK3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.428"* %82, i32 %130) #18
  br label %136

132:                                              ; preds = %121
  %133 = sub i64 %108, %87
  %134 = trunc i64 %133 to i32
  %135 = tail call dereferenceable(88) %"class.blink::GridTrackSize"* @_ZNK3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.428"* %81, i32 %134) #18
  br label %136

136:                                              ; preds = %110, %119, %124, %132, %100
  %137 = phi %"class.blink::GridTrackSize"* [ %105, %100 ], [ %114, %110 ], [ %120, %119 ], [ %131, %124 ], [ %135, %132 ]
  ret %"class.blink::GridTrackSize"* %137
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink24GridTrackSizingAlgorithm26IsRelativeGridLengthAsAutoERKNS_10GridLengthENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* nocapture readonly, %"class.blink::GridLength"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #9 align 2 {
  %4 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %1, i64 0, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  switch i8 %9, label %19 [
    i8 8, label %10
    i8 1, label %10
  ]

10:                                               ; preds = %7, %7
  %11 = icmp eq i32 %2, 1
  %12 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %14 = select i1 %11, %"class.absl::optional"* %12, %"class.absl::optional"* %13
  %15 = bitcast %"class.absl::optional"* %14 to i64*
  %16 = load i64, i64* %15, align 4
  %17 = trunc i64 %16 to i8
  %18 = icmp eq i8 %17, 0
  br label %19

19:                                               ; preds = %7, %3, %10
  %20 = phi i1 [ false, %7 ], [ %18, %10 ], [ false, %3 ]
  ret i1 %20
}

declare i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #8

declare i32 @_ZNK5blink10LayoutGrid11GuttersSizeERKNS_4GridENS_24GridTrackSizingDirectionEmmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"*, %"class.blink::Grid"* dereferenceable(168), i32, i64, i64, i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink24GridTrackSizingAlgorithm23GridAreaBreadthForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #3 align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 17
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  %9 = zext i1 %8 to i8
  br label %18

10:                                               ; preds = %3
  %11 = icmp eq i32 %2, 1
  br i1 %11, label %12, label %18

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 17
  %14 = load i32, i32* %13, align 8
  switch i32 %14, label %18 [
    i32 0, label %15
    i32 2, label %17
  ]

15:                                               ; preds = %12
  %16 = tail call i32 @_ZNK5blink24GridTrackSizingAlgorithm32EstimatedGridAreaBreadthForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 1)
  br label %105

17:                                               ; preds = %12
  br label %18

18:                                               ; preds = %12, %17, %5, %10
  %19 = phi i1 [ false, %10 ], [ true, %12 ], [ false, %5 ], [ true, %17 ]
  %20 = phi i8 [ 0, %10 ], [ 0, %12 ], [ %9, %5 ], [ 1, %17 ]
  %21 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %22 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %23 = select i1 %4, %"class.WTF::Vector"* %21, %"class.WTF::Vector"* %22
  %24 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 12
  %25 = load %"class.blink::Grid"*, %"class.blink::Grid"** %24, align 8
  %26 = tail call { i64, i32 } @_ZNK5blink4Grid12GridItemSpanERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %25, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2) #18
  %27 = extractvalue { i64, i32 } %26, 0
  %28 = shl i64 %27, 32
  %29 = ashr exact i64 %28, 32
  %30 = ashr i64 %27, 32
  %31 = icmp eq i64 %29, %30
  br i1 %31, label %32, label %37

32:                                               ; preds = %37, %18
  %33 = phi i32 [ 0, %18 ], [ %49, %37 ]
  %34 = icmp eq i8 %20, 0
  %35 = mul i64 %27, -4294967295
  %36 = and i64 %35, -4294967296
  br i1 %34, label %87, label %52

37:                                               ; preds = %18, %37
  %38 = phi i32 [ %49, %37 ], [ 0, %18 ]
  %39 = phi i64 [ %50, %37 ], [ %29, %18 ]
  %40 = trunc i64 %39 to i32
  %41 = tail call dereferenceable(128) %"class.blink::GridTrack"* @_ZNK3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %23, i32 %40) #18
  %42 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %41, i64 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = icmp slt i32 %43, 0
  %45 = select i1 %44, i32 -2147483648, i32 2147483647
  %46 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %43) #18
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 %45, i32 %48, !prof !3
  %50 = add i64 %39, 1
  %51 = icmp eq i64 %50, %30
  br i1 %51, label %32, label %37

52:                                               ; preds = %32
  %53 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 13
  %54 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %53, align 8
  %55 = tail call i32 @_ZNK5blink10LayoutGrid14GridItemOffsetENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* %54, i32 %2) #18
  %56 = ashr exact i64 %36, 26
  %57 = add nsw i64 %56, -64
  %58 = tail call i1 @llvm.is.constant.i64(i64 %57) #18
  %59 = icmp ult i64 %57, 2147483648
  %60 = trunc i64 %57 to i32
  %61 = select i1 %59, i32 %60, i32 2147483647
  %62 = icmp ult i64 %57, 2147483647
  %63 = select i1 %62, i64 %57, i64 2147483647
  %64 = trunc i64 %63 to i32
  %65 = select i1 %58, i32 %64, i32 %61
  %66 = sext i32 %65 to i64
  %67 = sext i32 %55 to i64
  %68 = mul nsw i64 %66, %67
  %69 = sdiv i64 %68, 64
  %70 = ashr i64 %69, 32
  %71 = trunc i64 %70 to i32
  %72 = trunc i64 %69 to i32
  %73 = ashr i32 %72, 31
  %74 = icmp eq i32 %73, %71
  br i1 %74, label %79, label %75

75:                                               ; preds = %52
  %76 = xor i32 %65, %55
  %77 = lshr i32 %76, 31
  %78 = add nuw i32 %77, 2147483647
  br label %79

79:                                               ; preds = %52, %75
  %80 = phi i32 [ %72, %52 ], [ %78, %75 ]
  %81 = icmp slt i32 %80, 0
  %82 = select i1 %81, i32 -2147483648, i32 2147483647
  %83 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 %80) #18
  %84 = extractvalue { i32, i1 } %83, 1
  %85 = extractvalue { i32, i1 } %83, 0
  %86 = select i1 %84, i32 %82, i32 %85, !prof !3
  br label %87

87:                                               ; preds = %32, %79
  %88 = phi i32 [ %86, %79 ], [ %33, %32 ]
  %89 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 13
  %90 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %89, align 8
  %91 = load %"class.blink::Grid"*, %"class.blink::Grid"** %24, align 8
  %92 = ashr exact i64 %36, 32
  %93 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %94 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %95 = select i1 %19, %"class.absl::optional"* %93, %"class.absl::optional"* %94
  %96 = bitcast %"class.absl::optional"* %95 to i64*
  %97 = load i64, i64* %96, align 4
  %98 = tail call i32 @_ZNK5blink10LayoutGrid11GuttersSizeERKNS_4GridENS_24GridTrackSizingDirectionEmmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %90, %"class.blink::Grid"* dereferenceable(168) %91, i32 %2, i64 %29, i64 %92, i64 %97) #18
  %99 = icmp slt i32 %98, 0
  %100 = select i1 %99, i32 -2147483648, i32 2147483647
  %101 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %88, i32 %98) #18
  %102 = extractvalue { i32, i1 } %101, 1
  %103 = extractvalue { i32, i1 } %101, 0
  %104 = select i1 %102, i32 %100, i32 %103, !prof !3
  br label %105

105:                                              ; preds = %87, %15
  %106 = phi i32 [ %16, %15 ], [ %104, %87 ]
  ret i32 %106
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector"* @_ZNK5blink24GridTrackSizingAlgorithm6TracksENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* readnone, i32) local_unnamed_addr #10 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %6 = select i1 %3, %"class.WTF::Vector"* %4, %"class.WTF::Vector"* %5
  ret %"class.WTF::Vector"* %6
}

declare i32 @_ZNK5blink10LayoutGrid14GridItemOffsetENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"*, i32) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink24GridTrackSizingAlgorithm24IsIntrinsicSizedGridAreaERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #3 align 2 {
  %4 = icmp ne i32 %2, 0
  %5 = zext i1 %4 to i32
  %6 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 12
  %7 = load %"class.blink::Grid"*, %"class.blink::Grid"** %6, align 8
  %8 = tail call { i64, i32 } @_ZNK5blink4Grid12GridItemSpanERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %7, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %5) #18
  %9 = extractvalue { i64, i32 } %8, 0
  %10 = shl i64 %9, 32
  %11 = ashr exact i64 %10, 32
  %12 = ashr i64 %9, 32
  %13 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %15 = select i1 %4, %"class.absl::optional"* %13, %"class.absl::optional"* %14
  %16 = bitcast %"class.absl::optional"* %15 to i64*
  %17 = icmp eq i64 %11, %12
  br i1 %17, label %49, label %18

18:                                               ; preds = %3, %46
  %19 = phi i64 [ %47, %46 ], [ %11, %3 ]
  %20 = tail call dereferenceable(88) %"class.blink::GridTrackSize"* @_ZNK5blink24GridTrackSizingAlgorithm16RawGridTrackSizeENS_24GridTrackSizingDirectionEm(%"class.blink::GridTrackSizingAlgorithm"* %0, i32 %5, i64 %19)
  %21 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %20, i64 0, i32 2, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %20, i64 0, i32 2, i32 0, i32 2
  %26 = load i8, i8* %25, align 1
  switch i8 %26, label %27 [
    i8 0, label %49
    i8 3, label %49
    i8 4, label %49
  ]

27:                                               ; preds = %24, %18
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %20, i64 0, i32 3, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %20, i64 0, i32 3, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  switch i8 %33, label %34 [
    i8 0, label %49
    i8 3, label %49
    i8 4, label %49
  ]

34:                                               ; preds = %31, %27
  %35 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %20, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 2
  %38 = icmp eq i32 %22, 1
  %39 = or i1 %37, %38
  br i1 %39, label %49, label %40

40:                                               ; preds = %34
  %41 = icmp eq i32 %29, 1
  br i1 %41, label %42, label %46

42:                                               ; preds = %40
  %43 = load i64, i64* %16, align 4
  %44 = trunc i64 %43 to i8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %42, %40
  %47 = add i64 %19, 1
  %48 = icmp eq i64 %47, %12
  br i1 %48, label %49, label %18

49:                                               ; preds = %34, %24, %24, %24, %31, %31, %31, %46, %42, %3
  %50 = phi i1 [ false, %3 ], [ true, %42 ], [ false, %46 ], [ true, %31 ], [ true, %31 ], [ true, %31 ], [ true, %24 ], [ true, %24 ], [ true, %24 ], [ true, %34 ]
  ret i1 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink32GridTrackSizingAlgorithmStrategy48UpdateOverrideContainingBlockContentSizeForChildERNS_9LayoutBoxENS_24GridTrackSizingDirectionEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithmStrategy"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216), i32, i64) local_unnamed_addr #3 align 2 {
  %5 = trunc i64 %3 to i8
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = icmp eq i8 %5, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithmStrategy", %"class.blink::GridTrackSizingAlgorithmStrategy"* %0, i64 0, i32 1
  %11 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %10, align 8
  %12 = tail call i32 @_ZNK5blink24GridTrackSizingAlgorithm23GridAreaBreadthForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %11, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2)
  br label %13

13:                                               ; preds = %4, %9
  %14 = phi i32 [ %7, %4 ], [ %12, %9 ]
  %15 = tail call i32 @_ZN5blink15GridLayoutUtils42OverrideContainingBlockContentSizeForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2) #18
  %16 = icmp eq i32 %15, %14
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = icmp eq i32 %2, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %17
  tail call void @_ZN5blink9LayoutBox45SetOverrideContainingBlockContentLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 %14) #18
  br label %21

20:                                               ; preds = %17
  tail call void @_ZN5blink9LayoutBox46SetOverrideContainingBlockContentLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 %14) #18
  br label %21

21:                                               ; preds = %20, %19, %13
  %22 = phi i1 [ false, %13 ], [ true, %19 ], [ true, %20 ]
  ret i1 %22
}

declare i32 @_ZN5blink15GridLayoutUtils42OverrideContainingBlockContentSizeForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink32GridTrackSizingAlgorithmStrategy21LogicalHeightForChildERNS_9LayoutBoxE(%"class.blink::GridTrackSizingAlgorithmStrategy"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithmStrategy", %"class.blink::GridTrackSizingAlgorithmStrategy"* %0, i64 0, i32 1
  %4 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %4, i64 0, i32 13
  %6 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %5, align 8
  %7 = tail call i32 @_ZN5blink15GridLayoutUtils26FlowAwareDirectionForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %6, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 1) #18
  %8 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %9 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %8, i64 0, i32 13
  %10 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %9, align 8
  %11 = tail call zeroext i1 @_ZN5blink32GridTrackSizingAlgorithmStrategy53ShouldClearOverrideContainingBlockContentSizeForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %10, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %7)
  br i1 %11, label %12, label %22

12:                                               ; preds = %2
  %13 = icmp eq i32 %7, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %12
  tail call void @_ZN5blink9LayoutBox45SetOverrideContainingBlockContentLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 -64) #18
  br label %16

15:                                               ; preds = %12
  tail call void @_ZN5blink9LayoutBox46SetOverrideContainingBlockContentLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 -64) #18
  br label %16

16:                                               ; preds = %14, %15
  %17 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %19 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %18 to i96*
  %20 = load i96, i96* %19, align 4
  %21 = or i96 %20, 2
  store i96 %21, i96* %19, align 4
  tail call void @_ZN5blink12LayoutObject44MarkSelfPaintingLayerForVisualOverflowRecalcEv(%"class.blink::LayoutObject"* %17) #18
  br label %22

22:                                               ; preds = %2, %16
  %23 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %24 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %23 to i96*
  %25 = load i96, i96* %24, align 4
  %26 = and i96 %25, 63
  %27 = icmp eq i96 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %30 = bitcast %"class.blink::LayoutBox"* %1 to void (%"class.blink::LayoutObject"*)***
  %31 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %31, i64 54
  %33 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %32, align 8
  tail call void %33(%"class.blink::LayoutObject"* %29) #18
  br label %34

34:                                               ; preds = %22, %28
  %35 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %36 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %36, i64 0, i32 0, i32 9
  %38 = bitcast [20 x i8]* %37 to i160*
  %39 = load i160, i160* %38, align 8
  %40 = and i160 %39, 15211807202738752817960438464512
  %41 = icmp eq i160 %40, 0
  %42 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %43 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %44 = load i32, i32* %42, align 4
  %45 = load i32, i32* %43, align 4
  %46 = select i1 %41, i32 %44, i32 %45
  %47 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %48 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %47, i64 0, i32 13
  %49 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %48, align 8
  %50 = tail call i32 @_ZN5blink15GridLayoutUtils27MarginLogicalHeightForChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %49, %"class.blink::LayoutBox"* dereferenceable(216) %1) #18
  %51 = icmp slt i32 %50, 0
  %52 = select i1 %51, i32 -2147483648, i32 2147483647
  %53 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %46, i32 %50) #18
  %54 = extractvalue { i32, i1 } %53, 1
  %55 = extractvalue { i32, i1 } %53, 0
  %56 = select i1 %54, i32 %52, i32 %55, !prof !3
  %57 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %58 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %57, i64 0, i32 11
  %59 = load i32, i32* %58, align 8
  %60 = icmp ne i32 %59, 0
  %61 = zext i1 %60 to i32
  %62 = tail call i32 @_ZNK5blink24GridTrackSizingAlgorithm22BaselineOffsetForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"* %57, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %61)
  %63 = icmp slt i32 %62, 0
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %56, i32 %62) #18
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !3
  ret i32 %68
}

declare i32 @_ZN5blink15GridLayoutUtils27MarginLogicalHeightForChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632), %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink24GridTrackSizingAlgorithm22BaselineOffsetForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.blink::LayoutBox"*, align 8
  %5 = alloca %"class.blink::LayoutBox"*, align 8
  %6 = icmp eq i32 %2, 1
  %7 = bitcast %"class.blink::LayoutBox"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #18
  %8 = bitcast %"class.blink::LayoutBox"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #18
  br i1 %6, label %9, label %12

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 20
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %4, align 8
  %11 = call zeroext i1 @_ZNK3WTF7HashMapIPKN5blink9LayoutBoxEbNS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS7_IbEENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.948"* %10, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #18
  br i1 %11, label %15, label %29

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 21
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %5, align 8
  %14 = call zeroext i1 @_ZNK3WTF7HashMapIPKN5blink9LayoutBoxEbNS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS7_IbEENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.948"* %13, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #18
  br i1 %14, label %15, label %29

15:                                               ; preds = %9, %12
  %16 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 13
  %17 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %16, align 8
  %18 = call i32 @_ZNK5blink10LayoutGrid21SelfAlignmentForChildENS_8GridAxisERKNS_9LayoutBoxEPKNS_13ComputedStyleE(%"class.blink::LayoutGrid"* %17, i32 %2, %"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::ComputedStyle"* null) #18
  %19 = and i32 %18, 15
  %20 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 12
  %21 = load %"class.blink::Grid"*, %"class.blink::Grid"** %20, align 8
  %22 = icmp ne i32 %2, 0
  %23 = zext i1 %22 to i32
  %24 = call { i64, i32 } @_ZNK5blink4Grid12GridItemSpanERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %21, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %23) #18
  %25 = extractvalue { i64, i32 } %24, 0
  %26 = trunc i64 %25 to i32
  %27 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 19
  %28 = call i32 @_ZNK5blink21GridBaselineAlignment22BaselineOffsetForChildENS_12ItemPositionEjRKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* %27, i32 %19, i32 %26, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2) #18
  br label %29

29:                                               ; preds = %12, %9, %15
  %30 = phi i32 [ %28, %15 ], [ 0, %9 ], [ 0, %12 ]
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink32GridTrackSizingAlgorithmStrategy18MinContentForChildERNS_9LayoutBoxE(%"class.blink::GridTrackSizingAlgorithmStrategy"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithmStrategy", %"class.blink::GridTrackSizingAlgorithmStrategy"* %0, i64 0, i32 1
  %4 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %4, i64 0, i32 13
  %6 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %5, align 8
  %7 = tail call i32 @_ZN5blink15GridLayoutUtils26FlowAwareDirectionForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %6, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0) #18
  %8 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %9 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %7
  br i1 %11, label %12, label %49

12:                                               ; preds = %2
  %13 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutBox"*)***
  %14 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %14, i64 183
  %16 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::LayoutBox"* %1) #18
  br i1 %17, label %18, label %20

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %19, i32 1) #18
  br label %20

20:                                               ; preds = %18, %12
  %21 = bitcast %"class.blink::LayoutBox"* %1 to i64 (%"class.blink::LayoutBox"*)***
  %22 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %21, align 8
  %23 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %22, i64 69
  %24 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %23, align 8
  %25 = tail call i64 %24(%"class.blink::LayoutBox"* %1) #18
  %26 = trunc i64 %25 to i32
  %27 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %28 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %27, i64 0, i32 13
  %29 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %28, align 8
  %30 = tail call i32 @_ZN5blink15GridLayoutUtils26MarginLogicalWidthForChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %29, %"class.blink::LayoutBox"* dereferenceable(216) %1) #18
  %31 = icmp slt i32 %30, 0
  %32 = select i1 %31, i32 -2147483648, i32 2147483647
  %33 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %26, i32 %30) #18
  %34 = extractvalue { i32, i1 } %33, 1
  %35 = extractvalue { i32, i1 } %33, 0
  %36 = select i1 %34, i32 %32, i32 %35, !prof !3
  %37 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %38 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %37, i64 0, i32 11
  %39 = load i32, i32* %38, align 8
  %40 = icmp ne i32 %39, 0
  %41 = zext i1 %40 to i32
  %42 = tail call i32 @_ZNK5blink24GridTrackSizingAlgorithm22BaselineOffsetForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"* %37, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %41)
  %43 = icmp slt i32 %42, 0
  %44 = select i1 %43, i32 -2147483648, i32 2147483647
  %45 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %36, i32 %42) #18
  %46 = extractvalue { i32, i1 } %45, 1
  %47 = extractvalue { i32, i1 } %45, 0
  %48 = select i1 %46, i32 %44, i32 %47, !prof !3
  br label %65

49:                                               ; preds = %2
  %50 = tail call i32 @_ZNK5blink24GridTrackSizingAlgorithm23GridAreaBreadthForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %8, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %7) #18
  %51 = tail call i32 @_ZN5blink15GridLayoutUtils42OverrideContainingBlockContentSizeForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %7) #18
  %52 = icmp eq i32 %51, %50
  br i1 %52, label %63, label %53

53:                                               ; preds = %49
  %54 = icmp eq i32 %7, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %53
  tail call void @_ZN5blink9LayoutBox45SetOverrideContainingBlockContentLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 %50) #18
  br label %57

56:                                               ; preds = %53
  tail call void @_ZN5blink9LayoutBox46SetOverrideContainingBlockContentLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 %50) #18
  br label %57

57:                                               ; preds = %55, %56
  %58 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %60 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %59 to i96*
  %61 = load i96, i96* %60, align 4
  %62 = or i96 %61, 2
  store i96 %62, i96* %60, align 4
  tail call void @_ZN5blink12LayoutObject44MarkSelfPaintingLayerForVisualOverflowRecalcEv(%"class.blink::LayoutObject"* %58) #18
  br label %63

63:                                               ; preds = %49, %57
  %64 = tail call i32 @_ZNK5blink32GridTrackSizingAlgorithmStrategy21LogicalHeightForChildERNS_9LayoutBoxE(%"class.blink::GridTrackSizingAlgorithmStrategy"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  br label %65

65:                                               ; preds = %63, %20
  %66 = phi i32 [ %48, %20 ], [ %64, %63 ]
  ret i32 %66
}

declare void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #8

declare i32 @_ZN5blink15GridLayoutUtils26MarginLogicalWidthForChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632), %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink32GridTrackSizingAlgorithmStrategy18MaxContentForChildERNS_9LayoutBoxE(%"class.blink::GridTrackSizingAlgorithmStrategy"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithmStrategy", %"class.blink::GridTrackSizingAlgorithmStrategy"* %0, i64 0, i32 1
  %4 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %4, i64 0, i32 13
  %6 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %5, align 8
  %7 = tail call i32 @_ZN5blink15GridLayoutUtils26FlowAwareDirectionForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %6, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0) #18
  %8 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %9 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %7
  br i1 %11, label %12, label %50

12:                                               ; preds = %2
  %13 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutBox"*)***
  %14 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %14, i64 183
  %16 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::LayoutBox"* %1) #18
  br i1 %17, label %18, label %20

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %19, i32 1) #18
  br label %20

20:                                               ; preds = %18, %12
  %21 = bitcast %"class.blink::LayoutBox"* %1 to i64 (%"class.blink::LayoutBox"*)***
  %22 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %21, align 8
  %23 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %22, i64 69
  %24 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %23, align 8
  %25 = tail call i64 %24(%"class.blink::LayoutBox"* %1) #18
  %26 = lshr i64 %25, 32
  %27 = trunc i64 %26 to i32
  %28 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %29 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %28, i64 0, i32 13
  %30 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %29, align 8
  %31 = tail call i32 @_ZN5blink15GridLayoutUtils26MarginLogicalWidthForChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %30, %"class.blink::LayoutBox"* dereferenceable(216) %1) #18
  %32 = icmp slt i32 %31, 0
  %33 = select i1 %32, i32 -2147483648, i32 2147483647
  %34 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 %31) #18
  %35 = extractvalue { i32, i1 } %34, 1
  %36 = extractvalue { i32, i1 } %34, 0
  %37 = select i1 %35, i32 %33, i32 %36, !prof !3
  %38 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %39 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %38, i64 0, i32 11
  %40 = load i32, i32* %39, align 8
  %41 = icmp ne i32 %40, 0
  %42 = zext i1 %41 to i32
  %43 = tail call i32 @_ZNK5blink24GridTrackSizingAlgorithm22BaselineOffsetForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"* %38, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %42)
  %44 = icmp slt i32 %43, 0
  %45 = select i1 %44, i32 -2147483648, i32 2147483647
  %46 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %37, i32 %43) #18
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 %45, i32 %48, !prof !3
  br label %66

50:                                               ; preds = %2
  %51 = tail call i32 @_ZNK5blink24GridTrackSizingAlgorithm23GridAreaBreadthForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %8, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %7) #18
  %52 = tail call i32 @_ZN5blink15GridLayoutUtils42OverrideContainingBlockContentSizeForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %7) #18
  %53 = icmp eq i32 %52, %51
  br i1 %53, label %64, label %54

54:                                               ; preds = %50
  %55 = icmp eq i32 %7, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %54
  tail call void @_ZN5blink9LayoutBox45SetOverrideContainingBlockContentLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 %51) #18
  br label %58

57:                                               ; preds = %54
  tail call void @_ZN5blink9LayoutBox46SetOverrideContainingBlockContentLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 %51) #18
  br label %58

58:                                               ; preds = %56, %57
  %59 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %61 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %60 to i96*
  %62 = load i96, i96* %61, align 4
  %63 = or i96 %62, 2
  store i96 %63, i96* %61, align 4
  tail call void @_ZN5blink12LayoutObject44MarkSelfPaintingLayerForVisualOverflowRecalcEv(%"class.blink::LayoutObject"* %59) #18
  br label %64

64:                                               ; preds = %50, %58
  %65 = tail call i32 @_ZNK5blink32GridTrackSizingAlgorithmStrategy21LogicalHeightForChildERNS_9LayoutBoxE(%"class.blink::GridTrackSizingAlgorithmStrategy"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  br label %66

66:                                               ; preds = %64, %20
  %67 = phi i32 [ %49, %20 ], [ %65, %64 ]
  ret i32 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink32GridTrackSizingAlgorithmStrategy15MinSizeForChildERNS_9LayoutBoxE(%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithmStrategy", %"class.blink::GridTrackSizingAlgorithmStrategy"* %0, i64 0, i32 1
  %4 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %4, i64 0, i32 13
  %6 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %5, align 8
  %7 = tail call i32 @_ZN5blink15GridLayoutUtils26FlowAwareDirectionForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %6, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0) #18
  %8 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %9 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %7
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = and i160 %16, 15211807202738752817960438464512
  %18 = icmp eq i160 %17, 0
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 5, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %20, i64 0, i32 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %20, i64 0, i32 3
  %23 = select i1 %18, %"class.blink::Length"* %21, %"class.blink::Length"* %22
  %24 = select i1 %18, %"class.blink::Length"* %22, %"class.blink::Length"* %21
  %25 = select i1 %11, %"class.blink::Length"* %23, %"class.blink::Length"* %24
  %26 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %25, i64 0, i32 2
  %27 = load i8, i8* %26, align 1
  switch i8 %27, label %28 [
    i8 0, label %34
    i8 8, label %34
    i8 1, label %34
  ]

28:                                               ; preds = %2
  %29 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %0 to i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)***
  %30 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*** %29, align 8
  %31 = getelementptr inbounds i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %30, i64 2
  %32 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %31, align 8
  %33 = tail call i32 %32(%"class.blink::GridTrackSizingAlgorithmStrategy"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1) #18
  br label %167

34:                                               ; preds = %2, %2, %2
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %20, i64 0, i32 6
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %20, i64 0, i32 7
  %37 = select i1 %18, %"class.blink::Length"* %35, %"class.blink::Length"* %36
  %38 = select i1 %18, i160 77, i160 74
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %20, i64 0, i32 7
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %20, i64 0, i32 6
  %41 = select i1 %18, %"class.blink::Length"* %39, %"class.blink::Length"* %40
  %42 = select i1 %18, i160 74, i160 77
  %43 = select i1 %11, i160 %42, i160 %38
  %44 = select i1 %11, %"class.blink::Length"* %41, %"class.blink::Length"* %37
  %45 = lshr i160 %16, %43
  %46 = icmp ne i32 %10, 0
  %47 = zext i1 %46 to i32
  %48 = tail call i32 @_ZNK5blink24GridTrackSizingAlgorithm22BaselineOffsetForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"* %8, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %47)
  %49 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %44, i64 0, i32 2
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 0
  %52 = and i160 %45, 7
  %53 = icmp eq i160 %52, 2
  %54 = and i1 %53, %51
  br i1 %54, label %55, label %153

55:                                               ; preds = %34
  %56 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %0 to i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)***
  %57 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*** %56, align 8
  %58 = getelementptr inbounds i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %57, i64 2
  %59 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %58, align 8
  %60 = tail call i32 %59(%"class.blink::GridTrackSizingAlgorithmStrategy"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1) #18
  %61 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %62 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %61, i64 0, i32 12
  %63 = load %"class.blink::Grid"*, %"class.blink::Grid"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %61, i64 0, i32 11
  %65 = load i32, i32* %64, align 8
  %66 = tail call { i64, i32 } @_ZNK5blink4Grid12GridItemSpanERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %63, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %65) #18
  %67 = extractvalue { i64, i32 } %66, 0
  %68 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %69 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %68, i64 0, i32 11
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %68, i64 0, i32 6
  %73 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %68, i64 0, i32 7
  %74 = select i1 %71, %"class.WTF::Vector"* %72, %"class.WTF::Vector"* %73
  %75 = shl i64 %67, 32
  %76 = ashr exact i64 %75, 32
  %77 = ashr i64 %67, 32
  %78 = icmp eq i64 %76, %77
  br i1 %78, label %118, label %79

79:                                               ; preds = %55, %93
  %80 = phi i32 [ %115, %93 ], [ 0, %55 ]
  %81 = phi i64 [ %116, %93 ], [ %76, %55 ]
  %82 = trunc i64 %81 to i32
  %83 = tail call dereferenceable(128) %"class.blink::GridTrack"* @_ZNK3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %74, i32 %82) #18
  %84 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %83, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %85 = load i8, i8* %84, align 8, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %79
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #19
  unreachable

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %83, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  %90 = load i16, i16* %89, align 8
  %91 = and i16 %90, 8
  %92 = icmp eq i16 %91, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %83, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 0
  %95 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %96 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %95, i64 0, i32 11
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 1
  %99 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %95, i64 0, i32 3
  %100 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %95, i64 0, i32 2
  %101 = select i1 %98, %"class.absl::optional"* %99, %"class.absl::optional"* %100
  %102 = bitcast %"class.absl::optional"* %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %101, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = trunc i32 %103 to i8
  %107 = icmp eq i8 %106, 0
  %108 = select i1 %107, i32 0, i32 %105
  %109 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %94, i32 %108) #18
  %110 = icmp slt i32 %109, 0
  %111 = select i1 %110, i32 -2147483648, i32 2147483647
  %112 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %80, i32 %109) #18
  %113 = extractvalue { i32, i1 } %112, 1
  %114 = extractvalue { i32, i1 } %112, 0
  %115 = select i1 %113, i32 %111, i32 %114, !prof !3
  %116 = add i64 %81, 1
  %117 = icmp eq i64 %116, %77
  br i1 %117, label %118, label %79

118:                                              ; preds = %93, %55
  %119 = phi i32 [ 0, %55 ], [ %115, %93 ]
  %120 = icmp sgt i32 %60, %119
  br i1 %120, label %121, label %167

121:                                              ; preds = %118
  %122 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %123 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %122, i64 0, i32 13
  %124 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %123, align 8
  br i1 %11, label %125, label %132

125:                                              ; preds = %121
  %126 = tail call i32 @_ZN5blink15GridLayoutUtils26MarginLogicalWidthForChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %124, %"class.blink::LayoutBox"* dereferenceable(216) %1) #18
  %127 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %128 = tail call i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %127)
  %129 = icmp slt i32 %128, 0
  %130 = select i1 %129, i32 -2147483648, i32 2147483647
  %131 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %126, i32 %128) #18
  br label %139

132:                                              ; preds = %121
  %133 = tail call i32 @_ZN5blink15GridLayoutUtils27MarginLogicalHeightForChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %124, %"class.blink::LayoutBox"* dereferenceable(216) %1) #18
  %134 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %135 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %134)
  %136 = icmp slt i32 %135, 0
  %137 = select i1 %136, i32 -2147483648, i32 2147483647
  %138 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %133, i32 %135) #18
  br label %139

139:                                              ; preds = %132, %125
  %140 = phi { i32, i1 } [ %138, %132 ], [ %131, %125 ]
  %141 = phi i32 [ %137, %132 ], [ %130, %125 ]
  %142 = extractvalue { i32, i1 } %140, 1
  %143 = extractvalue { i32, i1 } %140, 0
  %144 = select i1 %142, i32 %141, i32 %143
  %145 = icmp slt i32 %48, 0
  %146 = select i1 %145, i32 -2147483648, i32 2147483647
  %147 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %144, i32 %48) #18
  %148 = extractvalue { i32, i1 } %147, 1
  %149 = extractvalue { i32, i1 } %147, 0
  %150 = select i1 %148, i32 %146, i32 %149, !prof !3
  %151 = icmp slt i32 %119, %150
  %152 = select i1 %151, i32 %150, i32 %119
  br label %167

153:                                              ; preds = %34
  %154 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %155 = tail call i32 @_ZNK5blink24GridTrackSizingAlgorithm23GridAreaBreadthForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %154, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %7)
  %156 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %0 to i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*, %"class.blink::Length"*, i32)***
  %157 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*, %"class.blink::Length"*, i32)**, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*, %"class.blink::Length"*, i32)*** %156, align 8
  %158 = getelementptr inbounds i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*, %"class.blink::Length"*, i32)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*, %"class.blink::Length"*, i32)** %157, i64 9
  %159 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*, %"class.blink::Length"*, i32)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*, %"class.blink::Length"*, i32)** %158, align 8
  %160 = tail call i32 %159(%"class.blink::GridTrackSizingAlgorithmStrategy"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::Length"* dereferenceable(8) %44, i32 %155) #18
  %161 = icmp slt i32 %48, 0
  %162 = select i1 %161, i32 -2147483648, i32 2147483647
  %163 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %160, i32 %48) #18
  %164 = extractvalue { i32, i1 } %163, 1
  %165 = extractvalue { i32, i1 } %163, 0
  %166 = select i1 %164, i32 %162, i32 %165, !prof !3
  br label %167

167:                                              ; preds = %88, %139, %118, %153, %28
  %168 = phi i32 [ %33, %28 ], [ %166, %153 ], [ %152, %139 ], [ %60, %118 ], [ %60, %88 ]
  ret i32 %168
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink24GridTrackSizingAlgorithm6TracksENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* readnone, i32) local_unnamed_addr #10 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %6 = select i1 %3, %"class.WTF::Vector"* %4, %"class.WTF::Vector"* %5
  ret %"class.WTF::Vector"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !47
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8, !noalias !47
  %7 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  %8 = and i160 %6, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = and i160 %6, 41538374868278621028243970633760768
  %11 = icmp eq i160 %10, 0
  %12 = select i1 %11, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %13 = select i1 %11, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %14 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %15 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %16 = extractvalue { i64, i64 } %14, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = getelementptr inbounds i8, i8* %7, i64 %17
  %19 = bitcast i8* %18 to %"class.blink::LayoutBoxModelObject"*
  %20 = and i64 %16, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %16, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %28 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %27, align 8
  br label %31

29:                                               ; preds = %1
  %30 = inttoptr i64 %16 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %28, %22 ], [ %30, %29 ]
  %33 = tail call i32 %32(%"class.blink::LayoutBoxModelObject"* %19) #18
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !50
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8, !noalias !50
  %38 = and i160 %37, 15211807202738752817960438464512
  %39 = icmp eq i160 %38, 0
  %40 = and i160 %37, 41538374868278621028243970633760768
  %41 = icmp eq i160 %40, 0
  %42 = select i1 %41, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %43 = select i1 %41, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %44 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %45 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %46 = extractvalue { i64, i64 } %44, 0
  %47 = extractvalue { i64, i64 } %45, 1
  %48 = getelementptr inbounds i8, i8* %7, i64 %47
  %49 = bitcast i8* %48 to %"class.blink::LayoutBoxModelObject"*
  %50 = and i64 %46, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %31
  %53 = bitcast i8* %48 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = add i64 %46, -1
  %56 = getelementptr i8, i8* %54, i64 %55
  %57 = bitcast i8* %56 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %58 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %57, align 8
  br label %61

59:                                               ; preds = %31
  %60 = inttoptr i64 %46 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %61

61:                                               ; preds = %52, %59
  %62 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %58, %52 ], [ %60, %59 ]
  %63 = tail call i32 %62(%"class.blink::LayoutBoxModelObject"* %49) #18
  %64 = icmp slt i32 %63, 0
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 %63) #18
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !3
  %70 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !53
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 9
  %72 = bitcast [20 x i8]* %71 to i160*
  %73 = load i160, i160* %72, align 8, !noalias !53
  %74 = and i160 %73, 15211807202738752817960438464512
  %75 = icmp eq i160 %74, 0
  %76 = and i160 %73, 41538374868278621028243970633760768
  %77 = icmp eq i160 %76, 0
  %78 = select i1 %77, { i64, i64 } { i64 945, i64 0 }, { i64, i64 } { i64 953, i64 0 }
  %79 = select i1 %77, { i64, i64 } { i64 961, i64 0 }, { i64, i64 } { i64 969, i64 0 }
  %80 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %81 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %82 = extractvalue { i64, i64 } %80, 0
  %83 = extractvalue { i64, i64 } %81, 1
  %84 = getelementptr inbounds i8, i8* %7, i64 %83
  %85 = bitcast i8* %84 to %"class.blink::LayoutBoxModelObject"*
  %86 = and i64 %82, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %95, label %88

88:                                               ; preds = %61
  %89 = bitcast i8* %84 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = add i64 %82, -1
  %92 = getelementptr i8, i8* %90, i64 %91
  %93 = bitcast i8* %92 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %94 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %93, align 8
  br label %97

95:                                               ; preds = %61
  %96 = inttoptr i64 %82 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %97

97:                                               ; preds = %88, %95
  %98 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %94, %88 ], [ %96, %95 ]
  %99 = tail call i32 %98(%"class.blink::LayoutBoxModelObject"* %85) #18
  %100 = icmp slt i32 %99, 0
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %99) #18
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %101, i32 %104, !prof !3
  %106 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !56
  %107 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %106, i64 0, i32 0, i32 9
  %108 = bitcast [20 x i8]* %107 to i160*
  %109 = load i160, i160* %108, align 8, !noalias !56
  %110 = and i160 %109, 15211807202738752817960438464512
  %111 = icmp eq i160 %110, 0
  %112 = and i160 %109, 41538374868278621028243970633760768
  %113 = icmp eq i160 %112, 0
  %114 = select i1 %113, { i64, i64 } { i64 953, i64 0 }, { i64, i64 } { i64 945, i64 0 }
  %115 = select i1 %113, { i64, i64 } { i64 969, i64 0 }, { i64, i64 } { i64 961, i64 0 }
  %116 = select i1 %111, { i64, i64 } %115, { i64, i64 } %114
  %117 = select i1 %111, { i64, i64 } %115, { i64, i64 } %114
  %118 = extractvalue { i64, i64 } %116, 0
  %119 = extractvalue { i64, i64 } %117, 1
  %120 = getelementptr inbounds i8, i8* %7, i64 %119
  %121 = bitcast i8* %120 to %"class.blink::LayoutBoxModelObject"*
  %122 = and i64 %118, 1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %131, label %124

124:                                              ; preds = %97
  %125 = bitcast i8* %120 to i8**
  %126 = load i8*, i8** %125, align 8
  %127 = add i64 %118, -1
  %128 = getelementptr i8, i8* %126, i64 %127
  %129 = bitcast i8* %128 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %130 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %129, align 8
  br label %133

131:                                              ; preds = %97
  %132 = inttoptr i64 %118 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %133

133:                                              ; preds = %124, %131
  %134 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %130, %124 ], [ %132, %131 ]
  %135 = tail call i32 %134(%"class.blink::LayoutBoxModelObject"* %121) #18
  %136 = icmp slt i32 %135, 0
  %137 = select i1 %136, i32 -2147483648, i32 2147483647
  %138 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %135) #18
  %139 = extractvalue { i32, i1 } %138, 1
  %140 = extractvalue { i32, i1 } %138, 0
  %141 = select i1 %139, i32 %137, i32 %140, !prof !3
  ret i32 %141
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 224
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 24, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = and i16 %7, 240
  %15 = icmp ne i16 %14, 0
  %16 = and i1 %15, %13
  br i1 %16, label %49, label %17

17:                                               ; preds = %10, %1
  %18 = and i16 %7, 3584
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 25, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp ne i32 %22, 0
  %24 = and i16 %7, 3840
  %25 = icmp ne i16 %24, 0
  %26 = and i1 %25, %23
  br i1 %26, label %49, label %27

27:                                               ; preds = %20, %17
  %28 = icmp ult i16 %7, 8192
  br i1 %28, label %33, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 26, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %49

33:                                               ; preds = %29, %27
  %34 = and i16 %7, 14
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 23, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp ne i32 %38, 0
  %40 = and i16 %7, 15
  %41 = icmp ne i16 %40, 0
  %42 = and i1 %41, %39
  br i1 %42, label %49, label %43

43:                                               ; preds = %36, %33
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8
  %47 = and i160 %46, 89202980794122492566142873090593446023921664
  %48 = icmp eq i160 %47, 0
  br i1 %48, label %196, label %49

49:                                               ; preds = %43, %36, %20, %10, %29
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %51 = bitcast [20 x i8]* %50 to i160*
  %52 = load i160, i160* %51, align 8, !noalias !59
  %53 = lshr i160 %52, 102
  %54 = trunc i160 %53 to i8
  %55 = and i8 %54, 3
  %56 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  switch i8 %55, label %57 [
    i8 0, label %66
    i8 1, label %58
  ]

57:                                               ; preds = %49
  br label %58

58:                                               ; preds = %57, %49
  %59 = phi { i64, i64 } [ { i64 993, i64 0 }, %57 ], [ { i64 1001, i64 0 }, %49 ]
  %60 = extractvalue { i64, i64 } %59, 0
  %61 = extractvalue { i64, i64 } %59, 1
  %62 = getelementptr inbounds i8, i8* %56, i64 %61
  %63 = bitcast i8* %62 to %"class.blink::LayoutBoxModelObject"*
  %64 = and i64 %60, 1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %76, label %66

66:                                               ; preds = %58, %49
  %67 = phi %"class.blink::LayoutBoxModelObject"* [ %63, %58 ], [ %0, %49 ]
  %68 = phi i8* [ %62, %58 ], [ %56, %49 ]
  %69 = phi i64 [ %60, %58 ], [ 977, %49 ]
  %70 = bitcast i8* %68 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = add i64 %69, -1
  %73 = getelementptr i8, i8* %71, i64 %72
  %74 = bitcast i8* %73 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %75 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %74, align 8
  br label %78

76:                                               ; preds = %58
  %77 = inttoptr i64 %60 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %78

78:                                               ; preds = %76, %66
  %79 = phi %"class.blink::LayoutBoxModelObject"* [ %67, %66 ], [ %63, %76 ]
  %80 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %75, %66 ], [ %77, %76 ]
  %81 = tail call i32 %80(%"class.blink::LayoutBoxModelObject"* %79) #18
  %82 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !62
  %83 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 9
  %84 = bitcast [20 x i8]* %83 to i160*
  %85 = load i160, i160* %84, align 8, !noalias !62
  %86 = lshr i160 %85, 102
  %87 = trunc i160 %86 to i8
  %88 = and i8 %87, 3
  switch i8 %88, label %89 [
    i8 0, label %98
    i8 1, label %90
  ]

89:                                               ; preds = %78
  br label %90

90:                                               ; preds = %89, %78
  %91 = phi { i64, i64 } [ { i64 961, i64 0 }, %89 ], [ { i64 969, i64 0 }, %78 ]
  %92 = extractvalue { i64, i64 } %91, 0
  %93 = extractvalue { i64, i64 } %91, 1
  %94 = getelementptr inbounds i8, i8* %56, i64 %93
  %95 = bitcast i8* %94 to %"class.blink::LayoutBoxModelObject"*
  %96 = and i64 %92, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %90, %78
  %99 = phi %"class.blink::LayoutBoxModelObject"* [ %95, %90 ], [ %0, %78 ]
  %100 = phi i8* [ %94, %90 ], [ %56, %78 ]
  %101 = phi i64 [ %92, %90 ], [ 945, %78 ]
  %102 = bitcast i8* %100 to i8**
  %103 = load i8*, i8** %102, align 8
  %104 = add i64 %101, -1
  %105 = getelementptr i8, i8* %103, i64 %104
  %106 = bitcast i8* %105 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %107 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %106, align 8
  br label %110

108:                                              ; preds = %90
  %109 = inttoptr i64 %92 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %110

110:                                              ; preds = %98, %108
  %111 = phi %"class.blink::LayoutBoxModelObject"* [ %99, %98 ], [ %95, %108 ]
  %112 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %107, %98 ], [ %109, %108 ]
  %113 = tail call i32 %112(%"class.blink::LayoutBoxModelObject"* %111) #18
  %114 = icmp slt i32 %113, 0
  %115 = select i1 %114, i32 -2147483648, i32 2147483647
  %116 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %113) #18
  %117 = extractvalue { i32, i1 } %116, 1
  %118 = extractvalue { i32, i1 } %116, 0
  %119 = select i1 %117, i32 %115, i32 %118, !prof !3
  %120 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !65
  %121 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %120, i64 0, i32 0, i32 9
  %122 = bitcast [20 x i8]* %121 to i160*
  %123 = load i160, i160* %122, align 8, !noalias !65
  %124 = lshr i160 %123, 102
  %125 = trunc i160 %124 to i8
  %126 = and i8 %125, 3
  switch i8 %126, label %127 [
    i8 0, label %136
    i8 1, label %128
  ]

127:                                              ; preds = %110
  br label %128

128:                                              ; preds = %127, %110
  %129 = phi { i64, i64 } [ { i64 1001, i64 0 }, %127 ], [ { i64 993, i64 0 }, %110 ]
  %130 = extractvalue { i64, i64 } %129, 0
  %131 = extractvalue { i64, i64 } %129, 1
  %132 = getelementptr inbounds i8, i8* %56, i64 %131
  %133 = bitcast i8* %132 to %"class.blink::LayoutBoxModelObject"*
  %134 = and i64 %130, 1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %146, label %136

136:                                              ; preds = %128, %110
  %137 = phi %"class.blink::LayoutBoxModelObject"* [ %133, %128 ], [ %0, %110 ]
  %138 = phi i8* [ %132, %128 ], [ %56, %110 ]
  %139 = phi i64 [ %130, %128 ], [ 985, %110 ]
  %140 = bitcast i8* %138 to i8**
  %141 = load i8*, i8** %140, align 8
  %142 = add i64 %139, -1
  %143 = getelementptr i8, i8* %141, i64 %142
  %144 = bitcast i8* %143 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %145 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %144, align 8
  br label %148

146:                                              ; preds = %128
  %147 = inttoptr i64 %130 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %148

148:                                              ; preds = %146, %136
  %149 = phi %"class.blink::LayoutBoxModelObject"* [ %137, %136 ], [ %133, %146 ]
  %150 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %145, %136 ], [ %147, %146 ]
  %151 = tail call i32 %150(%"class.blink::LayoutBoxModelObject"* %149) #18
  %152 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !68
  %153 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %152, i64 0, i32 0, i32 9
  %154 = bitcast [20 x i8]* %153 to i160*
  %155 = load i160, i160* %154, align 8, !noalias !68
  %156 = lshr i160 %155, 102
  %157 = trunc i160 %156 to i8
  %158 = and i8 %157, 3
  switch i8 %158, label %159 [
    i8 0, label %168
    i8 1, label %160
  ]

159:                                              ; preds = %148
  br label %160

160:                                              ; preds = %159, %148
  %161 = phi { i64, i64 } [ { i64 969, i64 0 }, %159 ], [ { i64 961, i64 0 }, %148 ]
  %162 = extractvalue { i64, i64 } %161, 0
  %163 = extractvalue { i64, i64 } %161, 1
  %164 = getelementptr inbounds i8, i8* %56, i64 %163
  %165 = bitcast i8* %164 to %"class.blink::LayoutBoxModelObject"*
  %166 = and i64 %162, 1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %178, label %168

168:                                              ; preds = %160, %148
  %169 = phi %"class.blink::LayoutBoxModelObject"* [ %165, %160 ], [ %0, %148 ]
  %170 = phi i8* [ %164, %160 ], [ %56, %148 ]
  %171 = phi i64 [ %162, %160 ], [ 953, %148 ]
  %172 = bitcast i8* %170 to i8**
  %173 = load i8*, i8** %172, align 8
  %174 = add i64 %171, -1
  %175 = getelementptr i8, i8* %173, i64 %174
  %176 = bitcast i8* %175 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %177 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %176, align 8
  br label %180

178:                                              ; preds = %160
  %179 = inttoptr i64 %162 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %180

180:                                              ; preds = %168, %178
  %181 = phi %"class.blink::LayoutBoxModelObject"* [ %169, %168 ], [ %165, %178 ]
  %182 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %177, %168 ], [ %179, %178 ]
  %183 = tail call i32 %182(%"class.blink::LayoutBoxModelObject"* %181) #18
  %184 = icmp slt i32 %183, 0
  %185 = select i1 %184, i32 -2147483648, i32 2147483647
  %186 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %151, i32 %183) #18
  %187 = extractvalue { i32, i1 } %186, 1
  %188 = extractvalue { i32, i1 } %186, 0
  %189 = select i1 %187, i32 %185, i32 %188, !prof !3
  %190 = icmp slt i32 %189, 0
  %191 = select i1 %190, i32 -2147483648, i32 2147483647
  %192 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %119, i32 %189) #18
  %193 = extractvalue { i32, i1 } %192, 1
  %194 = extractvalue { i32, i1 } %192, 0
  %195 = select i1 %193, i32 %191, i32 %194, !prof !3
  br label %196

196:                                              ; preds = %43, %180
  %197 = phi i32 [ %195, %180 ], [ 0, %43 ]
  ret i32 %197
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink24GridTrackSizingAlgorithm33CanParticipateInBaselineAlignmentERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #3 align 2 {
  %4 = icmp eq i32 %2, 1
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 13
  %6 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %5, align 8
  %7 = tail call zeroext i1 @_ZN5blink15GridLayoutUtils17IsOrthogonalChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %6, %"class.blink::LayoutBox"* dereferenceable(216) %1) #18
  %8 = xor i1 %4, %7
  br i1 %8, label %9, label %16

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*)***
  %11 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %11, i64 180
  %13 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutBox"* %1) #18
  %15 = icmp eq i32 %14, -64
  br i1 %15, label %16, label %40

16:                                               ; preds = %9, %3
  %17 = tail call zeroext i1 @_ZNK5blink24GridTrackSizingAlgorithm24IsIntrinsicSizedGridAreaERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2)
  br i1 %17, label %18, label %40

18:                                               ; preds = %16
  br i1 %8, label %19, label %22

19:                                               ; preds = %18
  %20 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasRelativeLogicalHeightEv(%"class.blink::LayoutBox"* %1) #18
  %21 = xor i1 %20, true
  br label %40

22:                                               ; preds = %18
  %23 = tail call zeroext i1 @_ZNK5blink9LayoutBox23HasRelativeLogicalWidthEv(%"class.blink::LayoutBox"* %1) #18
  br i1 %23, label %40, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %26 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %26, i64 0, i32 0, i32 9
  %28 = bitcast [20 x i8]* %27 to i160*
  %29 = load i160, i160* %28, align 8
  %30 = and i160 %29, 15211807202738752817960438464512
  %31 = icmp eq i160 %30, 0
  %32 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %26, i64 0, i32 0, i32 5, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %33, i64 0, i32 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %33, i64 0, i32 3
  %36 = select i1 %31, %"class.blink::Length"* %34, %"class.blink::Length"* %35
  %37 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %36, i64 0, i32 2
  %38 = load i8, i8* %37, align 1
  %39 = icmp ne i8 %38, 0
  br label %40

40:                                               ; preds = %9, %19, %24, %22, %16
  %41 = phi i1 [ true, %9 ], [ true, %16 ], [ %21, %19 ], [ false, %22 ], [ %39, %24 ]
  ret i1 %41
}

declare zeroext i1 @_ZN5blink15GridLayoutUtils17IsOrthogonalChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632), %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink24GridTrackSizingAlgorithm30ParticipateInBaselineAlignmentERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.blink::LayoutBox"*, align 8
  %5 = alloca %"class.blink::LayoutBox"*, align 8
  %6 = icmp eq i32 %2, 1
  %7 = bitcast %"class.blink::LayoutBox"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #18
  %8 = bitcast %"class.blink::LayoutBox"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #18
  br i1 %6, label %9, label %12

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 20
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %4, align 8
  %11 = call zeroext i1 @_ZNK3WTF7HashMapIPKN5blink9LayoutBoxEbNS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS7_IbEENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.948"* %10, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %4)
  br label %15

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 21
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %5, align 8
  %14 = call zeroext i1 @_ZNK3WTF7HashMapIPKN5blink9LayoutBoxEbNS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS7_IbEENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.948"* %13, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %5)
  br label %15

15:                                               ; preds = %12, %9
  %16 = phi i1 [ %11, %9 ], [ %14, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #18
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF7HashMapIPKN5blink9LayoutBoxEbNS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS7_IbEENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.948"*, %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.948", %"class.WTF::HashMap.948"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.952"*, %"struct.WTF::KeyValuePair.952"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.952"* %4, null
  br i1 %5, label %74, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashMap.948", %"class.WTF::HashMap.948"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %34, i64 0, i32 0
  %36 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::LayoutBox"*
  %38 = icmp eq %"class.blink::LayoutBox"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %6
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::LayoutBox"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::LayoutBox"* %54, null
  br i1 %57, label %74, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %63, i64 0, i32 0
  %65 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %64, align 8
  %66 = icmp eq %"class.blink::LayoutBox"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %6
  %68 = phi %"struct.WTF::KeyValuePair.952"* [ %34, %6 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.952"* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %68, i64 0, i32 1
  %72 = load i8, i8* %71, align 1, !range !2
  %73 = icmp ne i8 %72, 0
  br label %74

74:                                               ; preds = %53, %2, %67, %70
  %75 = phi i1 [ %73, %70 ], [ false, %67 ], [ false, %2 ], [ false, %53 ]
  ret i1 %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24GridTrackSizingAlgorithm30UpdateBaselineAlignmentContextERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 13
  %5 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %4, align 8
  %6 = tail call i32 @_ZNK5blink10LayoutGrid21SelfAlignmentForChildENS_8GridAxisERKNS_9LayoutBoxEPKNS_13ComputedStyleE(%"class.blink::LayoutGrid"* %5, i32 %2, %"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::ComputedStyle"* null) #18
  %7 = and i32 %6, 15
  %8 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 12
  %9 = load %"class.blink::Grid"*, %"class.blink::Grid"** %8, align 8
  %10 = icmp ne i32 %2, 0
  %11 = zext i1 %10 to i32
  %12 = tail call { i64, i32 } @_ZNK5blink4Grid12GridItemSpanERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %9, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %11) #18
  %13 = extractvalue { i64, i32 } %12, 0
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 19
  tail call void @_ZN5blink21GridBaselineAlignment30UpdateBaselineAlignmentContextENS_12ItemPositionEjRKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* %15, i32 %7, i32 %14, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2) #18
  ret void
}

declare i32 @_ZNK5blink10LayoutGrid21SelfAlignmentForChildENS_8GridAxisERKNS_9LayoutBoxEPKNS_13ComputedStyleE(%"class.blink::LayoutGrid"*, i32, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::ComputedStyle"*) local_unnamed_addr #8

declare void @_ZN5blink21GridBaselineAlignment30UpdateBaselineAlignmentContextENS_12ItemPositionEjRKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridBaselineAlignment"*, i32, i32, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #8

declare i32 @_ZNK5blink21GridBaselineAlignment22BaselineOffsetForChildENS_12ItemPositionEjRKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridBaselineAlignment"*, i32, i32, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24GridTrackSizingAlgorithm23ClearBaselineItemsCacheEv(%"class.blink::GridTrackSizingAlgorithm"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 20
  %3 = getelementptr inbounds %"class.WTF::HashMap.948", %"class.WTF::HashMap.948"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.952"*, %"struct.WTF::KeyValuePair.952"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.952"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 20, i32 0, i32 1
  %8 = bitcast %"struct.WTF::KeyValuePair.952"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #18
  %9 = bitcast %"class.WTF::HashMap.948"* %2 to i64*
  store atomic i64 0, i64* %9 monotonic, align 8
  store i32 0, i32* %7, align 8
  %10 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 20, i32 0, i32 2
  store i32 0, i32* %10, align 4
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 21
  %13 = getelementptr inbounds %"class.WTF::HashMap.948", %"class.WTF::HashMap.948"* %12, i64 0, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair.952"*, %"struct.WTF::KeyValuePair.952"** %13, align 8
  %15 = icmp eq %"struct.WTF::KeyValuePair.952"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 21, i32 0, i32 1
  %18 = bitcast %"struct.WTF::KeyValuePair.952"* %14 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %18) #18
  %19 = bitcast %"class.WTF::HashMap.948"* %12 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  store i32 0, i32* %17, align 8
  %20 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 21, i32 0, i32 2
  store i32 0, i32* %20, align 4
  br label %21

21:                                               ; preds = %11, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24GridTrackSizingAlgorithm24CacheBaselineAlignedItemERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.blink::LayoutBox"*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.blink::LayoutBox"*, align 8
  %7 = alloca i8, align 1
  %8 = icmp eq i32 %2, 1
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::LayoutBox"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #18
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #18
  store i8 1, i8* %5, align 1
  %11 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 20, i32 0
  %12 = call { %"struct.WTF::KeyValuePair.952"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES4_bEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.949"* %11, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %4, i8* nonnull dereferenceable(1) %5) #18
  br label %17

13:                                               ; preds = %3
  %14 = bitcast %"class.blink::LayoutBox"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #18
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #18
  store i8 1, i8* %7, align 1
  %15 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 21, i32 0
  %16 = call { %"struct.WTF::KeyValuePair.952"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES4_bEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.949"* %15, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %6, i8* nonnull dereferenceable(1) %7) #18
  br label %17

17:                                               ; preds = %13, %9
  %18 = phi i8* [ %7, %13 ], [ %5, %9 ]
  %19 = phi i8* [ %14, %13 ], [ %10, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24GridTrackSizingAlgorithm22CopyBaselineItemsCacheERKS0_NS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"* dereferenceable(272), i32) local_unnamed_addr #3 align 2 {
  %4 = icmp eq i32 %2, 1
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 20, i32 0
  %7 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %1, i64 0, i32 20, i32 0
  %8 = tail call dereferenceable(24) %"class.WTF::HashTable.949"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEEaSERKSG_(%"class.WTF::HashTable.949"* %6, %"class.WTF::HashTable.949"* dereferenceable(24) %7) #18
  br label %13

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 21, i32 0
  %11 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %1, i64 0, i32 21, i32 0
  %12 = tail call dereferenceable(24) %"class.WTF::HashTable.949"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEEaSERKSG_(%"class.WTF::HashTable.949"* %10, %"class.WTF::HashTable.949"* dereferenceable(24) %11) #18
  br label %13

13:                                               ; preds = %9, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink32GridTrackSizingAlgorithmStrategy21ComputeTrackBasedSizeEv(%"class.blink::GridTrackSizingAlgorithmStrategy"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithmStrategy", %"class.blink::GridTrackSizingAlgorithmStrategy"* %0, i64 0, i32 1
  %3 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %3, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %3, i64 0, i32 6
  %8 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %3, i64 0, i32 7
  %9 = select i1 %6, %"class.WTF::Vector"* %7, %"class.WTF::Vector"* %8
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = icmp eq i32 %13, 0
  br i1 %15, label %66, label %16

16:                                               ; preds = %1
  %17 = shl nuw nsw i64 %14, 7
  %18 = add nsw i64 %17, -128
  %19 = lshr exact i64 %18, 7
  %20 = add nuw nsw i64 %19, 1
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %18, 0
  br i1 %22, label %46, label %23

23:                                               ; preds = %16
  %24 = sub nuw nsw i64 %20, %21
  br label %25

25:                                               ; preds = %88, %23
  %26 = phi %"class.blink::GridTrack"* [ %11, %23 ], [ %96, %88 ]
  %27 = phi i32 [ 0, %23 ], [ %95, %88 ]
  %28 = phi i64 [ %24, %23 ], [ %97, %88 ]
  %29 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %26, i64 0, i32 1, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, -64
  br i1 %31, label %32, label %35

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %26, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  br label %35

35:                                               ; preds = %32, %25
  %36 = phi i32 [ %34, %32 ], [ %30, %25 ]
  %37 = icmp slt i32 %36, 0
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 %36) #18
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 %38, i32 %41, !prof !3
  %43 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %26, i64 1, i32 1, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, -64
  br i1 %45, label %85, label %88

46:                                               ; preds = %88, %16
  %47 = phi i32 [ undef, %16 ], [ %95, %88 ]
  %48 = phi %"class.blink::GridTrack"* [ %11, %16 ], [ %96, %88 ]
  %49 = phi i32 [ 0, %16 ], [ %95, %88 ]
  %50 = icmp eq i64 %21, 0
  br i1 %50, label %66, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %48, i64 0, i32 1, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, -64
  br i1 %54, label %55, label %58

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %48, i64 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 8
  br label %58

58:                                               ; preds = %55, %51
  %59 = phi i32 [ %57, %55 ], [ %53, %51 ]
  %60 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %49, i32 %59) #18
  %61 = extractvalue { i32, i1 } %60, 1
  %62 = icmp slt i32 %59, 0
  %63 = select i1 %62, i32 -2147483648, i32 2147483647
  %64 = extractvalue { i32, i1 } %60, 0
  %65 = select i1 %61, i32 %63, i32 %64, !prof !3
  br label %66

66:                                               ; preds = %58, %46, %1
  %67 = phi i32 [ 0, %1 ], [ %47, %46 ], [ %65, %58 ]
  %68 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %3, i64 0, i32 13
  %69 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %3, i64 0, i32 12
  %71 = load %"class.blink::Grid"*, %"class.blink::Grid"** %70, align 8
  %72 = icmp eq i32 %5, 1
  %73 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %3, i64 0, i32 3
  %74 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %3, i64 0, i32 2
  %75 = select i1 %72, %"class.absl::optional"* %73, %"class.absl::optional"* %74
  %76 = bitcast %"class.absl::optional"* %75 to i64*
  %77 = load i64, i64* %76, align 4
  %78 = tail call i32 @_ZNK5blink10LayoutGrid11GuttersSizeERKNS_4GridENS_24GridTrackSizingDirectionEmmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %69, %"class.blink::Grid"* dereferenceable(168) %71, i32 %5, i64 0, i64 %14, i64 %77) #18
  %79 = icmp slt i32 %78, 0
  %80 = select i1 %79, i32 -2147483648, i32 2147483647
  %81 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %67, i32 %78) #18
  %82 = extractvalue { i32, i1 } %81, 1
  %83 = extractvalue { i32, i1 } %81, 0
  %84 = select i1 %82, i32 %80, i32 %83, !prof !3
  ret i32 %84

85:                                               ; preds = %35
  %86 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %26, i64 1, i32 0, i32 0
  %87 = load i32, i32* %86, align 8
  br label %88

88:                                               ; preds = %85, %35
  %89 = phi i32 [ %87, %85 ], [ %44, %35 ]
  %90 = icmp slt i32 %89, 0
  %91 = select i1 %90, i32 -2147483648, i32 2147483647
  %92 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %42, i32 %89) #18
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 %91, i32 %94, !prof !3
  %96 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %26, i64 2
  %97 = add i64 %28, -2
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %46, label %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink24GridTrackSizingAlgorithm21ComputeTrackBasedSizeEv(%"class.blink::GridTrackSizingAlgorithm"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %6 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %7 = select i1 %4, %"class.WTF::Vector"* %5, %"class.WTF::Vector"* %6
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = icmp eq i32 %11, 0
  br i1 %13, label %43, label %14

14:                                               ; preds = %1
  %15 = shl nuw nsw i64 %12, 7
  %16 = add nsw i64 %15, -128
  %17 = lshr exact i64 %16, 7
  %18 = add nuw nsw i64 %17, 1
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %16, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %14
  %22 = sub nuw nsw i64 %18, %19
  br label %62

23:                                               ; preds = %86, %14
  %24 = phi i32 [ undef, %14 ], [ %93, %86 ]
  %25 = phi %"class.blink::GridTrack"* [ %9, %14 ], [ %94, %86 ]
  %26 = phi i32 [ 0, %14 ], [ %93, %86 ]
  %27 = icmp eq i64 %19, 0
  br i1 %27, label %43, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %25, i64 0, i32 1, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, -64
  br i1 %31, label %32, label %35

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %25, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  br label %35

35:                                               ; preds = %32, %28
  %36 = phi i32 [ %34, %32 ], [ %30, %28 ]
  %37 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %26, i32 %36) #18
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = icmp slt i32 %36, 0
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = extractvalue { i32, i1 } %37, 0
  %42 = select i1 %38, i32 %40, i32 %41, !prof !3
  br label %43

43:                                               ; preds = %35, %23, %1
  %44 = phi i32 [ 0, %1 ], [ %24, %23 ], [ %42, %35 ]
  %45 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 13
  %46 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 12
  %48 = load %"class.blink::Grid"*, %"class.blink::Grid"** %47, align 8
  %49 = icmp eq i32 %3, 1
  %50 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %51 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %52 = select i1 %49, %"class.absl::optional"* %50, %"class.absl::optional"* %51
  %53 = bitcast %"class.absl::optional"* %52 to i64*
  %54 = load i64, i64* %53, align 4
  %55 = tail call i32 @_ZNK5blink10LayoutGrid11GuttersSizeERKNS_4GridENS_24GridTrackSizingDirectionEmmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %46, %"class.blink::Grid"* dereferenceable(168) %48, i32 %3, i64 0, i64 %12, i64 %54) #18
  %56 = icmp slt i32 %55, 0
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %44, i32 %55) #18
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !3
  ret i32 %61

62:                                               ; preds = %86, %21
  %63 = phi %"class.blink::GridTrack"* [ %9, %21 ], [ %94, %86 ]
  %64 = phi i32 [ 0, %21 ], [ %93, %86 ]
  %65 = phi i64 [ %22, %21 ], [ %95, %86 ]
  %66 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %63, i64 0, i32 1, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, -64
  br i1 %68, label %69, label %72

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %63, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 8
  br label %72

72:                                               ; preds = %62, %69
  %73 = phi i32 [ %71, %69 ], [ %67, %62 ]
  %74 = icmp slt i32 %73, 0
  %75 = select i1 %74, i32 -2147483648, i32 2147483647
  %76 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %64, i32 %73) #18
  %77 = extractvalue { i32, i1 } %76, 1
  %78 = extractvalue { i32, i1 } %76, 0
  %79 = select i1 %77, i32 %75, i32 %78, !prof !3
  %80 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %63, i64 1, i32 1, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, -64
  br i1 %82, label %83, label %86

83:                                               ; preds = %72
  %84 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %63, i64 1, i32 0, i32 0
  %85 = load i32, i32* %84, align 8
  br label %86

86:                                               ; preds = %83, %72
  %87 = phi i32 [ %85, %83 ], [ %81, %72 ]
  %88 = icmp slt i32 %87, 0
  %89 = select i1 %88, i32 -2147483648, i32 2147483647
  %90 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %79, i32 %87) #18
  %91 = extractvalue { i32, i1 } %90, 1
  %92 = extractvalue { i32, i1 } %90, 0
  %93 = select i1 %91, i32 %89, i32 %92, !prof !3
  %94 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %63, i64 2
  %95 = add i64 %65, -2
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %23, label %62
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink32GridTrackSizingAlgorithmStrategy14FindFrUnitSizeERKNS_8GridSpanENS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithmStrategy"* nocapture readonly, %"struct.blink::GridSpan"* nocapture readonly dereferenceable(12), i32) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithmStrategy", %"class.blink::GridTrackSizingAlgorithmStrategy"* %0, i64 0, i32 1
  %5 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %4, align 8
  %6 = tail call double @_ZNK5blink24GridTrackSizingAlgorithm14FindFrUnitSizeERKNS_8GridSpanENS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithm"* %5, %"struct.blink::GridSpan"* dereferenceable(12) %1, i32 %2)
  ret double %6
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink24GridTrackSizingAlgorithm14FindFrUnitSizeERKNS_8GridSpanENS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithm"*, %"struct.blink::GridSpan"* nocapture readonly dereferenceable(12), i32) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.blink::LayoutUnit", align 4
  %5 = alloca %"class.WTF::Vector.1360", align 8
  %6 = alloca i64, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  store i32 %2, i32* %7, align 4
  %8 = icmp slt i32 %2, 1
  br i1 %8, label %94, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %14 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %15 = select i1 %12, %"class.WTF::Vector"* %13, %"class.WTF::Vector"* %14
  %16 = bitcast %"class.WTF::Vector.1360"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %16) #18
  %17 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %5, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 64, i1 false)
  %18 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %5, i64 0, i32 0, i32 1, i64 0
  %19 = bitcast %"class.WTF::Vector.1360"* %5 to i8**
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %5, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %5, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.blink::GridSpan", %"struct.blink::GridSpan"* %1, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"struct.blink::GridSpan", %"struct.blink::GridSpan"* %1, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = icmp eq i32 %23, %25
  br i1 %27, label %33, label %28

28:                                               ; preds = %9
  %29 = sext i32 %23 to i64
  %30 = bitcast i64* %6 to i8*
  %31 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %5, i64 0, i32 0, i32 0, i32 0
  br label %47

32:                                               ; preds = %89
  store i32 %90, i32* %7, align 4
  br label %33

33:                                               ; preds = %32, %9
  %34 = phi double [ %91, %32 ], [ 0.000000e+00, %9 ]
  %35 = call double @_ZNK5blink24GridTrackSizingAlgorithm25ComputeFlexFactorUnitSizeERKN3WTF6VectorINS_9GridTrackELj0ENS1_18PartitionAllocatorEEEdRNS_10LayoutUnitERKNS2_ImLj8ES4_EENSt3__110unique_ptrINS1_7HashSetImNS1_7IntHashImEENS1_29UnsignedWithZeroKeyHashTraitsImEES4_EENSD_14default_deleteISK_EEEE(%"class.blink::GridTrackSizingAlgorithm"* %0, %"class.WTF::Vector"* dereferenceable(16) %15, double %34, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %4, %"class.WTF::Vector.1360"* nonnull dereferenceable(80) %5, %"class.WTF::HashSet.1367"* null)
  %36 = load i32, i32* %21, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38, !prof !3

38:                                               ; preds = %33
  store i32 0, i32* %21, align 4
  br label %39

39:                                               ; preds = %38, %33
  %40 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %5, i64 0, i32 0, i32 0, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = bitcast i8* %18 to i64*
  %43 = icmp eq i64* %41, %42
  br i1 %43, label %46, label %44, !prof !71

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %5, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferImLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPm(%"class.WTF::VectorBuffer.1361"* nonnull %45, i64* %41) #18
  br label %46

46:                                               ; preds = %39, %44
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %16) #18
  br label %94

47:                                               ; preds = %28, %89
  %48 = phi i32 [ %2, %28 ], [ %90, %89 ]
  %49 = phi double [ 0.000000e+00, %28 ], [ %91, %89 ]
  %50 = phi i64 [ %29, %28 ], [ %92, %89 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #18
  store i64 %50, i64* %6, align 8
  %51 = trunc i64 %50 to i32
  %52 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZNK3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %15, i32 %51) #18
  %53 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %52, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %47
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #19
  unreachable

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %52, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 2
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %73, label %61

61:                                               ; preds = %57
  %62 = load i64, i64* %6, align 8
  %63 = trunc i64 %62 to i32
  %64 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZNK3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %15, i32 %63) #18
  %65 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %64, i64 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = icmp sgt i32 %66, -1
  %68 = select i1 %67, i32 -2147483648, i32 2147483647
  %69 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %48, i32 %66) #18
  %70 = extractvalue { i32, i1 } %69, 1
  %71 = extractvalue { i32, i1 } %69, 0
  %72 = select i1 %70, i32 %68, i32 %71, !prof !3
  br label %89

73:                                               ; preds = %57
  %74 = load i32, i32* %21, align 4
  %75 = load i32, i32* %20, align 8
  %76 = icmp eq i32 %74, %75
  br i1 %76, label %84, label %77, !prof !3

77:                                               ; preds = %73
  %78 = load i64*, i64** %31, align 8
  %79 = zext i32 %74 to i64
  %80 = getelementptr inbounds i64, i64* %78, i64 %79
  %81 = load i64, i64* %6, align 8
  store i64 %81, i64* %80, align 8
  %82 = load i32, i32* %21, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %21, align 4
  br label %85

84:                                               ; preds = %73
  call void @_ZN3WTF6VectorImLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRKmEEvOT_(%"class.WTF::Vector.1360"* nonnull %5, i64* nonnull dereferenceable(8) %6) #18
  br label %85

85:                                               ; preds = %77, %84
  %86 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %52, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 1
  %87 = load double, double* %86, align 8
  %88 = fadd double %49, %87
  br label %89

89:                                               ; preds = %85, %61
  %90 = phi i32 [ %48, %85 ], [ %72, %61 ]
  %91 = phi double [ %88, %85 ], [ %49, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #18
  %92 = add i64 %50, 1
  %93 = icmp eq i64 %92, %26
  br i1 %93, label %32, label %47

94:                                               ; preds = %3, %46
  %95 = phi double [ %35, %46 ], [ 0.000000e+00, %3 ]
  ret double %95
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink32GridTrackSizingAlgorithmStrategy23DistributeSpaceToTracksERN3WTF6VectorIPNS_9GridTrackELj0ENS1_18PartitionAllocatorEEERNS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithmStrategy"* nocapture readonly, %"class.WTF::Vector.1349"* dereferenceable(16), %"class.blink::LayoutUnit"* dereferenceable(4)) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithmStrategy", %"class.blink::GridTrackSizingAlgorithmStrategy"* %0, i64 0, i32 1
  %5 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %4, align 8
  tail call void @_ZNK5blink24GridTrackSizingAlgorithm23DistributeSpaceToTracksILNS_25TrackSizeComputationPhaseE5EEEvRN3WTF6VectorIPNS_9GridTrackELj0ENS3_18PartitionAllocatorEEEPS8_RNS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithm"* %5, %"class.WTF::Vector.1349"* dereferenceable(16) %1, %"class.WTF::Vector.1349"* null, %"class.blink::LayoutUnit"* dereferenceable(4) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink24GridTrackSizingAlgorithm23DistributeSpaceToTracksILNS_25TrackSizeComputationPhaseE5EEEvRN3WTF6VectorIPNS_9GridTrackELj0ENS3_18PartitionAllocatorEEEPS8_RNS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithm"*, %"class.WTF::Vector.1349"* dereferenceable(16), %"class.WTF::Vector.1349"*, %"class.blink::LayoutUnit"* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, align 8
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %1, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %36, label %16

16:                                               ; preds = %4
  %17 = shl nuw nsw i64 %13, 3
  %18 = add nsw i64 %17, -8
  %19 = lshr exact i64 %18, 3
  %20 = add nuw nsw i64 %19, 1
  %21 = and i64 %20, 7
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %16, %23
  %24 = phi %"class.blink::GridTrack"** [ %30, %23 ], [ %10, %16 ]
  %25 = phi i64 [ %31, %23 ], [ %21, %16 ]
  %26 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %24, align 8
  %27 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %26, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %26, i64 0, i32 3, i32 0
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %24, i64 1
  %31 = add i64 %25, -1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %23, !llvm.loop !72

33:                                               ; preds = %23, %16
  %34 = phi %"class.blink::GridTrack"** [ %10, %16 ], [ %30, %23 ]
  %35 = icmp ult i64 %18, 56
  br i1 %35, label %36, label %40

36:                                               ; preds = %33, %40, %4
  %37 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %83, label %226

40:                                               ; preds = %33, %40
  %41 = phi %"class.blink::GridTrack"** [ %81, %40 ], [ %34, %33 ]
  %42 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %42, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %42, i64 0, i32 3, i32 0
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 1
  %47 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %47, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %47, i64 0, i32 3, i32 0
  store i32 %49, i32* %50, align 4
  %51 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 2
  %52 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %52, i64 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %52, i64 0, i32 3, i32 0
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 3
  %57 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %57, i64 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %57, i64 0, i32 3, i32 0
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 4
  %62 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %62, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %62, i64 0, i32 3, i32 0
  store i32 %64, i32* %65, align 4
  %66 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 5
  %67 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %67, i64 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %67, i64 0, i32 3, i32 0
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 6
  %72 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %72, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %72, i64 0, i32 3, i32 0
  store i32 %74, i32* %75, align 4
  %76 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 7
  %77 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 3, i32 0
  store i32 %79, i32* %80, align 4
  %81 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 8
  %82 = icmp eq %"class.blink::GridTrack"** %81, %14
  br i1 %82, label %36, label %40

83:                                               ; preds = %36
  %84 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %9, align 8
  %85 = load i32, i32* %11, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %84, i64 %86
  %88 = bitcast i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88)
  store i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)* @_ZN5blinkL30SortByGridTrackGrowthPotentialEPKNS_9GridTrackES2_, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %5, align 8
  call void @_ZNSt3__16__sortIRPFbPKN5blink9GridTrackES4_EPPS2_EEvT0_SA_T_(%"class.blink::GridTrack"** %84, %"class.blink::GridTrack"** %87, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** nonnull dereferenceable(8) %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88)
  %89 = load i32, i32* %11, align 4
  %90 = zext i32 %89 to i64
  %91 = icmp eq i32 %89, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %83
  %93 = load i32, i32* %37, align 4
  br label %167

94:                                               ; preds = %83
  %95 = bitcast i32* %6 to i8*
  %96 = bitcast i32* %8 to i8*
  %97 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  br label %98

98:                                               ; preds = %146, %94
  %99 = phi i64 [ 0, %94 ], [ %165, %146 ]
  %100 = trunc i64 %99 to i32
  %101 = call dereferenceable(8) %"class.blink::GridTrack"** @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1349"* %1, i32 %100) #18
  %102 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %101, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95)
  store i32 -1431655766, i32* %6, align 4
  %103 = sub nsw i64 %90, %99
  %104 = shl i64 %103, 6
  %105 = icmp ult i64 %104, 2147483647
  %106 = select i1 %105, i64 %104, i64 2147483647
  %107 = load i32, i32* %37, align 4
  %108 = sext i32 %107 to i64
  %109 = shl nsw i64 %108, 6
  %110 = sdiv i64 %109, %106
  %111 = call i1 @llvm.is.constant.i64(i64 %110) #18
  br i1 %111, label %119, label %112

112:                                              ; preds = %98
  %113 = icmp slt i64 %110, 0
  %114 = select i1 %113, i32 -2147483648, i32 2147483647
  %115 = add i64 %110, 2147483648
  %116 = icmp ult i64 %115, 4294967296
  %117 = trunc i64 %110 to i32
  %118 = select i1 %116, i32 %117, i32 %114, !prof !71
  br label %125

119:                                              ; preds = %98
  %120 = icmp sgt i64 %110, 2147483647
  br i1 %120, label %125, label %121

121:                                              ; preds = %119
  %122 = icmp sgt i64 %110, -2147483648
  %123 = select i1 %122, i64 %110, i64 -2147483648
  %124 = trunc i64 %123 to i32
  br label %125

125:                                              ; preds = %112, %119, %121
  %126 = phi i32 [ %118, %112 ], [ %124, %121 ], [ 2147483647, %119 ]
  store i32 %126, i32* %6, align 4
  %127 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %102, i64 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %102, i64 0, i32 1, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, -64
  br i1 %131, label %132, label %133

132:                                              ; preds = %125
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96)
  br label %146

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %102, i64 0, i32 5
  %135 = load i8, i8* %134, align 8, !range !2
  %136 = icmp eq i8 %135, 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96)
  br i1 %136, label %137, label %146

137:                                              ; preds = %133
  %138 = icmp sgt i32 %128, -1
  %139 = select i1 %138, i32 -2147483648, i32 2147483647
  %140 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %130, i32 %128) #18
  %141 = extractvalue { i32, i1 } %140, 1
  %142 = extractvalue { i32, i1 } %140, 0
  %143 = select i1 %141, i32 %139, i32 %142, !prof !3
  store i32 %143, i32* %8, align 4
  %144 = icmp slt i32 %143, %126
  %145 = select i1 %144, %"class.blink::LayoutUnit"* %97, %"class.blink::LayoutUnit"* %7
  br label %146

146:                                              ; preds = %133, %132, %137
  %147 = phi %"class.blink::LayoutUnit"* [ %145, %137 ], [ %7, %133 ], [ %7, %132 ]
  %148 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %147, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96)
  %150 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %102, i64 0, i32 3, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp slt i32 %149, 0
  %153 = select i1 %152, i32 -2147483648, i32 2147483647
  %154 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %151, i32 %149) #18
  %155 = extractvalue { i32, i1 } %154, 1
  %156 = extractvalue { i32, i1 } %154, 0
  %157 = select i1 %155, i32 %153, i32 %156, !prof !3
  store i32 %157, i32* %150, align 4
  %158 = load i32, i32* %37, align 4
  %159 = icmp sgt i32 %149, -1
  %160 = select i1 %159, i32 -2147483648, i32 2147483647
  %161 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %158, i32 %149) #18
  %162 = extractvalue { i32, i1 } %161, 1
  %163 = extractvalue { i32, i1 } %161, 0
  %164 = select i1 %162, i32 %160, i32 %163, !prof !3
  store i32 %164, i32* %37, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95)
  %165 = add nuw nsw i64 %99, 1
  %166 = icmp eq i64 %165, %90
  br i1 %166, label %167, label %98

167:                                              ; preds = %146, %92
  %168 = phi i32 [ %93, %92 ], [ %164, %146 ]
  %169 = icmp sgt i32 %168, 0
  %170 = icmp ne %"class.WTF::Vector.1349"* %2, null
  %171 = and i1 %170, %169
  br i1 %171, label %172, label %226

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %2, i64 0, i32 0, i32 0, i32 2
  %174 = load i32, i32* %173, align 4
  %175 = zext i32 %174 to i64
  %176 = icmp eq i32 %174, 0
  br i1 %176, label %226, label %177

177:                                              ; preds = %172, %208
  %178 = phi i64 [ %224, %208 ], [ 0, %172 ]
  %179 = trunc i64 %178 to i32
  %180 = call dereferenceable(8) %"class.blink::GridTrack"** @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1349"* nonnull %2, i32 %179)
  %181 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %180, align 8
  %182 = sub nsw i64 %175, %178
  %183 = shl i64 %182, 6
  %184 = icmp ult i64 %183, 2147483647
  %185 = select i1 %184, i64 %183, i64 2147483647
  %186 = load i32, i32* %37, align 4
  %187 = sext i32 %186 to i64
  %188 = shl nsw i64 %187, 6
  %189 = sdiv i64 %188, %185
  %190 = call i1 @llvm.is.constant.i64(i64 %189) #18
  br i1 %190, label %198, label %191

191:                                              ; preds = %177
  %192 = icmp slt i64 %189, 0
  %193 = select i1 %192, i32 -2147483648, i32 2147483647
  %194 = add i64 %189, 2147483648
  %195 = icmp ult i64 %194, 4294967296
  %196 = trunc i64 %189 to i32
  %197 = select i1 %195, i32 %196, i32 %193, !prof !71
  br label %204

198:                                              ; preds = %177
  %199 = icmp sgt i64 %189, 2147483647
  br i1 %199, label %208, label %200

200:                                              ; preds = %198
  %201 = icmp sgt i64 %189, -2147483648
  %202 = select i1 %201, i64 %189, i64 -2147483648
  %203 = trunc i64 %202 to i32
  br label %204

204:                                              ; preds = %191, %200
  %205 = phi i32 [ %197, %191 ], [ %203, %200 ]
  %206 = icmp slt i32 %205, 0
  %207 = select i1 %206, i32 -2147483648, i32 2147483647
  br label %208

208:                                              ; preds = %198, %204
  %209 = phi i32 [ %205, %204 ], [ 2147483647, %198 ]
  %210 = phi i32 [ %207, %204 ], [ 2147483647, %198 ]
  %211 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %181, i64 0, i32 3, i32 0
  %212 = load i32, i32* %211, align 4
  %213 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %212, i32 %209) #18
  %214 = extractvalue { i32, i1 } %213, 1
  %215 = extractvalue { i32, i1 } %213, 0
  %216 = select i1 %214, i32 %210, i32 %215, !prof !3
  store i32 %216, i32* %211, align 4
  %217 = load i32, i32* %37, align 4
  %218 = icmp sgt i32 %209, -1
  %219 = select i1 %218, i32 -2147483648, i32 2147483647
  %220 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %217, i32 %209) #18
  %221 = extractvalue { i32, i1 } %220, 1
  %222 = extractvalue { i32, i1 } %220, 0
  %223 = select i1 %221, i32 %219, i32 %222, !prof !3
  store i32 %223, i32* %37, align 4
  %224 = add nuw nsw i64 %178, 1
  %225 = icmp eq i64 %224, %175
  br i1 %225, label %226, label %177

226:                                              ; preds = %208, %36, %172, %167
  %227 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %9, align 8
  %228 = load i32, i32* %11, align 4
  %229 = zext i32 %228 to i64
  %230 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %227, i64 %229
  %231 = icmp eq i32 %228, 0
  br i1 %231, label %251, label %232

232:                                              ; preds = %226
  %233 = shl nuw nsw i64 %229, 3
  %234 = add nsw i64 %233, -8
  %235 = and i64 %234, 8
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %237, label %248

237:                                              ; preds = %232
  %238 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %227, align 8
  %239 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %238, i64 0, i32 2, i32 0
  %240 = load i32, i32* %239, align 8
  %241 = icmp eq i32 %240, -64
  %242 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %238, i64 0, i32 3, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = icmp slt i32 %240, %243
  %245 = or i1 %241, %244
  %246 = select i1 %245, i32 %243, i32 %240
  store i32 %246, i32* %239, align 8
  %247 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %227, i64 1
  br label %248

248:                                              ; preds = %237, %232
  %249 = phi %"class.blink::GridTrack"** [ %227, %232 ], [ %247, %237 ]
  %250 = icmp eq i64 %234, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %248, %252, %226
  ret void

252:                                              ; preds = %248, %252
  %253 = phi %"class.blink::GridTrack"** [ %273, %252 ], [ %249, %248 ]
  %254 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %253, align 8
  %255 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %254, i64 0, i32 2, i32 0
  %256 = load i32, i32* %255, align 8
  %257 = icmp eq i32 %256, -64
  %258 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %254, i64 0, i32 3, i32 0
  %259 = load i32, i32* %258, align 4
  %260 = icmp slt i32 %256, %259
  %261 = or i1 %257, %260
  %262 = select i1 %261, i32 %259, i32 %256
  store i32 %262, i32* %255, align 8
  %263 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %253, i64 1
  %264 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %263, align 8
  %265 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %264, i64 0, i32 2, i32 0
  %266 = load i32, i32* %265, align 8
  %267 = icmp eq i32 %266, -64
  %268 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %264, i64 0, i32 3, i32 0
  %269 = load i32, i32* %268, align 4
  %270 = icmp slt i32 %266, %269
  %271 = or i1 %267, %270
  %272 = select i1 %271, i32 %269, i32 %266
  store i32 %272, i32* %265, align 8
  %273 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %253, i64 2
  %274 = icmp eq %"class.blink::GridTrack"** %273, %230
  br i1 %274, label %251, label %252
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink32GridTrackSizingAlgorithmStrategy22MinLogicalSizeForChildERNS_9LayoutBoxERKNS_6LengthENS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::Length"* dereferenceable(8), i32) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithmStrategy", %"class.blink::GridTrackSizingAlgorithmStrategy"* %0, i64 0, i32 1
  %6 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %6, i64 0, i32 13
  %8 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %7, align 8
  %9 = tail call i32 @_ZN5blink15GridLayoutUtils26FlowAwareDirectionForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %8, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0) #18
  %10 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %5, align 8
  %11 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %10, i64 0, i32 11
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, %9
  br i1 %13, label %14, label %26

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %10, i64 0, i32 13
  %16 = bitcast %"class.blink::LayoutGrid"** %15 to %"class.blink::LayoutBlock"**
  %17 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %16, align 8
  %18 = tail call i32 @_ZNK5blink9LayoutBox24ComputeLogicalWidthUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitEPKNS_11LayoutBlockE(%"class.blink::LayoutBox"* %1, i32 1, %"class.blink::Length"* dereferenceable(8) %2, i32 %3, %"class.blink::LayoutBlock"* %17) #18
  %19 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %5, align 8
  %20 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %19, i64 0, i32 13
  %21 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %20, align 8
  %22 = tail call i32 @_ZN5blink15GridLayoutUtils26MarginLogicalWidthForChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %21, %"class.blink::LayoutBox"* dereferenceable(216) %1) #18
  %23 = icmp slt i32 %22, 0
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %18, i32 %22) #18
  br label %62

26:                                               ; preds = %4
  %27 = tail call i32 @_ZN5blink15GridLayoutUtils42OverrideContainingBlockContentSizeForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %9) #18
  %28 = icmp eq i32 %27, %3
  br i1 %28, label %33, label %29

29:                                               ; preds = %26
  %30 = icmp eq i32 %9, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %29
  tail call void @_ZN5blink9LayoutBox45SetOverrideContainingBlockContentLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 %3) #18
  br label %33

32:                                               ; preds = %29
  tail call void @_ZN5blink9LayoutBox46SetOverrideContainingBlockContentLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 %3) #18
  br label %33

33:                                               ; preds = %26, %31, %32
  %34 = phi i1 [ false, %26 ], [ true, %31 ], [ true, %32 ]
  %35 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %0 to void (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*, i1)***
  %36 = load void (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*, i1)**, void (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*, i1)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*, i1)*, void (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*, i1)** %36, i64 10
  %38 = load void (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*, i1)*, void (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*, i1)** %37, align 8
  tail call void %38(%"class.blink::GridTrackSizingAlgorithmStrategy"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i1 zeroext %34) #18
  %39 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 15211807202738752817960438464512
  %45 = icmp eq i160 %44, 0
  %46 = bitcast %"class.blink::LayoutBox"* %1 to i64 (%"class.blink::LayoutBox"*)***
  %47 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %46, align 8
  %48 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %47, i64 165
  %49 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %48, align 8
  %50 = tail call i64 %49(%"class.blink::LayoutBox"* %1) #18
  %51 = lshr i64 %50, 32
  %52 = select i1 %45, i64 %51, i64 %50
  %53 = trunc i64 %52 to i32
  %54 = tail call i32 @_ZNK5blink9LayoutBox25ComputeLogicalHeightUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 1, %"class.blink::Length"* dereferenceable(8) %2, i32 %53) #18
  %55 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %5, align 8
  %56 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %55, i64 0, i32 13
  %57 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %56, align 8
  %58 = tail call i32 @_ZN5blink15GridLayoutUtils27MarginLogicalHeightForChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %57, %"class.blink::LayoutBox"* dereferenceable(216) %1) #18
  %59 = icmp slt i32 %58, 0
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %54, i32 %58) #18
  br label %62

62:                                               ; preds = %33, %14
  %63 = phi { i32, i1 } [ %61, %33 ], [ %25, %14 ]
  %64 = phi i32 [ %60, %33 ], [ %24, %14 ]
  %65 = extractvalue { i32, i1 } %63, 1
  %66 = extractvalue { i32, i1 } %63, 0
  %67 = select i1 %65, i32 %64, i32 %66
  ret i32 %67
}

declare i32 @_ZNK5blink9LayoutBox24ComputeLogicalWidthUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitEPKNS_11LayoutBlockE(%"class.blink::LayoutBox"*, i32, %"class.blink::Length"* dereferenceable(8), i32, %"class.blink::LayoutBlock"*) local_unnamed_addr #8

declare i32 @_ZNK5blink9LayoutBox25ComputeLogicalHeightUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32, %"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20DefiniteSizeStrategy22MinLogicalSizeForChildERNS_9LayoutBoxERKNS_6LengthENS_10LayoutUnitE(%"class.blink::DefiniteSizeStrategy"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::Length"* dereferenceable(8), i32) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.blink::DefiniteSizeStrategy", %"class.blink::DefiniteSizeStrategy"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::DefiniteSizeStrategy", %"class.blink::DefiniteSizeStrategy"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %7, i64 0, i32 13
  %9 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %8, align 8
  %10 = tail call i32 @_ZN5blink15GridLayoutUtils26FlowAwareDirectionForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %9, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0) #18
  %11 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %6, align 8
  %12 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %11, i64 0, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, %10
  %15 = select i1 %14, i32 0, i32 -64
  %16 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %11, i64 0, i32 13
  %17 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %16, align 8
  %18 = tail call zeroext i1 @_ZN5blink32GridTrackSizingAlgorithmStrategy34HasRelativeMarginOrPaddingForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %17, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %13)
  br i1 %18, label %63, label %19

19:                                               ; preds = %4
  %20 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %20, i64 0, i32 11
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, %10
  br i1 %23, label %70, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %20, i64 0, i32 13
  %26 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %25, align 8
  %27 = tail call i32 @_ZN5blink15GridLayoutUtils26FlowAwareDirectionForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %26, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0) #18
  %28 = icmp eq i32 %27, %22
  br i1 %28, label %29, label %46

29:                                               ; preds = %24
  %30 = tail call zeroext i1 @_ZNK5blink9LayoutBox23HasRelativeLogicalWidthEv(%"class.blink::LayoutBox"* %1) #18
  br i1 %30, label %63, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %33 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %33, i64 0, i32 0, i32 9
  %35 = bitcast [20 x i8]* %34 to i160*
  %36 = load i160, i160* %35, align 8
  %37 = and i160 %36, 15211807202738752817960438464512
  %38 = icmp eq i160 %37, 0
  %39 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %33, i64 0, i32 0, i32 5, i32 0, i32 0
  %40 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %40, i64 0, i32 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %40, i64 0, i32 3
  %43 = select i1 %38, %"class.blink::Length"* %41, %"class.blink::Length"* %42
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %43, i64 0, i32 2
  %45 = load i8, i8* %44, align 1
  switch i8 %45, label %63 [
    i8 2, label %70
    i8 1, label %70
    i8 8, label %70
  ]

46:                                               ; preds = %24
  %47 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasRelativeLogicalHeightEv(%"class.blink::LayoutBox"* %1) #18
  br i1 %47, label %63, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %50 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %50, i64 0, i32 0, i32 9
  %52 = bitcast [20 x i8]* %51 to i160*
  %53 = load i160, i160* %52, align 8
  %54 = and i160 %53, 15211807202738752817960438464512
  %55 = icmp eq i160 %54, 0
  %56 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %50, i64 0, i32 0, i32 5, i32 0, i32 0
  %57 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %57, i64 0, i32 3
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %57, i64 0, i32 8
  %60 = select i1 %55, %"class.blink::Length"* %58, %"class.blink::Length"* %59
  %61 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %60, i64 0, i32 2
  %62 = load i8, i8* %61, align 1
  switch i8 %62, label %63 [
    i8 2, label %70
    i8 1, label %70
    i8 8, label %70
  ]

63:                                               ; preds = %48, %31, %46, %29, %4
  %64 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %6, align 8
  %65 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %64, i64 0, i32 11
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %63
  tail call void @_ZN5blink9LayoutBox45SetOverrideContainingBlockContentLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 %15) #18
  br label %70

69:                                               ; preds = %63
  tail call void @_ZN5blink9LayoutBox46SetOverrideContainingBlockContentLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 %15) #18
  br label %70

70:                                               ; preds = %69, %68, %48, %48, %48, %31, %31, %31, %19
  %71 = tail call i32 @_ZNK5blink32GridTrackSizingAlgorithmStrategy22MinLogicalSizeForChildERNS_9LayoutBoxERKNS_6LengthENS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithmStrategy"* %5, %"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::Length"* dereferenceable(8) %2, i32 %3)
  ret i32 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20DefiniteSizeStrategy35LayoutGridItemForMinSizeComputationERNS_9LayoutBoxEb(%"class.blink::DefiniteSizeStrategy"* nocapture readnone, %"class.blink::LayoutBox"* dereferenceable(216), i1 zeroext) unnamed_addr #3 align 2 {
  br i1 %2, label %4, label %18

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = or i96 %8, 2
  store i96 %9, i96* %7, align 4
  tail call void @_ZN5blink12LayoutObject44MarkSelfPaintingLayerForVisualOverflowRecalcEv(%"class.blink::LayoutObject"* %5) #18
  %10 = load i96, i96* %7, align 4
  %11 = and i96 %10, 63
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::LayoutBox"* %1 to void (%"class.blink::LayoutObject"*)***
  %15 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %15, i64 54
  %17 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %16, align 8
  tail call void %17(%"class.blink::LayoutObject"* %5) #18
  br label %18

18:                                               ; preds = %13, %4, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20DefiniteSizeStrategy14MaximizeTracksERN3WTF6VectorINS_9GridTrackELj0ENS1_18PartitionAllocatorEEERN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::DefiniteSizeStrategy"* nocapture readonly, %"class.WTF::Vector"* nocapture readonly dereferenceable(16), %"class.absl::optional"* dereferenceable(8)) unnamed_addr #3 align 2 {
  %4 = alloca %"class.WTF::Vector.1349", align 8
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = bitcast %"class.WTF::Vector.1349"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #18
  %9 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %4, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %4, i64 0, i32 0, i32 0, i32 2
  %12 = bitcast %"class.WTF::Vector.1349"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  store %"class.blink::GridTrack"** null, %"class.blink::GridTrack"*** %9, align 8
  store i32 0, i32* %10, align 8
  %13 = icmp eq i32 %6, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  store i32 %6, i32* %11, align 4
  br label %24

15:                                               ; preds = %3
  %16 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink9GridTrackEEEmm(i64 %7) #18
  %17 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9GridTrackEEEPKcv, i64 0, i64 0)) #18
  %18 = ptrtoint i8* %17 to i64
  %19 = bitcast %"class.WTF::Vector.1349"* %4 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = lshr i64 %16, 3
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %10, align 8
  %22 = shl nuw nsw i64 %7, 3
  store i32 %6, i32* %11, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %22, i1 false) #18
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  br label %59

24:                                               ; preds = %59, %14
  %25 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 4, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %24
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #19
  unreachable

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.blink::DefiniteSizeStrategy", %"class.blink::DefiniteSizeStrategy"* %0, i64 0, i32 0, i32 1
  %32 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %31, align 8
  call void @_ZNK5blink24GridTrackSizingAlgorithm23DistributeSpaceToTracksILNS_25TrackSizeComputationPhaseE5EEEvRN3WTF6VectorIPNS_9GridTrackELj0ENS3_18PartitionAllocatorEEEPS8_RNS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithm"* %32, %"class.WTF::Vector.1349"* nonnull dereferenceable(16) %4, %"class.WTF::Vector.1349"* null, %"class.blink::LayoutUnit"* dereferenceable(4) %30) #18
  %33 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %9, align 8
  %34 = load i32, i32* %11, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %33, i64 %35
  %37 = icmp eq i32 %34, 0
  br i1 %37, label %76, label %38

38:                                               ; preds = %29
  %39 = shl nuw nsw i64 %35, 3
  %40 = add nsw i64 %39, -8
  %41 = and i64 %40, 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %56

43:                                               ; preds = %38
  %44 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %33, align 8
  %45 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %44, i64 0, i32 2, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %44, i64 0, i32 0, i32 0
  store i32 %46, i32* %47, align 8
  %48 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %44, i64 0, i32 1, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp ne i32 %49, -64
  %51 = icmp slt i32 %49, %46
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %54

53:                                               ; preds = %43
  store i32 %46, i32* %48, align 4
  br label %54

54:                                               ; preds = %53, %43
  %55 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %33, i64 1
  br label %56

56:                                               ; preds = %54, %38
  %57 = phi %"class.blink::GridTrack"** [ %33, %38 ], [ %55, %54 ]
  %58 = icmp eq i64 %40, 0
  br i1 %58, label %74, label %86

59:                                               ; preds = %59, %15
  %60 = phi i64 [ 0, %15 ], [ %72, %59 ]
  %61 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %23, align 8
  %62 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %61, i64 %60
  %63 = trunc i64 %60 to i32
  %64 = call dereferenceable(8) %"class.blink::GridTrack"** @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1349"* nonnull %4, i32 %63) #18
  store %"class.blink::GridTrack"* %62, %"class.blink::GridTrack"** %64, align 8
  %65 = call dereferenceable(8) %"class.blink::GridTrack"** @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1349"* nonnull %4, i32 %63) #18
  %66 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %65, align 8
  %67 = call dereferenceable(8) %"class.blink::GridTrack"** @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1349"* nonnull %4, i32 %63) #18
  %68 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %68, i64 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %66, i64 0, i32 2, i32 0
  store i32 %70, i32* %71, align 8
  %72 = add nuw nsw i64 %60, 1
  %73 = icmp eq i64 %72, %7
  br i1 %73, label %24, label %59

74:                                               ; preds = %110, %56
  %75 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %9, align 8
  br label %76

76:                                               ; preds = %74, %29
  %77 = phi %"class.blink::GridTrack"** [ %75, %74 ], [ %33, %29 ]
  %78 = icmp eq %"class.blink::GridTrack"** %77, null
  %79 = bitcast %"class.blink::GridTrack"** %77 to i8*
  br i1 %78, label %85, label %80, !prof !71

80:                                               ; preds = %76
  %81 = load i32, i32* %11, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %84, label %83, !prof !3

83:                                               ; preds = %80
  store i32 0, i32* %11, align 4
  br label %84

84:                                               ; preds = %83, %80
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %79) #18
  store %"class.blink::GridTrack"** null, %"class.blink::GridTrack"*** %9, align 8
  br label %85

85:                                               ; preds = %76, %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #18
  ret void

86:                                               ; preds = %56, %110
  %87 = phi %"class.blink::GridTrack"** [ %111, %110 ], [ %57, %56 ]
  %88 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %88, i64 0, i32 2, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %88, i64 0, i32 0, i32 0
  store i32 %90, i32* %91, align 8
  %92 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %88, i64 0, i32 1, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp ne i32 %93, -64
  %95 = icmp slt i32 %93, %90
  %96 = and i1 %94, %95
  br i1 %96, label %97, label %98

97:                                               ; preds = %86
  store i32 %90, i32* %92, align 4
  br label %98

98:                                               ; preds = %86, %97
  %99 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %87, i64 1
  %100 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %100, i64 0, i32 2, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %100, i64 0, i32 0, i32 0
  store i32 %102, i32* %103, align 8
  %104 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %100, i64 0, i32 1, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp ne i32 %105, -64
  %107 = icmp slt i32 %105, %102
  %108 = and i1 %106, %107
  br i1 %108, label %109, label %110

109:                                              ; preds = %98
  store i32 %102, i32* %104, align 4
  br label %110

110:                                              ; preds = %109, %98
  %111 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %87, i64 2
  %112 = icmp eq %"class.blink::GridTrack"** %111, %36
  br i1 %112, label %74, label %86
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink20DefiniteSizeStrategy20FindUsedFlexFractionERN3WTF6VectorImLj0ENS1_18PartitionAllocatorEEENS_24GridTrackSizingDirectionEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::DefiniteSizeStrategy"* nocapture readonly, %"class.WTF::Vector.6"* nocapture readnone dereferenceable(16), i32, i64) unnamed_addr #3 align 2 {
  %5 = alloca %"struct.blink::GridSpan", align 8
  %6 = trunc i64 %3 to i8
  %7 = bitcast %"struct.blink::GridSpan"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #18
  %8 = getelementptr inbounds %"struct.blink::GridSpan", %"struct.blink::GridSpan"* %5, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::DefiniteSizeStrategy", %"class.blink::DefiniteSizeStrategy"* %0, i64 0, i32 0, i32 1
  %10 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %9, align 8
  %11 = icmp eq i32 %2, 0
  %12 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %10, i64 0, i32 6
  %13 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %10, i64 0, i32 7
  %14 = select i1 %11, %"class.WTF::Vector"* %12, %"class.WTF::Vector"* %13
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %14, i64 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = icmp ult i64 %17, 1000
  %19 = select i1 %18, i64 %17, i64 1000
  %20 = shl nuw nsw i64 %19, 32
  %21 = bitcast %"struct.blink::GridSpan"* %5 to i64*
  store i64 %20, i64* %21, align 8
  store i32 1, i32* %8, align 8
  %22 = icmp eq i8 %6, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %4
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #19
  unreachable

24:                                               ; preds = %4
  %25 = lshr i64 %3, 32
  %26 = trunc i64 %25 to i32
  %27 = call double @_ZNK5blink24GridTrackSizingAlgorithm14FindFrUnitSizeERKNS_8GridSpanENS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithm"* %10, %"struct.blink::GridSpan"* nonnull dereferenceable(12) %5, i32 %26) #18
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #18
  ret double %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20DefiniteSizeStrategy33FreeSpaceForStretchAutoTracksStepEv(%"class.blink::DefiniteSizeStrategy"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::DefiniteSizeStrategy", %"class.blink::DefiniteSizeStrategy"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %3, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  %7 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %3, i64 0, i32 5
  %8 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %3, i64 0, i32 4
  %9 = select i1 %6, %"class.absl::optional"* %7, %"class.absl::optional"* %8
  %10 = bitcast %"class.absl::optional"* %9 to i64*
  %11 = load i64, i64* %10, align 4
  %12 = trunc i64 %11 to i8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #19
  unreachable

15:                                               ; preds = %1
  %16 = lshr i64 %11, 32
  %17 = trunc i64 %16 to i32
  ret i32 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink24GridTrackSizingAlgorithm9FreeSpaceENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 1
  %4 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 5
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 4
  %6 = select i1 %3, %"class.absl::optional"* %4, %"class.absl::optional"* %5
  %7 = bitcast %"class.absl::optional"* %6 to i64*
  %8 = load i64, i64* %7, align 4
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20DefiniteSizeStrategy18MinContentForChildERNS_9LayoutBoxE(%"class.blink::DefiniteSizeStrategy"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::DefiniteSizeStrategy", %"class.blink::DefiniteSizeStrategy"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::DefiniteSizeStrategy", %"class.blink::DefiniteSizeStrategy"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %5, i64 0, i32 13
  %7 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %6, align 8
  %8 = tail call i32 @_ZN5blink15GridLayoutUtils26FlowAwareDirectionForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %7, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0) #18
  %9 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %4, align 8
  %10 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %9, i64 0, i32 11
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, %8
  br i1 %12, label %13, label %27

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %15 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %14 to i96*
  %16 = load i96, i96* %15, align 4
  %17 = and i96 %16, 63
  %18 = icmp eq i96 %17, 0
  br i1 %18, label %27, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %9, i64 0, i32 13
  %21 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %20, align 8
  %22 = tail call zeroext i1 @_ZN5blink32GridTrackSizingAlgorithmStrategy53ShouldClearOverrideContainingBlockContentSizeForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %21, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %8)
  br i1 %22, label %23, label %27

23:                                               ; preds = %19
  %24 = icmp eq i32 %8, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %23
  tail call void @_ZN5blink9LayoutBox45SetOverrideContainingBlockContentLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 0) #18
  br label %27

26:                                               ; preds = %23
  tail call void @_ZN5blink9LayoutBox46SetOverrideContainingBlockContentLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 0) #18
  br label %27

27:                                               ; preds = %13, %26, %25, %19, %2
  %28 = tail call i32 @_ZNK5blink32GridTrackSizingAlgorithmStrategy18MinContentForChildERNS_9LayoutBoxE(%"class.blink::GridTrackSizingAlgorithmStrategy"* %3, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink22IndefiniteSizeStrategy35LayoutGridItemForMinSizeComputationERNS_9LayoutBoxEb(%"class.blink::IndefiniteSizeStrategy"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216), i1 zeroext) unnamed_addr #3 align 2 {
  br i1 %2, label %4, label %24

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.blink::IndefiniteSizeStrategy", %"class.blink::IndefiniteSizeStrategy"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %13 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %12 to i96*
  %14 = load i96, i96* %13, align 4
  %15 = or i96 %14, 2
  store i96 %15, i96* %13, align 4
  tail call void @_ZN5blink12LayoutObject44MarkSelfPaintingLayerForVisualOverflowRecalcEv(%"class.blink::LayoutObject"* %11) #18
  %16 = load i96, i96* %13, align 4
  %17 = and i96 %16, 63
  %18 = icmp eq i96 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %10
  %20 = bitcast %"class.blink::LayoutBox"* %1 to void (%"class.blink::LayoutObject"*)***
  %21 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %21, i64 54
  %23 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %22, align 8
  tail call void %23(%"class.blink::LayoutObject"* %11) #18
  br label %24

24:                                               ; preds = %19, %10, %4, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink22IndefiniteSizeStrategy14MaximizeTracksERN3WTF6VectorINS_9GridTrackELj0ENS1_18PartitionAllocatorEEERN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::IndefiniteSizeStrategy"* nocapture readnone, %"class.WTF::Vector"* nocapture readonly dereferenceable(16), %"class.absl::optional"* nocapture readnone dereferenceable(8)) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %30, label %11

11:                                               ; preds = %3
  %12 = shl nuw nsw i64 %8, 7
  %13 = add nsw i64 %12, -128
  %14 = lshr exact i64 %13, 7
  %15 = add nuw nsw i64 %14, 1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %11, %18
  %19 = phi %"class.blink::GridTrack"* [ %24, %18 ], [ %5, %11 ]
  %20 = phi i64 [ %25, %18 ], [ %16, %11 ]
  %21 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %19, i64 0, i32 1, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %19, i64 0, i32 0, i32 0
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %19, i64 1
  %25 = add i64 %20, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !74

27:                                               ; preds = %18, %11
  %28 = phi %"class.blink::GridTrack"* [ %5, %11 ], [ %24, %18 ]
  %29 = icmp ult i64 %13, 896
  br i1 %29, label %30, label %31

30:                                               ; preds = %27, %31, %3
  ret void

31:                                               ; preds = %27, %31
  %32 = phi %"class.blink::GridTrack"* [ %57, %31 ], [ %28, %27 ]
  %33 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %32, i64 0, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %32, i64 0, i32 0, i32 0
  store i32 %34, i32* %35, align 8
  %36 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %32, i64 1, i32 1, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %32, i64 1, i32 0, i32 0
  store i32 %37, i32* %38, align 8
  %39 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %32, i64 2, i32 1, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %32, i64 2, i32 0, i32 0
  store i32 %40, i32* %41, align 8
  %42 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %32, i64 3, i32 1, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %32, i64 3, i32 0, i32 0
  store i32 %43, i32* %44, align 8
  %45 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %32, i64 4, i32 1, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %32, i64 4, i32 0, i32 0
  store i32 %46, i32* %47, align 8
  %48 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %32, i64 5, i32 1, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %32, i64 5, i32 0, i32 0
  store i32 %49, i32* %50, align 8
  %51 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %32, i64 6, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %32, i64 6, i32 0, i32 0
  store i32 %52, i32* %53, align 8
  %54 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %32, i64 7, i32 1, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %32, i64 7, i32 0, i32 0
  store i32 %55, i32* %56, align 8
  %57 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %32, i64 8
  %58 = icmp eq %"class.blink::GridTrack"* %57, %9
  br i1 %58, label %30, label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink22IndefiniteSizeStrategy20FindUsedFlexFractionERN3WTF6VectorImLj0ENS1_18PartitionAllocatorEEENS_24GridTrackSizingDirectionEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::IndefiniteSizeStrategy"*, %"class.WTF::Vector.6"* dereferenceable(16), i32, i64) unnamed_addr #3 align 2 {
  %5 = alloca %"struct.blink::GridSpan", align 8
  %6 = alloca %"class.WTF::Vector", align 8
  %7 = bitcast %"class.WTF::Vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #18
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.blink::IndefiniteSizeStrategy", %"class.blink::IndefiniteSizeStrategy"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %"class.WTF::Vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %11, align 8
  %14 = icmp eq i32 %2, 0
  %15 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %13, i64 0, i32 6
  %16 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %13, i64 0, i32 7
  %17 = select i1 %14, %"class.WTF::Vector"* %15, %"class.WTF::Vector"* %16
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %17, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  store %"class.blink::GridTrack"* null, %"class.blink::GridTrack"** %8, align 8
  store i32 0, i32* %9, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %4
  %22 = zext i32 %19 to i64
  %23 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9GridTrackEEEmm(i64 %22) #18
  %24 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %23, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9GridTrackEEEPKcv, i64 0, i64 0)) #18
  %25 = ptrtoint i8* %24 to i64
  %26 = bitcast %"class.WTF::Vector"* %6 to i64*
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = lshr i64 %23, 7
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %9, align 8
  %29 = bitcast i8* %24 to %"class.blink::GridTrack"*
  br label %30

30:                                               ; preds = %4, %21
  %31 = phi %"class.blink::GridTrack"* [ null, %4 ], [ %29, %21 ]
  %32 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %17, i64 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %10, align 4
  %34 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %17, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %34, align 8
  %36 = zext i32 %33 to i64
  %37 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %35, i64 %36
  %38 = icmp eq i32 %33, 0
  br i1 %38, label %101, label %39

39:                                               ; preds = %30, %97
  %40 = phi %"class.blink::GridTrack"* [ %98, %97 ], [ %31, %30 ]
  %41 = phi %"class.blink::GridTrack"* [ %99, %97 ], [ %35, %30 ]
  %42 = bitcast %"class.blink::GridTrack"* %40 to i8*
  %43 = bitcast %"class.blink::GridTrack"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 25, i1 false) #18
  %44 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %40, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %41, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 96, i1 false) #18
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %97, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %40, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %50 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %41, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %51 = load i32, i32* %50, align 8
  store i32 %51, i32* %49, align 8
  %52 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %40, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %53 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %41, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %54 = bitcast %"class.blink::GridLength"* %53 to i64*
  %55 = bitcast %"class.blink::GridLength"* %52 to i64*
  %56 = load i64, i64* %54, align 4
  store i64 %56, i64* %55, align 4
  %57 = and i64 %56, 280375465082880
  %58 = icmp eq i64 %57, 8796093022208
  br i1 %58, label %59, label %61

59:                                               ; preds = %48
  %60 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %52, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %60) #18
  br label %61

61:                                               ; preds = %59, %48
  %62 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %40, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 1
  %63 = bitcast double* %62 to i8*
  %64 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %41, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 1
  %65 = bitcast double* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %65, i64 12, i1 false) #18
  %66 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %40, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %67 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %41, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %68 = bitcast %"class.blink::GridLength"* %67 to i64*
  %69 = bitcast %"class.blink::GridLength"* %66 to i64*
  %70 = load i64, i64* %68, align 4
  store i64 %70, i64* %69, align 4
  %71 = and i64 %70, 280375465082880
  %72 = icmp eq i64 %71, 8796093022208
  br i1 %72, label %73, label %75

73:                                               ; preds = %61
  %74 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %66, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %74) #18
  br label %75

75:                                               ; preds = %73, %61
  %76 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %40, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 1
  %77 = bitcast double* %76 to i8*
  %78 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %41, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 1
  %79 = bitcast double* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %79, i64 12, i1 false) #18
  %80 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %40, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4
  %81 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %41, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4
  %82 = bitcast %"class.blink::GridLength"* %81 to i64*
  %83 = bitcast %"class.blink::GridLength"* %80 to i64*
  %84 = load i64, i64* %82, align 4
  store i64 %84, i64* %83, align 4
  %85 = and i64 %84, 280375465082880
  %86 = icmp eq i64 %85, 8796093022208
  br i1 %86, label %87, label %89

87:                                               ; preds = %75
  %88 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %80, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %88) #18
  br label %89

89:                                               ; preds = %87, %75
  %90 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %40, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 1
  %91 = bitcast double* %90 to i8*
  %92 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %41, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 1
  %93 = bitcast double* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %93, i64 12, i1 false) #18
  %94 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %40, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  %95 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %41, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  %96 = load i16, i16* %95, align 8
  store i16 %96, i16* %94, align 8
  store i8 1, i8* %44, align 8
  br label %97

97:                                               ; preds = %89, %39
  %98 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %40, i64 1
  %99 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %41, i64 1
  %100 = icmp eq %"class.blink::GridTrack"* %99, %37
  br i1 %100, label %101, label %39

101:                                              ; preds = %97, %30
  %102 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %1, i64 0, i32 0, i32 0, i32 0
  %103 = load i64*, i64** %102, align 8
  %104 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %1, i64 0, i32 0, i32 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds i64, i64* %103, i64 %106
  %108 = icmp eq i32 %105, 0
  br i1 %108, label %112, label %122

109:                                              ; preds = %132
  %110 = load i32, i32* %104, align 4
  %111 = icmp eq i32 %110, 0
  br label %112

112:                                              ; preds = %109, %101
  %113 = phi double [ %143, %109 ], [ 0.000000e+00, %101 ]
  %114 = phi i1 [ %111, %109 ], [ true, %101 ]
  %115 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %11, align 8
  %116 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %115, i64 0, i32 12
  %117 = load %"class.blink::Grid"*, %"class.blink::Grid"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::Grid", %"class.blink::Grid"* %117, i64 0, i32 8, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  %121 = or i1 %120, %114
  br i1 %121, label %228, label %146

122:                                              ; preds = %101, %132
  %123 = phi double [ %143, %132 ], [ 0.000000e+00, %101 ]
  %124 = phi i64* [ %144, %132 ], [ %103, %101 ]
  %125 = load i64, i64* %124, align 8
  %126 = trunc i64 %125 to i32
  %127 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %6, i32 %126) #18
  %128 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %127, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %129 = load i8, i8* %128, align 8, !range !2
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %122
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #19
  unreachable

132:                                              ; preds = %122
  %133 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %127, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 1
  %134 = load double, double* %133, align 8
  %135 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %127, i64 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = fcmp ogt double %134, 1.000000e+00
  %138 = select i1 %137, double %134, double 1.000000e+00
  %139 = sitofp i32 %136 to double
  %140 = fmul double %139, 1.562500e-02
  %141 = fdiv double %140, %138
  %142 = fcmp olt double %123, %141
  %143 = select i1 %142, double %141, double %123
  %144 = getelementptr inbounds i64, i64* %124, i64 1
  %145 = icmp eq i64* %144, %107
  br i1 %145, label %109, label %122

146:                                              ; preds = %112
  %147 = bitcast %"class.blink::Grid"* %117 to %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)***
  %148 = bitcast %"struct.blink::GridSpan"* %5 to i8*
  %149 = bitcast %"struct.blink::GridSpan"* %5 to i64*
  %150 = getelementptr inbounds %"struct.blink::GridSpan", %"struct.blink::GridSpan"* %5, i64 0, i32 2
  br label %151

151:                                              ; preds = %223, %146
  %152 = phi double [ %113, %146 ], [ %216, %223 ]
  %153 = phi i64 [ 0, %146 ], [ %224, %223 ]
  %154 = trunc i64 %153 to i32
  %155 = call dereferenceable(8) i64* @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* %1, i32 %154) #18
  %156 = load i64, i64* %155, align 8
  %157 = load %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)**, %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)*** %147, align 8
  %158 = getelementptr inbounds %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)*, %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)** %157, i64 6
  %159 = load %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)*, %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)** %158, align 8
  %160 = call %"class.blink::Grid::GridIterator"* %159(%"class.blink::Grid"* %117, i32 %2, i64 %156, i64 0) #18
  %161 = bitcast %"class.blink::Grid::GridIterator"* %160 to %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)***
  %162 = load %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)**, %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)*** %161, align 8
  %163 = load %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)*, %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)** %162, align 8
  %164 = call %"class.blink::LayoutBox"* %163(%"class.blink::Grid::GridIterator"* %160) #18
  %165 = icmp eq %"class.blink::LayoutBox"* %164, null
  br i1 %165, label %215, label %166

166:                                              ; preds = %151
  %167 = icmp eq i64 %153, 0
  %168 = add i32 %154, -1
  br label %169

169:                                              ; preds = %209, %166
  %170 = phi double [ %152, %166 ], [ %210, %209 ]
  %171 = phi %"class.blink::LayoutBox"* [ %164, %166 ], [ %213, %209 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %148) #18
  %172 = call { i64, i32 } @_ZNK5blink4Grid12GridItemSpanERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %117, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %171, i32 %2) #18
  %173 = extractvalue { i64, i32 } %172, 0
  %174 = extractvalue { i64, i32 } %172, 1
  store i64 %173, i64* %149, align 8
  store i32 %174, i32* %150, align 8
  %175 = shl i64 %173, 32
  %176 = ashr exact i64 %175, 32
  br i1 %167, label %181, label %177

177:                                              ; preds = %169
  %178 = call dereferenceable(8) i64* @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* %1, i32 %168) #18
  %179 = load i64, i64* %178, align 8
  %180 = icmp ult i64 %179, %176
  br i1 %180, label %181, label %209

181:                                              ; preds = %177, %169
  %182 = call i32 @_ZNK5blink22IndefiniteSizeStrategy18MaxContentForChildERNS_9LayoutBoxE(%"class.blink::IndefiniteSizeStrategy"* %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %171) #18
  %183 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %11, align 8
  %184 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %183, i64 0, i32 13
  %185 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %184, align 8
  %186 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %183, i64 0, i32 12
  %187 = load %"class.blink::Grid"*, %"class.blink::Grid"** %186, align 8
  %188 = mul i64 %173, -4294967295
  %189 = ashr i64 %188, 32
  %190 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %183, i64 0, i32 11
  %191 = load i32, i32* %190, align 8
  %192 = icmp eq i32 %191, 1
  %193 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %183, i64 0, i32 3
  %194 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %183, i64 0, i32 2
  %195 = select i1 %192, %"class.absl::optional"* %193, %"class.absl::optional"* %194
  %196 = bitcast %"class.absl::optional"* %195 to i64*
  %197 = load i64, i64* %196, align 4
  %198 = call i32 @_ZNK5blink10LayoutGrid11GuttersSizeERKNS_4GridENS_24GridTrackSizingDirectionEmmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %185, %"class.blink::Grid"* dereferenceable(168) %187, i32 %2, i64 %176, i64 %189, i64 %197) #18
  %199 = icmp sgt i32 %198, -1
  %200 = select i1 %199, i32 -2147483648, i32 2147483647
  %201 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %182, i32 %198) #18
  %202 = extractvalue { i32, i1 } %201, 1
  %203 = extractvalue { i32, i1 } %201, 0
  %204 = select i1 %202, i32 %200, i32 %203, !prof !3
  %205 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %11, align 8
  %206 = call double @_ZNK5blink24GridTrackSizingAlgorithm14FindFrUnitSizeERKNS_8GridSpanENS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithm"* %205, %"struct.blink::GridSpan"* nonnull dereferenceable(12) %5, i32 %204) #18
  %207 = fcmp olt double %170, %206
  %208 = select i1 %207, double %206, double %170
  br label %209

209:                                              ; preds = %181, %177
  %210 = phi double [ %208, %181 ], [ %170, %177 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %148) #18
  %211 = load %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)**, %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)*** %161, align 8
  %212 = load %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)*, %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)** %211, align 8
  %213 = call %"class.blink::LayoutBox"* %212(%"class.blink::Grid::GridIterator"* %160) #18
  %214 = icmp eq %"class.blink::LayoutBox"* %213, null
  br i1 %214, label %215, label %169

215:                                              ; preds = %209, %151
  %216 = phi double [ %152, %151 ], [ %210, %209 ]
  %217 = icmp eq %"class.blink::Grid::GridIterator"* %160, null
  br i1 %217, label %223, label %218

218:                                              ; preds = %215
  %219 = bitcast %"class.blink::Grid::GridIterator"* %160 to void (%"class.blink::Grid::GridIterator"*)***
  %220 = load void (%"class.blink::Grid::GridIterator"*)**, void (%"class.blink::Grid::GridIterator"*)*** %219, align 8
  %221 = getelementptr inbounds void (%"class.blink::Grid::GridIterator"*)*, void (%"class.blink::Grid::GridIterator"*)** %220, i64 3
  %222 = load void (%"class.blink::Grid::GridIterator"*)*, void (%"class.blink::Grid::GridIterator"*)** %221, align 8
  call void %222(%"class.blink::Grid::GridIterator"* nonnull %160) #18
  br label %223

223:                                              ; preds = %218, %215
  %224 = add nuw nsw i64 %153, 1
  %225 = load i32, i32* %104, align 4
  %226 = zext i32 %225 to i64
  %227 = icmp ult i64 %224, %226
  br i1 %227, label %151, label %228

228:                                              ; preds = %223, %112
  %229 = phi double [ %113, %112 ], [ %216, %223 ]
  %230 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %8, align 8
  %231 = icmp eq %"class.blink::GridTrack"* %230, null
  br i1 %231, label %271, label %232, !prof !71

232:                                              ; preds = %228
  %233 = bitcast %"class.blink::GridTrack"* %230 to i8*
  %234 = load i32, i32* %10, align 4
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %269, label %236, !prof !3

236:                                              ; preds = %232
  %237 = zext i32 %234 to i64
  %238 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %230, i64 %237
  br label %239

239:                                              ; preds = %263, %236
  %240 = phi %"class.blink::GridTrack"* [ %264, %263 ], [ %230, %236 ]
  %241 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %240, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %242 = load i8, i8* %241, align 8, !range !2
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %263, label %244

244:                                              ; preds = %239
  %245 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %240, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0, i32 2
  %246 = load i8, i8* %245, align 1
  %247 = icmp eq i8 %246, 8
  br i1 %247, label %248, label %250

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %240, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %249) #18
  br label %250

250:                                              ; preds = %248, %244
  %251 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %240, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 0, i32 2
  %252 = load i8, i8* %251, align 1
  %253 = icmp eq i8 %252, 8
  br i1 %253, label %254, label %256

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %240, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %255) #18
  br label %256

256:                                              ; preds = %254, %250
  %257 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %240, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 2
  %258 = load i8, i8* %257, align 1
  %259 = icmp eq i8 %258, 8
  br i1 %259, label %260, label %262

260:                                              ; preds = %256
  %261 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %240, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %261) #18
  br label %262

262:                                              ; preds = %260, %256
  store i8 0, i8* %241, align 8
  br label %263

263:                                              ; preds = %262, %239
  %264 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %240, i64 1
  %265 = icmp eq %"class.blink::GridTrack"* %264, %238
  br i1 %265, label %266, label %239

266:                                              ; preds = %263
  store i32 0, i32* %10, align 4
  %267 = bitcast %"class.WTF::Vector"* %6 to i8**
  %268 = load i8*, i8** %267, align 8
  br label %269

269:                                              ; preds = %266, %232
  %270 = phi i8* [ %268, %266 ], [ %233, %232 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %270) #18
  store %"class.blink::GridTrack"* null, %"class.blink::GridTrack"** %8, align 8
  br label %271

271:                                              ; preds = %228, %269
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #18
  ret double %229
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink22IndefiniteSizeStrategy33RecomputeUsedFlexFractionIfNeededERN3WTF6VectorImLj0ENS1_18PartitionAllocatorEEERdRNS2_INS_10LayoutUnitELj0ES3_EERS7_(%"class.blink::IndefiniteSizeStrategy"* nocapture readonly, %"class.WTF::Vector.6"* nocapture readnone dereferenceable(16), double* nocapture dereferenceable(8), %"class.WTF::Vector.959"* nocapture readnone dereferenceable(16), %"class.blink::LayoutUnit"* nocapture readonly dereferenceable(4)) unnamed_addr #3 align 2 {
  %6 = alloca %"struct.blink::GridSpan", align 8
  %7 = getelementptr inbounds %"class.blink::IndefiniteSizeStrategy", %"class.blink::IndefiniteSizeStrategy"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %182, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %8, i64 0, i32 13
  %14 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %14, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 9
  %19 = bitcast [20 x i8]* %18 to i160*
  %20 = load i160, i160* %19, align 8
  %21 = and i160 %20, 15211807202738752817960438464512
  %22 = icmp eq i160 %21, 0
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 5, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %24, i64 0, i32 6
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %24, i64 0, i32 7
  %27 = select i1 %22, %"class.blink::Length"* %25, %"class.blink::Length"* %26
  %28 = tail call i32 @_ZNK5blink9LayoutBox27ComputeContentLogicalHeightENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %15, i32 1, %"class.blink::Length"* dereferenceable(8) %27, i32 -64) #18
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %29, i64 0, i32 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = load i160, i160* %31, align 8
  %33 = and i160 %32, 15211807202738752817960438464512
  %34 = icmp eq i160 %33, 0
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %29, i64 0, i32 0, i32 5, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %36, i64 0, i32 4
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %36, i64 0, i32 5
  %39 = select i1 %34, %"class.blink::Length"* %37, %"class.blink::Length"* %38
  %40 = tail call i32 @_ZNK5blink9LayoutBox27ComputeContentLogicalHeightENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %15, i32 2, %"class.blink::Length"* dereferenceable(8) %39, i32 -64) #18
  %41 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %7, align 8
  %42 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %41, i64 0, i32 11
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %41, i64 0, i32 6
  %46 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %41, i64 0, i32 7
  %47 = select i1 %44, %"class.WTF::Vector"* %45, %"class.WTF::Vector"* %46
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %48, align 8
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %47, i64 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = icmp eq i32 %51, 0
  br i1 %53, label %104, label %54

54:                                               ; preds = %12
  %55 = shl nuw nsw i64 %52, 7
  %56 = add nsw i64 %55, -128
  %57 = lshr exact i64 %56, 7
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 1
  %60 = icmp eq i64 %56, 0
  br i1 %60, label %84, label %61

61:                                               ; preds = %54
  %62 = sub nuw nsw i64 %58, %59
  br label %63

63:                                               ; preds = %187, %61
  %64 = phi %"class.blink::GridTrack"* [ %49, %61 ], [ %195, %187 ]
  %65 = phi i32 [ 0, %61 ], [ %194, %187 ]
  %66 = phi i64 [ %62, %61 ], [ %196, %187 ]
  %67 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %64, i64 0, i32 1, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, -64
  br i1 %69, label %70, label %73

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %64, i64 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 8
  br label %73

73:                                               ; preds = %70, %63
  %74 = phi i32 [ %72, %70 ], [ %68, %63 ]
  %75 = icmp slt i32 %74, 0
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %65, i32 %74) #18
  %78 = extractvalue { i32, i1 } %77, 1
  %79 = extractvalue { i32, i1 } %77, 0
  %80 = select i1 %78, i32 %76, i32 %79, !prof !3
  %81 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %64, i64 1, i32 1, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, -64
  br i1 %83, label %184, label %187

84:                                               ; preds = %187, %54
  %85 = phi i32 [ undef, %54 ], [ %194, %187 ]
  %86 = phi %"class.blink::GridTrack"* [ %49, %54 ], [ %195, %187 ]
  %87 = phi i32 [ 0, %54 ], [ %194, %187 ]
  %88 = icmp eq i64 %59, 0
  br i1 %88, label %104, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %86, i64 0, i32 1, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, -64
  br i1 %92, label %93, label %96

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %86, i64 0, i32 0, i32 0
  %95 = load i32, i32* %94, align 8
  br label %96

96:                                               ; preds = %93, %89
  %97 = phi i32 [ %95, %93 ], [ %91, %89 ]
  %98 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %87, i32 %97) #18
  %99 = extractvalue { i32, i1 } %98, 1
  %100 = icmp slt i32 %97, 0
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = extractvalue { i32, i1 } %98, 0
  %103 = select i1 %99, i32 %101, i32 %102, !prof !3
  br label %104

104:                                              ; preds = %96, %84, %12
  %105 = phi i32 [ 0, %12 ], [ %85, %84 ], [ %103, %96 ]
  %106 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %41, i64 0, i32 13
  %107 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %41, i64 0, i32 12
  %109 = load %"class.blink::Grid"*, %"class.blink::Grid"** %108, align 8
  %110 = icmp eq i32 %43, 1
  %111 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %41, i64 0, i32 3
  %112 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %41, i64 0, i32 2
  %113 = select i1 %110, %"class.absl::optional"* %111, %"class.absl::optional"* %112
  %114 = bitcast %"class.absl::optional"* %113 to i64*
  %115 = load i64, i64* %114, align 4
  %116 = tail call i32 @_ZNK5blink10LayoutGrid11GuttersSizeERKNS_4GridENS_24GridTrackSizingDirectionEmmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %107, %"class.blink::Grid"* dereferenceable(168) %109, i32 %43, i64 0, i64 %52, i64 %115) #18
  %117 = icmp slt i32 %116, 0
  %118 = select i1 %117, i32 -2147483648, i32 2147483647
  %119 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %116) #18
  %120 = extractvalue { i32, i1 } %119, 1
  %121 = extractvalue { i32, i1 } %119, 0
  %122 = select i1 %120, i32 %118, i32 %121, !prof !3
  %123 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp slt i32 %122, 0
  %126 = select i1 %125, i32 -2147483648, i32 2147483647
  %127 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %124, i32 %122) #18
  %128 = extractvalue { i32, i1 } %127, 1
  %129 = extractvalue { i32, i1 } %127, 0
  %130 = select i1 %128, i32 %126, i32 %129, !prof !3
  %131 = icmp ne i32 %28, 0
  %132 = icmp slt i32 %130, %28
  %133 = and i1 %131, %132
  %134 = icmp ne i32 %40, -64
  %135 = icmp sgt i32 %130, %40
  %136 = and i1 %134, %135
  %137 = or i1 %133, %136
  br i1 %137, label %138, label %182

138:                                              ; preds = %104
  %139 = select i1 %136, i32 %40, i32 -64
  %140 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %7, align 8
  %141 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %140, i64 0, i32 12
  %142 = load %"class.blink::Grid"*, %"class.blink::Grid"** %141, align 8
  %143 = icmp slt i32 %139, %28
  %144 = bitcast %"class.blink::Grid"* %142 to i64 (%"class.blink::Grid"*, i32)***
  %145 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %144, align 8
  %146 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %145, align 8
  %147 = tail call i64 %146(%"class.blink::Grid"* %142, i32 1) #18
  %148 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %7, align 8
  %149 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %148, i64 0, i32 11
  %150 = load i32, i32* %149, align 8
  %151 = icmp eq i32 %150, 1
  %152 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %148, i64 0, i32 3
  %153 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %148, i64 0, i32 2
  %154 = select i1 %151, %"class.absl::optional"* %152, %"class.absl::optional"* %153
  %155 = bitcast %"class.absl::optional"* %154 to i64*
  %156 = load i64, i64* %155, align 4
  %157 = tail call i32 @_ZNK5blink10LayoutGrid11GuttersSizeERKNS_4GridENS_24GridTrackSizingDirectionEmmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %14, %"class.blink::Grid"* dereferenceable(168) %142, i32 1, i64 0, i64 %147, i64 %156) #18
  %158 = select i1 %143, i32 %28, i32 %139
  %159 = icmp sgt i32 %157, -1
  %160 = select i1 %159, i32 -2147483648, i32 2147483647
  %161 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %158, i32 %157) #18
  %162 = extractvalue { i32, i1 } %161, 1
  %163 = extractvalue { i32, i1 } %161, 0
  %164 = select i1 %162, i32 %160, i32 %163, !prof !3
  %165 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %7, align 8
  %166 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %165, i64 0, i32 11
  %167 = load i32, i32* %166, align 8
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %165, i64 0, i32 6
  %170 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %165, i64 0, i32 7
  %171 = select i1 %168, %"class.WTF::Vector"* %169, %"class.WTF::Vector"* %170
  %172 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %171, i64 0, i32 0, i32 0, i32 2
  %173 = load i32, i32* %172, align 4
  %174 = zext i32 %173 to i64
  %175 = bitcast %"struct.blink::GridSpan"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %175) #18
  %176 = icmp ult i64 %174, 1000
  %177 = select i1 %176, i64 %174, i64 1000
  %178 = shl nuw nsw i64 %177, 32
  %179 = bitcast %"struct.blink::GridSpan"* %6 to i64*
  store i64 %178, i64* %179, align 8
  %180 = getelementptr inbounds %"struct.blink::GridSpan", %"struct.blink::GridSpan"* %6, i64 0, i32 2
  store i32 1, i32* %180, align 8
  %181 = call double @_ZNK5blink24GridTrackSizingAlgorithm14FindFrUnitSizeERKNS_8GridSpanENS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithm"* %165, %"struct.blink::GridSpan"* nonnull dereferenceable(12) %6, i32 %164) #18
  store double %181, double* %2, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %175) #18
  br label %182

182:                                              ; preds = %138, %104, %5
  %183 = phi i1 [ false, %5 ], [ true, %138 ], [ false, %104 ]
  ret i1 %183

184:                                              ; preds = %73
  %185 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %64, i64 1, i32 0, i32 0
  %186 = load i32, i32* %185, align 8
  br label %187

187:                                              ; preds = %184, %73
  %188 = phi i32 [ %186, %184 ], [ %82, %73 ]
  %189 = icmp slt i32 %188, 0
  %190 = select i1 %189, i32 -2147483648, i32 2147483647
  %191 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %80, i32 %188) #18
  %192 = extractvalue { i32, i1 } %191, 1
  %193 = extractvalue { i32, i1 } %191, 0
  %194 = select i1 %192, i32 %190, i32 %193, !prof !3
  %195 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %64, i64 2
  %196 = add i64 %66, -2
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %84, label %63
}

declare i32 @_ZNK5blink9LayoutBox27ComputeContentLogicalHeightENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32, %"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink22IndefiniteSizeStrategy33FreeSpaceForStretchAutoTracksStepEv(%"class.blink::IndefiniteSizeStrategy"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::IndefiniteSizeStrategy", %"class.blink::IndefiniteSizeStrategy"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %3, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %112, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %3, i64 0, i32 13
  %9 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %9, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = and i160 %15, 15211807202738752817960438464512
  %17 = icmp eq i160 %16, 0
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 5, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %19, i64 0, i32 6
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %19, i64 0, i32 7
  %22 = select i1 %17, %"class.blink::Length"* %20, %"class.blink::Length"* %21
  %23 = tail call i32 @_ZNK5blink9LayoutBox27ComputeContentLogicalHeightENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %10, i32 1, %"class.blink::Length"* dereferenceable(8) %22, i32 -64) #18
  %24 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %2, align 8
  %25 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %24, i64 0, i32 11
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %24, i64 0, i32 6
  %29 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %24, i64 0, i32 7
  %30 = select i1 %27, %"class.WTF::Vector"* %28, %"class.WTF::Vector"* %29
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %30, i64 0, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = icmp eq i32 %34, 0
  br i1 %36, label %87, label %37

37:                                               ; preds = %7
  %38 = shl nuw nsw i64 %35, 7
  %39 = add nsw i64 %38, -128
  %40 = lshr exact i64 %39, 7
  %41 = add nuw nsw i64 %40, 1
  %42 = and i64 %41, 1
  %43 = icmp eq i64 %39, 0
  br i1 %43, label %67, label %44

44:                                               ; preds = %37
  %45 = sub nuw nsw i64 %41, %42
  br label %46

46:                                               ; preds = %117, %44
  %47 = phi %"class.blink::GridTrack"* [ %32, %44 ], [ %125, %117 ]
  %48 = phi i32 [ 0, %44 ], [ %124, %117 ]
  %49 = phi i64 [ %45, %44 ], [ %126, %117 ]
  %50 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %47, i64 0, i32 1, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, -64
  br i1 %52, label %53, label %56

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %47, i64 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 8
  br label %56

56:                                               ; preds = %53, %46
  %57 = phi i32 [ %55, %53 ], [ %51, %46 ]
  %58 = icmp slt i32 %57, 0
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %48, i32 %57) #18
  %61 = extractvalue { i32, i1 } %60, 1
  %62 = extractvalue { i32, i1 } %60, 0
  %63 = select i1 %61, i32 %59, i32 %62, !prof !3
  %64 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %47, i64 1, i32 1, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, -64
  br i1 %66, label %114, label %117

67:                                               ; preds = %117, %37
  %68 = phi i32 [ undef, %37 ], [ %124, %117 ]
  %69 = phi %"class.blink::GridTrack"* [ %32, %37 ], [ %125, %117 ]
  %70 = phi i32 [ 0, %37 ], [ %124, %117 ]
  %71 = icmp eq i64 %42, 0
  br i1 %71, label %87, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %69, i64 0, i32 1, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, -64
  br i1 %75, label %76, label %79

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %69, i64 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  br label %79

79:                                               ; preds = %76, %72
  %80 = phi i32 [ %78, %76 ], [ %74, %72 ]
  %81 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %70, i32 %80) #18
  %82 = extractvalue { i32, i1 } %81, 1
  %83 = icmp slt i32 %80, 0
  %84 = select i1 %83, i32 -2147483648, i32 2147483647
  %85 = extractvalue { i32, i1 } %81, 0
  %86 = select i1 %82, i32 %84, i32 %85, !prof !3
  br label %87

87:                                               ; preds = %79, %67, %7
  %88 = phi i32 [ 0, %7 ], [ %68, %67 ], [ %86, %79 ]
  %89 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %24, i64 0, i32 13
  %90 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %24, i64 0, i32 12
  %92 = load %"class.blink::Grid"*, %"class.blink::Grid"** %91, align 8
  %93 = icmp eq i32 %26, 1
  %94 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %24, i64 0, i32 3
  %95 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %24, i64 0, i32 2
  %96 = select i1 %93, %"class.absl::optional"* %94, %"class.absl::optional"* %95
  %97 = bitcast %"class.absl::optional"* %96 to i64*
  %98 = load i64, i64* %97, align 4
  %99 = tail call i32 @_ZNK5blink10LayoutGrid11GuttersSizeERKNS_4GridENS_24GridTrackSizingDirectionEmmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %90, %"class.blink::Grid"* dereferenceable(168) %92, i32 %26, i64 0, i64 %35, i64 %98) #18
  %100 = icmp slt i32 %99, 0
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %88, i32 %99) #18
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %101, i32 %104, !prof !3
  %106 = icmp sgt i32 %105, -1
  %107 = select i1 %106, i32 -2147483648, i32 2147483647
  %108 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %23, i32 %105) #18
  %109 = extractvalue { i32, i1 } %108, 1
  %110 = extractvalue { i32, i1 } %108, 0
  %111 = select i1 %109, i32 %107, i32 %110, !prof !3
  br label %112

112:                                              ; preds = %1, %87
  %113 = phi i32 [ %111, %87 ], [ 0, %1 ]
  ret i32 %113

114:                                              ; preds = %56
  %115 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %47, i64 1, i32 0, i32 0
  %116 = load i32, i32* %115, align 8
  br label %117

117:                                              ; preds = %114, %56
  %118 = phi i32 [ %116, %114 ], [ %65, %56 ]
  %119 = icmp slt i32 %118, 0
  %120 = select i1 %119, i32 -2147483648, i32 2147483647
  %121 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %63, i32 %118) #18
  %122 = extractvalue { i32, i1 } %121, 1
  %123 = extractvalue { i32, i1 } %121, 0
  %124 = select i1 %122, i32 %120, i32 %123, !prof !3
  %125 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %47, i64 2
  %126 = add i64 %49, -2
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %67, label %46
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink22IndefiniteSizeStrategy18MinContentForChildERNS_9LayoutBoxE(%"class.blink::IndefiniteSizeStrategy"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::IndefiniteSizeStrategy", %"class.blink::IndefiniteSizeStrategy"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %4, i64 0, i32 13
  %6 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %5, align 8
  %7 = tail call i32 @_ZN5blink15GridLayoutUtils26FlowAwareDirectionForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %6, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0) #18
  %8 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %9 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %7
  %12 = icmp eq i32 %10, 1
  %13 = or i1 %11, %12
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::IndefiniteSizeStrategy", %"class.blink::IndefiniteSizeStrategy"* %0, i64 0, i32 0
  %16 = tail call i32 @_ZNK5blink32GridTrackSizingAlgorithmStrategy18MinContentForChildERNS_9LayoutBoxE(%"class.blink::GridTrackSizingAlgorithmStrategy"* %15, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  br label %51

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = load i160, i160* %21, align 8
  %23 = and i160 %22, 15211807202738752817960438464512
  %24 = icmp eq i160 %23, 0
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %26 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %27 = load i32, i32* %25, align 4
  %28 = load i32, i32* %26, align 4
  %29 = select i1 %24, i32 %27, i32 %28
  %30 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %8, i64 0, i32 13
  %31 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %30, align 8
  %32 = tail call i32 @_ZN5blink15GridLayoutUtils27MarginLogicalHeightForChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %31, %"class.blink::LayoutBox"* dereferenceable(216) %1) #18
  %33 = icmp slt i32 %32, 0
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %29, i32 %32) #18
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = select i1 %36, i32 %34, i32 %37, !prof !3
  %39 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %40 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %39, i64 0, i32 11
  %41 = load i32, i32* %40, align 8
  %42 = icmp ne i32 %41, 0
  %43 = zext i1 %42 to i32
  %44 = tail call i32 @_ZNK5blink24GridTrackSizingAlgorithm22BaselineOffsetForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"* %39, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %43)
  %45 = icmp slt i32 %44, 0
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %44) #18
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !3
  br label %51

51:                                               ; preds = %17, %14
  %52 = phi i32 [ %16, %14 ], [ %50, %17 ]
  ret i32 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink22IndefiniteSizeStrategy18MaxContentForChildERNS_9LayoutBoxE(%"class.blink::IndefiniteSizeStrategy"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::IndefiniteSizeStrategy", %"class.blink::IndefiniteSizeStrategy"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %4, i64 0, i32 13
  %6 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %5, align 8
  %7 = tail call i32 @_ZN5blink15GridLayoutUtils26FlowAwareDirectionForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %6, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0) #18
  %8 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %9 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %7
  %12 = icmp eq i32 %10, 1
  %13 = or i1 %11, %12
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::IndefiniteSizeStrategy", %"class.blink::IndefiniteSizeStrategy"* %0, i64 0, i32 0
  %16 = tail call i32 @_ZNK5blink32GridTrackSizingAlgorithmStrategy18MaxContentForChildERNS_9LayoutBoxE(%"class.blink::GridTrackSizingAlgorithmStrategy"* %15, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  br label %51

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = load i160, i160* %21, align 8
  %23 = and i160 %22, 15211807202738752817960438464512
  %24 = icmp eq i160 %23, 0
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %26 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %27 = load i32, i32* %25, align 4
  %28 = load i32, i32* %26, align 4
  %29 = select i1 %24, i32 %27, i32 %28
  %30 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %8, i64 0, i32 13
  %31 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %30, align 8
  %32 = tail call i32 @_ZN5blink15GridLayoutUtils27MarginLogicalHeightForChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %31, %"class.blink::LayoutBox"* dereferenceable(216) %1) #18
  %33 = icmp slt i32 %32, 0
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %29, i32 %32) #18
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = select i1 %36, i32 %34, i32 %37, !prof !3
  %39 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  %40 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %39, i64 0, i32 11
  %41 = load i32, i32* %40, align 8
  %42 = icmp ne i32 %41, 0
  %43 = zext i1 %42 to i32
  %44 = tail call i32 @_ZNK5blink24GridTrackSizingAlgorithm22BaselineOffsetForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"* %39, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %43)
  %45 = icmp slt i32 %44, 0
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %44) #18
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !3
  br label %51

51:                                               ; preds = %17, %14
  %52 = phi i32 [ %16, %14 ], [ %50, %17 ]
  ret i32 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink22IndefiniteSizeStrategy26IsComputingSizeContainmentEv(%"class.blink::IndefiniteSizeStrategy"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::IndefiniteSizeStrategy", %"class.blink::IndefiniteSizeStrategy"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %3, i64 0, i32 13
  %5 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %14, i64 0, i32 45
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 24
  %18 = icmp eq i32 %17, 24
  br i1 %18, label %19, label %67

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %21 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %20 to i96*
  %22 = load i96, i96* %21, align 4
  %23 = and i96 %22, 1207959552
  %24 = icmp eq i96 %23, 134217728
  br i1 %24, label %67, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.blink::LayoutGrid"* %5 to i1 (%"class.blink::LayoutObject"*, i32)***
  %27 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %27, i64 92
  %29 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::LayoutObject"* %6, i32 43) #18
  br i1 %30, label %67, label %31

31:                                               ; preds = %25
  %32 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %26, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %32, i64 92
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::LayoutObject"* %6, i32 46) #18
  br i1 %35, label %56, label %36

36:                                               ; preds = %31
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %26, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %37, i64 92
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::LayoutObject"* %6, i32 48) #18
  br i1 %40, label %56, label %41

41:                                               ; preds = %36
  %42 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %26, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %42, i64 92
  %44 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::LayoutObject"* %6, i32 45) #18
  br i1 %45, label %56, label %46

46:                                               ; preds = %41
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %26, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %47, i64 92
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.blink::LayoutObject"* %6, i32 49) #18
  br i1 %50, label %56, label %51

51:                                               ; preds = %46
  %52 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %26, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, i64 92
  %54 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::LayoutObject"* %6, i32 50) #18
  br i1 %55, label %56, label %61

56:                                               ; preds = %51, %46, %41, %36, %31
  %57 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %26, align 8
  %58 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %57, i64 92
  %59 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %58, align 8
  %60 = tail call zeroext i1 %59(%"class.blink::LayoutObject"* %6, i32 45) #18
  br i1 %60, label %61, label %67

61:                                               ; preds = %56, %51
  %62 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %26, align 8
  %63 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %62, i64 92
  %64 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %63, align 8
  %65 = tail call zeroext i1 %64(%"class.blink::LayoutObject"* %6, i32 44) #18
  %66 = xor i1 %65, true
  br label %67

67:                                               ; preds = %1, %19, %25, %56, %61
  %68 = phi i1 [ false, %1 ], [ false, %56 ], [ false, %25 ], [ %66, %61 ], [ false, %19 ]
  ret i1 %68
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink24GridTrackSizingAlgorithm14AvailableSpaceEv(%"class.blink::GridTrackSizingAlgorithm"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %7 = select i1 %4, %"class.absl::optional"* %5, %"class.absl::optional"* %6
  %8 = bitcast %"class.absl::optional"* %7 to i64*
  %9 = load i64, i64* %8, align 4
  ret i64 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink24GridTrackSizingAlgorithm17SetAvailableSpaceENS_24GridTrackSizingDirectionEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"* nocapture, i32, i64) local_unnamed_addr #4 align 2 {
  %4 = icmp eq i32 %1, 0
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %7 = select i1 %4, %"class.absl::optional"* %6, %"class.absl::optional"* %5
  %8 = bitcast %"class.absl::optional"* %7 to i64*
  store i64 %2, i64* %8, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink24GridTrackSizingAlgorithm12SetFreeSpaceENS_24GridTrackSizingDirectionEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"* nocapture, i32, i64) local_unnamed_addr #4 align 2 {
  %4 = icmp eq i32 %1, 0
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 4
  %7 = select i1 %4, %"class.absl::optional"* %6, %"class.absl::optional"* %5
  %8 = bitcast %"class.absl::optional"* %7 to i64*
  store i64 %2, i64* %8, align 4
  ret void
}

declare dereferenceable(16) %"class.WTF::Vector.428"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"*) local_unnamed_addr #8

declare i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"*, i32) local_unnamed_addr #8

declare i64 @_ZNK5blink4Grid17ExplicitGridStartENS_24GridTrackSizingDirectionE(%"class.blink::Grid"*, i32) local_unnamed_addr #8

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink24GridTrackSizingAlgorithm26IsRelativeSizedTrackAsAutoERKNS_13GridTrackSizeENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* nocapture readonly, %"class.blink::GridTrackSize"* nocapture readonly dereferenceable(88), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 2, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 2, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  switch i8 %9, label %19 [
    i8 8, label %10
    i8 1, label %10
  ]

10:                                               ; preds = %7, %7
  %11 = icmp eq i32 %2, 1
  %12 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %14 = select i1 %11, %"class.absl::optional"* %12, %"class.absl::optional"* %13
  %15 = bitcast %"class.absl::optional"* %14 to i64*
  %16 = load i64, i64* %15, align 4
  %17 = trunc i64 %16 to i8
  %18 = icmp eq i8 %17, 0
  br label %35

19:                                               ; preds = %7, %3
  %20 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 3, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 3, i32 0, i32 2
  %25 = load i8, i8* %24, align 1
  switch i8 %25, label %35 [
    i8 8, label %26
    i8 1, label %26
  ]

26:                                               ; preds = %23, %23
  %27 = icmp eq i32 %2, 1
  %28 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %29 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %30 = select i1 %27, %"class.absl::optional"* %28, %"class.absl::optional"* %29
  %31 = bitcast %"class.absl::optional"* %30 to i64*
  %32 = load i64, i64* %31, align 4
  %33 = trunc i64 %32 to i8
  %34 = icmp eq i8 %33, 0
  br label %35

35:                                               ; preds = %23, %19, %26, %10
  %36 = phi i1 [ false, %23 ], [ %18, %10 ], [ %34, %26 ], [ false, %19 ]
  ret i1 %36
}

declare zeroext i1 @_ZNK5blink4Grid24HasAutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"*, i32) local_unnamed_addr #8

declare zeroext i1 @_ZNK5blink4Grid22IsEmptyAutoRepeatTrackENS_24GridTrackSizingDirectionEm(%"class.blink::Grid"*, i32, i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink24GridTrackSizingAlgorithm15InitialBaseSizeERKNS_13GridTrackSizeE(%"class.blink::GridTrackSizingAlgorithm"* nocapture readonly, %"class.blink::GridTrackSize"* dereferenceable(88)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 2, i32 0, i32 2
  %4 = load i8, i8* %3, align 1
  switch i8 %4, label %21 [
    i8 2, label %5
    i8 1, label %5
    i8 8, label %5
  ]

5:                                                ; preds = %2, %2, %2
  %6 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 2, i32 0
  %7 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  %10 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %12 = select i1 %9, %"class.absl::optional"* %10, %"class.absl::optional"* %11
  %13 = bitcast %"class.absl::optional"* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = trunc i32 %14 to i8
  %18 = icmp eq i8 %17, 0
  %19 = select i1 %18, i32 0, i32 %16
  %20 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %6, i32 %19) #18
  br label %21

21:                                               ; preds = %2, %5
  %22 = phi i32 [ %20, %5 ], [ 0, %2 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink24GridTrackSizingAlgorithm18InitialGrowthLimitERKNS_13GridTrackSizeENS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithm"* nocapture readonly, %"class.blink::GridTrackSize"* dereferenceable(88), i32) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 3, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %26, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 3, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  switch i8 %9, label %26 [
    i8 2, label %10
    i8 1, label %10
    i8 8, label %10
  ]

10:                                               ; preds = %7, %7, %7
  %11 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 3, i32 0
  %12 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 1
  %15 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %17 = select i1 %14, %"class.absl::optional"* %15, %"class.absl::optional"* %16
  %18 = bitcast %"class.absl::optional"* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = trunc i32 %19 to i8
  %23 = icmp eq i8 %22, 0
  %24 = select i1 %23, i32 0, i32 %21
  %25 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %11, i32 %24) #18
  br label %26

26:                                               ; preds = %7, %3, %10
  %27 = phi i32 [ %25, %10 ], [ %2, %3 ], [ -64, %7 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24GridTrackSizingAlgorithm20InitializeTrackSizesEv(%"class.blink::GridTrackSizingAlgorithm"*) local_unnamed_addr #3 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::GridTrackSize", align 8
  %6 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %11 = select i1 %8, %"class.WTF::Vector"* %9, %"class.WTF::Vector"* %10
  %12 = icmp eq i32 %7, 1
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 13
  %15 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK5blink10LayoutGrid30CachedHasDefiniteLogicalHeightEv(%"class.blink::LayoutGrid"* %15) #18
  br label %17

17:                                               ; preds = %13, %1
  %18 = phi i1 [ true, %1 ], [ %16, %13 ]
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %11, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #18
  store i64 0, i64* %4, align 8
  %23 = icmp eq i32 %20, 0
  br i1 %23, label %55, label %24

24:                                               ; preds = %17
  %25 = bitcast %"class.blink::GridTrackSize"* %5 to i8*
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 2, i32 0, i32 2
  %27 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 2, i32 0
  %28 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %29 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %30 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 3, i32 2
  %31 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 3, i32 0, i32 2
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 3, i32 0
  %33 = bitcast i32* %2 to i8*
  %34 = bitcast i32* %2 to %"class.blink::LayoutUnit"*
  %35 = bitcast i32* %3 to i8*
  %36 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %37 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 0
  %38 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 4, i32 0
  %39 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 2, i32 2
  %40 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8
  %41 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %42 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %40, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 9
  %45 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %46 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %44, i64 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 5
  %49 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 10
  %50 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %51 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %49, i64 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 1
  %54 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 4, i32 0, i32 2
  br label %56

55:                                               ; preds = %237, %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #18
  ret void

56:                                               ; preds = %24, %237
  %57 = phi i64 [ 0, %24 ], [ %239, %237 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %25) #18
  %58 = load i32, i32* %6, align 8
  call void @_ZNK5blink24GridTrackSizingAlgorithm22CalculateGridTrackSizeENS_24GridTrackSizingDirectionEm(%"class.blink::GridTrackSize"* nonnull sret %5, %"class.blink::GridTrackSizingAlgorithm"* %0, i32 %58, i64 %57)
  %59 = load i64, i64* %4, align 8
  %60 = trunc i64 %59 to i32
  %61 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %11, i32 %60) #18
  call void @_ZN5blink9GridTrack18SetCachedTrackSizeERKNS_13GridTrackSizeE(%"class.blink::GridTrack"* %61, %"class.blink::GridTrackSize"* nonnull dereferenceable(88) %5)
  %62 = load i8, i8* %26, align 1
  switch i8 %62, label %75 [
    i8 2, label %63
    i8 1, label %63
    i8 8, label %63
  ]

63:                                               ; preds = %56, %56, %56
  %64 = load i32, i32* %6, align 8
  %65 = icmp eq i32 %64, 1
  %66 = select i1 %65, %"class.absl::optional"* %28, %"class.absl::optional"* %29
  %67 = bitcast %"class.absl::optional"* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %66, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = trunc i32 %68 to i8
  %72 = icmp eq i8 %71, 0
  %73 = select i1 %72, i32 0, i32 %70
  %74 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %27, i32 %73) #18
  br label %75

75:                                               ; preds = %56, %63
  %76 = phi i32 [ %74, %63 ], [ 0, %56 ]
  %77 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %61, i64 0, i32 0, i32 0
  store i32 %76, i32* %77, align 8
  %78 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %61, i64 0, i32 1, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp ne i32 %79, -64
  %81 = icmp slt i32 %79, %76
  %82 = and i1 %80, %81
  br i1 %82, label %83, label %84

83:                                               ; preds = %75
  store i32 %76, i32* %78, align 4
  br label %84

84:                                               ; preds = %75, %83
  %85 = load i32, i32* %30, align 8
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %102, label %87

87:                                               ; preds = %84
  %88 = load i8, i8* %31, align 1
  switch i8 %88, label %89 [
    i8 2, label %90
    i8 1, label %90
    i8 8, label %90
  ]

89:                                               ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33)
  store i32 -64, i32* %2, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35)
  br label %115

90:                                               ; preds = %87, %87, %87
  %91 = load i32, i32* %6, align 8
  %92 = icmp eq i32 %91, 1
  %93 = select i1 %92, %"class.absl::optional"* %28, %"class.absl::optional"* %29
  %94 = bitcast %"class.absl::optional"* %93 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %93, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = trunc i32 %95 to i8
  %99 = icmp eq i8 %98, 0
  %100 = select i1 %99, i32 0, i32 %97
  %101 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %32, i32 %100) #18
  br label %102

102:                                              ; preds = %84, %90
  %103 = phi i32 [ %101, %90 ], [ %76, %84 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33)
  store i32 %103, i32* %2, align 4
  %104 = icmp eq i32 %103, -64
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35)
  br i1 %104, label %115, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %61, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %107 = load i8, i8* %106, align 4, !range !2
  %108 = icmp eq i8 %107, 0
  %109 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %61, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %110 = select i1 %108, %"class.blink::LayoutUnit"* %34, %"class.blink::LayoutUnit"* %109
  %111 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %110, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  store i32 %112, i32* %3, align 4
  %113 = icmp slt i32 %112, %103
  %114 = select i1 %113, %"class.blink::LayoutUnit"* %36, %"class.blink::LayoutUnit"* %34
  br label %115

115:                                              ; preds = %89, %105, %102
  %116 = phi %"class.blink::LayoutUnit"* [ %114, %105 ], [ %34, %102 ], [ %34, %89 ]
  %117 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %116, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  store i32 %118, i32* %78, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35)
  %119 = icmp eq i32 %118, -64
  br i1 %119, label %124, label %120

120:                                              ; preds = %115
  %121 = load i32, i32* %77, align 4
  %122 = icmp slt i32 %118, %121
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  store i32 %121, i32* %78, align 4
  br label %124

124:                                              ; preds = %115, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33)
  %125 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %61, i64 0, i32 5
  store i8 0, i8* %125, align 8
  %126 = load i32, i32* %37, align 8
  %127 = icmp eq i32 %126, 2
  br i1 %127, label %128, label %145

128:                                              ; preds = %124
  %129 = load i32, i32* %6, align 8
  %130 = icmp eq i32 %129, 1
  %131 = select i1 %130, %"class.absl::optional"* %28, %"class.absl::optional"* %29
  %132 = bitcast %"class.absl::optional"* %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %131, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = trunc i32 %133 to i8
  %137 = icmp eq i8 %136, 0
  %138 = select i1 %137, i32 0, i32 %135
  %139 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %38, i32 %138) #18
  %140 = zext i32 %139 to i64
  %141 = shl nuw i64 %140, 32
  %142 = or i64 %141, 1
  %143 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %61, i64 0, i32 4
  %144 = bitcast %"class.absl::optional"* %143 to i64*
  store i64 %142, i64* %144, align 8
  br label %145

145:                                              ; preds = %128, %124
  %146 = load i32, i32* %39, align 8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %150

148:                                              ; preds = %145
  %149 = load i8, i8* %26, align 1
  switch i8 %149, label %150 [
    i8 0, label %155
    i8 3, label %155
    i8 4, label %155
  ]

150:                                              ; preds = %148, %145
  %151 = load i32, i32* %30, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %169

153:                                              ; preds = %150
  %154 = load i8, i8* %31, align 1
  switch i8 %154, label %184 [
    i8 0, label %155
    i8 3, label %155
    i8 4, label %155
  ]

155:                                              ; preds = %148, %148, %148, %153, %153, %153
  %156 = load i32, i32* %41, align 4
  %157 = load i32, i32* %42, align 8
  %158 = icmp eq i32 %156, %157
  br i1 %158, label %166, label %159, !prof !3

159:                                              ; preds = %155
  %160 = load i64*, i64** %43, align 8
  %161 = zext i32 %156 to i64
  %162 = getelementptr inbounds i64, i64* %160, i64 %161
  %163 = load i64, i64* %4, align 8
  store i64 %163, i64* %162, align 8
  %164 = load i32, i32* %41, align 4
  %165 = add i32 %164, 1
  store i32 %165, i32* %41, align 4
  br label %167

166:                                              ; preds = %155
  call void @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRmEEvOT_(%"class.WTF::Vector.6"* %40, i64* nonnull dereferenceable(8) %4) #18
  br label %167

167:                                              ; preds = %159, %166
  %168 = load i32, i32* %30, align 8
  br label %169

169:                                              ; preds = %167, %150
  %170 = phi i32 [ %168, %167 ], [ %151, %150 ]
  %171 = icmp eq i32 %170, 1
  br i1 %171, label %172, label %184

172:                                              ; preds = %169
  %173 = load i32, i32* %45, align 4
  %174 = load i32, i32* %46, align 8
  %175 = icmp eq i32 %173, %174
  br i1 %175, label %183, label %176, !prof !3

176:                                              ; preds = %172
  %177 = load i64*, i64** %47, align 8
  %178 = zext i32 %173 to i64
  %179 = getelementptr inbounds i64, i64* %177, i64 %178
  %180 = load i64, i64* %4, align 8
  store i64 %180, i64* %179, align 8
  %181 = load i32, i32* %45, align 4
  %182 = add i32 %181, 1
  store i32 %182, i32* %45, align 4
  br label %184

183:                                              ; preds = %172
  call void @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRmEEvOT_(%"class.WTF::Vector.6"* %44, i64* nonnull dereferenceable(8) %4) #18
  br label %184

184:                                              ; preds = %153, %183, %176, %169
  %185 = load i16, i16* %48, align 8
  %186 = and i16 %185, 2
  %187 = icmp eq i16 %186, 0
  %188 = load i32, i32* %37, align 8
  %189 = icmp eq i32 %188, 2
  %190 = or i1 %187, %189
  br i1 %190, label %203, label %191

191:                                              ; preds = %184
  %192 = load i32, i32* %50, align 4
  %193 = load i32, i32* %51, align 8
  %194 = icmp eq i32 %192, %193
  br i1 %194, label %202, label %195, !prof !3

195:                                              ; preds = %191
  %196 = load i64*, i64** %52, align 8
  %197 = zext i32 %192 to i64
  %198 = getelementptr inbounds i64, i64* %196, i64 %197
  %199 = load i64, i64* %4, align 8
  store i64 %199, i64* %198, align 8
  %200 = load i32, i32* %50, align 4
  %201 = add i32 %200, 1
  store i32 %201, i32* %50, align 4
  br label %203

202:                                              ; preds = %191
  call void @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRmEEvOT_(%"class.WTF::Vector.6"* %49, i64* nonnull dereferenceable(8) %4) #18
  br label %203

203:                                              ; preds = %184, %202, %195
  %204 = load i8, i8* %53, align 1, !range !2
  %205 = icmp ne i8 %204, 0
  %206 = or i1 %18, %205
  br i1 %206, label %225, label %207

207:                                              ; preds = %203
  %208 = load i32, i32* %6, align 8
  %209 = load i64, i64* %4, align 8
  %210 = call dereferenceable(88) %"class.blink::GridTrackSize"* @_ZNK5blink24GridTrackSizingAlgorithm16RawGridTrackSizeENS_24GridTrackSizingDirectionEm(%"class.blink::GridTrackSizingAlgorithm"* %0, i32 %208, i64 %209)
  %211 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %210, i64 0, i32 2, i32 2
  %212 = load i32, i32* %211, align 8
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %207
  %215 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %210, i64 0, i32 2, i32 0, i32 2
  %216 = load i8, i8* %215, align 1
  switch i8 %216, label %217 [
    i8 8, label %224
    i8 1, label %224
  ]

217:                                              ; preds = %214, %207
  %218 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %210, i64 0, i32 3, i32 2
  %219 = load i32, i32* %218, align 8
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %225

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %210, i64 0, i32 3, i32 0, i32 2
  %223 = load i8, i8* %222, align 1
  switch i8 %223, label %225 [
    i8 8, label %224
    i8 1, label %224
  ]

224:                                              ; preds = %221, %221, %214, %214
  store i8 1, i8* %53, align 1
  br label %225

225:                                              ; preds = %221, %217, %224, %203
  %226 = load i8, i8* %54, align 1
  %227 = icmp eq i8 %226, 8
  br i1 %227, label %228, label %229

228:                                              ; preds = %225
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %38) #18
  br label %229

229:                                              ; preds = %228, %225
  %230 = load i8, i8* %31, align 1
  %231 = icmp eq i8 %230, 8
  br i1 %231, label %232, label %233

232:                                              ; preds = %229
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %32) #18
  br label %233

233:                                              ; preds = %232, %229
  %234 = load i8, i8* %26, align 1
  %235 = icmp eq i8 %234, 8
  br i1 %235, label %236, label %237

236:                                              ; preds = %233
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %27) #18
  br label %237

237:                                              ; preds = %233, %236
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %25) #18
  %238 = load i64, i64* %4, align 8
  %239 = add i64 %238, 1
  store i64 %239, i64* %4, align 8
  %240 = icmp ult i64 %239, %21
  br i1 %240, label %56, label %55
}

declare zeroext i1 @_ZNK5blink10LayoutGrid30CachedHasDefiniteLogicalHeightEv(%"class.blink::LayoutGrid"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24GridTrackSizingAlgorithm29SizeTrackToFitNonSpanningItemERKNS_8GridSpanERNS_9LayoutBoxERNS_9GridTrackE(%"class.blink::GridTrackSizingAlgorithm"*, %"struct.blink::GridSpan"* nocapture readonly dereferenceable(12), %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::GridTrack"* nocapture dereferenceable(128)) local_unnamed_addr #3 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"struct.blink::GridSpan", %"struct.blink::GridSpan"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %15 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %16 = select i1 %13, %"class.WTF::Vector"* %14, %"class.WTF::Vector"* %15
  %17 = tail call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %16, i32 %10) #18
  %18 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %17, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %4
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #19
  unreachable

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %17, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  %24 = load i16, i16* %23, align 8
  %25 = and i16 %24, 1024
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %45, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %3, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %31 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %30, align 8
  %32 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %31 to i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)***
  %33 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*** %32, align 8
  %34 = getelementptr inbounds i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %33, i64 2
  %35 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %34, align 8
  %36 = tail call i32 %35(%"class.blink::GridTrackSizingAlgorithmStrategy"* %31, %"class.blink::LayoutBox"* dereferenceable(216) %2) #18
  %37 = icmp slt i32 %29, %36
  %38 = select i1 %37, i32 %36, i32 %29
  store i32 %38, i32* %28, align 8
  %39 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %3, i64 0, i32 1, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp ne i32 %40, -64
  %42 = icmp slt i32 %40, %38
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %83

44:                                               ; preds = %27
  store i32 %38, i32* %39, align 4
  br label %83

45:                                               ; preds = %22
  %46 = and i16 %24, 256
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %66, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %3, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %52 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %51, align 8
  %53 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %52 to i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)***
  %54 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*** %53, align 8
  %55 = getelementptr inbounds i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %54, i64 3
  %56 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %55, align 8
  %57 = tail call i32 %56(%"class.blink::GridTrackSizingAlgorithmStrategy"* %52, %"class.blink::LayoutBox"* dereferenceable(216) %2) #18
  %58 = icmp slt i32 %50, %57
  %59 = select i1 %58, i32 %57, i32 %50
  store i32 %59, i32* %49, align 8
  %60 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %3, i64 0, i32 1, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp ne i32 %61, -64
  %63 = icmp slt i32 %61, %59
  %64 = and i1 %62, %63
  br i1 %64, label %65, label %83

65:                                               ; preds = %48
  store i32 %59, i32* %60, align 4
  br label %83

66:                                               ; preds = %45
  %67 = and i16 %24, 1
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %83, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %3, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %73 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %72, align 8
  %74 = tail call i32 @_ZNK5blink32GridTrackSizingAlgorithmStrategy15MinSizeForChildERNS_9LayoutBoxE(%"class.blink::GridTrackSizingAlgorithmStrategy"* %73, %"class.blink::LayoutBox"* dereferenceable(216) %2)
  %75 = icmp slt i32 %71, %74
  %76 = select i1 %75, i32 %74, i32 %71
  store i32 %76, i32* %70, align 8
  %77 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %3, i64 0, i32 1, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp ne i32 %78, -64
  %80 = icmp slt i32 %78, %76
  %81 = and i1 %79, %80
  br i1 %81, label %82, label %83

82:                                               ; preds = %69
  store i32 %76, i32* %77, align 4
  br label %83

83:                                               ; preds = %65, %48, %44, %27, %82, %69, %66
  %84 = load i16, i16* %23, align 8
  %85 = and i16 %84, 2048
  %86 = icmp eq i16 %85, 0
  br i1 %86, label %124, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %3, i64 0, i32 1, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %91 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %90, align 8
  %92 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %91 to i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)***
  %93 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*** %92, align 8
  %94 = getelementptr inbounds i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %93, i64 2
  %95 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %94, align 8
  %96 = tail call i32 %95(%"class.blink::GridTrackSizingAlgorithmStrategy"* %91, %"class.blink::LayoutBox"* dereferenceable(216) %2) #18
  %97 = icmp slt i32 %89, %96
  %98 = select i1 %97, i32 %96, i32 %89
  %99 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %99)
  %100 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  store i32 %98, i32* %5, align 4
  %101 = icmp eq i32 %98, -64
  %102 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %102)
  br i1 %101, label %114, label %103

103:                                              ; preds = %87
  %104 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %105 = load i8, i8* %104, align 4, !range !2
  %106 = icmp eq i8 %105, 0
  %107 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %108 = select i1 %106, %"class.blink::LayoutUnit"* %100, %"class.blink::LayoutUnit"* %107
  %109 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %108, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  store i32 %110, i32* %6, align 4
  %111 = icmp slt i32 %110, %98
  %112 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %113 = select i1 %111, %"class.blink::LayoutUnit"* %112, %"class.blink::LayoutUnit"* %100
  br label %114

114:                                              ; preds = %103, %87
  %115 = phi %"class.blink::LayoutUnit"* [ %113, %103 ], [ %100, %87 ]
  %116 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %115, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  store i32 %117, i32* %88, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102)
  %118 = icmp eq i32 %117, -64
  br i1 %118, label %186, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %3, i64 0, i32 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp slt i32 %117, %121
  br i1 %122, label %123, label %186

123:                                              ; preds = %119
  store i32 %121, i32* %88, align 4
  br label %186

124:                                              ; preds = %83
  %125 = and i16 %84, 514
  %126 = icmp eq i16 %125, 0
  br i1 %126, label %188, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %129 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %128, align 8
  %130 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %129 to i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)***
  %131 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*** %130, align 8
  %132 = getelementptr inbounds i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %131, i64 3
  %133 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %132, align 8
  %134 = tail call i32 %133(%"class.blink::GridTrackSizingAlgorithmStrategy"* %129, %"class.blink::LayoutBox"* dereferenceable(216) %2) #18
  %135 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %17, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %136, 2
  br i1 %137, label %138, label %155

138:                                              ; preds = %127
  %139 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %17, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0
  %140 = load i32, i32* %11, align 8
  %141 = icmp eq i32 %140, 1
  %142 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %143 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %144 = select i1 %141, %"class.absl::optional"* %142, %"class.absl::optional"* %143
  %145 = bitcast %"class.absl::optional"* %144 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %144, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = trunc i32 %146 to i8
  %150 = icmp eq i8 %149, 0
  %151 = select i1 %150, i32 0, i32 %148
  %152 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %139, i32 %151) #18
  %153 = icmp slt i32 %152, %134
  %154 = select i1 %153, i32 %152, i32 %134
  br label %155

155:                                              ; preds = %138, %127
  %156 = phi i32 [ %154, %138 ], [ %134, %127 ]
  %157 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %3, i64 0, i32 1, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = icmp slt i32 %158, %156
  %160 = select i1 %159, i32 %156, i32 %158
  %161 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %161)
  %162 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  store i32 %160, i32* %7, align 4
  %163 = icmp eq i32 %160, -64
  %164 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %164)
  br i1 %163, label %176, label %165

165:                                              ; preds = %155
  %166 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %167 = load i8, i8* %166, align 4, !range !2
  %168 = icmp eq i8 %167, 0
  %169 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %170 = select i1 %168, %"class.blink::LayoutUnit"* %162, %"class.blink::LayoutUnit"* %169
  %171 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %170, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  store i32 %172, i32* %8, align 4
  %173 = icmp slt i32 %172, %160
  %174 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  %175 = select i1 %173, %"class.blink::LayoutUnit"* %174, %"class.blink::LayoutUnit"* %162
  br label %176

176:                                              ; preds = %165, %155
  %177 = phi %"class.blink::LayoutUnit"* [ %175, %165 ], [ %162, %155 ]
  %178 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %177, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  store i32 %179, i32* %157, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %164)
  %180 = icmp eq i32 %179, -64
  br i1 %180, label %186, label %181

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %3, i64 0, i32 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = icmp slt i32 %179, %183
  br i1 %184, label %185, label %186

185:                                              ; preds = %181
  store i32 %183, i32* %157, align 4
  br label %186

186:                                              ; preds = %185, %181, %176, %123, %119, %114
  %187 = phi i8* [ %99, %114 ], [ %99, %119 ], [ %99, %123 ], [ %161, %176 ], [ %161, %181 ], [ %161, %185 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %187)
  br label %188

188:                                              ; preds = %186, %124
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink24GridTrackSizingAlgorithm38SpanningItemCrossesFlexibleSizedTracksERKNS_8GridSpanE(%"class.blink::GridTrackSizingAlgorithm"*, %"struct.blink::GridSpan"* nocapture readonly dereferenceable(12)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %7 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %8 = select i1 %5, %"class.WTF::Vector"* %6, %"class.WTF::Vector"* %7
  %9 = getelementptr inbounds %"struct.blink::GridSpan", %"struct.blink::GridSpan"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.blink::GridSpan", %"struct.blink::GridSpan"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = icmp eq i32 %10, %12
  br i1 %14, label %36, label %15

15:                                               ; preds = %2
  %16 = sext i32 %10 to i64
  br label %19

17:                                               ; preds = %31
  %18 = icmp eq i64 %35, %13
  br i1 %18, label %36, label %19

19:                                               ; preds = %15, %17
  %20 = phi i64 [ %35, %17 ], [ %16, %15 ]
  %21 = trunc i64 %20 to i32
  %22 = tail call dereferenceable(128) %"class.blink::GridTrack"* @_ZNK3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 %21) #18
  %23 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %22, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %19
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #19
  unreachable

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %22, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %22, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 1
  %35 = add i64 %20, 1
  br i1 %34, label %36, label %17

36:                                               ; preds = %27, %31, %17, %2
  %37 = phi i1 [ false, %2 ], [ false, %17 ], [ true, %31 ], [ true, %27 ]
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink24GridTrackSizingAlgorithm36ItemSizeForTrackSizeComputationPhaseENS_25TrackSizeComputationPhaseERNS_9LayoutBoxE(%"class.blink::GridTrackSizingAlgorithm"* nocapture readonly, i32, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #3 align 2 {
  switch i32 %1, label %24 [
    i32 0, label %4
    i32 1, label %8
    i32 3, label %8
    i32 2, label %16
    i32 4, label %16
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %6 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %5, align 8
  %7 = tail call i32 @_ZNK5blink32GridTrackSizingAlgorithmStrategy15MinSizeForChildERNS_9LayoutBoxE(%"class.blink::GridTrackSizingAlgorithmStrategy"* %6, %"class.blink::LayoutBox"* dereferenceable(216) %2)
  br label %24

8:                                                ; preds = %3, %3
  %9 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %10 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %9, align 8
  %11 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %10 to i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)***
  %12 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %12, i64 2
  %14 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %13, align 8
  %15 = tail call i32 %14(%"class.blink::GridTrackSizingAlgorithmStrategy"* %10, %"class.blink::LayoutBox"* dereferenceable(216) %2) #18
  br label %24

16:                                               ; preds = %3, %3
  %17 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %18 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %17, align 8
  %19 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %18 to i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)***
  %20 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %20, i64 3
  %22 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %21, align 8
  %23 = tail call i32 %22(%"class.blink::GridTrackSizingAlgorithmStrategy"* %18, %"class.blink::LayoutBox"* dereferenceable(216) %2) #18
  br label %24

24:                                               ; preds = %3, %16, %8, %4
  %25 = phi i32 [ %23, %16 ], [ %15, %8 ], [ %7, %4 ], [ 0, %3 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24GridTrackSizingAlgorithm26ResolveIntrinsicTrackSizesEv(%"class.blink::GridTrackSizingAlgorithm"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"struct.std::__1::__less.1469", align 1
  %3 = alloca %"class.blink::GridItemWithSpan", align 8
  %4 = alloca %"struct.blink::GridSpan", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.WTF::Vector.1354", align 8
  %8 = alloca %"struct.blink::GridItemsSpanGroupRange", align 8
  %9 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %13 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %14 = select i1 %11, %"class.WTF::Vector"* %12, %"class.WTF::Vector"* %13
  %15 = bitcast %"class.WTF::Vector.1354"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #18
  %16 = getelementptr inbounds %"class.WTF::Vector.1354", %"class.WTF::Vector.1354"* %7, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.WTF::Vector.1354", %"class.WTF::Vector.1354"* %7, i64 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.WTF::Vector.1354", %"class.WTF::Vector.1354"* %7, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 16, i1 false) #18
  %19 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 12
  %20 = load %"class.blink::Grid"*, %"class.blink::Grid"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Grid", %"class.blink::Grid"* %20, i64 0, i32 8, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %185, label %24

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8
  %26 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %135, label %29

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::Grid"* %20 to %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)***
  %31 = bitcast %"struct.blink::GridSpan"* %4 to i8*
  %32 = bitcast %"struct.blink::GridSpan"* %4 to i64*
  %33 = getelementptr inbounds %"struct.blink::GridSpan", %"struct.blink::GridSpan"* %4, i64 0, i32 2
  %34 = bitcast %"class.blink::GridItemWithSpan"* %3 to i8*
  %35 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %3, i64 0, i32 0
  %36 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %3, i64 0, i32 1
  %37 = bitcast %"struct.blink::GridSpan"* %36 to i8*
  br label %38

38:                                               ; preds = %126, %29
  %39 = phi i64 [ 0, %29 ], [ %127, %126 ]
  %40 = trunc i64 %39 to i32
  %41 = call dereferenceable(8) i64* @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* %25, i32 %40) #18
  %42 = load i64, i64* %41, align 8
  %43 = load %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)**, %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)*** %30, align 8
  %44 = getelementptr inbounds %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)*, %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)** %43, i64 6
  %45 = load %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)*, %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)** %44, align 8
  %46 = call %"class.blink::Grid::GridIterator"* %45(%"class.blink::Grid"* %20, i32 %10, i64 %42, i64 0) #18
  %47 = bitcast %"class.blink::Grid::GridIterator"* %46 to %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)***
  %48 = load %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)**, %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)*** %47, align 8
  %49 = load %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)*, %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)** %48, align 8
  %50 = call %"class.blink::LayoutBox"* %49(%"class.blink::Grid::GridIterator"* %46) #18
  %51 = icmp eq %"class.blink::LayoutBox"* %50, null
  br i1 %51, label %119, label %52

52:                                               ; preds = %38
  %53 = icmp eq i64 %39, 0
  %54 = add i32 %40, -1
  br label %55

55:                                               ; preds = %114, %52
  %56 = phi %"class.blink::LayoutBox"* [ %50, %52 ], [ %117, %114 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %31) #18
  %57 = call { i64, i32 } @_ZNK5blink4Grid12GridItemSpanERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %20, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %56, i32 %10) #18
  %58 = extractvalue { i64, i32 } %57, 0
  %59 = extractvalue { i64, i32 } %57, 1
  store i64 %58, i64* %32, align 8
  store i32 %59, i32* %33, align 8
  %60 = trunc i64 %58 to i32
  %61 = lshr i64 %58, 32
  %62 = trunc i64 %61 to i32
  br i1 %53, label %69, label %63

63:                                               ; preds = %55
  %64 = shl i64 %58, 32
  %65 = ashr exact i64 %64, 32
  %66 = call dereferenceable(8) i64* @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* %25, i32 %54) #18
  %67 = load i64, i64* %66, align 8
  %68 = icmp ult i64 %67, %65
  br i1 %68, label %69, label %114

69:                                               ; preds = %63, %55
  %70 = sub nsw i32 %62, %60
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  %73 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 %60) #18
  call void @_ZN5blink24GridTrackSizingAlgorithm29SizeTrackToFitNonSpanningItemERKNS_8GridSpanERNS_9LayoutBoxERNS_9GridTrackE(%"class.blink::GridTrackSizingAlgorithm"* %0, %"struct.blink::GridSpan"* nonnull dereferenceable(12) %4, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %56, %"class.blink::GridTrack"* dereferenceable(128) %73) #18
  br label %114

74:                                               ; preds = %69
  %75 = load i32, i32* %9, align 8
  %76 = icmp eq i32 %75, 0
  %77 = select i1 %76, %"class.WTF::Vector"* %12, %"class.WTF::Vector"* %13
  %78 = ashr i64 %58, 32
  %79 = icmp eq i32 %62, %60
  br i1 %79, label %102, label %80

80:                                               ; preds = %74
  %81 = shl i64 %58, 32
  %82 = ashr exact i64 %81, 32
  br label %85

83:                                               ; preds = %97
  %84 = icmp eq i64 %101, %78
  br i1 %84, label %102, label %85

85:                                               ; preds = %83, %80
  %86 = phi i64 [ %101, %83 ], [ %82, %80 ]
  %87 = trunc i64 %86 to i32
  %88 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZNK3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %77, i32 %87) #18
  %89 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %88, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %90 = load i8, i8* %89, align 8, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %85
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #19
  unreachable

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %88, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 2
  %95 = load i32, i32* %94, align 8
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %114, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %88, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 2
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 1
  %101 = add i64 %86, 1
  br i1 %100, label %114, label %83

102:                                              ; preds = %83, %74
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #18
  store %"class.blink::LayoutBox"* %56, %"class.blink::LayoutBox"** %35, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* nonnull align 8 %31, i64 12, i1 false) #18
  %103 = load i32, i32* %18, align 4
  %104 = load i32, i32* %17, align 8
  %105 = icmp eq i32 %103, %104
  br i1 %105, label %112, label %106, !prof !3

106:                                              ; preds = %102
  %107 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %16, align 8
  %108 = zext i32 %103 to i64
  %109 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %107, i64 %108
  %110 = bitcast %"class.blink::GridItemWithSpan"* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* nonnull align 8 %34, i64 24, i1 false) #18
  %111 = add i32 %103, 1
  store i32 %111, i32* %18, align 4
  br label %113

112:                                              ; preds = %102
  call void @_ZN3WTF6VectorIN5blink16GridItemWithSpanELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1354"* nonnull %7, %"class.blink::GridItemWithSpan"* nonnull dereferenceable(24) %3) #18
  br label %113

113:                                              ; preds = %112, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #18
  br label %114

114:                                              ; preds = %97, %93, %113, %72, %63
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %31) #18
  %115 = load %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)**, %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)*** %47, align 8
  %116 = load %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)*, %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)** %115, align 8
  %117 = call %"class.blink::LayoutBox"* %116(%"class.blink::Grid::GridIterator"* %46) #18
  %118 = icmp eq %"class.blink::LayoutBox"* %117, null
  br i1 %118, label %119, label %55

119:                                              ; preds = %114, %38
  %120 = icmp eq %"class.blink::Grid::GridIterator"* %46, null
  br i1 %120, label %126, label %121

121:                                              ; preds = %119
  %122 = bitcast %"class.blink::Grid::GridIterator"* %46 to void (%"class.blink::Grid::GridIterator"*)***
  %123 = load void (%"class.blink::Grid::GridIterator"*)**, void (%"class.blink::Grid::GridIterator"*)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.blink::Grid::GridIterator"*)*, void (%"class.blink::Grid::GridIterator"*)** %123, i64 3
  %125 = load void (%"class.blink::Grid::GridIterator"*)*, void (%"class.blink::Grid::GridIterator"*)** %124, align 8
  call void %125(%"class.blink::Grid::GridIterator"* nonnull %46) #18
  br label %126

126:                                              ; preds = %121, %119
  %127 = add nuw nsw i64 %39, 1
  %128 = load i32, i32* %26, align 4
  %129 = zext i32 %128 to i64
  %130 = icmp ult i64 %127, %129
  br i1 %130, label %38, label %131

131:                                              ; preds = %126
  %132 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %16, align 8
  %133 = load i32, i32* %18, align 4
  %134 = zext i32 %133 to i64
  br label %135

135:                                              ; preds = %24, %131
  %136 = phi i64 [ %134, %131 ], [ 0, %24 ]
  %137 = phi %"class.blink::GridItemWithSpan"* [ %132, %131 ], [ null, %24 ]
  %138 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %137, i64 %136
  %139 = getelementptr inbounds %"struct.std::__1::__less.1469", %"struct.std::__1::__less.1469"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %139) #18
  call void @_ZNSt3__16__sortIRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEvT0_S7_T_(%"class.blink::GridItemWithSpan"* %137, %"class.blink::GridItemWithSpan"* %138, %"struct.std::__1::__less.1469"* nonnull dereferenceable(1) %2) #18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %139) #18
  %140 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %16, align 8
  %141 = load i32, i32* %18, align 4
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %140, i64 %142
  %144 = icmp eq i32 %141, 0
  br i1 %144, label %185, label %145

145:                                              ; preds = %135
  %146 = bitcast %"struct.blink::GridItemsSpanGroupRange"* %8 to i8*
  %147 = getelementptr inbounds %"struct.blink::GridItemsSpanGroupRange", %"struct.blink::GridItemsSpanGroupRange"* %8, i64 0, i32 0
  %148 = getelementptr inbounds %"struct.blink::GridItemsSpanGroupRange", %"struct.blink::GridItemsSpanGroupRange"* %8, i64 0, i32 1
  %149 = ptrtoint %"class.blink::GridItemWithSpan"* %143 to i64
  %150 = getelementptr inbounds %"struct.blink::GridItemsSpanGroupRange", %"struct.blink::GridItemsSpanGroupRange"* %8, i64 0, i32 1
  %151 = bitcast %"class.blink::GridItemWithSpan"** %150 to i64*
  br label %152

152:                                              ; preds = %145, %181
  %153 = phi %"class.blink::GridItemWithSpan"* [ %140, %145 ], [ %183, %181 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %146) #18
  store i64 -6148914691236517206, i64* %151, align 8
  store %"class.blink::GridItemWithSpan"* %153, %"class.blink::GridItemWithSpan"** %147, align 8
  %154 = ptrtoint %"class.blink::GridItemWithSpan"* %153 to i64
  %155 = sub i64 %149, %154
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %181, label %157

157:                                              ; preds = %152
  %158 = sdiv exact i64 %155, 24
  %159 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %153, i64 0, i32 1, i32 1
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %153, i64 0, i32 1, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = sub nsw i32 %160, %162
  br label %164

164:                                              ; preds = %164, %157
  %165 = phi i64 [ %158, %157 ], [ %179, %164 ]
  %166 = phi %"class.blink::GridItemWithSpan"* [ %153, %157 ], [ %178, %164 ]
  %167 = lshr i64 %165, 1
  %168 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %166, i64 1
  %169 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %166, i64 %167, i32 1, i32 0
  %170 = load i32, i32* %169, align 8
  %171 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %166, i64 %167, i32 1, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = sub nsw i32 %172, %170
  %174 = icmp ult i32 %163, %173
  %175 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %168, i64 %167
  %176 = xor i64 %167, -1
  %177 = add i64 %165, %176
  %178 = select i1 %174, %"class.blink::GridItemWithSpan"* %166, %"class.blink::GridItemWithSpan"* %175
  %179 = select i1 %174, i64 %167, i64 %177
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %164

181:                                              ; preds = %164, %152
  %182 = phi %"class.blink::GridItemWithSpan"* [ %153, %152 ], [ %178, %164 ]
  store %"class.blink::GridItemWithSpan"* %182, %"class.blink::GridItemWithSpan"** %148, align 8
  call void @_ZN5blink24GridTrackSizingAlgorithm39IncreaseSizesToAccommodateSpanningItemsILNS_25TrackSizeComputationPhaseE0EEEvRKNS_23GridItemsSpanGroupRangeE(%"class.blink::GridTrackSizingAlgorithm"* %0, %"struct.blink::GridItemsSpanGroupRange"* nonnull dereferenceable(16) %8)
  call void @_ZN5blink24GridTrackSizingAlgorithm39IncreaseSizesToAccommodateSpanningItemsILNS_25TrackSizeComputationPhaseE1EEEvRKNS_23GridItemsSpanGroupRangeE(%"class.blink::GridTrackSizingAlgorithm"* %0, %"struct.blink::GridItemsSpanGroupRange"* nonnull dereferenceable(16) %8)
  call void @_ZN5blink24GridTrackSizingAlgorithm39IncreaseSizesToAccommodateSpanningItemsILNS_25TrackSizeComputationPhaseE2EEEvRKNS_23GridItemsSpanGroupRangeE(%"class.blink::GridTrackSizingAlgorithm"* %0, %"struct.blink::GridItemsSpanGroupRange"* nonnull dereferenceable(16) %8)
  call void @_ZN5blink24GridTrackSizingAlgorithm39IncreaseSizesToAccommodateSpanningItemsILNS_25TrackSizeComputationPhaseE3EEEvRKNS_23GridItemsSpanGroupRangeE(%"class.blink::GridTrackSizingAlgorithm"* %0, %"struct.blink::GridItemsSpanGroupRange"* nonnull dereferenceable(16) %8)
  call void @_ZN5blink24GridTrackSizingAlgorithm39IncreaseSizesToAccommodateSpanningItemsILNS_25TrackSizeComputationPhaseE4EEEvRKNS_23GridItemsSpanGroupRangeE(%"class.blink::GridTrackSizingAlgorithm"* %0, %"struct.blink::GridItemsSpanGroupRange"* nonnull dereferenceable(16) %8)
  %183 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %148, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %146) #18
  %184 = icmp eq %"class.blink::GridItemWithSpan"* %183, %143
  br i1 %184, label %185, label %152

185:                                              ; preds = %181, %1, %135
  %186 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %187 = load i64*, i64** %186, align 8
  %188 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %189 = load i32, i32* %188, align 4
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds i64, i64* %187, i64 %190
  %192 = icmp eq i32 %189, 0
  br i1 %192, label %198, label %193

193:                                              ; preds = %185
  %194 = bitcast i32* %5 to i8*
  %195 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %196 = bitcast i32* %6 to i8*
  %197 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  br label %208

198:                                              ; preds = %239, %185
  %199 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %16, align 8
  %200 = icmp eq %"class.blink::GridItemWithSpan"* %199, null
  %201 = bitcast %"class.blink::GridItemWithSpan"* %199 to i8*
  br i1 %200, label %207, label %202, !prof !71

202:                                              ; preds = %198
  %203 = load i32, i32* %18, align 4
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %206, label %205, !prof !3

205:                                              ; preds = %202
  store i32 0, i32* %18, align 4
  br label %206

206:                                              ; preds = %205, %202
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %201) #18
  store %"class.blink::GridItemWithSpan"* null, %"class.blink::GridItemWithSpan"** %16, align 8
  br label %207

207:                                              ; preds = %198, %206
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #18
  ret void

208:                                              ; preds = %193, %239
  %209 = phi i64* [ %187, %193 ], [ %240, %239 ]
  %210 = load i64, i64* %209, align 8
  %211 = trunc i64 %210 to i32
  %212 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 %211) #18
  %213 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %212, i64 0, i32 1, i32 0
  %214 = load i32, i32* %213, align 4
  %215 = icmp eq i32 %214, -64
  br i1 %215, label %216, label %239

216:                                              ; preds = %208
  %217 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %212, i64 0, i32 0, i32 0
  %218 = load i32, i32* %217, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %194)
  store i32 %218, i32* %5, align 4
  %219 = icmp eq i32 %218, -64
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %196)
  br i1 %219, label %230, label %220

220:                                              ; preds = %216
  %221 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %212, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %222 = load i8, i8* %221, align 4, !range !2
  %223 = icmp eq i8 %222, 0
  %224 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %212, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %225 = select i1 %223, %"class.blink::LayoutUnit"* %195, %"class.blink::LayoutUnit"* %224
  %226 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %225, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  store i32 %227, i32* %6, align 4
  %228 = icmp slt i32 %227, %218
  %229 = select i1 %228, %"class.blink::LayoutUnit"* %197, %"class.blink::LayoutUnit"* %195
  br label %230

230:                                              ; preds = %220, %216
  %231 = phi %"class.blink::LayoutUnit"* [ %229, %220 ], [ %195, %216 ]
  %232 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %231, i64 0, i32 0
  %233 = load i32, i32* %232, align 4
  store i32 %233, i32* %213, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %196)
  %234 = icmp ne i32 %233, -64
  %235 = icmp slt i32 %233, %218
  %236 = and i1 %234, %235
  br i1 %236, label %237, label %238

237:                                              ; preds = %230
  store i32 %218, i32* %213, align 4
  br label %238

238:                                              ; preds = %230, %237
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %194)
  br label %239

239:                                              ; preds = %238, %208
  %240 = getelementptr inbounds i64, i64* %209, i64 1
  %241 = icmp eq i64* %240, %191
  br i1 %241, label %198, label %208
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24GridTrackSizingAlgorithm39IncreaseSizesToAccommodateSpanningItemsILNS_25TrackSizeComputationPhaseE0EEEvRKNS_23GridItemsSpanGroupRangeE(%"class.blink::GridTrackSizingAlgorithm"*, %"struct.blink::GridItemsSpanGroupRange"* dereferenceable(16)) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.1349", align 8
  %4 = alloca %"class.WTF::Vector.1349", align 8
  %5 = alloca %"class.blink::GridTrack"*, align 8
  %6 = alloca %"class.blink::GridTrack"*, align 8
  %7 = alloca %"class.blink::LayoutUnit", align 4
  %8 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %13 = select i1 %10, %"class.WTF::Vector"* %11, %"class.WTF::Vector"* %12
  %14 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i64, i64* %15, i64 %18
  %20 = icmp eq i32 %17, 0
  br i1 %20, label %21, label %45

21:                                               ; preds = %45, %2
  %22 = bitcast %"class.WTF::Vector.1349"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #18
  %23 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %3, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %3, i64 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 16, i1 false) #18
  %26 = bitcast %"class.WTF::Vector.1349"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #18
  %27 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %4, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %4, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 16, i1 false) #18
  %30 = getelementptr inbounds %"struct.blink::GridItemsSpanGroupRange", %"struct.blink::GridItemsSpanGroupRange"* %1, i64 0, i32 0
  %31 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %30, align 8
  %32 = getelementptr inbounds %"struct.blink::GridItemsSpanGroupRange", %"struct.blink::GridItemsSpanGroupRange"* %1, i64 0, i32 1
  %33 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %32, align 8
  %34 = icmp eq %"class.blink::GridItemWithSpan"* %31, %33
  br i1 %34, label %55, label %35

35:                                               ; preds = %21
  %36 = bitcast %"class.blink::GridTrack"** %5 to i8*
  %37 = bitcast %"class.blink::GridTrack"** %6 to i8*
  %38 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 13
  %39 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 12
  %40 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %41 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %42 = bitcast %"class.blink::LayoutUnit"* %7 to i8*
  %43 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %7, i64 0, i32 0
  %44 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  br label %61

45:                                               ; preds = %2, %45
  %46 = phi i64* [ %53, %45 ], [ %15, %2 ]
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  %49 = tail call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 %48) #18
  %50 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %49, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %49, i64 0, i32 2, i32 0
  store i32 %51, i32* %52, align 8
  %53 = getelementptr inbounds i64, i64* %46, i64 1
  %54 = icmp eq i64* %53, %19
  br i1 %54, label %21, label %45

55:                                               ; preds = %163, %21
  %56 = load i64*, i64** %14, align 8
  %57 = load i32, i32* %16, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i64, i64* %56, i64 %58
  %60 = icmp eq i32 %57, 0
  br i1 %60, label %167, label %186

61:                                               ; preds = %35, %163
  %62 = phi %"class.blink::GridItemWithSpan"* [ %31, %35 ], [ %164, %163 ]
  %63 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %62, i64 0, i32 1
  %64 = bitcast %"struct.blink::GridSpan"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  store i32 0, i32* %25, align 4
  store i32 0, i32* %29, align 4
  %66 = shl i64 %65, 32
  %67 = ashr exact i64 %66, 32
  %68 = ashr i64 %65, 32
  %69 = icmp eq i64 %67, %68
  br i1 %69, label %163, label %73

70:                                               ; preds = %128
  %71 = load i32, i32* %29, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %163, label %131

73:                                               ; preds = %61, %128
  %74 = phi i32 [ %90, %128 ], [ 0, %61 ]
  %75 = phi i64 [ %129, %128 ], [ %67, %61 ]
  %76 = trunc i64 %75 to i32
  %77 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 %76) #18
  %78 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %73
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #19
  unreachable

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = icmp slt i32 %84, 0
  %86 = select i1 %85, i32 -2147483648, i32 2147483647
  %87 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %74, i32 %84) #18
  %88 = extractvalue { i32, i1 } %87, 1
  %89 = extractvalue { i32, i1 } %87, 0
  %90 = select i1 %88, i32 %86, i32 %89, !prof !3
  %91 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  %92 = load i16, i16* %91, align 8
  %93 = and i16 %92, 64
  %94 = icmp eq i16 %93, 0
  br i1 %94, label %128, label %95

95:                                               ; preds = %82
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #18
  store %"class.blink::GridTrack"* %77, %"class.blink::GridTrack"** %5, align 8
  %96 = load i32, i32* %29, align 4
  %97 = load i32, i32* %28, align 8
  %98 = icmp eq i32 %96, %97
  %99 = ptrtoint %"class.blink::GridTrack"* %77 to i64
  br i1 %98, label %107, label %100, !prof !3

100:                                              ; preds = %95
  %101 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %27, align 8
  %102 = zext i32 %96 to i64
  %103 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %101, i64 %102
  %104 = bitcast %"class.blink::GridTrack"** %103 to i64*
  store i64 %99, i64* %104, align 8
  %105 = load i32, i32* %29, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %29, align 4
  br label %108

107:                                              ; preds = %95
  call void @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1349"* nonnull %4, %"class.blink::GridTrack"** nonnull dereferenceable(8) %5) #18
  br label %108

108:                                              ; preds = %100, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #18
  %109 = load i16, i16* %91, align 8
  %110 = and i16 %109, 1025
  %111 = icmp ne i16 %110, 0
  %112 = trunc i16 %109 to i8
  %113 = icmp slt i8 %112, 0
  %114 = and i1 %113, %111
  br i1 %114, label %115, label %128

115:                                              ; preds = %108
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #18
  store %"class.blink::GridTrack"* %77, %"class.blink::GridTrack"** %6, align 8
  %116 = load i32, i32* %25, align 4
  %117 = load i32, i32* %24, align 8
  %118 = icmp eq i32 %116, %117
  br i1 %118, label %126, label %119, !prof !3

119:                                              ; preds = %115
  %120 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %23, align 8
  %121 = zext i32 %116 to i64
  %122 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %120, i64 %121
  %123 = bitcast %"class.blink::GridTrack"** %122 to i64*
  store i64 %99, i64* %123, align 8
  %124 = load i32, i32* %25, align 4
  %125 = add i32 %124, 1
  store i32 %125, i32* %25, align 4
  br label %127

126:                                              ; preds = %115
  call void @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1349"* nonnull %3, %"class.blink::GridTrack"** nonnull dereferenceable(8) %6) #18
  br label %127

127:                                              ; preds = %119, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #18
  br label %128

128:                                              ; preds = %82, %108, %127
  %129 = add i64 %75, 1
  %130 = icmp eq i64 %129, %68
  br i1 %130, label %70, label %73

131:                                              ; preds = %70
  %132 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %38, align 8
  %133 = load %"class.blink::Grid"*, %"class.blink::Grid"** %39, align 8
  %134 = load i32, i32* %8, align 8
  %135 = mul i64 %65, -4294967295
  %136 = ashr i64 %135, 32
  %137 = icmp eq i32 %134, 1
  %138 = select i1 %137, %"class.absl::optional"* %40, %"class.absl::optional"* %41
  %139 = bitcast %"class.absl::optional"* %138 to i64*
  %140 = load i64, i64* %139, align 4
  %141 = call i32 @_ZNK5blink10LayoutGrid11GuttersSizeERKNS_4GridENS_24GridTrackSizingDirectionEmmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %132, %"class.blink::Grid"* dereferenceable(168) %133, i32 %134, i64 %67, i64 %136, i64 %140) #18
  %142 = icmp slt i32 %141, 0
  %143 = select i1 %142, i32 -2147483648, i32 2147483647
  %144 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %90, i32 %141) #18
  %145 = extractvalue { i32, i1 } %144, 1
  %146 = extractvalue { i32, i1 } %144, 0
  %147 = select i1 %145, i32 %143, i32 %146, !prof !3
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #18
  store i32 -1431655766, i32* %43, align 4
  %148 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %62, i64 0, i32 0
  %149 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %148, align 8
  %150 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %44, align 8
  %151 = call i32 @_ZNK5blink32GridTrackSizingAlgorithmStrategy15MinSizeForChildERNS_9LayoutBoxE(%"class.blink::GridTrackSizingAlgorithmStrategy"* %150, %"class.blink::LayoutBox"* dereferenceable(216) %149) #18
  %152 = icmp sgt i32 %147, -1
  %153 = select i1 %152, i32 -2147483648, i32 2147483647
  %154 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %151, i32 %147) #18
  %155 = extractvalue { i32, i1 } %154, 1
  %156 = extractvalue { i32, i1 } %154, 0
  %157 = select i1 %155, i32 %153, i32 %156, !prof !3
  %158 = icmp sgt i32 %157, 0
  %159 = select i1 %158, i32 %157, i32 0
  store i32 %159, i32* %43, align 4
  %160 = load i32, i32* %25, align 4
  %161 = icmp eq i32 %160, 0
  %162 = select i1 %161, %"class.WTF::Vector.1349"* %4, %"class.WTF::Vector.1349"* %3
  call void @_ZNK5blink24GridTrackSizingAlgorithm23DistributeSpaceToTracksILNS_25TrackSizeComputationPhaseE0EEEvRN3WTF6VectorIPNS_9GridTrackELj0ENS3_18PartitionAllocatorEEEPS8_RNS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithm"* %0, %"class.WTF::Vector.1349"* nonnull dereferenceable(16) %4, %"class.WTF::Vector.1349"* nonnull %162, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %7)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #18
  br label %163

163:                                              ; preds = %61, %70, %131
  %164 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %62, i64 1
  %165 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %32, align 8
  %166 = icmp eq %"class.blink::GridItemWithSpan"* %164, %165
  br i1 %166, label %55, label %61

167:                                              ; preds = %200, %55
  %168 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %27, align 8
  %169 = icmp eq %"class.blink::GridTrack"** %168, null
  %170 = bitcast %"class.blink::GridTrack"** %168 to i8*
  br i1 %169, label %176, label %171, !prof !71

171:                                              ; preds = %167
  %172 = load i32, i32* %29, align 4
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %175, label %174, !prof !3

174:                                              ; preds = %171
  store i32 0, i32* %29, align 4
  br label %175

175:                                              ; preds = %174, %171
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %170) #18
  store %"class.blink::GridTrack"** null, %"class.blink::GridTrack"*** %27, align 8
  br label %176

176:                                              ; preds = %167, %175
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #18
  %177 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %23, align 8
  %178 = icmp eq %"class.blink::GridTrack"** %177, null
  %179 = bitcast %"class.blink::GridTrack"** %177 to i8*
  br i1 %178, label %185, label %180, !prof !71

180:                                              ; preds = %176
  %181 = load i32, i32* %25, align 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %184, label %183, !prof !3

183:                                              ; preds = %180
  store i32 0, i32* %25, align 4
  br label %184

184:                                              ; preds = %183, %180
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %179) #18
  store %"class.blink::GridTrack"** null, %"class.blink::GridTrack"*** %23, align 8
  br label %185

185:                                              ; preds = %176, %184
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #18
  ret void

186:                                              ; preds = %55, %200
  %187 = phi i64* [ %201, %200 ], [ %56, %55 ]
  %188 = load i64, i64* %187, align 8
  %189 = trunc i64 %188 to i32
  %190 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 %189) #18
  %191 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %190, i64 0, i32 2, i32 0
  %192 = load i32, i32* %191, align 8
  %193 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %190, i64 0, i32 0, i32 0
  store i32 %192, i32* %193, align 8
  %194 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %190, i64 0, i32 1, i32 0
  %195 = load i32, i32* %194, align 4
  %196 = icmp ne i32 %195, -64
  %197 = icmp slt i32 %195, %192
  %198 = and i1 %196, %197
  br i1 %198, label %199, label %200

199:                                              ; preds = %186
  store i32 %192, i32* %194, align 4
  br label %200

200:                                              ; preds = %186, %199
  %201 = getelementptr inbounds i64, i64* %187, i64 1
  %202 = icmp eq i64* %201, %59
  br i1 %202, label %167, label %186
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24GridTrackSizingAlgorithm39IncreaseSizesToAccommodateSpanningItemsILNS_25TrackSizeComputationPhaseE1EEEvRKNS_23GridItemsSpanGroupRangeE(%"class.blink::GridTrackSizingAlgorithm"*, %"struct.blink::GridItemsSpanGroupRange"* dereferenceable(16)) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.1349", align 8
  %4 = alloca %"class.WTF::Vector.1349", align 8
  %5 = alloca %"class.blink::GridTrack"*, align 8
  %6 = alloca %"class.blink::GridTrack"*, align 8
  %7 = alloca %"class.blink::LayoutUnit", align 4
  %8 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %13 = select i1 %10, %"class.WTF::Vector"* %11, %"class.WTF::Vector"* %12
  %14 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i64, i64* %15, i64 %18
  %20 = icmp eq i32 %17, 0
  br i1 %20, label %21, label %45

21:                                               ; preds = %45, %2
  %22 = bitcast %"class.WTF::Vector.1349"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #18
  %23 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %3, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %3, i64 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 16, i1 false) #18
  %26 = bitcast %"class.WTF::Vector.1349"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #18
  %27 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %4, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %4, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 16, i1 false) #18
  %30 = getelementptr inbounds %"struct.blink::GridItemsSpanGroupRange", %"struct.blink::GridItemsSpanGroupRange"* %1, i64 0, i32 0
  %31 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %30, align 8
  %32 = getelementptr inbounds %"struct.blink::GridItemsSpanGroupRange", %"struct.blink::GridItemsSpanGroupRange"* %1, i64 0, i32 1
  %33 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %32, align 8
  %34 = icmp eq %"class.blink::GridItemWithSpan"* %31, %33
  br i1 %34, label %55, label %35

35:                                               ; preds = %21
  %36 = bitcast %"class.blink::GridTrack"** %5 to i8*
  %37 = bitcast %"class.blink::GridTrack"** %6 to i8*
  %38 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 13
  %39 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 12
  %40 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %41 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %42 = bitcast %"class.blink::LayoutUnit"* %7 to i8*
  %43 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %7, i64 0, i32 0
  %44 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  br label %61

45:                                               ; preds = %2, %45
  %46 = phi i64* [ %53, %45 ], [ %15, %2 ]
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  %49 = tail call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 %48) #18
  %50 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %49, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %49, i64 0, i32 2, i32 0
  store i32 %51, i32* %52, align 8
  %53 = getelementptr inbounds i64, i64* %46, i64 1
  %54 = icmp eq i64* %53, %19
  br i1 %54, label %21, label %45

55:                                               ; preds = %167, %21
  %56 = load i64*, i64** %14, align 8
  %57 = load i32, i32* %16, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i64, i64* %56, i64 %58
  %60 = icmp eq i32 %57, 0
  br i1 %60, label %171, label %190

61:                                               ; preds = %35, %167
  %62 = phi %"class.blink::GridItemWithSpan"* [ %31, %35 ], [ %168, %167 ]
  %63 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %62, i64 0, i32 1
  %64 = bitcast %"struct.blink::GridSpan"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  store i32 0, i32* %25, align 4
  store i32 0, i32* %29, align 4
  %66 = shl i64 %65, 32
  %67 = ashr exact i64 %66, 32
  %68 = ashr i64 %65, 32
  %69 = icmp eq i64 %67, %68
  br i1 %69, label %167, label %73

70:                                               ; preds = %128
  %71 = load i32, i32* %29, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %167, label %131

73:                                               ; preds = %61, %128
  %74 = phi i32 [ %90, %128 ], [ 0, %61 ]
  %75 = phi i64 [ %129, %128 ], [ %67, %61 ]
  %76 = trunc i64 %75 to i32
  %77 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 %76) #18
  %78 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %73
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #19
  unreachable

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = icmp slt i32 %84, 0
  %86 = select i1 %85, i32 -2147483648, i32 2147483647
  %87 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %74, i32 %84) #18
  %88 = extractvalue { i32, i1 } %87, 1
  %89 = extractvalue { i32, i1 } %87, 0
  %90 = select i1 %88, i32 %86, i32 %89, !prof !3
  %91 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  %92 = load i16, i16* %91, align 8
  %93 = and i16 %92, 1280
  %94 = icmp eq i16 %93, 0
  br i1 %94, label %128, label %95

95:                                               ; preds = %82
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #18
  store %"class.blink::GridTrack"* %77, %"class.blink::GridTrack"** %5, align 8
  %96 = load i32, i32* %29, align 4
  %97 = load i32, i32* %28, align 8
  %98 = icmp eq i32 %96, %97
  %99 = ptrtoint %"class.blink::GridTrack"* %77 to i64
  br i1 %98, label %107, label %100, !prof !3

100:                                              ; preds = %95
  %101 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %27, align 8
  %102 = zext i32 %96 to i64
  %103 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %101, i64 %102
  %104 = bitcast %"class.blink::GridTrack"** %103 to i64*
  store i64 %99, i64* %104, align 8
  %105 = load i32, i32* %29, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %29, align 4
  br label %108

107:                                              ; preds = %95
  call void @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1349"* nonnull %4, %"class.blink::GridTrack"** nonnull dereferenceable(8) %5) #18
  br label %108

108:                                              ; preds = %100, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #18
  %109 = load i16, i16* %91, align 8
  %110 = and i16 %109, 1025
  %111 = icmp ne i16 %110, 0
  %112 = trunc i16 %109 to i8
  %113 = icmp slt i8 %112, 0
  %114 = and i1 %113, %111
  br i1 %114, label %115, label %128

115:                                              ; preds = %108
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #18
  store %"class.blink::GridTrack"* %77, %"class.blink::GridTrack"** %6, align 8
  %116 = load i32, i32* %25, align 4
  %117 = load i32, i32* %24, align 8
  %118 = icmp eq i32 %116, %117
  br i1 %118, label %126, label %119, !prof !3

119:                                              ; preds = %115
  %120 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %23, align 8
  %121 = zext i32 %116 to i64
  %122 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %120, i64 %121
  %123 = bitcast %"class.blink::GridTrack"** %122 to i64*
  store i64 %99, i64* %123, align 8
  %124 = load i32, i32* %25, align 4
  %125 = add i32 %124, 1
  store i32 %125, i32* %25, align 4
  br label %127

126:                                              ; preds = %115
  call void @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1349"* nonnull %3, %"class.blink::GridTrack"** nonnull dereferenceable(8) %6) #18
  br label %127

127:                                              ; preds = %119, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #18
  br label %128

128:                                              ; preds = %82, %108, %127
  %129 = add i64 %75, 1
  %130 = icmp eq i64 %129, %68
  br i1 %130, label %70, label %73

131:                                              ; preds = %70
  %132 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %38, align 8
  %133 = load %"class.blink::Grid"*, %"class.blink::Grid"** %39, align 8
  %134 = load i32, i32* %8, align 8
  %135 = mul i64 %65, -4294967295
  %136 = ashr i64 %135, 32
  %137 = icmp eq i32 %134, 1
  %138 = select i1 %137, %"class.absl::optional"* %40, %"class.absl::optional"* %41
  %139 = bitcast %"class.absl::optional"* %138 to i64*
  %140 = load i64, i64* %139, align 4
  %141 = call i32 @_ZNK5blink10LayoutGrid11GuttersSizeERKNS_4GridENS_24GridTrackSizingDirectionEmmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %132, %"class.blink::Grid"* dereferenceable(168) %133, i32 %134, i64 %67, i64 %136, i64 %140) #18
  %142 = icmp slt i32 %141, 0
  %143 = select i1 %142, i32 -2147483648, i32 2147483647
  %144 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %90, i32 %141) #18
  %145 = extractvalue { i32, i1 } %144, 1
  %146 = extractvalue { i32, i1 } %144, 0
  %147 = select i1 %145, i32 %143, i32 %146, !prof !3
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #18
  store i32 -1431655766, i32* %43, align 4
  %148 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %62, i64 0, i32 0
  %149 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %148, align 8
  %150 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %44, align 8
  %151 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %150 to i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)***
  %152 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*** %151, align 8
  %153 = getelementptr inbounds i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %152, i64 2
  %154 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %153, align 8
  %155 = call i32 %154(%"class.blink::GridTrackSizingAlgorithmStrategy"* %150, %"class.blink::LayoutBox"* dereferenceable(216) %149) #18
  %156 = icmp sgt i32 %147, -1
  %157 = select i1 %156, i32 -2147483648, i32 2147483647
  %158 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %155, i32 %147) #18
  %159 = extractvalue { i32, i1 } %158, 1
  %160 = extractvalue { i32, i1 } %158, 0
  %161 = select i1 %159, i32 %157, i32 %160, !prof !3
  %162 = icmp sgt i32 %161, 0
  %163 = select i1 %162, i32 %161, i32 0
  store i32 %163, i32* %43, align 4
  %164 = load i32, i32* %25, align 4
  %165 = icmp eq i32 %164, 0
  %166 = select i1 %165, %"class.WTF::Vector.1349"* %4, %"class.WTF::Vector.1349"* %3
  call void @_ZNK5blink24GridTrackSizingAlgorithm23DistributeSpaceToTracksILNS_25TrackSizeComputationPhaseE1EEEvRN3WTF6VectorIPNS_9GridTrackELj0ENS3_18PartitionAllocatorEEEPS8_RNS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithm"* %0, %"class.WTF::Vector.1349"* nonnull dereferenceable(16) %4, %"class.WTF::Vector.1349"* nonnull %166, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %7)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #18
  br label %167

167:                                              ; preds = %61, %70, %131
  %168 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %62, i64 1
  %169 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %32, align 8
  %170 = icmp eq %"class.blink::GridItemWithSpan"* %168, %169
  br i1 %170, label %55, label %61

171:                                              ; preds = %204, %55
  %172 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %27, align 8
  %173 = icmp eq %"class.blink::GridTrack"** %172, null
  %174 = bitcast %"class.blink::GridTrack"** %172 to i8*
  br i1 %173, label %180, label %175, !prof !71

175:                                              ; preds = %171
  %176 = load i32, i32* %29, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %179, label %178, !prof !3

178:                                              ; preds = %175
  store i32 0, i32* %29, align 4
  br label %179

179:                                              ; preds = %178, %175
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %174) #18
  store %"class.blink::GridTrack"** null, %"class.blink::GridTrack"*** %27, align 8
  br label %180

180:                                              ; preds = %171, %179
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #18
  %181 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %23, align 8
  %182 = icmp eq %"class.blink::GridTrack"** %181, null
  %183 = bitcast %"class.blink::GridTrack"** %181 to i8*
  br i1 %182, label %189, label %184, !prof !71

184:                                              ; preds = %180
  %185 = load i32, i32* %25, align 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %188, label %187, !prof !3

187:                                              ; preds = %184
  store i32 0, i32* %25, align 4
  br label %188

188:                                              ; preds = %187, %184
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %183) #18
  store %"class.blink::GridTrack"** null, %"class.blink::GridTrack"*** %23, align 8
  br label %189

189:                                              ; preds = %180, %188
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #18
  ret void

190:                                              ; preds = %55, %204
  %191 = phi i64* [ %205, %204 ], [ %56, %55 ]
  %192 = load i64, i64* %191, align 8
  %193 = trunc i64 %192 to i32
  %194 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 %193) #18
  %195 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %194, i64 0, i32 2, i32 0
  %196 = load i32, i32* %195, align 8
  %197 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %194, i64 0, i32 0, i32 0
  store i32 %196, i32* %197, align 8
  %198 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %194, i64 0, i32 1, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = icmp ne i32 %199, -64
  %201 = icmp slt i32 %199, %196
  %202 = and i1 %200, %201
  br i1 %202, label %203, label %204

203:                                              ; preds = %190
  store i32 %196, i32* %198, align 4
  br label %204

204:                                              ; preds = %190, %203
  %205 = getelementptr inbounds i64, i64* %191, i64 1
  %206 = icmp eq i64* %205, %59
  br i1 %206, label %171, label %190
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24GridTrackSizingAlgorithm39IncreaseSizesToAccommodateSpanningItemsILNS_25TrackSizeComputationPhaseE2EEEvRKNS_23GridItemsSpanGroupRangeE(%"class.blink::GridTrackSizingAlgorithm"*, %"struct.blink::GridItemsSpanGroupRange"* dereferenceable(16)) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.1349", align 8
  %4 = alloca %"class.WTF::Vector.1349", align 8
  %5 = alloca %"class.blink::GridTrack"*, align 8
  %6 = alloca %"class.blink::GridTrack"*, align 8
  %7 = alloca %"class.blink::LayoutUnit", align 4
  %8 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %13 = select i1 %10, %"class.WTF::Vector"* %11, %"class.WTF::Vector"* %12
  %14 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i64, i64* %15, i64 %18
  %20 = icmp eq i32 %17, 0
  br i1 %20, label %21, label %45

21:                                               ; preds = %45, %2
  %22 = bitcast %"class.WTF::Vector.1349"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #18
  %23 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %3, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %3, i64 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 16, i1 false) #18
  %26 = bitcast %"class.WTF::Vector.1349"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #18
  %27 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %4, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %4, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 16, i1 false) #18
  %30 = getelementptr inbounds %"struct.blink::GridItemsSpanGroupRange", %"struct.blink::GridItemsSpanGroupRange"* %1, i64 0, i32 0
  %31 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %30, align 8
  %32 = getelementptr inbounds %"struct.blink::GridItemsSpanGroupRange", %"struct.blink::GridItemsSpanGroupRange"* %1, i64 0, i32 1
  %33 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %32, align 8
  %34 = icmp eq %"class.blink::GridItemWithSpan"* %31, %33
  br i1 %34, label %55, label %35

35:                                               ; preds = %21
  %36 = bitcast %"class.blink::GridTrack"** %5 to i8*
  %37 = bitcast %"class.blink::GridTrack"** %6 to i8*
  %38 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 13
  %39 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 12
  %40 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %41 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %42 = bitcast %"class.blink::LayoutUnit"* %7 to i8*
  %43 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %7, i64 0, i32 0
  %44 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  br label %61

45:                                               ; preds = %2, %45
  %46 = phi i64* [ %53, %45 ], [ %15, %2 ]
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  %49 = tail call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 %48) #18
  %50 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %49, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %49, i64 0, i32 2, i32 0
  store i32 %51, i32* %52, align 8
  %53 = getelementptr inbounds i64, i64* %46, i64 1
  %54 = icmp eq i64* %53, %19
  br i1 %54, label %21, label %45

55:                                               ; preds = %164, %21
  %56 = load i64*, i64** %14, align 8
  %57 = load i32, i32* %16, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i64, i64* %56, i64 %58
  %60 = icmp eq i32 %57, 0
  br i1 %60, label %168, label %187

61:                                               ; preds = %35, %164
  %62 = phi %"class.blink::GridItemWithSpan"* [ %31, %35 ], [ %165, %164 ]
  %63 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %62, i64 0, i32 1
  %64 = bitcast %"struct.blink::GridSpan"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  store i32 0, i32* %25, align 4
  store i32 0, i32* %29, align 4
  %66 = shl i64 %65, 32
  %67 = ashr exact i64 %66, 32
  %68 = ashr i64 %65, 32
  %69 = icmp eq i64 %67, %68
  br i1 %69, label %164, label %73

70:                                               ; preds = %125
  %71 = load i32, i32* %29, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %164, label %128

73:                                               ; preds = %61, %125
  %74 = phi i32 [ %90, %125 ], [ 0, %61 ]
  %75 = phi i64 [ %126, %125 ], [ %67, %61 ]
  %76 = trunc i64 %75 to i32
  %77 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 %76) #18
  %78 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %73
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #19
  unreachable

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = icmp slt i32 %84, 0
  %86 = select i1 %85, i32 -2147483648, i32 2147483647
  %87 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %74, i32 %84) #18
  %88 = extractvalue { i32, i1 } %87, 1
  %89 = extractvalue { i32, i1 } %87, 0
  %90 = select i1 %88, i32 %86, i32 %89, !prof !3
  %91 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  %92 = load i16, i16* %91, align 8
  %93 = and i16 %92, 256
  %94 = icmp eq i16 %93, 0
  br i1 %94, label %125, label %95

95:                                               ; preds = %82
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #18
  store %"class.blink::GridTrack"* %77, %"class.blink::GridTrack"** %5, align 8
  %96 = load i32, i32* %29, align 4
  %97 = load i32, i32* %28, align 8
  %98 = icmp eq i32 %96, %97
  %99 = ptrtoint %"class.blink::GridTrack"* %77 to i64
  br i1 %98, label %107, label %100, !prof !3

100:                                              ; preds = %95
  %101 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %27, align 8
  %102 = zext i32 %96 to i64
  %103 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %101, i64 %102
  %104 = bitcast %"class.blink::GridTrack"** %103 to i64*
  store i64 %99, i64* %104, align 8
  %105 = load i32, i32* %29, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %29, align 4
  br label %108

107:                                              ; preds = %95
  call void @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1349"* nonnull %4, %"class.blink::GridTrack"** nonnull dereferenceable(8) %5) #18
  br label %108

108:                                              ; preds = %100, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #18
  %109 = load i16, i16* %91, align 8
  %110 = and i16 %109, 768
  %111 = icmp eq i16 %110, 768
  br i1 %111, label %112, label %125

112:                                              ; preds = %108
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #18
  store %"class.blink::GridTrack"* %77, %"class.blink::GridTrack"** %6, align 8
  %113 = load i32, i32* %25, align 4
  %114 = load i32, i32* %24, align 8
  %115 = icmp eq i32 %113, %114
  br i1 %115, label %123, label %116, !prof !3

116:                                              ; preds = %112
  %117 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %23, align 8
  %118 = zext i32 %113 to i64
  %119 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %117, i64 %118
  %120 = bitcast %"class.blink::GridTrack"** %119 to i64*
  store i64 %99, i64* %120, align 8
  %121 = load i32, i32* %25, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %25, align 4
  br label %124

123:                                              ; preds = %112
  call void @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1349"* nonnull %3, %"class.blink::GridTrack"** nonnull dereferenceable(8) %6) #18
  br label %124

124:                                              ; preds = %116, %123
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #18
  br label %125

125:                                              ; preds = %82, %108, %124
  %126 = add i64 %75, 1
  %127 = icmp eq i64 %126, %68
  br i1 %127, label %70, label %73

128:                                              ; preds = %70
  %129 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %38, align 8
  %130 = load %"class.blink::Grid"*, %"class.blink::Grid"** %39, align 8
  %131 = load i32, i32* %8, align 8
  %132 = mul i64 %65, -4294967295
  %133 = ashr i64 %132, 32
  %134 = icmp eq i32 %131, 1
  %135 = select i1 %134, %"class.absl::optional"* %40, %"class.absl::optional"* %41
  %136 = bitcast %"class.absl::optional"* %135 to i64*
  %137 = load i64, i64* %136, align 4
  %138 = call i32 @_ZNK5blink10LayoutGrid11GuttersSizeERKNS_4GridENS_24GridTrackSizingDirectionEmmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %129, %"class.blink::Grid"* dereferenceable(168) %130, i32 %131, i64 %67, i64 %133, i64 %137) #18
  %139 = icmp slt i32 %138, 0
  %140 = select i1 %139, i32 -2147483648, i32 2147483647
  %141 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %90, i32 %138) #18
  %142 = extractvalue { i32, i1 } %141, 1
  %143 = extractvalue { i32, i1 } %141, 0
  %144 = select i1 %142, i32 %140, i32 %143, !prof !3
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #18
  store i32 -1431655766, i32* %43, align 4
  %145 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %62, i64 0, i32 0
  %146 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %145, align 8
  %147 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %44, align 8
  %148 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %147 to i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)***
  %149 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*** %148, align 8
  %150 = getelementptr inbounds i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %149, i64 3
  %151 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %150, align 8
  %152 = call i32 %151(%"class.blink::GridTrackSizingAlgorithmStrategy"* %147, %"class.blink::LayoutBox"* dereferenceable(216) %146) #18
  %153 = icmp sgt i32 %144, -1
  %154 = select i1 %153, i32 -2147483648, i32 2147483647
  %155 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %152, i32 %144) #18
  %156 = extractvalue { i32, i1 } %155, 1
  %157 = extractvalue { i32, i1 } %155, 0
  %158 = select i1 %156, i32 %154, i32 %157, !prof !3
  %159 = icmp sgt i32 %158, 0
  %160 = select i1 %159, i32 %158, i32 0
  store i32 %160, i32* %43, align 4
  %161 = load i32, i32* %25, align 4
  %162 = icmp eq i32 %161, 0
  %163 = select i1 %162, %"class.WTF::Vector.1349"* %4, %"class.WTF::Vector.1349"* %3
  call void @_ZNK5blink24GridTrackSizingAlgorithm23DistributeSpaceToTracksILNS_25TrackSizeComputationPhaseE2EEEvRN3WTF6VectorIPNS_9GridTrackELj0ENS3_18PartitionAllocatorEEEPS8_RNS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithm"* %0, %"class.WTF::Vector.1349"* nonnull dereferenceable(16) %4, %"class.WTF::Vector.1349"* nonnull %163, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %7)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #18
  br label %164

164:                                              ; preds = %61, %70, %128
  %165 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %62, i64 1
  %166 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %32, align 8
  %167 = icmp eq %"class.blink::GridItemWithSpan"* %165, %166
  br i1 %167, label %55, label %61

168:                                              ; preds = %201, %55
  %169 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %27, align 8
  %170 = icmp eq %"class.blink::GridTrack"** %169, null
  %171 = bitcast %"class.blink::GridTrack"** %169 to i8*
  br i1 %170, label %177, label %172, !prof !71

172:                                              ; preds = %168
  %173 = load i32, i32* %29, align 4
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %176, label %175, !prof !3

175:                                              ; preds = %172
  store i32 0, i32* %29, align 4
  br label %176

176:                                              ; preds = %175, %172
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %171) #18
  store %"class.blink::GridTrack"** null, %"class.blink::GridTrack"*** %27, align 8
  br label %177

177:                                              ; preds = %168, %176
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #18
  %178 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %23, align 8
  %179 = icmp eq %"class.blink::GridTrack"** %178, null
  %180 = bitcast %"class.blink::GridTrack"** %178 to i8*
  br i1 %179, label %186, label %181, !prof !71

181:                                              ; preds = %177
  %182 = load i32, i32* %25, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %185, label %184, !prof !3

184:                                              ; preds = %181
  store i32 0, i32* %25, align 4
  br label %185

185:                                              ; preds = %184, %181
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %180) #18
  store %"class.blink::GridTrack"** null, %"class.blink::GridTrack"*** %23, align 8
  br label %186

186:                                              ; preds = %177, %185
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #18
  ret void

187:                                              ; preds = %55, %201
  %188 = phi i64* [ %202, %201 ], [ %56, %55 ]
  %189 = load i64, i64* %188, align 8
  %190 = trunc i64 %189 to i32
  %191 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 %190) #18
  %192 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %191, i64 0, i32 2, i32 0
  %193 = load i32, i32* %192, align 8
  %194 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %191, i64 0, i32 0, i32 0
  store i32 %193, i32* %194, align 8
  %195 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %191, i64 0, i32 1, i32 0
  %196 = load i32, i32* %195, align 4
  %197 = icmp ne i32 %196, -64
  %198 = icmp slt i32 %196, %193
  %199 = and i1 %197, %198
  br i1 %199, label %200, label %201

200:                                              ; preds = %187
  store i32 %193, i32* %195, align 4
  br label %201

201:                                              ; preds = %187, %200
  %202 = getelementptr inbounds i64, i64* %188, i64 1
  %203 = icmp eq i64* %202, %59
  br i1 %203, label %168, label %187
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24GridTrackSizingAlgorithm39IncreaseSizesToAccommodateSpanningItemsILNS_25TrackSizeComputationPhaseE3EEEvRKNS_23GridItemsSpanGroupRangeE(%"class.blink::GridTrackSizingAlgorithm"*, %"struct.blink::GridItemsSpanGroupRange"* dereferenceable(16)) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.WTF::Vector.1349", align 8
  %6 = alloca %"class.WTF::Vector.1349", align 8
  %7 = alloca %"class.blink::GridTrack"*, align 8
  %8 = alloca %"class.blink::GridTrack"*, align 8
  %9 = alloca %"class.blink::LayoutUnit", align 4
  %10 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %14 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %15 = select i1 %12, %"class.WTF::Vector"* %13, %"class.WTF::Vector"* %14
  %16 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i64, i64* %17, i64 %20
  %22 = icmp eq i32 %19, 0
  br i1 %22, label %23, label %47

23:                                               ; preds = %47, %2
  %24 = bitcast %"class.WTF::Vector.1349"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #18
  %25 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %5, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %5, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 16, i1 false) #18
  %28 = bitcast %"class.WTF::Vector.1349"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #18
  %29 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %6, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %6, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 16, i1 false) #18
  %32 = getelementptr inbounds %"struct.blink::GridItemsSpanGroupRange", %"struct.blink::GridItemsSpanGroupRange"* %1, i64 0, i32 0
  %33 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %32, align 8
  %34 = getelementptr inbounds %"struct.blink::GridItemsSpanGroupRange", %"struct.blink::GridItemsSpanGroupRange"* %1, i64 0, i32 1
  %35 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %34, align 8
  %36 = icmp eq %"class.blink::GridItemWithSpan"* %33, %35
  br i1 %36, label %57, label %37

37:                                               ; preds = %23
  %38 = bitcast %"class.blink::GridTrack"** %7 to i8*
  %39 = bitcast %"class.blink::GridTrack"** %8 to i8*
  %40 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 13
  %41 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 12
  %42 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %43 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %44 = bitcast %"class.blink::LayoutUnit"* %9 to i8*
  %45 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %9, i64 0, i32 0
  %46 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  br label %68

47:                                               ; preds = %2, %47
  %48 = phi i64* [ %55, %47 ], [ %17, %2 ]
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %49 to i32
  %51 = tail call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %15, i32 %50) #18
  %52 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %51, i64 0, i32 1, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %51, i64 0, i32 2, i32 0
  store i32 %53, i32* %54, align 8
  %55 = getelementptr inbounds i64, i64* %48, i64 1
  %56 = icmp eq i64* %55, %21
  br i1 %56, label %23, label %47

57:                                               ; preds = %173, %23
  %58 = load i64*, i64** %16, align 8
  %59 = load i32, i32* %18, align 4
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i64, i64* %58, i64 %60
  %62 = icmp eq i32 %59, 0
  br i1 %62, label %177, label %63

63:                                               ; preds = %57
  %64 = bitcast i32* %3 to i8*
  %65 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %66 = bitcast i32* %4 to i8*
  %67 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  br label %196

68:                                               ; preds = %37, %173
  %69 = phi %"class.blink::GridItemWithSpan"* [ %33, %37 ], [ %174, %173 ]
  %70 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %69, i64 0, i32 1
  %71 = bitcast %"struct.blink::GridSpan"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  store i32 0, i32* %27, align 4
  store i32 0, i32* %31, align 4
  %73 = shl i64 %72, 32
  %74 = ashr exact i64 %73, 32
  %75 = ashr i64 %72, 32
  %76 = icmp eq i64 %74, %75
  br i1 %76, label %173, label %80

77:                                               ; preds = %134
  %78 = load i32, i32* %31, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %173, label %137

80:                                               ; preds = %68, %134
  %81 = phi i32 [ %103, %134 ], [ 0, %68 ]
  %82 = phi i64 [ %135, %134 ], [ %74, %68 ]
  %83 = trunc i64 %82 to i32
  %84 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %15, i32 %83) #18
  %85 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %84, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %86 = load i8, i8* %85, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %80
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #19
  unreachable

89:                                               ; preds = %80
  %90 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %84, i64 0, i32 1, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, -64
  br i1 %92, label %93, label %96

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %84, i64 0, i32 0, i32 0
  %95 = load i32, i32* %94, align 8
  br label %96

96:                                               ; preds = %89, %93
  %97 = phi i32 [ %95, %93 ], [ %91, %89 ]
  %98 = icmp slt i32 %97, 0
  %99 = select i1 %98, i32 -2147483648, i32 2147483647
  %100 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %97) #18
  %101 = extractvalue { i32, i1 } %100, 1
  %102 = extractvalue { i32, i1 } %100, 0
  %103 = select i1 %101, i32 %99, i32 %102, !prof !3
  %104 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %84, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  %105 = load i16, i16* %104, align 8
  %106 = trunc i16 %105 to i8
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %134

108:                                              ; preds = %96
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #18
  store %"class.blink::GridTrack"* %84, %"class.blink::GridTrack"** %7, align 8
  %109 = load i32, i32* %31, align 4
  %110 = load i32, i32* %30, align 8
  %111 = icmp eq i32 %109, %110
  %112 = ptrtoint %"class.blink::GridTrack"* %84 to i64
  br i1 %111, label %120, label %113, !prof !3

113:                                              ; preds = %108
  %114 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %29, align 8
  %115 = zext i32 %109 to i64
  %116 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %114, i64 %115
  %117 = bitcast %"class.blink::GridTrack"** %116 to i64*
  store i64 %112, i64* %117, align 8
  %118 = load i32, i32* %31, align 4
  %119 = add i32 %118, 1
  store i32 %119, i32* %31, align 4
  br label %121

120:                                              ; preds = %108
  call void @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1349"* nonnull %6, %"class.blink::GridTrack"** nonnull dereferenceable(8) %7) #18
  br label %121

121:                                              ; preds = %120, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #18
  store %"class.blink::GridTrack"* %84, %"class.blink::GridTrack"** %8, align 8
  %122 = load i32, i32* %27, align 4
  %123 = load i32, i32* %26, align 8
  %124 = icmp eq i32 %122, %123
  br i1 %124, label %132, label %125, !prof !3

125:                                              ; preds = %121
  %126 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %25, align 8
  %127 = zext i32 %122 to i64
  %128 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %126, i64 %127
  %129 = bitcast %"class.blink::GridTrack"** %128 to i64*
  store i64 %112, i64* %129, align 8
  %130 = load i32, i32* %27, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %27, align 4
  br label %133

132:                                              ; preds = %121
  call void @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1349"* nonnull %5, %"class.blink::GridTrack"** nonnull dereferenceable(8) %8) #18
  br label %133

133:                                              ; preds = %125, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #18
  br label %134

134:                                              ; preds = %96, %133
  %135 = add i64 %82, 1
  %136 = icmp eq i64 %135, %75
  br i1 %136, label %77, label %80

137:                                              ; preds = %77
  %138 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %40, align 8
  %139 = load %"class.blink::Grid"*, %"class.blink::Grid"** %41, align 8
  %140 = load i32, i32* %10, align 8
  %141 = mul i64 %72, -4294967295
  %142 = ashr i64 %141, 32
  %143 = icmp eq i32 %140, 1
  %144 = select i1 %143, %"class.absl::optional"* %42, %"class.absl::optional"* %43
  %145 = bitcast %"class.absl::optional"* %144 to i64*
  %146 = load i64, i64* %145, align 4
  %147 = call i32 @_ZNK5blink10LayoutGrid11GuttersSizeERKNS_4GridENS_24GridTrackSizingDirectionEmmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %138, %"class.blink::Grid"* dereferenceable(168) %139, i32 %140, i64 %74, i64 %142, i64 %146) #18
  %148 = icmp slt i32 %147, 0
  %149 = select i1 %148, i32 -2147483648, i32 2147483647
  %150 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %103, i32 %147) #18
  %151 = extractvalue { i32, i1 } %150, 1
  %152 = extractvalue { i32, i1 } %150, 0
  %153 = select i1 %151, i32 %149, i32 %152, !prof !3
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #18
  store i32 -1431655766, i32* %45, align 4
  %154 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %69, i64 0, i32 0
  %155 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %154, align 8
  %156 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %46, align 8
  %157 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %156 to i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)***
  %158 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*** %157, align 8
  %159 = getelementptr inbounds i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %158, i64 2
  %160 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %159, align 8
  %161 = call i32 %160(%"class.blink::GridTrackSizingAlgorithmStrategy"* %156, %"class.blink::LayoutBox"* dereferenceable(216) %155) #18
  %162 = icmp sgt i32 %153, -1
  %163 = select i1 %162, i32 -2147483648, i32 2147483647
  %164 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %161, i32 %153) #18
  %165 = extractvalue { i32, i1 } %164, 1
  %166 = extractvalue { i32, i1 } %164, 0
  %167 = select i1 %165, i32 %163, i32 %166, !prof !3
  %168 = icmp sgt i32 %167, 0
  %169 = select i1 %168, i32 %167, i32 0
  store i32 %169, i32* %45, align 4
  %170 = load i32, i32* %27, align 4
  %171 = icmp eq i32 %170, 0
  %172 = select i1 %171, %"class.WTF::Vector.1349"* %6, %"class.WTF::Vector.1349"* %5
  call void @_ZNK5blink24GridTrackSizingAlgorithm23DistributeSpaceToTracksILNS_25TrackSizeComputationPhaseE3EEEvRN3WTF6VectorIPNS_9GridTrackELj0ENS3_18PartitionAllocatorEEEPS8_RNS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithm"* %0, %"class.WTF::Vector.1349"* nonnull dereferenceable(16) %6, %"class.WTF::Vector.1349"* nonnull %172, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %9)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #18
  br label %173

173:                                              ; preds = %68, %77, %137
  %174 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %69, i64 1
  %175 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %34, align 8
  %176 = icmp eq %"class.blink::GridItemWithSpan"* %174, %175
  br i1 %176, label %57, label %68

177:                                              ; preds = %233, %57
  %178 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %29, align 8
  %179 = icmp eq %"class.blink::GridTrack"** %178, null
  %180 = bitcast %"class.blink::GridTrack"** %178 to i8*
  br i1 %179, label %186, label %181, !prof !71

181:                                              ; preds = %177
  %182 = load i32, i32* %31, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %185, label %184, !prof !3

184:                                              ; preds = %181
  store i32 0, i32* %31, align 4
  br label %185

185:                                              ; preds = %184, %181
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %180) #18
  store %"class.blink::GridTrack"** null, %"class.blink::GridTrack"*** %29, align 8
  br label %186

186:                                              ; preds = %177, %185
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #18
  %187 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %25, align 8
  %188 = icmp eq %"class.blink::GridTrack"** %187, null
  %189 = bitcast %"class.blink::GridTrack"** %187 to i8*
  br i1 %188, label %195, label %190, !prof !71

190:                                              ; preds = %186
  %191 = load i32, i32* %27, align 4
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %194, label %193, !prof !3

193:                                              ; preds = %190
  store i32 0, i32* %27, align 4
  br label %194

194:                                              ; preds = %193, %190
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %189) #18
  store %"class.blink::GridTrack"** null, %"class.blink::GridTrack"*** %25, align 8
  br label %195

195:                                              ; preds = %186, %194
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #18
  ret void

196:                                              ; preds = %63, %233
  %197 = phi i64* [ %58, %63 ], [ %234, %233 ]
  %198 = load i64, i64* %197, align 8
  %199 = trunc i64 %198 to i32
  %200 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %15, i32 %199) #18
  %201 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %200, i64 0, i32 1, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %202, -64
  %204 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %200, i64 0, i32 2, i32 0
  %205 = load i32, i32* %204, align 8
  br i1 %203, label %206, label %211

206:                                              ; preds = %196
  %207 = icmp eq i32 %205, -64
  br i1 %207, label %208, label %209

208:                                              ; preds = %206
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64)
  store i32 -64, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66)
  br label %223

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %200, i64 0, i32 5
  store i8 1, i8* %210, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64)
  store i32 %205, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66)
  br label %213

211:                                              ; preds = %196
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64)
  store i32 %205, i32* %3, align 4
  %212 = icmp eq i32 %205, -64
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66)
  br i1 %212, label %223, label %213

213:                                              ; preds = %209, %211
  %214 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %200, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %215 = load i8, i8* %214, align 4, !range !2
  %216 = icmp eq i8 %215, 0
  %217 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %200, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %218 = select i1 %216, %"class.blink::LayoutUnit"* %65, %"class.blink::LayoutUnit"* %217
  %219 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %218, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  store i32 %220, i32* %4, align 4
  %221 = icmp slt i32 %220, %205
  %222 = select i1 %221, %"class.blink::LayoutUnit"* %67, %"class.blink::LayoutUnit"* %65
  br label %223

223:                                              ; preds = %208, %213, %211
  %224 = phi %"class.blink::LayoutUnit"* [ %222, %213 ], [ %65, %211 ], [ %65, %208 ]
  %225 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %224, i64 0, i32 0
  %226 = load i32, i32* %225, align 4
  store i32 %226, i32* %201, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66)
  %227 = icmp eq i32 %226, -64
  br i1 %227, label %233, label %228

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %200, i64 0, i32 0, i32 0
  %230 = load i32, i32* %229, align 4
  %231 = icmp slt i32 %226, %230
  br i1 %231, label %232, label %233

232:                                              ; preds = %228
  store i32 %230, i32* %201, align 4
  br label %233

233:                                              ; preds = %223, %228, %232
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64)
  %234 = getelementptr inbounds i64, i64* %197, i64 1
  %235 = icmp eq i64* %234, %61
  br i1 %235, label %177, label %196
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24GridTrackSizingAlgorithm39IncreaseSizesToAccommodateSpanningItemsILNS_25TrackSizeComputationPhaseE4EEEvRKNS_23GridItemsSpanGroupRangeE(%"class.blink::GridTrackSizingAlgorithm"*, %"struct.blink::GridItemsSpanGroupRange"* dereferenceable(16)) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.WTF::Vector.1349", align 8
  %6 = alloca %"class.WTF::Vector.1349", align 8
  %7 = alloca %"class.blink::GridTrack"*, align 8
  %8 = alloca %"class.blink::GridTrack"*, align 8
  %9 = alloca %"class.blink::LayoutUnit", align 4
  %10 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %14 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %15 = select i1 %12, %"class.WTF::Vector"* %13, %"class.WTF::Vector"* %14
  %16 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i64, i64* %17, i64 %20
  %22 = icmp eq i32 %19, 0
  br i1 %22, label %23, label %47

23:                                               ; preds = %47, %2
  %24 = bitcast %"class.WTF::Vector.1349"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #18
  %25 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %5, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %5, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 16, i1 false) #18
  %28 = bitcast %"class.WTF::Vector.1349"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #18
  %29 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %6, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %6, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 16, i1 false) #18
  %32 = getelementptr inbounds %"struct.blink::GridItemsSpanGroupRange", %"struct.blink::GridItemsSpanGroupRange"* %1, i64 0, i32 0
  %33 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %32, align 8
  %34 = getelementptr inbounds %"struct.blink::GridItemsSpanGroupRange", %"struct.blink::GridItemsSpanGroupRange"* %1, i64 0, i32 1
  %35 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %34, align 8
  %36 = icmp eq %"class.blink::GridItemWithSpan"* %33, %35
  br i1 %36, label %57, label %37

37:                                               ; preds = %23
  %38 = bitcast %"class.blink::GridTrack"** %7 to i8*
  %39 = bitcast %"class.blink::GridTrack"** %8 to i8*
  %40 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 13
  %41 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 12
  %42 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %43 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %44 = bitcast %"class.blink::LayoutUnit"* %9 to i8*
  %45 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %9, i64 0, i32 0
  %46 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  br label %68

47:                                               ; preds = %2, %47
  %48 = phi i64* [ %55, %47 ], [ %17, %2 ]
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %49 to i32
  %51 = tail call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %15, i32 %50) #18
  %52 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %51, i64 0, i32 1, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %51, i64 0, i32 2, i32 0
  store i32 %53, i32* %54, align 8
  %55 = getelementptr inbounds i64, i64* %48, i64 1
  %56 = icmp eq i64* %55, %21
  br i1 %56, label %23, label %47

57:                                               ; preds = %173, %23
  %58 = load i64*, i64** %16, align 8
  %59 = load i32, i32* %18, align 4
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i64, i64* %58, i64 %60
  %62 = icmp eq i32 %59, 0
  br i1 %62, label %177, label %63

63:                                               ; preds = %57
  %64 = bitcast i32* %3 to i8*
  %65 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %66 = bitcast i32* %4 to i8*
  %67 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  br label %196

68:                                               ; preds = %37, %173
  %69 = phi %"class.blink::GridItemWithSpan"* [ %33, %37 ], [ %174, %173 ]
  %70 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %69, i64 0, i32 1
  %71 = bitcast %"struct.blink::GridSpan"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  store i32 0, i32* %27, align 4
  store i32 0, i32* %31, align 4
  %73 = shl i64 %72, 32
  %74 = ashr exact i64 %73, 32
  %75 = ashr i64 %72, 32
  %76 = icmp eq i64 %74, %75
  br i1 %76, label %173, label %80

77:                                               ; preds = %134
  %78 = load i32, i32* %31, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %173, label %137

80:                                               ; preds = %68, %134
  %81 = phi i32 [ %103, %134 ], [ 0, %68 ]
  %82 = phi i64 [ %135, %134 ], [ %74, %68 ]
  %83 = trunc i64 %82 to i32
  %84 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %15, i32 %83) #18
  %85 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %84, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %86 = load i8, i8* %85, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %80
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #19
  unreachable

89:                                               ; preds = %80
  %90 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %84, i64 0, i32 1, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, -64
  br i1 %92, label %93, label %96

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %84, i64 0, i32 0, i32 0
  %95 = load i32, i32* %94, align 8
  br label %96

96:                                               ; preds = %89, %93
  %97 = phi i32 [ %95, %93 ], [ %91, %89 ]
  %98 = icmp slt i32 %97, 0
  %99 = select i1 %98, i32 -2147483648, i32 2147483647
  %100 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %97) #18
  %101 = extractvalue { i32, i1 } %100, 1
  %102 = extractvalue { i32, i1 } %100, 0
  %103 = select i1 %101, i32 %99, i32 %102, !prof !3
  %104 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %84, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  %105 = load i16, i16* %104, align 8
  %106 = and i16 %105, 514
  %107 = icmp eq i16 %106, 0
  br i1 %107, label %134, label %108

108:                                              ; preds = %96
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #18
  store %"class.blink::GridTrack"* %84, %"class.blink::GridTrack"** %7, align 8
  %109 = load i32, i32* %31, align 4
  %110 = load i32, i32* %30, align 8
  %111 = icmp eq i32 %109, %110
  %112 = ptrtoint %"class.blink::GridTrack"* %84 to i64
  br i1 %111, label %120, label %113, !prof !3

113:                                              ; preds = %108
  %114 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %29, align 8
  %115 = zext i32 %109 to i64
  %116 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %114, i64 %115
  %117 = bitcast %"class.blink::GridTrack"** %116 to i64*
  store i64 %112, i64* %117, align 8
  %118 = load i32, i32* %31, align 4
  %119 = add i32 %118, 1
  store i32 %119, i32* %31, align 4
  br label %121

120:                                              ; preds = %108
  call void @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1349"* nonnull %6, %"class.blink::GridTrack"** nonnull dereferenceable(8) %7) #18
  br label %121

121:                                              ; preds = %120, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #18
  store %"class.blink::GridTrack"* %84, %"class.blink::GridTrack"** %8, align 8
  %122 = load i32, i32* %27, align 4
  %123 = load i32, i32* %26, align 8
  %124 = icmp eq i32 %122, %123
  br i1 %124, label %132, label %125, !prof !3

125:                                              ; preds = %121
  %126 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %25, align 8
  %127 = zext i32 %122 to i64
  %128 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %126, i64 %127
  %129 = bitcast %"class.blink::GridTrack"** %128 to i64*
  store i64 %112, i64* %129, align 8
  %130 = load i32, i32* %27, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %27, align 4
  br label %133

132:                                              ; preds = %121
  call void @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1349"* nonnull %5, %"class.blink::GridTrack"** nonnull dereferenceable(8) %8) #18
  br label %133

133:                                              ; preds = %125, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #18
  br label %134

134:                                              ; preds = %96, %133
  %135 = add i64 %82, 1
  %136 = icmp eq i64 %135, %75
  br i1 %136, label %77, label %80

137:                                              ; preds = %77
  %138 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %40, align 8
  %139 = load %"class.blink::Grid"*, %"class.blink::Grid"** %41, align 8
  %140 = load i32, i32* %10, align 8
  %141 = mul i64 %72, -4294967295
  %142 = ashr i64 %141, 32
  %143 = icmp eq i32 %140, 1
  %144 = select i1 %143, %"class.absl::optional"* %42, %"class.absl::optional"* %43
  %145 = bitcast %"class.absl::optional"* %144 to i64*
  %146 = load i64, i64* %145, align 4
  %147 = call i32 @_ZNK5blink10LayoutGrid11GuttersSizeERKNS_4GridENS_24GridTrackSizingDirectionEmmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %138, %"class.blink::Grid"* dereferenceable(168) %139, i32 %140, i64 %74, i64 %142, i64 %146) #18
  %148 = icmp slt i32 %147, 0
  %149 = select i1 %148, i32 -2147483648, i32 2147483647
  %150 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %103, i32 %147) #18
  %151 = extractvalue { i32, i1 } %150, 1
  %152 = extractvalue { i32, i1 } %150, 0
  %153 = select i1 %151, i32 %149, i32 %152, !prof !3
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #18
  store i32 -1431655766, i32* %45, align 4
  %154 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %69, i64 0, i32 0
  %155 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %154, align 8
  %156 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %46, align 8
  %157 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %156 to i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)***
  %158 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*** %157, align 8
  %159 = getelementptr inbounds i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %158, i64 3
  %160 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::LayoutBox"*)** %159, align 8
  %161 = call i32 %160(%"class.blink::GridTrackSizingAlgorithmStrategy"* %156, %"class.blink::LayoutBox"* dereferenceable(216) %155) #18
  %162 = icmp sgt i32 %153, -1
  %163 = select i1 %162, i32 -2147483648, i32 2147483647
  %164 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %161, i32 %153) #18
  %165 = extractvalue { i32, i1 } %164, 1
  %166 = extractvalue { i32, i1 } %164, 0
  %167 = select i1 %165, i32 %163, i32 %166, !prof !3
  %168 = icmp sgt i32 %167, 0
  %169 = select i1 %168, i32 %167, i32 0
  store i32 %169, i32* %45, align 4
  %170 = load i32, i32* %27, align 4
  %171 = icmp eq i32 %170, 0
  %172 = select i1 %171, %"class.WTF::Vector.1349"* %6, %"class.WTF::Vector.1349"* %5
  call void @_ZNK5blink24GridTrackSizingAlgorithm23DistributeSpaceToTracksILNS_25TrackSizeComputationPhaseE4EEEvRN3WTF6VectorIPNS_9GridTrackELj0ENS3_18PartitionAllocatorEEEPS8_RNS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithm"* %0, %"class.WTF::Vector.1349"* nonnull dereferenceable(16) %6, %"class.WTF::Vector.1349"* nonnull %172, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %9)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #18
  br label %173

173:                                              ; preds = %68, %77, %137
  %174 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %69, i64 1
  %175 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %34, align 8
  %176 = icmp eq %"class.blink::GridItemWithSpan"* %174, %175
  br i1 %176, label %57, label %68

177:                                              ; preds = %230, %57
  %178 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %29, align 8
  %179 = icmp eq %"class.blink::GridTrack"** %178, null
  %180 = bitcast %"class.blink::GridTrack"** %178 to i8*
  br i1 %179, label %186, label %181, !prof !71

181:                                              ; preds = %177
  %182 = load i32, i32* %31, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %185, label %184, !prof !3

184:                                              ; preds = %181
  store i32 0, i32* %31, align 4
  br label %185

185:                                              ; preds = %184, %181
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %180) #18
  store %"class.blink::GridTrack"** null, %"class.blink::GridTrack"*** %29, align 8
  br label %186

186:                                              ; preds = %177, %185
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #18
  %187 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %25, align 8
  %188 = icmp eq %"class.blink::GridTrack"** %187, null
  %189 = bitcast %"class.blink::GridTrack"** %187 to i8*
  br i1 %188, label %195, label %190, !prof !71

190:                                              ; preds = %186
  %191 = load i32, i32* %27, align 4
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %194, label %193, !prof !3

193:                                              ; preds = %190
  store i32 0, i32* %27, align 4
  br label %194

194:                                              ; preds = %193, %190
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %189) #18
  store %"class.blink::GridTrack"** null, %"class.blink::GridTrack"*** %25, align 8
  br label %195

195:                                              ; preds = %186, %194
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #18
  ret void

196:                                              ; preds = %63, %230
  %197 = phi i64* [ %58, %63 ], [ %231, %230 ]
  %198 = load i64, i64* %197, align 8
  %199 = trunc i64 %198 to i32
  %200 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %15, i32 %199) #18
  %201 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %200, i64 0, i32 5
  %202 = load i8, i8* %201, align 8, !range !2
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %205, label %204

204:                                              ; preds = %196
  store i8 0, i8* %201, align 8
  br label %205

205:                                              ; preds = %196, %204
  %206 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %200, i64 0, i32 2, i32 0
  %207 = load i32, i32* %206, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64)
  store i32 %207, i32* %3, align 4
  %208 = icmp eq i32 %207, -64
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66)
  br i1 %208, label %219, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %200, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %211 = load i8, i8* %210, align 4, !range !2
  %212 = icmp eq i8 %211, 0
  %213 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %200, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %214 = select i1 %212, %"class.blink::LayoutUnit"* %65, %"class.blink::LayoutUnit"* %213
  %215 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %214, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  store i32 %216, i32* %4, align 4
  %217 = icmp slt i32 %216, %207
  %218 = select i1 %217, %"class.blink::LayoutUnit"* %67, %"class.blink::LayoutUnit"* %65
  br label %219

219:                                              ; preds = %209, %205
  %220 = phi %"class.blink::LayoutUnit"* [ %218, %209 ], [ %65, %205 ]
  %221 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %220, i64 0, i32 0
  %222 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %200, i64 0, i32 1, i32 0
  %223 = load i32, i32* %221, align 4
  store i32 %223, i32* %222, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66)
  %224 = icmp eq i32 %223, -64
  br i1 %224, label %230, label %225

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %200, i64 0, i32 0, i32 0
  %227 = load i32, i32* %226, align 4
  %228 = icmp slt i32 %223, %227
  br i1 %228, label %229, label %230

229:                                              ; preds = %225
  store i32 %227, i32* %222, align 4
  br label %230

230:                                              ; preds = %219, %225, %229
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64)
  %231 = getelementptr inbounds i64, i64* %197, i64 1
  %232 = icmp eq i64* %231, %61
  br i1 %232, label %177, label %196
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24GridTrackSizingAlgorithm34ComputeGridContainerIntrinsicSizesEv(%"class.blink::GridTrackSizingAlgorithm"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 16, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 15, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %9 = select i1 %6, %"class.WTF::Vector"* %7, %"class.WTF::Vector"* %8
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %34, %1
  ret void

18:                                               ; preds = %1, %47
  %19 = phi i32 [ %48, %47 ], [ 0, %1 ]
  %20 = phi %"class.blink::GridTrack"* [ %45, %47 ], [ %11, %1 ]
  %21 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %20, i64 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 0
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 %22) #18
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !3
  store i32 %28, i32* %3, align 4
  %29 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %20, i64 0, i32 1, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, -64
  br i1 %31, label %32, label %34

32:                                               ; preds = %18
  %33 = load i32, i32* %21, align 8
  br label %34

34:                                               ; preds = %18, %32
  %35 = phi i32 [ %33, %32 ], [ %30, %18 ]
  %36 = load i32, i32* %2, align 4
  %37 = icmp slt i32 %35, 0
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %36, i32 %35) #18
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 %38, i32 %41, !prof !3
  store i32 %42, i32* %2, align 4
  %43 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %20, i64 0, i32 4
  %44 = bitcast %"class.absl::optional"* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %20, i64 1
  %46 = icmp eq %"class.blink::GridTrack"* %45, %15
  br i1 %46, label %17, label %47

47:                                               ; preds = %34
  %48 = load i32, i32* %3, align 4
  br label %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink24GridTrackSizingAlgorithm25ComputeFlexFactorUnitSizeERKN3WTF6VectorINS_9GridTrackELj0ENS1_18PartitionAllocatorEEEdRNS_10LayoutUnitERKNS2_ImLj8ES4_EENSt3__110unique_ptrINS1_7HashSetImNS1_7IntHashImEENS1_29UnsignedWithZeroKeyHashTraitsImEES4_EENSD_14default_deleteISK_EEEE(%"class.blink::GridTrackSizingAlgorithm"* nocapture readnone, %"class.WTF::Vector"* dereferenceable(16), double, %"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.WTF::Vector.1360"* nocapture readonly dereferenceable(80), %"class.WTF::HashSet.1367"*) local_unnamed_addr #3 align 2 {
  %7 = alloca i64, align 8
  %8 = ptrtoint %"class.WTF::HashSet.1367"* %5 to i64
  %9 = fcmp ogt double %2, 1.000000e+00
  %10 = select i1 %9, double %2, double 1.000000e+00
  %11 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = sitofp i32 %12 to double
  %14 = fmul double %13, 1.562500e-02
  %15 = fdiv double %14, %10
  %16 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %4, i64 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %4, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i64, i64* %17, i64 %20
  %22 = icmp eq i32 %19, 0
  br i1 %22, label %147, label %23

23:                                               ; preds = %6
  %24 = bitcast i64* %7 to i8*
  br label %29

25:                                               ; preds = %139
  %26 = and i8 %142, 1
  %27 = icmp eq i8 %26, 0
  %28 = inttoptr i64 %141 to %"class.WTF::HashSet.1367"*
  br i1 %27, label %145, label %147

29:                                               ; preds = %23, %139
  %30 = phi i64* [ %17, %23 ], [ %143, %139 ]
  %31 = phi i8 [ 1, %23 ], [ %142, %139 ]
  %32 = phi i64 [ %8, %23 ], [ %141, %139 ]
  %33 = phi double [ %2, %23 ], [ %140, %139 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #18
  store i64 -6148914691236517206, i64* %7, align 8
  %34 = load i64, i64* %30, align 8
  store i64 %34, i64* %7, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::HashSet.1367"*
  %36 = icmp ne i64 %32, 0
  br i1 %36, label %37, label %102

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::HashSet.1367", %"class.WTF::HashSet.1367"* %35, i64 0, i32 0, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = icmp eq i64* %39, null
  br i1 %40, label %102, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.WTF::HashSet.1367", %"class.WTF::HashSet.1367"* %35, i64 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = add i32 %43, -1
  %45 = zext i32 %44 to i64
  %46 = shl i64 %34, 32
  %47 = xor i64 %46, -1
  %48 = add i64 %34, %47
  %49 = lshr i64 %48, 22
  %50 = xor i64 %49, %48
  %51 = shl i64 %50, 13
  %52 = xor i64 %51, -1
  %53 = add i64 %50, %52
  %54 = lshr i64 %53, 8
  %55 = xor i64 %54, %53
  %56 = mul i64 %55, 9
  %57 = lshr i64 %56, 15
  %58 = xor i64 %57, %56
  %59 = shl i64 %58, 27
  %60 = xor i64 %59, -1
  %61 = add i64 %58, %60
  %62 = lshr i64 %61, 31
  %63 = xor i64 %62, %61
  %64 = trunc i64 %63 to i32
  %65 = and i32 %44, %64
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i64, i64* %39, i64 %66
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, %34
  br i1 %69, label %99, label %70

70:                                               ; preds = %41
  %71 = xor i32 %64, -1
  %72 = lshr i32 %64, 23
  %73 = add i32 %72, %71
  %74 = shl i32 %73, 12
  %75 = xor i32 %74, %73
  %76 = lshr i32 %75, 7
  %77 = xor i32 %76, %75
  %78 = shl i32 %77, 2
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 20
  %81 = xor i32 %80, %79
  %82 = or i32 %81, 1
  %83 = zext i32 %82 to i64
  br label %84

84:                                               ; preds = %89, %70
  %85 = phi i64 [ %68, %70 ], [ %95, %89 ]
  %86 = phi i64 [ %66, %70 ], [ %93, %89 ]
  %87 = phi i64 [ 0, %70 ], [ %91, %89 ]
  %88 = icmp eq i64 %85, -1
  br i1 %88, label %102, label %89

89:                                               ; preds = %84
  %90 = icmp eq i64 %87, 0
  %91 = select i1 %90, i64 %83, i64 %87
  %92 = add i64 %91, %86
  %93 = and i64 %92, %45
  %94 = getelementptr inbounds i64, i64* %39, i64 %93
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %95, %34
  br i1 %96, label %97, label %84

97:                                               ; preds = %89
  %98 = getelementptr inbounds i64, i64* %39, i64 %93
  br label %99

99:                                               ; preds = %97, %41
  %100 = phi i64* [ %67, %41 ], [ %98, %97 ]
  %101 = icmp eq i64* %100, null
  br i1 %101, label %102, label %139

102:                                              ; preds = %84, %99, %37, %29
  %103 = trunc i64 %34 to i32
  %104 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZNK3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 %103) #18
  %105 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %104, i64 0, i32 0, i32 0
  %106 = load i32, i32* %105, align 8
  %107 = load i64, i64* %7, align 8
  %108 = trunc i64 %107 to i32
  %109 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZNK3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 %108) #18
  %110 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %109, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %111 = load i8, i8* %110, align 8, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %102
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #19
  unreachable

114:                                              ; preds = %102
  %115 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %109, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 1
  %116 = load double, double* %115, align 8
  %117 = fmul double %15, %116
  %118 = sitofp i32 %106 to double
  %119 = fmul double %118, 1.562500e-02
  %120 = fcmp ogt double %119, %117
  br i1 %120, label %121, label %139

121:                                              ; preds = %114
  %122 = load i32, i32* %11, align 4
  %123 = icmp sgt i32 %106, -1
  %124 = select i1 %123, i32 -2147483648, i32 2147483647
  %125 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %122, i32 %106) #18
  %126 = extractvalue { i32, i1 } %125, 1
  %127 = extractvalue { i32, i1 } %125, 0
  %128 = select i1 %126, i32 %124, i32 %127, !prof !3
  store i32 %128, i32* %11, align 4
  %129 = fsub double %33, %116
  br i1 %36, label %134, label %130

130:                                              ; preds = %121
  %131 = call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([180 x i8], [180 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashSetImNS_7IntHashImEENS_29UnsignedWithZeroKeyHashTraitsImEENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 20, i1 false) #18
  %132 = ptrtoint i8* %131 to i64
  %133 = bitcast i8* %131 to %"class.WTF::HashSet.1367"*
  br label %134

134:                                              ; preds = %130, %121
  %135 = phi %"class.WTF::HashSet.1367"* [ %133, %130 ], [ %35, %121 ]
  %136 = phi i64 [ %132, %130 ], [ %32, %121 ]
  %137 = getelementptr inbounds %"class.WTF::HashSet.1367", %"class.WTF::HashSet.1367"* %135, i64 0, i32 0
  %138 = call { i64*, i8 } @_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_29UnsignedWithZeroKeyHashTraitsImEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKmRmEENS_18HashTableAddResultIS7_mEEOT0_OT1_(%"class.WTF::HashTable.1368"* %137, i64* nonnull dereferenceable(8) %7, i64* nonnull dereferenceable(8) %7) #18
  br label %139

139:                                              ; preds = %99, %114, %134
  %140 = phi double [ %33, %99 ], [ %129, %134 ], [ %33, %114 ]
  %141 = phi i64 [ %32, %99 ], [ %136, %134 ], [ %32, %114 ]
  %142 = phi i8 [ %31, %99 ], [ 0, %134 ], [ %31, %114 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #18
  %143 = getelementptr inbounds i64, i64* %30, i64 1
  %144 = icmp eq i64* %143, %21
  br i1 %144, label %25, label %29

145:                                              ; preds = %25
  %146 = call double @_ZNK5blink24GridTrackSizingAlgorithm25ComputeFlexFactorUnitSizeERKN3WTF6VectorINS_9GridTrackELj0ENS1_18PartitionAllocatorEEEdRNS_10LayoutUnitERKNS2_ImLj8ES4_EENSt3__110unique_ptrINS1_7HashSetImNS1_7IntHashImEENS1_29UnsignedWithZeroKeyHashTraitsImEES4_EENSD_14default_deleteISK_EEEE(%"class.blink::GridTrackSizingAlgorithm"* %0, %"class.WTF::Vector"* dereferenceable(16) %1, double %140, %"class.blink::LayoutUnit"* dereferenceable(4) %3, %"class.WTF::Vector.1360"* dereferenceable(80) %4, %"class.WTF::HashSet.1367"* %28)
  br label %159

147:                                              ; preds = %6, %25
  %148 = phi %"class.WTF::HashSet.1367"* [ %28, %25 ], [ %5, %6 ]
  %149 = phi i64 [ %141, %25 ], [ %8, %6 ]
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %159, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.WTF::HashSet.1367", %"class.WTF::HashSet.1367"* %148, i64 0, i32 0, i32 0
  %153 = load i64*, i64** %152, align 8
  %154 = icmp eq i64* %153, null
  br i1 %154, label %157, label %155, !prof !71

155:                                              ; preds = %151
  %156 = bitcast i64* %153 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %156) #18
  store i64* null, i64** %152, align 8
  br label %157

157:                                              ; preds = %155, %151
  %158 = inttoptr i64 %149 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %158) #18
  br label %159

159:                                              ; preds = %157, %147, %145
  %160 = phi double [ %146, %145 ], [ %15, %147 ], [ %15, %157 ]
  ret double %160
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink24GridTrackSizingAlgorithm28ComputeFlexSizedTracksGrowthEdRN3WTF6VectorINS_10LayoutUnitELj0ENS1_18PartitionAllocatorEEERS3_(%"class.blink::GridTrackSizingAlgorithm"*, double, %"class.WTF::Vector.959"* dereferenceable(16), %"class.blink::LayoutUnit"* nocapture dereferenceable(4)) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 9
  %6 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %13 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %14 = select i1 %11, %"class.WTF::Vector"* %12, %"class.WTF::Vector"* %13
  %15 = icmp eq i32 %7, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  br label %19

18:                                               ; preds = %30, %4
  ret void

19:                                               ; preds = %30, %16
  %20 = phi i64 [ 0, %16 ], [ %65, %30 ]
  %21 = trunc i64 %20 to i32
  %22 = tail call dereferenceable(8) i64* @_ZNK3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* %5, i32 %21) #18
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %23 to i32
  %25 = tail call dereferenceable(128) %"class.blink::GridTrack"* @_ZNK3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 %24) #18
  %26 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %25, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %19
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #19
  unreachable

30:                                               ; preds = %19
  %31 = tail call dereferenceable(128) %"class.blink::GridTrack"* @_ZNK3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 %24) #18
  %32 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %31, i64 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %25, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 1
  %35 = load double, double* %34, align 8
  %36 = fmul double %35, %1
  %37 = fmul double %36, 6.400000e+01
  %38 = fcmp ult double %37, 0xC1E0000000000000
  %39 = fcmp ugt double %37, 0x41DFFFFFFFC00000
  %40 = fcmp ogt double %37, 0xC1E0000000000000
  %41 = select i1 %40, double %37, double 0xC1E0000000000000
  %42 = fptosi double %41 to i32
  %43 = select i1 %38, i32 0, i32 2147483647
  %44 = select i1 %39, i32 %43, i32 %42
  %45 = icmp slt i32 %33, %44
  %46 = select i1 %45, i32 %44, i32 %33
  %47 = icmp sgt i32 %33, -1
  %48 = select i1 %47, i32 -2147483648, i32 2147483647
  %49 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %46, i32 %33) #18
  %50 = extractvalue { i32, i1 } %49, 1
  %51 = extractvalue { i32, i1 } %49, 0
  %52 = select i1 %50, i32 %48, i32 %51, !prof !3
  %53 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.959"* %2, i32 %21) #18
  %54 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %53, i64 0, i32 0
  store i32 %52, i32* %54, align 4
  %55 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.959"* %2, i32 %21) #18
  %56 = load i32, i32* %17, align 4
  %57 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %55, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp slt i32 %58, 0
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %56, i32 %58) #18
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !3
  store i32 %64, i32* %17, align 4
  %65 = add nuw nsw i64 %20, 1
  %66 = icmp eq i64 %65, %8
  br i1 %66, label %18, label %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24GridTrackSizingAlgorithm21StretchFlexibleTracksEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"*, i64) local_unnamed_addr #3 align 2 {
  %3 = alloca double, align 8
  %4 = alloca %"class.blink::LayoutUnit", align 4
  %5 = alloca %"class.WTF::Vector.959", align 8
  %6 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 9
  %7 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %150, label %10

10:                                               ; preds = %2
  %11 = bitcast double* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #18
  store double 0xFFFFFFFFFFFFFFFF, double* %3, align 8
  %12 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %13 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %15 = load i32, i32* %14, align 8
  %16 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %13 to double (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector.6"*, i32, i64)***
  %17 = load double (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector.6"*, i32, i64)**, double (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector.6"*, i32, i64)*** %16, align 8
  %18 = getelementptr inbounds double (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector.6"*, i32, i64)*, double (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector.6"*, i32, i64)** %17, i64 5
  %19 = load double (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector.6"*, i32, i64)*, double (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector.6"*, i32, i64)** %18, align 8
  %20 = tail call double %19(%"class.blink::GridTrackSizingAlgorithmStrategy"* %13, %"class.WTF::Vector.6"* dereferenceable(16) %6, i32 %15, i64 %1) #18
  store double %20, double* %3, align 8
  %21 = bitcast %"class.blink::LayoutUnit"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #18
  %22 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  store i32 0, i32* %22, align 4
  %23 = bitcast %"class.WTF::Vector.959"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #18
  %24 = getelementptr inbounds %"class.WTF::Vector.959", %"class.WTF::Vector.959"* %5, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.WTF::Vector.959", %"class.WTF::Vector.959"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 16, i1 false) #18
  %26 = load i32, i32* %7, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %48, label %28

28:                                               ; preds = %10
  %29 = getelementptr inbounds %"class.WTF::Vector.959", %"class.WTF::Vector.959"* %5, i64 0, i32 0, i32 0, i32 1
  %30 = icmp ugt i32 %26, 4
  %31 = select i1 %30, i32 %26, i32 4
  %32 = zext i32 %31 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64 %32) #18
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv, i64 0, i64 0)) #18
  %35 = ptrtoint i8* %34 to i64
  %36 = bitcast %"class.WTF::Vector.959"* %5 to i64*
  store atomic i64 %35, i64* %36 monotonic, align 8
  %37 = lshr i64 %33, 2
  %38 = trunc i64 %37 to i32
  store i32 %38, i32* %29, align 8
  %39 = bitcast i8* %34 to %"class.blink::LayoutUnit"*
  %40 = zext i32 %26 to i64
  %41 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %39, i64 %40
  %42 = ptrtoint i8* %34 to i64
  %43 = getelementptr %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %41, i64 -1, i32 0
  %44 = ptrtoint i32* %43 to i64
  %45 = add i64 %44, 4
  %46 = sub i64 %45, %42
  %47 = and i64 %46, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %34, i8 0, i64 %47, i1 false) #18
  br label %48

48:                                               ; preds = %10, %28
  store i32 %26, i32* %25, align 4
  call void @_ZNK5blink24GridTrackSizingAlgorithm28ComputeFlexSizedTracksGrowthEdRN3WTF6VectorINS_10LayoutUnitELj0ENS1_18PartitionAllocatorEEERS3_(%"class.blink::GridTrackSizingAlgorithm"* %0, double %20, %"class.WTF::Vector.959"* nonnull dereferenceable(16) %5, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %4)
  %49 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %12, align 8
  %50 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %49 to i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector.6"*, double*, %"class.WTF::Vector.959"*, %"class.blink::LayoutUnit"*)***
  %51 = load i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector.6"*, double*, %"class.WTF::Vector.959"*, %"class.blink::LayoutUnit"*)**, i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector.6"*, double*, %"class.WTF::Vector.959"*, %"class.blink::LayoutUnit"*)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector.6"*, double*, %"class.WTF::Vector.959"*, %"class.blink::LayoutUnit"*)*, i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector.6"*, double*, %"class.WTF::Vector.959"*, %"class.blink::LayoutUnit"*)** %51, i64 6
  %53 = load i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector.6"*, double*, %"class.WTF::Vector.959"*, %"class.blink::LayoutUnit"*)*, i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector.6"*, double*, %"class.WTF::Vector.959"*, %"class.blink::LayoutUnit"*)** %52, align 8
  %54 = call zeroext i1 %53(%"class.blink::GridTrackSizingAlgorithmStrategy"* %49, %"class.WTF::Vector.6"* dereferenceable(16) %6, double* nonnull dereferenceable(8) %3, %"class.WTF::Vector.959"* nonnull dereferenceable(16) %5, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %4) #18
  br i1 %54, label %55, label %57

55:                                               ; preds = %48
  store i32 0, i32* %22, align 4
  %56 = load double, double* %3, align 8
  call void @_ZNK5blink24GridTrackSizingAlgorithm28ComputeFlexSizedTracksGrowthEdRN3WTF6VectorINS_10LayoutUnitELj0ENS1_18PartitionAllocatorEEERS3_(%"class.blink::GridTrackSizingAlgorithm"* %0, double %56, %"class.WTF::Vector.959"* nonnull dereferenceable(16) %5, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %4)
  br label %57

57:                                               ; preds = %55, %48
  %58 = load i32, i32* %14, align 8
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %61 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %62 = select i1 %59, %"class.WTF::Vector"* %60, %"class.WTF::Vector"* %61
  %63 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %6, i64 0, i32 0, i32 0, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = load i32, i32* %7, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i64, i64* %64, i64 %66
  %68 = icmp eq i32 %65, 0
  br i1 %68, label %71, label %83

69:                                               ; preds = %110
  %70 = load i32, i32* %14, align 8
  br label %71

71:                                               ; preds = %69, %57
  %72 = phi i32 [ %70, %69 ], [ %58, %57 ]
  %73 = icmp eq i32 %72, 1
  %74 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 5
  %75 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 4
  %76 = select i1 %73, %"class.absl::optional"* %74, %"class.absl::optional"* %75
  %77 = bitcast %"class.absl::optional"* %76 to i64*
  %78 = load i64, i64* %77, align 4
  %79 = trunc i64 %78 to i8
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %113

81:                                               ; preds = %71
  %82 = load i32, i32* %22, align 4
  br label %131

83:                                               ; preds = %57, %110
  %84 = phi i64 [ %89, %110 ], [ 0, %57 ]
  %85 = phi i64* [ %111, %110 ], [ %64, %57 ]
  %86 = load i64, i64* %85, align 8
  %87 = trunc i64 %86 to i32
  %88 = call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %62, i32 %87) #18
  %89 = add nuw nsw i64 %84, 1
  %90 = trunc i64 %84 to i32
  %91 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.959"* nonnull %5, i32 %90) #18
  %92 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %91, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %110, label %95

95:                                               ; preds = %83
  %96 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %88, i64 0, i32 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = icmp slt i32 %93, 0
  %99 = select i1 %98, i32 -2147483648, i32 2147483647
  %100 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %97, i32 %93) #18
  %101 = extractvalue { i32, i1 } %100, 1
  %102 = extractvalue { i32, i1 } %100, 0
  %103 = select i1 %101, i32 %99, i32 %102, !prof !3
  store i32 %103, i32* %96, align 8
  %104 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %88, i64 0, i32 1, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp ne i32 %105, -64
  %107 = icmp slt i32 %105, %103
  %108 = and i1 %106, %107
  br i1 %108, label %109, label %110

109:                                              ; preds = %95
  store i32 %103, i32* %104, align 4
  br label %110

110:                                              ; preds = %83, %109, %95
  %111 = getelementptr inbounds i64, i64* %85, i64 1
  %112 = icmp eq i64* %111, %67
  br i1 %112, label %69, label %83

113:                                              ; preds = %71
  %114 = lshr i64 %78, 32
  %115 = trunc i64 %114 to i32
  %116 = load i32, i32* %22, align 4
  %117 = icmp sgt i32 %116, -1
  %118 = select i1 %117, i32 -2147483648, i32 2147483647
  %119 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %115, i32 %116) #18
  %120 = extractvalue { i32, i1 } %119, 1
  %121 = extractvalue { i32, i1 } %119, 0
  %122 = select i1 %120, i32 %118, i32 %121, !prof !3
  %123 = zext i32 %122 to i64
  %124 = shl nuw i64 %123, 32
  %125 = or i64 %124, 1
  %126 = icmp eq i32 %72, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %113
  %128 = bitcast %"class.absl::optional"* %75 to i64*
  store i64 %125, i64* %128, align 4
  br label %131

129:                                              ; preds = %113
  %130 = bitcast %"class.absl::optional"* %74 to i64*
  store i64 %125, i64* %130, align 4
  br label %131

131:                                              ; preds = %81, %129, %127
  %132 = phi i32 [ %82, %81 ], [ %116, %129 ], [ %116, %127 ]
  %133 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 16, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp slt i32 %132, 0
  %136 = select i1 %135, i32 -2147483648, i32 2147483647
  %137 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %134, i32 %132) #18
  %138 = extractvalue { i32, i1 } %137, 1
  %139 = extractvalue { i32, i1 } %137, 0
  %140 = select i1 %138, i32 %136, i32 %139, !prof !3
  store i32 %140, i32* %133, align 4
  %141 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %24, align 8
  %142 = icmp eq %"class.blink::LayoutUnit"* %141, null
  %143 = bitcast %"class.blink::LayoutUnit"* %141 to i8*
  br i1 %142, label %149, label %144, !prof !71

144:                                              ; preds = %131
  %145 = load i32, i32* %25, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %148, label %147, !prof !3

147:                                              ; preds = %144
  store i32 0, i32* %25, align 4
  br label %148

148:                                              ; preds = %147, %144
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %143) #18
  store %"class.blink::LayoutUnit"* null, %"class.blink::LayoutUnit"** %24, align 8
  br label %149

149:                                              ; preds = %131, %148
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #18
  br label %150

150:                                              ; preds = %2, %149
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24GridTrackSizingAlgorithm17StretchAutoTracksEv(%"class.blink::GridTrackSizingAlgorithm"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %3 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %2, align 8
  %4 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %3 to i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)***
  %5 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)**, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)** %5, i64 7
  %7 = load i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*, i32 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::GridTrackSizingAlgorithmStrategy"* %3) #18
  %9 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %8, 1
  %13 = or i1 %12, %11
  br i1 %13, label %91, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 13
  %16 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %18 = load i32, i32* %17, align 8
  %19 = tail call i32 @_ZNK5blink10LayoutGrid16ContentAlignmentENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* %16, i32 %18) #18
  %20 = and i32 %19, 112
  %21 = icmp eq i32 %20, 64
  br i1 %21, label %22, label %91

22:                                               ; preds = %14
  %23 = load i32, i32* %9, align 4
  %24 = icmp ugt i32 %23, 33554430
  %25 = shl i32 %23, 6
  %26 = select i1 %24, i32 2147483647, i32 %25
  %27 = sext i32 %8 to i64
  %28 = shl nsw i64 %27, 6
  %29 = sext i32 %26 to i64
  %30 = sdiv i64 %28, %29
  %31 = tail call i1 @llvm.is.constant.i64(i64 %30) #18
  br i1 %31, label %39, label %32

32:                                               ; preds = %22
  %33 = icmp slt i64 %30, 0
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = add nsw i64 %30, 2147483648
  %36 = icmp ult i64 %35, 4294967296
  %37 = trunc i64 %30 to i32
  %38 = select i1 %36, i32 %37, i32 %34, !prof !71
  br label %45

39:                                               ; preds = %22
  %40 = icmp sgt i64 %30, 2147483647
  br i1 %40, label %45, label %41

41:                                               ; preds = %39
  %42 = icmp sgt i64 %30, -2147483648
  %43 = select i1 %42, i64 %30, i64 -2147483648
  %44 = trunc i64 %43 to i32
  br label %45

45:                                               ; preds = %32, %39, %41
  %46 = phi i32 [ %38, %32 ], [ %44, %41 ], [ 2147483647, %39 ]
  %47 = load i32, i32* %17, align 8
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %50 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %51 = select i1 %48, %"class.WTF::Vector"* %49, %"class.WTF::Vector"* %50
  %52 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %53 = load i64*, i64** %52, align 8
  %54 = zext i32 %23 to i64
  %55 = getelementptr inbounds i64, i64* %53, i64 %54
  %56 = icmp eq i32 %23, 0
  br i1 %56, label %62, label %57

57:                                               ; preds = %45
  %58 = icmp slt i32 %46, 0
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  br label %71

60:                                               ; preds = %88
  %61 = load i32, i32* %17, align 8
  br label %62

62:                                               ; preds = %60, %45
  %63 = phi i32 [ %61, %60 ], [ %47, %45 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 4
  %67 = bitcast %"class.absl::optional"* %66 to i64*
  store i64 1, i64* %67, align 4
  br label %91

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 5
  %70 = bitcast %"class.absl::optional"* %69 to i64*
  store i64 1, i64* %70, align 4
  br label %91

71:                                               ; preds = %57, %88
  %72 = phi i64* [ %53, %57 ], [ %89, %88 ]
  %73 = load i64, i64* %72, align 8
  %74 = trunc i64 %73 to i32
  %75 = tail call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %51, i32 %74) #18
  %76 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %75, i64 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %77, i32 %46) #18
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 %59, i32 %80, !prof !3
  store i32 %81, i32* %76, align 8
  %82 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %75, i64 0, i32 1, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = icmp ne i32 %83, -64
  %85 = icmp slt i32 %83, %81
  %86 = and i1 %84, %85
  br i1 %86, label %87, label %88

87:                                               ; preds = %71
  store i32 %81, i32* %82, align 4
  br label %88

88:                                               ; preds = %71, %87
  %89 = getelementptr inbounds i64, i64* %72, i64 1
  %90 = icmp eq i64* %89, %55
  br i1 %90, label %60, label %71

91:                                               ; preds = %68, %65, %1, %14
  ret void
}

declare i32 @_ZNK5blink10LayoutGrid16ContentAlignmentENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"*, i32) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24GridTrackSizingAlgorithm16AdvanceNextStateEv(%"class.blink::GridTrackSizingAlgorithm"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 17
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %14 [
    i32 0, label %15
    i32 1, label %4
    i32 2, label %12
    i32 3, label %13
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %6 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %5, align 8
  %7 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %6 to i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)***
  %8 = load i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)**, i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*, i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)** %8, i64 8
  %10 = load i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*, i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::GridTrackSizingAlgorithmStrategy"* %6) #18
  br i1 %11, label %17, label %15

12:                                               ; preds = %1
  br label %15

13:                                               ; preds = %1
  br label %15

14:                                               ; preds = %1
  br label %15

15:                                               ; preds = %4, %1, %12, %13, %14
  %16 = phi i32 [ 0, %14 ], [ 0, %13 ], [ 3, %12 ], [ 1, %1 ], [ 2, %4 ]
  store i32 %16, i32* %2, align 8
  br label %17

17:                                               ; preds = %15, %4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink24GridTrackSizingAlgorithm17IsValidTransitionEv(%"class.blink::GridTrackSizingAlgorithm"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 17
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 4
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZNK5blink24GridTrackSizingAlgorithm17IsValidTransitionEv, i64 0, i64 %6
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %8
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi i1 [ false, %1 ], [ %11, %5 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24GridTrackSizingAlgorithm5SetupENS_24GridTrackSizingDirectionEmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"*, i32, i64, i64) local_unnamed_addr #3 align 2 {
  %5 = trunc i64 %3 to i8
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  store i32 %1, i32* %8, align 8
  %9 = icmp ne i8 %5, 0
  %10 = icmp sgt i32 %7, 0
  %11 = select i1 %10, i64 %6, i64 0
  %12 = select i1 %9, i64 %11, i64 %6
  %13 = shl nuw i64 %12, 32
  %14 = and i64 %3, 4294967295
  %15 = select i1 %9, i64 1, i64 %14
  %16 = or i64 %15, %13
  %17 = icmp eq i32 %1, 0
  %18 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2
  %19 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 3
  %20 = select i1 %17, %"class.absl::optional"* %18, %"class.absl::optional"* %19
  %21 = bitcast %"class.absl::optional"* %20 to i64*
  store i64 %16, i64* %21, align 4
  %22 = tail call noalias i8* @malloc(i64 16) #18
  %23 = bitcast i8* %22 to i32 (...)***
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  %25 = bitcast i8* %24 to %"class.blink::GridTrackSizingAlgorithm"**
  store %"class.blink::GridTrackSizingAlgorithm"* %0, %"class.blink::GridTrackSizingAlgorithm"** %25, align 8
  br i1 %9, label %26, label %36

26:                                               ; preds = %4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink20DefiniteSizeStrategyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %27 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %28 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %27, align 8
  %29 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"** %27 to i8**
  store i8* %22, i8** %29, align 8
  %30 = icmp eq %"class.blink::GridTrackSizingAlgorithmStrategy"* %28, null
  br i1 %30, label %46, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %28 to void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)***
  %33 = load void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)**, void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*, void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)** %33, i64 1
  %35 = load void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*, void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)** %34, align 8
  tail call void %35(%"class.blink::GridTrackSizingAlgorithmStrategy"* nonnull %28) #18
  br label %46

36:                                               ; preds = %4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink22IndefiniteSizeStrategyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %37 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %38 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %37, align 8
  %39 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"** %37 to i8**
  store i8* %22, i8** %39, align 8
  %40 = icmp eq %"class.blink::GridTrackSizingAlgorithmStrategy"* %38, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %38 to void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)***
  %43 = load void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)**, void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*, void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)** %43, i64 1
  %45 = load void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*, void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)** %44, align 8
  tail call void %45(%"class.blink::GridTrackSizingAlgorithmStrategy"* nonnull %38) #18
  br label %46

46:                                               ; preds = %36, %41, %26, %31
  %47 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  store i32 0, i32* %48, align 4
  %49 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  store i32 0, i32* %49, align 4
  %50 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 1
  store i8 0, i8* %50, align 1
  br i1 %9, label %51, label %74

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 13
  %53 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 12
  %55 = load %"class.blink::Grid"*, %"class.blink::Grid"** %54, align 8
  %56 = bitcast %"class.blink::Grid"* %55 to i64 (%"class.blink::Grid"*, i32)***
  %57 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %56, align 8
  %58 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %57, align 8
  %59 = tail call i64 %58(%"class.blink::Grid"* %55, i32 %1) #18
  %60 = tail call i32 @_ZNK5blink10LayoutGrid11GuttersSizeERKNS_4GridENS_24GridTrackSizingDirectionEmmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %53, %"class.blink::Grid"* dereferenceable(168) %55, i32 %1, i64 0, i64 %59, i64 %3) #18
  %61 = icmp sgt i32 %60, -1
  %62 = select i1 %61, i32 -2147483648, i32 2147483647
  %63 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %7, i32 %60) #18
  %64 = extractvalue { i32, i1 } %63, 1
  %65 = extractvalue { i32, i1 } %63, 0
  %66 = select i1 %64, i32 %62, i32 %65, !prof !3
  %67 = zext i32 %66 to i64
  %68 = shl nuw i64 %67, 32
  %69 = or i64 %68, 1
  br i1 %17, label %70, label %72

70:                                               ; preds = %51
  %71 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 4
  br label %79

72:                                               ; preds = %51
  %73 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 5
  br label %79

74:                                               ; preds = %46
  br i1 %17, label %75, label %77

75:                                               ; preds = %74
  %76 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 4
  br label %79

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 5
  br label %79

79:                                               ; preds = %77, %75, %72, %70
  %80 = phi %"class.absl::optional"* [ %78, %77 ], [ %76, %75 ], [ %73, %72 ], [ %71, %70 ]
  %81 = phi i64 [ 0, %77 ], [ 0, %75 ], [ %69, %72 ], [ %69, %70 ]
  %82 = bitcast %"class.absl::optional"* %80 to i64*
  store i64 %81, i64* %82, align 4
  %83 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %84 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %85 = select i1 %17, %"class.WTF::Vector"* %83, %"class.WTF::Vector"* %84
  %86 = trunc i64 %2 to i32
  tail call void @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector"* %85, i32 %86)
  tail call void @_ZN5blink24GridTrackSizingAlgorithm31ComputeBaselineAlignmentContextEv(%"class.blink::GridTrackSizingAlgorithm"* %0)
  %87 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 0
  store i8 0, i8* %87, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, %1
  br i1 %5, label %42, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %7, align 8
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %8, i64 %9
  %11 = icmp eq i32 %4, %1
  br i1 %11, label %127, label %12

12:                                               ; preds = %6
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %8, i64 %13
  br label %15

15:                                               ; preds = %12, %39
  %16 = phi %"class.blink::GridTrack"* [ %40, %39 ], [ %14, %12 ]
  %17 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %16, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %39, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %16, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0, i32 2
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 8
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %16, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %25) #18
  br label %26

26:                                               ; preds = %24, %20
  %27 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %16, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 0, i32 2
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %16, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %31) #18
  br label %32

32:                                               ; preds = %30, %26
  %33 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %16, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 2
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 8
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %16, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %37) #18
  br label %38

38:                                               ; preds = %36, %32
  store i8 0, i8* %17, align 8
  br label %39

39:                                               ; preds = %38, %15
  %40 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %16, i64 1
  %41 = icmp eq %"class.blink::GridTrack"* %40, %10
  br i1 %41, label %127, label %15

42:                                               ; preds = %2
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp ult i32 %44, %1
  br i1 %45, label %46, label %68

46:                                               ; preds = %42
  %47 = lshr i32 %44, 2
  %48 = add nuw i32 %44, 1
  %49 = add i32 %48, %47
  %50 = icmp ugt i32 %49, 4
  %51 = select i1 %50, i32 %49, i32 4
  %52 = icmp ugt i32 %51, %1
  %53 = select i1 %52, i32 %51, i32 %1
  %54 = icmp ult i32 %44, %53
  br i1 %54, label %55, label %68, !prof !71

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %56, align 8
  %58 = icmp eq %"class.blink::GridTrack"* %57, null
  br i1 %58, label %59, label %67

59:                                               ; preds = %55
  %60 = zext i32 %53 to i64
  %61 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9GridTrackEEEmm(i64 %60) #18
  %62 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %61, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9GridTrackEEEPKcv, i64 0, i64 0)) #18
  %63 = ptrtoint i8* %62 to i64
  %64 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %63, i64* %64 monotonic, align 8
  %65 = lshr i64 %61, 7
  %66 = trunc i64 %65 to i32
  store i32 %66, i32* %43, align 8
  br label %68

67:                                               ; preds = %55
  tail call void @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %53) #18
  br label %68

68:                                               ; preds = %67, %59, %46, %42
  %69 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %69, align 8
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %1 to i64
  %73 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %70, i64 %72
  %74 = icmp eq i32 %71, %1
  br i1 %74, label %127, label %75

75:                                               ; preds = %68
  %76 = zext i32 %71 to i64
  %77 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %70, i64 %76
  %78 = shl nuw nsw i64 %72, 7
  %79 = add nsw i64 %78, -128
  %80 = shl nuw nsw i64 %76, 7
  %81 = sub nsw i64 %79, %80
  %82 = lshr exact i64 %81, 7
  %83 = add nuw nsw i64 %82, 1
  %84 = and i64 %83, 3
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %97, label %86

86:                                               ; preds = %75, %86
  %87 = phi %"class.blink::GridTrack"* [ %94, %86 ], [ %77, %75 ]
  %88 = phi i64 [ %95, %86 ], [ %84, %75 ]
  %89 = bitcast %"class.blink::GridTrack"* %87 to i8*
  %90 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %87, i64 0, i32 5
  store i8 0, i8* %90, align 8
  %91 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %87, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %91, align 8
  %92 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %87, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %93 = bitcast %union.anon.4* %92 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 88, i1 false) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %89, i8 0, i64 17, i1 false) #18
  %94 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %87, i64 1
  %95 = add i64 %88, -1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %86, !llvm.loop !75

97:                                               ; preds = %86, %75
  %98 = phi %"class.blink::GridTrack"* [ %77, %75 ], [ %94, %86 ]
  %99 = icmp ult i64 %81, 384
  br i1 %99, label %127, label %100

100:                                              ; preds = %97, %100
  %101 = phi %"class.blink::GridTrack"* [ %125, %100 ], [ %98, %97 ]
  %102 = bitcast %"class.blink::GridTrack"* %101 to i8*
  %103 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %101, i64 0, i32 5
  store i8 0, i8* %103, align 8
  %104 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %101, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %104, align 8
  %105 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %101, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %106 = bitcast %union.anon.4* %105 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 88, i1 false) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %102, i8 0, i64 17, i1 false) #18
  %107 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %101, i64 1
  %108 = bitcast %"class.blink::GridTrack"* %107 to i8*
  %109 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %101, i64 1, i32 5
  store i8 0, i8* %109, align 8
  %110 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %101, i64 1, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %110, align 8
  %111 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %101, i64 1, i32 7, i32 0, i32 0, i32 0, i32 2
  %112 = bitcast %union.anon.4* %111 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 88, i1 false) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %108, i8 0, i64 17, i1 false) #18
  %113 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %101, i64 2
  %114 = bitcast %"class.blink::GridTrack"* %113 to i8*
  %115 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %101, i64 2, i32 5
  store i8 0, i8* %115, align 8
  %116 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %101, i64 2, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %116, align 8
  %117 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %101, i64 2, i32 7, i32 0, i32 0, i32 0, i32 2
  %118 = bitcast %union.anon.4* %117 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 88, i1 false) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %114, i8 0, i64 17, i1 false) #18
  %119 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %101, i64 3
  %120 = bitcast %"class.blink::GridTrack"* %119 to i8*
  %121 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %101, i64 3, i32 5
  store i8 0, i8* %121, align 8
  %122 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %101, i64 3, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %122, align 8
  %123 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %101, i64 3, i32 7, i32 0, i32 0, i32 0, i32 2
  %124 = bitcast %union.anon.4* %123 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 88, i1 false) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %120, i8 0, i64 17, i1 false) #18
  %125 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %101, i64 4
  %126 = icmp eq %"class.blink::GridTrack"* %125, %73
  br i1 %126, label %127, label %100

127:                                              ; preds = %39, %97, %100, %6, %68
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24GridTrackSizingAlgorithm31ComputeBaselineAlignmentContextEv(%"class.blink::GridTrackSizingAlgorithm"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.blink::LayoutBox"*, align 8
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  %7 = icmp ne i32 %6, 0
  %8 = zext i1 %7 to i32
  %9 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 19
  tail call void @_ZN5blink21GridBaselineAlignment5ClearENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* %9, i32 %8) #18
  %10 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 13
  %11 = bitcast %"class.blink::LayoutGrid"** %10 to %"class.blink::LayoutObject"**
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 5, i32 0
  %14 = bitcast %"class.blink::ComputedStyle"** %13 to %"class.blink::ComputedStyleBase"**
  %15 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %15, i64 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = lshr i160 %18, 102
  %20 = trunc i160 %19 to i8
  %21 = and i8 %20, 3
  %22 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %9, i64 0, i32 0
  store i8 %21, i8* %22, align 8
  %23 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 20
  %24 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 21
  %25 = select i1 %7, %"class.WTF::HashMap.948"* %23, %"class.WTF::HashMap.948"* %24
  %26 = getelementptr inbounds %"class.WTF::HashMap.948", %"class.WTF::HashMap.948"* %25, i64 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::HashMap.948", %"class.WTF::HashMap.948"* %25, i64 0, i32 0, i32 0
  %30 = load %"struct.WTF::KeyValuePair.952"*, %"struct.WTF::KeyValuePair.952"** %29, align 8
  %31 = getelementptr inbounds %"class.WTF::HashMap.948", %"class.WTF::HashMap.948"* %25, i64 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %30, i64 %33
  %35 = bitcast %"class.blink::LayoutObject"* %12 to %"class.blink::LayoutGrid"*
  br i1 %28, label %52, label %36

36:                                               ; preds = %1
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %36, %42
  %39 = phi %"struct.WTF::KeyValuePair.952"* [ %43, %42 ], [ %30, %36 ]
  %40 = bitcast %"struct.WTF::KeyValuePair.952"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  switch i64 %41, label %45 [
    i64 -1, label %42
    i64 0, label %42
  ]

42:                                               ; preds = %38, %38
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %39, i64 1
  %44 = icmp eq %"struct.WTF::KeyValuePair.952"* %43, %34
  br i1 %44, label %52, label %38

45:                                               ; preds = %38, %36
  %46 = phi %"struct.WTF::KeyValuePair.952"* [ %30, %36 ], [ %39, %38 ]
  %47 = icmp eq %"struct.WTF::KeyValuePair.952"* %46, %34
  br i1 %47, label %52, label %48

48:                                               ; preds = %45
  %49 = bitcast %"class.blink::LayoutBox"** %2 to i8*
  %50 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 12
  %51 = getelementptr inbounds %"class.WTF::HashMap.948", %"class.WTF::HashMap.948"* %25, i64 0, i32 0
  br label %53

52:                                               ; preds = %42, %116, %127, %124, %1, %45
  ret void

53:                                               ; preds = %129, %48
  %54 = phi %"class.blink::LayoutGrid"* [ %35, %48 ], [ %130, %129 ]
  %55 = phi %"struct.WTF::KeyValuePair.952"* [ %46, %48 ], [ %121, %129 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #18
  store %"class.blink::LayoutBox"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutBox"*), %"class.blink::LayoutBox"** %2, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %55, i64 0, i32 0
  %57 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %56, align 8
  store %"class.blink::LayoutBox"* %57, %"class.blink::LayoutBox"** %2, align 8
  %58 = call zeroext i1 @_ZN5blink15GridLayoutUtils17IsOrthogonalChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %54, %"class.blink::LayoutBox"* dereferenceable(216) %57) #18
  %59 = xor i1 %7, %58
  br i1 %59, label %60, label %67

60:                                               ; preds = %53
  %61 = bitcast %"class.blink::LayoutBox"* %57 to i32 (%"class.blink::LayoutBox"*)***
  %62 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %61, align 8
  %63 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %62, i64 180
  %64 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %63, align 8
  %65 = call i32 %64(%"class.blink::LayoutBox"* %57) #18
  %66 = icmp eq i32 %65, -64
  br i1 %66, label %67, label %90

67:                                               ; preds = %60, %53
  %68 = call zeroext i1 @_ZNK5blink24GridTrackSizingAlgorithm24IsIntrinsicSizedGridAreaERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %57, i32 %8) #18
  br i1 %68, label %69, label %90

69:                                               ; preds = %67
  br i1 %59, label %70, label %72

70:                                               ; preds = %69
  %71 = call zeroext i1 @_ZNK5blink9LayoutBox24HasRelativeLogicalHeightEv(%"class.blink::LayoutBox"* %57) #18
  br i1 %71, label %107, label %90

72:                                               ; preds = %69
  %73 = call zeroext i1 @_ZNK5blink9LayoutBox23HasRelativeLogicalWidthEv(%"class.blink::LayoutBox"* %57) #18
  br i1 %73, label %107, label %74

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %57, i64 0, i32 0, i32 0, i32 5, i32 0
  %76 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %76, i64 0, i32 0, i32 9
  %78 = bitcast [20 x i8]* %77 to i160*
  %79 = load i160, i160* %78, align 8
  %80 = and i160 %79, 15211807202738752817960438464512
  %81 = icmp eq i160 %80, 0
  %82 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %76, i64 0, i32 0, i32 5, i32 0, i32 0
  %83 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %83, i64 0, i32 8
  %85 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %83, i64 0, i32 3
  %86 = select i1 %81, %"class.blink::Length"* %84, %"class.blink::Length"* %85
  %87 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %86, i64 0, i32 2
  %88 = load i8, i8* %87, align 1
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %107, label %90

90:                                               ; preds = %70, %74, %67, %60
  %91 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %2, align 8
  %92 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %10, align 8
  %93 = call i32 @_ZNK5blink10LayoutGrid21SelfAlignmentForChildENS_8GridAxisERKNS_9LayoutBoxEPKNS_13ComputedStyleE(%"class.blink::LayoutGrid"* %92, i32 %8, %"class.blink::LayoutBox"* dereferenceable(216) %91, %"class.blink::ComputedStyle"* null) #18
  %94 = and i32 %93, 15
  %95 = load %"class.blink::Grid"*, %"class.blink::Grid"** %50, align 8
  %96 = call { i64, i32 } @_ZNK5blink4Grid12GridItemSpanERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %95, %"class.blink::LayoutBox"* dereferenceable(216) %91, i32 %8) #18
  %97 = extractvalue { i64, i32 } %96, 0
  %98 = trunc i64 %97 to i32
  call void @_ZN5blink21GridBaselineAlignment30UpdateBaselineAlignmentContextENS_12ItemPositionEjRKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* %9, i32 %94, i32 %98, %"class.blink::LayoutBox"* dereferenceable(216) %91, i32 %8) #18
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #18
  store i8 1, i8* %3, align 1
  %99 = call { %"struct.WTF::KeyValuePair.952"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS4_bEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.949"* %51, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %2, i8* nonnull dereferenceable(1) %3) #18
  %100 = extractvalue { %"struct.WTF::KeyValuePair.952"*, i8 } %99, 1
  %101 = and i8 %100, 1
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %116

103:                                              ; preds = %90
  %104 = extractvalue { %"struct.WTF::KeyValuePair.952"*, i8 } %99, 0
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %104, i64 0, i32 1
  %106 = load i8, i8* %3, align 1, !range !2
  store i8 %106, i8* %105, align 1
  br label %116

107:                                              ; preds = %70, %74, %72
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #18
  store i8 0, i8* %4, align 1
  %108 = call { %"struct.WTF::KeyValuePair.952"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS4_bEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.949"* %51, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %2, i8* nonnull dereferenceable(1) %4) #18
  %109 = extractvalue { %"struct.WTF::KeyValuePair.952"*, i8 } %108, 1
  %110 = and i8 %109, 1
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %107
  %113 = extractvalue { %"struct.WTF::KeyValuePair.952"*, i8 } %108, 0
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %113, i64 0, i32 1
  %115 = load i8, i8* %4, align 1, !range !2
  store i8 %115, i8* %114, align 1
  br label %116

116:                                              ; preds = %112, %107, %103, %90
  %117 = phi i8* [ %3, %90 ], [ %3, %103 ], [ %4, %107 ], [ %4, %112 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %117) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #18
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %55, i64 1
  %119 = icmp eq %"struct.WTF::KeyValuePair.952"* %118, %34
  br i1 %119, label %52, label %120

120:                                              ; preds = %116, %124
  %121 = phi %"struct.WTF::KeyValuePair.952"* [ %125, %124 ], [ %118, %116 ]
  %122 = bitcast %"struct.WTF::KeyValuePair.952"* %121 to i64*
  %123 = load i64, i64* %122, align 8
  switch i64 %123, label %127 [
    i64 -1, label %124
    i64 0, label %124
  ]

124:                                              ; preds = %120, %120
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %121, i64 1
  %126 = icmp eq %"struct.WTF::KeyValuePair.952"* %125, %34
  br i1 %126, label %52, label %120

127:                                              ; preds = %120
  %128 = icmp eq %"struct.WTF::KeyValuePair.952"* %121, %34
  br i1 %128, label %52, label %129

129:                                              ; preds = %127
  %130 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %10, align 8
  br label %53
}

declare void @_ZN5blink21GridBaselineAlignment5ClearENS_8GridAxisE(%"class.blink::GridBaselineAlignment"*, i32) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24GridTrackSizingAlgorithm3RunEv(%"class.blink::GridTrackSizingAlgorithm"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 4
  %7 = select i1 %4, %"class.absl::optional"* %5, %"class.absl::optional"* %6
  %8 = bitcast %"class.absl::optional"* %7 to i64*
  %9 = load i64, i64* %8, align 4
  tail call void @_ZN5blink24GridTrackSizingAlgorithm20InitializeTrackSizesEv(%"class.blink::GridTrackSizingAlgorithm"* %0)
  %10 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %11 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %10, align 8
  %12 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %11 to i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)***
  %13 = load i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)**, i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*, i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)** %13, i64 8
  %15 = load i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*, i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::GridTrackSizingAlgorithmStrategy"* %11) #18
  br i1 %16, label %17, label %63

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 16, i32 0
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 15, i32 0
  store i32 0, i32* %19, align 8
  %20 = load i32, i32* %2, align 8
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %23 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %24 = select i1 %21, %"class.WTF::Vector"* %22, %"class.WTF::Vector"* %23
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %24, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %26, i64 %29
  %31 = icmp eq i32 %28, 0
  br i1 %31, label %150, label %32

32:                                               ; preds = %17, %61
  %33 = phi i32 [ %62, %61 ], [ 0, %17 ]
  %34 = phi %"class.blink::GridTrack"* [ %59, %61 ], [ %26, %17 ]
  %35 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp slt i32 %36, 0
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 %36) #18
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 %38, i32 %41, !prof !3
  store i32 %42, i32* %19, align 4
  %43 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %34, i64 0, i32 1, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, -64
  br i1 %45, label %46, label %48

46:                                               ; preds = %32
  %47 = load i32, i32* %35, align 8
  br label %48

48:                                               ; preds = %46, %32
  %49 = phi i32 [ %47, %46 ], [ %44, %32 ]
  %50 = load i32, i32* %18, align 4
  %51 = icmp slt i32 %49, 0
  %52 = select i1 %51, i32 -2147483648, i32 2147483647
  %53 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %50, i32 %49) #18
  %54 = extractvalue { i32, i1 } %53, 1
  %55 = extractvalue { i32, i1 } %53, 0
  %56 = select i1 %54, i32 %52, i32 %55, !prof !3
  store i32 %56, i32* %18, align 4
  %57 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %34, i64 0, i32 4
  %58 = bitcast %"class.absl::optional"* %57 to i64*
  store i64 0, i64* %58, align 8
  %59 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %34, i64 1
  %60 = icmp eq %"class.blink::GridTrack"* %59, %30
  br i1 %60, label %150, label %61

61:                                               ; preds = %48
  %62 = load i32, i32* %19, align 4
  br label %32

63:                                               ; preds = %1
  %64 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %63
  tail call void @_ZN5blink24GridTrackSizingAlgorithm26ResolveIntrinsicTrackSizesEv(%"class.blink::GridTrackSizingAlgorithm"* %0)
  br label %68

68:                                               ; preds = %67, %63
  %69 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 16, i32 0
  store i32 0, i32* %69, align 4
  %70 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 15, i32 0
  store i32 0, i32* %70, align 8
  %71 = load i32, i32* %2, align 8
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %74 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %75 = select i1 %72, %"class.WTF::Vector"* %73, %"class.WTF::Vector"* %74
  %76 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %76, align 8
  %78 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %75, i64 0, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 %80
  %82 = icmp eq i32 %79, 0
  br i1 %82, label %116, label %83

83:                                               ; preds = %68, %112
  %84 = phi i32 [ %113, %112 ], [ 0, %68 ]
  %85 = phi %"class.blink::GridTrack"* [ %110, %112 ], [ %77, %68 ]
  %86 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %85, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = icmp slt i32 %87, 0
  %89 = select i1 %88, i32 -2147483648, i32 2147483647
  %90 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %84, i32 %87) #18
  %91 = extractvalue { i32, i1 } %90, 1
  %92 = extractvalue { i32, i1 } %90, 0
  %93 = select i1 %91, i32 %89, i32 %92, !prof !3
  store i32 %93, i32* %70, align 4
  %94 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %85, i64 0, i32 1, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, -64
  br i1 %96, label %97, label %99

97:                                               ; preds = %83
  %98 = load i32, i32* %86, align 8
  br label %99

99:                                               ; preds = %97, %83
  %100 = phi i32 [ %98, %97 ], [ %95, %83 ]
  %101 = load i32, i32* %69, align 4
  %102 = icmp slt i32 %100, 0
  %103 = select i1 %102, i32 -2147483648, i32 2147483647
  %104 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %101, i32 %100) #18
  %105 = extractvalue { i32, i1 } %104, 1
  %106 = extractvalue { i32, i1 } %104, 0
  %107 = select i1 %105, i32 %103, i32 %106, !prof !3
  store i32 %107, i32* %69, align 4
  %108 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %85, i64 0, i32 4
  %109 = bitcast %"class.absl::optional"* %108 to i64*
  store i64 0, i64* %109, align 8
  %110 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %85, i64 1
  %111 = icmp eq %"class.blink::GridTrack"* %110, %81
  br i1 %111, label %114, label %112

112:                                              ; preds = %99
  %113 = load i32, i32* %70, align 4
  br label %83

114:                                              ; preds = %99
  %115 = load i32, i32* %2, align 8
  br label %116

116:                                              ; preds = %114, %68
  %117 = phi i32 [ %115, %114 ], [ %71, %68 ]
  %118 = icmp eq i32 %117, 1
  %119 = select i1 %118, %"class.absl::optional"* %5, %"class.absl::optional"* %6
  %120 = bitcast %"class.absl::optional"* %119 to i64*
  %121 = load i64, i64* %120, align 4
  %122 = trunc i64 %121 to i8
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %141, label %124

124:                                              ; preds = %116
  %125 = lshr i64 %121, 32
  %126 = trunc i64 %125 to i32
  %127 = load i32, i32* %70, align 4
  %128 = icmp sgt i32 %127, -1
  %129 = select i1 %128, i32 -2147483648, i32 2147483647
  %130 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %126, i32 %127) #18
  %131 = extractvalue { i32, i1 } %130, 1
  %132 = extractvalue { i32, i1 } %130, 0
  %133 = select i1 %131, i32 %129, i32 %132, !prof !3
  %134 = zext i32 %133 to i64
  %135 = shl nuw i64 %134, 32
  %136 = or i64 %135, 1
  %137 = icmp eq i32 %117, 0
  %138 = select i1 %137, %"class.absl::optional"* %6, %"class.absl::optional"* %5
  %139 = bitcast %"class.absl::optional"* %138 to i64*
  store i64 %136, i64* %139, align 4
  %140 = icmp sgt i32 %133, 0
  br i1 %140, label %141, label %150

141:                                              ; preds = %116, %124
  %142 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %10, align 8
  %143 = icmp eq i32 %117, 0
  %144 = select i1 %143, %"class.WTF::Vector"* %73, %"class.WTF::Vector"* %74
  %145 = select i1 %143, %"class.absl::optional"* %6, %"class.absl::optional"* %5
  %146 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %142 to void (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector"*, %"class.absl::optional"*)***
  %147 = load void (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector"*, %"class.absl::optional"*)**, void (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector"*, %"class.absl::optional"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector"*, %"class.absl::optional"*)*, void (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector"*, %"class.absl::optional"*)** %147, i64 4
  %149 = load void (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector"*, %"class.absl::optional"*)*, void (%"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.WTF::Vector"*, %"class.absl::optional"*)** %148, align 8
  tail call void %149(%"class.blink::GridTrackSizingAlgorithmStrategy"* %142, %"class.WTF::Vector"* dereferenceable(16) %144, %"class.absl::optional"* dereferenceable(8) %145) #18
  tail call void @_ZN5blink24GridTrackSizingAlgorithm21StretchFlexibleTracksEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"* %0, i64 %9)
  tail call void @_ZN5blink24GridTrackSizingAlgorithm17StretchAutoTracksEv(%"class.blink::GridTrackSizingAlgorithm"* %0)
  br label %150

150:                                              ; preds = %48, %17, %124, %141
  %151 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 17
  %152 = load i32, i32* %151, align 8
  switch i32 %152, label %162 [
    i32 0, label %163
    i32 1, label %153
    i32 2, label %160
    i32 3, label %161
  ]

153:                                              ; preds = %150
  %154 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %10, align 8
  %155 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %154 to i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)***
  %156 = load i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)**, i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*** %155, align 8
  %157 = getelementptr inbounds i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*, i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)** %156, i64 8
  %158 = load i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*, i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)** %157, align 8
  %159 = tail call zeroext i1 %158(%"class.blink::GridTrackSizingAlgorithmStrategy"* %154) #18
  br i1 %159, label %165, label %163

160:                                              ; preds = %150
  br label %163

161:                                              ; preds = %150
  br label %163

162:                                              ; preds = %150
  br label %163

163:                                              ; preds = %153, %150, %162, %161, %160
  %164 = phi i32 [ 3, %160 ], [ 0, %161 ], [ 0, %162 ], [ 1, %150 ], [ 2, %153 ]
  store i32 %164, i32* %151, align 8
  br label %165

165:                                              ; preds = %163, %153
  %166 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 0
  store i8 1, i8* %166, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24GridTrackSizingAlgorithm5ResetEv(%"class.blink::GridTrackSizingAlgorithm"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 17
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %34
  %11 = phi %"class.blink::GridTrack"* [ %35, %34 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %11, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %34, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %11, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 8
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %11, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %20) #18
  br label %21

21:                                               ; preds = %19, %15
  %22 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %11, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 0, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 8
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %11, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %26) #18
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %11, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %11, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %32) #18
  br label %33

33:                                               ; preds = %31, %27
  store i8 0, i8* %12, align 8
  br label %34

34:                                               ; preds = %33, %10
  %35 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %11, i64 1
  %36 = icmp eq %"class.blink::GridTrack"* %35, %8
  br i1 %36, label %37, label %10

37:                                               ; preds = %34, %1
  store i32 0, i32* %5, align 4
  %38 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %39 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %39, i64 %42
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %72, label %45

45:                                               ; preds = %37, %69
  %46 = phi %"class.blink::GridTrack"* [ %70, %69 ], [ %39, %37 ]
  %47 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %46, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %69, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %46, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 8
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %46, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %55) #18
  br label %56

56:                                               ; preds = %54, %50
  %57 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %46, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 0, i32 2
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %58, 8
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %46, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %61) #18
  br label %62

62:                                               ; preds = %60, %56
  %63 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %46, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 2
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, 8
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %46, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %67) #18
  br label %68

68:                                               ; preds = %66, %62
  store i8 0, i8* %47, align 8
  br label %69

69:                                               ; preds = %68, %45
  %70 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %46, i64 1
  %71 = icmp eq %"class.blink::GridTrack"* %70, %43
  br i1 %71, label %72, label %45

72:                                               ; preds = %69, %37
  store i32 0, i32* %40, align 4
  %73 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  store i32 0, i32* %73, align 4
  %74 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  store i32 0, i32* %74, align 4
  %75 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  store i32 0, i32* %75, align 4
  %76 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 1
  store i8 0, i8* %76, align 1
  %77 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %77, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink24GridTrackSizingAlgorithm12StateMachineC2ERS0_(%"class.blink::GridTrackSizingAlgorithm::StateMachine"* nocapture, %"class.blink::GridTrackSizingAlgorithm"* dereferenceable(272)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm::StateMachine", %"class.blink::GridTrackSizingAlgorithm::StateMachine"* %0, i64 0, i32 0
  store %"class.blink::GridTrackSizingAlgorithm"* %1, %"class.blink::GridTrackSizingAlgorithm"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24GridTrackSizingAlgorithm12StateMachineD2Ev(%"class.blink::GridTrackSizingAlgorithm::StateMachine"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm::StateMachine", %"class.blink::GridTrackSizingAlgorithm::StateMachine"* %0, i64 0, i32 0
  %3 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %3, i64 0, i32 17
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %16 [
    i32 0, label %17
    i32 1, label %6
    i32 2, label %14
    i32 3, label %15
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %3, i64 0, i32 14, i32 0, i32 0, i32 0
  %8 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %7, align 8
  %9 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %8 to i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)***
  %10 = load i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)**, i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*, i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)** %10, i64 8
  %12 = load i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*, i1 (%"class.blink::GridTrackSizingAlgorithmStrategy"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::GridTrackSizingAlgorithmStrategy"* %8) #18
  br i1 %13, label %19, label %17

14:                                               ; preds = %1
  br label %17

15:                                               ; preds = %1
  br label %17

16:                                               ; preds = %1
  br label %17

17:                                               ; preds = %6, %1, %16, %15, %14
  %18 = phi i32 [ 3, %14 ], [ 0, %15 ], [ 0, %16 ], [ 1, %1 ], [ 2, %6 ]
  store i32 %18, i32* %4, align 8
  br label %19

19:                                               ; preds = %17, %6
  %20 = load %"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"** %2, align 8
  %21 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %20, i64 0, i32 0
  store i8 1, i8* %21, align 8
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22IndefiniteSizeStrategyD0Ev(%"class.blink::IndefiniteSizeStrategy"*) unnamed_addr #11 comdat align 2 {
  %2 = bitcast %"class.blink::IndefiniteSizeStrategy"* %0 to i8*
  tail call void @free(i8* %2) #18
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink32GridTrackSizingAlgorithmStrategyD2Ev(%"class.blink::GridTrackSizingAlgorithmStrategy"* nocapture) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20DefiniteSizeStrategyD0Ev(%"class.blink::DefiniteSizeStrategy"*) unnamed_addr #11 comdat align 2 {
  %2 = bitcast %"class.blink::DefiniteSizeStrategy"* %0 to i8*
  tail call void @free(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20DefiniteSizeStrategy33RecomputeUsedFlexFractionIfNeededERN3WTF6VectorImLj0ENS1_18PartitionAllocatorEEERdRNS2_INS_10LayoutUnitELj0ES3_EERS7_(%"class.blink::DefiniteSizeStrategy"*, %"class.WTF::Vector.6"* dereferenceable(16), double* dereferenceable(8), %"class.WTF::Vector.959"* dereferenceable(16), %"class.blink::LayoutUnit"* dereferenceable(4)) unnamed_addr #3 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20DefiniteSizeStrategy26IsComputingSizeContainmentEv(%"class.blink::DefiniteSizeStrategy"*) unnamed_addr #3 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #12

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #8

declare void @_ZN5blink12LayoutObject44MarkSelfPaintingLayerForVisualOverflowRecalcEv(%"class.blink::LayoutObject"*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.WTF::HashTable.949"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEEaSERKSG_(%"class.WTF::HashTable.949"*, %"class.WTF::HashTable.949"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.WTF::HashTable.949", align 8
  %4 = bitcast %"class.WTF::HashTable.949"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #18
  %5 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %3, i64 0, i32 3
  %9 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %1, i64 0, i32 2
  %10 = bitcast %"class.WTF::HashTable.949"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 20, i1 false) #18
  %11 = load i32, i32* %9, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %49, label %13

13:                                               ; preds = %2
  call void @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.949"* nonnull %3, i32 %11) #18
  %14 = load i32, i32* %9, align 4
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %1, i64 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair.952"*, %"struct.WTF::KeyValuePair.952"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %17, i64 %20
  br i1 %15, label %49, label %22

22:                                               ; preds = %13
  %23 = icmp eq i32 %19, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %22, %28
  %25 = phi %"struct.WTF::KeyValuePair.952"* [ %29, %28 ], [ %17, %22 ]
  %26 = bitcast %"struct.WTF::KeyValuePair.952"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  switch i64 %27, label %31 [
    i64 -1, label %28
    i64 0, label %28
  ]

28:                                               ; preds = %24, %24
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %25, i64 1
  %30 = icmp eq %"struct.WTF::KeyValuePair.952"* %29, %21
  br i1 %30, label %49, label %24

31:                                               ; preds = %24, %22
  %32 = phi %"struct.WTF::KeyValuePair.952"* [ %17, %22 ], [ %25, %24 ]
  %33 = icmp eq %"struct.WTF::KeyValuePair.952"* %32, %21
  br i1 %33, label %49, label %34

34:                                               ; preds = %31, %47
  %35 = phi %"struct.WTF::KeyValuePair.952"* [ %41, %47 ], [ %32, %31 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %35, i64 0, i32 0
  %37 = call { %"struct.WTF::KeyValuePair.952"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS4_RKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.949"* nonnull %3, %"class.blink::LayoutBox"** dereferenceable(8) %36, %"struct.WTF::KeyValuePair.952"* dereferenceable(16) %35) #18
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %35, i64 1
  %39 = icmp eq %"struct.WTF::KeyValuePair.952"* %38, %21
  br i1 %39, label %49, label %40

40:                                               ; preds = %34, %44
  %41 = phi %"struct.WTF::KeyValuePair.952"* [ %45, %44 ], [ %38, %34 ]
  %42 = bitcast %"struct.WTF::KeyValuePair.952"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  switch i64 %43, label %47 [
    i64 -1, label %44
    i64 0, label %44
  ]

44:                                               ; preds = %40, %40
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %41, i64 1
  %46 = icmp eq %"struct.WTF::KeyValuePair.952"* %45, %21
  br i1 %46, label %49, label %40

47:                                               ; preds = %40
  %48 = icmp eq %"struct.WTF::KeyValuePair.952"* %41, %21
  br i1 %48, label %49, label %34

49:                                               ; preds = %28, %34, %47, %44, %2, %13, %31
  %50 = bitcast %"class.WTF::HashTable.949"* %3 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.WTF::HashTable.949"* %0 to i64*
  %53 = load i64, i64* %52, align 8
  store atomic i64 %53, i64* %50 monotonic, align 8
  store atomic i64 %51, i64* %52 monotonic, align 8
  %54 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = load i32, i32* %6, align 8
  store i32 %56, i32* %54, align 4
  store i32 %55, i32* %6, align 8
  %57 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = load i32, i32* %7, align 4
  store i32 %59, i32* %57, align 4
  store i32 %58, i32* %7, align 4
  %60 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = and i32 %61, 2147483647
  %63 = load i32, i32* %8, align 8
  %64 = and i32 %63, 2147483647
  %65 = and i32 %61, -2147483648
  %66 = or i32 %64, %65
  store i32 %66, i32* %60, align 8
  %67 = and i32 %63, -2147483648
  %68 = or i32 %67, %62
  store i32 %68, i32* %8, align 8
  %69 = icmp eq i64 %53, 0
  br i1 %69, label %72, label %70, !prof !71

70:                                               ; preds = %49
  %71 = inttoptr i64 %53 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %71) #18
  store %"struct.WTF::KeyValuePair.952"* null, %"struct.WTF::KeyValuePair.952"** %5, align 8
  br label %72

72:                                               ; preds = %49, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #18
  ret %"class.WTF::HashTable.949"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.949"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0)) #18
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #18
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink9LayoutBoxEbEEEEPKcv, i64 0, i64 0)) #18
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #18
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair.952"*
  %31 = call %"struct.WTF::KeyValuePair.952"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.949"* %0, %"struct.WTF::KeyValuePair.952"* %30, i32 %17, %"struct.WTF::KeyValuePair.952"* null) #18
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #8

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.952"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.949"*, %"struct.WTF::KeyValuePair.952"*, i32, %"struct.WTF::KeyValuePair.952"*) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.949", align 8
  %6 = bitcast %"class.WTF::HashTable.949"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.949"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.952"* %1, %"struct.WTF::KeyValuePair.952"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.952"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.949"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.949"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.952"*, %"struct.WTF::KeyValuePair.952"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.952"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable.949"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.949"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.952"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #18
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #18
  ret %"struct.WTF::KeyValuePair.952"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.952"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.952"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.952"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair.952"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.949"* nonnull %5, %"class.blink::LayoutBox"** dereferenceable(8) %53) #18
  %55 = extractvalue { %"struct.WTF::KeyValuePair.952"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair.952"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair.952"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #18
  %58 = load %"struct.WTF::KeyValuePair.952"*, %"struct.WTF::KeyValuePair.952"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair.952"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair.952"* %55, %"struct.WTF::KeyValuePair.952"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair.952"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair.952"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair.952"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.952"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.949"*, %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.952"*, %"struct.WTF::KeyValuePair.952"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.952"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %32, i64 0, i32 0
  %35 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutBox"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::LayoutBox"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.952"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.952"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.952"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.952"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.952"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::LayoutBox"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::LayoutBox"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::LayoutBox"* %63, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.952"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %75, i64 0, i32 0
  %78 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %77, align 8
  %79 = icmp eq %"class.blink::LayoutBox"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.952"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.952"*, i8 } undef, %"struct.WTF::KeyValuePair.952"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.952"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.952"*, i8 } %85
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.952"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS4_RKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.949"*, %"class.blink::LayoutBox"** dereferenceable(8), %"struct.WTF::KeyValuePair.952"* dereferenceable(16)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.952"*, %"struct.WTF::KeyValuePair.952"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.952"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.952"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.949"* %0, %"struct.WTF::KeyValuePair.952"* null)
  %9 = load %"struct.WTF::KeyValuePair.952"*, %"struct.WTF::KeyValuePair.952"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.952"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %39, i64 0, i32 0
  %41 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutBox"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::LayoutBox"*
  br i1 %42, label %78, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::LayoutBox"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.952"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.952"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::LayoutBox"* %59, %43
  br i1 %64, label %104, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::LayoutBox"* %59, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.952"* %60, %"struct.WTF::KeyValuePair.952"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %72, i64 0, i32 0
  %74 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutBox"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.952"* %67, null
  br i1 %77, label %78, label %81

78:                                               ; preds = %10, %76
  %79 = phi %"struct.WTF::KeyValuePair.952"* [ %72, %76 ], [ %39, %10 ]
  %80 = bitcast %"struct.WTF::KeyValuePair.952"* %79 to i8*
  br label %89

81:                                               ; preds = %76
  %82 = bitcast %"struct.WTF::KeyValuePair.952"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 16, i1 false) #18
  %83 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, 2147483647
  %86 = and i32 %85, 2147483647
  %87 = and i32 %84, -2147483648
  %88 = or i32 %86, %87
  store i32 %88, i32* %83, align 8
  br label %89

89:                                               ; preds = %78, %81
  %90 = phi i8* [ %80, %78 ], [ %82, %81 ]
  %91 = phi %"struct.WTF::KeyValuePair.952"* [ %79, %78 ], [ %67, %81 ]
  %92 = bitcast %"struct.WTF::KeyValuePair.952"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %92, i64 9, i1 false) #18
  %93 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %95
  %99 = shl i32 %98, 1
  %100 = load i32, i32* %12, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %89
  %103 = tail call %"struct.WTF::KeyValuePair.952"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.949"* %0, %"struct.WTF::KeyValuePair.952"* %91)
  br label %104

104:                                              ; preds = %58, %89, %102
  %105 = phi i8 [ 1, %89 ], [ 1, %102 ], [ 0, %58 ]
  %106 = phi %"struct.WTF::KeyValuePair.952"* [ %91, %89 ], [ %103, %102 ], [ %60, %58 ]
  %107 = insertvalue { %"struct.WTF::KeyValuePair.952"*, i8 } undef, %"struct.WTF::KeyValuePair.952"* %106, 0
  %108 = insertvalue { %"struct.WTF::KeyValuePair.952"*, i8 } %107, i8 %105, 1
  ret { %"struct.WTF::KeyValuePair.952"*, i8 } %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.952"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.949"*, %"struct.WTF::KeyValuePair.952"*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #18
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #18
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #18
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #18
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #18
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #18
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink9LayoutBoxEbEEEEPKcv, i64 0, i64 0)) #18
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #18
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.952"*
  %37 = call %"struct.WTF::KeyValuePair.952"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.949"* %0, %"struct.WTF::KeyValuePair.952"* %36, i32 %32, %"struct.WTF::KeyValuePair.952"* %1) #18
  ret %"struct.WTF::KeyValuePair.952"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #8

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13GridTrackSize28CacheMinMaxTrackBreadthTypesEv(%"class.blink::GridTrackSize"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 5
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, -2
  store i16 %8, i16* %6, align 8
  br label %19

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 0, i32 2
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 5
  %14 = zext i1 %12 to i16
  %15 = load i16, i16* %13, align 8
  %16 = and i16 %15, -2
  %17 = or i16 %16, %14
  store i16 %17, i16* %13, align 8
  switch i8 %11, label %18 [
    i8 2, label %19
    i8 1, label %19
    i8 8, label %19
  ]

18:                                               ; preds = %9
  br label %19

19:                                               ; preds = %18, %9, %9, %9, %5
  %20 = phi i16 [ %8, %5 ], [ %17, %9 ], [ %17, %9 ], [ %17, %9 ], [ %17, %18 ]
  %21 = phi i16* [ %6, %5 ], [ %13, %9 ], [ %13, %9 ], [ %13, %9 ], [ %13, %18 ]
  %22 = phi i16 [ 0, %5 ], [ 4, %9 ], [ 4, %9 ], [ 4, %9 ], [ 0, %18 ]
  %23 = and i16 %20, -21
  %24 = icmp eq i32 %3, 1
  %25 = zext i1 %24 to i16
  %26 = shl nuw nsw i16 %25, 4
  %27 = or i16 %23, %26
  %28 = or i16 %27, %22
  store i16 %28, i16* %21, align 8
  br i1 %4, label %31, label %29

29:                                               ; preds = %19
  %30 = and i16 %28, -257
  store i16 %30, i16* %21, align 8
  br label %42

31:                                               ; preds = %19
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 4
  %35 = zext i1 %34 to i16
  %36 = shl nuw nsw i16 %35, 8
  %37 = and i16 %28, -257
  %38 = or i16 %36, %37
  store i16 %38, i16* %21, align 8
  %39 = icmp eq i8 %33, 3
  %40 = zext i1 %39 to i16
  %41 = shl nuw nsw i16 %40, 10
  br label %42

42:                                               ; preds = %29, %31
  %43 = phi i16 [ %30, %29 ], [ %38, %31 ]
  %44 = phi i16 [ 0, %29 ], [ %41, %31 ]
  %45 = and i16 %43, -1025
  %46 = or i16 %45, %44
  store i16 %46, i16* %21, align 8
  %47 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %42
  %51 = and i16 %46, -3
  store i16 %51, i16* %21, align 8
  br label %61

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 0, i32 2
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  %56 = zext i1 %55 to i16
  %57 = shl nuw nsw i16 %56, 1
  %58 = and i16 %46, -3
  %59 = or i16 %57, %58
  store i16 %59, i16* %21, align 8
  switch i8 %54, label %60 [
    i8 2, label %61
    i8 1, label %61
    i8 8, label %61
  ]

60:                                               ; preds = %52
  br label %61

61:                                               ; preds = %60, %52, %52, %52, %50
  %62 = phi i16 [ %51, %50 ], [ %59, %52 ], [ %59, %52 ], [ %59, %52 ], [ %59, %60 ]
  %63 = phi i16 [ 0, %50 ], [ 8, %52 ], [ 8, %52 ], [ 8, %52 ], [ 0, %60 ]
  %64 = and i16 %62, -41
  %65 = icmp eq i32 %48, 1
  %66 = zext i1 %65 to i16
  %67 = shl nuw nsw i16 %66, 5
  %68 = or i16 %63, %67
  %69 = or i16 %68, %64
  store i16 %69, i16* %21, align 8
  br i1 %49, label %72, label %70

70:                                               ; preds = %61
  %71 = and i16 %69, -513
  store i16 %71, i16* %21, align 8
  br label %83

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 0, i32 2
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %74, 4
  %76 = zext i1 %75 to i16
  %77 = shl nuw nsw i16 %76, 9
  %78 = and i16 %69, -513
  %79 = or i16 %77, %78
  store i16 %79, i16* %21, align 8
  %80 = icmp eq i8 %74, 3
  %81 = zext i1 %80 to i16
  %82 = shl nuw nsw i16 %81, 11
  br label %83

83:                                               ; preds = %70, %72
  %84 = phi i16 [ %71, %70 ], [ %79, %72 ]
  %85 = phi i16 [ 0, %70 ], [ %82, %72 ]
  %86 = and i16 %84, -2049
  %87 = or i16 %86, %85
  store i16 %87, i16* %21, align 8
  %88 = and i16 %84, 1281
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %96

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 2
  %94 = zext i1 %93 to i16
  %95 = shl nuw nsw i16 %94, 6
  br label %96

96:                                               ; preds = %83, %90
  %97 = phi i16 [ 64, %83 ], [ %95, %90 ]
  %98 = and i16 %87, -65
  %99 = or i16 %97, %98
  store i16 %99, i16* %21, align 8
  %100 = and i16 %99, 2560
  %101 = and i16 %84, 2
  %102 = or i16 %100, %101
  %103 = icmp eq i16 %102, 0
  br i1 %103, label %104, label %110

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 0
  %106 = load i32, i32* %105, align 8
  %107 = icmp eq i32 %106, 2
  %108 = zext i1 %107 to i16
  %109 = shl nuw nsw i16 %108, 7
  br label %110

110:                                              ; preds = %96, %104
  %111 = phi i16 [ 128, %96 ], [ %109, %104 ]
  %112 = and i16 %99, -129
  %113 = or i16 %111, %112
  store i16 %113, i16* %21, align 8
  ret void
}

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #8

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferImLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPm(%"class.WTF::VectorBuffer.1361"*, i64*) local_unnamed_addr #15 comdat align 2 {
  %3 = bitcast i64* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #18
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #14

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(88) %"class.blink::GridTrackSize"* @_ZN5blink13GridTrackSizeaSERKS0_(%"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"* dereferenceable(88)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 2, i32 0, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 8
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %7, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %13) #18
  br label %14

14:                                               ; preds = %12, %2
  %15 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 0, i32 2
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 8
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %8) #18
  br label %19

19:                                               ; preds = %14, %18
  %20 = bitcast %"class.blink::GridLength"* %7 to i64*
  %21 = bitcast %"class.blink::GridLength"* %6 to i64*
  %22 = load i64, i64* %20, align 4
  store i64 %22, i64* %21, align 4
  %23 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 1
  %24 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 2, i32 1
  %25 = bitcast double* %23 to i8*
  %26 = bitcast double* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 12, i1 false) #18
  %27 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 3
  %29 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %27, i64 0, i32 0
  %30 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 3, i32 0, i32 2
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 8
  br i1 %32, label %33, label %35

33:                                               ; preds = %19
  %34 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %28, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %34) #18
  br label %35

35:                                               ; preds = %33, %19
  %36 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 0, i32 2
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 8
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %29) #18
  br label %40

40:                                               ; preds = %35, %39
  %41 = bitcast %"class.blink::GridLength"* %28 to i64*
  %42 = bitcast %"class.blink::GridLength"* %27 to i64*
  %43 = load i64, i64* %41, align 4
  store i64 %43, i64* %42, align 4
  %44 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 1
  %45 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 3, i32 1
  %46 = bitcast double* %44 to i8*
  %47 = bitcast double* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 12, i1 false) #18
  %48 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4
  %49 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 4
  %50 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %48, i64 0, i32 0
  %51 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 4, i32 0, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 8
  br i1 %53, label %54, label %56

54:                                               ; preds = %40
  %55 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %49, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %55) #18
  br label %56

56:                                               ; preds = %54, %40
  %57 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4, i32 0, i32 2
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %58, 8
  br i1 %59, label %60, label %61

60:                                               ; preds = %56
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %50) #18
  br label %61

61:                                               ; preds = %56, %60
  %62 = bitcast %"class.blink::GridLength"* %49 to i64*
  %63 = bitcast %"class.blink::GridLength"* %48 to i64*
  %64 = load i64, i64* %62, align 4
  store i64 %64, i64* %63, align 4
  %65 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4, i32 1
  %66 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 4, i32 1
  %67 = bitcast double* %65 to i8*
  %68 = bitcast double* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 12, i1 false) #18
  %69 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 5
  %70 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 5
  %71 = load i16, i16* %70, align 8
  store i16 %71, i16* %69, align 8
  ret %"class.blink::GridTrackSize"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(128) %"class.blink::GridTrack"* @_ZNK3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %24, i64 %25
  ret %"class.blink::GridTrack"* %26
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.952"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES4_bEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.949"*, %"class.blink::LayoutBox"** dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.952"*, %"struct.WTF::KeyValuePair.952"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.952"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.952"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.949"* %0, %"struct.WTF::KeyValuePair.952"* null)
  %9 = load %"struct.WTF::KeyValuePair.952"*, %"struct.WTF::KeyValuePair.952"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.952"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %39, i64 0, i32 0
  %41 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutBox"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::LayoutBox"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::LayoutBox"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.952"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.952"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::LayoutBox"* %59, %43
  br i1 %64, label %104, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::LayoutBox"* %59, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.952"* %60, %"struct.WTF::KeyValuePair.952"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %72, i64 0, i32 0
  %74 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutBox"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.952"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.952"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #18
  %80 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.952"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.952"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %89, i64 0, i32 1
  %92 = load i8, i8* %2, align 1, !range !2
  store i8 %92, i8* %91, align 1
  %93 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %95
  %99 = shl i32 %98, 1
  %100 = load i32, i32* %12, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %87
  %103 = tail call %"struct.WTF::KeyValuePair.952"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.949"* %0, %"struct.WTF::KeyValuePair.952"* %89)
  br label %104

104:                                              ; preds = %58, %87, %102
  %105 = phi i8 [ 1, %87 ], [ 1, %102 ], [ 0, %58 ]
  %106 = phi %"struct.WTF::KeyValuePair.952"* [ %89, %87 ], [ %103, %102 ], [ %60, %58 ]
  %107 = insertvalue { %"struct.WTF::KeyValuePair.952"*, i8 } undef, %"struct.WTF::KeyValuePair.952"* %106, 0
  %108 = insertvalue { %"struct.WTF::KeyValuePair.952"*, i8 } %107, i8 %105, 1
  ret { %"struct.WTF::KeyValuePair.952"*, i8 } %108
}

; Function Attrs: nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN5blinkL30SortByGridTrackGrowthPotentialEPKNS_9GridTrackES2_(%"class.blink::GridTrack"* nocapture readonly, %"class.blink::GridTrack"* nocapture readonly) #9 {
  %3 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, -64
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 5
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %6, %2
  %11 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 4
  %12 = bitcast %"class.absl::optional"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i8
  %15 = icmp eq i8 %14, 0
  br label %16

16:                                               ; preds = %6, %10
  %17 = phi i1 [ false, %6 ], [ %15, %10 ]
  %18 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %1, i64 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, -64
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %1, i64 0, i32 5
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %21, %16
  %26 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %1, i64 0, i32 4
  %27 = bitcast %"class.absl::optional"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %28 to i8
  %30 = icmp eq i8 %29, 0
  %31 = and i1 %17, %30
  br i1 %31, label %69, label %32

32:                                               ; preds = %25, %21
  %33 = phi i1 [ %30, %25 ], [ false, %21 ]
  %34 = or i1 %17, %33
  br i1 %34, label %69, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 4
  %37 = bitcast %"class.absl::optional"* %36 to i32*
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = trunc i32 %38 to i8
  %42 = icmp eq i8 %41, 0
  %43 = select i1 %42, i32 %4, i32 %40
  %44 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %1, i64 0, i32 4
  %45 = bitcast %"class.absl::optional"* %44 to i32*
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = trunc i32 %46 to i8
  %50 = icmp eq i8 %49, 0
  %51 = select i1 %50, i32 %19, i32 %48
  %52 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %0, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = icmp sgt i32 %53, -1
  %55 = select i1 %54, i32 -2147483648, i32 2147483647
  %56 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %53) #18
  %57 = extractvalue { i32, i1 } %56, 1
  %58 = extractvalue { i32, i1 } %56, 0
  %59 = select i1 %57, i32 %55, i32 %58, !prof !3
  %60 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %1, i64 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = icmp sgt i32 %61, -1
  %63 = select i1 %62, i32 -2147483648, i32 2147483647
  %64 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %51, i32 %61) #18
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 %63, i32 %66, !prof !3
  %68 = icmp slt i32 %59, %67
  br label %69

69:                                               ; preds = %25, %32, %35
  %70 = phi i1 [ %68, %35 ], [ false, %25 ], [ %33, %32 ]
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::GridTrack"** @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1349"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %24, i64 %25
  ret %"class.blink::GridTrack"** %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbPKN5blink9GridTrackES4_EPPS2_EEvT0_SA_T_(%"class.blink::GridTrack"**, %"class.blink::GridTrack"**, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** dereferenceable(8)) local_unnamed_addr #3 comdat {
  br label %4

4:                                                ; preds = %264, %3
  %5 = phi %"class.blink::GridTrack"** [ %1, %3 ], [ %243, %264 ]
  %6 = phi %"class.blink::GridTrack"** [ %0, %3 ], [ %17, %264 ]
  %7 = ptrtoint %"class.blink::GridTrack"** %5 to i64
  %8 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %5, i64 -1
  %9 = bitcast %"class.blink::GridTrack"** %8 to i64*
  %10 = bitcast %"class.blink::GridTrack"** %8 to i64*
  %11 = bitcast %"class.blink::GridTrack"** %8 to i64*
  %12 = bitcast %"class.blink::GridTrack"** %8 to i64*
  %13 = ptrtoint %"class.blink::GridTrack"** %5 to i64
  br label %14

14:                                               ; preds = %273, %4
  %15 = phi %"class.blink::GridTrack"** [ %6, %4 ], [ %274, %273 ]
  br label %16

16:                                               ; preds = %187, %14
  %17 = phi %"class.blink::GridTrack"** [ %15, %14 ], [ %174, %187 ]
  %18 = ptrtoint %"class.blink::GridTrack"** %17 to i64
  %19 = sub i64 %7, %18
  %20 = ashr exact i64 %19, 3
  switch i64 %20, label %86 [
    i64 0, label %277
    i64 1, label %277
    i64 2, label %21
    i64 3, label %32
    i64 4, label %75
    i64 5, label %80
  ]

21:                                               ; preds = %16
  %22 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %23 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %5, i64 -1
  %24 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %23, align 8
  %25 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, align 8
  %26 = tail call zeroext i1 %22(%"class.blink::GridTrack"* %24, %"class.blink::GridTrack"* %25) #18
  br i1 %26, label %27, label %277

27:                                               ; preds = %21
  %28 = bitcast %"class.blink::GridTrack"** %17 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::GridTrack"** %23 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %28, align 8
  store i64 %29, i64* %30, align 8
  br label %277

32:                                               ; preds = %16
  %33 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, i64 1
  %34 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %5, i64 -1
  %35 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %36 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %33, align 8
  %37 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, align 8
  %38 = tail call zeroext i1 %35(%"class.blink::GridTrack"* %36, %"class.blink::GridTrack"* %37) #18
  %39 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %40 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %34, align 8
  %41 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %33, align 8
  %42 = tail call zeroext i1 %39(%"class.blink::GridTrack"* %40, %"class.blink::GridTrack"* %41) #18
  br i1 %38, label %58, label %43

43:                                               ; preds = %32
  br i1 %42, label %44, label %277

44:                                               ; preds = %43
  %45 = bitcast %"class.blink::GridTrack"** %33 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::GridTrack"** %34 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %45, align 8
  store i64 %46, i64* %47, align 8
  %49 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %50 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %33, align 8
  %51 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, align 8
  %52 = tail call zeroext i1 %49(%"class.blink::GridTrack"* %50, %"class.blink::GridTrack"* %51) #18
  br i1 %52, label %53, label %277

53:                                               ; preds = %44
  %54 = bitcast %"class.blink::GridTrack"** %17 to <2 x i64>*
  %55 = load <2 x i64>, <2 x i64>* %54, align 8
  %56 = shufflevector <2 x i64> %55, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %57 = bitcast %"class.blink::GridTrack"** %17 to <2 x i64>*
  store <2 x i64> %56, <2 x i64>* %57, align 8
  br label %277

58:                                               ; preds = %32
  %59 = bitcast %"class.blink::GridTrack"** %17 to i64*
  %60 = load i64, i64* %59, align 8
  br i1 %42, label %61, label %64

61:                                               ; preds = %58
  %62 = bitcast %"class.blink::GridTrack"** %34 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %59, align 8
  store i64 %60, i64* %62, align 8
  br label %277

64:                                               ; preds = %58
  %65 = bitcast %"class.blink::GridTrack"** %33 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %59, align 8
  store i64 %60, i64* %65, align 8
  %67 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %68 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %34, align 8
  %69 = inttoptr i64 %60 to %"class.blink::GridTrack"*
  %70 = tail call zeroext i1 %67(%"class.blink::GridTrack"* %68, %"class.blink::GridTrack"* %69) #18
  br i1 %70, label %71, label %277

71:                                               ; preds = %64
  %72 = load i64, i64* %65, align 8
  %73 = bitcast %"class.blink::GridTrack"** %34 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %65, align 8
  store i64 %72, i64* %73, align 8
  br label %277

75:                                               ; preds = %16
  %76 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, i64 1
  %77 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, i64 2
  %78 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %5, i64 -1
  %79 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN5blink9GridTrackES4_EPPS2_EEjT0_SA_SA_SA_T_(%"class.blink::GridTrack"** %17, %"class.blink::GridTrack"** %76, %"class.blink::GridTrack"** %77, %"class.blink::GridTrack"** %78, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** dereferenceable(8) %2)
  br label %277

80:                                               ; preds = %16
  %81 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, i64 1
  %82 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, i64 2
  %83 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, i64 3
  %84 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %5, i64 -1
  %85 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN5blink9GridTrackES4_EPPS2_EEjT0_SA_SA_SA_SA_T_(%"class.blink::GridTrack"** %17, %"class.blink::GridTrack"** %81, %"class.blink::GridTrack"** %82, %"class.blink::GridTrack"** %83, %"class.blink::GridTrack"** %84, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** dereferenceable(8) %2)
  br label %277

86:                                               ; preds = %16
  %87 = icmp slt i64 %19, 248
  br i1 %87, label %88, label %89

88:                                               ; preds = %86
  tail call void @_ZNSt3__118__insertion_sort_3IRPFbPKN5blink9GridTrackES4_EPPS2_EEvT0_SA_T_(%"class.blink::GridTrack"** %17, %"class.blink::GridTrack"** %5, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** dereferenceable(8) %2)
  br label %277

89:                                               ; preds = %86
  %90 = icmp sgt i64 %19, 7992
  %91 = sdiv i64 %20, 2
  %92 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, i64 %91
  br i1 %90, label %93, label %98

93:                                               ; preds = %89
  %94 = sdiv i64 %20, 4
  %95 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, i64 %94
  %96 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %92, i64 %94
  %97 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN5blink9GridTrackES4_EPPS2_EEjT0_SA_SA_SA_SA_T_(%"class.blink::GridTrack"** %17, %"class.blink::GridTrack"** %95, %"class.blink::GridTrack"** %92, %"class.blink::GridTrack"** %96, %"class.blink::GridTrack"** %8, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** dereferenceable(8) %2)
  br label %135

98:                                               ; preds = %89
  %99 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %100 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %92, align 8
  %101 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, align 8
  %102 = tail call zeroext i1 %99(%"class.blink::GridTrack"* %100, %"class.blink::GridTrack"* %101) #18
  %103 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %104 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %8, align 8
  %105 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %92, align 8
  %106 = tail call zeroext i1 %103(%"class.blink::GridTrack"* %104, %"class.blink::GridTrack"* %105) #18
  br i1 %102, label %120, label %107

107:                                              ; preds = %98
  br i1 %106, label %108, label %135

108:                                              ; preds = %107
  %109 = bitcast %"class.blink::GridTrack"** %92 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = load i64, i64* %9, align 8
  store i64 %111, i64* %109, align 8
  store i64 %110, i64* %9, align 8
  %112 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %113 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %92, align 8
  %114 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, align 8
  %115 = tail call zeroext i1 %112(%"class.blink::GridTrack"* %113, %"class.blink::GridTrack"* %114) #18
  br i1 %115, label %116, label %135

116:                                              ; preds = %108
  %117 = bitcast %"class.blink::GridTrack"** %17 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = load i64, i64* %109, align 8
  store i64 %119, i64* %117, align 8
  store i64 %118, i64* %109, align 8
  br label %135

120:                                              ; preds = %98
  %121 = bitcast %"class.blink::GridTrack"** %17 to i64*
  %122 = load i64, i64* %121, align 8
  br i1 %106, label %123, label %125

123:                                              ; preds = %120
  %124 = load i64, i64* %11, align 8
  store i64 %124, i64* %121, align 8
  store i64 %122, i64* %11, align 8
  br label %135

125:                                              ; preds = %120
  %126 = bitcast %"class.blink::GridTrack"** %92 to i64*
  %127 = load i64, i64* %126, align 8
  store i64 %127, i64* %121, align 8
  store i64 %122, i64* %126, align 8
  %128 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %129 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %8, align 8
  %130 = inttoptr i64 %122 to %"class.blink::GridTrack"*
  %131 = tail call zeroext i1 %128(%"class.blink::GridTrack"* %129, %"class.blink::GridTrack"* %130) #18
  br i1 %131, label %132, label %135

132:                                              ; preds = %125
  %133 = load i64, i64* %126, align 8
  %134 = load i64, i64* %10, align 8
  store i64 %134, i64* %126, align 8
  store i64 %133, i64* %10, align 8
  br label %135

135:                                              ; preds = %132, %125, %123, %116, %108, %107, %93
  %136 = phi i32 [ %97, %93 ], [ 1, %123 ], [ 0, %107 ], [ 2, %116 ], [ 1, %108 ], [ 2, %132 ], [ 1, %125 ]
  %137 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %138 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, align 8
  %139 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %92, align 8
  %140 = tail call zeroext i1 %137(%"class.blink::GridTrack"* %138, %"class.blink::GridTrack"* %139) #18
  br i1 %140, label %205, label %141

141:                                              ; preds = %135, %194
  %142 = phi %"class.blink::GridTrack"** [ %143, %194 ], [ %8, %135 ]
  %143 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %142, i64 -1
  %144 = icmp eq %"class.blink::GridTrack"** %17, %143
  br i1 %144, label %145, label %194

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, i64 1
  %147 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %148 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, align 8
  %149 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %8, align 8
  %150 = tail call zeroext i1 %147(%"class.blink::GridTrack"* %148, %"class.blink::GridTrack"* %149) #18
  br i1 %150, label %167, label %151

151:                                              ; preds = %145
  %152 = icmp eq %"class.blink::GridTrack"** %146, %8
  br i1 %152, label %277, label %153

153:                                              ; preds = %151, %164
  %154 = phi %"class.blink::GridTrack"** [ %165, %164 ], [ %146, %151 ]
  %155 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %156 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, align 8
  %157 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %154, align 8
  %158 = tail call zeroext i1 %155(%"class.blink::GridTrack"* %156, %"class.blink::GridTrack"* %157) #18
  br i1 %158, label %159, label %164

159:                                              ; preds = %153
  %160 = bitcast %"class.blink::GridTrack"** %154 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = load i64, i64* %12, align 8
  store i64 %162, i64* %160, align 8
  store i64 %161, i64* %12, align 8
  %163 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %154, i64 1
  br label %167

164:                                              ; preds = %153
  %165 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %154, i64 1
  %166 = icmp eq %"class.blink::GridTrack"** %165, %8
  br i1 %166, label %277, label %153

167:                                              ; preds = %159, %145
  %168 = phi %"class.blink::GridTrack"** [ %146, %145 ], [ %163, %159 ]
  %169 = icmp eq %"class.blink::GridTrack"** %168, %8
  br i1 %169, label %277, label %170

170:                                              ; preds = %167, %189
  %171 = phi %"class.blink::GridTrack"** [ %179, %189 ], [ %168, %167 ]
  %172 = phi %"class.blink::GridTrack"** [ %184, %189 ], [ %8, %167 ]
  br label %173

173:                                              ; preds = %173, %170
  %174 = phi %"class.blink::GridTrack"** [ %171, %170 ], [ %179, %173 ]
  %175 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %176 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, align 8
  %177 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %174, align 8
  %178 = tail call zeroext i1 %175(%"class.blink::GridTrack"* %176, %"class.blink::GridTrack"* %177) #18
  %179 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %174, i64 1
  br i1 %178, label %180, label %173

180:                                              ; preds = %173, %180
  %181 = phi %"class.blink::GridTrack"** [ %184, %180 ], [ %172, %173 ]
  %182 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %183 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, align 8
  %184 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %181, i64 -1
  %185 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %184, align 8
  %186 = tail call zeroext i1 %182(%"class.blink::GridTrack"* %183, %"class.blink::GridTrack"* %185) #18
  br i1 %186, label %180, label %187

187:                                              ; preds = %180
  %188 = icmp ult %"class.blink::GridTrack"** %174, %184
  br i1 %188, label %189, label %16

189:                                              ; preds = %187
  %190 = bitcast %"class.blink::GridTrack"** %174 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %"class.blink::GridTrack"** %184 to i64*
  %193 = load i64, i64* %192, align 8
  store i64 %193, i64* %190, align 8
  store i64 %191, i64* %192, align 8
  br label %170

194:                                              ; preds = %141
  %195 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %196 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %143, align 8
  %197 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %92, align 8
  %198 = tail call zeroext i1 %195(%"class.blink::GridTrack"* %196, %"class.blink::GridTrack"* %197) #18
  br i1 %198, label %199, label %141

199:                                              ; preds = %194
  %200 = bitcast %"class.blink::GridTrack"** %17 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast %"class.blink::GridTrack"** %143 to i64*
  %203 = load i64, i64* %202, align 8
  store i64 %203, i64* %200, align 8
  store i64 %201, i64* %202, align 8
  %204 = add i32 %136, 1
  br label %205

205:                                              ; preds = %135, %199
  %206 = phi i32 [ %204, %199 ], [ %136, %135 ]
  %207 = phi %"class.blink::GridTrack"** [ %143, %199 ], [ %8, %135 ]
  %208 = ptrtoint %"class.blink::GridTrack"** %17 to i64
  %209 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %17, i64 1
  %210 = icmp ult %"class.blink::GridTrack"** %209, %207
  br i1 %210, label %211, label %240

211:                                              ; preds = %205, %232
  %212 = phi %"class.blink::GridTrack"** [ %239, %232 ], [ %92, %205 ]
  %213 = phi i32 [ %237, %232 ], [ %206, %205 ]
  %214 = phi %"class.blink::GridTrack"** [ %222, %232 ], [ %209, %205 ]
  %215 = phi %"class.blink::GridTrack"** [ %226, %232 ], [ %207, %205 ]
  br label %216

216:                                              ; preds = %216, %211
  %217 = phi %"class.blink::GridTrack"** [ %214, %211 ], [ %222, %216 ]
  %218 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %219 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %217, align 8
  %220 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %212, align 8
  %221 = tail call zeroext i1 %218(%"class.blink::GridTrack"* %219, %"class.blink::GridTrack"* %220) #18
  %222 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %217, i64 1
  br i1 %221, label %216, label %223

223:                                              ; preds = %216, %223
  %224 = phi %"class.blink::GridTrack"** [ %226, %223 ], [ %215, %216 ]
  %225 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %226 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %224, i64 -1
  %227 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %226, align 8
  %228 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %212, align 8
  %229 = tail call zeroext i1 %225(%"class.blink::GridTrack"* %227, %"class.blink::GridTrack"* %228) #18
  br i1 %229, label %230, label %223

230:                                              ; preds = %223
  %231 = icmp ugt %"class.blink::GridTrack"** %217, %226
  br i1 %231, label %240, label %232

232:                                              ; preds = %230
  %233 = bitcast %"class.blink::GridTrack"** %217 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = bitcast %"class.blink::GridTrack"** %226 to i64*
  %236 = load i64, i64* %235, align 8
  store i64 %236, i64* %233, align 8
  store i64 %234, i64* %235, align 8
  %237 = add i32 %213, 1
  %238 = icmp eq %"class.blink::GridTrack"** %212, %217
  %239 = select i1 %238, %"class.blink::GridTrack"** %226, %"class.blink::GridTrack"** %212
  br label %211

240:                                              ; preds = %230, %205
  %241 = phi %"class.blink::GridTrack"** [ %92, %205 ], [ %212, %230 ]
  %242 = phi i32 [ %206, %205 ], [ %213, %230 ]
  %243 = phi %"class.blink::GridTrack"** [ %209, %205 ], [ %217, %230 ]
  %244 = icmp eq %"class.blink::GridTrack"** %243, %241
  br i1 %244, label %256, label %245

245:                                              ; preds = %240
  %246 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %247 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %241, align 8
  %248 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %243, align 8
  %249 = tail call zeroext i1 %246(%"class.blink::GridTrack"* %247, %"class.blink::GridTrack"* %248) #18
  br i1 %249, label %250, label %256

250:                                              ; preds = %245
  %251 = bitcast %"class.blink::GridTrack"** %243 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast %"class.blink::GridTrack"** %241 to i64*
  %254 = load i64, i64* %253, align 8
  store i64 %254, i64* %251, align 8
  store i64 %252, i64* %253, align 8
  %255 = add i32 %242, 1
  br label %256

256:                                              ; preds = %240, %250, %245
  %257 = phi i32 [ %255, %250 ], [ %242, %245 ], [ %242, %240 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %256
  %260 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN5blink9GridTrackES4_EPPS2_EEbT0_SA_T_(%"class.blink::GridTrack"** %17, %"class.blink::GridTrack"** %243, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** dereferenceable(8) %2)
  %261 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %243, i64 1
  %262 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN5blink9GridTrackES4_EPPS2_EEbT0_SA_T_(%"class.blink::GridTrack"** %261, %"class.blink::GridTrack"** %5, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** dereferenceable(8) %2)
  br i1 %262, label %263, label %265

263:                                              ; preds = %259
  br i1 %260, label %277, label %264

264:                                              ; preds = %263, %275
  br label %4

265:                                              ; preds = %259
  br i1 %260, label %273, label %266

266:                                              ; preds = %265, %256
  %267 = ptrtoint %"class.blink::GridTrack"** %243 to i64
  %268 = sub i64 %267, %208
  %269 = sub i64 %13, %267
  %270 = icmp slt i64 %268, %269
  br i1 %270, label %271, label %275

271:                                              ; preds = %266
  tail call void @_ZNSt3__16__sortIRPFbPKN5blink9GridTrackES4_EPPS2_EEvT0_SA_T_(%"class.blink::GridTrack"** %17, %"class.blink::GridTrack"** %243, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** dereferenceable(8) %2)
  %272 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %243, i64 1
  br label %273

273:                                              ; preds = %271, %265
  %274 = phi %"class.blink::GridTrack"** [ %261, %265 ], [ %272, %271 ]
  br label %14

275:                                              ; preds = %266
  %276 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %243, i64 1
  tail call void @_ZNSt3__16__sortIRPFbPKN5blink9GridTrackES4_EPPS2_EEvT0_SA_T_(%"class.blink::GridTrack"** %276, %"class.blink::GridTrack"** %5, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** dereferenceable(8) %2)
  br label %264

277:                                              ; preds = %263, %167, %16, %16, %151, %164, %71, %64, %61, %53, %44, %43, %21, %27, %75, %80, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbPKN5blink9GridTrackES4_EPPS2_EEjT0_SA_SA_SA_T_(%"class.blink::GridTrack"**, %"class.blink::GridTrack"**, %"class.blink::GridTrack"**, %"class.blink::GridTrack"**, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** dereferenceable(8)) local_unnamed_addr #3 comdat {
  %6 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %4, align 8
  %7 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %1, align 8
  %8 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, align 8
  %9 = tail call zeroext i1 %6(%"class.blink::GridTrack"* %7, %"class.blink::GridTrack"* %8) #18
  %10 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %4, align 8
  %11 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %2, align 8
  %12 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %1, align 8
  %13 = tail call zeroext i1 %10(%"class.blink::GridTrack"* %11, %"class.blink::GridTrack"* %12) #18
  br i1 %9, label %28, label %14

14:                                               ; preds = %5
  br i1 %13, label %15, label %45

15:                                               ; preds = %14
  %16 = bitcast %"class.blink::GridTrack"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.blink::GridTrack"** %2 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %20 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %4, align 8
  %21 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %1, align 8
  %22 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, align 8
  %23 = tail call zeroext i1 %20(%"class.blink::GridTrack"* %21, %"class.blink::GridTrack"* %22) #18
  br i1 %23, label %24, label %45

24:                                               ; preds = %15
  %25 = bitcast %"class.blink::GridTrack"** %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %16, align 8
  store i64 %27, i64* %25, align 8
  store i64 %26, i64* %16, align 8
  br label %45

28:                                               ; preds = %5
  %29 = bitcast %"class.blink::GridTrack"** %0 to i64*
  %30 = load i64, i64* %29, align 8
  br i1 %13, label %31, label %34

31:                                               ; preds = %28
  %32 = bitcast %"class.blink::GridTrack"** %2 to i64*
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %29, align 8
  store i64 %30, i64* %32, align 8
  br label %45

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::GridTrack"** %1 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %29, align 8
  store i64 %30, i64* %35, align 8
  %37 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %4, align 8
  %38 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %2, align 8
  %39 = inttoptr i64 %30 to %"class.blink::GridTrack"*
  %40 = tail call zeroext i1 %37(%"class.blink::GridTrack"* %38, %"class.blink::GridTrack"* %39) #18
  br i1 %40, label %41, label %45

41:                                               ; preds = %34
  %42 = load i64, i64* %35, align 8
  %43 = bitcast %"class.blink::GridTrack"** %2 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %35, align 8
  store i64 %42, i64* %43, align 8
  br label %45

45:                                               ; preds = %14, %15, %24, %31, %34, %41
  %46 = phi i32 [ 1, %31 ], [ 0, %14 ], [ 2, %24 ], [ 1, %15 ], [ 2, %41 ], [ 1, %34 ]
  %47 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %4, align 8
  %48 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %3, align 8
  %49 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %2, align 8
  %50 = tail call zeroext i1 %47(%"class.blink::GridTrack"* %48, %"class.blink::GridTrack"* %49) #18
  br i1 %50, label %51, label %75

51:                                               ; preds = %45
  %52 = bitcast %"class.blink::GridTrack"** %2 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.blink::GridTrack"** %3 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %52, align 8
  store i64 %53, i64* %54, align 8
  %56 = add nuw nsw i32 %46, 1
  %57 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %4, align 8
  %58 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %2, align 8
  %59 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %1, align 8
  %60 = tail call zeroext i1 %57(%"class.blink::GridTrack"* %58, %"class.blink::GridTrack"* %59) #18
  br i1 %60, label %61, label %75

61:                                               ; preds = %51
  %62 = bitcast %"class.blink::GridTrack"** %1 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = load i64, i64* %52, align 8
  store i64 %64, i64* %62, align 8
  store i64 %63, i64* %52, align 8
  %65 = add nuw nsw i32 %46, 2
  %66 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %4, align 8
  %67 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %1, align 8
  %68 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, align 8
  %69 = tail call zeroext i1 %66(%"class.blink::GridTrack"* %67, %"class.blink::GridTrack"* %68) #18
  br i1 %69, label %70, label %75

70:                                               ; preds = %61
  %71 = bitcast %"class.blink::GridTrack"** %0 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = load i64, i64* %62, align 8
  store i64 %73, i64* %71, align 8
  store i64 %72, i64* %62, align 8
  %74 = add nuw nsw i32 %46, 3
  br label %75

75:                                               ; preds = %51, %70, %61, %45
  %76 = phi i32 [ %74, %70 ], [ %65, %61 ], [ %56, %51 ], [ %46, %45 ]
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbPKN5blink9GridTrackES4_EPPS2_EEjT0_SA_SA_SA_SA_T_(%"class.blink::GridTrack"**, %"class.blink::GridTrack"**, %"class.blink::GridTrack"**, %"class.blink::GridTrack"**, %"class.blink::GridTrack"**, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** dereferenceable(8)) local_unnamed_addr #3 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN5blink9GridTrackES4_EPPS2_EEjT0_SA_SA_SA_T_(%"class.blink::GridTrack"** %0, %"class.blink::GridTrack"** %1, %"class.blink::GridTrack"** %2, %"class.blink::GridTrack"** %3, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** dereferenceable(8) %5)
  %8 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %5, align 8
  %9 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %4, align 8
  %10 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %3, align 8
  %11 = tail call zeroext i1 %8(%"class.blink::GridTrack"* %9, %"class.blink::GridTrack"* %10) #18
  br i1 %11, label %12, label %45

12:                                               ; preds = %6
  %13 = bitcast %"class.blink::GridTrack"** %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.blink::GridTrack"** %4 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 %14, i64* %15, align 8
  %17 = add i32 %7, 1
  %18 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %5, align 8
  %19 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %3, align 8
  %20 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %2, align 8
  %21 = tail call zeroext i1 %18(%"class.blink::GridTrack"* %19, %"class.blink::GridTrack"* %20) #18
  br i1 %21, label %22, label %45

22:                                               ; preds = %12
  %23 = bitcast %"class.blink::GridTrack"** %2 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = load i64, i64* %13, align 8
  store i64 %25, i64* %23, align 8
  store i64 %24, i64* %13, align 8
  %26 = add i32 %7, 2
  %27 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %5, align 8
  %28 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %2, align 8
  %29 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %1, align 8
  %30 = tail call zeroext i1 %27(%"class.blink::GridTrack"* %28, %"class.blink::GridTrack"* %29) #18
  br i1 %30, label %31, label %45

31:                                               ; preds = %22
  %32 = bitcast %"class.blink::GridTrack"** %1 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = load i64, i64* %23, align 8
  store i64 %34, i64* %32, align 8
  store i64 %33, i64* %23, align 8
  %35 = add i32 %7, 3
  %36 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %5, align 8
  %37 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %1, align 8
  %38 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, align 8
  %39 = tail call zeroext i1 %36(%"class.blink::GridTrack"* %37, %"class.blink::GridTrack"* %38) #18
  br i1 %39, label %40, label %45

40:                                               ; preds = %31
  %41 = bitcast %"class.blink::GridTrack"** %0 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %32, align 8
  store i64 %43, i64* %41, align 8
  store i64 %42, i64* %32, align 8
  %44 = add i32 %7, 4
  br label %45

45:                                               ; preds = %12, %31, %40, %22, %6
  %46 = phi i32 [ %44, %40 ], [ %35, %31 ], [ %26, %22 ], [ %17, %12 ], [ %7, %6 ]
  ret i32 %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRPFbPKN5blink9GridTrackES4_EPPS2_EEvT0_SA_T_(%"class.blink::GridTrack"**, %"class.blink::GridTrack"**, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** dereferenceable(8)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, i64 2
  %5 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, i64 1
  %6 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %7 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %5, align 8
  %8 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, align 8
  %9 = tail call zeroext i1 %6(%"class.blink::GridTrack"* %7, %"class.blink::GridTrack"* %8) #18
  %10 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %11 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %4, align 8
  %12 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %5, align 8
  %13 = tail call zeroext i1 %10(%"class.blink::GridTrack"* %11, %"class.blink::GridTrack"* %12) #18
  br i1 %9, label %29, label %14

14:                                               ; preds = %3
  br i1 %13, label %15, label %47

15:                                               ; preds = %14
  %16 = bitcast %"class.blink::GridTrack"** %5 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.blink::GridTrack"** %4 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %20 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %21 = inttoptr i64 %19 to %"class.blink::GridTrack"*
  %22 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, align 8
  %23 = tail call zeroext i1 %20(%"class.blink::GridTrack"* %21, %"class.blink::GridTrack"* %22) #18
  br i1 %23, label %24, label %47

24:                                               ; preds = %15
  %25 = bitcast %"class.blink::GridTrack"** %0 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8
  %27 = shufflevector <2 x i64> %26, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %28 = bitcast %"class.blink::GridTrack"** %0 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %28, align 8
  br label %47

29:                                               ; preds = %3
  %30 = bitcast %"class.blink::GridTrack"** %0 to i64*
  %31 = load i64, i64* %30, align 8
  br i1 %13, label %32, label %35

32:                                               ; preds = %29
  %33 = bitcast %"class.blink::GridTrack"** %4 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %30, align 8
  store i64 %31, i64* %33, align 8
  br label %47

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::GridTrack"** %5 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %30, align 8
  store i64 %31, i64* %36, align 8
  %38 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %39 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %4, align 8
  %40 = inttoptr i64 %31 to %"class.blink::GridTrack"*
  %41 = tail call zeroext i1 %38(%"class.blink::GridTrack"* %39, %"class.blink::GridTrack"* %40) #18
  br i1 %41, label %42, label %47

42:                                               ; preds = %35
  %43 = bitcast %"class.blink::GridTrack"** %5 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 8
  %45 = shufflevector <2 x i64> %44, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %46 = bitcast %"class.blink::GridTrack"** %5 to <2 x i64>*
  store <2 x i64> %45, <2 x i64>* %46, align 8
  br label %47

47:                                               ; preds = %14, %15, %24, %32, %35, %42
  %48 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, i64 3
  %49 = icmp eq %"class.blink::GridTrack"** %48, %1
  br i1 %49, label %50, label %51

50:                                               ; preds = %77, %47
  ret void

51:                                               ; preds = %47, %77
  %52 = phi %"class.blink::GridTrack"** [ %78, %77 ], [ %48, %47 ]
  %53 = phi %"class.blink::GridTrack"** [ %52, %77 ], [ %4, %47 ]
  %54 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %55 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %52, align 8
  %56 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %53, align 8
  %57 = tail call zeroext i1 %54(%"class.blink::GridTrack"* %55, %"class.blink::GridTrack"* %56) #18
  br i1 %57, label %58, label %77

58:                                               ; preds = %51
  %59 = bitcast %"class.blink::GridTrack"** %52 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = inttoptr i64 %60 to %"class.blink::GridTrack"*
  br label %62

62:                                               ; preds = %69, %58
  %63 = phi %"class.blink::GridTrack"** [ %52, %58 ], [ %64, %69 ]
  %64 = phi %"class.blink::GridTrack"** [ %53, %58 ], [ %71, %69 ]
  %65 = bitcast %"class.blink::GridTrack"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.blink::GridTrack"** %63 to i64*
  store i64 %66, i64* %67, align 8
  %68 = icmp eq %"class.blink::GridTrack"** %64, %0
  br i1 %68, label %74, label %69

69:                                               ; preds = %62
  %70 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %71 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %64, i64 -1
  %72 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %71, align 8
  %73 = tail call zeroext i1 %70(%"class.blink::GridTrack"* %61, %"class.blink::GridTrack"* %72) #18
  br i1 %73, label %62, label %74

74:                                               ; preds = %62, %69
  %75 = phi %"class.blink::GridTrack"** [ %64, %69 ], [ %0, %62 ]
  %76 = bitcast %"class.blink::GridTrack"** %75 to i64*
  store i64 %60, i64* %76, align 8
  br label %77

77:                                               ; preds = %74, %51
  %78 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %52, i64 1
  %79 = icmp eq %"class.blink::GridTrack"** %78, %1
  br i1 %79, label %50, label %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN5blink9GridTrackES4_EPPS2_EEbT0_SA_T_(%"class.blink::GridTrack"**, %"class.blink::GridTrack"**, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** dereferenceable(8)) local_unnamed_addr #3 comdat {
  %4 = ptrtoint %"class.blink::GridTrack"** %1 to i64
  %5 = ptrtoint %"class.blink::GridTrack"** %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %73 [
    i64 0, label %156
    i64 1, label %156
    i64 2, label %8
    i64 3, label %19
    i64 4, label %62
    i64 5, label %67
  ]

8:                                                ; preds = %3
  %9 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %10 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %1, i64 -1
  %11 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %10, align 8
  %12 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, align 8
  %13 = tail call zeroext i1 %9(%"class.blink::GridTrack"* %11, %"class.blink::GridTrack"* %12) #18
  br i1 %13, label %14, label %156

14:                                               ; preds = %8
  %15 = bitcast %"class.blink::GridTrack"** %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.blink::GridTrack"** %10 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 %16, i64* %17, align 8
  br label %156

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, i64 1
  %21 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %1, i64 -1
  %22 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %23 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %20, align 8
  %24 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, align 8
  %25 = tail call zeroext i1 %22(%"class.blink::GridTrack"* %23, %"class.blink::GridTrack"* %24) #18
  %26 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %27 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %21, align 8
  %28 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %20, align 8
  %29 = tail call zeroext i1 %26(%"class.blink::GridTrack"* %27, %"class.blink::GridTrack"* %28) #18
  br i1 %25, label %45, label %30

30:                                               ; preds = %19
  br i1 %29, label %31, label %156

31:                                               ; preds = %30
  %32 = bitcast %"class.blink::GridTrack"** %20 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::GridTrack"** %21 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 %33, i64* %34, align 8
  %36 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %37 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %20, align 8
  %38 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, align 8
  %39 = tail call zeroext i1 %36(%"class.blink::GridTrack"* %37, %"class.blink::GridTrack"* %38) #18
  br i1 %39, label %40, label %156

40:                                               ; preds = %31
  %41 = bitcast %"class.blink::GridTrack"** %0 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 8
  %43 = shufflevector <2 x i64> %42, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %44 = bitcast %"class.blink::GridTrack"** %0 to <2 x i64>*
  store <2 x i64> %43, <2 x i64>* %44, align 8
  br label %156

45:                                               ; preds = %19
  %46 = bitcast %"class.blink::GridTrack"** %0 to i64*
  %47 = load i64, i64* %46, align 8
  br i1 %29, label %48, label %51

48:                                               ; preds = %45
  %49 = bitcast %"class.blink::GridTrack"** %21 to i64*
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %46, align 8
  store i64 %47, i64* %49, align 8
  br label %156

51:                                               ; preds = %45
  %52 = bitcast %"class.blink::GridTrack"** %20 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %46, align 8
  store i64 %47, i64* %52, align 8
  %54 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %55 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %21, align 8
  %56 = inttoptr i64 %47 to %"class.blink::GridTrack"*
  %57 = tail call zeroext i1 %54(%"class.blink::GridTrack"* %55, %"class.blink::GridTrack"* %56) #18
  br i1 %57, label %58, label %156

58:                                               ; preds = %51
  %59 = load i64, i64* %52, align 8
  %60 = bitcast %"class.blink::GridTrack"** %21 to i64*
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %52, align 8
  store i64 %59, i64* %60, align 8
  br label %156

62:                                               ; preds = %3
  %63 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, i64 1
  %64 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, i64 2
  %65 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %1, i64 -1
  %66 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN5blink9GridTrackES4_EPPS2_EEjT0_SA_SA_SA_T_(%"class.blink::GridTrack"** %0, %"class.blink::GridTrack"** %63, %"class.blink::GridTrack"** %64, %"class.blink::GridTrack"** %65, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** dereferenceable(8) %2)
  br label %156

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, i64 1
  %69 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, i64 2
  %70 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, i64 3
  %71 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %1, i64 -1
  %72 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN5blink9GridTrackES4_EPPS2_EEjT0_SA_SA_SA_SA_T_(%"class.blink::GridTrack"** %0, %"class.blink::GridTrack"** %68, %"class.blink::GridTrack"** %69, %"class.blink::GridTrack"** %70, %"class.blink::GridTrack"** %71, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** dereferenceable(8) %2)
  br label %156

73:                                               ; preds = %3
  %74 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, i64 2
  %75 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, i64 1
  %76 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %77 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %75, align 8
  %78 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, align 8
  %79 = tail call zeroext i1 %76(%"class.blink::GridTrack"* %77, %"class.blink::GridTrack"* %78) #18
  %80 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %81 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %74, align 8
  %82 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %75, align 8
  %83 = tail call zeroext i1 %80(%"class.blink::GridTrack"* %81, %"class.blink::GridTrack"* %82) #18
  br i1 %79, label %99, label %84

84:                                               ; preds = %73
  br i1 %83, label %85, label %117

85:                                               ; preds = %84
  %86 = bitcast %"class.blink::GridTrack"** %75 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.blink::GridTrack"** %74 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %86, align 8
  store i64 %87, i64* %88, align 8
  %90 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %91 = inttoptr i64 %89 to %"class.blink::GridTrack"*
  %92 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, align 8
  %93 = tail call zeroext i1 %90(%"class.blink::GridTrack"* %91, %"class.blink::GridTrack"* %92) #18
  br i1 %93, label %94, label %117

94:                                               ; preds = %85
  %95 = bitcast %"class.blink::GridTrack"** %0 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8
  %97 = shufflevector <2 x i64> %96, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %98 = bitcast %"class.blink::GridTrack"** %0 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %98, align 8
  br label %117

99:                                               ; preds = %73
  %100 = bitcast %"class.blink::GridTrack"** %0 to i64*
  %101 = load i64, i64* %100, align 8
  br i1 %83, label %102, label %105

102:                                              ; preds = %99
  %103 = bitcast %"class.blink::GridTrack"** %74 to i64*
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %100, align 8
  store i64 %101, i64* %103, align 8
  br label %117

105:                                              ; preds = %99
  %106 = bitcast %"class.blink::GridTrack"** %75 to i64*
  %107 = load i64, i64* %106, align 8
  store i64 %107, i64* %100, align 8
  store i64 %101, i64* %106, align 8
  %108 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %109 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %74, align 8
  %110 = inttoptr i64 %101 to %"class.blink::GridTrack"*
  %111 = tail call zeroext i1 %108(%"class.blink::GridTrack"* %109, %"class.blink::GridTrack"* %110) #18
  br i1 %111, label %112, label %117

112:                                              ; preds = %105
  %113 = bitcast %"class.blink::GridTrack"** %75 to <2 x i64>*
  %114 = load <2 x i64>, <2 x i64>* %113, align 8
  %115 = shufflevector <2 x i64> %114, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %116 = bitcast %"class.blink::GridTrack"** %75 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %116, align 8
  br label %117

117:                                              ; preds = %84, %85, %94, %102, %105, %112
  %118 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %0, i64 3
  %119 = icmp eq %"class.blink::GridTrack"** %118, %1
  br i1 %119, label %156, label %120

120:                                              ; preds = %117, %149
  %121 = phi %"class.blink::GridTrack"** [ %151, %149 ], [ %118, %117 ]
  %122 = phi i32 [ %150, %149 ], [ 0, %117 ]
  %123 = phi %"class.blink::GridTrack"** [ %121, %149 ], [ %74, %117 ]
  %124 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %125 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %121, align 8
  %126 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %123, align 8
  %127 = tail call zeroext i1 %124(%"class.blink::GridTrack"* %125, %"class.blink::GridTrack"* %126) #18
  br i1 %127, label %128, label %149

128:                                              ; preds = %120
  %129 = bitcast %"class.blink::GridTrack"** %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = inttoptr i64 %130 to %"class.blink::GridTrack"*
  br label %132

132:                                              ; preds = %139, %128
  %133 = phi %"class.blink::GridTrack"** [ %121, %128 ], [ %134, %139 ]
  %134 = phi %"class.blink::GridTrack"** [ %123, %128 ], [ %141, %139 ]
  %135 = bitcast %"class.blink::GridTrack"** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.blink::GridTrack"** %133 to i64*
  store i64 %136, i64* %137, align 8
  %138 = icmp eq %"class.blink::GridTrack"** %134, %0
  br i1 %138, label %144, label %139

139:                                              ; preds = %132
  %140 = load i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %2, align 8
  %141 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %134, i64 -1
  %142 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %141, align 8
  %143 = tail call zeroext i1 %140(%"class.blink::GridTrack"* %131, %"class.blink::GridTrack"* %142) #18
  br i1 %143, label %132, label %144

144:                                              ; preds = %132, %139
  %145 = phi %"class.blink::GridTrack"** [ %134, %139 ], [ %0, %132 ]
  %146 = bitcast %"class.blink::GridTrack"** %145 to i64*
  store i64 %130, i64* %146, align 8
  %147 = add i32 %122, 1
  %148 = icmp eq i32 %147, 8
  br i1 %148, label %153, label %149

149:                                              ; preds = %144, %120
  %150 = phi i32 [ %147, %144 ], [ %122, %120 ]
  %151 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %121, i64 1
  %152 = icmp eq %"class.blink::GridTrack"** %151, %1
  br i1 %152, label %156, label %120

153:                                              ; preds = %144
  %154 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %121, i64 1
  %155 = icmp eq %"class.blink::GridTrack"** %154, %1
  br label %156

156:                                              ; preds = %149, %153, %117, %58, %51, %48, %40, %31, %30, %8, %14, %3, %3, %67, %62
  %157 = phi i1 [ true, %67 ], [ true, %62 ], [ true, %3 ], [ true, %3 ], [ true, %14 ], [ true, %8 ], [ true, %30 ], [ true, %31 ], [ true, %40 ], [ true, %48 ], [ true, %51 ], [ true, %58 ], [ true, %117 ], [ %155, %153 ], [ true, %149 ]
  ret i1 %157
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink9GridTrackEEEmm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #18
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9GridTrackEEEmm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16760832
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16760832) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = shl i64 %0, 7
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #18
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %24, i64 %25
  ret %"class.blink::GridTrack"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) i64* @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i64, i64* %24, i64 %25
  ret i64* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(88) %"class.blink::GridTrackSize"* @_ZNK3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.428"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.428", %"class.WTF::Vector.428"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.WTF::Vector.428", %"class.WTF::Vector.428"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %24, i64 %25
  ret %"class.blink::GridTrackSize"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRmEEvOT_(%"class.WTF::Vector.6"*, i64* dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp ugt i64* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i64, i64* %7, i64 %10
  %12 = icmp ugt i64* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !71

24:                                               ; preds = %13
  %25 = icmp eq i64* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64 %26) #18
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv, i64 0, i64 0)) #18
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i64*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load i64*, i64** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i64* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i64* %38 to i8*
  br i1 %41, label %43, label %49, !prof !71

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #18
  %47 = bitcast %"class.WTF::Vector.6"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #18
  %51 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i64*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i64* %1 to i64
  %56 = ptrtoint i64* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !71

69:                                               ; preds = %54
  %70 = icmp eq i64* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64 %71) #18
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv, i64 0, i64 0)) #18
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i64*, i64** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i64* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i64* %78 to i8*
  br i1 %81, label %83, label %89, !prof !71

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #18
  %87 = bitcast %"class.WTF::Vector.6"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #18
  %91 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i64*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i64* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i64, i64* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i64* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i64* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i64, i64* %100, i64 %103
  %105 = load i64, i64* %101, align 8
  store i64 %105, i64* %104, align 8
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #18
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16GridItemWithSpanELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1354"*, %"class.blink::GridItemWithSpan"* dereferenceable(24)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1354", %"class.WTF::Vector.1354"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1354", %"class.WTF::Vector.1354"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %6, align 8
  %8 = icmp ugt %"class.blink::GridItemWithSpan"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %7, i64 %10
  %12 = icmp ugt %"class.blink::GridItemWithSpan"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1354", %"class.WTF::Vector.1354"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !71

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::GridItemWithSpan"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16GridItemWithSpanEEEmm(i64 %26) #18
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16GridItemWithSpanEEEPKcv, i64 0, i64 0)) #18
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1354"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 24
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::GridItemWithSpan"*
  br label %99

35:                                               ; preds = %24
  %36 = udiv i64 %27, 24
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::GridItemWithSpan"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::GridItemWithSpan"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !71

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #18
  %47 = bitcast %"class.WTF::Vector.1354"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #18
  %51 = bitcast %"class.WTF::Vector.1354"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::GridItemWithSpan"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::GridItemWithSpan"* %1 to i64
  %56 = ptrtoint %"class.blink::GridItemWithSpan"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 24
  %59 = getelementptr inbounds %"class.WTF::Vector.1354", %"class.WTF::Vector.1354"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !71

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::GridItemWithSpan"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16GridItemWithSpanEEEmm(i64 %71) #18
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16GridItemWithSpanEEEPKcv, i64 0, i64 0)) #18
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1354"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::GridItemWithSpan"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::GridItemWithSpan"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !71

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = mul nuw nsw i64 %85, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #18
  %87 = bitcast %"class.WTF::Vector.1354"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #18
  %91 = bitcast %"class.WTF::Vector.1354"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = udiv i64 %72, 24
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::GridItemWithSpan"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::GridItemWithSpan"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::GridItemWithSpan"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::GridItemWithSpan"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %100, i64 %103
  %105 = bitcast %"class.blink::GridItemWithSpan"* %104 to i8*
  %106 = bitcast %"class.blink::GridItemWithSpan"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #18
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16GridItemWithSpanEEEmm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #18
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEvT0_S7_T_(%"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"*, %"struct.std::__1::__less.1469"* dereferenceable(1)) local_unnamed_addr #3 comdat {
  br label %4

4:                                                ; preds = %307, %3
  %5 = phi %"class.blink::GridItemWithSpan"* [ %1, %3 ], [ %275, %307 ]
  %6 = phi %"class.blink::GridItemWithSpan"* [ %0, %3 ], [ %18, %307 ]
  %7 = ptrtoint %"class.blink::GridItemWithSpan"* %5 to i64
  %8 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %5, i64 -1
  %9 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %5, i64 -1, i32 1, i32 0
  %10 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %5, i64 -1, i32 1, i32 1
  %11 = bitcast %"class.blink::GridItemWithSpan"* %8 to i8*
  %12 = bitcast %"class.blink::GridItemWithSpan"* %8 to i64*
  %13 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %5, i64 -1, i32 1, i32 2
  %14 = ptrtoint %"class.blink::GridItemWithSpan"* %5 to i64
  br label %15

15:                                               ; preds = %318, %4
  %16 = phi %"class.blink::GridItemWithSpan"* [ %6, %4 ], [ %319, %318 ]
  br label %17

17:                                               ; preds = %190, %15
  %18 = phi %"class.blink::GridItemWithSpan"* [ %16, %15 ], [ %173, %190 ]
  %19 = ptrtoint %"class.blink::GridItemWithSpan"* %18 to i64
  %20 = sub i64 %7, %19
  %21 = sdiv exact i64 %20, 24
  switch i64 %21, label %59 [
    i64 0, label %322
    i64 1, label %322
    i64 2, label %22
    i64 3, label %44
    i64 4, label %48
    i64 5, label %53
  ]

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %5, i64 -1
  %24 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 0, i32 1, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %5, i64 -1, i32 1, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %5, i64 -1, i32 1, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = sub nsw i32 %29, %31
  %33 = sub nsw i32 %27, %25
  %34 = icmp ult i32 %32, %33
  br i1 %34, label %35, label %322

35:                                               ; preds = %22
  %36 = bitcast %"class.blink::GridItemWithSpan"* %18 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 0, i32 1, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = bitcast %"class.blink::GridItemWithSpan"* %18 to i8*
  %41 = bitcast %"class.blink::GridItemWithSpan"* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 20, i1 false) #18
  %42 = bitcast %"class.blink::GridItemWithSpan"* %23 to i64*
  store i64 %37, i64* %42, align 8
  store i32 %25, i32* %30, align 8
  store i32 %27, i32* %28, align 4
  %43 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %5, i64 -1, i32 1, i32 2
  store i32 %39, i32* %43, align 8
  br label %322

44:                                               ; preds = %17
  %45 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 1
  %46 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %5, i64 -1
  %47 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEjT0_S7_S7_T_(%"class.blink::GridItemWithSpan"* %18, %"class.blink::GridItemWithSpan"* %45, %"class.blink::GridItemWithSpan"* %46, %"struct.std::__1::__less.1469"* dereferenceable(1) %2)
  br label %322

48:                                               ; preds = %17
  %49 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 1
  %50 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 2
  %51 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %5, i64 -1
  %52 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEjT0_S7_S7_S7_T_(%"class.blink::GridItemWithSpan"* %18, %"class.blink::GridItemWithSpan"* %49, %"class.blink::GridItemWithSpan"* %50, %"class.blink::GridItemWithSpan"* %51, %"struct.std::__1::__less.1469"* dereferenceable(1) %2)
  br label %322

53:                                               ; preds = %17
  %54 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 1
  %55 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 2
  %56 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 3
  %57 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %5, i64 -1
  %58 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"class.blink::GridItemWithSpan"* %18, %"class.blink::GridItemWithSpan"* %54, %"class.blink::GridItemWithSpan"* %55, %"class.blink::GridItemWithSpan"* %56, %"class.blink::GridItemWithSpan"* %57, %"struct.std::__1::__less.1469"* dereferenceable(1) %2)
  br label %322

59:                                               ; preds = %17
  %60 = icmp slt i64 %20, 744
  br i1 %60, label %61, label %109

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 2
  %63 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 1
  %64 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEjT0_S7_S7_T_(%"class.blink::GridItemWithSpan"* %18, %"class.blink::GridItemWithSpan"* %63, %"class.blink::GridItemWithSpan"* %62, %"struct.std::__1::__less.1469"* dereferenceable(1) %2) #18
  %65 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 3
  %66 = icmp eq %"class.blink::GridItemWithSpan"* %65, %5
  br i1 %66, label %322, label %67

67:                                               ; preds = %61, %106
  %68 = phi %"class.blink::GridItemWithSpan"* [ %107, %106 ], [ %65, %61 ]
  %69 = phi %"class.blink::GridItemWithSpan"* [ %68, %106 ], [ %62, %61 ]
  %70 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %69, i64 0, i32 1, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %69, i64 0, i32 1, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %68, i64 0, i32 1, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %68, i64 0, i32 1, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = sub nsw i32 %75, %77
  %79 = sub nsw i32 %73, %71
  %80 = icmp ult i32 %78, %79
  br i1 %80, label %81, label %106

81:                                               ; preds = %67
  %82 = bitcast %"class.blink::GridItemWithSpan"* %68 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %68, i64 0, i32 1, i32 2
  %85 = load i32, i32* %84, align 8
  br label %86

86:                                               ; preds = %92, %81
  %87 = phi %"class.blink::GridItemWithSpan"* [ %68, %81 ], [ %88, %92 ]
  %88 = phi %"class.blink::GridItemWithSpan"* [ %69, %81 ], [ %93, %92 ]
  %89 = bitcast %"class.blink::GridItemWithSpan"* %87 to i8*
  %90 = bitcast %"class.blink::GridItemWithSpan"* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 20, i1 false) #18
  %91 = icmp eq %"class.blink::GridItemWithSpan"* %88, %18
  br i1 %91, label %100, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %88, i64 -1
  %94 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %88, i64 -1, i32 1, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %88, i64 -1, i32 1, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = sub nsw i32 %97, %95
  %99 = icmp ult i32 %78, %98
  br i1 %99, label %86, label %100

100:                                              ; preds = %92, %86
  %101 = phi %"class.blink::GridItemWithSpan"* [ %18, %86 ], [ %88, %92 ]
  %102 = bitcast %"class.blink::GridItemWithSpan"* %101 to i64*
  store i64 %83, i64* %102, align 8
  %103 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %101, i64 0, i32 1, i32 0
  store i32 %77, i32* %103, align 8
  %104 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %101, i64 0, i32 1, i32 1
  store i32 %75, i32* %104, align 4
  %105 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %101, i64 0, i32 1, i32 2
  store i32 %85, i32* %105, align 8
  br label %106

106:                                              ; preds = %100, %67
  %107 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %68, i64 1
  %108 = icmp eq %"class.blink::GridItemWithSpan"* %107, %5
  br i1 %108, label %322, label %67

109:                                              ; preds = %59
  %110 = icmp sgt i64 %20, 23976
  %111 = udiv i64 %20, 48
  %112 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 %111
  br i1 %110, label %113, label %118

113:                                              ; preds = %109
  %114 = udiv i64 %20, 96
  %115 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 %114
  %116 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %112, i64 %114
  %117 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"class.blink::GridItemWithSpan"* %18, %"class.blink::GridItemWithSpan"* %115, %"class.blink::GridItemWithSpan"* %112, %"class.blink::GridItemWithSpan"* %116, %"class.blink::GridItemWithSpan"* %8, %"struct.std::__1::__less.1469"* dereferenceable(1) %2)
  br label %120

118:                                              ; preds = %109
  %119 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEjT0_S7_S7_T_(%"class.blink::GridItemWithSpan"* %18, %"class.blink::GridItemWithSpan"* %112, %"class.blink::GridItemWithSpan"* %8, %"struct.std::__1::__less.1469"* dereferenceable(1) %2)
  br label %120

120:                                              ; preds = %118, %113
  %121 = phi i32 [ %117, %113 ], [ %119, %118 ]
  %122 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 %111, i32 1, i32 0
  %123 = load i32, i32* %122, align 8
  %124 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 %111, i32 1, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 0, i32 1, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 0, i32 1, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = sub nsw i32 %127, %129
  %131 = sub nsw i32 %125, %123
  %132 = icmp ult i32 %130, %131
  br i1 %132, label %222, label %133

133:                                              ; preds = %120, %203
  %134 = phi %"class.blink::GridItemWithSpan"* [ %135, %203 ], [ %8, %120 ]
  %135 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %134, i64 -1
  %136 = icmp eq %"class.blink::GridItemWithSpan"* %18, %135
  br i1 %136, label %137, label %203

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 1
  %139 = load i32, i32* %9, align 8
  %140 = load i32, i32* %10, align 4
  %141 = sub nsw i32 %140, %139
  %142 = icmp ult i32 %130, %141
  br i1 %142, label %163, label %143

143:                                              ; preds = %137
  %144 = icmp eq %"class.blink::GridItemWithSpan"* %138, %8
  br i1 %144, label %322, label %145

145:                                              ; preds = %143, %160
  %146 = phi %"class.blink::GridItemWithSpan"* [ %161, %160 ], [ %138, %143 ]
  %147 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %146, i64 0, i32 1, i32 0
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %146, i64 0, i32 1, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = sub nsw i32 %150, %148
  %152 = icmp ult i32 %130, %151
  br i1 %152, label %153, label %160

153:                                              ; preds = %145
  %154 = bitcast %"class.blink::GridItemWithSpan"* %146 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %146, i64 0, i32 1, i32 2
  %157 = load i32, i32* %156, align 8
  %158 = bitcast %"class.blink::GridItemWithSpan"* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %11, i64 20, i1 false) #18
  store i64 %155, i64* %12, align 8
  store i32 %148, i32* %9, align 8
  store i32 %150, i32* %10, align 4
  store i32 %157, i32* %13, align 8
  %159 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %146, i64 1
  br label %163

160:                                              ; preds = %145
  %161 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %146, i64 1
  %162 = icmp eq %"class.blink::GridItemWithSpan"* %161, %8
  br i1 %162, label %322, label %145

163:                                              ; preds = %153, %137
  %164 = phi %"class.blink::GridItemWithSpan"* [ %138, %137 ], [ %159, %153 ]
  %165 = icmp eq %"class.blink::GridItemWithSpan"* %164, %8
  br i1 %165, label %322, label %166

166:                                              ; preds = %163, %192
  %167 = phi %"class.blink::GridItemWithSpan"* [ %180, %192 ], [ %164, %163 ]
  %168 = phi %"class.blink::GridItemWithSpan"* [ %183, %192 ], [ %8, %163 ]
  %169 = load i32, i32* %126, align 4
  %170 = load i32, i32* %128, align 4
  %171 = sub nsw i32 %169, %170
  br label %172

172:                                              ; preds = %172, %166
  %173 = phi %"class.blink::GridItemWithSpan"* [ %167, %166 ], [ %180, %172 ]
  %174 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %173, i64 0, i32 1, i32 0
  %175 = load i32, i32* %174, align 8
  %176 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %173, i64 0, i32 1, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = sub nsw i32 %177, %175
  %179 = icmp ult i32 %171, %178
  %180 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %173, i64 1
  br i1 %179, label %181, label %172

181:                                              ; preds = %172, %181
  %182 = phi %"class.blink::GridItemWithSpan"* [ %183, %181 ], [ %168, %172 ]
  %183 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %182, i64 -1
  %184 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %182, i64 -1, i32 1, i32 0
  %185 = load i32, i32* %184, align 8
  %186 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %182, i64 -1, i32 1, i32 1
  %187 = load i32, i32* %186, align 4
  %188 = sub nsw i32 %187, %185
  %189 = icmp ult i32 %171, %188
  br i1 %189, label %181, label %190

190:                                              ; preds = %181
  %191 = icmp ult %"class.blink::GridItemWithSpan"* %173, %183
  br i1 %191, label %192, label %17

192:                                              ; preds = %190
  %193 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %182, i64 -1, i32 1, i32 1
  %194 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %182, i64 -1, i32 1, i32 0
  %195 = bitcast %"class.blink::GridItemWithSpan"* %173 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %173, i64 0, i32 1, i32 2
  %198 = load i32, i32* %197, align 8
  %199 = bitcast %"class.blink::GridItemWithSpan"* %173 to i8*
  %200 = bitcast %"class.blink::GridItemWithSpan"* %183 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %199, i8* align 8 %200, i64 20, i1 false) #18
  %201 = bitcast %"class.blink::GridItemWithSpan"* %183 to i64*
  store i64 %196, i64* %201, align 8
  store i32 %175, i32* %194, align 8
  store i32 %177, i32* %193, align 4
  %202 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %182, i64 -1, i32 1, i32 2
  store i32 %198, i32* %202, align 8
  br label %166

203:                                              ; preds = %133
  %204 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %134, i64 -1, i32 1, i32 1
  %205 = load i32, i32* %204, align 4
  %206 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %134, i64 -1, i32 1, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = sub nsw i32 %205, %207
  %209 = icmp ult i32 %208, %131
  br i1 %209, label %210, label %133

210:                                              ; preds = %203
  %211 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %134, i64 -1, i32 1, i32 1
  %212 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %134, i64 -1, i32 1, i32 0
  %213 = bitcast %"class.blink::GridItemWithSpan"* %18 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 0, i32 1, i32 2
  %216 = load i32, i32* %215, align 8
  %217 = bitcast %"class.blink::GridItemWithSpan"* %18 to i8*
  %218 = bitcast %"class.blink::GridItemWithSpan"* %135 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 20, i1 false) #18
  %219 = bitcast %"class.blink::GridItemWithSpan"* %135 to i64*
  store i64 %214, i64* %219, align 8
  store i32 %129, i32* %212, align 8
  store i32 %127, i32* %211, align 4
  %220 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %134, i64 -1, i32 1, i32 2
  store i32 %216, i32* %220, align 8
  %221 = add i32 %121, 1
  br label %222

222:                                              ; preds = %120, %210
  %223 = phi i32 [ %221, %210 ], [ %121, %120 ]
  %224 = phi %"class.blink::GridItemWithSpan"* [ %135, %210 ], [ %8, %120 ]
  %225 = ptrtoint %"class.blink::GridItemWithSpan"* %18 to i64
  %226 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %18, i64 1
  %227 = icmp ult %"class.blink::GridItemWithSpan"* %226, %224
  br i1 %227, label %228, label %272

228:                                              ; preds = %222, %258
  %229 = phi %"class.blink::GridItemWithSpan"* [ %271, %258 ], [ %112, %222 ]
  %230 = phi i32 [ %269, %258 ], [ %223, %222 ]
  %231 = phi %"class.blink::GridItemWithSpan"* [ %246, %258 ], [ %226, %222 ]
  %232 = phi %"class.blink::GridItemWithSpan"* [ %249, %258 ], [ %224, %222 ]
  %233 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %229, i64 0, i32 1, i32 0
  %234 = load i32, i32* %233, align 8
  %235 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %229, i64 0, i32 1, i32 1
  %236 = load i32, i32* %235, align 4
  %237 = sub nsw i32 %236, %234
  br label %238

238:                                              ; preds = %238, %228
  %239 = phi %"class.blink::GridItemWithSpan"* [ %231, %228 ], [ %246, %238 ]
  %240 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %239, i64 0, i32 1, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %239, i64 0, i32 1, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = sub nsw i32 %241, %243
  %245 = icmp ult i32 %244, %237
  %246 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %239, i64 1
  br i1 %245, label %238, label %247

247:                                              ; preds = %238, %247
  %248 = phi %"class.blink::GridItemWithSpan"* [ %249, %247 ], [ %232, %238 ]
  %249 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %248, i64 -1
  %250 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %248, i64 -1, i32 1, i32 1
  %251 = load i32, i32* %250, align 4
  %252 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %248, i64 -1, i32 1, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = sub nsw i32 %251, %253
  %255 = icmp ult i32 %254, %237
  br i1 %255, label %256, label %247

256:                                              ; preds = %247
  %257 = icmp ugt %"class.blink::GridItemWithSpan"* %239, %249
  br i1 %257, label %272, label %258

258:                                              ; preds = %256
  %259 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %248, i64 -1, i32 1, i32 0
  %260 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %248, i64 -1, i32 1, i32 1
  %261 = bitcast %"class.blink::GridItemWithSpan"* %239 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %239, i64 0, i32 1, i32 2
  %264 = load i32, i32* %263, align 8
  %265 = bitcast %"class.blink::GridItemWithSpan"* %239 to i8*
  %266 = bitcast %"class.blink::GridItemWithSpan"* %249 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %265, i8* align 8 %266, i64 20, i1 false) #18
  %267 = bitcast %"class.blink::GridItemWithSpan"* %249 to i64*
  store i64 %262, i64* %267, align 8
  store i32 %243, i32* %259, align 8
  store i32 %241, i32* %260, align 4
  %268 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %248, i64 -1, i32 1, i32 2
  store i32 %264, i32* %268, align 8
  %269 = add i32 %230, 1
  %270 = icmp eq %"class.blink::GridItemWithSpan"* %229, %239
  %271 = select i1 %270, %"class.blink::GridItemWithSpan"* %249, %"class.blink::GridItemWithSpan"* %229
  br label %228

272:                                              ; preds = %256, %222
  %273 = phi %"class.blink::GridItemWithSpan"* [ %112, %222 ], [ %229, %256 ]
  %274 = phi i32 [ %223, %222 ], [ %230, %256 ]
  %275 = phi %"class.blink::GridItemWithSpan"* [ %226, %222 ], [ %239, %256 ]
  %276 = icmp eq %"class.blink::GridItemWithSpan"* %275, %273
  br i1 %276, label %299, label %277

277:                                              ; preds = %272
  %278 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %275, i64 0, i32 1, i32 0
  %279 = load i32, i32* %278, align 8
  %280 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %275, i64 0, i32 1, i32 1
  %281 = load i32, i32* %280, align 4
  %282 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %273, i64 0, i32 1, i32 1
  %283 = load i32, i32* %282, align 4
  %284 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %273, i64 0, i32 1, i32 0
  %285 = load i32, i32* %284, align 4
  %286 = sub nsw i32 %283, %285
  %287 = sub nsw i32 %281, %279
  %288 = icmp ult i32 %286, %287
  br i1 %288, label %289, label %299

289:                                              ; preds = %277
  %290 = bitcast %"class.blink::GridItemWithSpan"* %275 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %275, i64 0, i32 1, i32 2
  %293 = load i32, i32* %292, align 8
  %294 = bitcast %"class.blink::GridItemWithSpan"* %275 to i8*
  %295 = bitcast %"class.blink::GridItemWithSpan"* %273 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %294, i8* align 8 %295, i64 20, i1 false) #18
  %296 = bitcast %"class.blink::GridItemWithSpan"* %273 to i64*
  store i64 %291, i64* %296, align 8
  store i32 %279, i32* %284, align 8
  store i32 %281, i32* %282, align 4
  %297 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %273, i64 0, i32 1, i32 2
  store i32 %293, i32* %297, align 8
  %298 = add i32 %274, 1
  br label %299

299:                                              ; preds = %272, %289, %277
  %300 = phi i32 [ %298, %289 ], [ %274, %277 ], [ %274, %272 ]
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %309

302:                                              ; preds = %299
  %303 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEbT0_S7_T_(%"class.blink::GridItemWithSpan"* %18, %"class.blink::GridItemWithSpan"* %275, %"struct.std::__1::__less.1469"* dereferenceable(1) %2)
  %304 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %275, i64 1
  %305 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEbT0_S7_T_(%"class.blink::GridItemWithSpan"* %304, %"class.blink::GridItemWithSpan"* %5, %"struct.std::__1::__less.1469"* dereferenceable(1) %2)
  br i1 %305, label %306, label %308

306:                                              ; preds = %302
  br i1 %303, label %322, label %307

307:                                              ; preds = %306, %320
  br label %4

308:                                              ; preds = %302
  br i1 %303, label %318, label %309

309:                                              ; preds = %308, %299
  %310 = ptrtoint %"class.blink::GridItemWithSpan"* %275 to i64
  %311 = sub i64 %310, %225
  %312 = sdiv exact i64 %311, 24
  %313 = sub i64 %14, %310
  %314 = sdiv exact i64 %313, 24
  %315 = icmp slt i64 %312, %314
  br i1 %315, label %316, label %320

316:                                              ; preds = %309
  tail call void @_ZNSt3__16__sortIRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEvT0_S7_T_(%"class.blink::GridItemWithSpan"* %18, %"class.blink::GridItemWithSpan"* %275, %"struct.std::__1::__less.1469"* dereferenceable(1) %2)
  %317 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %275, i64 1
  br label %318

318:                                              ; preds = %316, %308
  %319 = phi %"class.blink::GridItemWithSpan"* [ %304, %308 ], [ %317, %316 ]
  br label %15

320:                                              ; preds = %309
  %321 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %275, i64 1
  tail call void @_ZNSt3__16__sortIRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEvT0_S7_T_(%"class.blink::GridItemWithSpan"* %321, %"class.blink::GridItemWithSpan"* %5, %"struct.std::__1::__less.1469"* dereferenceable(1) %2)
  br label %307

322:                                              ; preds = %306, %163, %17, %17, %143, %160, %106, %61, %22, %35, %44, %48, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEjT0_S7_S7_T_(%"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"*, %"struct.std::__1::__less.1469"* dereferenceable(1)) local_unnamed_addr #3 comdat {
  %5 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 0, i32 1, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %1, i64 0, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %1, i64 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = sub nsw i32 %10, %12
  %14 = sub nsw i32 %8, %6
  %15 = icmp ult i32 %13, %14
  %16 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %2, i64 0, i32 1, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %2, i64 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = sub nsw i32 %17, %19
  %21 = icmp ult i32 %20, %13
  br i1 %15, label %45, label %22

22:                                               ; preds = %4
  br i1 %21, label %23, label %67

23:                                               ; preds = %22
  %24 = bitcast %"class.blink::GridItemWithSpan"* %1 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %1, i64 0, i32 1, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = bitcast %"class.blink::GridItemWithSpan"* %1 to i8*
  %29 = bitcast %"class.blink::GridItemWithSpan"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 20, i1 false) #18
  %30 = bitcast %"class.blink::GridItemWithSpan"* %2 to i64*
  store i64 %25, i64* %30, align 8
  store i32 %12, i32* %18, align 8
  store i32 %10, i32* %16, align 4
  %31 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %2, i64 0, i32 1, i32 2
  store i32 %27, i32* %31, align 8
  %32 = load i32, i32* %5, align 8
  %33 = load i32, i32* %7, align 4
  %34 = load i32, i32* %9, align 4
  %35 = load i32, i32* %11, align 4
  %36 = sub nsw i32 %34, %35
  %37 = sub nsw i32 %33, %32
  %38 = icmp ult i32 %36, %37
  br i1 %38, label %39, label %67

39:                                               ; preds = %23
  %40 = bitcast %"class.blink::GridItemWithSpan"* %0 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 0, i32 1, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = bitcast %"class.blink::GridItemWithSpan"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %28, i64 20, i1 false) #18
  store i64 %41, i64* %24, align 8
  store i32 %32, i32* %11, align 8
  store i32 %33, i32* %9, align 4
  store i32 %43, i32* %26, align 8
  br label %67

45:                                               ; preds = %4
  %46 = bitcast %"class.blink::GridItemWithSpan"* %0 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 0, i32 1, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = bitcast %"class.blink::GridItemWithSpan"* %0 to i8*
  br i1 %21, label %51, label %55

51:                                               ; preds = %45
  %52 = bitcast %"class.blink::GridItemWithSpan"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %52, i64 20, i1 false) #18
  %53 = bitcast %"class.blink::GridItemWithSpan"* %2 to i64*
  store i64 %47, i64* %53, align 8
  store i32 %6, i32* %18, align 8
  store i32 %8, i32* %16, align 4
  %54 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %2, i64 0, i32 1, i32 2
  store i32 %49, i32* %54, align 8
  br label %67

55:                                               ; preds = %45
  %56 = bitcast %"class.blink::GridItemWithSpan"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %56, i64 20, i1 false) #18
  %57 = bitcast %"class.blink::GridItemWithSpan"* %1 to i64*
  store i64 %47, i64* %57, align 8
  store i32 %6, i32* %11, align 8
  store i32 %8, i32* %9, align 4
  %58 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %1, i64 0, i32 1, i32 2
  store i32 %49, i32* %58, align 8
  %59 = load i32, i32* %16, align 4
  %60 = load i32, i32* %18, align 4
  %61 = sub nsw i32 %59, %60
  %62 = icmp ult i32 %61, %14
  br i1 %62, label %63, label %67

63:                                               ; preds = %55
  %64 = bitcast %"class.blink::GridItemWithSpan"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %64, i64 20, i1 false) #18
  %65 = bitcast %"class.blink::GridItemWithSpan"* %2 to i64*
  store i64 %47, i64* %65, align 8
  store i32 %6, i32* %18, align 8
  store i32 %8, i32* %16, align 4
  %66 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %2, i64 0, i32 1, i32 2
  store i32 %49, i32* %66, align 8
  br label %67

67:                                               ; preds = %55, %63, %23, %39, %22, %51
  %68 = phi i32 [ 1, %51 ], [ 0, %22 ], [ 2, %39 ], [ 1, %23 ], [ 2, %63 ], [ 1, %55 ]
  ret i32 %68
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEjT0_S7_S7_S7_T_(%"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"*, %"struct.std::__1::__less.1469"* dereferenceable(1)) local_unnamed_addr #3 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEjT0_S7_S7_T_(%"class.blink::GridItemWithSpan"* %0, %"class.blink::GridItemWithSpan"* %1, %"class.blink::GridItemWithSpan"* %2, %"struct.std::__1::__less.1469"* dereferenceable(1) %4)
  %7 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %2, i64 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %2, i64 0, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %3, i64 0, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %3, i64 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sub nsw i32 %12, %14
  %16 = sub nsw i32 %10, %8
  %17 = icmp ult i32 %15, %16
  br i1 %17, label %18, label %60

18:                                               ; preds = %5
  %19 = bitcast %"class.blink::GridItemWithSpan"* %2 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %2, i64 0, i32 1, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = bitcast %"class.blink::GridItemWithSpan"* %2 to i8*
  %24 = bitcast %"class.blink::GridItemWithSpan"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 20, i1 false) #18
  %25 = bitcast %"class.blink::GridItemWithSpan"* %3 to i64*
  store i64 %20, i64* %25, align 8
  store i32 %8, i32* %13, align 8
  store i32 %10, i32* %11, align 4
  %26 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %3, i64 0, i32 1, i32 2
  store i32 %22, i32* %26, align 8
  %27 = add i32 %6, 1
  %28 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %1, i64 0, i32 1, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %1, i64 0, i32 1, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = load i32, i32* %9, align 4
  %33 = load i32, i32* %7, align 4
  %34 = sub nsw i32 %32, %33
  %35 = sub nsw i32 %31, %29
  %36 = icmp ult i32 %34, %35
  br i1 %36, label %37, label %60

37:                                               ; preds = %18
  %38 = bitcast %"class.blink::GridItemWithSpan"* %1 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %1, i64 0, i32 1, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = bitcast %"class.blink::GridItemWithSpan"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %23, i64 20, i1 false) #18
  store i64 %39, i64* %19, align 8
  store i32 %29, i32* %7, align 8
  store i32 %31, i32* %9, align 4
  store i32 %41, i32* %21, align 8
  %43 = add i32 %6, 2
  %44 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 0, i32 1, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 0, i32 1, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = load i32, i32* %30, align 4
  %49 = load i32, i32* %28, align 4
  %50 = sub nsw i32 %48, %49
  %51 = sub nsw i32 %47, %45
  %52 = icmp ult i32 %50, %51
  br i1 %52, label %53, label %60

53:                                               ; preds = %37
  %54 = bitcast %"class.blink::GridItemWithSpan"* %0 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 0, i32 1, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = bitcast %"class.blink::GridItemWithSpan"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %42, i64 20, i1 false) #18
  store i64 %55, i64* %38, align 8
  store i32 %45, i32* %28, align 8
  store i32 %47, i32* %30, align 4
  store i32 %57, i32* %40, align 8
  %59 = add i32 %6, 3
  br label %60

60:                                               ; preds = %18, %53, %37, %5
  %61 = phi i32 [ %59, %53 ], [ %43, %37 ], [ %27, %18 ], [ %6, %5 ]
  ret i32 %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"*, %"struct.std::__1::__less.1469"* dereferenceable(1)) local_unnamed_addr #3 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEjT0_S7_S7_S7_T_(%"class.blink::GridItemWithSpan"* %0, %"class.blink::GridItemWithSpan"* %1, %"class.blink::GridItemWithSpan"* %2, %"class.blink::GridItemWithSpan"* %3, %"struct.std::__1::__less.1469"* dereferenceable(1) %5)
  %8 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %3, i64 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %3, i64 0, i32 1, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %4, i64 0, i32 1, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %4, i64 0, i32 1, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = sub nsw i32 %13, %15
  %17 = sub nsw i32 %11, %9
  %18 = icmp ult i32 %16, %17
  br i1 %18, label %19, label %77

19:                                               ; preds = %6
  %20 = bitcast %"class.blink::GridItemWithSpan"* %3 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %3, i64 0, i32 1, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = bitcast %"class.blink::GridItemWithSpan"* %3 to i8*
  %25 = bitcast %"class.blink::GridItemWithSpan"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 20, i1 false) #18
  %26 = bitcast %"class.blink::GridItemWithSpan"* %4 to i64*
  store i64 %21, i64* %26, align 8
  store i32 %9, i32* %14, align 8
  store i32 %11, i32* %12, align 4
  %27 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %4, i64 0, i32 1, i32 2
  store i32 %23, i32* %27, align 8
  %28 = add i32 %7, 1
  %29 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %2, i64 0, i32 1, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %2, i64 0, i32 1, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = load i32, i32* %10, align 4
  %34 = load i32, i32* %8, align 4
  %35 = sub nsw i32 %33, %34
  %36 = sub nsw i32 %32, %30
  %37 = icmp ult i32 %35, %36
  br i1 %37, label %38, label %77

38:                                               ; preds = %19
  %39 = bitcast %"class.blink::GridItemWithSpan"* %2 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %2, i64 0, i32 1, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = bitcast %"class.blink::GridItemWithSpan"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %24, i64 20, i1 false) #18
  store i64 %40, i64* %20, align 8
  store i32 %30, i32* %8, align 8
  store i32 %32, i32* %10, align 4
  store i32 %42, i32* %22, align 8
  %44 = add i32 %7, 2
  %45 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %1, i64 0, i32 1, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %1, i64 0, i32 1, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = load i32, i32* %31, align 4
  %50 = load i32, i32* %29, align 4
  %51 = sub nsw i32 %49, %50
  %52 = sub nsw i32 %48, %46
  %53 = icmp ult i32 %51, %52
  br i1 %53, label %54, label %77

54:                                               ; preds = %38
  %55 = bitcast %"class.blink::GridItemWithSpan"* %1 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %1, i64 0, i32 1, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = bitcast %"class.blink::GridItemWithSpan"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %43, i64 20, i1 false) #18
  store i64 %56, i64* %39, align 8
  store i32 %46, i32* %29, align 8
  store i32 %48, i32* %31, align 4
  store i32 %58, i32* %41, align 8
  %60 = add i32 %7, 3
  %61 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 0, i32 1, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 0, i32 1, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = load i32, i32* %47, align 4
  %66 = load i32, i32* %45, align 4
  %67 = sub nsw i32 %65, %66
  %68 = sub nsw i32 %64, %62
  %69 = icmp ult i32 %67, %68
  br i1 %69, label %70, label %77

70:                                               ; preds = %54
  %71 = bitcast %"class.blink::GridItemWithSpan"* %0 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 0, i32 1, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = bitcast %"class.blink::GridItemWithSpan"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %59, i64 20, i1 false) #18
  store i64 %72, i64* %55, align 8
  store i32 %62, i32* %45, align 8
  store i32 %64, i32* %47, align 4
  store i32 %74, i32* %57, align 8
  %76 = add i32 %7, 4
  br label %77

77:                                               ; preds = %19, %54, %70, %38, %6
  %78 = phi i32 [ %76, %70 ], [ %60, %54 ], [ %44, %38 ], [ %28, %19 ], [ %7, %6 ]
  ret i32 %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEbT0_S7_T_(%"class.blink::GridItemWithSpan"*, %"class.blink::GridItemWithSpan"*, %"struct.std::__1::__less.1469"* dereferenceable(1)) local_unnamed_addr #3 comdat {
  %4 = ptrtoint %"class.blink::GridItemWithSpan"* %1 to i64
  %5 = ptrtoint %"class.blink::GridItemWithSpan"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  switch i64 %7, label %45 [
    i64 0, label %100
    i64 1, label %100
    i64 2, label %8
    i64 3, label %30
    i64 4, label %34
    i64 5, label %39
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %1, i64 -1
  %10 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 0, i32 1, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %1, i64 -1, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %1, i64 -1, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = sub nsw i32 %15, %17
  %19 = sub nsw i32 %13, %11
  %20 = icmp ult i32 %18, %19
  br i1 %20, label %21, label %100

21:                                               ; preds = %8
  %22 = bitcast %"class.blink::GridItemWithSpan"* %0 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 0, i32 1, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = bitcast %"class.blink::GridItemWithSpan"* %0 to i8*
  %27 = bitcast %"class.blink::GridItemWithSpan"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 20, i1 false) #18
  %28 = bitcast %"class.blink::GridItemWithSpan"* %9 to i64*
  store i64 %23, i64* %28, align 8
  store i32 %11, i32* %16, align 8
  store i32 %13, i32* %14, align 4
  %29 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %1, i64 -1, i32 1, i32 2
  store i32 %25, i32* %29, align 8
  br label %100

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 1
  %32 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %1, i64 -1
  %33 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEjT0_S7_S7_T_(%"class.blink::GridItemWithSpan"* %0, %"class.blink::GridItemWithSpan"* %31, %"class.blink::GridItemWithSpan"* %32, %"struct.std::__1::__less.1469"* dereferenceable(1) %2)
  br label %100

34:                                               ; preds = %3
  %35 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 1
  %36 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 2
  %37 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %1, i64 -1
  %38 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEjT0_S7_S7_S7_T_(%"class.blink::GridItemWithSpan"* %0, %"class.blink::GridItemWithSpan"* %35, %"class.blink::GridItemWithSpan"* %36, %"class.blink::GridItemWithSpan"* %37, %"struct.std::__1::__less.1469"* dereferenceable(1) %2)
  br label %100

39:                                               ; preds = %3
  %40 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 1
  %41 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 2
  %42 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 3
  %43 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %1, i64 -1
  %44 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"class.blink::GridItemWithSpan"* %0, %"class.blink::GridItemWithSpan"* %40, %"class.blink::GridItemWithSpan"* %41, %"class.blink::GridItemWithSpan"* %42, %"class.blink::GridItemWithSpan"* %43, %"struct.std::__1::__less.1469"* dereferenceable(1) %2)
  br label %100

45:                                               ; preds = %3
  %46 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 2
  %47 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 1
  %48 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN5blink16GridItemWithSpanES3_EEPS3_EEjT0_S7_S7_T_(%"class.blink::GridItemWithSpan"* %0, %"class.blink::GridItemWithSpan"* %47, %"class.blink::GridItemWithSpan"* %46, %"struct.std::__1::__less.1469"* dereferenceable(1) %2)
  %49 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %0, i64 3
  %50 = icmp eq %"class.blink::GridItemWithSpan"* %49, %1
  br i1 %50, label %100, label %51

51:                                               ; preds = %45, %93
  %52 = phi %"class.blink::GridItemWithSpan"* [ %95, %93 ], [ %49, %45 ]
  %53 = phi i32 [ %94, %93 ], [ 0, %45 ]
  %54 = phi %"class.blink::GridItemWithSpan"* [ %52, %93 ], [ %46, %45 ]
  %55 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %54, i64 0, i32 1, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %54, i64 0, i32 1, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %52, i64 0, i32 1, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %52, i64 0, i32 1, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = sub nsw i32 %60, %62
  %64 = sub nsw i32 %58, %56
  %65 = icmp ult i32 %63, %64
  br i1 %65, label %66, label %93

66:                                               ; preds = %51
  %67 = bitcast %"class.blink::GridItemWithSpan"* %52 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %52, i64 0, i32 1, i32 2
  %70 = load i32, i32* %69, align 8
  br label %71

71:                                               ; preds = %77, %66
  %72 = phi %"class.blink::GridItemWithSpan"* [ %52, %66 ], [ %73, %77 ]
  %73 = phi %"class.blink::GridItemWithSpan"* [ %54, %66 ], [ %78, %77 ]
  %74 = bitcast %"class.blink::GridItemWithSpan"* %72 to i8*
  %75 = bitcast %"class.blink::GridItemWithSpan"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 20, i1 false)
  %76 = icmp eq %"class.blink::GridItemWithSpan"* %73, %0
  br i1 %76, label %85, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %73, i64 -1
  %79 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %73, i64 -1, i32 1, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %73, i64 -1, i32 1, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = sub nsw i32 %82, %80
  %84 = icmp ult i32 %63, %83
  br i1 %84, label %71, label %85

85:                                               ; preds = %71, %77
  %86 = phi %"class.blink::GridItemWithSpan"* [ %0, %71 ], [ %73, %77 ]
  %87 = bitcast %"class.blink::GridItemWithSpan"* %86 to i64*
  store i64 %68, i64* %87, align 8
  %88 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %86, i64 0, i32 1, i32 0
  store i32 %62, i32* %88, align 8
  %89 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %86, i64 0, i32 1, i32 1
  store i32 %60, i32* %89, align 4
  %90 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %86, i64 0, i32 1, i32 2
  store i32 %70, i32* %90, align 8
  %91 = add i32 %53, 1
  %92 = icmp eq i32 %91, 8
  br i1 %92, label %97, label %93

93:                                               ; preds = %85, %51
  %94 = phi i32 [ %91, %85 ], [ %53, %51 ]
  %95 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %52, i64 1
  %96 = icmp eq %"class.blink::GridItemWithSpan"* %95, %1
  br i1 %96, label %100, label %51

97:                                               ; preds = %85
  %98 = getelementptr inbounds %"class.blink::GridItemWithSpan", %"class.blink::GridItemWithSpan"* %52, i64 1
  %99 = icmp eq %"class.blink::GridItemWithSpan"* %98, %1
  br label %100

100:                                              ; preds = %93, %97, %45, %8, %21, %3, %3, %39, %34, %30
  %101 = phi i1 [ true, %39 ], [ true, %34 ], [ true, %30 ], [ true, %3 ], [ true, %3 ], [ true, %21 ], [ true, %8 ], [ true, %45 ], [ %99, %97 ], [ true, %93 ]
  ret i1 %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink24GridTrackSizingAlgorithm23DistributeSpaceToTracksILNS_25TrackSizeComputationPhaseE0EEEvRN3WTF6VectorIPNS_9GridTrackELj0ENS3_18PartitionAllocatorEEEPS8_RNS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithm"*, %"class.WTF::Vector.1349"* dereferenceable(16), %"class.WTF::Vector.1349"*, %"class.blink::LayoutUnit"* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, align 8
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %1, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %36, label %16

16:                                               ; preds = %4
  %17 = shl nuw nsw i64 %13, 3
  %18 = add nsw i64 %17, -8
  %19 = lshr exact i64 %18, 3
  %20 = add nuw nsw i64 %19, 1
  %21 = and i64 %20, 7
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %16, %23
  %24 = phi %"class.blink::GridTrack"** [ %30, %23 ], [ %10, %16 ]
  %25 = phi i64 [ %31, %23 ], [ %21, %16 ]
  %26 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %24, align 8
  %27 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %26, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %26, i64 0, i32 3, i32 0
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %24, i64 1
  %31 = add i64 %25, -1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %23, !llvm.loop !76

33:                                               ; preds = %23, %16
  %34 = phi %"class.blink::GridTrack"** [ %10, %16 ], [ %30, %23 ]
  %35 = icmp ult i64 %18, 56
  br i1 %35, label %36, label %40

36:                                               ; preds = %33, %40, %4
  %37 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %83, label %226

40:                                               ; preds = %33, %40
  %41 = phi %"class.blink::GridTrack"** [ %81, %40 ], [ %34, %33 ]
  %42 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %42, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %42, i64 0, i32 3, i32 0
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 1
  %47 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %47, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %47, i64 0, i32 3, i32 0
  store i32 %49, i32* %50, align 4
  %51 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 2
  %52 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %52, i64 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %52, i64 0, i32 3, i32 0
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 3
  %57 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %57, i64 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %57, i64 0, i32 3, i32 0
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 4
  %62 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %62, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %62, i64 0, i32 3, i32 0
  store i32 %64, i32* %65, align 4
  %66 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 5
  %67 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %67, i64 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %67, i64 0, i32 3, i32 0
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 6
  %72 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %72, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %72, i64 0, i32 3, i32 0
  store i32 %74, i32* %75, align 4
  %76 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 7
  %77 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 3, i32 0
  store i32 %79, i32* %80, align 4
  %81 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 8
  %82 = icmp eq %"class.blink::GridTrack"** %81, %14
  br i1 %82, label %36, label %40

83:                                               ; preds = %36
  %84 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %9, align 8
  %85 = load i32, i32* %11, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %84, i64 %86
  %88 = bitcast i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88)
  store i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)* @_ZN5blinkL30SortByGridTrackGrowthPotentialEPKNS_9GridTrackES2_, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %5, align 8
  call void @_ZNSt3__16__sortIRPFbPKN5blink9GridTrackES4_EPPS2_EEvT0_SA_T_(%"class.blink::GridTrack"** %84, %"class.blink::GridTrack"** %87, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** nonnull dereferenceable(8) %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88)
  %89 = load i32, i32* %11, align 4
  %90 = zext i32 %89 to i64
  %91 = icmp eq i32 %89, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %83
  %93 = load i32, i32* %37, align 4
  br label %167

94:                                               ; preds = %83
  %95 = bitcast i32* %6 to i8*
  %96 = bitcast i32* %8 to i8*
  %97 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  br label %98

98:                                               ; preds = %146, %94
  %99 = phi i64 [ 0, %94 ], [ %165, %146 ]
  %100 = trunc i64 %99 to i32
  %101 = call dereferenceable(8) %"class.blink::GridTrack"** @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1349"* %1, i32 %100) #18
  %102 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %101, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95)
  store i32 -1431655766, i32* %6, align 4
  %103 = sub nsw i64 %90, %99
  %104 = shl i64 %103, 6
  %105 = icmp ult i64 %104, 2147483647
  %106 = select i1 %105, i64 %104, i64 2147483647
  %107 = load i32, i32* %37, align 4
  %108 = sext i32 %107 to i64
  %109 = shl nsw i64 %108, 6
  %110 = sdiv i64 %109, %106
  %111 = call i1 @llvm.is.constant.i64(i64 %110) #18
  br i1 %111, label %119, label %112

112:                                              ; preds = %98
  %113 = icmp slt i64 %110, 0
  %114 = select i1 %113, i32 -2147483648, i32 2147483647
  %115 = add i64 %110, 2147483648
  %116 = icmp ult i64 %115, 4294967296
  %117 = trunc i64 %110 to i32
  %118 = select i1 %116, i32 %117, i32 %114, !prof !71
  br label %125

119:                                              ; preds = %98
  %120 = icmp sgt i64 %110, 2147483647
  br i1 %120, label %125, label %121

121:                                              ; preds = %119
  %122 = icmp sgt i64 %110, -2147483648
  %123 = select i1 %122, i64 %110, i64 -2147483648
  %124 = trunc i64 %123 to i32
  br label %125

125:                                              ; preds = %112, %119, %121
  %126 = phi i32 [ %118, %112 ], [ %124, %121 ], [ 2147483647, %119 ]
  store i32 %126, i32* %6, align 4
  %127 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %102, i64 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %102, i64 0, i32 1, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, -64
  br i1 %131, label %132, label %133

132:                                              ; preds = %125
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96)
  br label %146

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %102, i64 0, i32 5
  %135 = load i8, i8* %134, align 8, !range !2
  %136 = icmp eq i8 %135, 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96)
  br i1 %136, label %137, label %146

137:                                              ; preds = %133
  %138 = icmp sgt i32 %128, -1
  %139 = select i1 %138, i32 -2147483648, i32 2147483647
  %140 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %130, i32 %128) #18
  %141 = extractvalue { i32, i1 } %140, 1
  %142 = extractvalue { i32, i1 } %140, 0
  %143 = select i1 %141, i32 %139, i32 %142, !prof !3
  store i32 %143, i32* %8, align 4
  %144 = icmp slt i32 %143, %126
  %145 = select i1 %144, %"class.blink::LayoutUnit"* %97, %"class.blink::LayoutUnit"* %7
  br label %146

146:                                              ; preds = %133, %132, %137
  %147 = phi %"class.blink::LayoutUnit"* [ %145, %137 ], [ %7, %133 ], [ %7, %132 ]
  %148 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %147, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96)
  %150 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %102, i64 0, i32 3, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp slt i32 %149, 0
  %153 = select i1 %152, i32 -2147483648, i32 2147483647
  %154 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %151, i32 %149) #18
  %155 = extractvalue { i32, i1 } %154, 1
  %156 = extractvalue { i32, i1 } %154, 0
  %157 = select i1 %155, i32 %153, i32 %156, !prof !3
  store i32 %157, i32* %150, align 4
  %158 = load i32, i32* %37, align 4
  %159 = icmp sgt i32 %149, -1
  %160 = select i1 %159, i32 -2147483648, i32 2147483647
  %161 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %158, i32 %149) #18
  %162 = extractvalue { i32, i1 } %161, 1
  %163 = extractvalue { i32, i1 } %161, 0
  %164 = select i1 %162, i32 %160, i32 %163, !prof !3
  store i32 %164, i32* %37, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95)
  %165 = add nuw nsw i64 %99, 1
  %166 = icmp eq i64 %165, %90
  br i1 %166, label %167, label %98

167:                                              ; preds = %146, %92
  %168 = phi i32 [ %93, %92 ], [ %164, %146 ]
  %169 = icmp sgt i32 %168, 0
  %170 = icmp ne %"class.WTF::Vector.1349"* %2, null
  %171 = and i1 %170, %169
  br i1 %171, label %172, label %226

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %2, i64 0, i32 0, i32 0, i32 2
  %174 = load i32, i32* %173, align 4
  %175 = zext i32 %174 to i64
  %176 = icmp eq i32 %174, 0
  br i1 %176, label %226, label %177

177:                                              ; preds = %172, %208
  %178 = phi i64 [ %224, %208 ], [ 0, %172 ]
  %179 = trunc i64 %178 to i32
  %180 = call dereferenceable(8) %"class.blink::GridTrack"** @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1349"* nonnull %2, i32 %179)
  %181 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %180, align 8
  %182 = sub nsw i64 %175, %178
  %183 = shl i64 %182, 6
  %184 = icmp ult i64 %183, 2147483647
  %185 = select i1 %184, i64 %183, i64 2147483647
  %186 = load i32, i32* %37, align 4
  %187 = sext i32 %186 to i64
  %188 = shl nsw i64 %187, 6
  %189 = sdiv i64 %188, %185
  %190 = call i1 @llvm.is.constant.i64(i64 %189) #18
  br i1 %190, label %198, label %191

191:                                              ; preds = %177
  %192 = icmp slt i64 %189, 0
  %193 = select i1 %192, i32 -2147483648, i32 2147483647
  %194 = add i64 %189, 2147483648
  %195 = icmp ult i64 %194, 4294967296
  %196 = trunc i64 %189 to i32
  %197 = select i1 %195, i32 %196, i32 %193, !prof !71
  br label %204

198:                                              ; preds = %177
  %199 = icmp sgt i64 %189, 2147483647
  br i1 %199, label %208, label %200

200:                                              ; preds = %198
  %201 = icmp sgt i64 %189, -2147483648
  %202 = select i1 %201, i64 %189, i64 -2147483648
  %203 = trunc i64 %202 to i32
  br label %204

204:                                              ; preds = %191, %200
  %205 = phi i32 [ %197, %191 ], [ %203, %200 ]
  %206 = icmp slt i32 %205, 0
  %207 = select i1 %206, i32 -2147483648, i32 2147483647
  br label %208

208:                                              ; preds = %198, %204
  %209 = phi i32 [ %205, %204 ], [ 2147483647, %198 ]
  %210 = phi i32 [ %207, %204 ], [ 2147483647, %198 ]
  %211 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %181, i64 0, i32 3, i32 0
  %212 = load i32, i32* %211, align 4
  %213 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %212, i32 %209) #18
  %214 = extractvalue { i32, i1 } %213, 1
  %215 = extractvalue { i32, i1 } %213, 0
  %216 = select i1 %214, i32 %210, i32 %215, !prof !3
  store i32 %216, i32* %211, align 4
  %217 = load i32, i32* %37, align 4
  %218 = icmp sgt i32 %209, -1
  %219 = select i1 %218, i32 -2147483648, i32 2147483647
  %220 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %217, i32 %209) #18
  %221 = extractvalue { i32, i1 } %220, 1
  %222 = extractvalue { i32, i1 } %220, 0
  %223 = select i1 %221, i32 %219, i32 %222, !prof !3
  store i32 %223, i32* %37, align 4
  %224 = add nuw nsw i64 %178, 1
  %225 = icmp eq i64 %224, %175
  br i1 %225, label %226, label %177

226:                                              ; preds = %208, %36, %172, %167
  %227 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %9, align 8
  %228 = load i32, i32* %11, align 4
  %229 = zext i32 %228 to i64
  %230 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %227, i64 %229
  %231 = icmp eq i32 %228, 0
  br i1 %231, label %251, label %232

232:                                              ; preds = %226
  %233 = shl nuw nsw i64 %229, 3
  %234 = add nsw i64 %233, -8
  %235 = and i64 %234, 8
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %237, label %248

237:                                              ; preds = %232
  %238 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %227, align 8
  %239 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %238, i64 0, i32 2, i32 0
  %240 = load i32, i32* %239, align 8
  %241 = icmp eq i32 %240, -64
  %242 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %238, i64 0, i32 3, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = icmp slt i32 %240, %243
  %245 = or i1 %241, %244
  %246 = select i1 %245, i32 %243, i32 %240
  store i32 %246, i32* %239, align 8
  %247 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %227, i64 1
  br label %248

248:                                              ; preds = %237, %232
  %249 = phi %"class.blink::GridTrack"** [ %227, %232 ], [ %247, %237 ]
  %250 = icmp eq i64 %234, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %248, %252, %226
  ret void

252:                                              ; preds = %248, %252
  %253 = phi %"class.blink::GridTrack"** [ %273, %252 ], [ %249, %248 ]
  %254 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %253, align 8
  %255 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %254, i64 0, i32 2, i32 0
  %256 = load i32, i32* %255, align 8
  %257 = icmp eq i32 %256, -64
  %258 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %254, i64 0, i32 3, i32 0
  %259 = load i32, i32* %258, align 4
  %260 = icmp slt i32 %256, %259
  %261 = or i1 %257, %260
  %262 = select i1 %261, i32 %259, i32 %256
  store i32 %262, i32* %255, align 8
  %263 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %253, i64 1
  %264 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %263, align 8
  %265 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %264, i64 0, i32 2, i32 0
  %266 = load i32, i32* %265, align 8
  %267 = icmp eq i32 %266, -64
  %268 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %264, i64 0, i32 3, i32 0
  %269 = load i32, i32* %268, align 4
  %270 = icmp slt i32 %266, %269
  %271 = or i1 %267, %270
  %272 = select i1 %271, i32 %269, i32 %266
  store i32 %272, i32* %265, align 8
  %273 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %253, i64 2
  %274 = icmp eq %"class.blink::GridTrack"** %273, %230
  br i1 %274, label %251, label %252
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1349"*, %"class.blink::GridTrack"** dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %6, align 8
  %8 = icmp ugt %"class.blink::GridTrack"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %7, i64 %10
  %12 = icmp ugt %"class.blink::GridTrack"** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !71

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::GridTrack"** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink9GridTrackEEEmm(i64 %26) #18
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9GridTrackEEEPKcv, i64 0, i64 0)) #18
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1349"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::GridTrack"**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::GridTrack"** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::GridTrack"** %38 to i8*
  br i1 %41, label %43, label %49, !prof !71

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #18
  %47 = bitcast %"class.WTF::Vector.1349"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #18
  %51 = bitcast %"class.WTF::Vector.1349"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::GridTrack"**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::GridTrack"** %1 to i64
  %56 = ptrtoint %"class.blink::GridTrack"** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !71

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::GridTrack"** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink9GridTrackEEEmm(i64 %71) #18
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9GridTrackEEEPKcv, i64 0, i64 0)) #18
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1349"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::GridTrack"** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::GridTrack"** %78 to i8*
  br i1 %81, label %83, label %89, !prof !71

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #18
  %87 = bitcast %"class.WTF::Vector.1349"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #18
  %91 = bitcast %"class.WTF::Vector.1349"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::GridTrack"**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::GridTrack"** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::GridTrack"** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::GridTrack"** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %100, i64 %103
  %105 = bitcast %"class.blink::GridTrack"** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.blink::GridTrack"** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink24GridTrackSizingAlgorithm23DistributeSpaceToTracksILNS_25TrackSizeComputationPhaseE1EEEvRN3WTF6VectorIPNS_9GridTrackELj0ENS3_18PartitionAllocatorEEEPS8_RNS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithm"*, %"class.WTF::Vector.1349"* dereferenceable(16), %"class.WTF::Vector.1349"*, %"class.blink::LayoutUnit"* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, align 8
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %1, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %36, label %16

16:                                               ; preds = %4
  %17 = shl nuw nsw i64 %13, 3
  %18 = add nsw i64 %17, -8
  %19 = lshr exact i64 %18, 3
  %20 = add nuw nsw i64 %19, 1
  %21 = and i64 %20, 7
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %16, %23
  %24 = phi %"class.blink::GridTrack"** [ %30, %23 ], [ %10, %16 ]
  %25 = phi i64 [ %31, %23 ], [ %21, %16 ]
  %26 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %24, align 8
  %27 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %26, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %26, i64 0, i32 3, i32 0
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %24, i64 1
  %31 = add i64 %25, -1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %23, !llvm.loop !77

33:                                               ; preds = %23, %16
  %34 = phi %"class.blink::GridTrack"** [ %10, %16 ], [ %30, %23 ]
  %35 = icmp ult i64 %18, 56
  br i1 %35, label %36, label %40

36:                                               ; preds = %33, %40, %4
  %37 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %83, label %226

40:                                               ; preds = %33, %40
  %41 = phi %"class.blink::GridTrack"** [ %81, %40 ], [ %34, %33 ]
  %42 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %42, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %42, i64 0, i32 3, i32 0
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 1
  %47 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %47, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %47, i64 0, i32 3, i32 0
  store i32 %49, i32* %50, align 4
  %51 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 2
  %52 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %52, i64 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %52, i64 0, i32 3, i32 0
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 3
  %57 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %57, i64 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %57, i64 0, i32 3, i32 0
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 4
  %62 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %62, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %62, i64 0, i32 3, i32 0
  store i32 %64, i32* %65, align 4
  %66 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 5
  %67 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %67, i64 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %67, i64 0, i32 3, i32 0
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 6
  %72 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %72, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %72, i64 0, i32 3, i32 0
  store i32 %74, i32* %75, align 4
  %76 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 7
  %77 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 3, i32 0
  store i32 %79, i32* %80, align 4
  %81 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 8
  %82 = icmp eq %"class.blink::GridTrack"** %81, %14
  br i1 %82, label %36, label %40

83:                                               ; preds = %36
  %84 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %9, align 8
  %85 = load i32, i32* %11, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %84, i64 %86
  %88 = bitcast i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88)
  store i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)* @_ZN5blinkL30SortByGridTrackGrowthPotentialEPKNS_9GridTrackES2_, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %5, align 8
  call void @_ZNSt3__16__sortIRPFbPKN5blink9GridTrackES4_EPPS2_EEvT0_SA_T_(%"class.blink::GridTrack"** %84, %"class.blink::GridTrack"** %87, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** nonnull dereferenceable(8) %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88)
  %89 = load i32, i32* %11, align 4
  %90 = zext i32 %89 to i64
  %91 = icmp eq i32 %89, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %83
  %93 = load i32, i32* %37, align 4
  br label %167

94:                                               ; preds = %83
  %95 = bitcast i32* %6 to i8*
  %96 = bitcast i32* %8 to i8*
  %97 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  br label %98

98:                                               ; preds = %146, %94
  %99 = phi i64 [ 0, %94 ], [ %165, %146 ]
  %100 = trunc i64 %99 to i32
  %101 = call dereferenceable(8) %"class.blink::GridTrack"** @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1349"* %1, i32 %100) #18
  %102 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %101, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95)
  store i32 -1431655766, i32* %6, align 4
  %103 = sub nsw i64 %90, %99
  %104 = shl i64 %103, 6
  %105 = icmp ult i64 %104, 2147483647
  %106 = select i1 %105, i64 %104, i64 2147483647
  %107 = load i32, i32* %37, align 4
  %108 = sext i32 %107 to i64
  %109 = shl nsw i64 %108, 6
  %110 = sdiv i64 %109, %106
  %111 = call i1 @llvm.is.constant.i64(i64 %110) #18
  br i1 %111, label %119, label %112

112:                                              ; preds = %98
  %113 = icmp slt i64 %110, 0
  %114 = select i1 %113, i32 -2147483648, i32 2147483647
  %115 = add i64 %110, 2147483648
  %116 = icmp ult i64 %115, 4294967296
  %117 = trunc i64 %110 to i32
  %118 = select i1 %116, i32 %117, i32 %114, !prof !71
  br label %125

119:                                              ; preds = %98
  %120 = icmp sgt i64 %110, 2147483647
  br i1 %120, label %125, label %121

121:                                              ; preds = %119
  %122 = icmp sgt i64 %110, -2147483648
  %123 = select i1 %122, i64 %110, i64 -2147483648
  %124 = trunc i64 %123 to i32
  br label %125

125:                                              ; preds = %112, %119, %121
  %126 = phi i32 [ %118, %112 ], [ %124, %121 ], [ 2147483647, %119 ]
  store i32 %126, i32* %6, align 4
  %127 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %102, i64 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %102, i64 0, i32 1, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, -64
  br i1 %131, label %132, label %133

132:                                              ; preds = %125
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96)
  br label %146

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %102, i64 0, i32 5
  %135 = load i8, i8* %134, align 8, !range !2
  %136 = icmp eq i8 %135, 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96)
  br i1 %136, label %137, label %146

137:                                              ; preds = %133
  %138 = icmp sgt i32 %128, -1
  %139 = select i1 %138, i32 -2147483648, i32 2147483647
  %140 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %130, i32 %128) #18
  %141 = extractvalue { i32, i1 } %140, 1
  %142 = extractvalue { i32, i1 } %140, 0
  %143 = select i1 %141, i32 %139, i32 %142, !prof !3
  store i32 %143, i32* %8, align 4
  %144 = icmp slt i32 %143, %126
  %145 = select i1 %144, %"class.blink::LayoutUnit"* %97, %"class.blink::LayoutUnit"* %7
  br label %146

146:                                              ; preds = %133, %132, %137
  %147 = phi %"class.blink::LayoutUnit"* [ %145, %137 ], [ %7, %133 ], [ %7, %132 ]
  %148 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %147, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96)
  %150 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %102, i64 0, i32 3, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp slt i32 %149, 0
  %153 = select i1 %152, i32 -2147483648, i32 2147483647
  %154 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %151, i32 %149) #18
  %155 = extractvalue { i32, i1 } %154, 1
  %156 = extractvalue { i32, i1 } %154, 0
  %157 = select i1 %155, i32 %153, i32 %156, !prof !3
  store i32 %157, i32* %150, align 4
  %158 = load i32, i32* %37, align 4
  %159 = icmp sgt i32 %149, -1
  %160 = select i1 %159, i32 -2147483648, i32 2147483647
  %161 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %158, i32 %149) #18
  %162 = extractvalue { i32, i1 } %161, 1
  %163 = extractvalue { i32, i1 } %161, 0
  %164 = select i1 %162, i32 %160, i32 %163, !prof !3
  store i32 %164, i32* %37, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95)
  %165 = add nuw nsw i64 %99, 1
  %166 = icmp eq i64 %165, %90
  br i1 %166, label %167, label %98

167:                                              ; preds = %146, %92
  %168 = phi i32 [ %93, %92 ], [ %164, %146 ]
  %169 = icmp sgt i32 %168, 0
  %170 = icmp ne %"class.WTF::Vector.1349"* %2, null
  %171 = and i1 %170, %169
  br i1 %171, label %172, label %226

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %2, i64 0, i32 0, i32 0, i32 2
  %174 = load i32, i32* %173, align 4
  %175 = zext i32 %174 to i64
  %176 = icmp eq i32 %174, 0
  br i1 %176, label %226, label %177

177:                                              ; preds = %172, %208
  %178 = phi i64 [ %224, %208 ], [ 0, %172 ]
  %179 = trunc i64 %178 to i32
  %180 = call dereferenceable(8) %"class.blink::GridTrack"** @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1349"* nonnull %2, i32 %179)
  %181 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %180, align 8
  %182 = sub nsw i64 %175, %178
  %183 = shl i64 %182, 6
  %184 = icmp ult i64 %183, 2147483647
  %185 = select i1 %184, i64 %183, i64 2147483647
  %186 = load i32, i32* %37, align 4
  %187 = sext i32 %186 to i64
  %188 = shl nsw i64 %187, 6
  %189 = sdiv i64 %188, %185
  %190 = call i1 @llvm.is.constant.i64(i64 %189) #18
  br i1 %190, label %198, label %191

191:                                              ; preds = %177
  %192 = icmp slt i64 %189, 0
  %193 = select i1 %192, i32 -2147483648, i32 2147483647
  %194 = add i64 %189, 2147483648
  %195 = icmp ult i64 %194, 4294967296
  %196 = trunc i64 %189 to i32
  %197 = select i1 %195, i32 %196, i32 %193, !prof !71
  br label %204

198:                                              ; preds = %177
  %199 = icmp sgt i64 %189, 2147483647
  br i1 %199, label %208, label %200

200:                                              ; preds = %198
  %201 = icmp sgt i64 %189, -2147483648
  %202 = select i1 %201, i64 %189, i64 -2147483648
  %203 = trunc i64 %202 to i32
  br label %204

204:                                              ; preds = %191, %200
  %205 = phi i32 [ %197, %191 ], [ %203, %200 ]
  %206 = icmp slt i32 %205, 0
  %207 = select i1 %206, i32 -2147483648, i32 2147483647
  br label %208

208:                                              ; preds = %198, %204
  %209 = phi i32 [ %205, %204 ], [ 2147483647, %198 ]
  %210 = phi i32 [ %207, %204 ], [ 2147483647, %198 ]
  %211 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %181, i64 0, i32 3, i32 0
  %212 = load i32, i32* %211, align 4
  %213 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %212, i32 %209) #18
  %214 = extractvalue { i32, i1 } %213, 1
  %215 = extractvalue { i32, i1 } %213, 0
  %216 = select i1 %214, i32 %210, i32 %215, !prof !3
  store i32 %216, i32* %211, align 4
  %217 = load i32, i32* %37, align 4
  %218 = icmp sgt i32 %209, -1
  %219 = select i1 %218, i32 -2147483648, i32 2147483647
  %220 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %217, i32 %209) #18
  %221 = extractvalue { i32, i1 } %220, 1
  %222 = extractvalue { i32, i1 } %220, 0
  %223 = select i1 %221, i32 %219, i32 %222, !prof !3
  store i32 %223, i32* %37, align 4
  %224 = add nuw nsw i64 %178, 1
  %225 = icmp eq i64 %224, %175
  br i1 %225, label %226, label %177

226:                                              ; preds = %208, %36, %172, %167
  %227 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %9, align 8
  %228 = load i32, i32* %11, align 4
  %229 = zext i32 %228 to i64
  %230 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %227, i64 %229
  %231 = icmp eq i32 %228, 0
  br i1 %231, label %251, label %232

232:                                              ; preds = %226
  %233 = shl nuw nsw i64 %229, 3
  %234 = add nsw i64 %233, -8
  %235 = and i64 %234, 8
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %237, label %248

237:                                              ; preds = %232
  %238 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %227, align 8
  %239 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %238, i64 0, i32 2, i32 0
  %240 = load i32, i32* %239, align 8
  %241 = icmp eq i32 %240, -64
  %242 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %238, i64 0, i32 3, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = icmp slt i32 %240, %243
  %245 = or i1 %241, %244
  %246 = select i1 %245, i32 %243, i32 %240
  store i32 %246, i32* %239, align 8
  %247 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %227, i64 1
  br label %248

248:                                              ; preds = %237, %232
  %249 = phi %"class.blink::GridTrack"** [ %227, %232 ], [ %247, %237 ]
  %250 = icmp eq i64 %234, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %248, %252, %226
  ret void

252:                                              ; preds = %248, %252
  %253 = phi %"class.blink::GridTrack"** [ %273, %252 ], [ %249, %248 ]
  %254 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %253, align 8
  %255 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %254, i64 0, i32 2, i32 0
  %256 = load i32, i32* %255, align 8
  %257 = icmp eq i32 %256, -64
  %258 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %254, i64 0, i32 3, i32 0
  %259 = load i32, i32* %258, align 4
  %260 = icmp slt i32 %256, %259
  %261 = or i1 %257, %260
  %262 = select i1 %261, i32 %259, i32 %256
  store i32 %262, i32* %255, align 8
  %263 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %253, i64 1
  %264 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %263, align 8
  %265 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %264, i64 0, i32 2, i32 0
  %266 = load i32, i32* %265, align 8
  %267 = icmp eq i32 %266, -64
  %268 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %264, i64 0, i32 3, i32 0
  %269 = load i32, i32* %268, align 4
  %270 = icmp slt i32 %266, %269
  %271 = or i1 %267, %270
  %272 = select i1 %271, i32 %269, i32 %266
  store i32 %272, i32* %265, align 8
  %273 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %253, i64 2
  %274 = icmp eq %"class.blink::GridTrack"** %273, %230
  br i1 %274, label %251, label %252
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink24GridTrackSizingAlgorithm23DistributeSpaceToTracksILNS_25TrackSizeComputationPhaseE2EEEvRN3WTF6VectorIPNS_9GridTrackELj0ENS3_18PartitionAllocatorEEEPS8_RNS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithm"*, %"class.WTF::Vector.1349"* dereferenceable(16), %"class.WTF::Vector.1349"*, %"class.blink::LayoutUnit"* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, align 8
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %1, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %36, label %16

16:                                               ; preds = %4
  %17 = shl nuw nsw i64 %13, 3
  %18 = add nsw i64 %17, -8
  %19 = lshr exact i64 %18, 3
  %20 = add nuw nsw i64 %19, 1
  %21 = and i64 %20, 7
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %16, %23
  %24 = phi %"class.blink::GridTrack"** [ %30, %23 ], [ %10, %16 ]
  %25 = phi i64 [ %31, %23 ], [ %21, %16 ]
  %26 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %24, align 8
  %27 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %26, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %26, i64 0, i32 3, i32 0
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %24, i64 1
  %31 = add i64 %25, -1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %23, !llvm.loop !78

33:                                               ; preds = %23, %16
  %34 = phi %"class.blink::GridTrack"** [ %10, %16 ], [ %30, %23 ]
  %35 = icmp ult i64 %18, 56
  br i1 %35, label %36, label %40

36:                                               ; preds = %33, %40, %4
  %37 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %83, label %226

40:                                               ; preds = %33, %40
  %41 = phi %"class.blink::GridTrack"** [ %81, %40 ], [ %34, %33 ]
  %42 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %42, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %42, i64 0, i32 3, i32 0
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 1
  %47 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %47, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %47, i64 0, i32 3, i32 0
  store i32 %49, i32* %50, align 4
  %51 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 2
  %52 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %52, i64 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %52, i64 0, i32 3, i32 0
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 3
  %57 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %57, i64 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %57, i64 0, i32 3, i32 0
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 4
  %62 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %62, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %62, i64 0, i32 3, i32 0
  store i32 %64, i32* %65, align 4
  %66 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 5
  %67 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %67, i64 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %67, i64 0, i32 3, i32 0
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 6
  %72 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %72, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %72, i64 0, i32 3, i32 0
  store i32 %74, i32* %75, align 4
  %76 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 7
  %77 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 3, i32 0
  store i32 %79, i32* %80, align 4
  %81 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 8
  %82 = icmp eq %"class.blink::GridTrack"** %81, %14
  br i1 %82, label %36, label %40

83:                                               ; preds = %36
  %84 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %9, align 8
  %85 = load i32, i32* %11, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %84, i64 %86
  %88 = bitcast i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88)
  store i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)* @_ZN5blinkL30SortByGridTrackGrowthPotentialEPKNS_9GridTrackES2_, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %5, align 8
  call void @_ZNSt3__16__sortIRPFbPKN5blink9GridTrackES4_EPPS2_EEvT0_SA_T_(%"class.blink::GridTrack"** %84, %"class.blink::GridTrack"** %87, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** nonnull dereferenceable(8) %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88)
  %89 = load i32, i32* %11, align 4
  %90 = zext i32 %89 to i64
  %91 = icmp eq i32 %89, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %83
  %93 = load i32, i32* %37, align 4
  br label %167

94:                                               ; preds = %83
  %95 = bitcast i32* %6 to i8*
  %96 = bitcast i32* %8 to i8*
  %97 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  br label %98

98:                                               ; preds = %146, %94
  %99 = phi i64 [ 0, %94 ], [ %165, %146 ]
  %100 = trunc i64 %99 to i32
  %101 = call dereferenceable(8) %"class.blink::GridTrack"** @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1349"* %1, i32 %100) #18
  %102 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %101, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95)
  store i32 -1431655766, i32* %6, align 4
  %103 = sub nsw i64 %90, %99
  %104 = shl i64 %103, 6
  %105 = icmp ult i64 %104, 2147483647
  %106 = select i1 %105, i64 %104, i64 2147483647
  %107 = load i32, i32* %37, align 4
  %108 = sext i32 %107 to i64
  %109 = shl nsw i64 %108, 6
  %110 = sdiv i64 %109, %106
  %111 = call i1 @llvm.is.constant.i64(i64 %110) #18
  br i1 %111, label %119, label %112

112:                                              ; preds = %98
  %113 = icmp slt i64 %110, 0
  %114 = select i1 %113, i32 -2147483648, i32 2147483647
  %115 = add i64 %110, 2147483648
  %116 = icmp ult i64 %115, 4294967296
  %117 = trunc i64 %110 to i32
  %118 = select i1 %116, i32 %117, i32 %114, !prof !71
  br label %125

119:                                              ; preds = %98
  %120 = icmp sgt i64 %110, 2147483647
  br i1 %120, label %125, label %121

121:                                              ; preds = %119
  %122 = icmp sgt i64 %110, -2147483648
  %123 = select i1 %122, i64 %110, i64 -2147483648
  %124 = trunc i64 %123 to i32
  br label %125

125:                                              ; preds = %112, %119, %121
  %126 = phi i32 [ %118, %112 ], [ %124, %121 ], [ 2147483647, %119 ]
  store i32 %126, i32* %6, align 4
  %127 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %102, i64 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %102, i64 0, i32 1, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, -64
  br i1 %131, label %132, label %133

132:                                              ; preds = %125
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96)
  br label %146

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %102, i64 0, i32 5
  %135 = load i8, i8* %134, align 8, !range !2
  %136 = icmp eq i8 %135, 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96)
  br i1 %136, label %137, label %146

137:                                              ; preds = %133
  %138 = icmp sgt i32 %128, -1
  %139 = select i1 %138, i32 -2147483648, i32 2147483647
  %140 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %130, i32 %128) #18
  %141 = extractvalue { i32, i1 } %140, 1
  %142 = extractvalue { i32, i1 } %140, 0
  %143 = select i1 %141, i32 %139, i32 %142, !prof !3
  store i32 %143, i32* %8, align 4
  %144 = icmp slt i32 %143, %126
  %145 = select i1 %144, %"class.blink::LayoutUnit"* %97, %"class.blink::LayoutUnit"* %7
  br label %146

146:                                              ; preds = %133, %132, %137
  %147 = phi %"class.blink::LayoutUnit"* [ %145, %137 ], [ %7, %133 ], [ %7, %132 ]
  %148 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %147, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96)
  %150 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %102, i64 0, i32 3, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp slt i32 %149, 0
  %153 = select i1 %152, i32 -2147483648, i32 2147483647
  %154 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %151, i32 %149) #18
  %155 = extractvalue { i32, i1 } %154, 1
  %156 = extractvalue { i32, i1 } %154, 0
  %157 = select i1 %155, i32 %153, i32 %156, !prof !3
  store i32 %157, i32* %150, align 4
  %158 = load i32, i32* %37, align 4
  %159 = icmp sgt i32 %149, -1
  %160 = select i1 %159, i32 -2147483648, i32 2147483647
  %161 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %158, i32 %149) #18
  %162 = extractvalue { i32, i1 } %161, 1
  %163 = extractvalue { i32, i1 } %161, 0
  %164 = select i1 %162, i32 %160, i32 %163, !prof !3
  store i32 %164, i32* %37, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95)
  %165 = add nuw nsw i64 %99, 1
  %166 = icmp eq i64 %165, %90
  br i1 %166, label %167, label %98

167:                                              ; preds = %146, %92
  %168 = phi i32 [ %93, %92 ], [ %164, %146 ]
  %169 = icmp sgt i32 %168, 0
  %170 = icmp ne %"class.WTF::Vector.1349"* %2, null
  %171 = and i1 %170, %169
  br i1 %171, label %172, label %226

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %2, i64 0, i32 0, i32 0, i32 2
  %174 = load i32, i32* %173, align 4
  %175 = zext i32 %174 to i64
  %176 = icmp eq i32 %174, 0
  br i1 %176, label %226, label %177

177:                                              ; preds = %172, %208
  %178 = phi i64 [ %224, %208 ], [ 0, %172 ]
  %179 = trunc i64 %178 to i32
  %180 = call dereferenceable(8) %"class.blink::GridTrack"** @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1349"* nonnull %2, i32 %179)
  %181 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %180, align 8
  %182 = sub nsw i64 %175, %178
  %183 = shl i64 %182, 6
  %184 = icmp ult i64 %183, 2147483647
  %185 = select i1 %184, i64 %183, i64 2147483647
  %186 = load i32, i32* %37, align 4
  %187 = sext i32 %186 to i64
  %188 = shl nsw i64 %187, 6
  %189 = sdiv i64 %188, %185
  %190 = call i1 @llvm.is.constant.i64(i64 %189) #18
  br i1 %190, label %198, label %191

191:                                              ; preds = %177
  %192 = icmp slt i64 %189, 0
  %193 = select i1 %192, i32 -2147483648, i32 2147483647
  %194 = add i64 %189, 2147483648
  %195 = icmp ult i64 %194, 4294967296
  %196 = trunc i64 %189 to i32
  %197 = select i1 %195, i32 %196, i32 %193, !prof !71
  br label %204

198:                                              ; preds = %177
  %199 = icmp sgt i64 %189, 2147483647
  br i1 %199, label %208, label %200

200:                                              ; preds = %198
  %201 = icmp sgt i64 %189, -2147483648
  %202 = select i1 %201, i64 %189, i64 -2147483648
  %203 = trunc i64 %202 to i32
  br label %204

204:                                              ; preds = %191, %200
  %205 = phi i32 [ %197, %191 ], [ %203, %200 ]
  %206 = icmp slt i32 %205, 0
  %207 = select i1 %206, i32 -2147483648, i32 2147483647
  br label %208

208:                                              ; preds = %198, %204
  %209 = phi i32 [ %205, %204 ], [ 2147483647, %198 ]
  %210 = phi i32 [ %207, %204 ], [ 2147483647, %198 ]
  %211 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %181, i64 0, i32 3, i32 0
  %212 = load i32, i32* %211, align 4
  %213 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %212, i32 %209) #18
  %214 = extractvalue { i32, i1 } %213, 1
  %215 = extractvalue { i32, i1 } %213, 0
  %216 = select i1 %214, i32 %210, i32 %215, !prof !3
  store i32 %216, i32* %211, align 4
  %217 = load i32, i32* %37, align 4
  %218 = icmp sgt i32 %209, -1
  %219 = select i1 %218, i32 -2147483648, i32 2147483647
  %220 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %217, i32 %209) #18
  %221 = extractvalue { i32, i1 } %220, 1
  %222 = extractvalue { i32, i1 } %220, 0
  %223 = select i1 %221, i32 %219, i32 %222, !prof !3
  store i32 %223, i32* %37, align 4
  %224 = add nuw nsw i64 %178, 1
  %225 = icmp eq i64 %224, %175
  br i1 %225, label %226, label %177

226:                                              ; preds = %208, %36, %172, %167
  %227 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %9, align 8
  %228 = load i32, i32* %11, align 4
  %229 = zext i32 %228 to i64
  %230 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %227, i64 %229
  %231 = icmp eq i32 %228, 0
  br i1 %231, label %251, label %232

232:                                              ; preds = %226
  %233 = shl nuw nsw i64 %229, 3
  %234 = add nsw i64 %233, -8
  %235 = and i64 %234, 8
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %237, label %248

237:                                              ; preds = %232
  %238 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %227, align 8
  %239 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %238, i64 0, i32 2, i32 0
  %240 = load i32, i32* %239, align 8
  %241 = icmp eq i32 %240, -64
  %242 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %238, i64 0, i32 3, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = icmp slt i32 %240, %243
  %245 = or i1 %241, %244
  %246 = select i1 %245, i32 %243, i32 %240
  store i32 %246, i32* %239, align 8
  %247 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %227, i64 1
  br label %248

248:                                              ; preds = %237, %232
  %249 = phi %"class.blink::GridTrack"** [ %227, %232 ], [ %247, %237 ]
  %250 = icmp eq i64 %234, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %248, %252, %226
  ret void

252:                                              ; preds = %248, %252
  %253 = phi %"class.blink::GridTrack"** [ %273, %252 ], [ %249, %248 ]
  %254 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %253, align 8
  %255 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %254, i64 0, i32 2, i32 0
  %256 = load i32, i32* %255, align 8
  %257 = icmp eq i32 %256, -64
  %258 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %254, i64 0, i32 3, i32 0
  %259 = load i32, i32* %258, align 4
  %260 = icmp slt i32 %256, %259
  %261 = or i1 %257, %260
  %262 = select i1 %261, i32 %259, i32 %256
  store i32 %262, i32* %255, align 8
  %263 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %253, i64 1
  %264 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %263, align 8
  %265 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %264, i64 0, i32 2, i32 0
  %266 = load i32, i32* %265, align 8
  %267 = icmp eq i32 %266, -64
  %268 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %264, i64 0, i32 3, i32 0
  %269 = load i32, i32* %268, align 4
  %270 = icmp slt i32 %266, %269
  %271 = or i1 %267, %270
  %272 = select i1 %271, i32 %269, i32 %266
  store i32 %272, i32* %265, align 8
  %273 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %253, i64 2
  %274 = icmp eq %"class.blink::GridTrack"** %273, %230
  br i1 %274, label %251, label %252
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink24GridTrackSizingAlgorithm23DistributeSpaceToTracksILNS_25TrackSizeComputationPhaseE3EEEvRN3WTF6VectorIPNS_9GridTrackELj0ENS3_18PartitionAllocatorEEEPS8_RNS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithm"*, %"class.WTF::Vector.1349"* dereferenceable(16), %"class.WTF::Vector.1349"*, %"class.blink::LayoutUnit"* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, align 8
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %1, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %36, label %16

16:                                               ; preds = %4
  %17 = shl nuw nsw i64 %13, 3
  %18 = add nsw i64 %17, -8
  %19 = and i64 %18, 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %10, align 8
  %23 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %22, i64 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, -64
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %22, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  br label %29

29:                                               ; preds = %26, %21
  %30 = phi i32 [ %28, %26 ], [ %24, %21 ]
  %31 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %22, i64 0, i32 3, i32 0
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %10, i64 1
  br label %33

33:                                               ; preds = %29, %16
  %34 = phi %"class.blink::GridTrack"** [ %10, %16 ], [ %32, %29 ]
  %35 = icmp eq i64 %18, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %33, %244, %4
  %37 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %57, label %192

40:                                               ; preds = %33, %244
  %41 = phi %"class.blink::GridTrack"** [ %247, %244 ], [ %34, %33 ]
  %42 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %42, i64 0, i32 1, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, -64
  br i1 %45, label %46, label %49

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %42, i64 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 8
  br label %49

49:                                               ; preds = %40, %46
  %50 = phi i32 [ %48, %46 ], [ %44, %40 ]
  %51 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %42, i64 0, i32 3, i32 0
  store i32 %50, i32* %51, align 4
  %52 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 1
  %53 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %53, i64 0, i32 1, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, -64
  br i1 %56, label %241, label %244

57:                                               ; preds = %36
  %58 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %9, align 8
  %59 = load i32, i32* %11, align 4
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %58, i64 %60
  %62 = bitcast i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62)
  store i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)* @_ZN5blinkL30SortByGridTrackGrowthPotentialEPKNS_9GridTrackES2_, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %5, align 8
  call void @_ZNSt3__16__sortIRPFbPKN5blink9GridTrackES4_EPPS2_EEvT0_SA_T_(%"class.blink::GridTrack"** %58, %"class.blink::GridTrack"** %61, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** nonnull dereferenceable(8) %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  %63 = load i32, i32* %11, align 4
  %64 = zext i32 %63 to i64
  %65 = icmp eq i32 %63, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %57
  %67 = load i32, i32* %37, align 4
  br label %133

68:                                               ; preds = %57
  %69 = bitcast i32* %6 to i8*
  %70 = bitcast i32* %8 to i8*
  %71 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  br label %72

72:                                               ; preds = %112, %68
  %73 = phi i64 [ 0, %68 ], [ %131, %112 ]
  %74 = trunc i64 %73 to i32
  %75 = call dereferenceable(8) %"class.blink::GridTrack"** @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1349"* %1, i32 %74) #18
  %76 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %75, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69)
  store i32 -1431655766, i32* %6, align 4
  %77 = sub nsw i64 %64, %73
  %78 = shl i64 %77, 6
  %79 = icmp ult i64 %78, 2147483647
  %80 = select i1 %79, i64 %78, i64 2147483647
  %81 = load i32, i32* %37, align 4
  %82 = sext i32 %81 to i64
  %83 = shl nsw i64 %82, 6
  %84 = sdiv i64 %83, %80
  %85 = call i1 @llvm.is.constant.i64(i64 %84) #18
  br i1 %85, label %93, label %86

86:                                               ; preds = %72
  %87 = icmp slt i64 %84, 0
  %88 = select i1 %87, i32 -2147483648, i32 2147483647
  %89 = add i64 %84, 2147483648
  %90 = icmp ult i64 %89, 4294967296
  %91 = trunc i64 %84 to i32
  %92 = select i1 %90, i32 %91, i32 %88, !prof !71
  br label %99

93:                                               ; preds = %72
  %94 = icmp sgt i64 %84, 2147483647
  br i1 %94, label %99, label %95

95:                                               ; preds = %93
  %96 = icmp sgt i64 %84, -2147483648
  %97 = select i1 %96, i64 %84, i64 -2147483648
  %98 = trunc i64 %97 to i32
  br label %99

99:                                               ; preds = %86, %93, %95
  %100 = phi i32 [ %92, %86 ], [ %98, %95 ], [ 2147483647, %93 ]
  store i32 %100, i32* %6, align 4
  %101 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %76, i64 0, i32 1, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, -64
  br i1 %103, label %104, label %105

104:                                              ; preds = %99
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70)
  br label %112

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %76, i64 0, i32 5
  %107 = load i8, i8* %106, align 8, !range !2
  %108 = icmp eq i8 %107, 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70)
  br i1 %108, label %109, label %112

109:                                              ; preds = %105
  store i32 0, i32* %8, align 4
  %110 = icmp sgt i32 %100, 0
  %111 = select i1 %110, %"class.blink::LayoutUnit"* %71, %"class.blink::LayoutUnit"* %7
  br label %112

112:                                              ; preds = %105, %104, %109
  %113 = phi %"class.blink::LayoutUnit"* [ %111, %109 ], [ %7, %105 ], [ %7, %104 ]
  %114 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %113, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70)
  %116 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %76, i64 0, i32 3, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = icmp slt i32 %115, 0
  %119 = select i1 %118, i32 -2147483648, i32 2147483647
  %120 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %117, i32 %115) #18
  %121 = extractvalue { i32, i1 } %120, 1
  %122 = extractvalue { i32, i1 } %120, 0
  %123 = select i1 %121, i32 %119, i32 %122, !prof !3
  store i32 %123, i32* %116, align 4
  %124 = load i32, i32* %37, align 4
  %125 = icmp sgt i32 %115, -1
  %126 = select i1 %125, i32 -2147483648, i32 2147483647
  %127 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %124, i32 %115) #18
  %128 = extractvalue { i32, i1 } %127, 1
  %129 = extractvalue { i32, i1 } %127, 0
  %130 = select i1 %128, i32 %126, i32 %129, !prof !3
  store i32 %130, i32* %37, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69)
  %131 = add nuw nsw i64 %73, 1
  %132 = icmp eq i64 %131, %64
  br i1 %132, label %133, label %72

133:                                              ; preds = %112, %66
  %134 = phi i32 [ %67, %66 ], [ %130, %112 ]
  %135 = icmp sgt i32 %134, 0
  %136 = icmp ne %"class.WTF::Vector.1349"* %2, null
  %137 = and i1 %136, %135
  br i1 %137, label %138, label %192

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %2, i64 0, i32 0, i32 0, i32 2
  %140 = load i32, i32* %139, align 4
  %141 = zext i32 %140 to i64
  %142 = icmp eq i32 %140, 0
  br i1 %142, label %192, label %143

143:                                              ; preds = %138, %174
  %144 = phi i64 [ %190, %174 ], [ 0, %138 ]
  %145 = trunc i64 %144 to i32
  %146 = call dereferenceable(8) %"class.blink::GridTrack"** @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1349"* nonnull %2, i32 %145)
  %147 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %146, align 8
  %148 = sub nsw i64 %141, %144
  %149 = shl i64 %148, 6
  %150 = icmp ult i64 %149, 2147483647
  %151 = select i1 %150, i64 %149, i64 2147483647
  %152 = load i32, i32* %37, align 4
  %153 = sext i32 %152 to i64
  %154 = shl nsw i64 %153, 6
  %155 = sdiv i64 %154, %151
  %156 = call i1 @llvm.is.constant.i64(i64 %155) #18
  br i1 %156, label %164, label %157

157:                                              ; preds = %143
  %158 = icmp slt i64 %155, 0
  %159 = select i1 %158, i32 -2147483648, i32 2147483647
  %160 = add i64 %155, 2147483648
  %161 = icmp ult i64 %160, 4294967296
  %162 = trunc i64 %155 to i32
  %163 = select i1 %161, i32 %162, i32 %159, !prof !71
  br label %170

164:                                              ; preds = %143
  %165 = icmp sgt i64 %155, 2147483647
  br i1 %165, label %174, label %166

166:                                              ; preds = %164
  %167 = icmp sgt i64 %155, -2147483648
  %168 = select i1 %167, i64 %155, i64 -2147483648
  %169 = trunc i64 %168 to i32
  br label %170

170:                                              ; preds = %157, %166
  %171 = phi i32 [ %163, %157 ], [ %169, %166 ]
  %172 = icmp slt i32 %171, 0
  %173 = select i1 %172, i32 -2147483648, i32 2147483647
  br label %174

174:                                              ; preds = %164, %170
  %175 = phi i32 [ %171, %170 ], [ 2147483647, %164 ]
  %176 = phi i32 [ %173, %170 ], [ 2147483647, %164 ]
  %177 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %147, i64 0, i32 3, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %178, i32 %175) #18
  %180 = extractvalue { i32, i1 } %179, 1
  %181 = extractvalue { i32, i1 } %179, 0
  %182 = select i1 %180, i32 %176, i32 %181, !prof !3
  store i32 %182, i32* %177, align 4
  %183 = load i32, i32* %37, align 4
  %184 = icmp sgt i32 %175, -1
  %185 = select i1 %184, i32 -2147483648, i32 2147483647
  %186 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %183, i32 %175) #18
  %187 = extractvalue { i32, i1 } %186, 1
  %188 = extractvalue { i32, i1 } %186, 0
  %189 = select i1 %187, i32 %185, i32 %188, !prof !3
  store i32 %189, i32* %37, align 4
  %190 = add nuw nsw i64 %144, 1
  %191 = icmp eq i64 %190, %141
  br i1 %191, label %192, label %143

192:                                              ; preds = %174, %36, %138, %133
  %193 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %9, align 8
  %194 = load i32, i32* %11, align 4
  %195 = zext i32 %194 to i64
  %196 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %193, i64 %195
  %197 = icmp eq i32 %194, 0
  br i1 %197, label %217, label %198

198:                                              ; preds = %192
  %199 = shl nuw nsw i64 %195, 3
  %200 = add nsw i64 %199, -8
  %201 = and i64 %200, 8
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %214

203:                                              ; preds = %198
  %204 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %193, align 8
  %205 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %204, i64 0, i32 2, i32 0
  %206 = load i32, i32* %205, align 8
  %207 = icmp eq i32 %206, -64
  %208 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %204, i64 0, i32 3, i32 0
  %209 = load i32, i32* %208, align 4
  %210 = icmp slt i32 %206, %209
  %211 = or i1 %207, %210
  %212 = select i1 %211, i32 %209, i32 %206
  store i32 %212, i32* %205, align 8
  %213 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %193, i64 1
  br label %214

214:                                              ; preds = %203, %198
  %215 = phi %"class.blink::GridTrack"** [ %193, %198 ], [ %213, %203 ]
  %216 = icmp eq i64 %200, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %214, %218, %192
  ret void

218:                                              ; preds = %214, %218
  %219 = phi %"class.blink::GridTrack"** [ %239, %218 ], [ %215, %214 ]
  %220 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %219, align 8
  %221 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %220, i64 0, i32 2, i32 0
  %222 = load i32, i32* %221, align 8
  %223 = icmp eq i32 %222, -64
  %224 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %220, i64 0, i32 3, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = icmp slt i32 %222, %225
  %227 = or i1 %223, %226
  %228 = select i1 %227, i32 %225, i32 %222
  store i32 %228, i32* %221, align 8
  %229 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %219, i64 1
  %230 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %229, align 8
  %231 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %230, i64 0, i32 2, i32 0
  %232 = load i32, i32* %231, align 8
  %233 = icmp eq i32 %232, -64
  %234 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %230, i64 0, i32 3, i32 0
  %235 = load i32, i32* %234, align 4
  %236 = icmp slt i32 %232, %235
  %237 = or i1 %233, %236
  %238 = select i1 %237, i32 %235, i32 %232
  store i32 %238, i32* %231, align 8
  %239 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %219, i64 2
  %240 = icmp eq %"class.blink::GridTrack"** %239, %196
  br i1 %240, label %217, label %218

241:                                              ; preds = %49
  %242 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %53, i64 0, i32 0, i32 0
  %243 = load i32, i32* %242, align 8
  br label %244

244:                                              ; preds = %241, %49
  %245 = phi i32 [ %243, %241 ], [ %55, %49 ]
  %246 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %53, i64 0, i32 3, i32 0
  store i32 %245, i32* %246, align 4
  %247 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %41, i64 2
  %248 = icmp eq %"class.blink::GridTrack"** %247, %14
  br i1 %248, label %36, label %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink24GridTrackSizingAlgorithm23DistributeSpaceToTracksILNS_25TrackSizeComputationPhaseE4EEEvRN3WTF6VectorIPNS_9GridTrackELj0ENS3_18PartitionAllocatorEEEPS8_RNS_10LayoutUnitE(%"class.blink::GridTrackSizingAlgorithm"*, %"class.WTF::Vector.1349"* dereferenceable(16), %"class.WTF::Vector.1349"*, %"class.blink::LayoutUnit"* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, align 8
  %6 = alloca i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)*, align 8
  %7 = alloca i32, align 4
  %8 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %9 = alloca i32, align 4
  %10 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %1, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %37, label %17

17:                                               ; preds = %4
  %18 = shl nuw nsw i64 %14, 3
  %19 = add nsw i64 %18, -8
  %20 = and i64 %19, 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %11, align 8
  %24 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %23, i64 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, -64
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %23, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  br label %30

30:                                               ; preds = %27, %22
  %31 = phi i32 [ %29, %27 ], [ %25, %22 ]
  %32 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %23, i64 0, i32 3, i32 0
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %11, i64 1
  br label %34

34:                                               ; preds = %30, %17
  %35 = phi %"class.blink::GridTrack"** [ %11, %17 ], [ %33, %30 ]
  %36 = icmp eq i64 %19, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %34, %298, %4
  %38 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %58, label %246

41:                                               ; preds = %34, %298
  %42 = phi %"class.blink::GridTrack"** [ %301, %298 ], [ %35, %34 ]
  %43 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %43, i64 0, i32 1, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, -64
  br i1 %46, label %47, label %50

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %43, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 8
  br label %50

50:                                               ; preds = %41, %47
  %51 = phi i32 [ %49, %47 ], [ %45, %41 ]
  %52 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %43, i64 0, i32 3, i32 0
  store i32 %51, i32* %52, align 4
  %53 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %42, i64 1
  %54 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %54, i64 0, i32 1, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, -64
  br i1 %57, label %295, label %298

58:                                               ; preds = %37
  %59 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %10, align 8
  %60 = load i32, i32* %12, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %59, i64 %61
  %63 = bitcast i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63)
  store i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)* @_ZN5blinkL30SortByGridTrackGrowthPotentialEPKNS_9GridTrackES2_, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %5, align 8
  call void @_ZNSt3__16__sortIRPFbPKN5blink9GridTrackES4_EPPS2_EEvT0_SA_T_(%"class.blink::GridTrack"** %59, %"class.blink::GridTrack"** %62, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** nonnull dereferenceable(8) %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63)
  %64 = load i32, i32* %12, align 4
  %65 = zext i32 %64 to i64
  %66 = icmp eq i32 %64, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %58
  %68 = load i32, i32* %38, align 4
  br label %159

69:                                               ; preds = %58
  %70 = bitcast i32* %7 to i8*
  %71 = bitcast i32* %9 to i8*
  %72 = bitcast i32* %9 to %"class.blink::LayoutUnit"*
  br label %73

73:                                               ; preds = %140, %69
  %74 = phi i64 [ 0, %69 ], [ %157, %140 ]
  %75 = trunc i64 %74 to i32
  %76 = call dereferenceable(8) %"class.blink::GridTrack"** @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1349"* %1, i32 %75) #18
  %77 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %76, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70)
  store i32 -1431655766, i32* %7, align 4
  %78 = sub nsw i64 %65, %74
  %79 = shl i64 %78, 6
  %80 = icmp ult i64 %79, 2147483647
  %81 = select i1 %80, i64 %79, i64 2147483647
  %82 = load i32, i32* %38, align 4
  %83 = sext i32 %82 to i64
  %84 = shl nsw i64 %83, 6
  %85 = sdiv i64 %84, %81
  %86 = call i1 @llvm.is.constant.i64(i64 %85) #18
  br i1 %86, label %94, label %87

87:                                               ; preds = %73
  %88 = icmp slt i64 %85, 0
  %89 = select i1 %88, i32 -2147483648, i32 2147483647
  %90 = add i64 %85, 2147483648
  %91 = icmp ult i64 %90, 4294967296
  %92 = trunc i64 %85 to i32
  %93 = select i1 %91, i32 %92, i32 %89, !prof !71
  br label %100

94:                                               ; preds = %73
  %95 = icmp sgt i64 %85, 2147483647
  br i1 %95, label %100, label %96

96:                                               ; preds = %94
  %97 = icmp sgt i64 %85, -2147483648
  %98 = select i1 %97, i64 %85, i64 -2147483648
  %99 = trunc i64 %98 to i32
  br label %100

100:                                              ; preds = %87, %94, %96
  %101 = phi i32 [ %93, %87 ], [ %99, %96 ], [ 2147483647, %94 ]
  store i32 %101, i32* %7, align 4
  %102 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 1, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, -64
  br i1 %104, label %105, label %106

105:                                              ; preds = %100
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71)
  br label %113

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 5
  %108 = load i8, i8* %107, align 8, !range !2
  %109 = icmp eq i8 %108, 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71)
  br i1 %109, label %110, label %113

110:                                              ; preds = %106
  store i32 0, i32* %9, align 4
  %111 = icmp sgt i32 %101, 0
  %112 = select i1 %111, %"class.blink::LayoutUnit"* %72, %"class.blink::LayoutUnit"* %8
  br label %113

113:                                              ; preds = %106, %105, %110
  %114 = phi %"class.blink::LayoutUnit"* [ %112, %110 ], [ %8, %106 ], [ %8, %105 ]
  %115 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %114, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71)
  %117 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 4
  %118 = bitcast %"class.absl::optional"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = trunc i64 %119 to i8
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %113
  %123 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 3, i32 0
  %124 = load i32, i32* %123, align 4
  br label %140

125:                                              ; preds = %113
  %126 = lshr i64 %119, 32
  %127 = trunc i64 %126 to i32
  %128 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 3, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = icmp sgt i32 %129, -1
  %131 = select i1 %130, i32 -2147483648, i32 2147483647
  %132 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %127, i32 %129) #18
  %133 = extractvalue { i32, i1 } %132, 1
  %134 = extractvalue { i32, i1 } %132, 0
  %135 = select i1 %133, i32 %131, i32 %134, !prof !3
  %136 = icmp slt i32 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %125
  %138 = icmp slt i32 %135, %116
  %139 = select i1 %138, i32 %135, i32 %116
  br label %140

140:                                              ; preds = %125, %137, %122
  %141 = phi i32 [ %124, %122 ], [ %129, %137 ], [ %129, %125 ]
  %142 = phi i32 [ %116, %122 ], [ %139, %137 ], [ %116, %125 ]
  %143 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %77, i64 0, i32 3, i32 0
  %144 = icmp slt i32 %142, 0
  %145 = select i1 %144, i32 -2147483648, i32 2147483647
  %146 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %141, i32 %142) #18
  %147 = extractvalue { i32, i1 } %146, 1
  %148 = extractvalue { i32, i1 } %146, 0
  %149 = select i1 %147, i32 %145, i32 %148, !prof !3
  store i32 %149, i32* %143, align 4
  %150 = load i32, i32* %38, align 4
  %151 = icmp sgt i32 %142, -1
  %152 = select i1 %151, i32 -2147483648, i32 2147483647
  %153 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %150, i32 %142) #18
  %154 = extractvalue { i32, i1 } %153, 1
  %155 = extractvalue { i32, i1 } %153, 0
  %156 = select i1 %154, i32 %152, i32 %155, !prof !3
  store i32 %156, i32* %38, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70)
  %157 = add nuw nsw i64 %74, 1
  %158 = icmp eq i64 %157, %65
  br i1 %158, label %159, label %73

159:                                              ; preds = %140, %67
  %160 = phi i32 [ %68, %67 ], [ %156, %140 ]
  %161 = icmp sgt i32 %160, 0
  %162 = icmp ne %"class.WTF::Vector.1349"* %2, null
  %163 = and i1 %162, %161
  br i1 %163, label %164, label %246

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %2, i64 0, i32 0, i32 0, i32 0
  %166 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %165, align 8
  %167 = getelementptr inbounds %"class.WTF::Vector.1349", %"class.WTF::Vector.1349"* %2, i64 0, i32 0, i32 0, i32 2
  %168 = load i32, i32* %167, align 4
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %166, i64 %169
  %171 = bitcast i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171)
  store i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)* @_ZN5blinkL30SortByGridTrackGrowthPotentialEPKNS_9GridTrackES2_, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** %6, align 8
  call void @_ZNSt3__16__sortIRPFbPKN5blink9GridTrackES4_EPPS2_EEvT0_SA_T_(%"class.blink::GridTrack"** %166, %"class.blink::GridTrack"** %170, i1 (%"class.blink::GridTrack"*, %"class.blink::GridTrack"*)** nonnull dereferenceable(8) %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171)
  %172 = load i32, i32* %167, align 4
  %173 = zext i32 %172 to i64
  %174 = icmp eq i32 %172, 0
  br i1 %174, label %246, label %175

175:                                              ; preds = %164, %227
  %176 = phi i64 [ %244, %227 ], [ 0, %164 ]
  %177 = trunc i64 %176 to i32
  %178 = call dereferenceable(8) %"class.blink::GridTrack"** @_ZN3WTF6VectorIPN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1349"* nonnull %2, i32 %177)
  %179 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %178, align 8
  %180 = sub nsw i64 %173, %176
  %181 = shl i64 %180, 6
  %182 = icmp ult i64 %181, 2147483647
  %183 = select i1 %182, i64 %181, i64 2147483647
  %184 = load i32, i32* %38, align 4
  %185 = sext i32 %184 to i64
  %186 = shl nsw i64 %185, 6
  %187 = sdiv i64 %186, %183
  %188 = call i1 @llvm.is.constant.i64(i64 %187) #18
  br i1 %188, label %196, label %189

189:                                              ; preds = %175
  %190 = icmp slt i64 %187, 0
  %191 = select i1 %190, i32 -2147483648, i32 2147483647
  %192 = add i64 %187, 2147483648
  %193 = icmp ult i64 %192, 4294967296
  %194 = trunc i64 %187 to i32
  %195 = select i1 %193, i32 %194, i32 %191, !prof !71
  br label %202

196:                                              ; preds = %175
  %197 = icmp sgt i64 %187, 2147483647
  br i1 %197, label %202, label %198

198:                                              ; preds = %196
  %199 = icmp sgt i64 %187, -2147483648
  %200 = select i1 %199, i64 %187, i64 -2147483648
  %201 = trunc i64 %200 to i32
  br label %202

202:                                              ; preds = %189, %196, %198
  %203 = phi i32 [ %195, %189 ], [ %201, %198 ], [ 2147483647, %196 ]
  %204 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %179, i64 0, i32 4
  %205 = bitcast %"class.absl::optional"* %204 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = trunc i64 %206 to i8
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %209, label %212

209:                                              ; preds = %202
  %210 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %179, i64 0, i32 3, i32 0
  %211 = load i32, i32* %210, align 4
  br label %227

212:                                              ; preds = %202
  %213 = lshr i64 %206, 32
  %214 = trunc i64 %213 to i32
  %215 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %179, i64 0, i32 3, i32 0
  %216 = load i32, i32* %215, align 4
  %217 = icmp sgt i32 %216, -1
  %218 = select i1 %217, i32 -2147483648, i32 2147483647
  %219 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %214, i32 %216) #18
  %220 = extractvalue { i32, i1 } %219, 1
  %221 = extractvalue { i32, i1 } %219, 0
  %222 = select i1 %220, i32 %218, i32 %221, !prof !3
  %223 = icmp slt i32 %222, 1
  br i1 %223, label %227, label %224

224:                                              ; preds = %212
  %225 = icmp slt i32 %222, %203
  %226 = select i1 %225, i32 %222, i32 %203
  br label %227

227:                                              ; preds = %212, %224, %209
  %228 = phi i32 [ %211, %209 ], [ %216, %224 ], [ %216, %212 ]
  %229 = phi i32 [ %203, %209 ], [ %226, %224 ], [ %203, %212 ]
  %230 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %179, i64 0, i32 3, i32 0
  %231 = icmp slt i32 %229, 0
  %232 = select i1 %231, i32 -2147483648, i32 2147483647
  %233 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %228, i32 %229) #18
  %234 = extractvalue { i32, i1 } %233, 1
  %235 = extractvalue { i32, i1 } %233, 0
  %236 = select i1 %234, i32 %232, i32 %235, !prof !3
  store i32 %236, i32* %230, align 4
  %237 = load i32, i32* %38, align 4
  %238 = icmp sgt i32 %229, -1
  %239 = select i1 %238, i32 -2147483648, i32 2147483647
  %240 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %237, i32 %229) #18
  %241 = extractvalue { i32, i1 } %240, 1
  %242 = extractvalue { i32, i1 } %240, 0
  %243 = select i1 %241, i32 %239, i32 %242, !prof !3
  store i32 %243, i32* %38, align 4
  %244 = add nuw nsw i64 %176, 1
  %245 = icmp eq i64 %244, %173
  br i1 %245, label %246, label %175

246:                                              ; preds = %227, %37, %164, %159
  %247 = load %"class.blink::GridTrack"**, %"class.blink::GridTrack"*** %10, align 8
  %248 = load i32, i32* %12, align 4
  %249 = zext i32 %248 to i64
  %250 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %247, i64 %249
  %251 = icmp eq i32 %248, 0
  br i1 %251, label %271, label %252

252:                                              ; preds = %246
  %253 = shl nuw nsw i64 %249, 3
  %254 = add nsw i64 %253, -8
  %255 = and i64 %254, 8
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %257, label %268

257:                                              ; preds = %252
  %258 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %247, align 8
  %259 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %258, i64 0, i32 2, i32 0
  %260 = load i32, i32* %259, align 8
  %261 = icmp eq i32 %260, -64
  %262 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %258, i64 0, i32 3, i32 0
  %263 = load i32, i32* %262, align 4
  %264 = icmp slt i32 %260, %263
  %265 = or i1 %261, %264
  %266 = select i1 %265, i32 %263, i32 %260
  store i32 %266, i32* %259, align 8
  %267 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %247, i64 1
  br label %268

268:                                              ; preds = %257, %252
  %269 = phi %"class.blink::GridTrack"** [ %247, %252 ], [ %267, %257 ]
  %270 = icmp eq i64 %254, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %268, %272, %246
  ret void

272:                                              ; preds = %268, %272
  %273 = phi %"class.blink::GridTrack"** [ %293, %272 ], [ %269, %268 ]
  %274 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %273, align 8
  %275 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %274, i64 0, i32 2, i32 0
  %276 = load i32, i32* %275, align 8
  %277 = icmp eq i32 %276, -64
  %278 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %274, i64 0, i32 3, i32 0
  %279 = load i32, i32* %278, align 4
  %280 = icmp slt i32 %276, %279
  %281 = or i1 %277, %280
  %282 = select i1 %281, i32 %279, i32 %276
  store i32 %282, i32* %275, align 8
  %283 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %273, i64 1
  %284 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %283, align 8
  %285 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %284, i64 0, i32 2, i32 0
  %286 = load i32, i32* %285, align 8
  %287 = icmp eq i32 %286, -64
  %288 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %284, i64 0, i32 3, i32 0
  %289 = load i32, i32* %288, align 4
  %290 = icmp slt i32 %286, %289
  %291 = or i1 %287, %290
  %292 = select i1 %291, i32 %289, i32 %286
  store i32 %292, i32* %285, align 8
  %293 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %273, i64 2
  %294 = icmp eq %"class.blink::GridTrack"** %293, %250
  br i1 %294, label %271, label %272

295:                                              ; preds = %50
  %296 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %54, i64 0, i32 0, i32 0
  %297 = load i32, i32* %296, align 8
  br label %298

298:                                              ; preds = %295, %50
  %299 = phi i32 [ %297, %295 ], [ %56, %50 ]
  %300 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %54, i64 0, i32 3, i32 0
  store i32 %299, i32* %300, align 4
  %301 = getelementptr inbounds %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %42, i64 2
  %302 = icmp eq %"class.blink::GridTrack"** %301, %15
  br i1 %302, label %37, label %41
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorImLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRKmEEvOT_(%"class.WTF::Vector.1360"*, i64* dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp ugt i64* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i64, i64* %7, i64 %10
  %12 = icmp ugt i64* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorImLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1360"* %0, i32 %5) #18
  %14 = load i64*, i64** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i64* %1 to i64
  %17 = ptrtoint i64* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorImLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1360"* %0, i32 %5) #18
  %20 = load i64*, i64** %6, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i64* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i64* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i64, i64* %23, i64 %26
  %28 = load i64, i64* %24, align 8
  store i64 %28, i64* %27, align 8
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorImLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1360"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #18
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #18
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0), i8* %15, i8* %16) #18
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #18
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #18
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #18
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !71

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = icmp eq i64* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64 %37) #18
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv, i64 0, i64 0)) #18
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1360"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1360"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorImLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1360"* %0, i32 %27) #18
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorImLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1360"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i64*
  %10 = icmp eq i64* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1360"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1360"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i64* %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #18
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferImLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPm(%"class.WTF::VectorBuffer.1361"* %19, i64* nonnull %6) #18
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64 %30) #18
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv, i64 0, i64 0)) #18
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i64* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !71

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i64* %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #18
  %46 = load i64*, i64** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i64* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i64*
  %51 = icmp eq i64* %48, %50
  br i1 %51, label %54, label %52, !prof !71

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferImLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPm(%"class.WTF::VectorBuffer.1361"* %53, i64* %48) #18
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1360"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1360", %"class.WTF::Vector.1360"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #8

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64*, i8 } @_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_29UnsignedWithZeroKeyHashTraitsImEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKmRmEENS_18HashTableAddResultIS7_mEEOT0_OT1_(%"class.WTF::HashTable.1368"*, i64* dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1368", %"class.WTF::HashTable.1368"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = icmp eq i64* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i64* @_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_29UnsignedWithZeroKeyHashTraitsImEES5_NS_18PartitionAllocatorEE6ExpandEPm(%"class.WTF::HashTable.1368"* %0, i64* null)
  %9 = load i64*, i64** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i64* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1368", %"class.WTF::HashTable.1368"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %1, align 8
  %17 = shl i64 %16, 32
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 22
  %21 = xor i64 %20, %19
  %22 = shl i64 %21, 13
  %23 = xor i64 %22, -1
  %24 = add i64 %21, %23
  %25 = lshr i64 %24, 8
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, 9
  %28 = lshr i64 %27, 15
  %29 = xor i64 %28, %27
  %30 = shl i64 %29, 27
  %31 = xor i64 %30, -1
  %32 = add i64 %29, %31
  %33 = lshr i64 %32, 31
  %34 = xor i64 %33, %32
  %35 = trunc i64 %34 to i32
  %36 = and i32 %14, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i64, i64* %11, i64 %37
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, -1
  br i1 %40, label %81, label %41

41:                                               ; preds = %10
  %42 = xor i32 %35, -1
  %43 = lshr i32 %35, 23
  %44 = add i32 %43, %42
  %45 = shl i32 %44, 12
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 7
  %48 = xor i32 %47, %46
  %49 = shl i32 %48, 2
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 20
  %52 = xor i32 %51, %50
  %53 = or i32 %52, 1
  %54 = zext i32 %53 to i64
  br label %55

55:                                               ; preds = %41, %62
  %56 = phi i64 [ %39, %41 ], [ %70, %62 ]
  %57 = phi i64* [ %38, %41 ], [ %69, %62 ]
  %58 = phi i64* [ null, %41 ], [ %64, %62 ]
  %59 = phi i64 [ %37, %41 ], [ %68, %62 ]
  %60 = phi i64 [ 0, %41 ], [ %66, %62 ]
  %61 = icmp eq i64 %56, %16
  br i1 %61, label %95, label %62

62:                                               ; preds = %55
  %63 = icmp eq i64 %56, -2
  %64 = select i1 %63, i64* %57, i64* %58
  %65 = icmp eq i64 %60, 0
  %66 = select i1 %65, i64 %54, i64 %60
  %67 = add i64 %66, %59
  %68 = and i64 %67, %15
  %69 = getelementptr inbounds i64, i64* %11, i64 %68
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, -1
  br i1 %71, label %72, label %55

72:                                               ; preds = %62
  %73 = icmp eq i64* %64, null
  br i1 %73, label %81, label %74

74:                                               ; preds = %72
  store i64 -1, i64* %64, align 8
  %75 = getelementptr inbounds %"class.WTF::HashTable.1368", %"class.WTF::HashTable.1368"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 2147483647
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  br label %81

81:                                               ; preds = %10, %72, %74
  %82 = phi i64* [ %64, %74 ], [ %69, %72 ], [ %38, %10 ]
  %83 = load i64, i64* %2, align 8
  store i64 %83, i64* %82, align 8
  %84 = getelementptr inbounds %"class.WTF::HashTable.1368", %"class.WTF::HashTable.1368"* %0, i64 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %84, align 4
  %87 = getelementptr inbounds %"class.WTF::HashTable.1368", %"class.WTF::HashTable.1368"* %0, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = add i32 %88, %86
  %90 = shl i32 %89, 1
  %91 = load i32, i32* %12, align 8
  %92 = icmp ult i32 %90, %91
  br i1 %92, label %95, label %93

93:                                               ; preds = %81
  %94 = tail call i64* @_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_29UnsignedWithZeroKeyHashTraitsImEES5_NS_18PartitionAllocatorEE6ExpandEPm(%"class.WTF::HashTable.1368"* %0, i64* %82)
  br label %95

95:                                               ; preds = %55, %81, %93
  %96 = phi i8 [ 1, %81 ], [ 1, %93 ], [ 0, %55 ]
  %97 = phi i64* [ %82, %81 ], [ %94, %93 ], [ %57, %55 ]
  %98 = insertvalue { i64*, i8 } undef, i64* %97, 0
  %99 = insertvalue { i64*, i8 } %98, i8 %96, 1
  ret { i64*, i8 } %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_29UnsignedWithZeroKeyHashTraitsImEES5_NS_18PartitionAllocatorEE6ExpandEPm(%"class.WTF::HashTable.1368"*, i64*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1368", %"class.WTF::HashTable.1368"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1368", %"class.WTF::HashTable.1368"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #18
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #18
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #18
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #18
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #18
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #18
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv, i64 0, i64 0)) #18
  %36 = bitcast i8* %35 to i64*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %31
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 -1, i64 %34, i1 false) #18
  br label %39

39:                                               ; preds = %31, %38
  %40 = call i64* @_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_29UnsignedWithZeroKeyHashTraitsImEES5_NS_18PartitionAllocatorEE8RehashToEPmjS8_(%"class.WTF::HashTable.1368"* %0, i64* %36, i32 %32, i64* %1) #18
  ret i64* %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_29UnsignedWithZeroKeyHashTraitsImEES5_NS_18PartitionAllocatorEE8RehashToEPmjS8_(%"class.WTF::HashTable.1368"*, i64*, i32, i64*) local_unnamed_addr #3 comdat align 2 {
  %5 = ptrtoint i64* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.1368", %"class.WTF::HashTable.1368"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.1368", %"class.WTF::HashTable.1368"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.1368"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load i64*, i64** %9, align 8
  %17 = ptrtoint i64* %16 to i64
  br label %31

18:                                               ; preds = %117
  %19 = bitcast %"class.WTF::HashTable.1368"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %118, %18 ]
  %23 = phi i64* [ null, %10 ], [ %121, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #18
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.1368", %"class.WTF::HashTable.1368"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret i64* %23

31:                                               ; preds = %13, %117
  %32 = phi i64 [ %17, %13 ], [ %118, %117 ]
  %33 = phi i32 [ %7, %13 ], [ %119, %117 ]
  %34 = phi i64* [ %16, %13 ], [ %120, %117 ]
  %35 = phi i64* [ null, %13 ], [ %121, %117 ]
  %36 = phi i32 [ 0, %13 ], [ %122, %117 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i64, i64* %34, i64 %37
  %39 = load i64, i64* %38, align 8
  %40 = icmp ugt i64 %39, -3
  br i1 %40, label %117, label %41

41:                                               ; preds = %31
  %42 = shl i64 %39, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %39, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i64, i64* %1, i64 %62
  %64 = ptrtoint i64* %63 to i64
  %65 = load i64, i64* %63, align 8
  %66 = icmp eq i64 %65, -1
  br i1 %66, label %84, label %67

67:                                               ; preds = %41
  %68 = xor i32 %60, -1
  %69 = lshr i32 %60, 23
  %70 = add i32 %69, %68
  %71 = shl i32 %70, 12
  %72 = xor i32 %71, %70
  %73 = lshr i32 %72, 7
  %74 = xor i32 %73, %72
  %75 = shl i32 %74, 2
  %76 = xor i32 %75, %74
  %77 = lshr i32 %76, 20
  %78 = xor i32 %77, %76
  %79 = or i32 %78, 1
  %80 = zext i32 %79 to i64
  br label %90

81:                                               ; preds = %97
  %82 = ptrtoint i64* %104 to i64
  %83 = inttoptr i64 %99 to i64*
  br label %84

84:                                               ; preds = %81, %41
  %85 = phi i64 [ %82, %81 ], [ %64, %41 ]
  %86 = phi i64* [ %83, %81 ], [ null, %41 ]
  %87 = icmp eq i64* %86, null
  %88 = ptrtoint i64* %86 to i64
  %89 = select i1 %87, i64 %85, i64 %88
  br label %108

90:                                               ; preds = %97, %67
  %91 = phi i64 [ 0, %67 ], [ %99, %97 ]
  %92 = phi i64 [ %65, %67 ], [ %106, %97 ]
  %93 = phi i64 [ %64, %67 ], [ %105, %97 ]
  %94 = phi i64 [ %62, %67 ], [ %103, %97 ]
  %95 = phi i64 [ 0, %67 ], [ %101, %97 ]
  %96 = icmp eq i64 %92, %39
  br i1 %96, label %108, label %97

97:                                               ; preds = %90
  %98 = icmp eq i64 %92, -2
  %99 = select i1 %98, i64 %93, i64 %91
  %100 = icmp eq i64 %95, 0
  %101 = select i1 %100, i64 %80, i64 %95
  %102 = add i64 %101, %94
  %103 = and i64 %102, %15
  %104 = getelementptr inbounds i64, i64* %1, i64 %103
  %105 = ptrtoint i64* %104 to i64
  %106 = load i64, i64* %104, align 8
  %107 = icmp eq i64 %106, -1
  br i1 %107, label %81, label %90

108:                                              ; preds = %90, %84
  %109 = phi i64 [ %89, %84 ], [ %93, %90 ]
  %110 = inttoptr i64 %109 to i64*
  store i64 %39, i64* %110, align 8
  %111 = load i64*, i64** %9, align 8
  %112 = getelementptr inbounds i64, i64* %111, i64 %37
  %113 = icmp eq i64* %112, %3
  %114 = select i1 %113, i64* %110, i64* %35
  %115 = load i32, i32* %6, align 8
  %116 = ptrtoint i64* %111 to i64
  br label %117

117:                                              ; preds = %31, %108
  %118 = phi i64 [ %32, %31 ], [ %116, %108 ]
  %119 = phi i32 [ %33, %31 ], [ %115, %108 ]
  %120 = phi i64* [ %34, %31 ], [ %111, %108 ]
  %121 = phi i64* [ %35, %31 ], [ %114, %108 ]
  %122 = add i32 %36, 1
  %123 = icmp eq i32 %122, %119
  br i1 %123, label %18, label %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) i64* @_ZNK3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i64, i64* %24, i64 %25
  ret i64* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.959"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.959", %"class.WTF::Vector.959"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.WTF::Vector.959", %"class.WTF::Vector.959"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %24, i64 %25
  ret %"class.blink::LayoutUnit"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #18
  ret i64 %21
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #17

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %14

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink9GridTrackENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::GridTrack"* %6, %"class.blink::GridTrack"* %10, %"class.blink::GridTrack"* null, i1 zeroext true) #18
  %13 = bitcast %"class.blink::GridTrack"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %13) #18
  br label %32

14:                                               ; preds = %2
  %15 = zext i32 %1 to i64
  %16 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9GridTrackEEEmm(i64 %15) #18
  %17 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9GridTrackEEEPKcv, i64 0, i64 0)) #18
  %18 = lshr i64 %16, 7
  %19 = bitcast i8* %17 to %"class.blink::GridTrack"*
  %20 = ptrtoint i8* %17 to i64
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %22, i64 %25
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink9GridTrackENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::GridTrack"* %22, %"class.blink::GridTrack"* %26, %"class.blink::GridTrack"* %19, i1 zeroext false) #18
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %28) #18
  %29 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %20, i64* %29 monotonic, align 8
  %30 = trunc i64 %18 to i32
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %30, i32* %31, align 8
  br label %32

32:                                               ; preds = %14, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink9GridTrackENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::GridTrack"*, %"class.blink::GridTrack"*, %"class.blink::GridTrack"*, i1 zeroext) local_unnamed_addr #3 comdat align 2 {
  %5 = icmp eq %"class.blink::GridTrack"* %0, %1
  br i1 %5, label %89, label %6

6:                                                ; preds = %4, %85
  %7 = phi %"class.blink::GridTrack"* [ %87, %85 ], [ %0, %4 ]
  %8 = phi %"class.blink::GridTrack"* [ %86, %85 ], [ %2, %4 ]
  %9 = bitcast %"class.blink::GridTrack"* %8 to i8*
  %10 = bitcast %"class.blink::GridTrack"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 25, i1 false) #18
  %11 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 96, i1 false) #18
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %85, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  store i32 %18, i32* %16, align 8
  %19 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %20 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %21 = bitcast %"class.blink::GridLength"* %20 to i64*
  %22 = bitcast %"class.blink::GridLength"* %19 to i64*
  %23 = load i64, i64* %21, align 4
  store i64 %23, i64* %22, align 4
  %24 = and i64 %23, 280375465082880
  %25 = icmp eq i64 %24, 8796093022208
  br i1 %25, label %26, label %28

26:                                               ; preds = %15
  %27 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %19, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %27) #18
  br label %28

28:                                               ; preds = %26, %15
  %29 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 1
  %30 = bitcast double* %29 to i8*
  %31 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 1
  %32 = bitcast double* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %32, i64 12, i1 false) #18
  %33 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %34 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %35 = bitcast %"class.blink::GridLength"* %34 to i64*
  %36 = bitcast %"class.blink::GridLength"* %33 to i64*
  %37 = load i64, i64* %35, align 4
  store i64 %37, i64* %36, align 4
  %38 = and i64 %37, 280375465082880
  %39 = icmp eq i64 %38, 8796093022208
  br i1 %39, label %40, label %42

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %33, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %41) #18
  br label %42

42:                                               ; preds = %40, %28
  %43 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 1
  %44 = bitcast double* %43 to i8*
  %45 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 1
  %46 = bitcast double* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %46, i64 12, i1 false) #18
  %47 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4
  %48 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4
  %49 = bitcast %"class.blink::GridLength"* %48 to i64*
  %50 = bitcast %"class.blink::GridLength"* %47 to i64*
  %51 = load i64, i64* %49, align 4
  store i64 %51, i64* %50, align 4
  %52 = and i64 %51, 280375465082880
  %53 = icmp eq i64 %52, 8796093022208
  br i1 %53, label %54, label %56

54:                                               ; preds = %42
  %55 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %47, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %55) #18
  br label %56

56:                                               ; preds = %42, %54
  %57 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 1
  %58 = bitcast double* %57 to i8*
  %59 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 1
  %60 = bitcast double* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %60, i64 12, i1 false) #18
  %61 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  %62 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  %63 = load i16, i16* %62, align 8
  store i16 %63, i16* %61, align 8
  store i8 1, i8* %11, align 8
  %64 = load i8, i8* %12, align 8, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %85, label %66

66:                                               ; preds = %56
  %67 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 8
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %71) #18
  br label %72

72:                                               ; preds = %70, %66
  %73 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 0, i32 2
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %74, 8
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %77) #18
  br label %78

78:                                               ; preds = %76, %72
  %79 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 2
  %80 = load i8, i8* %79, align 1
  %81 = icmp eq i8 %80, 8
  br i1 %81, label %82, label %84

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %83) #18
  br label %84

84:                                               ; preds = %82, %78
  store i8 0, i8* %12, align 8
  br label %85

85:                                               ; preds = %6, %56, %84
  %86 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %8, i64 1
  %87 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %7, i64 1
  %88 = icmp eq %"class.blink::GridTrack"* %87, %1
  br i1 %88, label %89, label %6

89:                                               ; preds = %85, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.952"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS4_bEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.949"*, %"class.blink::LayoutBox"** dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.952"*, %"struct.WTF::KeyValuePair.952"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.952"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.952"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.949"* %0, %"struct.WTF::KeyValuePair.952"* null)
  %9 = load %"struct.WTF::KeyValuePair.952"*, %"struct.WTF::KeyValuePair.952"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.952"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %39, i64 0, i32 0
  %41 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutBox"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::LayoutBox"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::LayoutBox"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.952"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.952"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::LayoutBox"* %59, %43
  br i1 %64, label %104, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::LayoutBox"* %59, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.952"* %60, %"struct.WTF::KeyValuePair.952"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %72, i64 0, i32 0
  %74 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutBox"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.952"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.952"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #18
  %80 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.952"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.952"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.952", %"struct.WTF::KeyValuePair.952"* %89, i64 0, i32 1
  %92 = load i8, i8* %2, align 1, !range !2
  store i8 %92, i8* %91, align 1
  %93 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.WTF::HashTable.949", %"class.WTF::HashTable.949"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %95
  %99 = shl i32 %98, 1
  %100 = load i32, i32* %12, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %87
  %103 = tail call %"struct.WTF::KeyValuePair.952"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_bEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IbEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.949"* %0, %"struct.WTF::KeyValuePair.952"* %89)
  br label %104

104:                                              ; preds = %58, %87, %102
  %105 = phi i8 [ 1, %87 ], [ 1, %102 ], [ 0, %58 ]
  %106 = phi %"struct.WTF::KeyValuePair.952"* [ %89, %87 ], [ %103, %102 ], [ %60, %58 ]
  %107 = insertvalue { %"struct.WTF::KeyValuePair.952"*, i8 } undef, %"struct.WTF::KeyValuePair.952"* %106, 0
  %108 = insertvalue { %"struct.WTF::KeyValuePair.952"*, i8 } %107, i8 %105, 1
  ret { %"struct.WTF::KeyValuePair.952"*, i8 } %108
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone }
attributes #17 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nounwind }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!6 = distinct !{!6, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!9 = distinct !{!9, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!12 = distinct !{!12, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!15 = distinct !{!15, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!18 = distinct !{!18, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!21 = distinct !{!21, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!24 = distinct !{!24, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!27 = distinct !{!27, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN5blink6Length5FixedEv: argument 0"}
!30 = distinct !{!30, !"_ZN5blink6Length5FixedEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN5blink6Length4AutoEv: argument 0"}
!33 = distinct !{!33, !"_ZN5blink6Length4AutoEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN5blink6Length10MaxContentEv: argument 0"}
!36 = distinct !{!36, !"_ZN5blink6Length10MaxContentEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN5blink6Length4AutoEv: argument 0"}
!39 = distinct !{!39, !"_ZN5blink6Length4AutoEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN5blink6Length4AutoEv: argument 0"}
!42 = distinct !{!42, !"_ZN5blink6Length4AutoEv"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN5blink6Length4AutoEv: argument 0"}
!45 = distinct !{!45, !"_ZN5blink6Length4AutoEv"}
!46 = !{!"branch_weights", i32 4001, i32 1}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!49 = distinct !{!49, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!52 = distinct !{!52, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!55 = distinct !{!55, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!58 = distinct !{!58, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!61 = distinct !{!61, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!64 = distinct !{!64, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!67 = distinct !{!67, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!70 = distinct !{!70, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!71 = !{!"branch_weights", i32 2000, i32 1}
!72 = distinct !{!72, !73}
!73 = !{!"llvm.loop.unroll.disable"}
!74 = distinct !{!74, !73}
!75 = distinct !{!75, !73}
!76 = distinct !{!76, !73}
!77 = distinct !{!77, !73}
!78 = distinct !{!78, !73}
